Binary files ../linux-3.4.104-vanilla/.DS_Store and linux-3.4.104-syssec_hw2_app2/.DS_Store differ
diff -uprN ../linux-3.4.104-vanilla/.config linux-3.4.104-syssec_hw2_app2/.config
--- ../linux-3.4.104-vanilla/.config	1969-12-31 19:00:00.000000000 -0500
+++ linux-3.4.104-syssec_hw2_app2/.config	2014-11-05 22:14:03.000000000 -0500
@@ -0,0 +1,5901 @@
+#
+# Automatically generated file; DO NOT EDIT.
+# Linux/i386 3.4.104 Kernel Configuration
+#
+# CONFIG_64BIT is not set
+CONFIG_X86_32=y
+# CONFIG_X86_64 is not set
+CONFIG_X86=y
+CONFIG_INSTRUCTION_DECODER=y
+CONFIG_OUTPUT_FORMAT="elf32-i386"
+CONFIG_ARCH_DEFCONFIG="arch/x86/configs/i386_defconfig"
+CONFIG_GENERIC_CMOS_UPDATE=y
+CONFIG_CLOCKSOURCE_WATCHDOG=y
+CONFIG_GENERIC_CLOCKEVENTS=y
+CONFIG_GENERIC_CLOCKEVENTS_BROADCAST=y
+CONFIG_LOCKDEP_SUPPORT=y
+CONFIG_STACKTRACE_SUPPORT=y
+CONFIG_HAVE_LATENCYTOP_SUPPORT=y
+CONFIG_MMU=y
+# CONFIG_NEED_DMA_MAP_STATE is not set
+CONFIG_NEED_SG_DMA_LENGTH=y
+CONFIG_GENERIC_ISA_DMA=y
+CONFIG_GENERIC_BUG=y
+CONFIG_GENERIC_HWEIGHT=y
+CONFIG_GENERIC_GPIO=y
+CONFIG_ARCH_MAY_HAVE_PC_FDC=y
+# CONFIG_RWSEM_GENERIC_SPINLOCK is not set
+CONFIG_RWSEM_XCHGADD_ALGORITHM=y
+CONFIG_ARCH_HAS_CPU_IDLE_WAIT=y
+CONFIG_GENERIC_CALIBRATE_DELAY=y
+# CONFIG_GENERIC_TIME_VSYSCALL is not set
+CONFIG_ARCH_HAS_CPU_RELAX=y
+CONFIG_ARCH_HAS_DEFAULT_IDLE=y
+CONFIG_ARCH_HAS_CACHE_LINE_SIZE=y
+CONFIG_ARCH_HAS_CPU_AUTOPROBE=y
+CONFIG_HAVE_SETUP_PER_CPU_AREA=y
+CONFIG_NEED_PER_CPU_EMBED_FIRST_CHUNK=y
+CONFIG_NEED_PER_CPU_PAGE_FIRST_CHUNK=y
+CONFIG_ARCH_HIBERNATION_POSSIBLE=y
+CONFIG_ARCH_SUSPEND_POSSIBLE=y
+# CONFIG_ZONE_DMA32 is not set
+# CONFIG_AUDIT_ARCH is not set
+CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING=y
+CONFIG_ARCH_SUPPORTS_DEBUG_PAGEALLOC=y
+CONFIG_X86_32_SMP=y
+CONFIG_X86_HT=y
+CONFIG_ARCH_HWEIGHT_CFLAGS="-fcall-saved-ecx -fcall-saved-edx"
+CONFIG_KTIME_SCALAR=y
+CONFIG_ARCH_CPU_PROBE_RELEASE=y
+CONFIG_DEFCONFIG_LIST="/lib/modules/$UNAME_RELEASE/.config"
+CONFIG_HAVE_IRQ_WORK=y
+CONFIG_IRQ_WORK=y
+
+#
+# General setup
+#
+CONFIG_EXPERIMENTAL=y
+CONFIG_INIT_ENV_ARG_LIMIT=32
+CONFIG_CROSS_COMPILE=""
+CONFIG_LOCALVERSION=""
+# CONFIG_LOCALVERSION_AUTO is not set
+CONFIG_HAVE_KERNEL_GZIP=y
+CONFIG_HAVE_KERNEL_BZIP2=y
+CONFIG_HAVE_KERNEL_LZMA=y
+CONFIG_HAVE_KERNEL_XZ=y
+CONFIG_HAVE_KERNEL_LZO=y
+CONFIG_KERNEL_GZIP=y
+# CONFIG_KERNEL_BZIP2 is not set
+# CONFIG_KERNEL_LZMA is not set
+# CONFIG_KERNEL_XZ is not set
+# CONFIG_KERNEL_LZO is not set
+CONFIG_DEFAULT_HOSTNAME="(none)"
+CONFIG_SWAP=y
+CONFIG_SYSVIPC=y
+CONFIG_SYSVIPC_SYSCTL=y
+CONFIG_POSIX_MQUEUE=y
+CONFIG_POSIX_MQUEUE_SYSCTL=y
+CONFIG_BSD_PROCESS_ACCT=y
+CONFIG_BSD_PROCESS_ACCT_V3=y
+CONFIG_FHANDLE=y
+CONFIG_TASKSTATS=y
+CONFIG_TASK_DELAY_ACCT=y
+CONFIG_TASK_XACCT=y
+CONFIG_TASK_IO_ACCOUNTING=y
+CONFIG_AUDIT=y
+CONFIG_AUDITSYSCALL=y
+CONFIG_AUDIT_WATCH=y
+CONFIG_AUDIT_TREE=y
+# CONFIG_AUDIT_LOGINUID_IMMUTABLE is not set
+CONFIG_HAVE_GENERIC_HARDIRQS=y
+
+#
+# IRQ subsystem
+#
+CONFIG_GENERIC_HARDIRQS=y
+CONFIG_GENERIC_IRQ_PROBE=y
+CONFIG_GENERIC_IRQ_SHOW=y
+CONFIG_GENERIC_PENDING_IRQ=y
+CONFIG_GENERIC_IRQ_CHIP=y
+CONFIG_IRQ_FORCED_THREADING=y
+CONFIG_SPARSE_IRQ=y
+
+#
+# RCU Subsystem
+#
+CONFIG_TREE_RCU=y
+# CONFIG_PREEMPT_RCU is not set
+CONFIG_RCU_FANOUT=32
+# CONFIG_RCU_FANOUT_EXACT is not set
+CONFIG_RCU_FAST_NO_HZ=y
+# CONFIG_TREE_RCU_TRACE is not set
+# CONFIG_IKCONFIG is not set
+CONFIG_LOG_BUF_SHIFT=17
+CONFIG_HAVE_UNSTABLE_SCHED_CLOCK=y
+CONFIG_CGROUPS=y
+# CONFIG_CGROUP_DEBUG is not set
+CONFIG_CGROUP_FREEZER=y
+CONFIG_CGROUP_DEVICE=y
+CONFIG_CPUSETS=y
+CONFIG_PROC_PID_CPUSET=y
+CONFIG_CGROUP_CPUACCT=y
+CONFIG_RESOURCE_COUNTERS=y
+CONFIG_CGROUP_MEM_RES_CTLR=y
+CONFIG_CGROUP_MEM_RES_CTLR_SWAP=y
+# CONFIG_CGROUP_MEM_RES_CTLR_SWAP_ENABLED is not set
+# CONFIG_CGROUP_MEM_RES_CTLR_KMEM is not set
+CONFIG_CGROUP_PERF=y
+CONFIG_CGROUP_SCHED=y
+CONFIG_FAIR_GROUP_SCHED=y
+# CONFIG_CFS_BANDWIDTH is not set
+# CONFIG_RT_GROUP_SCHED is not set
+CONFIG_BLK_CGROUP=y
+# CONFIG_DEBUG_BLK_CGROUP is not set
+# CONFIG_CHECKPOINT_RESTORE is not set
+CONFIG_NAMESPACES=y
+CONFIG_UTS_NS=y
+CONFIG_IPC_NS=y
+CONFIG_USER_NS=y
+CONFIG_PID_NS=y
+CONFIG_NET_NS=y
+CONFIG_SCHED_AUTOGROUP=y
+CONFIG_MM_OWNER=y
+# CONFIG_SYSFS_DEPRECATED is not set
+CONFIG_RELAY=y
+CONFIG_BLK_DEV_INITRD=y
+CONFIG_INITRAMFS_SOURCE=""
+CONFIG_RD_GZIP=y
+CONFIG_RD_BZIP2=y
+CONFIG_RD_LZMA=y
+CONFIG_RD_XZ=y
+CONFIG_RD_LZO=y
+CONFIG_CC_OPTIMIZE_FOR_SIZE=y
+CONFIG_SYSCTL=y
+CONFIG_ANON_INODES=y
+# CONFIG_EXPERT is not set
+CONFIG_UID16=y
+# CONFIG_SYSCTL_SYSCALL is not set
+CONFIG_KALLSYMS=y
+# CONFIG_KALLSYMS_ALL is not set
+CONFIG_HOTPLUG=y
+CONFIG_PRINTK=y
+CONFIG_BUG=y
+CONFIG_ELF_CORE=y
+CONFIG_PCSPKR_PLATFORM=y
+CONFIG_HAVE_PCSPKR_PLATFORM=y
+CONFIG_BASE_FULL=y
+CONFIG_FUTEX=y
+CONFIG_EPOLL=y
+CONFIG_SIGNALFD=y
+CONFIG_TIMERFD=y
+CONFIG_EVENTFD=y
+CONFIG_SHMEM=y
+CONFIG_AIO=y
+# CONFIG_EMBEDDED is not set
+CONFIG_HAVE_PERF_EVENTS=y
+
+#
+# Kernel Performance Events And Counters
+#
+CONFIG_PERF_EVENTS=y
+# CONFIG_PERF_COUNTERS is not set
+# CONFIG_DEBUG_PERF_USE_VMALLOC is not set
+CONFIG_VM_EVENT_COUNTERS=y
+CONFIG_PCI_QUIRKS=y
+# CONFIG_COMPAT_BRK is not set
+CONFIG_SLAB=y
+# CONFIG_SLUB is not set
+CONFIG_PROFILING=y
+CONFIG_TRACEPOINTS=y
+CONFIG_OPROFILE=m
+# CONFIG_OPROFILE_EVENT_MULTIPLEX is not set
+CONFIG_HAVE_OPROFILE=y
+CONFIG_OPROFILE_NMI_TIMER=y
+CONFIG_KPROBES=y
+# CONFIG_JUMP_LABEL is not set
+CONFIG_OPTPROBES=y
+CONFIG_HAVE_EFFICIENT_UNALIGNED_ACCESS=y
+CONFIG_KRETPROBES=y
+CONFIG_USER_RETURN_NOTIFIER=y
+CONFIG_HAVE_IOREMAP_PROT=y
+CONFIG_HAVE_KPROBES=y
+CONFIG_HAVE_KRETPROBES=y
+CONFIG_HAVE_OPTPROBES=y
+CONFIG_HAVE_ARCH_TRACEHOOK=y
+CONFIG_HAVE_DMA_ATTRS=y
+CONFIG_USE_GENERIC_SMP_HELPERS=y
+CONFIG_HAVE_REGS_AND_STACK_ACCESS_API=y
+CONFIG_HAVE_DMA_API_DEBUG=y
+CONFIG_HAVE_HW_BREAKPOINT=y
+CONFIG_HAVE_MIXED_BREAKPOINTS_REGS=y
+CONFIG_HAVE_USER_RETURN_NOTIFIER=y
+CONFIG_HAVE_PERF_EVENTS_NMI=y
+CONFIG_HAVE_ARCH_JUMP_LABEL=y
+CONFIG_ARCH_HAVE_NMI_SAFE_CMPXCHG=y
+CONFIG_HAVE_CMPXCHG_LOCAL=y
+CONFIG_HAVE_CMPXCHG_DOUBLE=y
+
+#
+# GCOV-based kernel profiling
+#
+# CONFIG_GCOV_KERNEL is not set
+CONFIG_HAVE_GENERIC_DMA_COHERENT=y
+CONFIG_SLABINFO=y
+CONFIG_RT_MUTEXES=y
+CONFIG_BASE_SMALL=0
+CONFIG_MODULES=y
+CONFIG_MODULE_FORCE_LOAD=y
+CONFIG_MODULE_UNLOAD=y
+CONFIG_MODULE_FORCE_UNLOAD=y
+CONFIG_MODVERSIONS=y
+# CONFIG_MODULE_SRCVERSION_ALL is not set
+CONFIG_STOP_MACHINE=y
+CONFIG_BLOCK=y
+CONFIG_LBDAF=y
+CONFIG_BLK_DEV_BSG=y
+CONFIG_BLK_DEV_BSGLIB=y
+CONFIG_BLK_DEV_INTEGRITY=y
+# CONFIG_BLK_DEV_THROTTLING is not set
+
+#
+# Partition Types
+#
+CONFIG_PARTITION_ADVANCED=y
+CONFIG_ACORN_PARTITION=y
+# CONFIG_ACORN_PARTITION_CUMANA is not set
+# CONFIG_ACORN_PARTITION_EESOX is not set
+CONFIG_ACORN_PARTITION_ICS=y
+# CONFIG_ACORN_PARTITION_ADFS is not set
+# CONFIG_ACORN_PARTITION_POWERTEC is not set
+CONFIG_ACORN_PARTITION_RISCIX=y
+CONFIG_OSF_PARTITION=y
+CONFIG_AMIGA_PARTITION=y
+CONFIG_ATARI_PARTITION=y
+CONFIG_MAC_PARTITION=y
+CONFIG_MSDOS_PARTITION=y
+CONFIG_BSD_DISKLABEL=y
+CONFIG_MINIX_SUBPARTITION=y
+CONFIG_SOLARIS_X86_PARTITION=y
+CONFIG_UNIXWARE_DISKLABEL=y
+CONFIG_LDM_PARTITION=y
+# CONFIG_LDM_DEBUG is not set
+CONFIG_SGI_PARTITION=y
+CONFIG_ULTRIX_PARTITION=y
+CONFIG_SUN_PARTITION=y
+CONFIG_KARMA_PARTITION=y
+CONFIG_EFI_PARTITION=y
+# CONFIG_SYSV68_PARTITION is not set
+
+#
+# IO Schedulers
+#
+CONFIG_IOSCHED_NOOP=y
+CONFIG_IOSCHED_DEADLINE=y
+CONFIG_IOSCHED_CFQ=y
+CONFIG_CFQ_GROUP_IOSCHED=y
+# CONFIG_DEFAULT_DEADLINE is not set
+CONFIG_DEFAULT_CFQ=y
+# CONFIG_DEFAULT_NOOP is not set
+CONFIG_DEFAULT_IOSCHED="cfq"
+CONFIG_PREEMPT_NOTIFIERS=y
+CONFIG_PADATA=y
+# CONFIG_INLINE_SPIN_TRYLOCK is not set
+# CONFIG_INLINE_SPIN_TRYLOCK_BH is not set
+# CONFIG_INLINE_SPIN_LOCK is not set
+# CONFIG_INLINE_SPIN_LOCK_BH is not set
+# CONFIG_INLINE_SPIN_LOCK_IRQ is not set
+# CONFIG_INLINE_SPIN_LOCK_IRQSAVE is not set
+# CONFIG_INLINE_SPIN_UNLOCK_BH is not set
+CONFIG_INLINE_SPIN_UNLOCK_IRQ=y
+# CONFIG_INLINE_SPIN_UNLOCK_IRQRESTORE is not set
+# CONFIG_INLINE_READ_TRYLOCK is not set
+# CONFIG_INLINE_READ_LOCK is not set
+# CONFIG_INLINE_READ_LOCK_BH is not set
+# CONFIG_INLINE_READ_LOCK_IRQ is not set
+# CONFIG_INLINE_READ_LOCK_IRQSAVE is not set
+CONFIG_INLINE_READ_UNLOCK=y
+# CONFIG_INLINE_READ_UNLOCK_BH is not set
+CONFIG_INLINE_READ_UNLOCK_IRQ=y
+# CONFIG_INLINE_READ_UNLOCK_IRQRESTORE is not set
+# CONFIG_INLINE_WRITE_TRYLOCK is not set
+# CONFIG_INLINE_WRITE_LOCK is not set
+# CONFIG_INLINE_WRITE_LOCK_BH is not set
+# CONFIG_INLINE_WRITE_LOCK_IRQ is not set
+# CONFIG_INLINE_WRITE_LOCK_IRQSAVE is not set
+CONFIG_INLINE_WRITE_UNLOCK=y
+# CONFIG_INLINE_WRITE_UNLOCK_BH is not set
+CONFIG_INLINE_WRITE_UNLOCK_IRQ=y
+# CONFIG_INLINE_WRITE_UNLOCK_IRQRESTORE is not set
+CONFIG_MUTEX_SPIN_ON_OWNER=y
+CONFIG_FREEZER=y
+
+#
+# Processor type and features
+#
+CONFIG_ZONE_DMA=y
+CONFIG_TICK_ONESHOT=y
+CONFIG_NO_HZ=y
+CONFIG_HIGH_RES_TIMERS=y
+CONFIG_GENERIC_CLOCKEVENTS_BUILD=y
+CONFIG_GENERIC_CLOCKEVENTS_MIN_ADJUST=y
+CONFIG_SMP=y
+CONFIG_X86_MPPARSE=y
+CONFIG_X86_BIGSMP=y
+# CONFIG_X86_EXTENDED_PLATFORM is not set
+# CONFIG_X86_32_IRIS is not set
+CONFIG_SCHED_OMIT_FRAME_POINTER=y
+CONFIG_PARAVIRT_GUEST=y
+# CONFIG_PARAVIRT_TIME_ACCOUNTING is not set
+CONFIG_XEN=y
+CONFIG_XEN_DOM0=y
+CONFIG_XEN_PRIVILEGED_GUEST=y
+CONFIG_XEN_PVHVM=y
+CONFIG_XEN_MAX_DOMAIN_MEMORY=64
+CONFIG_XEN_SAVE_RESTORE=y
+# CONFIG_XEN_DEBUG_FS is not set
+CONFIG_KVM_CLOCK=y
+CONFIG_KVM_GUEST=y
+# CONFIG_LGUEST_GUEST is not set
+CONFIG_PARAVIRT=y
+# CONFIG_PARAVIRT_SPINLOCKS is not set
+CONFIG_PARAVIRT_CLOCK=y
+# CONFIG_PARAVIRT_DEBUG is not set
+CONFIG_NO_BOOTMEM=y
+CONFIG_MEMTEST=y
+# CONFIG_M386 is not set
+# CONFIG_M486 is not set
+# CONFIG_M586 is not set
+# CONFIG_M586TSC is not set
+# CONFIG_M586MMX is not set
+CONFIG_M686=y
+# CONFIG_MPENTIUMII is not set
+# CONFIG_MPENTIUMIII is not set
+# CONFIG_MPENTIUMM is not set
+# CONFIG_MPENTIUM4 is not set
+# CONFIG_MK6 is not set
+# CONFIG_MK7 is not set
+# CONFIG_MK8 is not set
+# CONFIG_MCRUSOE is not set
+# CONFIG_MEFFICEON is not set
+# CONFIG_MWINCHIPC6 is not set
+# CONFIG_MWINCHIP3D is not set
+# CONFIG_MELAN is not set
+# CONFIG_MGEODEGX1 is not set
+# CONFIG_MGEODE_LX is not set
+# CONFIG_MCYRIXIII is not set
+# CONFIG_MVIAC3_2 is not set
+# CONFIG_MVIAC7 is not set
+# CONFIG_MCORE2 is not set
+# CONFIG_MATOM is not set
+CONFIG_X86_GENERIC=y
+CONFIG_X86_INTERNODE_CACHE_SHIFT=6
+CONFIG_X86_CMPXCHG=y
+CONFIG_X86_L1_CACHE_SHIFT=6
+CONFIG_X86_XADD=y
+# CONFIG_X86_PPRO_FENCE is not set
+CONFIG_X86_WP_WORKS_OK=y
+CONFIG_X86_INVLPG=y
+CONFIG_X86_BSWAP=y
+CONFIG_X86_POPAD_OK=y
+CONFIG_X86_INTEL_USERCOPY=y
+CONFIG_X86_USE_PPRO_CHECKSUM=y
+CONFIG_X86_TSC=y
+CONFIG_X86_CMPXCHG64=y
+CONFIG_X86_CMOV=y
+CONFIG_X86_MINIMUM_CPU_FAMILY=5
+CONFIG_X86_DEBUGCTLMSR=y
+CONFIG_CPU_SUP_INTEL=y
+CONFIG_CPU_SUP_AMD=y
+CONFIG_CPU_SUP_CENTAUR=y
+CONFIG_CPU_SUP_TRANSMETA_32=y
+CONFIG_HPET_TIMER=y
+CONFIG_HPET_EMULATE_RTC=y
+CONFIG_DMI=y
+CONFIG_SWIOTLB=y
+CONFIG_IOMMU_HELPER=y
+CONFIG_NR_CPUS=32
+CONFIG_SCHED_SMT=y
+CONFIG_SCHED_MC=y
+# CONFIG_IRQ_TIME_ACCOUNTING is not set
+# CONFIG_PREEMPT_NONE is not set
+CONFIG_PREEMPT_VOLUNTARY=y
+# CONFIG_PREEMPT is not set
+CONFIG_X86_LOCAL_APIC=y
+CONFIG_X86_IO_APIC=y
+CONFIG_X86_REROUTE_FOR_BROKEN_BOOT_IRQS=y
+CONFIG_X86_MCE=y
+CONFIG_X86_MCE_INTEL=y
+CONFIG_X86_MCE_AMD=y
+# CONFIG_X86_ANCIENT_MCE is not set
+CONFIG_X86_MCE_THRESHOLD=y
+CONFIG_X86_MCE_INJECT=m
+CONFIG_X86_THERMAL_VECTOR=y
+CONFIG_VM86=y
+CONFIG_X86_16BIT=y
+CONFIG_X86_ESPFIX32=y
+CONFIG_TOSHIBA=m
+CONFIG_I8K=m
+CONFIG_X86_REBOOTFIXUPS=y
+CONFIG_MICROCODE=m
+CONFIG_MICROCODE_INTEL=y
+CONFIG_MICROCODE_AMD=y
+CONFIG_MICROCODE_OLD_INTERFACE=y
+CONFIG_X86_MSR=m
+CONFIG_X86_CPUID=m
+# CONFIG_NOHIGHMEM is not set
+# CONFIG_HIGHMEM4G is not set
+CONFIG_HIGHMEM64G=y
+CONFIG_PAGE_OFFSET=0xC0000000
+CONFIG_HIGHMEM=y
+CONFIG_X86_PAE=y
+CONFIG_ARCH_PHYS_ADDR_T_64BIT=y
+CONFIG_ARCH_DMA_ADDR_T_64BIT=y
+# CONFIG_NUMA is not set
+CONFIG_NEED_NODE_MEMMAP_SIZE=y
+CONFIG_ARCH_FLATMEM_ENABLE=y
+CONFIG_ARCH_SPARSEMEM_ENABLE=y
+CONFIG_ARCH_SELECT_MEMORY_MODEL=y
+CONFIG_ILLEGAL_POINTER_VALUE=0
+CONFIG_SELECT_MEMORY_MODEL=y
+# CONFIG_FLATMEM_MANUAL is not set
+CONFIG_SPARSEMEM_MANUAL=y
+CONFIG_SPARSEMEM=y
+CONFIG_HAVE_MEMORY_PRESENT=y
+CONFIG_SPARSEMEM_STATIC=y
+CONFIG_HAVE_MEMBLOCK=y
+CONFIG_HAVE_MEMBLOCK_NODE_MAP=y
+CONFIG_ARCH_DISCARD_MEMBLOCK=y
+# CONFIG_MEMORY_HOTPLUG is not set
+CONFIG_SPLIT_PTLOCK_CPUS=4
+CONFIG_COMPACTION=y
+CONFIG_MIGRATION=y
+CONFIG_PHYS_ADDR_T_64BIT=y
+CONFIG_ZONE_DMA_FLAG=1
+CONFIG_BOUNCE=y
+CONFIG_VIRT_TO_BUS=y
+CONFIG_MMU_NOTIFIER=y
+CONFIG_KSM=y
+CONFIG_DEFAULT_MMAP_MIN_ADDR=65536
+CONFIG_TRANSPARENT_HUGEPAGE=y
+# CONFIG_TRANSPARENT_HUGEPAGE_ALWAYS is not set
+CONFIG_TRANSPARENT_HUGEPAGE_MADVISE=y
+# CONFIG_CLEANCACHE is not set
+CONFIG_HIGHPTE=y
+# CONFIG_X86_CHECK_BIOS_CORRUPTION is not set
+CONFIG_X86_RESERVE_LOW=64
+# CONFIG_MATH_EMULATION is not set
+CONFIG_MTRR=y
+CONFIG_MTRR_SANITIZER=y
+CONFIG_MTRR_SANITIZER_ENABLE_DEFAULT=0
+CONFIG_MTRR_SANITIZER_SPARE_REG_NR_DEFAULT=1
+CONFIG_X86_PAT=y
+CONFIG_ARCH_USES_PG_UNCACHED=y
+CONFIG_ARCH_RANDOM=y
+CONFIG_EFI=y
+CONFIG_EFI_STUB=y
+CONFIG_SECCOMP=y
+CONFIG_CC_STACKPROTECTOR=y
+# CONFIG_HZ_100 is not set
+CONFIG_HZ_250=y
+# CONFIG_HZ_300 is not set
+# CONFIG_HZ_1000 is not set
+CONFIG_HZ=250
+CONFIG_SCHED_HRTICK=y
+CONFIG_KEXEC=y
+CONFIG_CRASH_DUMP=y
+# CONFIG_KEXEC_JUMP is not set
+CONFIG_PHYSICAL_START=0x1000000
+CONFIG_RELOCATABLE=y
+CONFIG_X86_NEED_RELOCS=y
+CONFIG_PHYSICAL_ALIGN=0x1000000
+CONFIG_HOTPLUG_CPU=y
+# CONFIG_COMPAT_VDSO is not set
+# CONFIG_CMDLINE_BOOL is not set
+CONFIG_ARCH_ENABLE_MEMORY_HOTPLUG=y
+
+#
+# Power management and ACPI options
+#
+CONFIG_SUSPEND=y
+CONFIG_SUSPEND_FREEZER=y
+CONFIG_HIBERNATE_CALLBACKS=y
+CONFIG_HIBERNATION=y
+CONFIG_PM_STD_PARTITION=""
+CONFIG_PM_SLEEP=y
+CONFIG_PM_SLEEP_SMP=y
+CONFIG_PM_RUNTIME=y
+CONFIG_PM=y
+CONFIG_PM_DEBUG=y
+CONFIG_PM_ADVANCED_DEBUG=y
+# CONFIG_PM_TEST_SUSPEND is not set
+CONFIG_CAN_PM_TRACE=y
+# CONFIG_PM_TRACE_RTC is not set
+CONFIG_ACPI=y
+CONFIG_ACPI_SLEEP=y
+# CONFIG_ACPI_PROCFS is not set
+# CONFIG_ACPI_PROCFS_POWER is not set
+# CONFIG_ACPI_EC_DEBUGFS is not set
+# CONFIG_ACPI_PROC_EVENT is not set
+CONFIG_ACPI_AC=m
+CONFIG_ACPI_BATTERY=m
+CONFIG_ACPI_BUTTON=m
+CONFIG_ACPI_VIDEO=m
+CONFIG_ACPI_FAN=m
+CONFIG_ACPI_DOCK=y
+CONFIG_ACPI_PROCESSOR=m
+CONFIG_ACPI_IPMI=m
+CONFIG_ACPI_HOTPLUG_CPU=y
+CONFIG_ACPI_PROCESSOR_AGGREGATOR=m
+CONFIG_ACPI_THERMAL=m
+# CONFIG_ACPI_CUSTOM_DSDT is not set
+CONFIG_ACPI_BLACKLIST_YEAR=0
+# CONFIG_ACPI_DEBUG is not set
+CONFIG_ACPI_PCI_SLOT=m
+CONFIG_X86_PM_TIMER=y
+CONFIG_ACPI_CONTAINER=m
+CONFIG_ACPI_SBS=m
+CONFIG_ACPI_HED=y
+# CONFIG_ACPI_CUSTOM_METHOD is not set
+# CONFIG_ACPI_BGRT is not set
+CONFIG_ACPI_APEI=y
+CONFIG_ACPI_APEI_GHES=y
+CONFIG_ACPI_APEI_PCIEAER=y
+# CONFIG_ACPI_APEI_EINJ is not set
+# CONFIG_ACPI_APEI_ERST_DEBUG is not set
+CONFIG_SFI=y
+CONFIG_X86_APM_BOOT=y
+CONFIG_APM=m
+# CONFIG_APM_IGNORE_USER_SUSPEND is not set
+# CONFIG_APM_DO_ENABLE is not set
+# CONFIG_APM_CPU_IDLE is not set
+# CONFIG_APM_DISPLAY_BLANK is not set
+# CONFIG_APM_ALLOW_INTS is not set
+
+#
+# CPU Frequency scaling
+#
+CONFIG_CPU_FREQ=y
+CONFIG_CPU_FREQ_TABLE=y
+CONFIG_CPU_FREQ_STAT=m
+# CONFIG_CPU_FREQ_STAT_DETAILS is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE is not set
+CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND=y
+# CONFIG_CPU_FREQ_DEFAULT_GOV_CONSERVATIVE is not set
+CONFIG_CPU_FREQ_GOV_PERFORMANCE=y
+CONFIG_CPU_FREQ_GOV_POWERSAVE=m
+CONFIG_CPU_FREQ_GOV_USERSPACE=m
+CONFIG_CPU_FREQ_GOV_ONDEMAND=y
+CONFIG_CPU_FREQ_GOV_CONSERVATIVE=m
+
+#
+# x86 CPU frequency scaling drivers
+#
+CONFIG_X86_PCC_CPUFREQ=m
+CONFIG_X86_ACPI_CPUFREQ=m
+CONFIG_X86_POWERNOW_K6=m
+CONFIG_X86_POWERNOW_K7=m
+CONFIG_X86_POWERNOW_K7_ACPI=y
+CONFIG_X86_POWERNOW_K8=m
+CONFIG_X86_GX_SUSPMOD=m
+CONFIG_X86_SPEEDSTEP_CENTRINO=m
+CONFIG_X86_SPEEDSTEP_CENTRINO_TABLE=y
+CONFIG_X86_SPEEDSTEP_ICH=m
+CONFIG_X86_SPEEDSTEP_SMI=m
+CONFIG_X86_P4_CLOCKMOD=m
+CONFIG_X86_CPUFREQ_NFORCE2=m
+CONFIG_X86_LONGRUN=m
+CONFIG_X86_LONGHAUL=m
+# CONFIG_X86_E_POWERSAVER is not set
+
+#
+# shared options
+#
+CONFIG_X86_SPEEDSTEP_LIB=m
+CONFIG_X86_SPEEDSTEP_RELAXED_CAP_CHECK=y
+CONFIG_CPU_IDLE=y
+CONFIG_CPU_IDLE_GOV_LADDER=y
+CONFIG_CPU_IDLE_GOV_MENU=y
+CONFIG_INTEL_IDLE=y
+
+#
+# Bus options (PCI etc.)
+#
+CONFIG_PCI=y
+# CONFIG_PCI_GOBIOS is not set
+# CONFIG_PCI_GOMMCONFIG is not set
+# CONFIG_PCI_GODIRECT is not set
+CONFIG_PCI_GOANY=y
+CONFIG_PCI_BIOS=y
+CONFIG_PCI_DIRECT=y
+CONFIG_PCI_MMCONFIG=y
+CONFIG_PCI_XEN=y
+CONFIG_PCI_DOMAINS=y
+# CONFIG_PCI_CNB20LE_QUIRK is not set
+CONFIG_PCIEPORTBUS=y
+CONFIG_HOTPLUG_PCI_PCIE=y
+CONFIG_PCIEAER=y
+# CONFIG_PCIE_ECRC is not set
+CONFIG_PCIEAER_INJECT=m
+CONFIG_PCIEASPM=y
+# CONFIG_PCIEASPM_DEBUG is not set
+CONFIG_PCIEASPM_DEFAULT=y
+# CONFIG_PCIEASPM_POWERSAVE is not set
+# CONFIG_PCIEASPM_PERFORMANCE is not set
+CONFIG_PCIE_PME=y
+CONFIG_ARCH_SUPPORTS_MSI=y
+CONFIG_PCI_MSI=y
+# CONFIG_PCI_DEBUG is not set
+# CONFIG_PCI_REALLOC_ENABLE_AUTO is not set
+CONFIG_PCI_STUB=m
+CONFIG_XEN_PCIDEV_FRONTEND=m
+CONFIG_HT_IRQ=y
+CONFIG_PCI_ATS=y
+CONFIG_PCI_IOV=y
+# CONFIG_PCI_PRI is not set
+# CONFIG_PCI_PASID is not set
+CONFIG_PCI_IOAPIC=y
+CONFIG_PCI_LABEL=y
+CONFIG_ISA_DMA_API=y
+CONFIG_ISA=y
+# CONFIG_EISA is not set
+# CONFIG_MCA is not set
+CONFIG_SCx200=m
+CONFIG_SCx200HR_TIMER=m
+# CONFIG_ALIX is not set
+# CONFIG_NET5501 is not set
+# CONFIG_GEOS is not set
+CONFIG_AMD_NB=y
+CONFIG_PCCARD=m
+CONFIG_PCMCIA=m
+CONFIG_PCMCIA_LOAD_CIS=y
+CONFIG_CARDBUS=y
+
+#
+# PC-card bridges
+#
+CONFIG_YENTA=m
+CONFIG_YENTA_O2=y
+CONFIG_YENTA_RICOH=y
+CONFIG_YENTA_TI=y
+CONFIG_YENTA_ENE_TUNE=y
+CONFIG_YENTA_TOSHIBA=y
+CONFIG_PD6729=m
+CONFIG_I82092=m
+CONFIG_I82365=m
+CONFIG_TCIC=m
+CONFIG_PCMCIA_PROBE=y
+CONFIG_PCCARD_NONSTATIC=y
+CONFIG_HOTPLUG_PCI=y
+CONFIG_HOTPLUG_PCI_FAKE=m
+CONFIG_HOTPLUG_PCI_COMPAQ=m
+# CONFIG_HOTPLUG_PCI_COMPAQ_NVRAM is not set
+CONFIG_HOTPLUG_PCI_IBM=m
+CONFIG_HOTPLUG_PCI_ACPI=y
+CONFIG_HOTPLUG_PCI_ACPI_IBM=m
+CONFIG_HOTPLUG_PCI_CPCI=y
+CONFIG_HOTPLUG_PCI_CPCI_ZT5550=m
+CONFIG_HOTPLUG_PCI_CPCI_GENERIC=m
+CONFIG_HOTPLUG_PCI_SHPC=m
+# CONFIG_RAPIDIO is not set
+
+#
+# Executable file formats / Emulations
+#
+CONFIG_BINFMT_ELF=y
+CONFIG_ARCH_BINFMT_ELF_RANDOMIZE_PIE=y
+CONFIG_CORE_DUMP_DEFAULT_ELF_HEADERS=y
+CONFIG_HAVE_AOUT=y
+CONFIG_BINFMT_AOUT=m
+CONFIG_BINFMT_MISC=m
+CONFIG_HAVE_ATOMIC_IOMAP=y
+CONFIG_HAVE_TEXT_POKE_SMP=y
+CONFIG_NET=y
+
+#
+# Networking options
+#
+CONFIG_PACKET=y
+CONFIG_UNIX=y
+# CONFIG_UNIX_DIAG is not set
+CONFIG_XFRM=y
+CONFIG_XFRM_USER=m
+CONFIG_XFRM_SUB_POLICY=y
+CONFIG_XFRM_MIGRATE=y
+# CONFIG_XFRM_STATISTICS is not set
+CONFIG_XFRM_IPCOMP=m
+CONFIG_NET_KEY=m
+CONFIG_NET_KEY_MIGRATE=y
+CONFIG_INET=y
+CONFIG_IP_MULTICAST=y
+CONFIG_IP_ADVANCED_ROUTER=y
+CONFIG_IP_FIB_TRIE_STATS=y
+CONFIG_IP_MULTIPLE_TABLES=y
+CONFIG_IP_ROUTE_MULTIPATH=y
+CONFIG_IP_ROUTE_VERBOSE=y
+CONFIG_IP_ROUTE_CLASSID=y
+# CONFIG_IP_PNP is not set
+CONFIG_NET_IPIP=m
+CONFIG_NET_IPGRE_DEMUX=m
+CONFIG_NET_IPGRE=m
+CONFIG_NET_IPGRE_BROADCAST=y
+CONFIG_IP_MROUTE=y
+CONFIG_IP_MROUTE_MULTIPLE_TABLES=y
+CONFIG_IP_PIMSM_V1=y
+CONFIG_IP_PIMSM_V2=y
+# CONFIG_ARPD is not set
+CONFIG_SYN_COOKIES=y
+CONFIG_INET_AH=m
+CONFIG_INET_ESP=m
+CONFIG_INET_IPCOMP=m
+CONFIG_INET_XFRM_TUNNEL=m
+CONFIG_INET_TUNNEL=m
+CONFIG_INET_XFRM_MODE_TRANSPORT=m
+CONFIG_INET_XFRM_MODE_TUNNEL=m
+CONFIG_INET_XFRM_MODE_BEET=m
+CONFIG_INET_LRO=m
+CONFIG_INET_DIAG=m
+CONFIG_INET_TCP_DIAG=m
+# CONFIG_INET_UDP_DIAG is not set
+CONFIG_TCP_CONG_ADVANCED=y
+CONFIG_TCP_CONG_BIC=m
+CONFIG_TCP_CONG_CUBIC=y
+CONFIG_TCP_CONG_WESTWOOD=m
+CONFIG_TCP_CONG_HTCP=m
+CONFIG_TCP_CONG_HSTCP=m
+CONFIG_TCP_CONG_HYBLA=m
+CONFIG_TCP_CONG_VEGAS=m
+CONFIG_TCP_CONG_SCALABLE=m
+CONFIG_TCP_CONG_LP=m
+CONFIG_TCP_CONG_VENO=m
+CONFIG_TCP_CONG_YEAH=m
+CONFIG_TCP_CONG_ILLINOIS=m
+CONFIG_DEFAULT_CUBIC=y
+# CONFIG_DEFAULT_RENO is not set
+CONFIG_DEFAULT_TCP_CONG="cubic"
+CONFIG_TCP_MD5SIG=y
+CONFIG_IPV6=y
+CONFIG_IPV6_PRIVACY=y
+CONFIG_IPV6_ROUTER_PREF=y
+CONFIG_IPV6_ROUTE_INFO=y
+CONFIG_IPV6_OPTIMISTIC_DAD=y
+CONFIG_INET6_AH=m
+CONFIG_INET6_ESP=m
+CONFIG_INET6_IPCOMP=m
+CONFIG_IPV6_MIP6=y
+CONFIG_INET6_XFRM_TUNNEL=m
+CONFIG_INET6_TUNNEL=m
+CONFIG_INET6_XFRM_MODE_TRANSPORT=m
+CONFIG_INET6_XFRM_MODE_TUNNEL=m
+CONFIG_INET6_XFRM_MODE_BEET=m
+CONFIG_INET6_XFRM_MODE_ROUTEOPTIMIZATION=m
+CONFIG_IPV6_SIT=m
+CONFIG_IPV6_SIT_6RD=y
+CONFIG_IPV6_NDISC_NODETYPE=y
+CONFIG_IPV6_TUNNEL=m
+CONFIG_IPV6_MULTIPLE_TABLES=y
+CONFIG_IPV6_SUBTREES=y
+CONFIG_IPV6_MROUTE=y
+CONFIG_IPV6_MROUTE_MULTIPLE_TABLES=y
+CONFIG_IPV6_PIMSM_V2=y
+# CONFIG_NETLABEL is not set
+CONFIG_NETWORK_SECMARK=y
+# CONFIG_NETWORK_PHY_TIMESTAMPING is not set
+CONFIG_NETFILTER=y
+# CONFIG_NETFILTER_DEBUG is not set
+CONFIG_NETFILTER_ADVANCED=y
+CONFIG_BRIDGE_NETFILTER=y
+
+#
+# Core Netfilter Configuration
+#
+CONFIG_NETFILTER_NETLINK=m
+# CONFIG_NETFILTER_NETLINK_ACCT is not set
+CONFIG_NETFILTER_NETLINK_QUEUE=m
+CONFIG_NETFILTER_NETLINK_LOG=m
+CONFIG_NF_CONNTRACK=m
+CONFIG_NF_CONNTRACK_MARK=y
+CONFIG_NF_CONNTRACK_SECMARK=y
+CONFIG_NF_CONNTRACK_ZONES=y
+# CONFIG_NF_CONNTRACK_PROCFS is not set
+CONFIG_NF_CONNTRACK_EVENTS=y
+# CONFIG_NF_CONNTRACK_TIMEOUT is not set
+CONFIG_NF_CONNTRACK_TIMESTAMP=y
+CONFIG_NF_CT_PROTO_DCCP=m
+CONFIG_NF_CT_PROTO_GRE=m
+CONFIG_NF_CT_PROTO_SCTP=m
+CONFIG_NF_CT_PROTO_UDPLITE=m
+CONFIG_NF_CONNTRACK_AMANDA=m
+CONFIG_NF_CONNTRACK_FTP=m
+CONFIG_NF_CONNTRACK_H323=m
+CONFIG_NF_CONNTRACK_IRC=m
+CONFIG_NF_CONNTRACK_BROADCAST=m
+CONFIG_NF_CONNTRACK_NETBIOS_NS=m
+CONFIG_NF_CONNTRACK_SNMP=m
+CONFIG_NF_CONNTRACK_PPTP=m
+CONFIG_NF_CONNTRACK_SANE=m
+CONFIG_NF_CONNTRACK_SIP=m
+CONFIG_NF_CONNTRACK_TFTP=m
+CONFIG_NF_CT_NETLINK=m
+# CONFIG_NF_CT_NETLINK_TIMEOUT is not set
+CONFIG_NETFILTER_TPROXY=m
+CONFIG_NETFILTER_XTABLES=m
+
+#
+# Xtables combined modules
+#
+CONFIG_NETFILTER_XT_MARK=m
+CONFIG_NETFILTER_XT_CONNMARK=m
+CONFIG_NETFILTER_XT_SET=m
+
+#
+# Xtables targets
+#
+CONFIG_NETFILTER_XT_TARGET_AUDIT=m
+CONFIG_NETFILTER_XT_TARGET_CHECKSUM=m
+CONFIG_NETFILTER_XT_TARGET_CLASSIFY=m
+CONFIG_NETFILTER_XT_TARGET_CONNMARK=m
+CONFIG_NETFILTER_XT_TARGET_CONNSECMARK=m
+CONFIG_NETFILTER_XT_TARGET_CT=m
+CONFIG_NETFILTER_XT_TARGET_DSCP=m
+CONFIG_NETFILTER_XT_TARGET_HL=m
+CONFIG_NETFILTER_XT_TARGET_IDLETIMER=m
+CONFIG_NETFILTER_XT_TARGET_LED=m
+# CONFIG_NETFILTER_XT_TARGET_LOG is not set
+CONFIG_NETFILTER_XT_TARGET_MARK=m
+CONFIG_NETFILTER_XT_TARGET_NFLOG=m
+CONFIG_NETFILTER_XT_TARGET_NFQUEUE=m
+CONFIG_NETFILTER_XT_TARGET_NOTRACK=m
+CONFIG_NETFILTER_XT_TARGET_RATEEST=m
+CONFIG_NETFILTER_XT_TARGET_TEE=m
+CONFIG_NETFILTER_XT_TARGET_TPROXY=m
+CONFIG_NETFILTER_XT_TARGET_TRACE=m
+CONFIG_NETFILTER_XT_TARGET_SECMARK=m
+CONFIG_NETFILTER_XT_TARGET_TCPMSS=m
+CONFIG_NETFILTER_XT_TARGET_TCPOPTSTRIP=m
+
+#
+# Xtables matches
+#
+CONFIG_NETFILTER_XT_MATCH_ADDRTYPE=m
+CONFIG_NETFILTER_XT_MATCH_CLUSTER=m
+CONFIG_NETFILTER_XT_MATCH_COMMENT=m
+CONFIG_NETFILTER_XT_MATCH_CONNBYTES=m
+CONFIG_NETFILTER_XT_MATCH_CONNLIMIT=m
+CONFIG_NETFILTER_XT_MATCH_CONNMARK=m
+CONFIG_NETFILTER_XT_MATCH_CONNTRACK=m
+CONFIG_NETFILTER_XT_MATCH_CPU=m
+CONFIG_NETFILTER_XT_MATCH_DCCP=m
+CONFIG_NETFILTER_XT_MATCH_DEVGROUP=m
+CONFIG_NETFILTER_XT_MATCH_DSCP=m
+CONFIG_NETFILTER_XT_MATCH_ECN=m
+CONFIG_NETFILTER_XT_MATCH_ESP=m
+CONFIG_NETFILTER_XT_MATCH_HASHLIMIT=m
+CONFIG_NETFILTER_XT_MATCH_HELPER=m
+CONFIG_NETFILTER_XT_MATCH_HL=m
+CONFIG_NETFILTER_XT_MATCH_IPRANGE=m
+CONFIG_NETFILTER_XT_MATCH_IPVS=m
+CONFIG_NETFILTER_XT_MATCH_LENGTH=m
+CONFIG_NETFILTER_XT_MATCH_LIMIT=m
+CONFIG_NETFILTER_XT_MATCH_MAC=m
+CONFIG_NETFILTER_XT_MATCH_MARK=m
+CONFIG_NETFILTER_XT_MATCH_MULTIPORT=m
+# CONFIG_NETFILTER_XT_MATCH_NFACCT is not set
+CONFIG_NETFILTER_XT_MATCH_OSF=m
+CONFIG_NETFILTER_XT_MATCH_OWNER=m
+CONFIG_NETFILTER_XT_MATCH_POLICY=m
+CONFIG_NETFILTER_XT_MATCH_PHYSDEV=m
+CONFIG_NETFILTER_XT_MATCH_PKTTYPE=m
+CONFIG_NETFILTER_XT_MATCH_QUOTA=m
+CONFIG_NETFILTER_XT_MATCH_RATEEST=m
+CONFIG_NETFILTER_XT_MATCH_REALM=m
+CONFIG_NETFILTER_XT_MATCH_RECENT=m
+CONFIG_NETFILTER_XT_MATCH_SCTP=m
+CONFIG_NETFILTER_XT_MATCH_SOCKET=m
+CONFIG_NETFILTER_XT_MATCH_STATE=m
+CONFIG_NETFILTER_XT_MATCH_STATISTIC=m
+CONFIG_NETFILTER_XT_MATCH_STRING=m
+CONFIG_NETFILTER_XT_MATCH_TCPMSS=m
+CONFIG_NETFILTER_XT_MATCH_TIME=m
+CONFIG_NETFILTER_XT_MATCH_U32=m
+CONFIG_IP_SET=m
+CONFIG_IP_SET_MAX=256
+CONFIG_IP_SET_BITMAP_IP=m
+CONFIG_IP_SET_BITMAP_IPMAC=m
+CONFIG_IP_SET_BITMAP_PORT=m
+CONFIG_IP_SET_HASH_IP=m
+CONFIG_IP_SET_HASH_IPPORT=m
+CONFIG_IP_SET_HASH_IPPORTIP=m
+CONFIG_IP_SET_HASH_IPPORTNET=m
+CONFIG_IP_SET_HASH_NET=m
+CONFIG_IP_SET_HASH_NETPORT=m
+CONFIG_IP_SET_HASH_NETIFACE=m
+CONFIG_IP_SET_LIST_SET=m
+CONFIG_IP_VS=m
+CONFIG_IP_VS_IPV6=y
+# CONFIG_IP_VS_DEBUG is not set
+CONFIG_IP_VS_TAB_BITS=12
+
+#
+# IPVS transport protocol load balancing support
+#
+CONFIG_IP_VS_PROTO_TCP=y
+CONFIG_IP_VS_PROTO_UDP=y
+CONFIG_IP_VS_PROTO_AH_ESP=y
+CONFIG_IP_VS_PROTO_ESP=y
+CONFIG_IP_VS_PROTO_AH=y
+CONFIG_IP_VS_PROTO_SCTP=y
+
+#
+# IPVS scheduler
+#
+CONFIG_IP_VS_RR=m
+CONFIG_IP_VS_WRR=m
+CONFIG_IP_VS_LC=m
+CONFIG_IP_VS_WLC=m
+CONFIG_IP_VS_LBLC=m
+CONFIG_IP_VS_LBLCR=m
+CONFIG_IP_VS_DH=m
+CONFIG_IP_VS_SH=m
+CONFIG_IP_VS_SED=m
+CONFIG_IP_VS_NQ=m
+
+#
+# IPVS SH scheduler
+#
+CONFIG_IP_VS_SH_TAB_BITS=8
+
+#
+# IPVS application helper
+#
+CONFIG_IP_VS_FTP=m
+CONFIG_IP_VS_NFCT=y
+CONFIG_IP_VS_PE_SIP=m
+
+#
+# IP: Netfilter Configuration
+#
+CONFIG_NF_DEFRAG_IPV4=m
+CONFIG_NF_CONNTRACK_IPV4=m
+CONFIG_IP_NF_QUEUE=m
+CONFIG_IP_NF_IPTABLES=m
+CONFIG_IP_NF_MATCH_AH=m
+CONFIG_IP_NF_MATCH_ECN=m
+# CONFIG_IP_NF_MATCH_RPFILTER is not set
+CONFIG_IP_NF_MATCH_TTL=m
+CONFIG_IP_NF_FILTER=m
+CONFIG_IP_NF_TARGET_REJECT=m
+CONFIG_IP_NF_TARGET_ULOG=m
+CONFIG_NF_NAT=m
+CONFIG_NF_NAT_NEEDED=y
+CONFIG_IP_NF_TARGET_MASQUERADE=m
+CONFIG_IP_NF_TARGET_NETMAP=m
+CONFIG_IP_NF_TARGET_REDIRECT=m
+CONFIG_NF_NAT_SNMP_BASIC=m
+CONFIG_NF_NAT_PROTO_DCCP=m
+CONFIG_NF_NAT_PROTO_GRE=m
+CONFIG_NF_NAT_PROTO_UDPLITE=m
+CONFIG_NF_NAT_PROTO_SCTP=m
+CONFIG_NF_NAT_FTP=m
+CONFIG_NF_NAT_IRC=m
+CONFIG_NF_NAT_TFTP=m
+CONFIG_NF_NAT_AMANDA=m
+CONFIG_NF_NAT_PPTP=m
+CONFIG_NF_NAT_H323=m
+CONFIG_NF_NAT_SIP=m
+CONFIG_IP_NF_MANGLE=m
+CONFIG_IP_NF_TARGET_CLUSTERIP=m
+CONFIG_IP_NF_TARGET_ECN=m
+CONFIG_IP_NF_TARGET_TTL=m
+CONFIG_IP_NF_RAW=m
+CONFIG_IP_NF_SECURITY=m
+CONFIG_IP_NF_ARPTABLES=m
+CONFIG_IP_NF_ARPFILTER=m
+CONFIG_IP_NF_ARP_MANGLE=m
+
+#
+# IPv6: Netfilter Configuration
+#
+CONFIG_NF_DEFRAG_IPV6=m
+CONFIG_NF_CONNTRACK_IPV6=m
+CONFIG_IP6_NF_QUEUE=m
+CONFIG_IP6_NF_IPTABLES=m
+CONFIG_IP6_NF_MATCH_AH=m
+CONFIG_IP6_NF_MATCH_EUI64=m
+CONFIG_IP6_NF_MATCH_FRAG=m
+CONFIG_IP6_NF_MATCH_OPTS=m
+CONFIG_IP6_NF_MATCH_HL=m
+CONFIG_IP6_NF_MATCH_IPV6HEADER=m
+CONFIG_IP6_NF_MATCH_MH=m
+# CONFIG_IP6_NF_MATCH_RPFILTER is not set
+CONFIG_IP6_NF_MATCH_RT=m
+CONFIG_IP6_NF_TARGET_HL=m
+CONFIG_IP6_NF_FILTER=m
+CONFIG_IP6_NF_TARGET_REJECT=m
+CONFIG_IP6_NF_MANGLE=m
+CONFIG_IP6_NF_RAW=m
+CONFIG_IP6_NF_SECURITY=m
+
+#
+# DECnet: Netfilter Configuration
+#
+CONFIG_DECNET_NF_GRABULATOR=m
+CONFIG_BRIDGE_NF_EBTABLES=m
+CONFIG_BRIDGE_EBT_BROUTE=m
+CONFIG_BRIDGE_EBT_T_FILTER=m
+CONFIG_BRIDGE_EBT_T_NAT=m
+CONFIG_BRIDGE_EBT_802_3=m
+CONFIG_BRIDGE_EBT_AMONG=m
+CONFIG_BRIDGE_EBT_ARP=m
+CONFIG_BRIDGE_EBT_IP=m
+CONFIG_BRIDGE_EBT_IP6=m
+CONFIG_BRIDGE_EBT_LIMIT=m
+CONFIG_BRIDGE_EBT_MARK=m
+CONFIG_BRIDGE_EBT_PKTTYPE=m
+CONFIG_BRIDGE_EBT_STP=m
+CONFIG_BRIDGE_EBT_VLAN=m
+CONFIG_BRIDGE_EBT_ARPREPLY=m
+CONFIG_BRIDGE_EBT_DNAT=m
+CONFIG_BRIDGE_EBT_MARK_T=m
+CONFIG_BRIDGE_EBT_REDIRECT=m
+CONFIG_BRIDGE_EBT_SNAT=m
+CONFIG_BRIDGE_EBT_LOG=m
+CONFIG_BRIDGE_EBT_ULOG=m
+CONFIG_BRIDGE_EBT_NFLOG=m
+CONFIG_IP_DCCP=m
+CONFIG_INET_DCCP_DIAG=m
+
+#
+# DCCP CCIDs Configuration (EXPERIMENTAL)
+#
+# CONFIG_IP_DCCP_CCID2_DEBUG is not set
+CONFIG_IP_DCCP_CCID3=y
+# CONFIG_IP_DCCP_CCID3_DEBUG is not set
+CONFIG_IP_DCCP_TFRC_LIB=y
+
+#
+# DCCP Kernel Hacking
+#
+# CONFIG_IP_DCCP_DEBUG is not set
+CONFIG_NET_DCCPPROBE=m
+CONFIG_IP_SCTP=m
+CONFIG_NET_SCTPPROBE=m
+# CONFIG_SCTP_DBG_MSG is not set
+# CONFIG_SCTP_DBG_OBJCNT is not set
+# CONFIG_SCTP_HMAC_NONE is not set
+# CONFIG_SCTP_HMAC_SHA1 is not set
+CONFIG_SCTP_HMAC_MD5=y
+CONFIG_RDS=m
+CONFIG_RDS_RDMA=m
+CONFIG_RDS_TCP=m
+# CONFIG_RDS_DEBUG is not set
+CONFIG_TIPC=m
+CONFIG_TIPC_ADVANCED=y
+CONFIG_TIPC_PORTS=8191
+CONFIG_TIPC_LOG=0
+# CONFIG_TIPC_DEBUG is not set
+CONFIG_ATM=m
+CONFIG_ATM_CLIP=m
+# CONFIG_ATM_CLIP_NO_ICMP is not set
+CONFIG_ATM_LANE=m
+CONFIG_ATM_MPOA=m
+CONFIG_ATM_BR2684=m
+# CONFIG_ATM_BR2684_IPFILTER is not set
+CONFIG_L2TP=m
+CONFIG_L2TP_DEBUGFS=m
+CONFIG_L2TP_V3=y
+CONFIG_L2TP_IP=m
+CONFIG_L2TP_ETH=m
+CONFIG_STP=m
+CONFIG_GARP=m
+CONFIG_BRIDGE=m
+CONFIG_BRIDGE_IGMP_SNOOPING=y
+# CONFIG_NET_DSA is not set
+CONFIG_VLAN_8021Q=m
+CONFIG_VLAN_8021Q_GVRP=y
+CONFIG_DECNET=m
+# CONFIG_DECNET_ROUTER is not set
+CONFIG_LLC=y
+CONFIG_LLC2=m
+CONFIG_IPX=m
+# CONFIG_IPX_INTERN is not set
+CONFIG_ATALK=m
+CONFIG_DEV_APPLETALK=m
+CONFIG_LTPC=m
+# CONFIG_COPS is not set
+CONFIG_IPDDP=m
+CONFIG_IPDDP_ENCAP=y
+CONFIG_IPDDP_DECAP=y
+# CONFIG_X25 is not set
+CONFIG_LAPB=m
+# CONFIG_ECONET is not set
+# CONFIG_WAN_ROUTER is not set
+CONFIG_PHONET=m
+CONFIG_IEEE802154=m
+CONFIG_IEEE802154_6LOWPAN=m
+CONFIG_NET_SCHED=y
+
+#
+# Queueing/Scheduling
+#
+CONFIG_NET_SCH_CBQ=m
+CONFIG_NET_SCH_HTB=m
+CONFIG_NET_SCH_HFSC=m
+CONFIG_NET_SCH_ATM=m
+CONFIG_NET_SCH_PRIO=m
+CONFIG_NET_SCH_MULTIQ=m
+CONFIG_NET_SCH_RED=m
+CONFIG_NET_SCH_SFB=m
+CONFIG_NET_SCH_SFQ=m
+CONFIG_NET_SCH_TEQL=m
+CONFIG_NET_SCH_TBF=m
+CONFIG_NET_SCH_GRED=m
+CONFIG_NET_SCH_DSMARK=m
+CONFIG_NET_SCH_NETEM=m
+CONFIG_NET_SCH_DRR=m
+CONFIG_NET_SCH_MQPRIO=m
+CONFIG_NET_SCH_CHOKE=m
+CONFIG_NET_SCH_QFQ=m
+CONFIG_NET_SCH_INGRESS=m
+# CONFIG_NET_SCH_PLUG is not set
+
+#
+# Classification
+#
+CONFIG_NET_CLS=y
+CONFIG_NET_CLS_BASIC=m
+CONFIG_NET_CLS_TCINDEX=m
+CONFIG_NET_CLS_ROUTE4=m
+CONFIG_NET_CLS_FW=m
+CONFIG_NET_CLS_U32=m
+CONFIG_CLS_U32_PERF=y
+CONFIG_CLS_U32_MARK=y
+CONFIG_NET_CLS_RSVP=m
+CONFIG_NET_CLS_RSVP6=m
+CONFIG_NET_CLS_FLOW=m
+CONFIG_NET_CLS_CGROUP=y
+CONFIG_NET_EMATCH=y
+CONFIG_NET_EMATCH_STACK=32
+CONFIG_NET_EMATCH_CMP=m
+CONFIG_NET_EMATCH_NBYTE=m
+CONFIG_NET_EMATCH_U32=m
+CONFIG_NET_EMATCH_META=m
+CONFIG_NET_EMATCH_TEXT=m
+CONFIG_NET_CLS_ACT=y
+CONFIG_NET_ACT_POLICE=m
+CONFIG_NET_ACT_GACT=m
+CONFIG_GACT_PROB=y
+CONFIG_NET_ACT_MIRRED=m
+CONFIG_NET_ACT_IPT=m
+CONFIG_NET_ACT_NAT=m
+CONFIG_NET_ACT_PEDIT=m
+CONFIG_NET_ACT_SIMP=m
+CONFIG_NET_ACT_SKBEDIT=m
+CONFIG_NET_ACT_CSUM=m
+CONFIG_NET_CLS_IND=y
+CONFIG_NET_SCH_FIFO=y
+CONFIG_DCB=y
+CONFIG_DNS_RESOLVER=y
+CONFIG_BATMAN_ADV=m
+# CONFIG_BATMAN_ADV_DEBUG is not set
+# CONFIG_OPENVSWITCH is not set
+CONFIG_RPS=y
+CONFIG_RFS_ACCEL=y
+CONFIG_XPS=y
+# CONFIG_NETPRIO_CGROUP is not set
+CONFIG_BQL=y
+
+#
+# Network testing
+#
+CONFIG_NET_PKTGEN=m
+# CONFIG_NET_TCPPROBE is not set
+CONFIG_NET_DROP_MONITOR=y
+CONFIG_HAMRADIO=y
+
+#
+# Packet Radio protocols
+#
+CONFIG_AX25=m
+# CONFIG_AX25_DAMA_SLAVE is not set
+CONFIG_NETROM=m
+CONFIG_ROSE=m
+
+#
+# AX.25 network device drivers
+#
+CONFIG_MKISS=m
+CONFIG_6PACK=m
+CONFIG_BPQETHER=m
+CONFIG_SCC=m
+# CONFIG_SCC_DELAY is not set
+# CONFIG_SCC_TRXECHO is not set
+CONFIG_BAYCOM_SER_FDX=m
+CONFIG_BAYCOM_SER_HDX=m
+CONFIG_BAYCOM_PAR=m
+CONFIG_BAYCOM_EPP=m
+CONFIG_YAM=m
+CONFIG_CAN=m
+CONFIG_CAN_RAW=m
+CONFIG_CAN_BCM=m
+CONFIG_CAN_GW=m
+
+#
+# CAN Device Drivers
+#
+CONFIG_CAN_VCAN=m
+CONFIG_CAN_SLCAN=m
+CONFIG_CAN_DEV=m
+CONFIG_CAN_CALC_BITTIMING=y
+CONFIG_CAN_MCP251X=m
+CONFIG_PCH_CAN=m
+CONFIG_CAN_SJA1000=m
+CONFIG_CAN_SJA1000_ISA=m
+# CONFIG_CAN_SJA1000_PLATFORM is not set
+CONFIG_CAN_EMS_PCMCIA=m
+CONFIG_CAN_EMS_PCI=m
+# CONFIG_CAN_PEAK_PCMCIA is not set
+CONFIG_CAN_PEAK_PCI=m
+# CONFIG_CAN_PEAK_PCIEC is not set
+CONFIG_CAN_KVASER_PCI=m
+CONFIG_CAN_PLX_PCI=m
+CONFIG_CAN_TSCAN1=m
+# CONFIG_CAN_C_CAN is not set
+# CONFIG_CAN_CC770 is not set
+
+#
+# CAN USB interfaces
+#
+CONFIG_CAN_EMS_USB=m
+CONFIG_CAN_ESD_USB2=m
+# CONFIG_CAN_PEAK_USB is not set
+CONFIG_CAN_SOFTING=m
+CONFIG_CAN_SOFTING_CS=m
+# CONFIG_CAN_DEBUG_DEVICES is not set
+CONFIG_IRDA=m
+
+#
+# IrDA protocols
+#
+CONFIG_IRLAN=m
+CONFIG_IRNET=m
+CONFIG_IRCOMM=m
+# CONFIG_IRDA_ULTRA is not set
+
+#
+# IrDA options
+#
+CONFIG_IRDA_CACHE_LAST_LSAP=y
+CONFIG_IRDA_FAST_RR=y
+# CONFIG_IRDA_DEBUG is not set
+
+#
+# Infrared-port device drivers
+#
+
+#
+# SIR device drivers
+#
+CONFIG_IRTTY_SIR=m
+
+#
+# Dongle support
+#
+CONFIG_DONGLE=y
+CONFIG_ESI_DONGLE=m
+CONFIG_ACTISYS_DONGLE=m
+CONFIG_TEKRAM_DONGLE=m
+CONFIG_TOIM3232_DONGLE=m
+CONFIG_LITELINK_DONGLE=m
+CONFIG_MA600_DONGLE=m
+CONFIG_GIRBIL_DONGLE=m
+CONFIG_MCP2120_DONGLE=m
+CONFIG_OLD_BELKIN_DONGLE=m
+CONFIG_ACT200L_DONGLE=m
+CONFIG_KINGSUN_DONGLE=m
+CONFIG_KSDAZZLE_DONGLE=m
+CONFIG_KS959_DONGLE=m
+
+#
+# FIR device drivers
+#
+CONFIG_USB_IRDA=m
+CONFIG_SIGMATEL_FIR=m
+CONFIG_NSC_FIR=m
+CONFIG_WINBOND_FIR=m
+CONFIG_TOSHIBA_FIR=m
+CONFIG_SMC_IRCC_FIR=m
+CONFIG_ALI_FIR=m
+CONFIG_VLSI_FIR=m
+CONFIG_VIA_FIR=m
+CONFIG_MCS_FIR=m
+CONFIG_BT=m
+CONFIG_BT_RFCOMM=m
+CONFIG_BT_RFCOMM_TTY=y
+CONFIG_BT_BNEP=m
+CONFIG_BT_BNEP_MC_FILTER=y
+CONFIG_BT_BNEP_PROTO_FILTER=y
+CONFIG_BT_CMTP=m
+CONFIG_BT_HIDP=m
+
+#
+# Bluetooth device drivers
+#
+CONFIG_BT_HCIBTUSB=m
+CONFIG_BT_HCIBTSDIO=m
+CONFIG_BT_HCIUART=m
+CONFIG_BT_HCIUART_H4=y
+CONFIG_BT_HCIUART_BCSP=y
+CONFIG_BT_HCIUART_ATH3K=y
+CONFIG_BT_HCIUART_LL=y
+CONFIG_BT_HCIBCM203X=m
+CONFIG_BT_HCIBPA10X=m
+CONFIG_BT_HCIBFUSB=m
+CONFIG_BT_HCIDTL1=m
+CONFIG_BT_HCIBT3C=m
+CONFIG_BT_HCIBLUECARD=m
+CONFIG_BT_HCIBTUART=m
+CONFIG_BT_HCIVHCI=m
+CONFIG_BT_MRVL=m
+CONFIG_BT_MRVL_SDIO=m
+CONFIG_BT_ATH3K=m
+CONFIG_AF_RXRPC=m
+# CONFIG_AF_RXRPC_DEBUG is not set
+CONFIG_RXKAD=m
+CONFIG_FIB_RULES=y
+CONFIG_WIRELESS=y
+CONFIG_WIRELESS_EXT=y
+CONFIG_WEXT_CORE=y
+CONFIG_WEXT_PROC=y
+CONFIG_WEXT_SPY=y
+CONFIG_WEXT_PRIV=y
+CONFIG_CFG80211=m
+# CONFIG_NL80211_TESTMODE is not set
+# CONFIG_CFG80211_DEVELOPER_WARNINGS is not set
+# CONFIG_CFG80211_REG_DEBUG is not set
+CONFIG_CFG80211_DEFAULT_PS=y
+# CONFIG_CFG80211_DEBUGFS is not set
+# CONFIG_CFG80211_INTERNAL_REGDB is not set
+CONFIG_CFG80211_WEXT=y
+# CONFIG_WIRELESS_EXT_SYSFS is not set
+CONFIG_LIB80211=m
+CONFIG_LIB80211_CRYPT_WEP=m
+CONFIG_LIB80211_CRYPT_CCMP=m
+CONFIG_LIB80211_CRYPT_TKIP=m
+# CONFIG_LIB80211_DEBUG is not set
+CONFIG_MAC80211=m
+CONFIG_MAC80211_HAS_RC=y
+CONFIG_MAC80211_RC_MINSTREL=y
+CONFIG_MAC80211_RC_MINSTREL_HT=y
+CONFIG_MAC80211_RC_DEFAULT_MINSTREL=y
+CONFIG_MAC80211_RC_DEFAULT="minstrel_ht"
+CONFIG_MAC80211_MESH=y
+CONFIG_MAC80211_LEDS=y
+# CONFIG_MAC80211_DEBUGFS is not set
+# CONFIG_MAC80211_DEBUG_MENU is not set
+CONFIG_WIMAX=m
+CONFIG_WIMAX_DEBUG_LEVEL=8
+CONFIG_RFKILL=m
+CONFIG_RFKILL_LEDS=y
+CONFIG_RFKILL_INPUT=y
+# CONFIG_RFKILL_REGULATOR is not set
+CONFIG_NET_9P=m
+CONFIG_NET_9P_VIRTIO=m
+CONFIG_NET_9P_RDMA=m
+# CONFIG_NET_9P_DEBUG is not set
+# CONFIG_CAIF is not set
+CONFIG_CEPH_LIB=m
+# CONFIG_CEPH_LIB_PRETTYDEBUG is not set
+# CONFIG_CEPH_LIB_USE_DNS_RESOLVER is not set
+CONFIG_NFC=m
+CONFIG_NFC_NCI=m
+# CONFIG_NFC_LLCP is not set
+
+#
+# Near Field Communication (NFC) devices
+#
+# CONFIG_PN544_NFC is not set
+CONFIG_NFC_PN533=m
+
+#
+# Device Drivers
+#
+
+#
+# Generic Driver Options
+#
+CONFIG_UEVENT_HELPER_PATH=""
+CONFIG_DEVTMPFS=y
+# CONFIG_DEVTMPFS_MOUNT is not set
+CONFIG_STANDALONE=y
+CONFIG_PREVENT_FIRMWARE_BUILD=y
+CONFIG_FW_LOADER=y
+# CONFIG_FIRMWARE_IN_KERNEL is not set
+CONFIG_EXTRA_FIRMWARE=""
+# CONFIG_DEBUG_DRIVER is not set
+# CONFIG_DEBUG_DEVRES is not set
+CONFIG_SYS_HYPERVISOR=y
+# CONFIG_GENERIC_CPU_DEVICES is not set
+CONFIG_REGMAP=y
+CONFIG_REGMAP_I2C=m
+CONFIG_DMA_SHARED_BUFFER=y
+CONFIG_CONNECTOR=y
+CONFIG_PROC_EVENTS=y
+CONFIG_MTD=m
+# CONFIG_MTD_TESTS is not set
+CONFIG_MTD_REDBOOT_PARTS=m
+CONFIG_MTD_REDBOOT_DIRECTORY_BLOCK=-1
+# CONFIG_MTD_REDBOOT_PARTS_UNALLOCATED is not set
+# CONFIG_MTD_REDBOOT_PARTS_READONLY is not set
+CONFIG_MTD_AR7_PARTS=m
+
+#
+# User Modules And Translation Layers
+#
+CONFIG_MTD_CHAR=m
+CONFIG_MTD_BLKDEVS=m
+CONFIG_MTD_BLOCK=m
+CONFIG_MTD_BLOCK_RO=m
+CONFIG_FTL=m
+CONFIG_NFTL=m
+CONFIG_NFTL_RW=y
+CONFIG_INFTL=m
+CONFIG_RFD_FTL=m
+CONFIG_SSFDC=m
+# CONFIG_SM_FTL is not set
+CONFIG_MTD_OOPS=m
+CONFIG_MTD_SWAP=m
+
+#
+# RAM/ROM/Flash chip drivers
+#
+CONFIG_MTD_CFI=m
+CONFIG_MTD_JEDECPROBE=m
+CONFIG_MTD_GEN_PROBE=m
+# CONFIG_MTD_CFI_ADV_OPTIONS is not set
+CONFIG_MTD_MAP_BANK_WIDTH_1=y
+CONFIG_MTD_MAP_BANK_WIDTH_2=y
+CONFIG_MTD_MAP_BANK_WIDTH_4=y
+# CONFIG_MTD_MAP_BANK_WIDTH_8 is not set
+# CONFIG_MTD_MAP_BANK_WIDTH_16 is not set
+# CONFIG_MTD_MAP_BANK_WIDTH_32 is not set
+CONFIG_MTD_CFI_I1=y
+CONFIG_MTD_CFI_I2=y
+# CONFIG_MTD_CFI_I4 is not set
+# CONFIG_MTD_CFI_I8 is not set
+CONFIG_MTD_CFI_INTELEXT=m
+CONFIG_MTD_CFI_AMDSTD=m
+CONFIG_MTD_CFI_STAA=m
+CONFIG_MTD_CFI_UTIL=m
+CONFIG_MTD_RAM=m
+CONFIG_MTD_ROM=m
+CONFIG_MTD_ABSENT=m
+
+#
+# Mapping drivers for chip access
+#
+CONFIG_MTD_COMPLEX_MAPPINGS=y
+CONFIG_MTD_PHYSMAP=m
+# CONFIG_MTD_PHYSMAP_COMPAT is not set
+CONFIG_MTD_SC520CDP=m
+CONFIG_MTD_NETSC520=m
+CONFIG_MTD_TS5500=m
+CONFIG_MTD_SBC_GXX=m
+CONFIG_MTD_SCx200_DOCFLASH=m
+# CONFIG_MTD_AMD76XROM is not set
+# CONFIG_MTD_ICHXROM is not set
+# CONFIG_MTD_ESB2ROM is not set
+# CONFIG_MTD_CK804XROM is not set
+# CONFIG_MTD_SCB2_FLASH is not set
+CONFIG_MTD_NETtel=m
+# CONFIG_MTD_L440GX is not set
+CONFIG_MTD_PCI=m
+CONFIG_MTD_PCMCIA=m
+# CONFIG_MTD_PCMCIA_ANONYMOUS is not set
+# CONFIG_MTD_GPIO_ADDR is not set
+CONFIG_MTD_INTEL_VR_NOR=m
+CONFIG_MTD_PLATRAM=m
+# CONFIG_MTD_LATCH_ADDR is not set
+
+#
+# Self-contained MTD device drivers
+#
+CONFIG_MTD_PMC551=m
+# CONFIG_MTD_PMC551_BUGFIX is not set
+# CONFIG_MTD_PMC551_DEBUG is not set
+CONFIG_MTD_DATAFLASH=m
+# CONFIG_MTD_DATAFLASH_WRITE_VERIFY is not set
+# CONFIG_MTD_DATAFLASH_OTP is not set
+CONFIG_MTD_M25P80=m
+CONFIG_M25PXX_USE_FAST_READ=y
+CONFIG_MTD_SST25L=m
+CONFIG_MTD_SLRAM=m
+CONFIG_MTD_PHRAM=m
+CONFIG_MTD_MTDRAM=m
+CONFIG_MTDRAM_TOTAL_SIZE=4096
+CONFIG_MTDRAM_ERASE_SIZE=128
+CONFIG_MTD_BLOCK2MTD=m
+
+#
+# Disk-On-Chip Device Drivers
+#
+CONFIG_MTD_DOC2000=m
+CONFIG_MTD_DOC2001=m
+CONFIG_MTD_DOC2001PLUS=m
+# CONFIG_MTD_DOCG3 is not set
+CONFIG_MTD_DOCPROBE=m
+CONFIG_MTD_DOCECC=m
+# CONFIG_MTD_DOCPROBE_ADVANCED is not set
+CONFIG_MTD_DOCPROBE_ADDRESS=0x0
+CONFIG_MTD_NAND_ECC=m
+# CONFIG_MTD_NAND_ECC_SMC is not set
+CONFIG_MTD_NAND=m
+# CONFIG_MTD_NAND_VERIFY_WRITE is not set
+# CONFIG_MTD_NAND_ECC_BCH is not set
+CONFIG_MTD_SM_COMMON=m
+# CONFIG_MTD_NAND_MUSEUM_IDS is not set
+# CONFIG_MTD_NAND_DENALI is not set
+CONFIG_MTD_NAND_IDS=m
+CONFIG_MTD_NAND_RICOH=m
+CONFIG_MTD_NAND_DISKONCHIP=m
+# CONFIG_MTD_NAND_DISKONCHIP_PROBE_ADVANCED is not set
+CONFIG_MTD_NAND_DISKONCHIP_PROBE_ADDRESS=0
+# CONFIG_MTD_NAND_DISKONCHIP_BBTWRITE is not set
+# CONFIG_MTD_NAND_DOCG4 is not set
+CONFIG_MTD_NAND_CAFE=m
+CONFIG_MTD_NAND_CS553X=m
+CONFIG_MTD_NAND_NANDSIM=m
+CONFIG_MTD_NAND_PLATFORM=m
+CONFIG_MTD_ALAUDA=m
+CONFIG_MTD_ONENAND=m
+CONFIG_MTD_ONENAND_VERIFY_WRITE=y
+CONFIG_MTD_ONENAND_GENERIC=m
+# CONFIG_MTD_ONENAND_OTP is not set
+CONFIG_MTD_ONENAND_2X_PROGRAM=y
+CONFIG_MTD_ONENAND_SIM=m
+
+#
+# LPDDR flash memory drivers
+#
+CONFIG_MTD_LPDDR=m
+CONFIG_MTD_QINFO_PROBE=m
+CONFIG_MTD_UBI=m
+CONFIG_MTD_UBI_WL_THRESHOLD=4096
+CONFIG_MTD_UBI_BEB_RESERVE=1
+# CONFIG_MTD_UBI_GLUEBI is not set
+# CONFIG_MTD_UBI_DEBUG is not set
+CONFIG_PARPORT=m
+CONFIG_PARPORT_PC=m
+CONFIG_PARPORT_SERIAL=m
+# CONFIG_PARPORT_PC_FIFO is not set
+# CONFIG_PARPORT_PC_SUPERIO is not set
+CONFIG_PARPORT_PC_PCMCIA=m
+# CONFIG_PARPORT_GSC is not set
+CONFIG_PARPORT_AX88796=m
+CONFIG_PARPORT_1284=y
+CONFIG_PARPORT_NOT_PC=y
+CONFIG_PNP=y
+# CONFIG_PNP_DEBUG_MESSAGES is not set
+
+#
+# Protocols
+#
+CONFIG_ISAPNP=y
+CONFIG_PNPBIOS=y
+CONFIG_PNPBIOS_PROC_FS=y
+CONFIG_PNPACPI=y
+CONFIG_BLK_DEV=y
+CONFIG_BLK_DEV_FD=m
+CONFIG_BLK_DEV_XD=m
+CONFIG_PARIDE=m
+
+#
+# Parallel IDE high-level drivers
+#
+CONFIG_PARIDE_PD=m
+CONFIG_PARIDE_PCD=m
+CONFIG_PARIDE_PF=m
+CONFIG_PARIDE_PT=m
+CONFIG_PARIDE_PG=m
+
+#
+# Parallel IDE protocol modules
+#
+CONFIG_PARIDE_ATEN=m
+CONFIG_PARIDE_BPCK=m
+CONFIG_PARIDE_BPCK6=m
+CONFIG_PARIDE_COMM=m
+CONFIG_PARIDE_DSTR=m
+CONFIG_PARIDE_FIT2=m
+CONFIG_PARIDE_FIT3=m
+CONFIG_PARIDE_EPAT=m
+# CONFIG_PARIDE_EPATC8 is not set
+CONFIG_PARIDE_EPIA=m
+CONFIG_PARIDE_FRIQ=m
+CONFIG_PARIDE_FRPW=m
+CONFIG_PARIDE_KBIC=m
+CONFIG_PARIDE_KTTI=m
+CONFIG_PARIDE_ON20=m
+CONFIG_PARIDE_ON26=m
+# CONFIG_BLK_DEV_PCIESSD_MTIP32XX is not set
+CONFIG_BLK_CPQ_DA=m
+CONFIG_BLK_CPQ_CISS_DA=m
+CONFIG_CISS_SCSI_TAPE=y
+CONFIG_BLK_DEV_DAC960=m
+CONFIG_BLK_DEV_UMEM=m
+# CONFIG_BLK_DEV_COW_COMMON is not set
+CONFIG_BLK_DEV_LOOP=m
+CONFIG_BLK_DEV_LOOP_MIN_COUNT=8
+# CONFIG_BLK_DEV_CRYPTOLOOP is not set
+CONFIG_BLK_DEV_DRBD=m
+# CONFIG_DRBD_FAULT_INJECTION is not set
+CONFIG_BLK_DEV_NBD=m
+# CONFIG_BLK_DEV_NVME is not set
+CONFIG_BLK_DEV_OSD=m
+CONFIG_BLK_DEV_SX8=m
+# CONFIG_BLK_DEV_UB is not set
+CONFIG_BLK_DEV_RAM=m
+CONFIG_BLK_DEV_RAM_COUNT=16
+CONFIG_BLK_DEV_RAM_SIZE=8192
+# CONFIG_BLK_DEV_XIP is not set
+CONFIG_CDROM_PKTCDVD=m
+CONFIG_CDROM_PKTCDVD_BUFFERS=8
+# CONFIG_CDROM_PKTCDVD_WCACHE is not set
+CONFIG_ATA_OVER_ETH=m
+CONFIG_XEN_BLKDEV_FRONTEND=m
+CONFIG_XEN_BLKDEV_BACKEND=m
+CONFIG_VIRTIO_BLK=m
+# CONFIG_BLK_DEV_HD is not set
+CONFIG_BLK_DEV_RBD=m
+
+#
+# Misc devices
+#
+CONFIG_SENSORS_LIS3LV02D=m
+CONFIG_AD525X_DPOT=m
+CONFIG_AD525X_DPOT_I2C=m
+CONFIG_AD525X_DPOT_SPI=m
+CONFIG_IBM_ASM=m
+CONFIG_PHANTOM=m
+# CONFIG_INTEL_MID_PTI is not set
+CONFIG_SGI_IOC4=m
+CONFIG_TIFM_CORE=m
+CONFIG_TIFM_7XX1=m
+CONFIG_ICS932S401=m
+CONFIG_ENCLOSURE_SERVICES=m
+CONFIG_CS5535_MFGPT=m
+CONFIG_CS5535_MFGPT_DEFAULT_IRQ=7
+CONFIG_CS5535_CLOCK_EVENT_SRC=m
+CONFIG_HP_ILO=m
+CONFIG_APDS9802ALS=m
+CONFIG_ISL29003=m
+CONFIG_ISL29020=m
+CONFIG_SENSORS_TSL2550=m
+CONFIG_SENSORS_BH1780=m
+CONFIG_SENSORS_BH1770=m
+CONFIG_SENSORS_APDS990X=m
+CONFIG_HMC6352=m
+CONFIG_DS1682=m
+CONFIG_TI_DAC7512=m
+CONFIG_VMWARE_BALLOON=m
+CONFIG_BMP085=m
+CONFIG_PCH_PHUB=m
+# CONFIG_USB_SWITCH_FSA9480 is not set
+CONFIG_C2PORT=m
+CONFIG_C2PORT_DURAMAR_2150=m
+
+#
+# EEPROM support
+#
+CONFIG_EEPROM_AT24=m
+CONFIG_EEPROM_AT25=m
+CONFIG_EEPROM_LEGACY=m
+CONFIG_EEPROM_MAX6875=m
+CONFIG_EEPROM_93CX6=m
+# CONFIG_EEPROM_93XX46 is not set
+CONFIG_CB710_CORE=m
+# CONFIG_CB710_DEBUG is not set
+CONFIG_CB710_DEBUG_ASSUMPTIONS=y
+CONFIG_IWMC3200TOP=m
+# CONFIG_IWMC3200TOP_DEBUG is not set
+# CONFIG_IWMC3200TOP_DEBUGFS is not set
+
+#
+# Texas Instruments shared transport line discipline
+#
+# CONFIG_TI_ST is not set
+CONFIG_SENSORS_LIS3_I2C=m
+
+#
+# Altera FPGA firmware download module
+#
+# CONFIG_ALTERA_STAPL is not set
+CONFIG_HAVE_IDE=y
+# CONFIG_IDE is not set
+
+#
+# SCSI device support
+#
+CONFIG_SCSI_MOD=m
+CONFIG_RAID_ATTRS=m
+CONFIG_SCSI=m
+CONFIG_SCSI_DMA=y
+CONFIG_SCSI_TGT=m
+CONFIG_SCSI_NETLINK=y
+# CONFIG_SCSI_PROC_FS is not set
+
+#
+# SCSI support type (disk, tape, CD-ROM)
+#
+CONFIG_BLK_DEV_SD=m
+CONFIG_CHR_DEV_ST=m
+CONFIG_CHR_DEV_OSST=m
+CONFIG_BLK_DEV_SR=m
+CONFIG_BLK_DEV_SR_VENDOR=y
+CONFIG_CHR_DEV_SG=m
+CONFIG_CHR_DEV_SCH=m
+CONFIG_SCSI_ENCLOSURE=m
+CONFIG_SCSI_MULTI_LUN=y
+CONFIG_SCSI_CONSTANTS=y
+CONFIG_SCSI_LOGGING=y
+CONFIG_SCSI_SCAN_ASYNC=y
+CONFIG_SCSI_WAIT_SCAN=m
+
+#
+# SCSI Transports
+#
+CONFIG_SCSI_SPI_ATTRS=m
+CONFIG_SCSI_FC_ATTRS=m
+CONFIG_SCSI_FC_TGT_ATTRS=y
+CONFIG_SCSI_ISCSI_ATTRS=m
+CONFIG_SCSI_SAS_ATTRS=m
+CONFIG_SCSI_SAS_LIBSAS=m
+CONFIG_SCSI_SAS_ATA=y
+CONFIG_SCSI_SAS_HOST_SMP=y
+CONFIG_SCSI_SRP_ATTRS=m
+CONFIG_SCSI_SRP_TGT_ATTRS=y
+CONFIG_SCSI_LOWLEVEL=y
+CONFIG_ISCSI_TCP=m
+CONFIG_ISCSI_BOOT_SYSFS=m
+CONFIG_SCSI_CXGB3_ISCSI=m
+CONFIG_SCSI_CXGB4_ISCSI=m
+CONFIG_SCSI_BNX2_ISCSI=m
+CONFIG_SCSI_BNX2X_FCOE=m
+CONFIG_BE2ISCSI=m
+CONFIG_BLK_DEV_3W_XXXX_RAID=m
+CONFIG_SCSI_HPSA=m
+CONFIG_SCSI_3W_9XXX=m
+CONFIG_SCSI_3W_SAS=m
+CONFIG_SCSI_7000FASST=m
+CONFIG_SCSI_ACARD=m
+CONFIG_SCSI_AHA152X=m
+CONFIG_SCSI_AHA1542=m
+CONFIG_SCSI_AACRAID=m
+CONFIG_SCSI_AIC7XXX=m
+CONFIG_AIC7XXX_CMDS_PER_DEVICE=8
+CONFIG_AIC7XXX_RESET_DELAY_MS=15000
+CONFIG_AIC7XXX_DEBUG_ENABLE=y
+CONFIG_AIC7XXX_DEBUG_MASK=0
+CONFIG_AIC7XXX_REG_PRETTY_PRINT=y
+CONFIG_SCSI_AIC7XXX_OLD=m
+CONFIG_SCSI_AIC79XX=m
+CONFIG_AIC79XX_CMDS_PER_DEVICE=32
+CONFIG_AIC79XX_RESET_DELAY_MS=15000
+CONFIG_AIC79XX_DEBUG_ENABLE=y
+CONFIG_AIC79XX_DEBUG_MASK=0
+CONFIG_AIC79XX_REG_PRETTY_PRINT=y
+CONFIG_SCSI_AIC94XX=m
+# CONFIG_AIC94XX_DEBUG is not set
+CONFIG_SCSI_MVSAS=m
+# CONFIG_SCSI_MVSAS_DEBUG is not set
+# CONFIG_SCSI_MVSAS_TASKLET is not set
+CONFIG_SCSI_MVUMI=m
+CONFIG_SCSI_DPT_I2O=m
+CONFIG_SCSI_ADVANSYS=m
+CONFIG_SCSI_IN2000=m
+CONFIG_SCSI_ARCMSR=m
+CONFIG_MEGARAID_NEWGEN=y
+CONFIG_MEGARAID_MM=m
+CONFIG_MEGARAID_MAILBOX=m
+CONFIG_MEGARAID_LEGACY=m
+CONFIG_MEGARAID_SAS=m
+CONFIG_SCSI_MPT2SAS=m
+CONFIG_SCSI_MPT2SAS_MAX_SGE=128
+# CONFIG_SCSI_MPT2SAS_LOGGING is not set
+# CONFIG_SCSI_UFSHCD is not set
+CONFIG_SCSI_HPTIOP=m
+CONFIG_SCSI_BUSLOGIC=m
+# CONFIG_SCSI_FLASHPOINT is not set
+CONFIG_VMWARE_PVSCSI=m
+CONFIG_HYPERV_STORAGE=m
+CONFIG_LIBFC=m
+CONFIG_LIBFCOE=m
+CONFIG_FCOE=m
+CONFIG_FCOE_FNIC=m
+CONFIG_SCSI_DMX3191D=m
+CONFIG_SCSI_DTC3280=m
+CONFIG_SCSI_EATA=m
+CONFIG_SCSI_EATA_TAGGED_QUEUE=y
+CONFIG_SCSI_EATA_LINKED_COMMANDS=y
+CONFIG_SCSI_EATA_MAX_TAGS=16
+CONFIG_SCSI_FUTURE_DOMAIN=m
+CONFIG_SCSI_GDTH=m
+CONFIG_SCSI_ISCI=m
+# CONFIG_SCSI_GENERIC_NCR5380 is not set
+# CONFIG_SCSI_GENERIC_NCR5380_MMIO is not set
+CONFIG_SCSI_IPS=m
+CONFIG_SCSI_INITIO=m
+# CONFIG_SCSI_INIA100 is not set
+CONFIG_SCSI_PPA=m
+CONFIG_SCSI_IMM=m
+# CONFIG_SCSI_IZIP_EPP16 is not set
+# CONFIG_SCSI_IZIP_SLOW_CTR is not set
+CONFIG_SCSI_NCR53C406A=m
+CONFIG_SCSI_STEX=m
+CONFIG_SCSI_SYM53C8XX_2=m
+CONFIG_SCSI_SYM53C8XX_DMA_ADDRESSING_MODE=1
+CONFIG_SCSI_SYM53C8XX_DEFAULT_TAGS=16
+CONFIG_SCSI_SYM53C8XX_MAX_TAGS=64
+CONFIG_SCSI_SYM53C8XX_MMIO=y
+CONFIG_SCSI_IPR=m
+# CONFIG_SCSI_IPR_TRACE is not set
+# CONFIG_SCSI_IPR_DUMP is not set
+CONFIG_SCSI_PAS16=m
+CONFIG_SCSI_QLOGIC_FAS=m
+CONFIG_SCSI_QLOGIC_1280=m
+CONFIG_SCSI_QLA_FC=m
+CONFIG_SCSI_QLA_ISCSI=m
+CONFIG_SCSI_LPFC=m
+# CONFIG_SCSI_LPFC_DEBUG_FS is not set
+CONFIG_SCSI_SYM53C416=m
+CONFIG_SCSI_DC395x=m
+CONFIG_SCSI_DC390T=m
+CONFIG_SCSI_T128=m
+CONFIG_SCSI_U14_34F=m
+CONFIG_SCSI_U14_34F_TAGGED_QUEUE=y
+CONFIG_SCSI_U14_34F_LINKED_COMMANDS=y
+CONFIG_SCSI_U14_34F_MAX_TAGS=8
+CONFIG_SCSI_ULTRASTOR=m
+CONFIG_SCSI_NSP32=m
+CONFIG_SCSI_DEBUG=m
+CONFIG_SCSI_PMCRAID=m
+CONFIG_SCSI_PM8001=m
+CONFIG_SCSI_SRP=m
+CONFIG_SCSI_BFA_FC=m
+CONFIG_SCSI_VIRTIO=m
+CONFIG_SCSI_LOWLEVEL_PCMCIA=y
+CONFIG_PCMCIA_AHA152X=m
+CONFIG_PCMCIA_FDOMAIN=m
+CONFIG_PCMCIA_NINJA_SCSI=m
+CONFIG_PCMCIA_QLOGIC=m
+CONFIG_PCMCIA_SYM53C500=m
+CONFIG_SCSI_DH=m
+CONFIG_SCSI_DH_RDAC=m
+CONFIG_SCSI_DH_HP_SW=m
+CONFIG_SCSI_DH_EMC=m
+CONFIG_SCSI_DH_ALUA=m
+CONFIG_SCSI_OSD_INITIATOR=m
+CONFIG_SCSI_OSD_ULD=m
+CONFIG_SCSI_OSD_DPRINT_SENSE=1
+# CONFIG_SCSI_OSD_DEBUG is not set
+CONFIG_ATA=m
+# CONFIG_ATA_NONSTANDARD is not set
+CONFIG_ATA_VERBOSE_ERROR=y
+CONFIG_ATA_ACPI=y
+CONFIG_SATA_PMP=y
+
+#
+# Controllers with non-SFF native interface
+#
+CONFIG_SATA_AHCI=m
+# CONFIG_SATA_AHCI_PLATFORM is not set
+# CONFIG_SATA_INIC162X is not set
+CONFIG_SATA_ACARD_AHCI=m
+CONFIG_SATA_SIL24=m
+CONFIG_ATA_SFF=y
+
+#
+# SFF controllers with custom DMA interface
+#
+CONFIG_PDC_ADMA=m
+CONFIG_SATA_QSTOR=m
+CONFIG_SATA_SX4=m
+CONFIG_ATA_BMDMA=y
+
+#
+# SATA SFF controllers with BMDMA
+#
+CONFIG_ATA_PIIX=m
+CONFIG_SATA_MV=m
+CONFIG_SATA_NV=m
+CONFIG_SATA_PROMISE=m
+CONFIG_SATA_SIL=m
+CONFIG_SATA_SIS=m
+CONFIG_SATA_SVW=m
+CONFIG_SATA_ULI=m
+CONFIG_SATA_VIA=m
+CONFIG_SATA_VITESSE=m
+
+#
+# PATA SFF controllers with BMDMA
+#
+CONFIG_PATA_ALI=m
+CONFIG_PATA_AMD=m
+CONFIG_PATA_ARASAN_CF=m
+CONFIG_PATA_ARTOP=m
+CONFIG_PATA_ATIIXP=m
+CONFIG_PATA_ATP867X=m
+CONFIG_PATA_CMD64X=m
+CONFIG_PATA_CS5520=m
+CONFIG_PATA_CS5530=m
+CONFIG_PATA_CS5535=m
+CONFIG_PATA_CS5536=m
+# CONFIG_PATA_CYPRESS is not set
+CONFIG_PATA_EFAR=m
+CONFIG_PATA_HPT366=m
+CONFIG_PATA_HPT37X=m
+# CONFIG_PATA_HPT3X2N is not set
+# CONFIG_PATA_HPT3X3 is not set
+CONFIG_PATA_IT8213=m
+CONFIG_PATA_IT821X=m
+CONFIG_PATA_JMICRON=m
+CONFIG_PATA_MARVELL=m
+CONFIG_PATA_NETCELL=m
+CONFIG_PATA_NINJA32=m
+CONFIG_PATA_NS87415=m
+CONFIG_PATA_OLDPIIX=m
+# CONFIG_PATA_OPTIDMA is not set
+CONFIG_PATA_PDC2027X=m
+CONFIG_PATA_PDC_OLD=m
+# CONFIG_PATA_RADISYS is not set
+CONFIG_PATA_RDC=m
+CONFIG_PATA_SC1200=m
+CONFIG_PATA_SCH=m
+CONFIG_PATA_SERVERWORKS=m
+CONFIG_PATA_SIL680=m
+CONFIG_PATA_SIS=m
+CONFIG_PATA_TOSHIBA=m
+CONFIG_PATA_TRIFLEX=m
+CONFIG_PATA_VIA=m
+# CONFIG_PATA_WINBOND is not set
+
+#
+# PIO-only SFF controllers
+#
+# CONFIG_PATA_CMD640_PCI is not set
+CONFIG_PATA_ISAPNP=m
+CONFIG_PATA_MPIIX=m
+CONFIG_PATA_NS87410=m
+CONFIG_PATA_OPTI=m
+CONFIG_PATA_PCMCIA=m
+# CONFIG_PATA_QDI is not set
+CONFIG_PATA_RZ1000=m
+# CONFIG_PATA_WINBOND_VLB is not set
+
+#
+# Generic fallback / legacy drivers
+#
+# CONFIG_PATA_ACPI is not set
+CONFIG_ATA_GENERIC=m
+CONFIG_PATA_LEGACY=m
+CONFIG_MD=y
+CONFIG_BLK_DEV_MD=m
+CONFIG_MD_LINEAR=m
+CONFIG_MD_RAID0=m
+CONFIG_MD_RAID1=m
+CONFIG_MD_RAID10=m
+CONFIG_MD_RAID456=m
+# CONFIG_MULTICORE_RAID456 is not set
+CONFIG_MD_MULTIPATH=m
+CONFIG_MD_FAULTY=m
+CONFIG_BLK_DEV_DM_BUILTIN=y
+CONFIG_BLK_DEV_DM=m
+# CONFIG_DM_DEBUG is not set
+CONFIG_DM_BUFIO=m
+CONFIG_DM_PERSISTENT_DATA=m
+CONFIG_DM_CRYPT=m
+CONFIG_DM_SNAPSHOT=m
+CONFIG_DM_THIN_PROVISIONING=m
+# CONFIG_DM_DEBUG_BLOCK_STACK_TRACING is not set
+# CONFIG_DM_DEBUG_SPACE_MAPS is not set
+CONFIG_DM_MIRROR=m
+CONFIG_DM_RAID=m
+CONFIG_DM_LOG_USERSPACE=m
+CONFIG_DM_ZERO=m
+CONFIG_DM_MULTIPATH=m
+CONFIG_DM_MULTIPATH_QL=m
+CONFIG_DM_MULTIPATH_ST=m
+CONFIG_DM_DELAY=m
+CONFIG_DM_UEVENT=y
+CONFIG_DM_FLAKEY=m
+# CONFIG_DM_VERITY is not set
+CONFIG_TARGET_CORE=m
+CONFIG_TCM_IBLOCK=m
+CONFIG_TCM_FILEIO=m
+CONFIG_TCM_PSCSI=m
+CONFIG_LOOPBACK_TARGET=m
+CONFIG_TCM_FC=m
+CONFIG_ISCSI_TARGET=m
+CONFIG_FUSION=y
+CONFIG_FUSION_SPI=m
+CONFIG_FUSION_FC=m
+CONFIG_FUSION_SAS=m
+CONFIG_FUSION_MAX_SGE=128
+CONFIG_FUSION_CTL=m
+CONFIG_FUSION_LAN=m
+# CONFIG_FUSION_LOGGING is not set
+
+#
+# IEEE 1394 (FireWire) support
+#
+CONFIG_FIREWIRE=m
+CONFIG_FIREWIRE_OHCI=m
+CONFIG_FIREWIRE_SBP2=m
+CONFIG_FIREWIRE_NET=m
+CONFIG_FIREWIRE_NOSY=m
+CONFIG_I2O=m
+CONFIG_I2O_LCT_NOTIFY_ON_CHANGES=y
+CONFIG_I2O_EXT_ADAPTEC=y
+CONFIG_I2O_EXT_ADAPTEC_DMA64=y
+CONFIG_I2O_CONFIG=m
+CONFIG_I2O_CONFIG_OLD_IOCTL=y
+CONFIG_I2O_BUS=m
+CONFIG_I2O_BLOCK=m
+CONFIG_I2O_SCSI=m
+CONFIG_I2O_PROC=m
+# CONFIG_MACINTOSH_DRIVERS is not set
+CONFIG_NETDEVICES=y
+CONFIG_NET_CORE=y
+CONFIG_BONDING=m
+CONFIG_DUMMY=m
+CONFIG_EQUALIZER=m
+CONFIG_NET_FC=y
+CONFIG_MII=m
+CONFIG_IEEE802154_DRIVERS=m
+CONFIG_IEEE802154_FAKEHARD=m
+CONFIG_IFB=m
+# CONFIG_NET_TEAM is not set
+CONFIG_MACVLAN=m
+CONFIG_MACVTAP=m
+CONFIG_NETCONSOLE=m
+CONFIG_NETCONSOLE_DYNAMIC=y
+CONFIG_NETPOLL=y
+# CONFIG_NETPOLL_TRAP is not set
+CONFIG_NET_POLL_CONTROLLER=y
+CONFIG_TUN=m
+CONFIG_VETH=m
+CONFIG_VIRTIO_NET=m
+CONFIG_SUNGEM_PHY=m
+CONFIG_ARCNET=m
+CONFIG_ARCNET_1201=m
+CONFIG_ARCNET_1051=m
+CONFIG_ARCNET_RAW=m
+CONFIG_ARCNET_CAP=m
+CONFIG_ARCNET_COM90xx=m
+CONFIG_ARCNET_COM90xxIO=m
+CONFIG_ARCNET_RIM_I=m
+CONFIG_ARCNET_COM20020=m
+CONFIG_ARCNET_COM20020_ISA=m
+CONFIG_ARCNET_COM20020_PCI=m
+CONFIG_ARCNET_COM20020_CS=m
+CONFIG_ATM_DRIVERS=y
+CONFIG_ATM_DUMMY=m
+CONFIG_ATM_TCP=m
+CONFIG_ATM_LANAI=m
+CONFIG_ATM_ENI=m
+# CONFIG_ATM_ENI_DEBUG is not set
+# CONFIG_ATM_ENI_TUNE_BURST is not set
+CONFIG_ATM_FIRESTREAM=m
+CONFIG_ATM_ZATM=m
+# CONFIG_ATM_ZATM_DEBUG is not set
+CONFIG_ATM_NICSTAR=m
+# CONFIG_ATM_NICSTAR_USE_SUNI is not set
+# CONFIG_ATM_NICSTAR_USE_IDT77105 is not set
+CONFIG_ATM_IDT77252=m
+# CONFIG_ATM_IDT77252_DEBUG is not set
+# CONFIG_ATM_IDT77252_RCV_ALL is not set
+CONFIG_ATM_IDT77252_USE_SUNI=y
+CONFIG_ATM_AMBASSADOR=m
+# CONFIG_ATM_AMBASSADOR_DEBUG is not set
+CONFIG_ATM_HORIZON=m
+# CONFIG_ATM_HORIZON_DEBUG is not set
+CONFIG_ATM_IA=m
+# CONFIG_ATM_IA_DEBUG is not set
+CONFIG_ATM_FORE200E=m
+# CONFIG_ATM_FORE200E_USE_TASKLET is not set
+CONFIG_ATM_FORE200E_TX_RETRY=16
+CONFIG_ATM_FORE200E_DEBUG=0
+CONFIG_ATM_HE=m
+CONFIG_ATM_HE_USE_SUNI=y
+CONFIG_ATM_SOLOS=m
+
+#
+# CAIF transport drivers
+#
+CONFIG_ETHERNET=y
+CONFIG_MDIO=m
+CONFIG_NET_VENDOR_3COM=y
+CONFIG_EL1=m
+CONFIG_EL3=m
+CONFIG_3C515=m
+CONFIG_PCMCIA_3C574=m
+CONFIG_PCMCIA_3C589=m
+CONFIG_VORTEX=m
+CONFIG_TYPHOON=m
+CONFIG_NET_VENDOR_ADAPTEC=y
+CONFIG_ADAPTEC_STARFIRE=m
+CONFIG_NET_VENDOR_ALTEON=y
+CONFIG_ACENIC=m
+# CONFIG_ACENIC_OMIT_TIGON_I is not set
+CONFIG_NET_VENDOR_AMD=y
+CONFIG_AMD8111_ETH=m
+CONFIG_LANCE=m
+CONFIG_PCNET32=m
+CONFIG_DEPCA=m
+CONFIG_PCMCIA_NMCLAN=m
+CONFIG_NI65=m
+CONFIG_NET_VENDOR_ATHEROS=y
+CONFIG_ATL2=m
+CONFIG_ATL1=m
+CONFIG_ATL1E=m
+CONFIG_ATL1C=m
+CONFIG_NET_VENDOR_BROADCOM=y
+CONFIG_B44=m
+CONFIG_B44_PCI_AUTOSELECT=y
+CONFIG_B44_PCICORE_AUTOSELECT=y
+CONFIG_B44_PCI=y
+CONFIG_BNX2=m
+CONFIG_CNIC=m
+CONFIG_TIGON3=m
+CONFIG_BNX2X=m
+CONFIG_NET_VENDOR_BROCADE=y
+CONFIG_BNA=m
+# CONFIG_NET_CALXEDA_XGMAC is not set
+CONFIG_NET_VENDOR_CHELSIO=y
+CONFIG_CHELSIO_T1=m
+CONFIG_CHELSIO_T1_1G=y
+CONFIG_CHELSIO_T3=m
+CONFIG_CHELSIO_T4=m
+CONFIG_CHELSIO_T4VF=m
+CONFIG_NET_VENDOR_CIRRUS=y
+CONFIG_CS89x0=m
+# CONFIG_CS89x0_PLATFORM is not set
+CONFIG_NET_VENDOR_CISCO=y
+CONFIG_ENIC=m
+CONFIG_DNET=m
+CONFIG_NET_VENDOR_DEC=y
+CONFIG_EWRK3=m
+CONFIG_NET_TULIP=y
+CONFIG_DE2104X=m
+CONFIG_DE2104X_DSL=0
+CONFIG_TULIP=m
+# CONFIG_TULIP_MWI is not set
+# CONFIG_TULIP_MMIO is not set
+CONFIG_TULIP_NAPI=y
+CONFIG_TULIP_NAPI_HW_MITIGATION=y
+# CONFIG_DE4X5 is not set
+CONFIG_WINBOND_840=m
+CONFIG_DM9102=m
+CONFIG_ULI526X=m
+CONFIG_PCMCIA_XIRCOM=m
+CONFIG_NET_VENDOR_DLINK=y
+CONFIG_DE600=m
+CONFIG_DE620=m
+CONFIG_DL2K=m
+CONFIG_SUNDANCE=m
+# CONFIG_SUNDANCE_MMIO is not set
+CONFIG_NET_VENDOR_EMULEX=y
+CONFIG_BE2NET=m
+CONFIG_NET_VENDOR_EXAR=y
+CONFIG_S2IO=m
+CONFIG_VXGE=m
+# CONFIG_VXGE_DEBUG_TRACE_ALL is not set
+CONFIG_NET_VENDOR_FUJITSU=y
+CONFIG_AT1700=m
+CONFIG_PCMCIA_FMVJ18X=m
+CONFIG_ETH16I=m
+CONFIG_NET_VENDOR_HP=y
+CONFIG_HP100=m
+CONFIG_NET_VENDOR_INTEL=y
+CONFIG_E100=m
+CONFIG_E1000=m
+CONFIG_E1000E=m
+CONFIG_IGB=m
+CONFIG_IGB_DCA=y
+CONFIG_IGBVF=m
+CONFIG_IXGB=m
+CONFIG_IXGBE=m
+CONFIG_IXGBE_DCA=y
+CONFIG_IXGBE_DCB=y
+CONFIG_IXGBEVF=m
+CONFIG_NET_VENDOR_I825XX=y
+CONFIG_ELPLUS=m
+CONFIG_EL16=m
+CONFIG_APRICOT=m
+CONFIG_EEXPRESS=m
+CONFIG_EEXPRESS_PRO=m
+CONFIG_LP486E=m
+CONFIG_NI52=m
+CONFIG_ZNET=m
+CONFIG_IP1000=m
+CONFIG_JME=m
+CONFIG_NET_VENDOR_MARVELL=y
+CONFIG_SKGE=m
+# CONFIG_SKGE_DEBUG is not set
+CONFIG_SKGE_GENESIS=y
+CONFIG_SKY2=m
+# CONFIG_SKY2_DEBUG is not set
+CONFIG_NET_VENDOR_MELLANOX=y
+CONFIG_MLX4_EN=m
+CONFIG_MLX4_CORE=m
+CONFIG_MLX4_DEBUG=y
+CONFIG_NET_VENDOR_MICREL=y
+CONFIG_KS8842=m
+CONFIG_KS8851=m
+CONFIG_KS8851_MLL=m
+CONFIG_KSZ884X_PCI=m
+CONFIG_NET_VENDOR_MICROCHIP=y
+CONFIG_ENC28J60=m
+# CONFIG_ENC28J60_WRITEVERIFY is not set
+CONFIG_NET_VENDOR_MYRI=y
+CONFIG_MYRI10GE=m
+CONFIG_MYRI10GE_DCA=y
+CONFIG_FEALNX=m
+CONFIG_NET_VENDOR_NATSEMI=y
+CONFIG_NATSEMI=m
+CONFIG_NS83820=m
+CONFIG_NET_VENDOR_8390=y
+CONFIG_EL2=m
+CONFIG_AC3200=m
+CONFIG_PCMCIA_AXNET=m
+CONFIG_E2100=m
+CONFIG_HPLAN_PLUS=m
+CONFIG_HPLAN=m
+CONFIG_NE2000=m
+CONFIG_NE2K_PCI=m
+CONFIG_PCMCIA_PCNET=m
+CONFIG_ULTRA=m
+CONFIG_WD80x3=m
+CONFIG_NET_VENDOR_NVIDIA=y
+CONFIG_FORCEDETH=m
+CONFIG_NET_VENDOR_OKI=y
+CONFIG_PCH_GBE=m
+CONFIG_ETHOC=m
+CONFIG_NET_PACKET_ENGINE=y
+CONFIG_HAMACHI=m
+CONFIG_YELLOWFIN=m
+CONFIG_NET_VENDOR_QLOGIC=y
+CONFIG_QLA3XXX=m
+CONFIG_QLCNIC=m
+CONFIG_QLGE=m
+CONFIG_NETXEN_NIC=m
+CONFIG_NET_VENDOR_RACAL=y
+CONFIG_NET_VENDOR_REALTEK=y
+CONFIG_ATP=m
+CONFIG_8139CP=m
+CONFIG_8139TOO=m
+CONFIG_8139TOO_PIO=y
+CONFIG_8139TOO_TUNE_TWISTER=y
+CONFIG_8139TOO_8129=y
+# CONFIG_8139_OLD_RX_RESET is not set
+CONFIG_R8169=m
+CONFIG_NET_VENDOR_RDC=y
+CONFIG_R6040=m
+CONFIG_NET_VENDOR_SEEQ=y
+CONFIG_SEEQ8005=m
+CONFIG_NET_VENDOR_SILAN=y
+CONFIG_SC92031=m
+CONFIG_NET_VENDOR_SIS=y
+CONFIG_SIS900=m
+CONFIG_SIS190=m
+CONFIG_SFC=m
+CONFIG_SFC_MTD=y
+# CONFIG_SFC_MCDI_MON is not set
+# CONFIG_SFC_SRIOV is not set
+CONFIG_NET_VENDOR_SMSC=y
+CONFIG_SMC9194=m
+CONFIG_PCMCIA_SMC91C92=m
+CONFIG_EPIC100=m
+CONFIG_SMSC9420=m
+CONFIG_NET_VENDOR_STMICRO=y
+# CONFIG_STMMAC_ETH is not set
+CONFIG_NET_VENDOR_SUN=y
+CONFIG_HAPPYMEAL=m
+CONFIG_SUNGEM=m
+CONFIG_CASSINI=m
+CONFIG_NIU=m
+CONFIG_NET_VENDOR_TEHUTI=y
+CONFIG_TEHUTI=m
+CONFIG_NET_VENDOR_TI=y
+CONFIG_TLAN=m
+CONFIG_NET_VENDOR_VIA=y
+CONFIG_VIA_RHINE=m
+# CONFIG_VIA_RHINE_MMIO is not set
+CONFIG_VIA_VELOCITY=m
+CONFIG_NET_VENDOR_XIRCOM=y
+CONFIG_PCMCIA_XIRC2PS=m
+CONFIG_FDDI=y
+CONFIG_DEFXX=m
+# CONFIG_DEFXX_MMIO is not set
+CONFIG_SKFP=m
+CONFIG_HIPPI=y
+CONFIG_ROADRUNNER=m
+# CONFIG_ROADRUNNER_LARGE_RINGS is not set
+CONFIG_NET_SB1000=m
+CONFIG_PHYLIB=m
+
+#
+# MII PHY device drivers
+#
+# CONFIG_AMD_PHY is not set
+CONFIG_MARVELL_PHY=m
+CONFIG_DAVICOM_PHY=m
+CONFIG_QSEMI_PHY=m
+CONFIG_LXT_PHY=m
+CONFIG_CICADA_PHY=m
+CONFIG_VITESSE_PHY=m
+CONFIG_SMSC_PHY=m
+CONFIG_BROADCOM_PHY=m
+CONFIG_ICPLUS_PHY=m
+CONFIG_REALTEK_PHY=m
+CONFIG_NATIONAL_PHY=m
+CONFIG_STE10XP=m
+CONFIG_LSI_ET1011C_PHY=m
+CONFIG_MICREL_PHY=m
+CONFIG_MDIO_BITBANG=m
+# CONFIG_MDIO_GPIO is not set
+# CONFIG_MICREL_KS8995MA is not set
+CONFIG_PLIP=m
+CONFIG_PPP=m
+CONFIG_PPP_BSDCOMP=m
+CONFIG_PPP_DEFLATE=m
+CONFIG_PPP_FILTER=y
+CONFIG_PPP_MPPE=m
+CONFIG_PPP_MULTILINK=y
+CONFIG_PPPOATM=m
+CONFIG_PPPOE=m
+CONFIG_PPTP=m
+CONFIG_PPPOL2TP=m
+CONFIG_PPP_ASYNC=m
+CONFIG_PPP_SYNC_TTY=m
+CONFIG_SLIP=m
+CONFIG_SLHC=m
+CONFIG_SLIP_COMPRESSED=y
+CONFIG_SLIP_SMART=y
+CONFIG_SLIP_MODE_SLIP6=y
+CONFIG_TR=y
+CONFIG_WANT_LLC=y
+CONFIG_PCMCIA_IBMTR=m
+CONFIG_IBMTR=m
+CONFIG_IBMOL=m
+CONFIG_IBMLS=m
+CONFIG_3C359=m
+CONFIG_TMS380TR=m
+CONFIG_TMSPCI=m
+CONFIG_SKISA=m
+CONFIG_PROTEON=m
+CONFIG_ABYSS=m
+CONFIG_SMCTR=m
+
+#
+# USB Network Adapters
+#
+CONFIG_USB_CATC=m
+CONFIG_USB_KAWETH=m
+CONFIG_USB_PEGASUS=m
+CONFIG_USB_RTL8150=m
+CONFIG_USB_USBNET=m
+CONFIG_USB_NET_AX8817X=m
+CONFIG_USB_NET_CDCETHER=m
+CONFIG_USB_NET_CDC_EEM=m
+CONFIG_USB_NET_CDC_NCM=m
+CONFIG_USB_NET_DM9601=m
+CONFIG_USB_NET_SMSC75XX=m
+CONFIG_USB_NET_SMSC95XX=m
+CONFIG_USB_NET_GL620A=m
+CONFIG_USB_NET_NET1080=m
+CONFIG_USB_NET_PLUSB=m
+CONFIG_USB_NET_MCS7830=m
+CONFIG_USB_NET_RNDIS_HOST=m
+CONFIG_USB_NET_CDC_SUBSET=m
+CONFIG_USB_ALI_M5632=y
+CONFIG_USB_AN2720=y
+CONFIG_USB_BELKIN=y
+CONFIG_USB_ARMLINUX=y
+CONFIG_USB_EPSON2888=y
+CONFIG_USB_KC2190=y
+CONFIG_USB_NET_ZAURUS=m
+CONFIG_USB_NET_CX82310_ETH=m
+CONFIG_USB_NET_KALMIA=m
+# CONFIG_USB_NET_QMI_WWAN is not set
+CONFIG_USB_HSO=m
+CONFIG_USB_NET_INT51X1=m
+CONFIG_USB_CDC_PHONET=m
+CONFIG_USB_IPHETH=m
+CONFIG_USB_SIERRA_NET=m
+CONFIG_USB_VL600=m
+CONFIG_WLAN=y
+CONFIG_PCMCIA_RAYCS=m
+CONFIG_LIBERTAS_THINFIRM=m
+# CONFIG_LIBERTAS_THINFIRM_DEBUG is not set
+CONFIG_LIBERTAS_THINFIRM_USB=m
+CONFIG_AIRO=m
+CONFIG_ATMEL=m
+CONFIG_PCI_ATMEL=m
+CONFIG_PCMCIA_ATMEL=m
+CONFIG_AT76C50X_USB=m
+CONFIG_AIRO_CS=m
+CONFIG_PCMCIA_WL3501=m
+# CONFIG_PRISM54 is not set
+CONFIG_USB_ZD1201=m
+CONFIG_USB_NET_RNDIS_WLAN=m
+CONFIG_RTL8180=m
+CONFIG_RTL8187=m
+CONFIG_RTL8187_LEDS=y
+CONFIG_ADM8211=m
+CONFIG_MAC80211_HWSIM=m
+CONFIG_MWL8K=m
+CONFIG_ATH_COMMON=m
+# CONFIG_ATH_DEBUG is not set
+CONFIG_ATH5K=m
+# CONFIG_ATH5K_DEBUG is not set
+# CONFIG_ATH5K_TRACER is not set
+CONFIG_ATH5K_PCI=y
+CONFIG_ATH9K_HW=m
+CONFIG_ATH9K_COMMON=m
+# CONFIG_ATH9K_BTCOEX_SUPPORT is not set
+CONFIG_ATH9K=m
+CONFIG_ATH9K_PCI=y
+# CONFIG_ATH9K_AHB is not set
+# CONFIG_ATH9K_DEBUGFS is not set
+# CONFIG_ATH9K_LEGACY_RATE_CONTROL is not set
+CONFIG_ATH9K_HTC=m
+# CONFIG_ATH9K_HTC_DEBUGFS is not set
+CONFIG_CARL9170=m
+CONFIG_CARL9170_LEDS=y
+CONFIG_CARL9170_WPC=y
+# CONFIG_CARL9170_HWRNG is not set
+# CONFIG_ATH6KL is not set
+CONFIG_B43=m
+CONFIG_B43_BCMA=y
+# CONFIG_B43_BCMA_EXTRA is not set
+CONFIG_B43_SSB=y
+CONFIG_B43_PCI_AUTOSELECT=y
+CONFIG_B43_PCICORE_AUTOSELECT=y
+CONFIG_B43_PCMCIA=y
+CONFIG_B43_SDIO=y
+CONFIG_B43_BCMA_PIO=y
+CONFIG_B43_PIO=y
+CONFIG_B43_PHY_N=y
+CONFIG_B43_PHY_LP=y
+CONFIG_B43_PHY_HT=y
+CONFIG_B43_LEDS=y
+CONFIG_B43_HWRNG=y
+# CONFIG_B43_DEBUG is not set
+CONFIG_B43LEGACY=m
+CONFIG_B43LEGACY_PCI_AUTOSELECT=y
+CONFIG_B43LEGACY_PCICORE_AUTOSELECT=y
+CONFIG_B43LEGACY_LEDS=y
+CONFIG_B43LEGACY_HWRNG=y
+CONFIG_B43LEGACY_DEBUG=y
+CONFIG_B43LEGACY_DMA=y
+CONFIG_B43LEGACY_PIO=y
+CONFIG_B43LEGACY_DMA_AND_PIO_MODE=y
+# CONFIG_B43LEGACY_DMA_MODE is not set
+# CONFIG_B43LEGACY_PIO_MODE is not set
+CONFIG_BRCMUTIL=m
+CONFIG_BRCMSMAC=m
+# CONFIG_BRCMFMAC is not set
+# CONFIG_BRCMDBG is not set
+CONFIG_HOSTAP=m
+CONFIG_HOSTAP_FIRMWARE=y
+# CONFIG_HOSTAP_FIRMWARE_NVRAM is not set
+CONFIG_HOSTAP_PLX=m
+CONFIG_HOSTAP_PCI=m
+CONFIG_HOSTAP_CS=m
+CONFIG_IPW2100=m
+CONFIG_IPW2100_MONITOR=y
+# CONFIG_IPW2100_DEBUG is not set
+CONFIG_IPW2200=m
+CONFIG_IPW2200_MONITOR=y
+CONFIG_IPW2200_RADIOTAP=y
+CONFIG_IPW2200_PROMISCUOUS=y
+CONFIG_IPW2200_QOS=y
+# CONFIG_IPW2200_DEBUG is not set
+CONFIG_LIBIPW=m
+# CONFIG_LIBIPW_DEBUG is not set
+CONFIG_IWLWIFI=m
+
+#
+# Debugging Options
+#
+# CONFIG_IWLWIFI_DEBUG is not set
+# CONFIG_IWLWIFI_DEVICE_TRACING is not set
+# CONFIG_IWLWIFI_P2P is not set
+# CONFIG_IWLWIFI_EXPERIMENTAL_MFP is not set
+CONFIG_IWLEGACY=m
+CONFIG_IWL4965=m
+CONFIG_IWL3945=m
+
+#
+# iwl3945 / iwl4965 Debugging Options
+#
+# CONFIG_IWLEGACY_DEBUG is not set
+CONFIG_IWM=m
+# CONFIG_IWM_DEBUG is not set
+# CONFIG_IWM_TRACING is not set
+CONFIG_LIBERTAS=m
+CONFIG_LIBERTAS_USB=m
+CONFIG_LIBERTAS_CS=m
+CONFIG_LIBERTAS_SDIO=m
+CONFIG_LIBERTAS_SPI=m
+# CONFIG_LIBERTAS_DEBUG is not set
+CONFIG_LIBERTAS_MESH=y
+CONFIG_HERMES=m
+# CONFIG_HERMES_PRISM is not set
+CONFIG_HERMES_CACHE_FW_ON_INIT=y
+CONFIG_PLX_HERMES=m
+CONFIG_TMD_HERMES=m
+CONFIG_NORTEL_HERMES=m
+CONFIG_PCMCIA_HERMES=m
+CONFIG_PCMCIA_SPECTRUM=m
+CONFIG_ORINOCO_USB=m
+CONFIG_P54_COMMON=m
+CONFIG_P54_USB=m
+CONFIG_P54_PCI=m
+CONFIG_P54_SPI=m
+# CONFIG_P54_SPI_DEFAULT_EEPROM is not set
+CONFIG_P54_LEDS=y
+CONFIG_RT2X00=m
+CONFIG_RT2400PCI=m
+CONFIG_RT2500PCI=m
+CONFIG_RT61PCI=m
+CONFIG_RT2800PCI=m
+CONFIG_RT2800PCI_RT33XX=y
+CONFIG_RT2800PCI_RT35XX=y
+CONFIG_RT2800PCI_RT53XX=y
+CONFIG_RT2500USB=m
+CONFIG_RT73USB=m
+CONFIG_RT2800USB=m
+CONFIG_RT2800USB_RT33XX=y
+CONFIG_RT2800USB_RT35XX=y
+CONFIG_RT2800USB_RT53XX=y
+# CONFIG_RT2800USB_UNKNOWN is not set
+CONFIG_RT2800_LIB=m
+CONFIG_RT2X00_LIB_PCI=m
+CONFIG_RT2X00_LIB_USB=m
+CONFIG_RT2X00_LIB=m
+CONFIG_RT2X00_LIB_FIRMWARE=y
+CONFIG_RT2X00_LIB_CRYPTO=y
+CONFIG_RT2X00_LIB_LEDS=y
+# CONFIG_RT2X00_DEBUG is not set
+CONFIG_RTL8192CE=m
+CONFIG_RTL8192SE=m
+CONFIG_RTL8192DE=m
+CONFIG_RTL8192CU=m
+CONFIG_RTLWIFI=m
+# CONFIG_RTLWIFI_DEBUG is not set
+CONFIG_RTL8192C_COMMON=m
+CONFIG_WL1251=m
+CONFIG_WL1251_SPI=m
+CONFIG_WL1251_SDIO=m
+CONFIG_WL12XX_MENU=m
+CONFIG_WL12XX=m
+CONFIG_WL12XX_SPI=m
+CONFIG_WL12XX_SDIO=m
+CONFIG_WL12XX_PLATFORM_DATA=y
+CONFIG_ZD1211RW=m
+# CONFIG_ZD1211RW_DEBUG is not set
+CONFIG_MWIFIEX=m
+CONFIG_MWIFIEX_SDIO=m
+CONFIG_MWIFIEX_PCIE=m
+
+#
+# WiMAX Wireless Broadband devices
+#
+CONFIG_WIMAX_I2400M=m
+CONFIG_WIMAX_I2400M_USB=m
+# CONFIG_WIMAX_I2400M_SDIO is not set
+CONFIG_WIMAX_I2400M_DEBUG_LEVEL=8
+CONFIG_WAN=y
+CONFIG_HOSTESS_SV11=m
+CONFIG_COSA=m
+CONFIG_LANMEDIA=m
+CONFIG_SEALEVEL_4021=m
+CONFIG_HDLC=m
+CONFIG_HDLC_RAW=m
+CONFIG_HDLC_RAW_ETH=m
+CONFIG_HDLC_CISCO=m
+CONFIG_HDLC_FR=m
+CONFIG_HDLC_PPP=m
+# CONFIG_HDLC_X25 is not set
+CONFIG_PCI200SYN=m
+CONFIG_WANXL=m
+# CONFIG_PC300TOO is not set
+CONFIG_N2=m
+CONFIG_C101=m
+CONFIG_FARSYNC=m
+CONFIG_DSCC4=m
+CONFIG_DSCC4_PCISYNC=y
+CONFIG_DSCC4_PCI_RST=y
+CONFIG_DLCI=m
+CONFIG_DLCI_MAX=8
+CONFIG_SDLA=m
+CONFIG_SBNI=m
+# CONFIG_SBNI_MULTILINE is not set
+CONFIG_XEN_NETDEV_FRONTEND=m
+CONFIG_XEN_NETDEV_BACKEND=m
+CONFIG_VMXNET3=m
+CONFIG_HYPERV_NET=m
+CONFIG_ISDN=y
+# CONFIG_ISDN_I4L is not set
+CONFIG_ISDN_CAPI=m
+CONFIG_ISDN_DRV_AVMB1_VERBOSE_REASON=y
+CONFIG_CAPI_TRACE=y
+CONFIG_ISDN_CAPI_MIDDLEWARE=y
+CONFIG_ISDN_CAPI_CAPI20=m
+
+#
+# CAPI hardware drivers
+#
+CONFIG_CAPI_AVM=y
+CONFIG_ISDN_DRV_AVMB1_B1ISA=m
+CONFIG_ISDN_DRV_AVMB1_B1PCI=m
+CONFIG_ISDN_DRV_AVMB1_B1PCIV4=y
+CONFIG_ISDN_DRV_AVMB1_T1ISA=m
+CONFIG_ISDN_DRV_AVMB1_B1PCMCIA=m
+CONFIG_ISDN_DRV_AVMB1_AVM_CS=m
+CONFIG_ISDN_DRV_AVMB1_T1PCI=m
+CONFIG_ISDN_DRV_AVMB1_C4=m
+CONFIG_CAPI_EICON=y
+CONFIG_ISDN_DIVAS=m
+CONFIG_ISDN_DIVAS_BRIPCI=y
+CONFIG_ISDN_DIVAS_PRIPCI=y
+CONFIG_ISDN_DIVAS_DIVACAPI=m
+CONFIG_ISDN_DIVAS_USERIDI=m
+CONFIG_ISDN_DIVAS_MAINT=m
+CONFIG_ISDN_DRV_GIGASET=m
+CONFIG_GIGASET_CAPI=y
+# CONFIG_GIGASET_DUMMYLL is not set
+CONFIG_GIGASET_BASE=m
+CONFIG_GIGASET_M105=m
+CONFIG_GIGASET_M101=m
+# CONFIG_GIGASET_DEBUG is not set
+CONFIG_HYSDN=m
+CONFIG_HYSDN_CAPI=y
+CONFIG_MISDN=m
+CONFIG_MISDN_DSP=m
+CONFIG_MISDN_L1OIP=m
+
+#
+# mISDN hardware drivers
+#
+CONFIG_MISDN_HFCPCI=m
+CONFIG_MISDN_HFCMULTI=m
+CONFIG_MISDN_HFCUSB=m
+CONFIG_MISDN_AVMFRITZ=m
+CONFIG_MISDN_SPEEDFAX=m
+CONFIG_MISDN_INFINEON=m
+CONFIG_MISDN_W6692=m
+# CONFIG_MISDN_NETJET is not set
+CONFIG_MISDN_IPAC=m
+CONFIG_MISDN_ISAR=m
+
+#
+# Input device support
+#
+CONFIG_INPUT=y
+CONFIG_INPUT_FF_MEMLESS=m
+CONFIG_INPUT_POLLDEV=m
+CONFIG_INPUT_SPARSEKMAP=m
+
+#
+# Userland interfaces
+#
+CONFIG_INPUT_MOUSEDEV=y
+CONFIG_INPUT_MOUSEDEV_PSAUX=y
+CONFIG_INPUT_MOUSEDEV_SCREEN_X=1024
+CONFIG_INPUT_MOUSEDEV_SCREEN_Y=768
+CONFIG_INPUT_JOYDEV=m
+CONFIG_INPUT_EVDEV=m
+# CONFIG_INPUT_EVBUG is not set
+
+#
+# Input Device Drivers
+#
+CONFIG_INPUT_KEYBOARD=y
+CONFIG_KEYBOARD_ADP5588=m
+# CONFIG_KEYBOARD_ADP5589 is not set
+CONFIG_KEYBOARD_ATKBD=y
+# CONFIG_KEYBOARD_QT1070 is not set
+CONFIG_KEYBOARD_QT2160=m
+CONFIG_KEYBOARD_LKKBD=m
+# CONFIG_KEYBOARD_GPIO is not set
+# CONFIG_KEYBOARD_GPIO_POLLED is not set
+# CONFIG_KEYBOARD_TCA6416 is not set
+# CONFIG_KEYBOARD_TCA8418 is not set
+# CONFIG_KEYBOARD_MATRIX is not set
+CONFIG_KEYBOARD_LM8323=m
+CONFIG_KEYBOARD_MAX7359=m
+# CONFIG_KEYBOARD_MCS is not set
+# CONFIG_KEYBOARD_MPR121 is not set
+CONFIG_KEYBOARD_NEWTON=m
+CONFIG_KEYBOARD_OPENCORES=m
+CONFIG_KEYBOARD_STOWAWAY=m
+CONFIG_KEYBOARD_SUNKBD=m
+# CONFIG_KEYBOARD_OMAP4 is not set
+CONFIG_KEYBOARD_XTKBD=m
+CONFIG_INPUT_MOUSE=y
+CONFIG_MOUSE_PS2=m
+CONFIG_MOUSE_PS2_ALPS=y
+CONFIG_MOUSE_PS2_LOGIPS2PP=y
+CONFIG_MOUSE_PS2_SYNAPTICS=y
+CONFIG_MOUSE_PS2_LIFEBOOK=y
+CONFIG_MOUSE_PS2_TRACKPOINT=y
+CONFIG_MOUSE_PS2_ELANTECH=y
+CONFIG_MOUSE_PS2_SENTELIC=y
+# CONFIG_MOUSE_PS2_TOUCHKIT is not set
+CONFIG_MOUSE_SERIAL=m
+CONFIG_MOUSE_APPLETOUCH=m
+CONFIG_MOUSE_BCM5974=m
+CONFIG_MOUSE_INPORT=m
+# CONFIG_MOUSE_ATIXL is not set
+CONFIG_MOUSE_LOGIBM=m
+CONFIG_MOUSE_PC110PAD=m
+CONFIG_MOUSE_VSXXXAA=m
+# CONFIG_MOUSE_GPIO is not set
+CONFIG_MOUSE_SYNAPTICS_I2C=m
+CONFIG_MOUSE_SYNAPTICS_USB=m
+CONFIG_INPUT_JOYSTICK=y
+CONFIG_JOYSTICK_ANALOG=m
+CONFIG_JOYSTICK_A3D=m
+CONFIG_JOYSTICK_ADI=m
+CONFIG_JOYSTICK_COBRA=m
+CONFIG_JOYSTICK_GF2K=m
+CONFIG_JOYSTICK_GRIP=m
+CONFIG_JOYSTICK_GRIP_MP=m
+CONFIG_JOYSTICK_GUILLEMOT=m
+CONFIG_JOYSTICK_INTERACT=m
+CONFIG_JOYSTICK_SIDEWINDER=m
+CONFIG_JOYSTICK_TMDC=m
+CONFIG_JOYSTICK_IFORCE=m
+CONFIG_JOYSTICK_IFORCE_USB=y
+CONFIG_JOYSTICK_IFORCE_232=y
+CONFIG_JOYSTICK_WARRIOR=m
+CONFIG_JOYSTICK_MAGELLAN=m
+CONFIG_JOYSTICK_SPACEORB=m
+CONFIG_JOYSTICK_SPACEBALL=m
+CONFIG_JOYSTICK_STINGER=m
+CONFIG_JOYSTICK_TWIDJOY=m
+CONFIG_JOYSTICK_ZHENHUA=m
+CONFIG_JOYSTICK_DB9=m
+CONFIG_JOYSTICK_GAMECON=m
+CONFIG_JOYSTICK_TURBOGRAFX=m
+# CONFIG_JOYSTICK_AS5011 is not set
+CONFIG_JOYSTICK_JOYDUMP=m
+CONFIG_JOYSTICK_XPAD=m
+CONFIG_JOYSTICK_XPAD_FF=y
+CONFIG_JOYSTICK_XPAD_LEDS=y
+CONFIG_JOYSTICK_WALKERA0701=m
+CONFIG_INPUT_TABLET=y
+CONFIG_TABLET_USB_ACECAD=m
+CONFIG_TABLET_USB_AIPTEK=m
+CONFIG_TABLET_USB_GTCO=m
+CONFIG_TABLET_USB_HANWANG=m
+CONFIG_TABLET_USB_KBTAB=m
+CONFIG_TABLET_USB_WACOM=m
+CONFIG_INPUT_TOUCHSCREEN=y
+CONFIG_TOUCHSCREEN_ADS7846=m
+CONFIG_TOUCHSCREEN_AD7877=m
+CONFIG_TOUCHSCREEN_AD7879=m
+CONFIG_TOUCHSCREEN_AD7879_I2C=m
+# CONFIG_TOUCHSCREEN_AD7879_SPI is not set
+CONFIG_TOUCHSCREEN_ATMEL_MXT=m
+# CONFIG_TOUCHSCREEN_AUO_PIXCIR is not set
+# CONFIG_TOUCHSCREEN_BU21013 is not set
+# CONFIG_TOUCHSCREEN_CY8CTMG110 is not set
+# CONFIG_TOUCHSCREEN_CYTTSP_CORE is not set
+CONFIG_TOUCHSCREEN_DYNAPRO=m
+CONFIG_TOUCHSCREEN_HAMPSHIRE=m
+CONFIG_TOUCHSCREEN_EETI=m
+# CONFIG_TOUCHSCREEN_EGALAX is not set
+CONFIG_TOUCHSCREEN_FUJITSU=m
+# CONFIG_TOUCHSCREEN_ILI210X is not set
+CONFIG_TOUCHSCREEN_GUNZE=m
+CONFIG_TOUCHSCREEN_ELO=m
+CONFIG_TOUCHSCREEN_WACOM_W8001=m
+# CONFIG_TOUCHSCREEN_MAX11801 is not set
+CONFIG_TOUCHSCREEN_MCS5000=m
+CONFIG_TOUCHSCREEN_MTOUCH=m
+CONFIG_TOUCHSCREEN_INEXIO=m
+CONFIG_TOUCHSCREEN_MK712=m
+CONFIG_TOUCHSCREEN_HTCPEN=m
+CONFIG_TOUCHSCREEN_PENMOUNT=m
+CONFIG_TOUCHSCREEN_TOUCHRIGHT=m
+CONFIG_TOUCHSCREEN_TOUCHWIN=m
+# CONFIG_TOUCHSCREEN_PIXCIR is not set
+CONFIG_TOUCHSCREEN_WM97XX=m
+CONFIG_TOUCHSCREEN_WM9705=y
+CONFIG_TOUCHSCREEN_WM9712=y
+CONFIG_TOUCHSCREEN_WM9713=y
+CONFIG_TOUCHSCREEN_USB_COMPOSITE=m
+CONFIG_TOUCHSCREEN_USB_EGALAX=y
+CONFIG_TOUCHSCREEN_USB_PANJIT=y
+CONFIG_TOUCHSCREEN_USB_3M=y
+CONFIG_TOUCHSCREEN_USB_ITM=y
+CONFIG_TOUCHSCREEN_USB_ETURBO=y
+CONFIG_TOUCHSCREEN_USB_GUNZE=y
+CONFIG_TOUCHSCREEN_USB_DMC_TSC10=y
+CONFIG_TOUCHSCREEN_USB_IRTOUCH=y
+CONFIG_TOUCHSCREEN_USB_IDEALTEK=y
+CONFIG_TOUCHSCREEN_USB_GENERAL_TOUCH=y
+CONFIG_TOUCHSCREEN_USB_GOTOP=y
+CONFIG_TOUCHSCREEN_USB_JASTEC=y
+CONFIG_TOUCHSCREEN_USB_ELO=y
+CONFIG_TOUCHSCREEN_USB_E2I=y
+CONFIG_TOUCHSCREEN_USB_ZYTRONIC=y
+CONFIG_TOUCHSCREEN_USB_ETT_TC45USB=y
+CONFIG_TOUCHSCREEN_USB_NEXIO=y
+CONFIG_TOUCHSCREEN_USB_EASYTOUCH=y
+CONFIG_TOUCHSCREEN_TOUCHIT213=m
+# CONFIG_TOUCHSCREEN_TSC_SERIO is not set
+# CONFIG_TOUCHSCREEN_TSC2005 is not set
+CONFIG_TOUCHSCREEN_TSC2007=m
+# CONFIG_TOUCHSCREEN_ST1232 is not set
+CONFIG_TOUCHSCREEN_TPS6507X=m
+CONFIG_INPUT_MISC=y
+# CONFIG_INPUT_AD714X is not set
+# CONFIG_INPUT_BMA150 is not set
+CONFIG_INPUT_PCSPKR=m
+# CONFIG_INPUT_MMA8450 is not set
+# CONFIG_INPUT_MPU3050 is not set
+CONFIG_INPUT_APANEL=m
+# CONFIG_INPUT_GP2A is not set
+# CONFIG_INPUT_GPIO_TILT_POLLED is not set
+CONFIG_INPUT_WISTRON_BTNS=m
+CONFIG_INPUT_ATLAS_BTNS=m
+CONFIG_INPUT_ATI_REMOTE2=m
+CONFIG_INPUT_KEYSPAN_REMOTE=m
+# CONFIG_INPUT_KXTJ9 is not set
+CONFIG_INPUT_POWERMATE=m
+CONFIG_INPUT_YEALINK=m
+CONFIG_INPUT_CM109=m
+CONFIG_INPUT_UINPUT=m
+CONFIG_INPUT_PCF50633_PMU=m
+# CONFIG_INPUT_PCF8574 is not set
+# CONFIG_INPUT_GPIO_ROTARY_ENCODER is not set
+# CONFIG_INPUT_ADXL34X is not set
+# CONFIG_INPUT_CMA3000 is not set
+CONFIG_INPUT_XEN_KBDDEV_FRONTEND=y
+
+#
+# Hardware I/O ports
+#
+CONFIG_SERIO=y
+CONFIG_SERIO_I8042=y
+CONFIG_SERIO_SERPORT=m
+CONFIG_SERIO_CT82C710=m
+CONFIG_SERIO_PARKBD=m
+CONFIG_SERIO_PCIPS2=m
+CONFIG_SERIO_LIBPS2=y
+CONFIG_SERIO_RAW=m
+CONFIG_SERIO_ALTERA_PS2=m
+# CONFIG_SERIO_PS2MULT is not set
+CONFIG_GAMEPORT=m
+CONFIG_GAMEPORT_NS558=m
+CONFIG_GAMEPORT_L4=m
+CONFIG_GAMEPORT_EMU10K1=m
+CONFIG_GAMEPORT_FM801=m
+
+#
+# Character devices
+#
+CONFIG_VT=y
+CONFIG_CONSOLE_TRANSLATIONS=y
+CONFIG_VT_CONSOLE=y
+CONFIG_VT_CONSOLE_SLEEP=y
+CONFIG_HW_CONSOLE=y
+CONFIG_VT_HW_CONSOLE_BINDING=y
+CONFIG_UNIX98_PTYS=y
+CONFIG_DEVPTS_MULTIPLE_INSTANCES=y
+# CONFIG_LEGACY_PTYS is not set
+CONFIG_SERIAL_NONSTANDARD=y
+CONFIG_ROCKETPORT=m
+CONFIG_CYCLADES=m
+# CONFIG_CYZ_INTR is not set
+# CONFIG_MOXA_INTELLIO is not set
+CONFIG_MOXA_SMARTIO=m
+CONFIG_SYNCLINK=m
+CONFIG_SYNCLINKMP=m
+CONFIG_SYNCLINK_GT=m
+CONFIG_NOZOMI=m
+# CONFIG_ISI is not set
+CONFIG_N_HDLC=m
+CONFIG_N_GSM=m
+# CONFIG_TRACE_SINK is not set
+# CONFIG_DEVKMEM is not set
+CONFIG_STALDRV=y
+
+#
+# Serial drivers
+#
+CONFIG_SERIAL_8250=y
+CONFIG_SERIAL_8250_CONSOLE=y
+CONFIG_FIX_EARLYCON_MEM=y
+CONFIG_SERIAL_8250_PCI=y
+CONFIG_SERIAL_8250_PNP=y
+CONFIG_SERIAL_8250_CS=m
+CONFIG_SERIAL_8250_NR_UARTS=32
+CONFIG_SERIAL_8250_RUNTIME_UARTS=4
+CONFIG_SERIAL_8250_EXTENDED=y
+CONFIG_SERIAL_8250_MANY_PORTS=y
+CONFIG_SERIAL_8250_FOURPORT=m
+CONFIG_SERIAL_8250_ACCENT=m
+CONFIG_SERIAL_8250_BOCA=m
+CONFIG_SERIAL_8250_EXAR_ST16C554=m
+CONFIG_SERIAL_8250_HUB6=m
+CONFIG_SERIAL_8250_SHARE_IRQ=y
+# CONFIG_SERIAL_8250_DETECT_IRQ is not set
+CONFIG_SERIAL_8250_RSA=y
+
+#
+# Non-8250 serial port support
+#
+CONFIG_SERIAL_MAX3100=m
+# CONFIG_SERIAL_MAX3107 is not set
+CONFIG_SERIAL_MFD_HSU=m
+CONFIG_SERIAL_CORE=y
+CONFIG_SERIAL_CORE_CONSOLE=y
+CONFIG_SERIAL_JSM=m
+# CONFIG_SERIAL_TIMBERDALE is not set
+# CONFIG_SERIAL_ALTERA_JTAGUART is not set
+# CONFIG_SERIAL_ALTERA_UART is not set
+# CONFIG_SERIAL_IFX6X60 is not set
+CONFIG_SERIAL_PCH_UART=m
+# CONFIG_SERIAL_XILINX_PS_UART is not set
+CONFIG_PRINTER=m
+# CONFIG_LP_CONSOLE is not set
+CONFIG_PPDEV=m
+CONFIG_HVC_DRIVER=y
+CONFIG_HVC_IRQ=y
+CONFIG_HVC_XEN=y
+# CONFIG_HVC_XEN_FRONTEND is not set
+CONFIG_VIRTIO_CONSOLE=m
+CONFIG_IPMI_HANDLER=m
+# CONFIG_IPMI_PANIC_EVENT is not set
+CONFIG_IPMI_DEVICE_INTERFACE=m
+CONFIG_IPMI_SI=m
+CONFIG_IPMI_WATCHDOG=m
+CONFIG_IPMI_POWEROFF=m
+CONFIG_HW_RANDOM=m
+CONFIG_HW_RANDOM_TIMERIOMEM=m
+CONFIG_HW_RANDOM_INTEL=m
+CONFIG_HW_RANDOM_AMD=m
+CONFIG_HW_RANDOM_GEODE=m
+CONFIG_HW_RANDOM_VIA=m
+CONFIG_HW_RANDOM_VIRTIO=m
+CONFIG_NVRAM=m
+CONFIG_DTLK=m
+CONFIG_R3964=m
+CONFIG_APPLICOM=m
+CONFIG_SONYPI=m
+
+#
+# PCMCIA character devices
+#
+CONFIG_SYNCLINK_CS=m
+CONFIG_CARDMAN_4000=m
+CONFIG_CARDMAN_4040=m
+CONFIG_IPWIRELESS=m
+CONFIG_MWAVE=m
+CONFIG_SCx200_GPIO=m
+CONFIG_PC8736x_GPIO=m
+CONFIG_NSC_GPIO=m
+CONFIG_RAW_DRIVER=m
+CONFIG_MAX_RAW_DEVS=256
+CONFIG_HPET=y
+CONFIG_HPET_MMAP=y
+CONFIG_HANGCHECK_TIMER=m
+CONFIG_TCG_TPM=m
+CONFIG_TCG_TIS=m
+CONFIG_TCG_NSC=m
+CONFIG_TCG_ATMEL=m
+CONFIG_TCG_INFINEON=m
+CONFIG_TELCLOCK=m
+CONFIG_DEVPORT=y
+CONFIG_RAMOOPS=m
+CONFIG_I2C=m
+CONFIG_I2C_BOARDINFO=y
+CONFIG_I2C_COMPAT=y
+CONFIG_I2C_CHARDEV=m
+# CONFIG_I2C_MUX is not set
+CONFIG_I2C_HELPER_AUTO=y
+CONFIG_I2C_SMBUS=m
+CONFIG_I2C_ALGOBIT=m
+CONFIG_I2C_ALGOPCA=m
+
+#
+# I2C Hardware Bus support
+#
+
+#
+# PC SMBus host controller drivers
+#
+CONFIG_I2C_ALI1535=m
+CONFIG_I2C_ALI1563=m
+CONFIG_I2C_ALI15X3=m
+CONFIG_I2C_AMD756=m
+CONFIG_I2C_AMD756_S4882=m
+CONFIG_I2C_AMD8111=m
+CONFIG_I2C_I801=m
+CONFIG_I2C_ISCH=m
+CONFIG_I2C_PIIX4=m
+CONFIG_I2C_NFORCE2=m
+CONFIG_I2C_NFORCE2_S4985=m
+CONFIG_I2C_SIS5595=m
+CONFIG_I2C_SIS630=m
+CONFIG_I2C_SIS96X=m
+CONFIG_I2C_VIA=m
+CONFIG_I2C_VIAPRO=m
+
+#
+# ACPI drivers
+#
+CONFIG_I2C_SCMI=m
+
+#
+# I2C system bus drivers (mostly embedded / system-on-chip)
+#
+# CONFIG_I2C_DESIGNWARE_PCI is not set
+CONFIG_I2C_EG20T=m
+# CONFIG_I2C_GPIO is not set
+# CONFIG_I2C_INTEL_MID is not set
+CONFIG_I2C_OCORES=m
+CONFIG_I2C_PCA_PLATFORM=m
+# CONFIG_I2C_PXA_PCI is not set
+CONFIG_I2C_SIMTEC=m
+# CONFIG_I2C_XILINX is not set
+
+#
+# External I2C/SMBus adapter drivers
+#
+CONFIG_I2C_DIOLAN_U2C=m
+CONFIG_I2C_PARPORT=m
+CONFIG_I2C_PARPORT_LIGHT=m
+CONFIG_I2C_TAOS_EVM=m
+CONFIG_I2C_TINY_USB=m
+
+#
+# Other I2C/SMBus bus drivers
+#
+CONFIG_I2C_PCA_ISA=m
+CONFIG_I2C_STUB=m
+CONFIG_SCx200_I2C=m
+CONFIG_SCx200_I2C_SCL=12
+CONFIG_SCx200_I2C_SDA=13
+CONFIG_SCx200_ACB=m
+# CONFIG_I2C_DEBUG_CORE is not set
+# CONFIG_I2C_DEBUG_ALGO is not set
+# CONFIG_I2C_DEBUG_BUS is not set
+CONFIG_SPI=y
+# CONFIG_SPI_DEBUG is not set
+CONFIG_SPI_MASTER=y
+
+#
+# SPI Master Controller Drivers
+#
+# CONFIG_SPI_ALTERA is not set
+CONFIG_SPI_BITBANG=m
+CONFIG_SPI_BUTTERFLY=m
+# CONFIG_SPI_GPIO is not set
+CONFIG_SPI_LM70_LLP=m
+# CONFIG_SPI_OC_TINY is not set
+# CONFIG_SPI_PXA2XX is not set
+# CONFIG_SPI_PXA2XX_PCI is not set
+CONFIG_SPI_TOPCLIFF_PCH=m
+# CONFIG_SPI_XILINX is not set
+# CONFIG_SPI_DESIGNWARE is not set
+
+#
+# SPI Protocol Masters
+#
+# CONFIG_SPI_SPIDEV is not set
+CONFIG_SPI_TLE62X0=m
+# CONFIG_HSI is not set
+
+#
+# PPS support
+#
+CONFIG_PPS=m
+# CONFIG_PPS_DEBUG is not set
+
+#
+# PPS clients support
+#
+# CONFIG_PPS_CLIENT_KTIMER is not set
+CONFIG_PPS_CLIENT_LDISC=m
+CONFIG_PPS_CLIENT_PARPORT=m
+# CONFIG_PPS_CLIENT_GPIO is not set
+
+#
+# PPS generators support
+#
+
+#
+# PTP clock support
+#
+CONFIG_PTP_1588_CLOCK=m
+
+#
+# Enable PHYLIB and NETWORK_PHY_TIMESTAMPING to see the additional clocks.
+#
+# CONFIG_PTP_1588_CLOCK_PCH is not set
+CONFIG_ARCH_WANT_OPTIONAL_GPIOLIB=y
+CONFIG_GPIOLIB=y
+# CONFIG_DEBUG_GPIO is not set
+# CONFIG_GPIO_SYSFS is not set
+
+#
+# Memory mapped GPIO drivers:
+#
+# CONFIG_GPIO_GENERIC_PLATFORM is not set
+# CONFIG_GPIO_IT8761E is not set
+# CONFIG_GPIO_SCH is not set
+CONFIG_GPIO_VX855=m
+
+#
+# I2C GPIO expanders:
+#
+# CONFIG_GPIO_MAX7300 is not set
+# CONFIG_GPIO_MAX732X is not set
+# CONFIG_GPIO_PCA953X is not set
+# CONFIG_GPIO_PCF857X is not set
+# CONFIG_GPIO_ADP5588 is not set
+
+#
+# PCI GPIO expanders:
+#
+CONFIG_GPIO_CS5535=m
+# CONFIG_GPIO_BT8XX is not set
+# CONFIG_GPIO_LANGWELL is not set
+CONFIG_GPIO_PCH=m
+CONFIG_GPIO_ML_IOH=m
+# CONFIG_GPIO_RDC321X is not set
+
+#
+# SPI GPIO expanders:
+#
+# CONFIG_GPIO_MAX7301 is not set
+# CONFIG_GPIO_MCP23S08 is not set
+# CONFIG_GPIO_MC33880 is not set
+# CONFIG_GPIO_74X164 is not set
+
+#
+# AC97 GPIO expanders:
+#
+
+#
+# MODULbus GPIO expanders:
+#
+CONFIG_W1=m
+CONFIG_W1_CON=y
+
+#
+# 1-wire Bus Masters
+#
+CONFIG_W1_MASTER_MATROX=m
+CONFIG_W1_MASTER_DS2490=m
+CONFIG_W1_MASTER_DS2482=m
+# CONFIG_W1_MASTER_DS1WM is not set
+# CONFIG_W1_MASTER_GPIO is not set
+
+#
+# 1-wire Slaves
+#
+CONFIG_W1_SLAVE_THERM=m
+CONFIG_W1_SLAVE_SMEM=m
+# CONFIG_W1_SLAVE_DS2408 is not set
+# CONFIG_W1_SLAVE_DS2423 is not set
+CONFIG_W1_SLAVE_DS2431=m
+CONFIG_W1_SLAVE_DS2433=m
+# CONFIG_W1_SLAVE_DS2433_CRC is not set
+CONFIG_W1_SLAVE_DS2760=m
+# CONFIG_W1_SLAVE_DS2780 is not set
+# CONFIG_W1_SLAVE_DS2781 is not set
+CONFIG_W1_SLAVE_BQ27000=m
+CONFIG_POWER_SUPPLY=m
+# CONFIG_POWER_SUPPLY_DEBUG is not set
+CONFIG_PDA_POWER=m
+# CONFIG_TEST_POWER is not set
+CONFIG_BATTERY_DS2760=m
+# CONFIG_BATTERY_DS2780 is not set
+# CONFIG_BATTERY_DS2781 is not set
+CONFIG_BATTERY_DS2782=m
+# CONFIG_BATTERY_SBS is not set
+CONFIG_BATTERY_BQ27x00=m
+CONFIG_BATTERY_BQ27X00_I2C=y
+CONFIG_BATTERY_BQ27X00_PLATFORM=y
+CONFIG_BATTERY_MAX17040=m
+# CONFIG_BATTERY_MAX17042 is not set
+CONFIG_CHARGER_PCF50633=m
+# CONFIG_CHARGER_ISP1704 is not set
+# CONFIG_CHARGER_MAX8903 is not set
+# CONFIG_CHARGER_LP8727 is not set
+# CONFIG_CHARGER_GPIO is not set
+# CONFIG_CHARGER_MANAGER is not set
+# CONFIG_CHARGER_SMB347 is not set
+CONFIG_HWMON=y
+CONFIG_HWMON_VID=m
+# CONFIG_HWMON_DEBUG_CHIP is not set
+
+#
+# Native drivers
+#
+CONFIG_SENSORS_ABITUGURU=m
+CONFIG_SENSORS_ABITUGURU3=m
+# CONFIG_SENSORS_AD7314 is not set
+CONFIG_SENSORS_AD7414=m
+CONFIG_SENSORS_AD7418=m
+CONFIG_SENSORS_ADCXX=m
+CONFIG_SENSORS_ADM1021=m
+CONFIG_SENSORS_ADM1025=m
+CONFIG_SENSORS_ADM1026=m
+CONFIG_SENSORS_ADM1029=m
+CONFIG_SENSORS_ADM1031=m
+CONFIG_SENSORS_ADM9240=m
+CONFIG_SENSORS_ADT7411=m
+CONFIG_SENSORS_ADT7462=m
+CONFIG_SENSORS_ADT7470=m
+CONFIG_SENSORS_ADT7475=m
+CONFIG_SENSORS_ASC7621=m
+CONFIG_SENSORS_K8TEMP=m
+CONFIG_SENSORS_K10TEMP=m
+CONFIG_SENSORS_FAM15H_POWER=m
+CONFIG_SENSORS_ASB100=m
+CONFIG_SENSORS_ATXP1=m
+CONFIG_SENSORS_DS620=m
+CONFIG_SENSORS_DS1621=m
+CONFIG_SENSORS_I5K_AMB=m
+CONFIG_SENSORS_F71805F=m
+CONFIG_SENSORS_F71882FG=m
+CONFIG_SENSORS_F75375S=m
+CONFIG_SENSORS_FSCHMD=m
+CONFIG_SENSORS_G760A=m
+CONFIG_SENSORS_GL518SM=m
+CONFIG_SENSORS_GL520SM=m
+# CONFIG_SENSORS_GPIO_FAN is not set
+CONFIG_SENSORS_CORETEMP=m
+CONFIG_SENSORS_IBMAEM=m
+CONFIG_SENSORS_IBMPEX=m
+CONFIG_SENSORS_IT87=m
+# CONFIG_SENSORS_JC42 is not set
+CONFIG_SENSORS_LINEAGE=m
+CONFIG_SENSORS_LM63=m
+CONFIG_SENSORS_LM70=m
+CONFIG_SENSORS_LM73=m
+CONFIG_SENSORS_LM75=m
+CONFIG_SENSORS_LM77=m
+CONFIG_SENSORS_LM78=m
+CONFIG_SENSORS_LM80=m
+CONFIG_SENSORS_LM83=m
+CONFIG_SENSORS_LM85=m
+CONFIG_SENSORS_LM87=m
+CONFIG_SENSORS_LM90=m
+CONFIG_SENSORS_LM92=m
+CONFIG_SENSORS_LM93=m
+CONFIG_SENSORS_LTC4151=m
+CONFIG_SENSORS_LTC4215=m
+CONFIG_SENSORS_LTC4245=m
+CONFIG_SENSORS_LTC4261=m
+CONFIG_SENSORS_LM95241=m
+CONFIG_SENSORS_LM95245=m
+CONFIG_SENSORS_MAX1111=m
+CONFIG_SENSORS_MAX16065=m
+CONFIG_SENSORS_MAX1619=m
+CONFIG_SENSORS_MAX1668=m
+CONFIG_SENSORS_MAX6639=m
+CONFIG_SENSORS_MAX6642=m
+CONFIG_SENSORS_MAX6650=m
+# CONFIG_SENSORS_MCP3021 is not set
+CONFIG_SENSORS_NTC_THERMISTOR=m
+CONFIG_SENSORS_PC87360=m
+CONFIG_SENSORS_PC87427=m
+CONFIG_SENSORS_PCF8591=m
+# CONFIG_PMBUS is not set
+# CONFIG_SENSORS_SHT15 is not set
+CONFIG_SENSORS_SHT21=m
+CONFIG_SENSORS_SIS5595=m
+CONFIG_SENSORS_SMM665=m
+CONFIG_SENSORS_DME1737=m
+CONFIG_SENSORS_EMC1403=m
+CONFIG_SENSORS_EMC2103=m
+CONFIG_SENSORS_EMC6W201=m
+CONFIG_SENSORS_SMSC47M1=m
+CONFIG_SENSORS_SMSC47M192=m
+CONFIG_SENSORS_SMSC47B397=m
+CONFIG_SENSORS_SCH56XX_COMMON=m
+CONFIG_SENSORS_SCH5627=m
+CONFIG_SENSORS_SCH5636=m
+CONFIG_SENSORS_ADS1015=m
+CONFIG_SENSORS_ADS7828=m
+CONFIG_SENSORS_ADS7871=m
+CONFIG_SENSORS_AMC6821=m
+CONFIG_SENSORS_THMC50=m
+CONFIG_SENSORS_TMP102=m
+CONFIG_SENSORS_TMP401=m
+CONFIG_SENSORS_TMP421=m
+CONFIG_SENSORS_VIA_CPUTEMP=m
+CONFIG_SENSORS_VIA686A=m
+CONFIG_SENSORS_VT1211=m
+CONFIG_SENSORS_VT8231=m
+CONFIG_SENSORS_W83781D=m
+CONFIG_SENSORS_W83791D=m
+CONFIG_SENSORS_W83792D=m
+CONFIG_SENSORS_W83793=m
+CONFIG_SENSORS_W83795=m
+# CONFIG_SENSORS_W83795_FANCTRL is not set
+CONFIG_SENSORS_W83L785TS=m
+CONFIG_SENSORS_W83L786NG=m
+CONFIG_SENSORS_W83627HF=m
+CONFIG_SENSORS_W83627EHF=m
+CONFIG_SENSORS_APPLESMC=m
+
+#
+# ACPI drivers
+#
+CONFIG_SENSORS_ACPI_POWER=m
+CONFIG_SENSORS_ATK0110=m
+CONFIG_THERMAL=m
+CONFIG_THERMAL_HWMON=y
+CONFIG_WATCHDOG=y
+CONFIG_WATCHDOG_CORE=y
+# CONFIG_WATCHDOG_NOWAYOUT is not set
+
+#
+# Watchdog Device Drivers
+#
+CONFIG_SOFT_WATCHDOG=m
+CONFIG_ACQUIRE_WDT=m
+CONFIG_ADVANTECH_WDT=m
+CONFIG_ALIM1535_WDT=m
+CONFIG_ALIM7101_WDT=m
+CONFIG_F71808E_WDT=m
+CONFIG_SP5100_TCO=m
+CONFIG_GEODE_WDT=m
+CONFIG_SC520_WDT=m
+CONFIG_SBC_FITPC2_WATCHDOG=m
+CONFIG_EUROTECH_WDT=m
+CONFIG_IB700_WDT=m
+CONFIG_IBMASR=m
+CONFIG_WAFER_WDT=m
+CONFIG_I6300ESB_WDT=m
+CONFIG_ITCO_WDT=m
+CONFIG_ITCO_VENDOR_SUPPORT=y
+CONFIG_IT8712F_WDT=m
+CONFIG_IT87_WDT=m
+CONFIG_HP_WATCHDOG=m
+CONFIG_HPWDT_NMI_DECODING=y
+CONFIG_SC1200_WDT=m
+CONFIG_SCx200_WDT=m
+CONFIG_PC87413_WDT=m
+CONFIG_NV_TCO=m
+CONFIG_60XX_WDT=m
+CONFIG_SBC8360_WDT=m
+CONFIG_SBC7240_WDT=m
+CONFIG_CPU5_WDT=m
+CONFIG_SMSC_SCH311X_WDT=m
+CONFIG_SMSC37B787_WDT=m
+# CONFIG_VIA_WDT is not set
+CONFIG_W83627HF_WDT=m
+CONFIG_W83697HF_WDT=m
+CONFIG_W83697UG_WDT=m
+CONFIG_W83877F_WDT=m
+CONFIG_W83977F_WDT=m
+CONFIG_MACHZ_WDT=m
+CONFIG_SBC_EPX_C3_WATCHDOG=m
+CONFIG_XEN_WDT=m
+
+#
+# ISA-based Watchdog Cards
+#
+CONFIG_PCWATCHDOG=m
+CONFIG_MIXCOMWD=m
+CONFIG_WDT=m
+
+#
+# PCI-based Watchdog Cards
+#
+CONFIG_PCIPCWATCHDOG=m
+CONFIG_WDTPCI=m
+
+#
+# USB-based Watchdog Cards
+#
+CONFIG_USBPCWATCHDOG=m
+CONFIG_SSB_POSSIBLE=y
+
+#
+# Sonics Silicon Backplane
+#
+CONFIG_SSB=m
+CONFIG_SSB_SPROM=y
+CONFIG_SSB_BLOCKIO=y
+CONFIG_SSB_PCIHOST_POSSIBLE=y
+CONFIG_SSB_PCIHOST=y
+CONFIG_SSB_B43_PCI_BRIDGE=y
+CONFIG_SSB_PCMCIAHOST_POSSIBLE=y
+CONFIG_SSB_PCMCIAHOST=y
+CONFIG_SSB_SDIOHOST_POSSIBLE=y
+CONFIG_SSB_SDIOHOST=y
+# CONFIG_SSB_DEBUG is not set
+CONFIG_SSB_DRIVER_PCICORE_POSSIBLE=y
+CONFIG_SSB_DRIVER_PCICORE=y
+CONFIG_BCMA_POSSIBLE=y
+
+#
+# Broadcom specific AMBA
+#
+CONFIG_BCMA=m
+CONFIG_BCMA_BLOCKIO=y
+CONFIG_BCMA_HOST_PCI_POSSIBLE=y
+CONFIG_BCMA_HOST_PCI=y
+# CONFIG_BCMA_DEBUG is not set
+
+#
+# Multifunction device drivers
+#
+CONFIG_MFD_CORE=m
+CONFIG_MFD_SM501=m
+# CONFIG_MFD_SM501_GPIO is not set
+CONFIG_HTC_PASIC3=m
+# CONFIG_UCB1400_CORE is not set
+# CONFIG_TPS6105X is not set
+CONFIG_TPS65010=m
+# CONFIG_TPS6507X is not set
+# CONFIG_MFD_TPS65217 is not set
+# CONFIG_MFD_TPS65912_SPI is not set
+# CONFIG_MFD_STMPE is not set
+# CONFIG_MFD_TMIO is not set
+# CONFIG_MFD_DA9052_SPI is not set
+CONFIG_MFD_WM8400=m
+# CONFIG_MFD_WM831X_SPI is not set
+CONFIG_MFD_PCF50633=m
+CONFIG_PCF50633_ADC=m
+CONFIG_PCF50633_GPIO=m
+# CONFIG_MFD_MC13XXX is not set
+# CONFIG_ABX500_CORE is not set
+# CONFIG_EZX_PCAP is not set
+CONFIG_MFD_CS5535=m
+# CONFIG_MFD_TIMBERDALE is not set
+CONFIG_LPC_SCH=m
+# CONFIG_MFD_RDC321X is not set
+# CONFIG_MFD_JANZ_CMODIO is not set
+CONFIG_MFD_VX855=m
+CONFIG_MFD_WL1273_CORE=m
+CONFIG_REGULATOR=y
+# CONFIG_REGULATOR_DEBUG is not set
+# CONFIG_REGULATOR_DUMMY is not set
+CONFIG_REGULATOR_FIXED_VOLTAGE=m
+# CONFIG_REGULATOR_VIRTUAL_CONSUMER is not set
+CONFIG_REGULATOR_USERSPACE_CONSUMER=m
+# CONFIG_REGULATOR_GPIO is not set
+# CONFIG_REGULATOR_AD5398 is not set
+# CONFIG_REGULATOR_ISL6271A is not set
+CONFIG_REGULATOR_MAX1586=m
+CONFIG_REGULATOR_MAX8649=m
+CONFIG_REGULATOR_MAX8660=m
+# CONFIG_REGULATOR_MAX8952 is not set
+CONFIG_REGULATOR_LP3971=m
+# CONFIG_REGULATOR_LP3972 is not set
+CONFIG_REGULATOR_PCF50633=m
+# CONFIG_REGULATOR_TPS62360 is not set
+CONFIG_REGULATOR_TPS65023=m
+CONFIG_REGULATOR_TPS6507X=m
+# CONFIG_REGULATOR_TPS6524X is not set
+CONFIG_REGULATOR_WM8400=m
+CONFIG_MEDIA_SUPPORT=m
+
+#
+# Multimedia core support
+#
+CONFIG_MEDIA_CONTROLLER=y
+CONFIG_VIDEO_DEV=m
+CONFIG_VIDEO_V4L2_COMMON=m
+# CONFIG_VIDEO_V4L2_SUBDEV_API is not set
+CONFIG_DVB_CORE=m
+CONFIG_DVB_NET=y
+CONFIG_VIDEO_MEDIA=m
+
+#
+# Multimedia drivers
+#
+CONFIG_VIDEO_SAA7146=m
+CONFIG_VIDEO_SAA7146_VV=m
+CONFIG_RC_CORE=m
+CONFIG_LIRC=m
+CONFIG_RC_MAP=m
+CONFIG_IR_NEC_DECODER=m
+CONFIG_IR_RC5_DECODER=m
+CONFIG_IR_RC6_DECODER=m
+CONFIG_IR_JVC_DECODER=m
+CONFIG_IR_SONY_DECODER=m
+CONFIG_IR_RC5_SZ_DECODER=m
+# CONFIG_IR_SANYO_DECODER is not set
+CONFIG_IR_MCE_KBD_DECODER=m
+CONFIG_IR_LIRC_CODEC=m
+CONFIG_RC_ATI_REMOTE=m
+CONFIG_IR_ENE=m
+CONFIG_IR_IMON=m
+CONFIG_IR_MCEUSB=m
+CONFIG_IR_ITE_CIR=m
+CONFIG_IR_FINTEK=m
+CONFIG_IR_NUVOTON=m
+CONFIG_IR_REDRAT3=m
+CONFIG_IR_STREAMZAP=m
+CONFIG_IR_WINBOND_CIR=m
+CONFIG_RC_LOOPBACK=m
+# CONFIG_IR_GPIO_CIR is not set
+CONFIG_MEDIA_ATTACH=y
+CONFIG_MEDIA_TUNER=m
+# CONFIG_MEDIA_TUNER_CUSTOMISE is not set
+CONFIG_MEDIA_TUNER_SIMPLE=m
+CONFIG_MEDIA_TUNER_TDA8290=m
+CONFIG_MEDIA_TUNER_TDA827X=m
+CONFIG_MEDIA_TUNER_TDA18271=m
+CONFIG_MEDIA_TUNER_TDA9887=m
+CONFIG_MEDIA_TUNER_TEA5761=m
+CONFIG_MEDIA_TUNER_TEA5767=m
+CONFIG_MEDIA_TUNER_MT20XX=m
+CONFIG_MEDIA_TUNER_MT2060=m
+CONFIG_MEDIA_TUNER_MT2266=m
+CONFIG_MEDIA_TUNER_MT2131=m
+CONFIG_MEDIA_TUNER_QT1010=m
+CONFIG_MEDIA_TUNER_XC2028=m
+CONFIG_MEDIA_TUNER_XC5000=m
+CONFIG_MEDIA_TUNER_XC4000=m
+CONFIG_MEDIA_TUNER_MXL5005S=m
+CONFIG_MEDIA_TUNER_MXL5007T=m
+CONFIG_MEDIA_TUNER_MC44S803=m
+CONFIG_MEDIA_TUNER_MAX2165=m
+CONFIG_MEDIA_TUNER_TDA18218=m
+CONFIG_MEDIA_TUNER_TDA18212=m
+CONFIG_VIDEO_V4L2=m
+CONFIG_VIDEOBUF_GEN=m
+CONFIG_VIDEOBUF_DMA_SG=m
+CONFIG_VIDEOBUF_VMALLOC=m
+CONFIG_VIDEOBUF_DVB=m
+CONFIG_VIDEO_TVEEPROM=m
+CONFIG_VIDEO_TUNER=m
+CONFIG_VIDEOBUF2_CORE=m
+CONFIG_VIDEOBUF2_MEMOPS=m
+CONFIG_VIDEOBUF2_VMALLOC=m
+CONFIG_VIDEO_CAPTURE_DRIVERS=y
+# CONFIG_VIDEO_ADV_DEBUG is not set
+# CONFIG_VIDEO_FIXED_MINOR_RANGES is not set
+CONFIG_VIDEO_HELPER_CHIPS_AUTO=y
+CONFIG_VIDEO_IR_I2C=m
+
+#
+# Audio decoders, processors and mixers
+#
+CONFIG_VIDEO_MSP3400=m
+CONFIG_VIDEO_CS53L32A=m
+CONFIG_VIDEO_WM8775=m
+
+#
+# RDS decoders
+#
+
+#
+# Video decoders
+#
+CONFIG_VIDEO_SAA711X=m
+CONFIG_VIDEO_TVP5150=m
+
+#
+# Video and audio decoders
+#
+CONFIG_VIDEO_CX25840=m
+
+#
+# MPEG video encoders
+#
+CONFIG_VIDEO_CX2341X=m
+
+#
+# Video encoders
+#
+
+#
+# Camera sensor devices
+#
+CONFIG_VIDEO_MT9V011=m
+
+#
+# Flash devices
+#
+
+#
+# Video improvement chips
+#
+
+#
+# Miscelaneous helper chips
+#
+CONFIG_VIDEO_VIVI=m
+CONFIG_V4L_USB_DRIVERS=y
+CONFIG_USB_VIDEO_CLASS=m
+CONFIG_USB_VIDEO_CLASS_INPUT_EVDEV=y
+CONFIG_USB_GSPCA=m
+CONFIG_USB_M5602=m
+CONFIG_USB_STV06XX=m
+CONFIG_USB_GL860=m
+CONFIG_USB_GSPCA_BENQ=m
+CONFIG_USB_GSPCA_CONEX=m
+CONFIG_USB_GSPCA_CPIA1=m
+CONFIG_USB_GSPCA_ETOMS=m
+CONFIG_USB_GSPCA_FINEPIX=m
+CONFIG_USB_GSPCA_JEILINJ=m
+# CONFIG_USB_GSPCA_JL2005BCD is not set
+CONFIG_USB_GSPCA_KINECT=m
+CONFIG_USB_GSPCA_KONICA=m
+CONFIG_USB_GSPCA_MARS=m
+CONFIG_USB_GSPCA_MR97310A=m
+CONFIG_USB_GSPCA_NW80X=m
+CONFIG_USB_GSPCA_OV519=m
+CONFIG_USB_GSPCA_OV534=m
+CONFIG_USB_GSPCA_OV534_9=m
+CONFIG_USB_GSPCA_PAC207=m
+CONFIG_USB_GSPCA_PAC7302=m
+CONFIG_USB_GSPCA_PAC7311=m
+CONFIG_USB_GSPCA_SE401=m
+CONFIG_USB_GSPCA_SN9C2028=m
+CONFIG_USB_GSPCA_SN9C20X=m
+CONFIG_USB_GSPCA_SONIXB=m
+CONFIG_USB_GSPCA_SONIXJ=m
+CONFIG_USB_GSPCA_SPCA500=m
+CONFIG_USB_GSPCA_SPCA501=m
+CONFIG_USB_GSPCA_SPCA505=m
+CONFIG_USB_GSPCA_SPCA506=m
+CONFIG_USB_GSPCA_SPCA508=m
+CONFIG_USB_GSPCA_SPCA561=m
+CONFIG_USB_GSPCA_SPCA1528=m
+CONFIG_USB_GSPCA_SQ905=m
+CONFIG_USB_GSPCA_SQ905C=m
+CONFIG_USB_GSPCA_SQ930X=m
+CONFIG_USB_GSPCA_STK014=m
+CONFIG_USB_GSPCA_STV0680=m
+CONFIG_USB_GSPCA_SUNPLUS=m
+CONFIG_USB_GSPCA_T613=m
+CONFIG_USB_GSPCA_TOPRO=m
+CONFIG_USB_GSPCA_TV8532=m
+CONFIG_USB_GSPCA_VC032X=m
+CONFIG_USB_GSPCA_VICAM=m
+CONFIG_USB_GSPCA_XIRLINK_CIT=m
+CONFIG_USB_GSPCA_ZC3XX=m
+CONFIG_VIDEO_PVRUSB2=m
+CONFIG_VIDEO_PVRUSB2_SYSFS=y
+CONFIG_VIDEO_PVRUSB2_DVB=y
+# CONFIG_VIDEO_PVRUSB2_DEBUGIFC is not set
+CONFIG_VIDEO_HDPVR=m
+CONFIG_VIDEO_EM28XX=m
+CONFIG_VIDEO_EM28XX_ALSA=m
+CONFIG_VIDEO_EM28XX_DVB=m
+CONFIG_VIDEO_EM28XX_RC=y
+CONFIG_VIDEO_TLG2300=m
+CONFIG_VIDEO_CX231XX=m
+CONFIG_VIDEO_CX231XX_RC=y
+CONFIG_VIDEO_CX231XX_ALSA=m
+CONFIG_VIDEO_CX231XX_DVB=m
+CONFIG_VIDEO_TM6000=m
+CONFIG_VIDEO_TM6000_ALSA=m
+CONFIG_VIDEO_TM6000_DVB=m
+CONFIG_VIDEO_USBVISION=m
+CONFIG_USB_ET61X251=m
+CONFIG_USB_SN9C102=m
+CONFIG_USB_PWC=m
+# CONFIG_USB_PWC_DEBUG is not set
+CONFIG_USB_PWC_INPUT_EVDEV=y
+CONFIG_VIDEO_CPIA2=m
+CONFIG_USB_ZR364XX=m
+CONFIG_USB_STKWEBCAM=m
+CONFIG_USB_S2255=m
+# CONFIG_V4L_PCI_DRIVERS is not set
+# CONFIG_V4L_ISA_PARPORT_DRIVERS is not set
+# CONFIG_V4L_PLATFORM_DRIVERS is not set
+CONFIG_V4L_MEM2MEM_DRIVERS=y
+# CONFIG_VIDEO_MEM2MEM_TESTDEV is not set
+CONFIG_RADIO_ADAPTERS=y
+CONFIG_RADIO_SI470X=y
+CONFIG_USB_SI470X=m
+CONFIG_I2C_SI470X=m
+CONFIG_USB_MR800=m
+CONFIG_USB_DSBR=m
+CONFIG_RADIO_MAXIRADIO=m
+CONFIG_I2C_SI4713=m
+CONFIG_RADIO_SI4713=m
+# CONFIG_USB_KEENE is not set
+CONFIG_RADIO_TEA5764=m
+CONFIG_RADIO_SAA7706H=m
+CONFIG_RADIO_TEF6862=m
+CONFIG_RADIO_WL1273=m
+
+#
+# Texas Instruments WL128x FM driver (ST based)
+#
+# CONFIG_RADIO_WL128X is not set
+# CONFIG_V4L_RADIO_ISA_DRIVERS is not set
+CONFIG_DVB_MAX_ADAPTERS=8
+CONFIG_DVB_DYNAMIC_MINORS=y
+CONFIG_DVB_CAPTURE_DRIVERS=y
+
+#
+# Supported SAA7146 based PCI Adapters
+#
+CONFIG_TTPCI_EEPROM=m
+CONFIG_DVB_AV7110=m
+CONFIG_DVB_AV7110_OSD=y
+CONFIG_DVB_BUDGET_CORE=m
+CONFIG_DVB_BUDGET=m
+CONFIG_DVB_BUDGET_CI=m
+CONFIG_DVB_BUDGET_AV=m
+CONFIG_DVB_BUDGET_PATCH=m
+
+#
+# Supported USB Adapters
+#
+CONFIG_DVB_USB=m
+# CONFIG_DVB_USB_DEBUG is not set
+CONFIG_DVB_USB_A800=m
+CONFIG_DVB_USB_DIBUSB_MB=m
+CONFIG_DVB_USB_DIBUSB_MB_FAULTY=y
+CONFIG_DVB_USB_DIBUSB_MC=m
+CONFIG_DVB_USB_DIB0700=m
+CONFIG_DVB_USB_UMT_010=m
+CONFIG_DVB_USB_CXUSB=m
+CONFIG_DVB_USB_M920X=m
+CONFIG_DVB_USB_GL861=m
+CONFIG_DVB_USB_AU6610=m
+CONFIG_DVB_USB_DIGITV=m
+CONFIG_DVB_USB_VP7045=m
+CONFIG_DVB_USB_VP702X=m
+CONFIG_DVB_USB_GP8PSK=m
+CONFIG_DVB_USB_NOVA_T_USB2=m
+CONFIG_DVB_USB_TTUSB2=m
+CONFIG_DVB_USB_DTT200U=m
+CONFIG_DVB_USB_OPERA1=m
+CONFIG_DVB_USB_AF9005=m
+CONFIG_DVB_USB_AF9005_REMOTE=m
+CONFIG_DVB_USB_PCTV452E=m
+CONFIG_DVB_USB_DW2102=m
+CONFIG_DVB_USB_CINERGY_T2=m
+CONFIG_DVB_USB_ANYSEE=m
+CONFIG_DVB_USB_DTV5100=m
+CONFIG_DVB_USB_AF9015=m
+CONFIG_DVB_USB_CE6230=m
+CONFIG_DVB_USB_FRIIO=m
+CONFIG_DVB_USB_EC168=m
+# CONFIG_DVB_USB_AZ6007 is not set
+CONFIG_DVB_USB_AZ6027=m
+CONFIG_DVB_USB_LME2510=m
+CONFIG_DVB_USB_TECHNISAT_USB2=m
+CONFIG_DVB_USB_IT913X=m
+CONFIG_DVB_USB_MXL111SF=m
+# CONFIG_DVB_USB_RTL28XXU is not set
+CONFIG_DVB_TTUSB_BUDGET=m
+CONFIG_DVB_TTUSB_DEC=m
+CONFIG_SMS_SIANO_MDTV=m
+
+#
+# Siano module components
+#
+CONFIG_SMS_USB_DRV=m
+CONFIG_SMS_SDIO_DRV=m
+
+#
+# Supported FlexCopII (B2C2) Adapters
+#
+CONFIG_DVB_B2C2_FLEXCOP=m
+CONFIG_DVB_B2C2_FLEXCOP_PCI=m
+CONFIG_DVB_B2C2_FLEXCOP_USB=m
+# CONFIG_DVB_B2C2_FLEXCOP_DEBUG is not set
+
+#
+# Supported BT878 Adapters
+#
+
+#
+# Supported Pluto2 Adapters
+#
+CONFIG_DVB_PLUTO2=m
+
+#
+# Supported SDMC DM1105 Adapters
+#
+CONFIG_DVB_DM1105=m
+
+#
+# Supported FireWire (IEEE 1394) Adapters
+#
+CONFIG_DVB_FIREDTV=m
+CONFIG_DVB_FIREDTV_INPUT=y
+
+#
+# Supported Earthsoft PT1 Adapters
+#
+CONFIG_DVB_PT1=m
+
+#
+# Supported Mantis Adapters
+#
+CONFIG_MANTIS_CORE=m
+CONFIG_DVB_MANTIS=m
+CONFIG_DVB_HOPPER=m
+
+#
+# Supported nGene Adapters
+#
+CONFIG_DVB_NGENE=m
+
+#
+# Supported ddbridge ('Octopus') Adapters
+#
+CONFIG_DVB_DDBRIDGE=m
+
+#
+# Supported DVB Frontends
+#
+# CONFIG_DVB_FE_CUSTOMISE is not set
+
+#
+# Multistandard (satellite) frontends
+#
+CONFIG_DVB_STB0899=m
+CONFIG_DVB_STB6100=m
+CONFIG_DVB_STV090x=m
+CONFIG_DVB_STV6110x=m
+
+#
+# Multistandard (cable + terrestrial) frontends
+#
+CONFIG_DVB_DRXK=m
+CONFIG_DVB_TDA18271C2DD=m
+
+#
+# DVB-S (satellite) frontends
+#
+CONFIG_DVB_CX24123=m
+CONFIG_DVB_MT312=m
+CONFIG_DVB_ZL10039=m
+CONFIG_DVB_S5H1420=m
+CONFIG_DVB_STV0288=m
+CONFIG_DVB_STB6000=m
+CONFIG_DVB_STV0299=m
+CONFIG_DVB_STV6110=m
+CONFIG_DVB_STV0900=m
+CONFIG_DVB_TDA8083=m
+CONFIG_DVB_TDA10086=m
+CONFIG_DVB_TDA8261=m
+CONFIG_DVB_VES1X93=m
+CONFIG_DVB_TUNER_ITD1000=m
+CONFIG_DVB_TUNER_CX24113=m
+CONFIG_DVB_TDA826X=m
+CONFIG_DVB_TUA6100=m
+CONFIG_DVB_CX24116=m
+CONFIG_DVB_SI21XX=m
+CONFIG_DVB_DS3000=m
+CONFIG_DVB_MB86A16=m
+CONFIG_DVB_TDA10071=m
+
+#
+# DVB-T (terrestrial) frontends
+#
+CONFIG_DVB_SP8870=m
+CONFIG_DVB_CX22700=m
+CONFIG_DVB_CX22702=m
+CONFIG_DVB_DRXD=m
+CONFIG_DVB_L64781=m
+CONFIG_DVB_TDA1004X=m
+CONFIG_DVB_NXT6000=m
+CONFIG_DVB_MT352=m
+CONFIG_DVB_ZL10353=m
+CONFIG_DVB_DIB3000MB=m
+CONFIG_DVB_DIB3000MC=m
+CONFIG_DVB_DIB7000M=m
+CONFIG_DVB_DIB7000P=m
+CONFIG_DVB_TDA10048=m
+CONFIG_DVB_AF9013=m
+CONFIG_DVB_EC100=m
+CONFIG_DVB_CXD2820R=m
+
+#
+# DVB-C (cable) frontends
+#
+CONFIG_DVB_VES1820=m
+CONFIG_DVB_TDA10021=m
+CONFIG_DVB_TDA10023=m
+CONFIG_DVB_STV0297=m
+
+#
+# ATSC (North American/Korean Terrestrial/Cable DTV) frontends
+#
+CONFIG_DVB_NXT200X=m
+CONFIG_DVB_BCM3510=m
+CONFIG_DVB_LGDT330X=m
+CONFIG_DVB_LGDT3305=m
+CONFIG_DVB_S5H1409=m
+CONFIG_DVB_S5H1411=m
+
+#
+# ISDB-T (terrestrial) frontends
+#
+CONFIG_DVB_S921=m
+CONFIG_DVB_DIB8000=m
+CONFIG_DVB_MB86A20S=m
+
+#
+# Digital terrestrial only tuners/PLL
+#
+CONFIG_DVB_PLL=m
+CONFIG_DVB_TUNER_DIB0070=m
+CONFIG_DVB_TUNER_DIB0090=m
+
+#
+# SEC control devices for DVB-S
+#
+CONFIG_DVB_LNBP21=m
+CONFIG_DVB_LNBP22=m
+CONFIG_DVB_ISL6421=m
+CONFIG_DVB_ISL6423=m
+CONFIG_DVB_A8293=m
+CONFIG_DVB_LGS8GXX=m
+CONFIG_DVB_ATBM8830=m
+CONFIG_DVB_TDA665x=m
+CONFIG_DVB_IX2505V=m
+CONFIG_DVB_IT913X_FE=m
+CONFIG_DVB_M88RS2000=m
+
+#
+# Tools to develop new frontends
+#
+# CONFIG_DVB_DUMMY_FE is not set
+
+#
+# Graphics support
+#
+CONFIG_AGP=y
+CONFIG_AGP_ALI=y
+CONFIG_AGP_ATI=y
+CONFIG_AGP_AMD=y
+CONFIG_AGP_AMD64=y
+CONFIG_AGP_INTEL=y
+CONFIG_AGP_NVIDIA=y
+CONFIG_AGP_SIS=y
+CONFIG_AGP_SWORKS=y
+CONFIG_AGP_VIA=y
+CONFIG_AGP_EFFICEON=y
+CONFIG_VGA_ARB=y
+CONFIG_VGA_ARB_MAX_GPUS=16
+CONFIG_VGA_SWITCHEROO=y
+CONFIG_DRM=m
+CONFIG_DRM_KMS_HELPER=m
+# CONFIG_DRM_LOAD_EDID_FIRMWARE is not set
+CONFIG_DRM_TTM=m
+CONFIG_DRM_TDFX=m
+CONFIG_DRM_R128=m
+CONFIG_DRM_RADEON=m
+CONFIG_DRM_RADEON_KMS=y
+CONFIG_DRM_NOUVEAU=m
+CONFIG_DRM_NOUVEAU_BACKLIGHT=y
+# CONFIG_DRM_NOUVEAU_DEBUG is not set
+
+#
+# I2C encoder or helper chips
+#
+CONFIG_DRM_I2C_CH7006=m
+CONFIG_DRM_I2C_SIL164=m
+CONFIG_DRM_I810=m
+CONFIG_DRM_I915=m
+CONFIG_DRM_I915_KMS=y
+CONFIG_DRM_MGA=m
+CONFIG_DRM_SIS=m
+CONFIG_DRM_VIA=m
+CONFIG_DRM_SAVAGE=m
+CONFIG_DRM_VMWGFX=m
+CONFIG_DRM_GMA500=m
+CONFIG_DRM_GMA600=y
+CONFIG_DRM_GMA3600=y
+# CONFIG_DRM_UDL is not set
+# CONFIG_STUB_POULSBO is not set
+CONFIG_VGASTATE=m
+CONFIG_VIDEO_OUTPUT_CONTROL=m
+CONFIG_FB=y
+CONFIG_FIRMWARE_EDID=y
+CONFIG_FB_DDC=m
+CONFIG_FB_BOOT_VESA_SUPPORT=y
+CONFIG_FB_CFB_FILLRECT=y
+CONFIG_FB_CFB_COPYAREA=y
+CONFIG_FB_CFB_IMAGEBLIT=y
+# CONFIG_FB_CFB_REV_PIXELS_IN_BYTE is not set
+CONFIG_FB_SYS_FILLRECT=y
+CONFIG_FB_SYS_COPYAREA=y
+CONFIG_FB_SYS_IMAGEBLIT=y
+# CONFIG_FB_FOREIGN_ENDIAN is not set
+CONFIG_FB_SYS_FOPS=y
+# CONFIG_FB_WMT_GE_ROPS is not set
+CONFIG_FB_DEFERRED_IO=y
+CONFIG_FB_HECUBA=m
+CONFIG_FB_SVGALIB=m
+# CONFIG_FB_MACMODES is not set
+CONFIG_FB_BACKLIGHT=y
+CONFIG_FB_MODE_HELPERS=y
+CONFIG_FB_TILEBLITTING=y
+
+#
+# Frame buffer hardware drivers
+#
+CONFIG_FB_CIRRUS=m
+CONFIG_FB_PM2=m
+CONFIG_FB_PM2_FIFO_DISCONNECT=y
+CONFIG_FB_CYBER2000=m
+CONFIG_FB_CYBER2000_DDC=y
+CONFIG_FB_ARC=m
+# CONFIG_FB_ASILIANT is not set
+# CONFIG_FB_IMSTT is not set
+CONFIG_FB_VGA16=m
+CONFIG_FB_UVESA=m
+CONFIG_FB_VESA=y
+CONFIG_FB_EFI=y
+CONFIG_FB_N411=m
+CONFIG_FB_HGA=m
+CONFIG_FB_S1D13XXX=m
+# CONFIG_FB_NVIDIA is not set
+# CONFIG_FB_RIVA is not set
+# CONFIG_FB_I740 is not set
+CONFIG_FB_I810=m
+CONFIG_FB_I810_GTF=y
+CONFIG_FB_I810_I2C=y
+CONFIG_FB_LE80578=m
+CONFIG_FB_CARILLO_RANCH=m
+CONFIG_FB_MATROX=m
+CONFIG_FB_MATROX_MILLENIUM=y
+CONFIG_FB_MATROX_MYSTIQUE=y
+CONFIG_FB_MATROX_G=y
+CONFIG_FB_MATROX_I2C=m
+CONFIG_FB_MATROX_MAVEN=m
+CONFIG_FB_RADEON=m
+CONFIG_FB_RADEON_I2C=y
+CONFIG_FB_RADEON_BACKLIGHT=y
+# CONFIG_FB_RADEON_DEBUG is not set
+CONFIG_FB_ATY128=m
+CONFIG_FB_ATY128_BACKLIGHT=y
+CONFIG_FB_ATY=m
+CONFIG_FB_ATY_CT=y
+CONFIG_FB_ATY_GENERIC_LCD=y
+CONFIG_FB_ATY_GX=y
+CONFIG_FB_ATY_BACKLIGHT=y
+CONFIG_FB_S3=m
+CONFIG_FB_S3_DDC=y
+CONFIG_FB_SAVAGE=m
+CONFIG_FB_SAVAGE_I2C=y
+# CONFIG_FB_SAVAGE_ACCEL is not set
+CONFIG_FB_SIS=m
+CONFIG_FB_SIS_300=y
+CONFIG_FB_SIS_315=y
+CONFIG_FB_VIA=m
+# CONFIG_FB_VIA_DIRECT_PROCFS is not set
+CONFIG_FB_VIA_X_COMPATIBILITY=y
+CONFIG_FB_NEOMAGIC=m
+CONFIG_FB_KYRO=m
+CONFIG_FB_3DFX=m
+# CONFIG_FB_3DFX_ACCEL is not set
+CONFIG_FB_3DFX_I2C=y
+CONFIG_FB_VOODOO1=m
+CONFIG_FB_VT8623=m
+CONFIG_FB_TRIDENT=m
+CONFIG_FB_ARK=m
+CONFIG_FB_PM3=m
+# CONFIG_FB_CARMINE is not set
+# CONFIG_FB_GEODE is not set
+# CONFIG_FB_TMIO is not set
+CONFIG_FB_SM501=m
+# CONFIG_FB_SMSCUFX is not set
+CONFIG_FB_UDL=m
+CONFIG_FB_VIRTUAL=m
+CONFIG_XEN_FBDEV_FRONTEND=y
+CONFIG_FB_METRONOME=m
+CONFIG_FB_MB862XX=m
+CONFIG_FB_MB862XX_PCI_GDC=y
+CONFIG_FB_MB862XX_I2C=y
+# CONFIG_FB_BROADSHEET is not set
+# CONFIG_EXYNOS_VIDEO is not set
+CONFIG_BACKLIGHT_LCD_SUPPORT=y
+# CONFIG_LCD_CLASS_DEVICE is not set
+CONFIG_BACKLIGHT_CLASS_DEVICE=y
+# CONFIG_BACKLIGHT_GENERIC is not set
+CONFIG_BACKLIGHT_PROGEAR=m
+CONFIG_BACKLIGHT_APPLE=m
+# CONFIG_BACKLIGHT_SAHARA is not set
+# CONFIG_BACKLIGHT_ADP8860 is not set
+# CONFIG_BACKLIGHT_ADP8870 is not set
+# CONFIG_BACKLIGHT_PCF50633 is not set
+# CONFIG_BACKLIGHT_LP855X is not set
+# CONFIG_BACKLIGHT_OT200 is not set
+
+#
+# Console display driver support
+#
+CONFIG_VGA_CONSOLE=y
+# CONFIG_VGACON_SOFT_SCROLLBACK is not set
+CONFIG_MDA_CONSOLE=m
+CONFIG_DUMMY_CONSOLE=y
+CONFIG_FRAMEBUFFER_CONSOLE=y
+CONFIG_FRAMEBUFFER_CONSOLE_DETECT_PRIMARY=y
+CONFIG_FRAMEBUFFER_CONSOLE_ROTATION=y
+# CONFIG_FONTS is not set
+CONFIG_FONT_8x8=y
+CONFIG_FONT_8x16=y
+# CONFIG_LOGO is not set
+CONFIG_SOUND=m
+CONFIG_SOUND_OSS_CORE=y
+# CONFIG_SOUND_OSS_CORE_PRECLAIM is not set
+CONFIG_SND=m
+CONFIG_SND_TIMER=m
+CONFIG_SND_PCM=m
+CONFIG_SND_HWDEP=m
+CONFIG_SND_RAWMIDI=m
+CONFIG_SND_JACK=y
+CONFIG_SND_SEQUENCER=m
+CONFIG_SND_SEQ_DUMMY=m
+CONFIG_SND_OSSEMUL=y
+CONFIG_SND_MIXER_OSS=m
+CONFIG_SND_PCM_OSS=m
+CONFIG_SND_PCM_OSS_PLUGINS=y
+# CONFIG_SND_SEQUENCER_OSS is not set
+CONFIG_SND_HRTIMER=m
+CONFIG_SND_SEQ_HRTIMER_DEFAULT=y
+CONFIG_SND_DYNAMIC_MINORS=y
+CONFIG_SND_SUPPORT_OLD_API=y
+CONFIG_SND_VERBOSE_PROCFS=y
+# CONFIG_SND_VERBOSE_PRINTK is not set
+# CONFIG_SND_DEBUG is not set
+CONFIG_SND_VMASTER=y
+CONFIG_SND_KCTL_JACK=y
+CONFIG_SND_DMA_SGBUF=y
+CONFIG_SND_RAWMIDI_SEQ=m
+CONFIG_SND_OPL3_LIB_SEQ=m
+CONFIG_SND_OPL4_LIB_SEQ=m
+CONFIG_SND_SBAWE_SEQ=m
+CONFIG_SND_EMU10K1_SEQ=m
+CONFIG_SND_MPU401_UART=m
+CONFIG_SND_OPL3_LIB=m
+CONFIG_SND_OPL4_LIB=m
+CONFIG_SND_VX_LIB=m
+CONFIG_SND_AC97_CODEC=m
+CONFIG_SND_DRIVERS=y
+CONFIG_SND_PCSP=m
+CONFIG_SND_DUMMY=m
+CONFIG_SND_ALOOP=m
+CONFIG_SND_VIRMIDI=m
+CONFIG_SND_MTPAV=m
+CONFIG_SND_MTS64=m
+CONFIG_SND_SERIAL_U16550=m
+CONFIG_SND_MPU401=m
+CONFIG_SND_PORTMAN2X4=m
+CONFIG_SND_AC97_POWER_SAVE=y
+CONFIG_SND_AC97_POWER_SAVE_DEFAULT=0
+CONFIG_SND_WSS_LIB=m
+CONFIG_SND_SB_COMMON=m
+CONFIG_SND_SB8_DSP=m
+CONFIG_SND_SB16_DSP=m
+CONFIG_SND_ISA=y
+CONFIG_SND_ADLIB=m
+CONFIG_SND_AD1816A=m
+CONFIG_SND_AD1848=m
+CONFIG_SND_ALS100=m
+CONFIG_SND_AZT1605=m
+CONFIG_SND_AZT2316=m
+CONFIG_SND_AZT2320=m
+CONFIG_SND_CMI8330=m
+CONFIG_SND_CS4231=m
+CONFIG_SND_CS4236=m
+CONFIG_SND_ES1688=m
+CONFIG_SND_ES18XX=m
+CONFIG_SND_SC6000=m
+CONFIG_SND_GUSCLASSIC=m
+CONFIG_SND_GUSEXTREME=m
+CONFIG_SND_GUSMAX=m
+CONFIG_SND_INTERWAVE=m
+CONFIG_SND_INTERWAVE_STB=m
+CONFIG_SND_JAZZ16=m
+CONFIG_SND_OPL3SA2=m
+CONFIG_SND_OPTI92X_AD1848=m
+CONFIG_SND_OPTI92X_CS4231=m
+CONFIG_SND_OPTI93X=m
+CONFIG_SND_MIRO=m
+CONFIG_SND_SB8=m
+CONFIG_SND_SB16=m
+CONFIG_SND_SBAWE=m
+CONFIG_SND_SB16_CSP=y
+CONFIG_SND_SSCAPE=m
+CONFIG_SND_WAVEFRONT=m
+CONFIG_SND_MSND_PINNACLE=m
+CONFIG_SND_MSND_CLASSIC=m
+CONFIG_SND_TEA575X=m
+CONFIG_SND_PCI=y
+CONFIG_SND_AD1889=m
+CONFIG_SND_ALS300=m
+CONFIG_SND_ALS4000=m
+CONFIG_SND_ALI5451=m
+CONFIG_SND_ASIHPI=m
+CONFIG_SND_ATIIXP=m
+CONFIG_SND_ATIIXP_MODEM=m
+CONFIG_SND_AU8810=m
+CONFIG_SND_AU8820=m
+CONFIG_SND_AU8830=m
+# CONFIG_SND_AW2 is not set
+CONFIG_SND_AZT3328=m
+CONFIG_SND_BT87X=m
+# CONFIG_SND_BT87X_OVERCLOCK is not set
+CONFIG_SND_CA0106=m
+CONFIG_SND_CMIPCI=m
+CONFIG_SND_OXYGEN_LIB=m
+CONFIG_SND_OXYGEN=m
+CONFIG_SND_CS4281=m
+CONFIG_SND_CS46XX=m
+# CONFIG_SND_CS46XX_NEW_DSP is not set
+CONFIG_SND_CS5530=m
+CONFIG_SND_CS5535AUDIO=m
+CONFIG_SND_CTXFI=m
+CONFIG_SND_DARLA20=m
+CONFIG_SND_GINA20=m
+CONFIG_SND_LAYLA20=m
+CONFIG_SND_DARLA24=m
+CONFIG_SND_GINA24=m
+CONFIG_SND_LAYLA24=m
+CONFIG_SND_MONA=m
+CONFIG_SND_MIA=m
+CONFIG_SND_ECHO3G=m
+CONFIG_SND_INDIGO=m
+CONFIG_SND_INDIGOIO=m
+CONFIG_SND_INDIGODJ=m
+CONFIG_SND_INDIGOIOX=m
+CONFIG_SND_INDIGODJX=m
+CONFIG_SND_EMU10K1=m
+CONFIG_SND_EMU10K1X=m
+CONFIG_SND_ENS1370=m
+CONFIG_SND_ENS1371=m
+CONFIG_SND_ES1938=m
+CONFIG_SND_ES1968=m
+CONFIG_SND_ES1968_INPUT=y
+CONFIG_SND_ES1968_RADIO=y
+CONFIG_SND_FM801=m
+CONFIG_SND_FM801_TEA575X_BOOL=y
+CONFIG_SND_HDA_INTEL=m
+CONFIG_SND_HDA_PREALLOC_SIZE=64
+CONFIG_SND_HDA_HWDEP=y
+CONFIG_SND_HDA_RECONFIG=y
+CONFIG_SND_HDA_INPUT_BEEP=y
+CONFIG_SND_HDA_INPUT_BEEP_MODE=1
+CONFIG_SND_HDA_INPUT_JACK=y
+CONFIG_SND_HDA_PATCH_LOADER=y
+CONFIG_SND_HDA_CODEC_REALTEK=y
+CONFIG_SND_HDA_ENABLE_REALTEK_QUIRKS=y
+CONFIG_SND_HDA_CODEC_ANALOG=y
+CONFIG_SND_HDA_CODEC_SIGMATEL=y
+CONFIG_SND_HDA_CODEC_VIA=y
+CONFIG_SND_HDA_CODEC_HDMI=y
+CONFIG_SND_HDA_CODEC_CIRRUS=y
+CONFIG_SND_HDA_CODEC_CONEXANT=y
+CONFIG_SND_HDA_CODEC_CA0110=y
+CONFIG_SND_HDA_CODEC_CA0132=y
+CONFIG_SND_HDA_CODEC_CMEDIA=y
+CONFIG_SND_HDA_CODEC_SI3054=y
+CONFIG_SND_HDA_GENERIC=y
+CONFIG_SND_HDA_POWER_SAVE=y
+CONFIG_SND_HDA_POWER_SAVE_DEFAULT=0
+CONFIG_SND_HDSP=m
+CONFIG_SND_HDSPM=m
+CONFIG_SND_ICE1712=m
+CONFIG_SND_ICE1724=m
+CONFIG_SND_INTEL8X0=m
+CONFIG_SND_INTEL8X0M=m
+CONFIG_SND_KORG1212=m
+CONFIG_SND_LOLA=m
+CONFIG_SND_LX6464ES=m
+CONFIG_SND_MAESTRO3=m
+CONFIG_SND_MAESTRO3_INPUT=y
+CONFIG_SND_MIXART=m
+CONFIG_SND_NM256=m
+CONFIG_SND_PCXHR=m
+CONFIG_SND_RIPTIDE=m
+CONFIG_SND_RME32=m
+CONFIG_SND_RME96=m
+CONFIG_SND_RME9652=m
+CONFIG_SND_SIS7019=m
+CONFIG_SND_SONICVIBES=m
+CONFIG_SND_TRIDENT=m
+CONFIG_SND_VIA82XX=m
+CONFIG_SND_VIA82XX_MODEM=m
+CONFIG_SND_VIRTUOSO=m
+CONFIG_SND_VX222=m
+CONFIG_SND_YMFPCI=m
+CONFIG_SND_SPI=y
+CONFIG_SND_USB=y
+CONFIG_SND_USB_AUDIO=m
+CONFIG_SND_USB_UA101=m
+CONFIG_SND_USB_USX2Y=m
+CONFIG_SND_USB_CAIAQ=m
+CONFIG_SND_USB_CAIAQ_INPUT=y
+CONFIG_SND_USB_US122L=m
+CONFIG_SND_USB_6FIRE=m
+CONFIG_SND_FIREWIRE=y
+CONFIG_SND_FIREWIRE_LIB=m
+CONFIG_SND_FIREWIRE_SPEAKERS=m
+CONFIG_SND_ISIGHT=m
+CONFIG_SND_PCMCIA=y
+CONFIG_SND_VXPOCKET=m
+CONFIG_SND_PDAUDIOCF=m
+# CONFIG_SND_SOC is not set
+# CONFIG_SOUND_PRIME is not set
+CONFIG_AC97_BUS=m
+CONFIG_HID_SUPPORT=y
+CONFIG_HID=m
+# CONFIG_HID_BATTERY_STRENGTH is not set
+CONFIG_HIDRAW=y
+
+#
+# USB Input Devices
+#
+CONFIG_USB_HID=m
+CONFIG_HID_PID=y
+CONFIG_USB_HIDDEV=y
+
+#
+# Special HID drivers
+#
+CONFIG_HID_A4TECH=m
+CONFIG_HID_ACRUX=m
+CONFIG_HID_ACRUX_FF=y
+CONFIG_HID_APPLE=m
+CONFIG_HID_BELKIN=m
+CONFIG_HID_CHERRY=m
+CONFIG_HID_CHICONY=m
+CONFIG_HID_PRODIKEYS=m
+CONFIG_HID_CYPRESS=m
+CONFIG_HID_DRAGONRISE=m
+CONFIG_DRAGONRISE_FF=y
+CONFIG_HID_EMS_FF=m
+CONFIG_HID_ELECOM=m
+CONFIG_HID_EZKEY=m
+CONFIG_HID_HOLTEK=m
+# CONFIG_HOLTEK_FF is not set
+CONFIG_HID_KEYTOUCH=m
+CONFIG_HID_KYE=m
+CONFIG_HID_UCLOGIC=m
+CONFIG_HID_WALTOP=m
+CONFIG_HID_GYRATION=m
+CONFIG_HID_TWINHAN=m
+CONFIG_HID_KENSINGTON=m
+CONFIG_HID_LCPOWER=m
+CONFIG_HID_LOGITECH=m
+CONFIG_HID_LOGITECH_DJ=m
+CONFIG_LOGITECH_FF=y
+CONFIG_LOGIRUMBLEPAD2_FF=y
+CONFIG_LOGIG940_FF=y
+CONFIG_LOGIWHEELS_FF=y
+CONFIG_HID_MAGICMOUSE=m
+CONFIG_HID_MICROSOFT=m
+CONFIG_HID_MONTEREY=m
+CONFIG_HID_MULTITOUCH=m
+CONFIG_HID_NTRIG=m
+CONFIG_HID_ORTEK=m
+CONFIG_HID_PANTHERLORD=m
+CONFIG_PANTHERLORD_FF=y
+CONFIG_HID_PETALYNX=m
+CONFIG_HID_PICOLCD=m
+CONFIG_HID_PICOLCD_FB=y
+CONFIG_HID_PICOLCD_BACKLIGHT=y
+CONFIG_HID_PICOLCD_LEDS=y
+CONFIG_HID_PRIMAX=m
+CONFIG_HID_ROCCAT=m
+# CONFIG_HID_SAITEK is not set
+CONFIG_HID_SAMSUNG=m
+CONFIG_HID_SONY=m
+CONFIG_HID_SPEEDLINK=m
+CONFIG_HID_SUNPLUS=m
+CONFIG_HID_GREENASIA=m
+CONFIG_GREENASIA_FF=y
+# CONFIG_HID_HYPERV_MOUSE is not set
+CONFIG_HID_SMARTJOYPLUS=m
+CONFIG_SMARTJOYPLUS_FF=y
+# CONFIG_HID_TIVO is not set
+CONFIG_HID_TOPSEED=m
+CONFIG_HID_THRUSTMASTER=m
+CONFIG_THRUSTMASTER_FF=y
+CONFIG_HID_WACOM=m
+CONFIG_HID_WACOM_POWER_SUPPLY=y
+CONFIG_HID_WIIMOTE=m
+# CONFIG_HID_WIIMOTE_EXT is not set
+CONFIG_HID_ZEROPLUS=m
+CONFIG_ZEROPLUS_FF=y
+CONFIG_HID_ZYDACRON=m
+CONFIG_USB_ARCH_HAS_OHCI=y
+CONFIG_USB_ARCH_HAS_EHCI=y
+CONFIG_USB_ARCH_HAS_XHCI=y
+CONFIG_USB_SUPPORT=y
+CONFIG_USB_COMMON=m
+CONFIG_USB_ARCH_HAS_HCD=y
+CONFIG_USB=m
+# CONFIG_USB_DEBUG is not set
+CONFIG_USB_ANNOUNCE_NEW_DEVICES=y
+
+#
+# Miscellaneous USB options
+#
+CONFIG_USB_DEVICEFS=y
+# CONFIG_USB_DEVICE_CLASS is not set
+CONFIG_USB_DYNAMIC_MINORS=y
+CONFIG_USB_SUSPEND=y
+# CONFIG_USB_OTG is not set
+# CONFIG_USB_DWC3 is not set
+CONFIG_USB_MON=m
+CONFIG_USB_WUSB=m
+CONFIG_USB_WUSB_CBAF=m
+# CONFIG_USB_WUSB_CBAF_DEBUG is not set
+
+#
+# USB Host Controller Drivers
+#
+CONFIG_USB_C67X00_HCD=m
+CONFIG_USB_XHCI_HCD=m
+# CONFIG_USB_XHCI_HCD_DEBUGGING is not set
+CONFIG_USB_EHCI_HCD=m
+CONFIG_USB_EHCI_ROOT_HUB_TT=y
+CONFIG_USB_EHCI_TT_NEWSCHED=y
+# CONFIG_USB_OXU210HP_HCD is not set
+CONFIG_USB_ISP116X_HCD=m
+# CONFIG_USB_ISP1760_HCD is not set
+# CONFIG_USB_ISP1362_HCD is not set
+CONFIG_USB_OHCI_HCD=m
+# CONFIG_USB_OHCI_HCD_SSB is not set
+# CONFIG_USB_OHCI_HCD_PLATFORM is not set
+# CONFIG_USB_EHCI_HCD_PLATFORM is not set
+# CONFIG_USB_OHCI_BIG_ENDIAN_DESC is not set
+# CONFIG_USB_OHCI_BIG_ENDIAN_MMIO is not set
+CONFIG_USB_OHCI_LITTLE_ENDIAN=y
+CONFIG_USB_UHCI_HCD=m
+CONFIG_USB_U132_HCD=m
+CONFIG_USB_SL811_HCD=m
+# CONFIG_USB_SL811_HCD_ISO is not set
+CONFIG_USB_SL811_CS=m
+CONFIG_USB_R8A66597_HCD=m
+CONFIG_USB_WHCI_HCD=m
+CONFIG_USB_HWA_HCD=m
+# CONFIG_USB_MUSB_HDRC is not set
+# CONFIG_USB_RENESAS_USBHS is not set
+
+#
+# USB Device Class drivers
+#
+CONFIG_USB_ACM=m
+CONFIG_USB_PRINTER=m
+CONFIG_USB_WDM=m
+CONFIG_USB_TMC=m
+
+#
+# NOTE: USB_STORAGE depends on SCSI but BLK_DEV_SD may
+#
+
+#
+# also be needed; see USB_STORAGE Help for more info
+#
+CONFIG_USB_STORAGE=m
+# CONFIG_USB_STORAGE_DEBUG is not set
+CONFIG_USB_STORAGE_REALTEK=m
+CONFIG_REALTEK_AUTOPM=y
+CONFIG_USB_STORAGE_DATAFAB=m
+CONFIG_USB_STORAGE_FREECOM=m
+CONFIG_USB_STORAGE_ISD200=m
+CONFIG_USB_STORAGE_USBAT=m
+CONFIG_USB_STORAGE_SDDR09=m
+CONFIG_USB_STORAGE_SDDR55=m
+CONFIG_USB_STORAGE_JUMPSHOT=m
+CONFIG_USB_STORAGE_ALAUDA=m
+CONFIG_USB_STORAGE_ONETOUCH=m
+CONFIG_USB_STORAGE_KARMA=m
+CONFIG_USB_STORAGE_CYPRESS_ATACB=m
+CONFIG_USB_STORAGE_ENE_UB6250=m
+# CONFIG_USB_LIBUSUAL is not set
+
+#
+# USB Imaging devices
+#
+CONFIG_USB_MDC800=m
+CONFIG_USB_MICROTEK=m
+
+#
+# USB port drivers
+#
+CONFIG_USB_USS720=m
+CONFIG_USB_SERIAL=m
+CONFIG_USB_EZUSB=y
+CONFIG_USB_SERIAL_GENERIC=y
+CONFIG_USB_SERIAL_AIRCABLE=m
+CONFIG_USB_SERIAL_ARK3116=m
+CONFIG_USB_SERIAL_BELKIN=m
+CONFIG_USB_SERIAL_CH341=m
+CONFIG_USB_SERIAL_WHITEHEAT=m
+CONFIG_USB_SERIAL_DIGI_ACCELEPORT=m
+CONFIG_USB_SERIAL_CP210X=m
+CONFIG_USB_SERIAL_CYPRESS_M8=m
+CONFIG_USB_SERIAL_EMPEG=m
+CONFIG_USB_SERIAL_FTDI_SIO=m
+CONFIG_USB_SERIAL_FUNSOFT=m
+CONFIG_USB_SERIAL_VISOR=m
+CONFIG_USB_SERIAL_IPAQ=m
+CONFIG_USB_SERIAL_IR=m
+CONFIG_USB_SERIAL_EDGEPORT=m
+CONFIG_USB_SERIAL_EDGEPORT_TI=m
+# CONFIG_USB_SERIAL_F81232 is not set
+CONFIG_USB_SERIAL_GARMIN=m
+CONFIG_USB_SERIAL_IPW=m
+CONFIG_USB_SERIAL_IUU=m
+CONFIG_USB_SERIAL_KEYSPAN_PDA=m
+CONFIG_USB_SERIAL_KEYSPAN=m
+CONFIG_USB_SERIAL_KLSI=m
+CONFIG_USB_SERIAL_KOBIL_SCT=m
+CONFIG_USB_SERIAL_MCT_U232=m
+# CONFIG_USB_SERIAL_METRO is not set
+CONFIG_USB_SERIAL_MOS7720=m
+CONFIG_USB_SERIAL_MOS7715_PARPORT=y
+CONFIG_USB_SERIAL_MOS7840=m
+CONFIG_USB_SERIAL_MOTOROLA=m
+CONFIG_USB_SERIAL_NAVMAN=m
+CONFIG_USB_SERIAL_PL2303=m
+CONFIG_USB_SERIAL_OTI6858=m
+CONFIG_USB_SERIAL_QCAUX=m
+CONFIG_USB_SERIAL_QUALCOMM=m
+CONFIG_USB_SERIAL_SPCP8X5=m
+CONFIG_USB_SERIAL_HP4X=m
+CONFIG_USB_SERIAL_SAFE=m
+# CONFIG_USB_SERIAL_SAFE_PADDED is not set
+CONFIG_USB_SERIAL_SIEMENS_MPI=m
+CONFIG_USB_SERIAL_SIERRAWIRELESS=m
+CONFIG_USB_SERIAL_SYMBOL=m
+CONFIG_USB_SERIAL_TI=m
+CONFIG_USB_SERIAL_CYBERJACK=m
+CONFIG_USB_SERIAL_XIRCOM=m
+CONFIG_USB_SERIAL_WWAN=m
+CONFIG_USB_SERIAL_OPTION=m
+CONFIG_USB_SERIAL_OMNINET=m
+CONFIG_USB_SERIAL_OPTICON=m
+CONFIG_USB_SERIAL_VIVOPAY_SERIAL=m
+CONFIG_USB_SERIAL_ZIO=m
+CONFIG_USB_SERIAL_SSU100=m
+CONFIG_USB_SERIAL_DEBUG=m
+
+#
+# USB Miscellaneous drivers
+#
+CONFIG_USB_EMI62=m
+CONFIG_USB_EMI26=m
+CONFIG_USB_ADUTUX=m
+CONFIG_USB_SEVSEG=m
+CONFIG_USB_RIO500=m
+CONFIG_USB_LEGOTOWER=m
+CONFIG_USB_LCD=m
+CONFIG_USB_LED=m
+CONFIG_USB_CYPRESS_CY7C63=m
+CONFIG_USB_CYTHERM=m
+CONFIG_USB_IDMOUSE=m
+CONFIG_USB_FTDI_ELAN=m
+CONFIG_USB_APPLEDISPLAY=m
+CONFIG_USB_SISUSBVGA=m
+CONFIG_USB_SISUSBVGA_CON=y
+CONFIG_USB_LD=m
+CONFIG_USB_TRANCEVIBRATOR=m
+CONFIG_USB_IOWARRIOR=m
+CONFIG_USB_TEST=m
+CONFIG_USB_ISIGHTFW=m
+CONFIG_USB_YUREX=m
+CONFIG_USB_ATM=m
+CONFIG_USB_SPEEDTOUCH=m
+CONFIG_USB_CXACRU=m
+CONFIG_USB_UEAGLEATM=m
+CONFIG_USB_XUSBATM=m
+CONFIG_USB_GADGET=m
+# CONFIG_USB_GADGET_DEBUG is not set
+# CONFIG_USB_GADGET_DEBUG_FILES is not set
+# CONFIG_USB_GADGET_DEBUG_FS is not set
+CONFIG_USB_GADGET_VBUS_DRAW=2
+CONFIG_USB_GADGET_STORAGE_NUM_BUFFERS=2
+# CONFIG_USB_R8A66597 is not set
+# CONFIG_USB_MV_UDC is not set
+# CONFIG_USB_M66592 is not set
+# CONFIG_USB_AMD5536UDC is not set
+# CONFIG_USB_CI13XXX_PCI is not set
+# CONFIG_USB_NET2272 is not set
+# CONFIG_USB_NET2280 is not set
+# CONFIG_USB_GOKU is not set
+CONFIG_USB_EG20T=m
+# CONFIG_USB_DUMMY_HCD is not set
+CONFIG_USB_GADGET_DUALSPEED=y
+# CONFIG_USB_ZERO is not set
+# CONFIG_USB_AUDIO is not set
+# CONFIG_USB_ETH is not set
+# CONFIG_USB_G_NCM is not set
+# CONFIG_USB_GADGETFS is not set
+# CONFIG_USB_FUNCTIONFS is not set
+# CONFIG_USB_FILE_STORAGE is not set
+# CONFIG_USB_MASS_STORAGE is not set
+# CONFIG_USB_G_SERIAL is not set
+# CONFIG_USB_MIDI_GADGET is not set
+# CONFIG_USB_G_PRINTER is not set
+# CONFIG_USB_CDC_COMPOSITE is not set
+# CONFIG_USB_G_NOKIA is not set
+# CONFIG_USB_G_ACM_MS is not set
+# CONFIG_USB_G_MULTI is not set
+# CONFIG_USB_G_HID is not set
+# CONFIG_USB_G_DBGP is not set
+# CONFIG_USB_G_WEBCAM is not set
+
+#
+# OTG and related infrastructure
+#
+CONFIG_USB_OTG_UTILS=y
+# CONFIG_USB_GPIO_VBUS is not set
+CONFIG_NOP_USB_XCEIV=m
+CONFIG_UWB=m
+CONFIG_UWB_HWA=m
+CONFIG_UWB_WHCI=m
+CONFIG_UWB_I1480U=m
+CONFIG_MMC=m
+# CONFIG_MMC_DEBUG is not set
+# CONFIG_MMC_UNSAFE_RESUME is not set
+# CONFIG_MMC_CLKGATE is not set
+
+#
+# MMC/SD/SDIO Card Drivers
+#
+CONFIG_MMC_BLOCK=m
+CONFIG_MMC_BLOCK_MINORS=8
+CONFIG_MMC_BLOCK_BOUNCE=y
+CONFIG_SDIO_UART=m
+# CONFIG_MMC_TEST is not set
+
+#
+# MMC/SD/SDIO Host Controller Drivers
+#
+CONFIG_MMC_SDHCI=m
+CONFIG_MMC_SDHCI_PCI=m
+CONFIG_MMC_RICOH_MMC=y
+CONFIG_MMC_SDHCI_PLTFM=m
+CONFIG_MMC_WBSD=m
+CONFIG_MMC_TIFM_SD=m
+CONFIG_MMC_SDRICOH_CS=m
+CONFIG_MMC_CB710=m
+CONFIG_MMC_VIA_SDMMC=m
+CONFIG_MMC_VUB300=m
+CONFIG_MMC_USHC=m
+CONFIG_MEMSTICK=m
+# CONFIG_MEMSTICK_DEBUG is not set
+
+#
+# MemoryStick drivers
+#
+# CONFIG_MEMSTICK_UNSAFE_RESUME is not set
+CONFIG_MSPRO_BLOCK=m
+
+#
+# MemoryStick Host Controller Drivers
+#
+CONFIG_MEMSTICK_TIFM_MS=m
+CONFIG_MEMSTICK_JMICRON_38X=m
+CONFIG_MEMSTICK_R592=m
+CONFIG_NEW_LEDS=y
+CONFIG_LEDS_CLASS=y
+
+#
+# LED drivers
+#
+# CONFIG_LEDS_LM3530 is not set
+CONFIG_LEDS_NET48XX=m
+CONFIG_LEDS_WRAP=m
+CONFIG_LEDS_PCA9532=m
+# CONFIG_LEDS_PCA9532_GPIO is not set
+# CONFIG_LEDS_GPIO is not set
+CONFIG_LEDS_LP3944=m
+# CONFIG_LEDS_LP5521 is not set
+# CONFIG_LEDS_LP5523 is not set
+CONFIG_LEDS_CLEVO_MAIL=m
+CONFIG_LEDS_PCA955X=m
+# CONFIG_LEDS_PCA9633 is not set
+CONFIG_LEDS_DAC124S085=m
+CONFIG_LEDS_REGULATOR=m
+CONFIG_LEDS_BD2802=m
+CONFIG_LEDS_INTEL_SS4200=m
+CONFIG_LEDS_LT3593=m
+CONFIG_LEDS_DELL_NETBOOKS=m
+# CONFIG_LEDS_TCA6507 is not set
+# CONFIG_LEDS_OT200 is not set
+CONFIG_LEDS_TRIGGERS=y
+
+#
+# LED Triggers
+#
+CONFIG_LEDS_TRIGGER_TIMER=m
+CONFIG_LEDS_TRIGGER_HEARTBEAT=m
+CONFIG_LEDS_TRIGGER_BACKLIGHT=m
+# CONFIG_LEDS_TRIGGER_GPIO is not set
+CONFIG_LEDS_TRIGGER_DEFAULT_ON=m
+
+#
+# iptables trigger is under Netfilter config (LED target)
+#
+CONFIG_ACCESSIBILITY=y
+CONFIG_A11Y_BRAILLE_CONSOLE=y
+CONFIG_INFINIBAND=m
+CONFIG_INFINIBAND_USER_MAD=m
+CONFIG_INFINIBAND_USER_ACCESS=m
+CONFIG_INFINIBAND_USER_MEM=y
+CONFIG_INFINIBAND_ADDR_TRANS=y
+CONFIG_INFINIBAND_MTHCA=m
+CONFIG_INFINIBAND_MTHCA_DEBUG=y
+CONFIG_INFINIBAND_AMSO1100=m
+# CONFIG_INFINIBAND_AMSO1100_DEBUG is not set
+CONFIG_INFINIBAND_CXGB3=m
+# CONFIG_INFINIBAND_CXGB3_DEBUG is not set
+CONFIG_INFINIBAND_CXGB4=m
+CONFIG_MLX4_INFINIBAND=m
+CONFIG_INFINIBAND_NES=m
+# CONFIG_INFINIBAND_NES_DEBUG is not set
+CONFIG_INFINIBAND_IPOIB=m
+CONFIG_INFINIBAND_IPOIB_CM=y
+CONFIG_INFINIBAND_IPOIB_DEBUG=y
+# CONFIG_INFINIBAND_IPOIB_DEBUG_DATA is not set
+CONFIG_INFINIBAND_SRP=m
+# CONFIG_INFINIBAND_SRPT is not set
+CONFIG_INFINIBAND_ISER=m
+CONFIG_EDAC=y
+
+#
+# Reporting subsystems
+#
+# CONFIG_EDAC_DEBUG is not set
+CONFIG_EDAC_DECODE_MCE=m
+# CONFIG_EDAC_MCE_INJ is not set
+CONFIG_EDAC_MM_EDAC=m
+CONFIG_EDAC_AMD76X=m
+CONFIG_EDAC_E7XXX=m
+CONFIG_EDAC_E752X=m
+CONFIG_EDAC_I82875P=m
+CONFIG_EDAC_I82975X=m
+CONFIG_EDAC_I3000=m
+CONFIG_EDAC_I3200=m
+CONFIG_EDAC_X38=m
+CONFIG_EDAC_I5400=m
+CONFIG_EDAC_I7CORE=m
+CONFIG_EDAC_I82860=m
+CONFIG_EDAC_R82600=m
+CONFIG_EDAC_I5000=m
+CONFIG_EDAC_I5100=m
+CONFIG_EDAC_I7300=m
+CONFIG_RTC_LIB=y
+CONFIG_RTC_CLASS=y
+CONFIG_RTC_HCTOSYS=y
+CONFIG_RTC_HCTOSYS_DEVICE="rtc0"
+# CONFIG_RTC_DEBUG is not set
+
+#
+# RTC interfaces
+#
+CONFIG_RTC_INTF_SYSFS=y
+CONFIG_RTC_INTF_PROC=y
+CONFIG_RTC_INTF_DEV=y
+# CONFIG_RTC_INTF_DEV_UIE_EMUL is not set
+# CONFIG_RTC_DRV_TEST is not set
+
+#
+# I2C RTC drivers
+#
+CONFIG_RTC_DRV_DS1307=m
+CONFIG_RTC_DRV_DS1374=m
+CONFIG_RTC_DRV_DS1672=m
+# CONFIG_RTC_DRV_DS3232 is not set
+CONFIG_RTC_DRV_MAX6900=m
+CONFIG_RTC_DRV_RS5C372=m
+CONFIG_RTC_DRV_ISL1208=m
+# CONFIG_RTC_DRV_ISL12022 is not set
+CONFIG_RTC_DRV_X1205=m
+CONFIG_RTC_DRV_PCF8563=m
+CONFIG_RTC_DRV_PCF8583=m
+CONFIG_RTC_DRV_M41T80=m
+# CONFIG_RTC_DRV_M41T80_WDT is not set
+CONFIG_RTC_DRV_BQ32K=m
+CONFIG_RTC_DRV_S35390A=m
+CONFIG_RTC_DRV_FM3130=m
+CONFIG_RTC_DRV_RX8581=m
+CONFIG_RTC_DRV_RX8025=m
+# CONFIG_RTC_DRV_EM3027 is not set
+# CONFIG_RTC_DRV_RV3029C2 is not set
+
+#
+# SPI RTC drivers
+#
+# CONFIG_RTC_DRV_M41T93 is not set
+CONFIG_RTC_DRV_M41T94=m
+CONFIG_RTC_DRV_DS1305=m
+CONFIG_RTC_DRV_DS1390=m
+CONFIG_RTC_DRV_MAX6902=m
+CONFIG_RTC_DRV_R9701=m
+CONFIG_RTC_DRV_RS5C348=m
+CONFIG_RTC_DRV_DS3234=m
+CONFIG_RTC_DRV_PCF2123=m
+
+#
+# Platform RTC drivers
+#
+CONFIG_RTC_DRV_CMOS=y
+CONFIG_RTC_DRV_DS1286=m
+CONFIG_RTC_DRV_DS1511=m
+CONFIG_RTC_DRV_DS1553=m
+CONFIG_RTC_DRV_DS1742=m
+CONFIG_RTC_DRV_STK17TA8=m
+CONFIG_RTC_DRV_M48T86=m
+CONFIG_RTC_DRV_M48T35=m
+CONFIG_RTC_DRV_M48T59=m
+CONFIG_RTC_DRV_MSM6242=m
+CONFIG_RTC_DRV_BQ4802=m
+CONFIG_RTC_DRV_RP5C01=m
+CONFIG_RTC_DRV_V3020=m
+CONFIG_RTC_DRV_PCF50633=m
+
+#
+# on-CPU RTC drivers
+#
+CONFIG_DMADEVICES=y
+# CONFIG_DMADEVICES_DEBUG is not set
+
+#
+# DMA Devices
+#
+# CONFIG_INTEL_MID_DMAC is not set
+CONFIG_INTEL_IOATDMA=m
+# CONFIG_TIMB_DMA is not set
+CONFIG_PCH_DMA=m
+CONFIG_DMA_ENGINE=y
+
+#
+# DMA Clients
+#
+CONFIG_ASYNC_TX_DMA=y
+# CONFIG_DMATEST is not set
+CONFIG_DCA=m
+# CONFIG_AUXDISPLAY is not set
+CONFIG_UIO=m
+CONFIG_UIO_CIF=m
+CONFIG_UIO_PDRV=m
+CONFIG_UIO_PDRV_GENIRQ=m
+CONFIG_UIO_AEC=m
+CONFIG_UIO_SERCOS3=m
+CONFIG_UIO_PCI_GENERIC=m
+CONFIG_UIO_NETX=m
+CONFIG_VIRTIO=m
+CONFIG_VIRTIO_RING=m
+
+#
+# Virtio drivers
+#
+CONFIG_VIRTIO_PCI=m
+CONFIG_VIRTIO_BALLOON=m
+# CONFIG_VIRTIO_MMIO is not set
+
+#
+# Microsoft Hyper-V guest support
+#
+CONFIG_HYPERV=m
+CONFIG_HYPERV_UTILS=m
+
+#
+# Xen driver support
+#
+CONFIG_XEN_BALLOON=y
+CONFIG_XEN_SCRUB_PAGES=y
+CONFIG_XEN_DEV_EVTCHN=m
+CONFIG_XEN_BACKEND=y
+CONFIG_XENFS=m
+CONFIG_XEN_COMPAT_XENFS=y
+CONFIG_XEN_SYS_HYPERVISOR=y
+CONFIG_XEN_XENBUS_FRONTEND=y
+CONFIG_XEN_GNTDEV=m
+CONFIG_XEN_GRANT_DEV_ALLOC=m
+CONFIG_SWIOTLB_XEN=y
+CONFIG_XEN_PCIDEV_BACKEND=m
+CONFIG_XEN_PRIVCMD=m
+# CONFIG_XEN_ACPI_PROCESSOR is not set
+CONFIG_STAGING=y
+CONFIG_ET131X=m
+# CONFIG_SLICOSS is not set
+CONFIG_USBIP_CORE=m
+CONFIG_USBIP_VHCI_HCD=m
+CONFIG_USBIP_HOST=m
+# CONFIG_USBIP_DEBUG is not set
+# CONFIG_W35UND is not set
+CONFIG_PRISM2_USB=m
+# CONFIG_ECHO is not set
+CONFIG_COMEDI=m
+# CONFIG_COMEDI_DEBUG is not set
+CONFIG_COMEDI_MISC_DRIVERS=m
+CONFIG_COMEDI_KCOMEDILIB=m
+CONFIG_COMEDI_BOND=m
+CONFIG_COMEDI_TEST=m
+CONFIG_COMEDI_PARPORT=m
+CONFIG_COMEDI_SERIAL2002=m
+# CONFIG_COMEDI_SKEL is not set
+CONFIG_COMEDI_ISA_DRIVERS=m
+CONFIG_COMEDI_ACL7225B=m
+CONFIG_COMEDI_PCL711=m
+CONFIG_COMEDI_PCL724=m
+CONFIG_COMEDI_PCL725=m
+CONFIG_COMEDI_PCL726=m
+CONFIG_COMEDI_PCL730=m
+CONFIG_COMEDI_PCL812=m
+CONFIG_COMEDI_PCL816=m
+CONFIG_COMEDI_PCL818=m
+CONFIG_COMEDI_PCM3724=m
+CONFIG_COMEDI_PCM3730=m
+CONFIG_COMEDI_RTI800=m
+CONFIG_COMEDI_RTI802=m
+CONFIG_COMEDI_DAS16M1=m
+CONFIG_COMEDI_DAS16=m
+CONFIG_COMEDI_DAS800=m
+CONFIG_COMEDI_DAS1800=m
+CONFIG_COMEDI_DAS6402=m
+CONFIG_COMEDI_DT2801=m
+CONFIG_COMEDI_DT2811=m
+CONFIG_COMEDI_DT2814=m
+CONFIG_COMEDI_DT2815=m
+CONFIG_COMEDI_DT2817=m
+CONFIG_COMEDI_DT282X=m
+CONFIG_COMEDI_DMM32AT=m
+CONFIG_COMEDI_FL512=m
+CONFIG_COMEDI_AIO_AIO12_8=m
+CONFIG_COMEDI_AIO_IIRO_16=m
+CONFIG_COMEDI_C6XDIGIO=m
+CONFIG_COMEDI_MPC624=m
+CONFIG_COMEDI_ADQ12B=m
+CONFIG_COMEDI_NI_AT_A2150=m
+CONFIG_COMEDI_NI_AT_AO=m
+CONFIG_COMEDI_NI_ATMIO=m
+CONFIG_COMEDI_NI_ATMIO16D=m
+CONFIG_COMEDI_PCMAD=m
+CONFIG_COMEDI_PCMDA12=m
+CONFIG_COMEDI_PCMMIO=m
+CONFIG_COMEDI_PCMUIO=m
+CONFIG_COMEDI_MULTIQ3=m
+CONFIG_COMEDI_POC=m
+CONFIG_COMEDI_PCI_DRIVERS=m
+CONFIG_COMEDI_ADDI_APCI_035=m
+CONFIG_COMEDI_ADDI_APCI_1032=m
+CONFIG_COMEDI_ADDI_APCI_1500=m
+CONFIG_COMEDI_ADDI_APCI_1516=m
+CONFIG_COMEDI_ADDI_APCI_1564=m
+CONFIG_COMEDI_ADDI_APCI_16XX=m
+CONFIG_COMEDI_ADDI_APCI_2016=m
+CONFIG_COMEDI_ADDI_APCI_2032=m
+CONFIG_COMEDI_ADDI_APCI_2200=m
+CONFIG_COMEDI_ADDI_APCI_3001=m
+CONFIG_COMEDI_ADDI_APCI_3120=m
+CONFIG_COMEDI_ADDI_APCI_3501=m
+CONFIG_COMEDI_ADDI_APCI_3XXX=m
+CONFIG_COMEDI_ADL_PCI6208=m
+# CONFIG_COMEDI_ADL_PCI7230 is not set
+CONFIG_COMEDI_ADL_PCI7296=m
+CONFIG_COMEDI_ADL_PCI7432=m
+CONFIG_COMEDI_ADL_PCI8164=m
+CONFIG_COMEDI_ADL_PCI9111=m
+CONFIG_COMEDI_ADL_PCI9118=m
+CONFIG_COMEDI_ADV_PCI1710=m
+CONFIG_COMEDI_ADV_PCI1723=m
+CONFIG_COMEDI_ADV_PCI_DIO=m
+CONFIG_COMEDI_AMPLC_DIO200=m
+CONFIG_COMEDI_AMPLC_PC236=m
+CONFIG_COMEDI_AMPLC_PC263=m
+CONFIG_COMEDI_AMPLC_PCI224=m
+CONFIG_COMEDI_AMPLC_PCI230=m
+CONFIG_COMEDI_CONTEC_PCI_DIO=m
+CONFIG_COMEDI_DT3000=m
+# CONFIG_COMEDI_DYNA_PCI10XX is not set
+CONFIG_COMEDI_UNIOXX5=m
+CONFIG_COMEDI_GSC_HPDI=m
+CONFIG_COMEDI_ICP_MULTI=m
+CONFIG_COMEDI_II_PCI20KC=m
+CONFIG_COMEDI_DAQBOARD2000=m
+CONFIG_COMEDI_JR3_PCI=m
+CONFIG_COMEDI_KE_COUNTER=m
+CONFIG_COMEDI_CB_PCIDAS64=m
+CONFIG_COMEDI_CB_PCIDAS=m
+CONFIG_COMEDI_CB_PCIDDA=m
+CONFIG_COMEDI_CB_PCIDIO=m
+CONFIG_COMEDI_CB_PCIMDAS=m
+CONFIG_COMEDI_CB_PCIMDDA=m
+CONFIG_COMEDI_ME4000=m
+CONFIG_COMEDI_ME_DAQ=m
+CONFIG_COMEDI_NI_6527=m
+CONFIG_COMEDI_NI_65XX=m
+CONFIG_COMEDI_NI_660X=m
+CONFIG_COMEDI_NI_670X=m
+CONFIG_COMEDI_NI_PCIDIO=m
+CONFIG_COMEDI_NI_PCIMIO=m
+CONFIG_COMEDI_RTD520=m
+CONFIG_COMEDI_S526=m
+CONFIG_COMEDI_S626=m
+CONFIG_COMEDI_SSV_DNP=m
+CONFIG_COMEDI_PCMCIA_DRIVERS=m
+CONFIG_COMEDI_CB_DAS16_CS=m
+CONFIG_COMEDI_DAS08_CS=m
+CONFIG_COMEDI_NI_DAQ_700_CS=m
+CONFIG_COMEDI_NI_DAQ_DIO24_CS=m
+CONFIG_COMEDI_NI_LABPC_CS=m
+CONFIG_COMEDI_NI_MIO_CS=m
+CONFIG_COMEDI_QUATECH_DAQP_CS=m
+CONFIG_COMEDI_USB_DRIVERS=m
+CONFIG_COMEDI_DT9812=m
+CONFIG_COMEDI_USBDUX=m
+CONFIG_COMEDI_USBDUXFAST=m
+# CONFIG_COMEDI_USBDUXSIGMA is not set
+CONFIG_COMEDI_VMK80XX=m
+CONFIG_COMEDI_NI_COMMON=m
+CONFIG_COMEDI_MITE=m
+CONFIG_COMEDI_NI_TIO=m
+CONFIG_COMEDI_NI_LABPC=m
+CONFIG_COMEDI_8255=m
+CONFIG_COMEDI_DAS08=m
+CONFIG_COMEDI_FC=m
+# CONFIG_ASUS_OLED is not set
+# CONFIG_PANEL is not set
+CONFIG_R8187SE=m
+CONFIG_RTL8192U=m
+# CONFIG_RTLLIB is not set
+CONFIG_R8712U=m
+CONFIG_RTS_PSTOR=m
+# CONFIG_RTS_PSTOR_DEBUG is not set
+CONFIG_RTS5139=m
+# CONFIG_RTS5139_DEBUG is not set
+# CONFIG_TRANZPORT is not set
+# CONFIG_IDE_PHISON is not set
+CONFIG_LINE6_USB=m
+# CONFIG_LINE6_USB_DEBUG is not set
+# CONFIG_LINE6_USB_DUMP_CTRL is not set
+# CONFIG_LINE6_USB_DUMP_MIDI is not set
+# CONFIG_LINE6_USB_DUMP_PCM is not set
+# CONFIG_LINE6_USB_RAW is not set
+# CONFIG_LINE6_USB_IMPULSE_RESPONSE is not set
+# CONFIG_USB_SERIAL_QUATECH2 is not set
+# CONFIG_USB_SERIAL_QUATECH_USB2 is not set
+# CONFIG_VT6655 is not set
+CONFIG_VT6656=m
+# CONFIG_VME_BUS is not set
+# CONFIG_DX_SEP is not set
+# CONFIG_IIO is not set
+CONFIG_ZRAM=m
+# CONFIG_ZRAM_DEBUG is not set
+CONFIG_ZSMALLOC=m
+# CONFIG_WLAGS49_H2 is not set
+# CONFIG_WLAGS49_H25 is not set
+# CONFIG_FB_SM7XX is not set
+# CONFIG_CRYSTALHD is not set
+# CONFIG_CXT1E1 is not set
+# CONFIG_FB_XGI is not set
+# CONFIG_ACPI_QUICKSTART is not set
+# CONFIG_SBE_2T3E3 is not set
+# CONFIG_USB_ENESTORAGE is not set
+# CONFIG_BCM_WIMAX is not set
+# CONFIG_FT1000 is not set
+
+#
+# Speakup console speech
+#
+CONFIG_SPEAKUP=m
+CONFIG_SPEAKUP_SYNTH_ACNTSA=m
+CONFIG_SPEAKUP_SYNTH_ACNTPC=m
+CONFIG_SPEAKUP_SYNTH_APOLLO=m
+CONFIG_SPEAKUP_SYNTH_AUDPTR=m
+CONFIG_SPEAKUP_SYNTH_BNS=m
+CONFIG_SPEAKUP_SYNTH_DECTLK=m
+CONFIG_SPEAKUP_SYNTH_DECEXT=m
+# CONFIG_SPEAKUP_SYNTH_DECPC is not set
+CONFIG_SPEAKUP_SYNTH_DTLK=m
+CONFIG_SPEAKUP_SYNTH_KEYPC=m
+CONFIG_SPEAKUP_SYNTH_LTLK=m
+CONFIG_SPEAKUP_SYNTH_SOFT=m
+CONFIG_SPEAKUP_SYNTH_SPKOUT=m
+CONFIG_SPEAKUP_SYNTH_TXPRT=m
+CONFIG_SPEAKUP_SYNTH_DUMMY=m
+# CONFIG_TOUCHSCREEN_CLEARPAD_TM1217 is not set
+# CONFIG_TOUCHSCREEN_SYNAPTICS_I2C_RMI4 is not set
+# CONFIG_INTEL_MEI is not set
+CONFIG_STAGING_MEDIA=y
+# CONFIG_DVB_AS102 is not set
+# CONFIG_DVB_CXD2099 is not set
+# CONFIG_VIDEO_DT3155 is not set
+CONFIG_EASYCAP=m
+# CONFIG_EASYCAP_DEBUG is not set
+# CONFIG_VIDEO_GO7007 is not set
+# CONFIG_SOLO6X10 is not set
+CONFIG_LIRC_STAGING=y
+CONFIG_LIRC_BT829=m
+CONFIG_LIRC_IGORPLUGUSB=m
+CONFIG_LIRC_IMON=m
+# CONFIG_LIRC_PARALLEL is not set
+CONFIG_LIRC_SASEM=m
+CONFIG_LIRC_SERIAL=m
+CONFIG_LIRC_SERIAL_TRANSMITTER=y
+CONFIG_LIRC_SIR=m
+CONFIG_LIRC_TTUSBIR=m
+CONFIG_LIRC_ZILOG=m
+
+#
+# Android
+#
+# CONFIG_ANDROID is not set
+CONFIG_PHONE=m
+CONFIG_PHONE_IXJ=m
+CONFIG_PHONE_IXJ_PCMCIA=m
+# CONFIG_USB_WPAN_HCD is not set
+CONFIG_X86_PLATFORM_DEVICES=y
+CONFIG_ACER_WMI=m
+CONFIG_ACERHDF=m
+CONFIG_ASUS_LAPTOP=m
+CONFIG_DELL_LAPTOP=m
+CONFIG_DELL_WMI=m
+CONFIG_DELL_WMI_AIO=m
+CONFIG_FUJITSU_LAPTOP=m
+# CONFIG_FUJITSU_LAPTOP_DEBUG is not set
+# CONFIG_FUJITSU_TABLET is not set
+CONFIG_AMILO_RFKILL=m
+CONFIG_TC1100_WMI=m
+CONFIG_HP_ACCEL=m
+CONFIG_HP_WMI=m
+CONFIG_MSI_LAPTOP=m
+CONFIG_PANASONIC_LAPTOP=m
+CONFIG_COMPAL_LAPTOP=m
+CONFIG_SONY_LAPTOP=m
+CONFIG_SONYPI_COMPAT=y
+CONFIG_IDEAPAD_LAPTOP=m
+CONFIG_THINKPAD_ACPI=m
+CONFIG_THINKPAD_ACPI_ALSA_SUPPORT=y
+# CONFIG_THINKPAD_ACPI_DEBUGFACILITIES is not set
+# CONFIG_THINKPAD_ACPI_DEBUG is not set
+# CONFIG_THINKPAD_ACPI_UNSAFE_LEDS is not set
+CONFIG_THINKPAD_ACPI_VIDEO=y
+CONFIG_THINKPAD_ACPI_HOTKEY_POLL=y
+CONFIG_SENSORS_HDAPS=m
+# CONFIG_INTEL_MENLOW is not set
+CONFIG_EEEPC_LAPTOP=m
+CONFIG_ASUS_WMI=m
+CONFIG_ASUS_NB_WMI=m
+CONFIG_EEEPC_WMI=m
+CONFIG_ACPI_WMI=m
+CONFIG_MSI_WMI=m
+CONFIG_TOPSTAR_LAPTOP=m
+CONFIG_ACPI_TOSHIBA=m
+CONFIG_TOSHIBA_BT_RFKILL=m
+CONFIG_ACPI_CMPC=m
+CONFIG_INTEL_IPS=m
+# CONFIG_IBM_RTL is not set
+CONFIG_XO15_EBOOK=m
+CONFIG_SAMSUNG_LAPTOP=m
+CONFIG_MXM_WMI=m
+CONFIG_INTEL_OAKTRAIL=m
+# CONFIG_SAMSUNG_Q10 is not set
+# CONFIG_APPLE_GMUX is not set
+
+#
+# Hardware Spinlock drivers
+#
+CONFIG_CLKSRC_I8253=y
+CONFIG_CLKEVT_I8253=y
+CONFIG_I8253_LOCK=y
+CONFIG_CLKBLD_I8253=y
+CONFIG_IOMMU_SUPPORT=y
+# CONFIG_INTEL_IOMMU is not set
+
+#
+# Remoteproc drivers (EXPERIMENTAL)
+#
+
+#
+# Rpmsg drivers (EXPERIMENTAL)
+#
+# CONFIG_VIRT_DRIVERS is not set
+# CONFIG_PM_DEVFREQ is not set
+
+#
+# Firmware Drivers
+#
+CONFIG_EDD=m
+# CONFIG_EDD_OFF is not set
+CONFIG_FIRMWARE_MEMMAP=y
+CONFIG_EFI_VARS=m
+CONFIG_EFI_VARS_PSTORE=y
+CONFIG_EFI_VARS_PSTORE_DEFAULT_DISABLE=y
+CONFIG_DELL_RBU=m
+CONFIG_DCDBAS=m
+CONFIG_DMIID=y
+# CONFIG_DMI_SYSFS is not set
+CONFIG_ISCSI_IBFT_FIND=y
+CONFIG_ISCSI_IBFT=m
+# CONFIG_GOOGLE_FIRMWARE is not set
+
+#
+# File systems
+#
+CONFIG_DCACHE_WORD_ACCESS=y
+CONFIG_EXT2_FS=m
+CONFIG_EXT2_FS_XATTR=y
+CONFIG_EXT2_FS_POSIX_ACL=y
+CONFIG_EXT2_FS_SECURITY=y
+# CONFIG_EXT2_FS_XIP is not set
+CONFIG_EXT3_FS=m
+CONFIG_EXT3_DEFAULTS_TO_ORDERED=y
+CONFIG_EXT3_FS_XATTR=y
+CONFIG_EXT3_FS_POSIX_ACL=y
+CONFIG_EXT3_FS_SECURITY=y
+CONFIG_EXT4_FS=m
+CONFIG_EXT4_FS_XATTR=y
+CONFIG_EXT4_FS_POSIX_ACL=y
+CONFIG_EXT4_FS_SECURITY=y
+# CONFIG_EXT4_DEBUG is not set
+CONFIG_JBD=m
+# CONFIG_JBD_DEBUG is not set
+CONFIG_JBD2=m
+# CONFIG_JBD2_DEBUG is not set
+CONFIG_FS_MBCACHE=m
+CONFIG_REISERFS_FS=m
+# CONFIG_REISERFS_CHECK is not set
+# CONFIG_REISERFS_PROC_INFO is not set
+CONFIG_REISERFS_FS_XATTR=y
+CONFIG_REISERFS_FS_POSIX_ACL=y
+CONFIG_REISERFS_FS_SECURITY=y
+CONFIG_JFS_FS=m
+CONFIG_JFS_POSIX_ACL=y
+CONFIG_JFS_SECURITY=y
+# CONFIG_JFS_DEBUG is not set
+# CONFIG_JFS_STATISTICS is not set
+CONFIG_XFS_FS=m
+CONFIG_XFS_QUOTA=y
+CONFIG_XFS_POSIX_ACL=y
+CONFIG_XFS_RT=y
+# CONFIG_XFS_DEBUG is not set
+CONFIG_GFS2_FS=m
+CONFIG_GFS2_FS_LOCKING_DLM=y
+CONFIG_OCFS2_FS=m
+CONFIG_OCFS2_FS_O2CB=m
+CONFIG_OCFS2_FS_USERSPACE_CLUSTER=m
+CONFIG_OCFS2_FS_STATS=y
+CONFIG_OCFS2_DEBUG_MASKLOG=y
+# CONFIG_OCFS2_DEBUG_FS is not set
+CONFIG_BTRFS_FS=m
+CONFIG_BTRFS_FS_POSIX_ACL=y
+# CONFIG_BTRFS_FS_CHECK_INTEGRITY is not set
+CONFIG_NILFS2_FS=m
+CONFIG_FS_POSIX_ACL=y
+CONFIG_EXPORTFS=y
+CONFIG_FILE_LOCKING=y
+CONFIG_FSNOTIFY=y
+CONFIG_DNOTIFY=y
+CONFIG_INOTIFY_USER=y
+CONFIG_FANOTIFY=y
+# CONFIG_FANOTIFY_ACCESS_PERMISSIONS is not set
+CONFIG_QUOTA=y
+CONFIG_QUOTA_NETLINK_INTERFACE=y
+CONFIG_PRINT_QUOTA_WARNING=y
+# CONFIG_QUOTA_DEBUG is not set
+CONFIG_QUOTA_TREE=m
+CONFIG_QFMT_V1=y
+CONFIG_QFMT_V2=m
+CONFIG_QUOTACTL=y
+CONFIG_AUTOFS4_FS=m
+CONFIG_FUSE_FS=m
+CONFIG_CUSE=m
+CONFIG_GENERIC_ACL=y
+
+#
+# Caches
+#
+CONFIG_FSCACHE=m
+CONFIG_FSCACHE_STATS=y
+# CONFIG_FSCACHE_HISTOGRAM is not set
+# CONFIG_FSCACHE_DEBUG is not set
+# CONFIG_FSCACHE_OBJECT_LIST is not set
+CONFIG_CACHEFILES=m
+# CONFIG_CACHEFILES_DEBUG is not set
+# CONFIG_CACHEFILES_HISTOGRAM is not set
+
+#
+# CD-ROM/DVD Filesystems
+#
+CONFIG_ISO9660_FS=m
+CONFIG_JOLIET=y
+CONFIG_ZISOFS=y
+CONFIG_UDF_FS=m
+CONFIG_UDF_NLS=y
+
+#
+# DOS/FAT/NT Filesystems
+#
+CONFIG_FAT_FS=m
+CONFIG_MSDOS_FS=m
+CONFIG_VFAT_FS=m
+CONFIG_FAT_DEFAULT_CODEPAGE=437
+CONFIG_FAT_DEFAULT_IOCHARSET="utf8"
+CONFIG_NTFS_FS=m
+# CONFIG_NTFS_DEBUG is not set
+CONFIG_NTFS_RW=y
+
+#
+# Pseudo filesystems
+#
+CONFIG_PROC_FS=y
+CONFIG_PROC_KCORE=y
+CONFIG_PROC_VMCORE=y
+CONFIG_PROC_SYSCTL=y
+CONFIG_PROC_PAGE_MONITOR=y
+CONFIG_SYSFS=y
+CONFIG_TMPFS=y
+CONFIG_TMPFS_POSIX_ACL=y
+CONFIG_TMPFS_XATTR=y
+CONFIG_HUGETLBFS=y
+CONFIG_HUGETLB_PAGE=y
+CONFIG_CONFIGFS_FS=m
+CONFIG_MISC_FILESYSTEMS=y
+CONFIG_ADFS_FS=m
+# CONFIG_ADFS_FS_RW is not set
+CONFIG_AFFS_FS=m
+CONFIG_ECRYPT_FS=m
+CONFIG_HFS_FS=m
+CONFIG_HFSPLUS_FS=m
+CONFIG_BEFS_FS=m
+# CONFIG_BEFS_DEBUG is not set
+CONFIG_BFS_FS=m
+CONFIG_EFS_FS=m
+CONFIG_JFFS2_FS=m
+CONFIG_JFFS2_FS_DEBUG=0
+CONFIG_JFFS2_FS_WRITEBUFFER=y
+# CONFIG_JFFS2_FS_WBUF_VERIFY is not set
+CONFIG_JFFS2_SUMMARY=y
+CONFIG_JFFS2_FS_XATTR=y
+CONFIG_JFFS2_FS_POSIX_ACL=y
+CONFIG_JFFS2_FS_SECURITY=y
+CONFIG_JFFS2_COMPRESSION_OPTIONS=y
+CONFIG_JFFS2_ZLIB=y
+CONFIG_JFFS2_LZO=y
+CONFIG_JFFS2_RTIME=y
+# CONFIG_JFFS2_RUBIN is not set
+# CONFIG_JFFS2_CMODE_NONE is not set
+CONFIG_JFFS2_CMODE_PRIORITY=y
+# CONFIG_JFFS2_CMODE_SIZE is not set
+# CONFIG_JFFS2_CMODE_FAVOURLZO is not set
+CONFIG_UBIFS_FS=m
+CONFIG_UBIFS_FS_XATTR=y
+CONFIG_UBIFS_FS_ADVANCED_COMPR=y
+CONFIG_UBIFS_FS_LZO=y
+CONFIG_UBIFS_FS_ZLIB=y
+# CONFIG_UBIFS_FS_DEBUG is not set
+CONFIG_LOGFS=m
+CONFIG_CRAMFS=m
+CONFIG_SQUASHFS=m
+CONFIG_SQUASHFS_XATTR=y
+CONFIG_SQUASHFS_ZLIB=y
+CONFIG_SQUASHFS_LZO=y
+CONFIG_SQUASHFS_XZ=y
+# CONFIG_SQUASHFS_4K_DEVBLK_SIZE is not set
+# CONFIG_SQUASHFS_EMBEDDED is not set
+CONFIG_SQUASHFS_FRAGMENT_CACHE_SIZE=3
+CONFIG_VXFS_FS=m
+CONFIG_MINIX_FS=m
+CONFIG_OMFS_FS=m
+# CONFIG_HPFS_FS is not set
+CONFIG_QNX4FS_FS=m
+# CONFIG_QNX6FS_FS is not set
+CONFIG_ROMFS_FS=m
+# CONFIG_ROMFS_BACKED_BY_BLOCK is not set
+# CONFIG_ROMFS_BACKED_BY_MTD is not set
+CONFIG_ROMFS_BACKED_BY_BOTH=y
+CONFIG_ROMFS_ON_BLOCK=y
+CONFIG_ROMFS_ON_MTD=y
+CONFIG_PSTORE=y
+CONFIG_SYSV_FS=m
+CONFIG_UFS_FS=m
+# CONFIG_UFS_FS_WRITE is not set
+# CONFIG_UFS_DEBUG is not set
+CONFIG_EXOFS_FS=m
+# CONFIG_EXOFS_DEBUG is not set
+CONFIG_ORE=m
+CONFIG_NETWORK_FILESYSTEMS=y
+CONFIG_NFS_FS=m
+CONFIG_NFS_V3=y
+CONFIG_NFS_V3_ACL=y
+CONFIG_NFS_V4=y
+CONFIG_NFS_V4_1=y
+CONFIG_PNFS_FILE_LAYOUT=m
+CONFIG_PNFS_BLOCK=m
+CONFIG_PNFS_OBJLAYOUT=m
+CONFIG_NFS_V4_1_IMPLEMENTATION_ID_DOMAIN="n"
+CONFIG_NFS_FSCACHE=y
+# CONFIG_NFS_USE_LEGACY_DNS is not set
+CONFIG_NFS_USE_KERNEL_DNS=y
+CONFIG_NFSD=m
+CONFIG_NFSD_V2_ACL=y
+CONFIG_NFSD_V3=y
+CONFIG_NFSD_V3_ACL=y
+CONFIG_NFSD_V4=y
+CONFIG_NFSD_FAULT_INJECTION=y
+CONFIG_LOCKD=m
+CONFIG_LOCKD_V4=y
+CONFIG_NFS_ACL_SUPPORT=m
+CONFIG_NFS_COMMON=y
+CONFIG_SUNRPC=m
+CONFIG_SUNRPC_GSS=m
+CONFIG_SUNRPC_BACKCHANNEL=y
+CONFIG_SUNRPC_XPRT_RDMA=m
+CONFIG_RPCSEC_GSS_KRB5=m
+# CONFIG_SUNRPC_DEBUG is not set
+CONFIG_CEPH_FS=m
+CONFIG_CIFS=m
+# CONFIG_CIFS_STATS is not set
+CONFIG_CIFS_WEAK_PW_HASH=y
+CONFIG_CIFS_UPCALL=y
+CONFIG_CIFS_XATTR=y
+CONFIG_CIFS_POSIX=y
+# CONFIG_CIFS_DEBUG2 is not set
+CONFIG_CIFS_DFS_UPCALL=y
+CONFIG_CIFS_FSCACHE=y
+CONFIG_CIFS_ACL=y
+CONFIG_NCP_FS=m
+CONFIG_NCPFS_PACKET_SIGNING=y
+CONFIG_NCPFS_IOCTL_LOCKING=y
+CONFIG_NCPFS_STRONG=y
+CONFIG_NCPFS_NFS_NS=y
+CONFIG_NCPFS_OS2_NS=y
+# CONFIG_NCPFS_SMALLDOS is not set
+CONFIG_NCPFS_NLS=y
+CONFIG_NCPFS_EXTRAS=y
+CONFIG_CODA_FS=m
+CONFIG_AFS_FS=m
+# CONFIG_AFS_DEBUG is not set
+CONFIG_AFS_FSCACHE=y
+CONFIG_9P_FS=m
+CONFIG_9P_FSCACHE=y
+CONFIG_9P_FS_POSIX_ACL=y
+CONFIG_NLS=y
+CONFIG_NLS_DEFAULT="utf8"
+CONFIG_NLS_CODEPAGE_437=m
+CONFIG_NLS_CODEPAGE_737=m
+CONFIG_NLS_CODEPAGE_775=m
+CONFIG_NLS_CODEPAGE_850=m
+CONFIG_NLS_CODEPAGE_852=m
+CONFIG_NLS_CODEPAGE_855=m
+CONFIG_NLS_CODEPAGE_857=m
+CONFIG_NLS_CODEPAGE_860=m
+CONFIG_NLS_CODEPAGE_861=m
+CONFIG_NLS_CODEPAGE_862=m
+CONFIG_NLS_CODEPAGE_863=m
+CONFIG_NLS_CODEPAGE_864=m
+CONFIG_NLS_CODEPAGE_865=m
+CONFIG_NLS_CODEPAGE_866=m
+CONFIG_NLS_CODEPAGE_869=m
+CONFIG_NLS_CODEPAGE_936=m
+CONFIG_NLS_CODEPAGE_950=m
+CONFIG_NLS_CODEPAGE_932=m
+CONFIG_NLS_CODEPAGE_949=m
+CONFIG_NLS_CODEPAGE_874=m
+CONFIG_NLS_ISO8859_8=m
+CONFIG_NLS_CODEPAGE_1250=m
+CONFIG_NLS_CODEPAGE_1251=m
+CONFIG_NLS_ASCII=m
+CONFIG_NLS_ISO8859_1=m
+CONFIG_NLS_ISO8859_2=m
+CONFIG_NLS_ISO8859_3=m
+CONFIG_NLS_ISO8859_4=m
+CONFIG_NLS_ISO8859_5=m
+CONFIG_NLS_ISO8859_6=m
+CONFIG_NLS_ISO8859_7=m
+CONFIG_NLS_ISO8859_9=m
+CONFIG_NLS_ISO8859_13=m
+CONFIG_NLS_ISO8859_14=m
+CONFIG_NLS_ISO8859_15=m
+CONFIG_NLS_KOI8_R=m
+CONFIG_NLS_KOI8_U=m
+CONFIG_NLS_UTF8=m
+CONFIG_DLM=m
+CONFIG_DLM_DEBUG=y
+
+#
+# Kernel hacking
+#
+CONFIG_TRACE_IRQFLAGS_SUPPORT=y
+CONFIG_PRINTK_TIME=y
+CONFIG_DEFAULT_MESSAGE_LOGLEVEL=4
+CONFIG_ENABLE_WARN_DEPRECATED=y
+CONFIG_ENABLE_MUST_CHECK=y
+CONFIG_FRAME_WARN=1024
+CONFIG_MAGIC_SYSRQ=y
+CONFIG_STRIP_ASM_SYMS=y
+CONFIG_UNUSED_SYMBOLS=y
+CONFIG_DEBUG_FS=y
+# CONFIG_HEADERS_CHECK is not set
+# CONFIG_DEBUG_SECTION_MISMATCH is not set
+CONFIG_DEBUG_KERNEL=y
+# CONFIG_DEBUG_SHIRQ is not set
+CONFIG_LOCKUP_DETECTOR=y
+CONFIG_HARDLOCKUP_DETECTOR=y
+# CONFIG_BOOTPARAM_HARDLOCKUP_PANIC is not set
+CONFIG_BOOTPARAM_HARDLOCKUP_PANIC_VALUE=0
+# CONFIG_BOOTPARAM_SOFTLOCKUP_PANIC is not set
+CONFIG_BOOTPARAM_SOFTLOCKUP_PANIC_VALUE=0
+CONFIG_DETECT_HUNG_TASK=y
+CONFIG_DEFAULT_HUNG_TASK_TIMEOUT=120
+# CONFIG_BOOTPARAM_HUNG_TASK_PANIC is not set
+CONFIG_BOOTPARAM_HUNG_TASK_PANIC_VALUE=0
+CONFIG_SCHED_DEBUG=y
+# CONFIG_SCHEDSTATS is not set
+CONFIG_TIMER_STATS=y
+# CONFIG_DEBUG_OBJECTS is not set
+# CONFIG_DEBUG_SLAB is not set
+# CONFIG_DEBUG_KMEMLEAK is not set
+# CONFIG_DEBUG_RT_MUTEXES is not set
+# CONFIG_RT_MUTEX_TESTER is not set
+# CONFIG_DEBUG_SPINLOCK is not set
+# CONFIG_DEBUG_MUTEXES is not set
+# CONFIG_DEBUG_LOCK_ALLOC is not set
+# CONFIG_PROVE_LOCKING is not set
+# CONFIG_SPARSE_RCU_POINTER is not set
+# CONFIG_LOCK_STAT is not set
+# CONFIG_DEBUG_ATOMIC_SLEEP is not set
+# CONFIG_DEBUG_LOCKING_API_SELFTESTS is not set
+CONFIG_STACKTRACE=y
+# CONFIG_DEBUG_STACK_USAGE is not set
+# CONFIG_DEBUG_KOBJECT is not set
+# CONFIG_DEBUG_HIGHMEM is not set
+CONFIG_DEBUG_BUGVERBOSE=y
+CONFIG_DEBUG_INFO=y
+# CONFIG_DEBUG_INFO_REDUCED is not set
+# CONFIG_DEBUG_VM is not set
+# CONFIG_DEBUG_VIRTUAL is not set
+# CONFIG_DEBUG_WRITECOUNT is not set
+CONFIG_DEBUG_MEMORY_INIT=y
+# CONFIG_DEBUG_LIST is not set
+# CONFIG_TEST_LIST_SORT is not set
+# CONFIG_DEBUG_SG is not set
+# CONFIG_DEBUG_NOTIFIERS is not set
+# CONFIG_DEBUG_CREDENTIALS is not set
+CONFIG_ARCH_WANT_FRAME_POINTERS=y
+# CONFIG_FRAME_POINTER is not set
+CONFIG_BOOT_PRINTK_DELAY=y
+# CONFIG_RCU_TORTURE_TEST is not set
+CONFIG_RCU_CPU_STALL_TIMEOUT=60
+# CONFIG_RCU_CPU_STALL_INFO is not set
+# CONFIG_RCU_TRACE is not set
+# CONFIG_KPROBES_SANITY_TEST is not set
+# CONFIG_BACKTRACE_SELF_TEST is not set
+# CONFIG_DEBUG_BLOCK_EXT_DEVT is not set
+# CONFIG_DEBUG_FORCE_WEAK_PER_CPU is not set
+# CONFIG_DEBUG_PER_CPU_MAPS is not set
+# CONFIG_LKDTM is not set
+# CONFIG_CPU_NOTIFIER_ERROR_INJECT is not set
+# CONFIG_FAULT_INJECTION is not set
+# CONFIG_LATENCYTOP is not set
+# CONFIG_DEBUG_PAGEALLOC is not set
+CONFIG_USER_STACKTRACE_SUPPORT=y
+CONFIG_NOP_TRACER=y
+CONFIG_HAVE_FUNCTION_TRACER=y
+CONFIG_HAVE_FUNCTION_GRAPH_TRACER=y
+CONFIG_HAVE_FUNCTION_GRAPH_FP_TEST=y
+CONFIG_HAVE_FUNCTION_TRACE_MCOUNT_TEST=y
+CONFIG_HAVE_DYNAMIC_FTRACE=y
+CONFIG_HAVE_FTRACE_MCOUNT_RECORD=y
+CONFIG_HAVE_SYSCALL_TRACEPOINTS=y
+CONFIG_HAVE_C_RECORDMCOUNT=y
+CONFIG_RING_BUFFER=y
+CONFIG_EVENT_TRACING=y
+CONFIG_EVENT_POWER_TRACING_DEPRECATED=y
+CONFIG_CONTEXT_SWITCH_TRACER=y
+CONFIG_RING_BUFFER_ALLOW_SWAP=y
+CONFIG_TRACING=y
+CONFIG_GENERIC_TRACER=y
+CONFIG_TRACING_SUPPORT=y
+CONFIG_FTRACE=y
+# CONFIG_FUNCTION_TRACER is not set
+# CONFIG_IRQSOFF_TRACER is not set
+# CONFIG_SCHED_TRACER is not set
+# CONFIG_FTRACE_SYSCALLS is not set
+CONFIG_BRANCH_PROFILE_NONE=y
+# CONFIG_PROFILE_ANNOTATED_BRANCHES is not set
+# CONFIG_PROFILE_ALL_BRANCHES is not set
+# CONFIG_STACK_TRACER is not set
+CONFIG_BLK_DEV_IO_TRACE=y
+# CONFIG_KPROBE_EVENT is not set
+# CONFIG_FTRACE_STARTUP_TEST is not set
+# CONFIG_MMIOTRACE is not set
+# CONFIG_RING_BUFFER_BENCHMARK is not set
+# CONFIG_PROVIDE_OHCI1394_DMA_INIT is not set
+# CONFIG_FIREWIRE_OHCI_REMOTE_DMA is not set
+# CONFIG_DYNAMIC_DEBUG is not set
+# CONFIG_DMA_API_DEBUG is not set
+# CONFIG_ATOMIC64_SELFTEST is not set
+# CONFIG_ASYNC_RAID6_TEST is not set
+# CONFIG_SAMPLES is not set
+CONFIG_HAVE_ARCH_KGDB=y
+# CONFIG_KGDB is not set
+CONFIG_HAVE_ARCH_KMEMCHECK=y
+# CONFIG_TEST_KSTRTOX is not set
+CONFIG_STRICT_DEVMEM=y
+CONFIG_X86_VERBOSE_BOOTUP=y
+CONFIG_EARLY_PRINTK=y
+# CONFIG_EARLY_PRINTK_DBGP is not set
+# CONFIG_DEBUG_STACKOVERFLOW is not set
+# CONFIG_X86_PTDUMP is not set
+CONFIG_DEBUG_RODATA=y
+# CONFIG_DEBUG_RODATA_TEST is not set
+CONFIG_DEBUG_SET_MODULE_RONX=y
+# CONFIG_DEBUG_NX_TEST is not set
+CONFIG_DOUBLEFAULT=y
+# CONFIG_IOMMU_STRESS is not set
+CONFIG_HAVE_MMIOTRACE_SUPPORT=y
+# CONFIG_X86_DECODER_SELFTEST is not set
+CONFIG_IO_DELAY_TYPE_0X80=0
+CONFIG_IO_DELAY_TYPE_0XED=1
+CONFIG_IO_DELAY_TYPE_UDELAY=2
+CONFIG_IO_DELAY_TYPE_NONE=3
+CONFIG_IO_DELAY_0X80=y
+# CONFIG_IO_DELAY_0XED is not set
+# CONFIG_IO_DELAY_UDELAY is not set
+# CONFIG_IO_DELAY_NONE is not set
+CONFIG_DEFAULT_IO_DELAY_TYPE=0
+# CONFIG_DEBUG_BOOT_PARAMS is not set
+# CONFIG_CPA_DEBUG is not set
+CONFIG_OPTIMIZE_INLINING=y
+# CONFIG_DEBUG_STRICT_USER_COPY_CHECKS is not set
+# CONFIG_DEBUG_NMI_SELFTEST is not set
+
+#
+# Security options
+#
+CONFIG_KEYS=y
+# CONFIG_TRUSTED_KEYS is not set
+# CONFIG_ENCRYPTED_KEYS is not set
+CONFIG_KEYS_DEBUG_PROC_KEYS=y
+# CONFIG_SECURITY_DMESG_RESTRICT is not set
+CONFIG_SECURITY=y
+CONFIG_SECURITYFS=y
+CONFIG_SECURITY_NETWORK=y
+CONFIG_SECURITY_NETWORK_XFRM=y
+CONFIG_SECURITY_PATH=y
+CONFIG_LSM_MMAP_MIN_ADDR=0
+CONFIG_SECURITY_SELINUX=y
+# CONFIG_SECURITY_SELINUX_BOOTPARAM is not set
+# CONFIG_SECURITY_SELINUX_DISABLE is not set
+CONFIG_SECURITY_SELINUX_DEVELOP=y
+CONFIG_SECURITY_SELINUX_AVC_STATS=y
+CONFIG_SECURITY_SELINUX_CHECKREQPROT_VALUE=1
+# CONFIG_SECURITY_SELINUX_POLICYDB_VERSION_MAX is not set
+CONFIG_SECURITY_TOMOYO=y
+CONFIG_SECURITY_TOMOYO_MAX_ACCEPT_ENTRY=2048
+CONFIG_SECURITY_TOMOYO_MAX_AUDIT_LOG=1024
+# CONFIG_SECURITY_TOMOYO_OMIT_USERSPACE_LOADER is not set
+CONFIG_SECURITY_TOMOYO_POLICY_LOADER="/sbin/tomoyo-init"
+CONFIG_SECURITY_TOMOYO_ACTIVATION_TRIGGER="/sbin/init"
+CONFIG_SECURITY_APPARMOR=y
+CONFIG_SECURITY_APPARMOR_BOOTPARAM_VALUE=1
+# CONFIG_SECURITY_YAMA is not set
+# CONFIG_IMA is not set
+# CONFIG_EVM is not set
+# CONFIG_DEFAULT_SECURITY_SELINUX is not set
+# CONFIG_DEFAULT_SECURITY_TOMOYO is not set
+# CONFIG_DEFAULT_SECURITY_APPARMOR is not set
+CONFIG_DEFAULT_SECURITY_DAC=y
+CONFIG_DEFAULT_SECURITY=""
+CONFIG_XOR_BLOCKS=m
+CONFIG_ASYNC_CORE=m
+CONFIG_ASYNC_MEMCPY=m
+CONFIG_ASYNC_XOR=m
+CONFIG_ASYNC_PQ=m
+CONFIG_ASYNC_RAID6_RECOV=m
+CONFIG_ASYNC_TX_DISABLE_PQ_VAL_DMA=y
+CONFIG_ASYNC_TX_DISABLE_XOR_VAL_DMA=y
+CONFIG_CRYPTO=y
+
+#
+# Crypto core or helper
+#
+CONFIG_CRYPTO_FIPS=y
+CONFIG_CRYPTO_ALGAPI=y
+CONFIG_CRYPTO_ALGAPI2=y
+CONFIG_CRYPTO_AEAD=m
+CONFIG_CRYPTO_AEAD2=y
+CONFIG_CRYPTO_BLKCIPHER=m
+CONFIG_CRYPTO_BLKCIPHER2=y
+CONFIG_CRYPTO_HASH=y
+CONFIG_CRYPTO_HASH2=y
+CONFIG_CRYPTO_RNG=m
+CONFIG_CRYPTO_RNG2=y
+CONFIG_CRYPTO_PCOMP=m
+CONFIG_CRYPTO_PCOMP2=y
+CONFIG_CRYPTO_MANAGER=y
+CONFIG_CRYPTO_MANAGER2=y
+# CONFIG_CRYPTO_USER is not set
+# CONFIG_CRYPTO_MANAGER_DISABLE_TESTS is not set
+CONFIG_CRYPTO_GF128MUL=m
+CONFIG_CRYPTO_NULL=m
+CONFIG_CRYPTO_PCRYPT=m
+CONFIG_CRYPTO_WORKQUEUE=y
+CONFIG_CRYPTO_CRYPTD=m
+CONFIG_CRYPTO_AUTHENC=m
+CONFIG_CRYPTO_TEST=m
+
+#
+# Authenticated Encryption with Associated Data
+#
+CONFIG_CRYPTO_CCM=m
+CONFIG_CRYPTO_GCM=m
+CONFIG_CRYPTO_SEQIV=m
+
+#
+# Block modes
+#
+CONFIG_CRYPTO_CBC=m
+CONFIG_CRYPTO_CTR=m
+CONFIG_CRYPTO_CTS=m
+CONFIG_CRYPTO_ECB=m
+CONFIG_CRYPTO_LRW=m
+CONFIG_CRYPTO_PCBC=m
+CONFIG_CRYPTO_XTS=m
+
+#
+# Hash modes
+#
+CONFIG_CRYPTO_HMAC=m
+CONFIG_CRYPTO_XCBC=m
+CONFIG_CRYPTO_VMAC=m
+
+#
+# Digest
+#
+CONFIG_CRYPTO_CRC32C=m
+CONFIG_CRYPTO_CRC32C_INTEL=m
+CONFIG_CRYPTO_GHASH=m
+CONFIG_CRYPTO_MD4=m
+CONFIG_CRYPTO_MD5=y
+CONFIG_CRYPTO_MICHAEL_MIC=m
+CONFIG_CRYPTO_RMD128=m
+CONFIG_CRYPTO_RMD160=m
+CONFIG_CRYPTO_RMD256=m
+CONFIG_CRYPTO_RMD320=m
+CONFIG_CRYPTO_SHA1=m
+CONFIG_CRYPTO_SHA256=m
+CONFIG_CRYPTO_SHA512=m
+CONFIG_CRYPTO_TGR192=m
+CONFIG_CRYPTO_WP512=m
+
+#
+# Ciphers
+#
+CONFIG_CRYPTO_AES=m
+CONFIG_CRYPTO_AES_586=m
+CONFIG_CRYPTO_AES_NI_INTEL=m
+CONFIG_CRYPTO_ANUBIS=m
+CONFIG_CRYPTO_ARC4=m
+CONFIG_CRYPTO_BLOWFISH=m
+CONFIG_CRYPTO_BLOWFISH_COMMON=m
+CONFIG_CRYPTO_CAMELLIA=m
+CONFIG_CRYPTO_CAST5=m
+CONFIG_CRYPTO_CAST6=m
+CONFIG_CRYPTO_DES=m
+CONFIG_CRYPTO_FCRYPT=m
+CONFIG_CRYPTO_KHAZAD=m
+CONFIG_CRYPTO_SALSA20=m
+CONFIG_CRYPTO_SALSA20_586=m
+CONFIG_CRYPTO_SEED=m
+CONFIG_CRYPTO_SERPENT=m
+# CONFIG_CRYPTO_SERPENT_SSE2_586 is not set
+CONFIG_CRYPTO_TEA=m
+CONFIG_CRYPTO_TWOFISH=m
+CONFIG_CRYPTO_TWOFISH_COMMON=m
+CONFIG_CRYPTO_TWOFISH_586=m
+
+#
+# Compression
+#
+CONFIG_CRYPTO_DEFLATE=m
+CONFIG_CRYPTO_ZLIB=m
+CONFIG_CRYPTO_LZO=m
+
+#
+# Random Number Generation
+#
+CONFIG_CRYPTO_ANSI_CPRNG=m
+CONFIG_CRYPTO_USER_API=m
+CONFIG_CRYPTO_USER_API_HASH=m
+CONFIG_CRYPTO_USER_API_SKCIPHER=m
+CONFIG_CRYPTO_HW=y
+CONFIG_CRYPTO_DEV_PADLOCK=m
+CONFIG_CRYPTO_DEV_PADLOCK_AES=m
+CONFIG_CRYPTO_DEV_PADLOCK_SHA=m
+CONFIG_CRYPTO_DEV_GEODE=m
+CONFIG_HAVE_KVM=y
+CONFIG_HAVE_KVM_IRQCHIP=y
+CONFIG_HAVE_KVM_EVENTFD=y
+CONFIG_KVM_APIC_ARCHITECTURE=y
+CONFIG_KVM_MMIO=y
+CONFIG_KVM_ASYNC_PF=y
+CONFIG_VIRTUALIZATION=y
+CONFIG_KVM=m
+CONFIG_KVM_INTEL=m
+CONFIG_KVM_AMD=m
+# CONFIG_KVM_MMU_AUDIT is not set
+CONFIG_VHOST_NET=m
+# CONFIG_LGUEST is not set
+CONFIG_BINARY_PRINTF=y
+
+#
+# Library routines
+#
+CONFIG_RAID6_PQ=m
+CONFIG_BITREVERSE=y
+CONFIG_GENERIC_FIND_FIRST_BIT=y
+CONFIG_GENERIC_PCI_IOMAP=y
+CONFIG_GENERIC_IOMAP=y
+CONFIG_GENERIC_IO=y
+CONFIG_CRC_CCITT=m
+CONFIG_CRC16=m
+CONFIG_CRC_T10DIF=m
+CONFIG_CRC_ITU_T=m
+CONFIG_CRC32=y
+# CONFIG_CRC32_SELFTEST is not set
+CONFIG_CRC32_SLICEBY8=y
+# CONFIG_CRC32_SLICEBY4 is not set
+# CONFIG_CRC32_SARWATE is not set
+# CONFIG_CRC32_BIT is not set
+CONFIG_CRC7=m
+CONFIG_LIBCRC32C=m
+CONFIG_CRC8=m
+CONFIG_AUDIT_GENERIC=y
+CONFIG_ZLIB_INFLATE=y
+CONFIG_ZLIB_DEFLATE=m
+CONFIG_LZO_COMPRESS=y
+CONFIG_LZO_DECOMPRESS=y
+CONFIG_XZ_DEC=y
+CONFIG_XZ_DEC_X86=y
+CONFIG_XZ_DEC_POWERPC=y
+CONFIG_XZ_DEC_IA64=y
+CONFIG_XZ_DEC_ARM=y
+CONFIG_XZ_DEC_ARMTHUMB=y
+CONFIG_XZ_DEC_SPARC=y
+CONFIG_XZ_DEC_BCJ=y
+# CONFIG_XZ_DEC_TEST is not set
+CONFIG_DECOMPRESS_GZIP=y
+CONFIG_DECOMPRESS_BZIP2=y
+CONFIG_DECOMPRESS_LZMA=y
+CONFIG_DECOMPRESS_XZ=y
+CONFIG_DECOMPRESS_LZO=y
+CONFIG_GENERIC_ALLOCATOR=y
+CONFIG_REED_SOLOMON=m
+CONFIG_REED_SOLOMON_DEC16=y
+CONFIG_TEXTSEARCH=y
+CONFIG_TEXTSEARCH_KMP=m
+CONFIG_TEXTSEARCH_BM=m
+CONFIG_TEXTSEARCH_FSM=m
+CONFIG_BTREE=y
+CONFIG_HAS_IOMEM=y
+CONFIG_HAS_IOPORT=y
+CONFIG_HAS_DMA=y
+CONFIG_CHECK_SIGNATURE=y
+CONFIG_CPU_RMAP=y
+CONFIG_DQL=y
+CONFIG_NLATTR=y
+CONFIG_LRU_CACHE=m
+CONFIG_AVERAGE=y
+CONFIG_CORDIC=m
diff -uprN ../linux-3.4.104-vanilla/.config.old linux-3.4.104-syssec_hw2_app2/.config.old
--- ../linux-3.4.104-vanilla/.config.old	1969-12-31 19:00:00.000000000 -0500
+++ linux-3.4.104-syssec_hw2_app2/.config.old	2014-11-05 22:12:27.000000000 -0500
@@ -0,0 +1,5902 @@
+#
+# Automatically generated file; DO NOT EDIT.
+# Linux/i386 3.4.104 Kernel Configuration
+#
+# CONFIG_64BIT is not set
+CONFIG_X86_32=y
+# CONFIG_X86_64 is not set
+CONFIG_X86=y
+CONFIG_INSTRUCTION_DECODER=y
+CONFIG_OUTPUT_FORMAT="elf32-i386"
+CONFIG_ARCH_DEFCONFIG="arch/x86/configs/i386_defconfig"
+CONFIG_GENERIC_CMOS_UPDATE=y
+CONFIG_CLOCKSOURCE_WATCHDOG=y
+CONFIG_GENERIC_CLOCKEVENTS=y
+CONFIG_GENERIC_CLOCKEVENTS_BROADCAST=y
+CONFIG_LOCKDEP_SUPPORT=y
+CONFIG_STACKTRACE_SUPPORT=y
+CONFIG_HAVE_LATENCYTOP_SUPPORT=y
+CONFIG_MMU=y
+# CONFIG_NEED_DMA_MAP_STATE is not set
+CONFIG_NEED_SG_DMA_LENGTH=y
+CONFIG_GENERIC_ISA_DMA=y
+CONFIG_GENERIC_BUG=y
+CONFIG_GENERIC_HWEIGHT=y
+CONFIG_GENERIC_GPIO=y
+CONFIG_ARCH_MAY_HAVE_PC_FDC=y
+# CONFIG_RWSEM_GENERIC_SPINLOCK is not set
+CONFIG_RWSEM_XCHGADD_ALGORITHM=y
+CONFIG_ARCH_HAS_CPU_IDLE_WAIT=y
+CONFIG_GENERIC_CALIBRATE_DELAY=y
+# CONFIG_GENERIC_TIME_VSYSCALL is not set
+CONFIG_ARCH_HAS_CPU_RELAX=y
+CONFIG_ARCH_HAS_DEFAULT_IDLE=y
+CONFIG_ARCH_HAS_CACHE_LINE_SIZE=y
+CONFIG_ARCH_HAS_CPU_AUTOPROBE=y
+CONFIG_HAVE_SETUP_PER_CPU_AREA=y
+CONFIG_NEED_PER_CPU_EMBED_FIRST_CHUNK=y
+CONFIG_NEED_PER_CPU_PAGE_FIRST_CHUNK=y
+CONFIG_ARCH_HIBERNATION_POSSIBLE=y
+CONFIG_ARCH_SUSPEND_POSSIBLE=y
+# CONFIG_ZONE_DMA32 is not set
+# CONFIG_AUDIT_ARCH is not set
+CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING=y
+CONFIG_ARCH_SUPPORTS_DEBUG_PAGEALLOC=y
+CONFIG_X86_32_SMP=y
+CONFIG_X86_HT=y
+CONFIG_ARCH_HWEIGHT_CFLAGS="-fcall-saved-ecx -fcall-saved-edx"
+CONFIG_KTIME_SCALAR=y
+CONFIG_ARCH_CPU_PROBE_RELEASE=y
+CONFIG_DEFCONFIG_LIST="/lib/modules/$UNAME_RELEASE/.config"
+CONFIG_HAVE_IRQ_WORK=y
+CONFIG_IRQ_WORK=y
+
+#
+# General setup
+#
+CONFIG_EXPERIMENTAL=y
+CONFIG_INIT_ENV_ARG_LIMIT=32
+CONFIG_CROSS_COMPILE=""
+CONFIG_LOCALVERSION=""
+# CONFIG_LOCALVERSION_AUTO is not set
+CONFIG_HAVE_KERNEL_GZIP=y
+CONFIG_HAVE_KERNEL_BZIP2=y
+CONFIG_HAVE_KERNEL_LZMA=y
+CONFIG_HAVE_KERNEL_XZ=y
+CONFIG_HAVE_KERNEL_LZO=y
+CONFIG_KERNEL_GZIP=y
+# CONFIG_KERNEL_BZIP2 is not set
+# CONFIG_KERNEL_LZMA is not set
+# CONFIG_KERNEL_XZ is not set
+# CONFIG_KERNEL_LZO is not set
+CONFIG_DEFAULT_HOSTNAME="(none)"
+CONFIG_SWAP=y
+CONFIG_SYSVIPC=y
+CONFIG_SYSVIPC_SYSCTL=y
+CONFIG_POSIX_MQUEUE=y
+CONFIG_POSIX_MQUEUE_SYSCTL=y
+CONFIG_BSD_PROCESS_ACCT=y
+CONFIG_BSD_PROCESS_ACCT_V3=y
+CONFIG_FHANDLE=y
+CONFIG_TASKSTATS=y
+CONFIG_TASK_DELAY_ACCT=y
+CONFIG_TASK_XACCT=y
+CONFIG_TASK_IO_ACCOUNTING=y
+CONFIG_AUDIT=y
+CONFIG_AUDITSYSCALL=y
+CONFIG_AUDIT_WATCH=y
+CONFIG_AUDIT_TREE=y
+# CONFIG_AUDIT_LOGINUID_IMMUTABLE is not set
+CONFIG_HAVE_GENERIC_HARDIRQS=y
+
+#
+# IRQ subsystem
+#
+CONFIG_GENERIC_HARDIRQS=y
+CONFIG_GENERIC_IRQ_PROBE=y
+CONFIG_GENERIC_IRQ_SHOW=y
+CONFIG_GENERIC_PENDING_IRQ=y
+CONFIG_GENERIC_IRQ_CHIP=y
+CONFIG_IRQ_FORCED_THREADING=y
+CONFIG_SPARSE_IRQ=y
+
+#
+# RCU Subsystem
+#
+CONFIG_TREE_RCU=y
+# CONFIG_PREEMPT_RCU is not set
+CONFIG_RCU_FANOUT=32
+# CONFIG_RCU_FANOUT_EXACT is not set
+CONFIG_RCU_FAST_NO_HZ=y
+# CONFIG_TREE_RCU_TRACE is not set
+# CONFIG_IKCONFIG is not set
+CONFIG_LOG_BUF_SHIFT=17
+CONFIG_HAVE_UNSTABLE_SCHED_CLOCK=y
+CONFIG_CGROUPS=y
+# CONFIG_CGROUP_DEBUG is not set
+CONFIG_CGROUP_FREEZER=y
+CONFIG_CGROUP_DEVICE=y
+CONFIG_CPUSETS=y
+CONFIG_PROC_PID_CPUSET=y
+CONFIG_CGROUP_CPUACCT=y
+CONFIG_RESOURCE_COUNTERS=y
+CONFIG_CGROUP_MEM_RES_CTLR=y
+CONFIG_CGROUP_MEM_RES_CTLR_SWAP=y
+# CONFIG_CGROUP_MEM_RES_CTLR_SWAP_ENABLED is not set
+# CONFIG_CGROUP_MEM_RES_CTLR_KMEM is not set
+CONFIG_CGROUP_PERF=y
+CONFIG_CGROUP_SCHED=y
+CONFIG_FAIR_GROUP_SCHED=y
+# CONFIG_CFS_BANDWIDTH is not set
+# CONFIG_RT_GROUP_SCHED is not set
+CONFIG_BLK_CGROUP=y
+# CONFIG_DEBUG_BLK_CGROUP is not set
+# CONFIG_CHECKPOINT_RESTORE is not set
+CONFIG_NAMESPACES=y
+CONFIG_UTS_NS=y
+CONFIG_IPC_NS=y
+CONFIG_USER_NS=y
+CONFIG_PID_NS=y
+CONFIG_NET_NS=y
+CONFIG_SCHED_AUTOGROUP=y
+CONFIG_MM_OWNER=y
+# CONFIG_SYSFS_DEPRECATED is not set
+CONFIG_RELAY=y
+CONFIG_BLK_DEV_INITRD=y
+CONFIG_INITRAMFS_SOURCE=""
+CONFIG_RD_GZIP=y
+CONFIG_RD_BZIP2=y
+CONFIG_RD_LZMA=y
+CONFIG_RD_XZ=y
+CONFIG_RD_LZO=y
+CONFIG_CC_OPTIMIZE_FOR_SIZE=y
+CONFIG_SYSCTL=y
+CONFIG_ANON_INODES=y
+# CONFIG_EXPERT is not set
+CONFIG_UID16=y
+# CONFIG_SYSCTL_SYSCALL is not set
+CONFIG_KALLSYMS=y
+# CONFIG_KALLSYMS_ALL is not set
+CONFIG_HOTPLUG=y
+CONFIG_PRINTK=y
+CONFIG_BUG=y
+CONFIG_ELF_CORE=y
+CONFIG_PCSPKR_PLATFORM=y
+CONFIG_HAVE_PCSPKR_PLATFORM=y
+CONFIG_BASE_FULL=y
+CONFIG_FUTEX=y
+CONFIG_EPOLL=y
+CONFIG_SIGNALFD=y
+CONFIG_TIMERFD=y
+CONFIG_EVENTFD=y
+CONFIG_SHMEM=y
+CONFIG_AIO=y
+# CONFIG_EMBEDDED is not set
+CONFIG_HAVE_PERF_EVENTS=y
+
+#
+# Kernel Performance Events And Counters
+#
+CONFIG_PERF_EVENTS=y
+# CONFIG_PERF_COUNTERS is not set
+# CONFIG_DEBUG_PERF_USE_VMALLOC is not set
+CONFIG_VM_EVENT_COUNTERS=y
+CONFIG_PCI_QUIRKS=y
+# CONFIG_COMPAT_BRK is not set
+CONFIG_SLAB=y
+# CONFIG_SLUB is not set
+CONFIG_PROFILING=y
+CONFIG_TRACEPOINTS=y
+CONFIG_OPROFILE=m
+# CONFIG_OPROFILE_EVENT_MULTIPLEX is not set
+CONFIG_HAVE_OPROFILE=y
+CONFIG_OPROFILE_NMI_TIMER=y
+CONFIG_KPROBES=y
+# CONFIG_JUMP_LABEL is not set
+CONFIG_OPTPROBES=y
+CONFIG_HAVE_EFFICIENT_UNALIGNED_ACCESS=y
+CONFIG_KRETPROBES=y
+CONFIG_USER_RETURN_NOTIFIER=y
+CONFIG_HAVE_IOREMAP_PROT=y
+CONFIG_HAVE_KPROBES=y
+CONFIG_HAVE_KRETPROBES=y
+CONFIG_HAVE_OPTPROBES=y
+CONFIG_HAVE_ARCH_TRACEHOOK=y
+CONFIG_HAVE_DMA_ATTRS=y
+CONFIG_USE_GENERIC_SMP_HELPERS=y
+CONFIG_HAVE_REGS_AND_STACK_ACCESS_API=y
+CONFIG_HAVE_DMA_API_DEBUG=y
+CONFIG_HAVE_HW_BREAKPOINT=y
+CONFIG_HAVE_MIXED_BREAKPOINTS_REGS=y
+CONFIG_HAVE_USER_RETURN_NOTIFIER=y
+CONFIG_HAVE_PERF_EVENTS_NMI=y
+CONFIG_HAVE_ARCH_JUMP_LABEL=y
+CONFIG_ARCH_HAVE_NMI_SAFE_CMPXCHG=y
+CONFIG_HAVE_CMPXCHG_LOCAL=y
+CONFIG_HAVE_CMPXCHG_DOUBLE=y
+
+#
+# GCOV-based kernel profiling
+#
+# CONFIG_GCOV_KERNEL is not set
+CONFIG_HAVE_GENERIC_DMA_COHERENT=y
+CONFIG_SLABINFO=y
+CONFIG_RT_MUTEXES=y
+CONFIG_BASE_SMALL=0
+CONFIG_MODULES=y
+CONFIG_MODULE_FORCE_LOAD=y
+CONFIG_MODULE_UNLOAD=y
+CONFIG_MODULE_FORCE_UNLOAD=y
+CONFIG_MODVERSIONS=y
+# CONFIG_MODULE_SRCVERSION_ALL is not set
+CONFIG_STOP_MACHINE=y
+CONFIG_BLOCK=y
+CONFIG_LBDAF=y
+CONFIG_BLK_DEV_BSG=y
+CONFIG_BLK_DEV_BSGLIB=y
+CONFIG_BLK_DEV_INTEGRITY=y
+# CONFIG_BLK_DEV_THROTTLING is not set
+
+#
+# Partition Types
+#
+CONFIG_PARTITION_ADVANCED=y
+CONFIG_ACORN_PARTITION=y
+# CONFIG_ACORN_PARTITION_CUMANA is not set
+# CONFIG_ACORN_PARTITION_EESOX is not set
+CONFIG_ACORN_PARTITION_ICS=y
+# CONFIG_ACORN_PARTITION_ADFS is not set
+# CONFIG_ACORN_PARTITION_POWERTEC is not set
+CONFIG_ACORN_PARTITION_RISCIX=y
+CONFIG_OSF_PARTITION=y
+CONFIG_AMIGA_PARTITION=y
+CONFIG_ATARI_PARTITION=y
+CONFIG_MAC_PARTITION=y
+CONFIG_MSDOS_PARTITION=y
+CONFIG_BSD_DISKLABEL=y
+CONFIG_MINIX_SUBPARTITION=y
+CONFIG_SOLARIS_X86_PARTITION=y
+CONFIG_UNIXWARE_DISKLABEL=y
+CONFIG_LDM_PARTITION=y
+# CONFIG_LDM_DEBUG is not set
+CONFIG_SGI_PARTITION=y
+CONFIG_ULTRIX_PARTITION=y
+CONFIG_SUN_PARTITION=y
+CONFIG_KARMA_PARTITION=y
+CONFIG_EFI_PARTITION=y
+# CONFIG_SYSV68_PARTITION is not set
+
+#
+# IO Schedulers
+#
+CONFIG_IOSCHED_NOOP=y
+CONFIG_IOSCHED_DEADLINE=y
+CONFIG_IOSCHED_CFQ=y
+CONFIG_CFQ_GROUP_IOSCHED=y
+# CONFIG_DEFAULT_DEADLINE is not set
+CONFIG_DEFAULT_CFQ=y
+# CONFIG_DEFAULT_NOOP is not set
+CONFIG_DEFAULT_IOSCHED="cfq"
+CONFIG_PREEMPT_NOTIFIERS=y
+CONFIG_PADATA=y
+# CONFIG_INLINE_SPIN_TRYLOCK is not set
+# CONFIG_INLINE_SPIN_TRYLOCK_BH is not set
+# CONFIG_INLINE_SPIN_LOCK is not set
+# CONFIG_INLINE_SPIN_LOCK_BH is not set
+# CONFIG_INLINE_SPIN_LOCK_IRQ is not set
+# CONFIG_INLINE_SPIN_LOCK_IRQSAVE is not set
+# CONFIG_INLINE_SPIN_UNLOCK_BH is not set
+CONFIG_INLINE_SPIN_UNLOCK_IRQ=y
+# CONFIG_INLINE_SPIN_UNLOCK_IRQRESTORE is not set
+# CONFIG_INLINE_READ_TRYLOCK is not set
+# CONFIG_INLINE_READ_LOCK is not set
+# CONFIG_INLINE_READ_LOCK_BH is not set
+# CONFIG_INLINE_READ_LOCK_IRQ is not set
+# CONFIG_INLINE_READ_LOCK_IRQSAVE is not set
+CONFIG_INLINE_READ_UNLOCK=y
+# CONFIG_INLINE_READ_UNLOCK_BH is not set
+CONFIG_INLINE_READ_UNLOCK_IRQ=y
+# CONFIG_INLINE_READ_UNLOCK_IRQRESTORE is not set
+# CONFIG_INLINE_WRITE_TRYLOCK is not set
+# CONFIG_INLINE_WRITE_LOCK is not set
+# CONFIG_INLINE_WRITE_LOCK_BH is not set
+# CONFIG_INLINE_WRITE_LOCK_IRQ is not set
+# CONFIG_INLINE_WRITE_LOCK_IRQSAVE is not set
+CONFIG_INLINE_WRITE_UNLOCK=y
+# CONFIG_INLINE_WRITE_UNLOCK_BH is not set
+CONFIG_INLINE_WRITE_UNLOCK_IRQ=y
+# CONFIG_INLINE_WRITE_UNLOCK_IRQRESTORE is not set
+CONFIG_MUTEX_SPIN_ON_OWNER=y
+CONFIG_FREEZER=y
+
+#
+# Processor type and features
+#
+CONFIG_ZONE_DMA=y
+CONFIG_TICK_ONESHOT=y
+CONFIG_NO_HZ=y
+CONFIG_HIGH_RES_TIMERS=y
+CONFIG_GENERIC_CLOCKEVENTS_BUILD=y
+CONFIG_GENERIC_CLOCKEVENTS_MIN_ADJUST=y
+CONFIG_SMP=y
+CONFIG_X86_MPPARSE=y
+CONFIG_X86_BIGSMP=y
+# CONFIG_X86_EXTENDED_PLATFORM is not set
+# CONFIG_X86_32_IRIS is not set
+CONFIG_SCHED_OMIT_FRAME_POINTER=y
+CONFIG_PARAVIRT_GUEST=y
+# CONFIG_PARAVIRT_TIME_ACCOUNTING is not set
+CONFIG_XEN=y
+CONFIG_XEN_DOM0=y
+CONFIG_XEN_PRIVILEGED_GUEST=y
+CONFIG_XEN_PVHVM=y
+CONFIG_XEN_MAX_DOMAIN_MEMORY=64
+CONFIG_XEN_SAVE_RESTORE=y
+# CONFIG_XEN_DEBUG_FS is not set
+CONFIG_KVM_CLOCK=y
+CONFIG_KVM_GUEST=y
+# CONFIG_LGUEST_GUEST is not set
+CONFIG_PARAVIRT=y
+# CONFIG_PARAVIRT_SPINLOCKS is not set
+CONFIG_PARAVIRT_CLOCK=y
+# CONFIG_PARAVIRT_DEBUG is not set
+CONFIG_NO_BOOTMEM=y
+CONFIG_MEMTEST=y
+# CONFIG_M386 is not set
+# CONFIG_M486 is not set
+# CONFIG_M586 is not set
+# CONFIG_M586TSC is not set
+# CONFIG_M586MMX is not set
+CONFIG_M686=y
+# CONFIG_MPENTIUMII is not set
+# CONFIG_MPENTIUMIII is not set
+# CONFIG_MPENTIUMM is not set
+# CONFIG_MPENTIUM4 is not set
+# CONFIG_MK6 is not set
+# CONFIG_MK7 is not set
+# CONFIG_MK8 is not set
+# CONFIG_MCRUSOE is not set
+# CONFIG_MEFFICEON is not set
+# CONFIG_MWINCHIPC6 is not set
+# CONFIG_MWINCHIP3D is not set
+# CONFIG_MELAN is not set
+# CONFIG_MGEODEGX1 is not set
+# CONFIG_MGEODE_LX is not set
+# CONFIG_MCYRIXIII is not set
+# CONFIG_MVIAC3_2 is not set
+# CONFIG_MVIAC7 is not set
+# CONFIG_MCORE2 is not set
+# CONFIG_MATOM is not set
+CONFIG_X86_GENERIC=y
+CONFIG_X86_INTERNODE_CACHE_SHIFT=6
+CONFIG_X86_CMPXCHG=y
+CONFIG_X86_L1_CACHE_SHIFT=6
+CONFIG_X86_XADD=y
+# CONFIG_X86_PPRO_FENCE is not set
+CONFIG_X86_WP_WORKS_OK=y
+CONFIG_X86_INVLPG=y
+CONFIG_X86_BSWAP=y
+CONFIG_X86_POPAD_OK=y
+CONFIG_X86_INTEL_USERCOPY=y
+CONFIG_X86_USE_PPRO_CHECKSUM=y
+CONFIG_X86_TSC=y
+CONFIG_X86_CMPXCHG64=y
+CONFIG_X86_CMOV=y
+CONFIG_X86_MINIMUM_CPU_FAMILY=5
+CONFIG_X86_DEBUGCTLMSR=y
+CONFIG_CPU_SUP_INTEL=y
+CONFIG_CPU_SUP_AMD=y
+CONFIG_CPU_SUP_CENTAUR=y
+CONFIG_CPU_SUP_TRANSMETA_32=y
+CONFIG_HPET_TIMER=y
+CONFIG_HPET_EMULATE_RTC=y
+CONFIG_DMI=y
+CONFIG_SWIOTLB=y
+CONFIG_IOMMU_HELPER=y
+CONFIG_NR_CPUS=32
+CONFIG_SCHED_SMT=y
+CONFIG_SCHED_MC=y
+# CONFIG_IRQ_TIME_ACCOUNTING is not set
+# CONFIG_PREEMPT_NONE is not set
+CONFIG_PREEMPT_VOLUNTARY=y
+# CONFIG_PREEMPT is not set
+CONFIG_X86_LOCAL_APIC=y
+CONFIG_X86_IO_APIC=y
+CONFIG_X86_REROUTE_FOR_BROKEN_BOOT_IRQS=y
+CONFIG_X86_MCE=y
+CONFIG_X86_MCE_INTEL=y
+CONFIG_X86_MCE_AMD=y
+# CONFIG_X86_ANCIENT_MCE is not set
+CONFIG_X86_MCE_THRESHOLD=y
+CONFIG_X86_MCE_INJECT=m
+CONFIG_X86_THERMAL_VECTOR=y
+CONFIG_VM86=y
+CONFIG_X86_16BIT=y
+CONFIG_X86_ESPFIX32=y
+CONFIG_TOSHIBA=m
+CONFIG_I8K=m
+CONFIG_X86_REBOOTFIXUPS=y
+CONFIG_MICROCODE=m
+CONFIG_MICROCODE_INTEL=y
+CONFIG_MICROCODE_AMD=y
+CONFIG_MICROCODE_OLD_INTERFACE=y
+CONFIG_X86_MSR=m
+CONFIG_X86_CPUID=m
+# CONFIG_NOHIGHMEM is not set
+# CONFIG_HIGHMEM4G is not set
+CONFIG_HIGHMEM64G=y
+CONFIG_PAGE_OFFSET=0xC0000000
+CONFIG_HIGHMEM=y
+CONFIG_X86_PAE=y
+CONFIG_ARCH_PHYS_ADDR_T_64BIT=y
+CONFIG_ARCH_DMA_ADDR_T_64BIT=y
+# CONFIG_NUMA is not set
+CONFIG_NEED_NODE_MEMMAP_SIZE=y
+CONFIG_ARCH_FLATMEM_ENABLE=y
+CONFIG_ARCH_SPARSEMEM_ENABLE=y
+CONFIG_ARCH_SELECT_MEMORY_MODEL=y
+CONFIG_ILLEGAL_POINTER_VALUE=0
+CONFIG_SELECT_MEMORY_MODEL=y
+# CONFIG_FLATMEM_MANUAL is not set
+# CONFIG_DISCONTIGMEM_MANUAL is not set
+CONFIG_SPARSEMEM_MANUAL=y
+CONFIG_SPARSEMEM=y
+CONFIG_HAVE_MEMORY_PRESENT=y
+CONFIG_SPARSEMEM_STATIC=y
+CONFIG_HAVE_MEMBLOCK=y
+CONFIG_HAVE_MEMBLOCK_NODE_MAP=y
+CONFIG_ARCH_DISCARD_MEMBLOCK=y
+# CONFIG_MEMORY_HOTPLUG is not set
+CONFIG_SPLIT_PTLOCK_CPUS=4
+CONFIG_COMPACTION=y
+CONFIG_MIGRATION=y
+CONFIG_PHYS_ADDR_T_64BIT=y
+CONFIG_ZONE_DMA_FLAG=1
+CONFIG_BOUNCE=y
+CONFIG_VIRT_TO_BUS=y
+CONFIG_MMU_NOTIFIER=y
+CONFIG_KSM=y
+CONFIG_DEFAULT_MMAP_MIN_ADDR=65536
+CONFIG_TRANSPARENT_HUGEPAGE=y
+# CONFIG_TRANSPARENT_HUGEPAGE_ALWAYS is not set
+CONFIG_TRANSPARENT_HUGEPAGE_MADVISE=y
+# CONFIG_CLEANCACHE is not set
+CONFIG_HIGHPTE=y
+# CONFIG_X86_CHECK_BIOS_CORRUPTION is not set
+CONFIG_X86_RESERVE_LOW=64
+# CONFIG_MATH_EMULATION is not set
+CONFIG_MTRR=y
+CONFIG_MTRR_SANITIZER=y
+CONFIG_MTRR_SANITIZER_ENABLE_DEFAULT=0
+CONFIG_MTRR_SANITIZER_SPARE_REG_NR_DEFAULT=1
+CONFIG_X86_PAT=y
+CONFIG_ARCH_USES_PG_UNCACHED=y
+CONFIG_ARCH_RANDOM=y
+CONFIG_EFI=y
+CONFIG_EFI_STUB=y
+CONFIG_SECCOMP=y
+CONFIG_CC_STACKPROTECTOR=y
+# CONFIG_HZ_100 is not set
+CONFIG_HZ_250=y
+# CONFIG_HZ_300 is not set
+# CONFIG_HZ_1000 is not set
+CONFIG_HZ=250
+CONFIG_SCHED_HRTICK=y
+CONFIG_KEXEC=y
+CONFIG_CRASH_DUMP=y
+# CONFIG_KEXEC_JUMP is not set
+CONFIG_PHYSICAL_START=0x1000000
+CONFIG_RELOCATABLE=y
+CONFIG_X86_NEED_RELOCS=y
+CONFIG_PHYSICAL_ALIGN=0x1000000
+CONFIG_HOTPLUG_CPU=y
+# CONFIG_COMPAT_VDSO is not set
+# CONFIG_CMDLINE_BOOL is not set
+CONFIG_ARCH_ENABLE_MEMORY_HOTPLUG=y
+
+#
+# Power management and ACPI options
+#
+CONFIG_SUSPEND=y
+CONFIG_SUSPEND_FREEZER=y
+CONFIG_HIBERNATE_CALLBACKS=y
+CONFIG_HIBERNATION=y
+CONFIG_PM_STD_PARTITION=""
+CONFIG_PM_SLEEP=y
+CONFIG_PM_SLEEP_SMP=y
+CONFIG_PM_RUNTIME=y
+CONFIG_PM=y
+CONFIG_PM_DEBUG=y
+CONFIG_PM_ADVANCED_DEBUG=y
+# CONFIG_PM_TEST_SUSPEND is not set
+CONFIG_CAN_PM_TRACE=y
+# CONFIG_PM_TRACE_RTC is not set
+CONFIG_ACPI=y
+CONFIG_ACPI_SLEEP=y
+# CONFIG_ACPI_PROCFS is not set
+# CONFIG_ACPI_PROCFS_POWER is not set
+# CONFIG_ACPI_EC_DEBUGFS is not set
+# CONFIG_ACPI_PROC_EVENT is not set
+CONFIG_ACPI_AC=m
+CONFIG_ACPI_BATTERY=m
+CONFIG_ACPI_BUTTON=m
+CONFIG_ACPI_VIDEO=m
+CONFIG_ACPI_FAN=m
+CONFIG_ACPI_DOCK=y
+CONFIG_ACPI_PROCESSOR=m
+CONFIG_ACPI_IPMI=m
+CONFIG_ACPI_HOTPLUG_CPU=y
+CONFIG_ACPI_PROCESSOR_AGGREGATOR=m
+CONFIG_ACPI_THERMAL=m
+# CONFIG_ACPI_CUSTOM_DSDT is not set
+CONFIG_ACPI_BLACKLIST_YEAR=0
+# CONFIG_ACPI_DEBUG is not set
+CONFIG_ACPI_PCI_SLOT=m
+CONFIG_X86_PM_TIMER=y
+CONFIG_ACPI_CONTAINER=m
+CONFIG_ACPI_SBS=m
+CONFIG_ACPI_HED=y
+# CONFIG_ACPI_CUSTOM_METHOD is not set
+# CONFIG_ACPI_BGRT is not set
+CONFIG_ACPI_APEI=y
+CONFIG_ACPI_APEI_GHES=y
+CONFIG_ACPI_APEI_PCIEAER=y
+# CONFIG_ACPI_APEI_EINJ is not set
+# CONFIG_ACPI_APEI_ERST_DEBUG is not set
+CONFIG_SFI=y
+CONFIG_X86_APM_BOOT=y
+CONFIG_APM=m
+# CONFIG_APM_IGNORE_USER_SUSPEND is not set
+# CONFIG_APM_DO_ENABLE is not set
+# CONFIG_APM_CPU_IDLE is not set
+# CONFIG_APM_DISPLAY_BLANK is not set
+# CONFIG_APM_ALLOW_INTS is not set
+
+#
+# CPU Frequency scaling
+#
+CONFIG_CPU_FREQ=y
+CONFIG_CPU_FREQ_TABLE=y
+CONFIG_CPU_FREQ_STAT=m
+# CONFIG_CPU_FREQ_STAT_DETAILS is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE is not set
+CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND=y
+# CONFIG_CPU_FREQ_DEFAULT_GOV_CONSERVATIVE is not set
+CONFIG_CPU_FREQ_GOV_PERFORMANCE=y
+CONFIG_CPU_FREQ_GOV_POWERSAVE=m
+CONFIG_CPU_FREQ_GOV_USERSPACE=m
+CONFIG_CPU_FREQ_GOV_ONDEMAND=y
+CONFIG_CPU_FREQ_GOV_CONSERVATIVE=m
+
+#
+# x86 CPU frequency scaling drivers
+#
+CONFIG_X86_PCC_CPUFREQ=m
+CONFIG_X86_ACPI_CPUFREQ=m
+CONFIG_X86_POWERNOW_K6=m
+CONFIG_X86_POWERNOW_K7=m
+CONFIG_X86_POWERNOW_K7_ACPI=y
+CONFIG_X86_POWERNOW_K8=m
+CONFIG_X86_GX_SUSPMOD=m
+CONFIG_X86_SPEEDSTEP_CENTRINO=m
+CONFIG_X86_SPEEDSTEP_CENTRINO_TABLE=y
+CONFIG_X86_SPEEDSTEP_ICH=m
+CONFIG_X86_SPEEDSTEP_SMI=m
+CONFIG_X86_P4_CLOCKMOD=m
+CONFIG_X86_CPUFREQ_NFORCE2=m
+CONFIG_X86_LONGRUN=m
+CONFIG_X86_LONGHAUL=m
+# CONFIG_X86_E_POWERSAVER is not set
+
+#
+# shared options
+#
+CONFIG_X86_SPEEDSTEP_LIB=m
+CONFIG_X86_SPEEDSTEP_RELAXED_CAP_CHECK=y
+CONFIG_CPU_IDLE=y
+CONFIG_CPU_IDLE_GOV_LADDER=y
+CONFIG_CPU_IDLE_GOV_MENU=y
+CONFIG_INTEL_IDLE=y
+
+#
+# Bus options (PCI etc.)
+#
+CONFIG_PCI=y
+# CONFIG_PCI_GOBIOS is not set
+# CONFIG_PCI_GOMMCONFIG is not set
+# CONFIG_PCI_GODIRECT is not set
+CONFIG_PCI_GOANY=y
+CONFIG_PCI_BIOS=y
+CONFIG_PCI_DIRECT=y
+CONFIG_PCI_MMCONFIG=y
+CONFIG_PCI_XEN=y
+CONFIG_PCI_DOMAINS=y
+# CONFIG_PCI_CNB20LE_QUIRK is not set
+CONFIG_PCIEPORTBUS=y
+CONFIG_HOTPLUG_PCI_PCIE=y
+CONFIG_PCIEAER=y
+# CONFIG_PCIE_ECRC is not set
+CONFIG_PCIEAER_INJECT=m
+CONFIG_PCIEASPM=y
+# CONFIG_PCIEASPM_DEBUG is not set
+CONFIG_PCIEASPM_DEFAULT=y
+# CONFIG_PCIEASPM_POWERSAVE is not set
+# CONFIG_PCIEASPM_PERFORMANCE is not set
+CONFIG_PCIE_PME=y
+CONFIG_ARCH_SUPPORTS_MSI=y
+CONFIG_PCI_MSI=y
+# CONFIG_PCI_DEBUG is not set
+# CONFIG_PCI_REALLOC_ENABLE_AUTO is not set
+CONFIG_PCI_STUB=m
+CONFIG_XEN_PCIDEV_FRONTEND=m
+CONFIG_HT_IRQ=y
+CONFIG_PCI_ATS=y
+CONFIG_PCI_IOV=y
+# CONFIG_PCI_PRI is not set
+# CONFIG_PCI_PASID is not set
+CONFIG_PCI_IOAPIC=y
+CONFIG_PCI_LABEL=y
+CONFIG_ISA_DMA_API=y
+CONFIG_ISA=y
+# CONFIG_EISA is not set
+# CONFIG_MCA is not set
+CONFIG_SCx200=m
+CONFIG_SCx200HR_TIMER=m
+# CONFIG_ALIX is not set
+# CONFIG_NET5501 is not set
+# CONFIG_GEOS is not set
+CONFIG_AMD_NB=y
+CONFIG_PCCARD=m
+CONFIG_PCMCIA=m
+CONFIG_PCMCIA_LOAD_CIS=y
+CONFIG_CARDBUS=y
+
+#
+# PC-card bridges
+#
+CONFIG_YENTA=m
+CONFIG_YENTA_O2=y
+CONFIG_YENTA_RICOH=y
+CONFIG_YENTA_TI=y
+CONFIG_YENTA_ENE_TUNE=y
+CONFIG_YENTA_TOSHIBA=y
+CONFIG_PD6729=m
+CONFIG_I82092=m
+CONFIG_I82365=m
+CONFIG_TCIC=m
+CONFIG_PCMCIA_PROBE=y
+CONFIG_PCCARD_NONSTATIC=y
+CONFIG_HOTPLUG_PCI=y
+CONFIG_HOTPLUG_PCI_FAKE=m
+CONFIG_HOTPLUG_PCI_COMPAQ=m
+# CONFIG_HOTPLUG_PCI_COMPAQ_NVRAM is not set
+CONFIG_HOTPLUG_PCI_IBM=m
+CONFIG_HOTPLUG_PCI_ACPI=y
+CONFIG_HOTPLUG_PCI_ACPI_IBM=m
+CONFIG_HOTPLUG_PCI_CPCI=y
+CONFIG_HOTPLUG_PCI_CPCI_ZT5550=m
+CONFIG_HOTPLUG_PCI_CPCI_GENERIC=m
+CONFIG_HOTPLUG_PCI_SHPC=m
+# CONFIG_RAPIDIO is not set
+
+#
+# Executable file formats / Emulations
+#
+CONFIG_BINFMT_ELF=y
+CONFIG_ARCH_BINFMT_ELF_RANDOMIZE_PIE=y
+CONFIG_CORE_DUMP_DEFAULT_ELF_HEADERS=y
+CONFIG_HAVE_AOUT=y
+CONFIG_BINFMT_AOUT=m
+CONFIG_BINFMT_MISC=m
+CONFIG_HAVE_ATOMIC_IOMAP=y
+CONFIG_HAVE_TEXT_POKE_SMP=y
+CONFIG_NET=y
+
+#
+# Networking options
+#
+CONFIG_PACKET=y
+CONFIG_UNIX=y
+# CONFIG_UNIX_DIAG is not set
+CONFIG_XFRM=y
+CONFIG_XFRM_USER=m
+CONFIG_XFRM_SUB_POLICY=y
+CONFIG_XFRM_MIGRATE=y
+# CONFIG_XFRM_STATISTICS is not set
+CONFIG_XFRM_IPCOMP=m
+CONFIG_NET_KEY=m
+CONFIG_NET_KEY_MIGRATE=y
+CONFIG_INET=y
+CONFIG_IP_MULTICAST=y
+CONFIG_IP_ADVANCED_ROUTER=y
+CONFIG_IP_FIB_TRIE_STATS=y
+CONFIG_IP_MULTIPLE_TABLES=y
+CONFIG_IP_ROUTE_MULTIPATH=y
+CONFIG_IP_ROUTE_VERBOSE=y
+CONFIG_IP_ROUTE_CLASSID=y
+# CONFIG_IP_PNP is not set
+CONFIG_NET_IPIP=m
+CONFIG_NET_IPGRE_DEMUX=m
+CONFIG_NET_IPGRE=m
+CONFIG_NET_IPGRE_BROADCAST=y
+CONFIG_IP_MROUTE=y
+CONFIG_IP_MROUTE_MULTIPLE_TABLES=y
+CONFIG_IP_PIMSM_V1=y
+CONFIG_IP_PIMSM_V2=y
+# CONFIG_ARPD is not set
+CONFIG_SYN_COOKIES=y
+CONFIG_INET_AH=m
+CONFIG_INET_ESP=m
+CONFIG_INET_IPCOMP=m
+CONFIG_INET_XFRM_TUNNEL=m
+CONFIG_INET_TUNNEL=m
+CONFIG_INET_XFRM_MODE_TRANSPORT=m
+CONFIG_INET_XFRM_MODE_TUNNEL=m
+CONFIG_INET_XFRM_MODE_BEET=m
+CONFIG_INET_LRO=m
+CONFIG_INET_DIAG=m
+CONFIG_INET_TCP_DIAG=m
+# CONFIG_INET_UDP_DIAG is not set
+CONFIG_TCP_CONG_ADVANCED=y
+CONFIG_TCP_CONG_BIC=m
+CONFIG_TCP_CONG_CUBIC=y
+CONFIG_TCP_CONG_WESTWOOD=m
+CONFIG_TCP_CONG_HTCP=m
+CONFIG_TCP_CONG_HSTCP=m
+CONFIG_TCP_CONG_HYBLA=m
+CONFIG_TCP_CONG_VEGAS=m
+CONFIG_TCP_CONG_SCALABLE=m
+CONFIG_TCP_CONG_LP=m
+CONFIG_TCP_CONG_VENO=m
+CONFIG_TCP_CONG_YEAH=m
+CONFIG_TCP_CONG_ILLINOIS=m
+CONFIG_DEFAULT_CUBIC=y
+# CONFIG_DEFAULT_RENO is not set
+CONFIG_DEFAULT_TCP_CONG="cubic"
+CONFIG_TCP_MD5SIG=y
+CONFIG_IPV6=y
+CONFIG_IPV6_PRIVACY=y
+CONFIG_IPV6_ROUTER_PREF=y
+CONFIG_IPV6_ROUTE_INFO=y
+CONFIG_IPV6_OPTIMISTIC_DAD=y
+CONFIG_INET6_AH=m
+CONFIG_INET6_ESP=m
+CONFIG_INET6_IPCOMP=m
+CONFIG_IPV6_MIP6=y
+CONFIG_INET6_XFRM_TUNNEL=m
+CONFIG_INET6_TUNNEL=m
+CONFIG_INET6_XFRM_MODE_TRANSPORT=m
+CONFIG_INET6_XFRM_MODE_TUNNEL=m
+CONFIG_INET6_XFRM_MODE_BEET=m
+CONFIG_INET6_XFRM_MODE_ROUTEOPTIMIZATION=m
+CONFIG_IPV6_SIT=m
+CONFIG_IPV6_SIT_6RD=y
+CONFIG_IPV6_NDISC_NODETYPE=y
+CONFIG_IPV6_TUNNEL=m
+CONFIG_IPV6_MULTIPLE_TABLES=y
+CONFIG_IPV6_SUBTREES=y
+CONFIG_IPV6_MROUTE=y
+CONFIG_IPV6_MROUTE_MULTIPLE_TABLES=y
+CONFIG_IPV6_PIMSM_V2=y
+# CONFIG_NETLABEL is not set
+CONFIG_NETWORK_SECMARK=y
+# CONFIG_NETWORK_PHY_TIMESTAMPING is not set
+CONFIG_NETFILTER=y
+# CONFIG_NETFILTER_DEBUG is not set
+CONFIG_NETFILTER_ADVANCED=y
+CONFIG_BRIDGE_NETFILTER=y
+
+#
+# Core Netfilter Configuration
+#
+CONFIG_NETFILTER_NETLINK=m
+# CONFIG_NETFILTER_NETLINK_ACCT is not set
+CONFIG_NETFILTER_NETLINK_QUEUE=m
+CONFIG_NETFILTER_NETLINK_LOG=m
+CONFIG_NF_CONNTRACK=m
+CONFIG_NF_CONNTRACK_MARK=y
+CONFIG_NF_CONNTRACK_SECMARK=y
+CONFIG_NF_CONNTRACK_ZONES=y
+# CONFIG_NF_CONNTRACK_PROCFS is not set
+CONFIG_NF_CONNTRACK_EVENTS=y
+# CONFIG_NF_CONNTRACK_TIMEOUT is not set
+CONFIG_NF_CONNTRACK_TIMESTAMP=y
+CONFIG_NF_CT_PROTO_DCCP=m
+CONFIG_NF_CT_PROTO_GRE=m
+CONFIG_NF_CT_PROTO_SCTP=m
+CONFIG_NF_CT_PROTO_UDPLITE=m
+CONFIG_NF_CONNTRACK_AMANDA=m
+CONFIG_NF_CONNTRACK_FTP=m
+CONFIG_NF_CONNTRACK_H323=m
+CONFIG_NF_CONNTRACK_IRC=m
+CONFIG_NF_CONNTRACK_BROADCAST=m
+CONFIG_NF_CONNTRACK_NETBIOS_NS=m
+CONFIG_NF_CONNTRACK_SNMP=m
+CONFIG_NF_CONNTRACK_PPTP=m
+CONFIG_NF_CONNTRACK_SANE=m
+CONFIG_NF_CONNTRACK_SIP=m
+CONFIG_NF_CONNTRACK_TFTP=m
+CONFIG_NF_CT_NETLINK=m
+# CONFIG_NF_CT_NETLINK_TIMEOUT is not set
+CONFIG_NETFILTER_TPROXY=m
+CONFIG_NETFILTER_XTABLES=m
+
+#
+# Xtables combined modules
+#
+CONFIG_NETFILTER_XT_MARK=m
+CONFIG_NETFILTER_XT_CONNMARK=m
+CONFIG_NETFILTER_XT_SET=m
+
+#
+# Xtables targets
+#
+CONFIG_NETFILTER_XT_TARGET_AUDIT=m
+CONFIG_NETFILTER_XT_TARGET_CHECKSUM=m
+CONFIG_NETFILTER_XT_TARGET_CLASSIFY=m
+CONFIG_NETFILTER_XT_TARGET_CONNMARK=m
+CONFIG_NETFILTER_XT_TARGET_CONNSECMARK=m
+CONFIG_NETFILTER_XT_TARGET_CT=m
+CONFIG_NETFILTER_XT_TARGET_DSCP=m
+CONFIG_NETFILTER_XT_TARGET_HL=m
+CONFIG_NETFILTER_XT_TARGET_IDLETIMER=m
+CONFIG_NETFILTER_XT_TARGET_LED=m
+# CONFIG_NETFILTER_XT_TARGET_LOG is not set
+CONFIG_NETFILTER_XT_TARGET_MARK=m
+CONFIG_NETFILTER_XT_TARGET_NFLOG=m
+CONFIG_NETFILTER_XT_TARGET_NFQUEUE=m
+CONFIG_NETFILTER_XT_TARGET_NOTRACK=m
+CONFIG_NETFILTER_XT_TARGET_RATEEST=m
+CONFIG_NETFILTER_XT_TARGET_TEE=m
+CONFIG_NETFILTER_XT_TARGET_TPROXY=m
+CONFIG_NETFILTER_XT_TARGET_TRACE=m
+CONFIG_NETFILTER_XT_TARGET_SECMARK=m
+CONFIG_NETFILTER_XT_TARGET_TCPMSS=m
+CONFIG_NETFILTER_XT_TARGET_TCPOPTSTRIP=m
+
+#
+# Xtables matches
+#
+CONFIG_NETFILTER_XT_MATCH_ADDRTYPE=m
+CONFIG_NETFILTER_XT_MATCH_CLUSTER=m
+CONFIG_NETFILTER_XT_MATCH_COMMENT=m
+CONFIG_NETFILTER_XT_MATCH_CONNBYTES=m
+CONFIG_NETFILTER_XT_MATCH_CONNLIMIT=m
+CONFIG_NETFILTER_XT_MATCH_CONNMARK=m
+CONFIG_NETFILTER_XT_MATCH_CONNTRACK=m
+CONFIG_NETFILTER_XT_MATCH_CPU=m
+CONFIG_NETFILTER_XT_MATCH_DCCP=m
+CONFIG_NETFILTER_XT_MATCH_DEVGROUP=m
+CONFIG_NETFILTER_XT_MATCH_DSCP=m
+CONFIG_NETFILTER_XT_MATCH_ECN=m
+CONFIG_NETFILTER_XT_MATCH_ESP=m
+CONFIG_NETFILTER_XT_MATCH_HASHLIMIT=m
+CONFIG_NETFILTER_XT_MATCH_HELPER=m
+CONFIG_NETFILTER_XT_MATCH_HL=m
+CONFIG_NETFILTER_XT_MATCH_IPRANGE=m
+CONFIG_NETFILTER_XT_MATCH_IPVS=m
+CONFIG_NETFILTER_XT_MATCH_LENGTH=m
+CONFIG_NETFILTER_XT_MATCH_LIMIT=m
+CONFIG_NETFILTER_XT_MATCH_MAC=m
+CONFIG_NETFILTER_XT_MATCH_MARK=m
+CONFIG_NETFILTER_XT_MATCH_MULTIPORT=m
+# CONFIG_NETFILTER_XT_MATCH_NFACCT is not set
+CONFIG_NETFILTER_XT_MATCH_OSF=m
+CONFIG_NETFILTER_XT_MATCH_OWNER=m
+CONFIG_NETFILTER_XT_MATCH_POLICY=m
+CONFIG_NETFILTER_XT_MATCH_PHYSDEV=m
+CONFIG_NETFILTER_XT_MATCH_PKTTYPE=m
+CONFIG_NETFILTER_XT_MATCH_QUOTA=m
+CONFIG_NETFILTER_XT_MATCH_RATEEST=m
+CONFIG_NETFILTER_XT_MATCH_REALM=m
+CONFIG_NETFILTER_XT_MATCH_RECENT=m
+CONFIG_NETFILTER_XT_MATCH_SCTP=m
+CONFIG_NETFILTER_XT_MATCH_SOCKET=m
+CONFIG_NETFILTER_XT_MATCH_STATE=m
+CONFIG_NETFILTER_XT_MATCH_STATISTIC=m
+CONFIG_NETFILTER_XT_MATCH_STRING=m
+CONFIG_NETFILTER_XT_MATCH_TCPMSS=m
+CONFIG_NETFILTER_XT_MATCH_TIME=m
+CONFIG_NETFILTER_XT_MATCH_U32=m
+CONFIG_IP_SET=m
+CONFIG_IP_SET_MAX=256
+CONFIG_IP_SET_BITMAP_IP=m
+CONFIG_IP_SET_BITMAP_IPMAC=m
+CONFIG_IP_SET_BITMAP_PORT=m
+CONFIG_IP_SET_HASH_IP=m
+CONFIG_IP_SET_HASH_IPPORT=m
+CONFIG_IP_SET_HASH_IPPORTIP=m
+CONFIG_IP_SET_HASH_IPPORTNET=m
+CONFIG_IP_SET_HASH_NET=m
+CONFIG_IP_SET_HASH_NETPORT=m
+CONFIG_IP_SET_HASH_NETIFACE=m
+CONFIG_IP_SET_LIST_SET=m
+CONFIG_IP_VS=m
+CONFIG_IP_VS_IPV6=y
+# CONFIG_IP_VS_DEBUG is not set
+CONFIG_IP_VS_TAB_BITS=12
+
+#
+# IPVS transport protocol load balancing support
+#
+CONFIG_IP_VS_PROTO_TCP=y
+CONFIG_IP_VS_PROTO_UDP=y
+CONFIG_IP_VS_PROTO_AH_ESP=y
+CONFIG_IP_VS_PROTO_ESP=y
+CONFIG_IP_VS_PROTO_AH=y
+CONFIG_IP_VS_PROTO_SCTP=y
+
+#
+# IPVS scheduler
+#
+CONFIG_IP_VS_RR=m
+CONFIG_IP_VS_WRR=m
+CONFIG_IP_VS_LC=m
+CONFIG_IP_VS_WLC=m
+CONFIG_IP_VS_LBLC=m
+CONFIG_IP_VS_LBLCR=m
+CONFIG_IP_VS_DH=m
+CONFIG_IP_VS_SH=m
+CONFIG_IP_VS_SED=m
+CONFIG_IP_VS_NQ=m
+
+#
+# IPVS SH scheduler
+#
+CONFIG_IP_VS_SH_TAB_BITS=8
+
+#
+# IPVS application helper
+#
+CONFIG_IP_VS_FTP=m
+CONFIG_IP_VS_NFCT=y
+CONFIG_IP_VS_PE_SIP=m
+
+#
+# IP: Netfilter Configuration
+#
+CONFIG_NF_DEFRAG_IPV4=m
+CONFIG_NF_CONNTRACK_IPV4=m
+CONFIG_IP_NF_QUEUE=m
+CONFIG_IP_NF_IPTABLES=m
+CONFIG_IP_NF_MATCH_AH=m
+CONFIG_IP_NF_MATCH_ECN=m
+# CONFIG_IP_NF_MATCH_RPFILTER is not set
+CONFIG_IP_NF_MATCH_TTL=m
+CONFIG_IP_NF_FILTER=m
+CONFIG_IP_NF_TARGET_REJECT=m
+CONFIG_IP_NF_TARGET_ULOG=m
+CONFIG_NF_NAT=m
+CONFIG_NF_NAT_NEEDED=y
+CONFIG_IP_NF_TARGET_MASQUERADE=m
+CONFIG_IP_NF_TARGET_NETMAP=m
+CONFIG_IP_NF_TARGET_REDIRECT=m
+CONFIG_NF_NAT_SNMP_BASIC=m
+CONFIG_NF_NAT_PROTO_DCCP=m
+CONFIG_NF_NAT_PROTO_GRE=m
+CONFIG_NF_NAT_PROTO_UDPLITE=m
+CONFIG_NF_NAT_PROTO_SCTP=m
+CONFIG_NF_NAT_FTP=m
+CONFIG_NF_NAT_IRC=m
+CONFIG_NF_NAT_TFTP=m
+CONFIG_NF_NAT_AMANDA=m
+CONFIG_NF_NAT_PPTP=m
+CONFIG_NF_NAT_H323=m
+CONFIG_NF_NAT_SIP=m
+CONFIG_IP_NF_MANGLE=m
+CONFIG_IP_NF_TARGET_CLUSTERIP=m
+CONFIG_IP_NF_TARGET_ECN=m
+CONFIG_IP_NF_TARGET_TTL=m
+CONFIG_IP_NF_RAW=m
+CONFIG_IP_NF_SECURITY=m
+CONFIG_IP_NF_ARPTABLES=m
+CONFIG_IP_NF_ARPFILTER=m
+CONFIG_IP_NF_ARP_MANGLE=m
+
+#
+# IPv6: Netfilter Configuration
+#
+CONFIG_NF_DEFRAG_IPV6=m
+CONFIG_NF_CONNTRACK_IPV6=m
+CONFIG_IP6_NF_QUEUE=m
+CONFIG_IP6_NF_IPTABLES=m
+CONFIG_IP6_NF_MATCH_AH=m
+CONFIG_IP6_NF_MATCH_EUI64=m
+CONFIG_IP6_NF_MATCH_FRAG=m
+CONFIG_IP6_NF_MATCH_OPTS=m
+CONFIG_IP6_NF_MATCH_HL=m
+CONFIG_IP6_NF_MATCH_IPV6HEADER=m
+CONFIG_IP6_NF_MATCH_MH=m
+# CONFIG_IP6_NF_MATCH_RPFILTER is not set
+CONFIG_IP6_NF_MATCH_RT=m
+CONFIG_IP6_NF_TARGET_HL=m
+CONFIG_IP6_NF_FILTER=m
+CONFIG_IP6_NF_TARGET_REJECT=m
+CONFIG_IP6_NF_MANGLE=m
+CONFIG_IP6_NF_RAW=m
+CONFIG_IP6_NF_SECURITY=m
+
+#
+# DECnet: Netfilter Configuration
+#
+CONFIG_DECNET_NF_GRABULATOR=m
+CONFIG_BRIDGE_NF_EBTABLES=m
+CONFIG_BRIDGE_EBT_BROUTE=m
+CONFIG_BRIDGE_EBT_T_FILTER=m
+CONFIG_BRIDGE_EBT_T_NAT=m
+CONFIG_BRIDGE_EBT_802_3=m
+CONFIG_BRIDGE_EBT_AMONG=m
+CONFIG_BRIDGE_EBT_ARP=m
+CONFIG_BRIDGE_EBT_IP=m
+CONFIG_BRIDGE_EBT_IP6=m
+CONFIG_BRIDGE_EBT_LIMIT=m
+CONFIG_BRIDGE_EBT_MARK=m
+CONFIG_BRIDGE_EBT_PKTTYPE=m
+CONFIG_BRIDGE_EBT_STP=m
+CONFIG_BRIDGE_EBT_VLAN=m
+CONFIG_BRIDGE_EBT_ARPREPLY=m
+CONFIG_BRIDGE_EBT_DNAT=m
+CONFIG_BRIDGE_EBT_MARK_T=m
+CONFIG_BRIDGE_EBT_REDIRECT=m
+CONFIG_BRIDGE_EBT_SNAT=m
+CONFIG_BRIDGE_EBT_LOG=m
+CONFIG_BRIDGE_EBT_ULOG=m
+CONFIG_BRIDGE_EBT_NFLOG=m
+CONFIG_IP_DCCP=m
+CONFIG_INET_DCCP_DIAG=m
+
+#
+# DCCP CCIDs Configuration (EXPERIMENTAL)
+#
+# CONFIG_IP_DCCP_CCID2_DEBUG is not set
+CONFIG_IP_DCCP_CCID3=y
+# CONFIG_IP_DCCP_CCID3_DEBUG is not set
+CONFIG_IP_DCCP_TFRC_LIB=y
+
+#
+# DCCP Kernel Hacking
+#
+# CONFIG_IP_DCCP_DEBUG is not set
+CONFIG_NET_DCCPPROBE=m
+CONFIG_IP_SCTP=m
+CONFIG_NET_SCTPPROBE=m
+# CONFIG_SCTP_DBG_MSG is not set
+# CONFIG_SCTP_DBG_OBJCNT is not set
+# CONFIG_SCTP_HMAC_NONE is not set
+# CONFIG_SCTP_HMAC_SHA1 is not set
+CONFIG_SCTP_HMAC_MD5=y
+CONFIG_RDS=m
+CONFIG_RDS_RDMA=m
+CONFIG_RDS_TCP=m
+# CONFIG_RDS_DEBUG is not set
+CONFIG_TIPC=m
+CONFIG_TIPC_ADVANCED=y
+CONFIG_TIPC_PORTS=8191
+CONFIG_TIPC_LOG=0
+# CONFIG_TIPC_DEBUG is not set
+CONFIG_ATM=m
+CONFIG_ATM_CLIP=m
+# CONFIG_ATM_CLIP_NO_ICMP is not set
+CONFIG_ATM_LANE=m
+CONFIG_ATM_MPOA=m
+CONFIG_ATM_BR2684=m
+# CONFIG_ATM_BR2684_IPFILTER is not set
+CONFIG_L2TP=m
+CONFIG_L2TP_DEBUGFS=m
+CONFIG_L2TP_V3=y
+CONFIG_L2TP_IP=m
+CONFIG_L2TP_ETH=m
+CONFIG_STP=m
+CONFIG_GARP=m
+CONFIG_BRIDGE=m
+CONFIG_BRIDGE_IGMP_SNOOPING=y
+# CONFIG_NET_DSA is not set
+CONFIG_VLAN_8021Q=m
+CONFIG_VLAN_8021Q_GVRP=y
+CONFIG_DECNET=m
+# CONFIG_DECNET_ROUTER is not set
+CONFIG_LLC=y
+CONFIG_LLC2=m
+CONFIG_IPX=m
+# CONFIG_IPX_INTERN is not set
+CONFIG_ATALK=m
+CONFIG_DEV_APPLETALK=m
+CONFIG_LTPC=m
+# CONFIG_COPS is not set
+CONFIG_IPDDP=m
+CONFIG_IPDDP_ENCAP=y
+CONFIG_IPDDP_DECAP=y
+# CONFIG_X25 is not set
+CONFIG_LAPB=m
+# CONFIG_ECONET is not set
+# CONFIG_WAN_ROUTER is not set
+CONFIG_PHONET=m
+CONFIG_IEEE802154=m
+CONFIG_IEEE802154_6LOWPAN=m
+CONFIG_NET_SCHED=y
+
+#
+# Queueing/Scheduling
+#
+CONFIG_NET_SCH_CBQ=m
+CONFIG_NET_SCH_HTB=m
+CONFIG_NET_SCH_HFSC=m
+CONFIG_NET_SCH_ATM=m
+CONFIG_NET_SCH_PRIO=m
+CONFIG_NET_SCH_MULTIQ=m
+CONFIG_NET_SCH_RED=m
+CONFIG_NET_SCH_SFB=m
+CONFIG_NET_SCH_SFQ=m
+CONFIG_NET_SCH_TEQL=m
+CONFIG_NET_SCH_TBF=m
+CONFIG_NET_SCH_GRED=m
+CONFIG_NET_SCH_DSMARK=m
+CONFIG_NET_SCH_NETEM=m
+CONFIG_NET_SCH_DRR=m
+CONFIG_NET_SCH_MQPRIO=m
+CONFIG_NET_SCH_CHOKE=m
+CONFIG_NET_SCH_QFQ=m
+CONFIG_NET_SCH_INGRESS=m
+# CONFIG_NET_SCH_PLUG is not set
+
+#
+# Classification
+#
+CONFIG_NET_CLS=y
+CONFIG_NET_CLS_BASIC=m
+CONFIG_NET_CLS_TCINDEX=m
+CONFIG_NET_CLS_ROUTE4=m
+CONFIG_NET_CLS_FW=m
+CONFIG_NET_CLS_U32=m
+CONFIG_CLS_U32_PERF=y
+CONFIG_CLS_U32_MARK=y
+CONFIG_NET_CLS_RSVP=m
+CONFIG_NET_CLS_RSVP6=m
+CONFIG_NET_CLS_FLOW=m
+CONFIG_NET_CLS_CGROUP=y
+CONFIG_NET_EMATCH=y
+CONFIG_NET_EMATCH_STACK=32
+CONFIG_NET_EMATCH_CMP=m
+CONFIG_NET_EMATCH_NBYTE=m
+CONFIG_NET_EMATCH_U32=m
+CONFIG_NET_EMATCH_META=m
+CONFIG_NET_EMATCH_TEXT=m
+CONFIG_NET_CLS_ACT=y
+CONFIG_NET_ACT_POLICE=m
+CONFIG_NET_ACT_GACT=m
+CONFIG_GACT_PROB=y
+CONFIG_NET_ACT_MIRRED=m
+CONFIG_NET_ACT_IPT=m
+CONFIG_NET_ACT_NAT=m
+CONFIG_NET_ACT_PEDIT=m
+CONFIG_NET_ACT_SIMP=m
+CONFIG_NET_ACT_SKBEDIT=m
+CONFIG_NET_ACT_CSUM=m
+CONFIG_NET_CLS_IND=y
+CONFIG_NET_SCH_FIFO=y
+CONFIG_DCB=y
+CONFIG_DNS_RESOLVER=y
+CONFIG_BATMAN_ADV=m
+# CONFIG_BATMAN_ADV_DEBUG is not set
+# CONFIG_OPENVSWITCH is not set
+CONFIG_RPS=y
+CONFIG_RFS_ACCEL=y
+CONFIG_XPS=y
+# CONFIG_NETPRIO_CGROUP is not set
+CONFIG_BQL=y
+
+#
+# Network testing
+#
+CONFIG_NET_PKTGEN=m
+# CONFIG_NET_TCPPROBE is not set
+CONFIG_NET_DROP_MONITOR=y
+CONFIG_HAMRADIO=y
+
+#
+# Packet Radio protocols
+#
+CONFIG_AX25=m
+# CONFIG_AX25_DAMA_SLAVE is not set
+CONFIG_NETROM=m
+CONFIG_ROSE=m
+
+#
+# AX.25 network device drivers
+#
+CONFIG_MKISS=m
+CONFIG_6PACK=m
+CONFIG_BPQETHER=m
+CONFIG_SCC=m
+# CONFIG_SCC_DELAY is not set
+# CONFIG_SCC_TRXECHO is not set
+CONFIG_BAYCOM_SER_FDX=m
+CONFIG_BAYCOM_SER_HDX=m
+CONFIG_BAYCOM_PAR=m
+CONFIG_BAYCOM_EPP=m
+CONFIG_YAM=m
+CONFIG_CAN=m
+CONFIG_CAN_RAW=m
+CONFIG_CAN_BCM=m
+CONFIG_CAN_GW=m
+
+#
+# CAN Device Drivers
+#
+CONFIG_CAN_VCAN=m
+CONFIG_CAN_SLCAN=m
+CONFIG_CAN_DEV=m
+CONFIG_CAN_CALC_BITTIMING=y
+CONFIG_CAN_MCP251X=m
+CONFIG_PCH_CAN=m
+CONFIG_CAN_SJA1000=m
+CONFIG_CAN_SJA1000_ISA=m
+# CONFIG_CAN_SJA1000_PLATFORM is not set
+CONFIG_CAN_EMS_PCMCIA=m
+CONFIG_CAN_EMS_PCI=m
+# CONFIG_CAN_PEAK_PCMCIA is not set
+CONFIG_CAN_PEAK_PCI=m
+# CONFIG_CAN_PEAK_PCIEC is not set
+CONFIG_CAN_KVASER_PCI=m
+CONFIG_CAN_PLX_PCI=m
+CONFIG_CAN_TSCAN1=m
+# CONFIG_CAN_C_CAN is not set
+# CONFIG_CAN_CC770 is not set
+
+#
+# CAN USB interfaces
+#
+CONFIG_CAN_EMS_USB=m
+CONFIG_CAN_ESD_USB2=m
+# CONFIG_CAN_PEAK_USB is not set
+CONFIG_CAN_SOFTING=m
+CONFIG_CAN_SOFTING_CS=m
+# CONFIG_CAN_DEBUG_DEVICES is not set
+CONFIG_IRDA=m
+
+#
+# IrDA protocols
+#
+CONFIG_IRLAN=m
+CONFIG_IRNET=m
+CONFIG_IRCOMM=m
+# CONFIG_IRDA_ULTRA is not set
+
+#
+# IrDA options
+#
+CONFIG_IRDA_CACHE_LAST_LSAP=y
+CONFIG_IRDA_FAST_RR=y
+# CONFIG_IRDA_DEBUG is not set
+
+#
+# Infrared-port device drivers
+#
+
+#
+# SIR device drivers
+#
+CONFIG_IRTTY_SIR=m
+
+#
+# Dongle support
+#
+CONFIG_DONGLE=y
+CONFIG_ESI_DONGLE=m
+CONFIG_ACTISYS_DONGLE=m
+CONFIG_TEKRAM_DONGLE=m
+CONFIG_TOIM3232_DONGLE=m
+CONFIG_LITELINK_DONGLE=m
+CONFIG_MA600_DONGLE=m
+CONFIG_GIRBIL_DONGLE=m
+CONFIG_MCP2120_DONGLE=m
+CONFIG_OLD_BELKIN_DONGLE=m
+CONFIG_ACT200L_DONGLE=m
+CONFIG_KINGSUN_DONGLE=m
+CONFIG_KSDAZZLE_DONGLE=m
+CONFIG_KS959_DONGLE=m
+
+#
+# FIR device drivers
+#
+CONFIG_USB_IRDA=m
+CONFIG_SIGMATEL_FIR=m
+CONFIG_NSC_FIR=m
+CONFIG_WINBOND_FIR=m
+CONFIG_TOSHIBA_FIR=m
+CONFIG_SMC_IRCC_FIR=m
+CONFIG_ALI_FIR=m
+CONFIG_VLSI_FIR=m
+CONFIG_VIA_FIR=m
+CONFIG_MCS_FIR=m
+CONFIG_BT=m
+CONFIG_BT_RFCOMM=m
+CONFIG_BT_RFCOMM_TTY=y
+CONFIG_BT_BNEP=m
+CONFIG_BT_BNEP_MC_FILTER=y
+CONFIG_BT_BNEP_PROTO_FILTER=y
+CONFIG_BT_CMTP=m
+CONFIG_BT_HIDP=m
+
+#
+# Bluetooth device drivers
+#
+CONFIG_BT_HCIBTUSB=m
+CONFIG_BT_HCIBTSDIO=m
+CONFIG_BT_HCIUART=m
+CONFIG_BT_HCIUART_H4=y
+CONFIG_BT_HCIUART_BCSP=y
+CONFIG_BT_HCIUART_ATH3K=y
+CONFIG_BT_HCIUART_LL=y
+CONFIG_BT_HCIBCM203X=m
+CONFIG_BT_HCIBPA10X=m
+CONFIG_BT_HCIBFUSB=m
+CONFIG_BT_HCIDTL1=m
+CONFIG_BT_HCIBT3C=m
+CONFIG_BT_HCIBLUECARD=m
+CONFIG_BT_HCIBTUART=m
+CONFIG_BT_HCIVHCI=m
+CONFIG_BT_MRVL=m
+CONFIG_BT_MRVL_SDIO=m
+CONFIG_BT_ATH3K=m
+CONFIG_AF_RXRPC=m
+# CONFIG_AF_RXRPC_DEBUG is not set
+CONFIG_RXKAD=m
+CONFIG_FIB_RULES=y
+CONFIG_WIRELESS=y
+CONFIG_WIRELESS_EXT=y
+CONFIG_WEXT_CORE=y
+CONFIG_WEXT_PROC=y
+CONFIG_WEXT_SPY=y
+CONFIG_WEXT_PRIV=y
+CONFIG_CFG80211=m
+# CONFIG_NL80211_TESTMODE is not set
+# CONFIG_CFG80211_DEVELOPER_WARNINGS is not set
+# CONFIG_CFG80211_REG_DEBUG is not set
+CONFIG_CFG80211_DEFAULT_PS=y
+# CONFIG_CFG80211_DEBUGFS is not set
+# CONFIG_CFG80211_INTERNAL_REGDB is not set
+CONFIG_CFG80211_WEXT=y
+# CONFIG_WIRELESS_EXT_SYSFS is not set
+CONFIG_LIB80211=m
+CONFIG_LIB80211_CRYPT_WEP=m
+CONFIG_LIB80211_CRYPT_CCMP=m
+CONFIG_LIB80211_CRYPT_TKIP=m
+# CONFIG_LIB80211_DEBUG is not set
+CONFIG_MAC80211=m
+CONFIG_MAC80211_HAS_RC=y
+CONFIG_MAC80211_RC_MINSTREL=y
+CONFIG_MAC80211_RC_MINSTREL_HT=y
+CONFIG_MAC80211_RC_DEFAULT_MINSTREL=y
+CONFIG_MAC80211_RC_DEFAULT="minstrel_ht"
+CONFIG_MAC80211_MESH=y
+CONFIG_MAC80211_LEDS=y
+# CONFIG_MAC80211_DEBUGFS is not set
+# CONFIG_MAC80211_DEBUG_MENU is not set
+CONFIG_WIMAX=m
+CONFIG_WIMAX_DEBUG_LEVEL=8
+CONFIG_RFKILL=m
+CONFIG_RFKILL_LEDS=y
+CONFIG_RFKILL_INPUT=y
+# CONFIG_RFKILL_REGULATOR is not set
+CONFIG_NET_9P=m
+CONFIG_NET_9P_VIRTIO=m
+CONFIG_NET_9P_RDMA=m
+# CONFIG_NET_9P_DEBUG is not set
+# CONFIG_CAIF is not set
+CONFIG_CEPH_LIB=m
+# CONFIG_CEPH_LIB_PRETTYDEBUG is not set
+# CONFIG_CEPH_LIB_USE_DNS_RESOLVER is not set
+CONFIG_NFC=m
+CONFIG_NFC_NCI=m
+# CONFIG_NFC_LLCP is not set
+
+#
+# Near Field Communication (NFC) devices
+#
+# CONFIG_PN544_NFC is not set
+CONFIG_NFC_PN533=m
+
+#
+# Device Drivers
+#
+
+#
+# Generic Driver Options
+#
+CONFIG_UEVENT_HELPER_PATH=""
+CONFIG_DEVTMPFS=y
+# CONFIG_DEVTMPFS_MOUNT is not set
+CONFIG_STANDALONE=y
+CONFIG_PREVENT_FIRMWARE_BUILD=y
+CONFIG_FW_LOADER=y
+# CONFIG_FIRMWARE_IN_KERNEL is not set
+CONFIG_EXTRA_FIRMWARE=""
+# CONFIG_DEBUG_DRIVER is not set
+# CONFIG_DEBUG_DEVRES is not set
+CONFIG_SYS_HYPERVISOR=y
+# CONFIG_GENERIC_CPU_DEVICES is not set
+CONFIG_REGMAP=y
+CONFIG_REGMAP_I2C=m
+CONFIG_DMA_SHARED_BUFFER=y
+CONFIG_CONNECTOR=y
+CONFIG_PROC_EVENTS=y
+CONFIG_MTD=m
+# CONFIG_MTD_TESTS is not set
+CONFIG_MTD_REDBOOT_PARTS=m
+CONFIG_MTD_REDBOOT_DIRECTORY_BLOCK=-1
+# CONFIG_MTD_REDBOOT_PARTS_UNALLOCATED is not set
+# CONFIG_MTD_REDBOOT_PARTS_READONLY is not set
+CONFIG_MTD_AR7_PARTS=m
+
+#
+# User Modules And Translation Layers
+#
+CONFIG_MTD_CHAR=m
+CONFIG_MTD_BLKDEVS=m
+CONFIG_MTD_BLOCK=m
+CONFIG_MTD_BLOCK_RO=m
+CONFIG_FTL=m
+CONFIG_NFTL=m
+CONFIG_NFTL_RW=y
+CONFIG_INFTL=m
+CONFIG_RFD_FTL=m
+CONFIG_SSFDC=m
+# CONFIG_SM_FTL is not set
+CONFIG_MTD_OOPS=m
+CONFIG_MTD_SWAP=m
+
+#
+# RAM/ROM/Flash chip drivers
+#
+CONFIG_MTD_CFI=m
+CONFIG_MTD_JEDECPROBE=m
+CONFIG_MTD_GEN_PROBE=m
+# CONFIG_MTD_CFI_ADV_OPTIONS is not set
+CONFIG_MTD_MAP_BANK_WIDTH_1=y
+CONFIG_MTD_MAP_BANK_WIDTH_2=y
+CONFIG_MTD_MAP_BANK_WIDTH_4=y
+# CONFIG_MTD_MAP_BANK_WIDTH_8 is not set
+# CONFIG_MTD_MAP_BANK_WIDTH_16 is not set
+# CONFIG_MTD_MAP_BANK_WIDTH_32 is not set
+CONFIG_MTD_CFI_I1=y
+CONFIG_MTD_CFI_I2=y
+# CONFIG_MTD_CFI_I4 is not set
+# CONFIG_MTD_CFI_I8 is not set
+CONFIG_MTD_CFI_INTELEXT=m
+CONFIG_MTD_CFI_AMDSTD=m
+CONFIG_MTD_CFI_STAA=m
+CONFIG_MTD_CFI_UTIL=m
+CONFIG_MTD_RAM=m
+CONFIG_MTD_ROM=m
+CONFIG_MTD_ABSENT=m
+
+#
+# Mapping drivers for chip access
+#
+CONFIG_MTD_COMPLEX_MAPPINGS=y
+CONFIG_MTD_PHYSMAP=m
+# CONFIG_MTD_PHYSMAP_COMPAT is not set
+CONFIG_MTD_SC520CDP=m
+CONFIG_MTD_NETSC520=m
+CONFIG_MTD_TS5500=m
+CONFIG_MTD_SBC_GXX=m
+CONFIG_MTD_SCx200_DOCFLASH=m
+# CONFIG_MTD_AMD76XROM is not set
+# CONFIG_MTD_ICHXROM is not set
+# CONFIG_MTD_ESB2ROM is not set
+# CONFIG_MTD_CK804XROM is not set
+# CONFIG_MTD_SCB2_FLASH is not set
+CONFIG_MTD_NETtel=m
+# CONFIG_MTD_L440GX is not set
+CONFIG_MTD_PCI=m
+CONFIG_MTD_PCMCIA=m
+# CONFIG_MTD_PCMCIA_ANONYMOUS is not set
+# CONFIG_MTD_GPIO_ADDR is not set
+CONFIG_MTD_INTEL_VR_NOR=m
+CONFIG_MTD_PLATRAM=m
+# CONFIG_MTD_LATCH_ADDR is not set
+
+#
+# Self-contained MTD device drivers
+#
+CONFIG_MTD_PMC551=m
+# CONFIG_MTD_PMC551_BUGFIX is not set
+# CONFIG_MTD_PMC551_DEBUG is not set
+CONFIG_MTD_DATAFLASH=m
+# CONFIG_MTD_DATAFLASH_WRITE_VERIFY is not set
+# CONFIG_MTD_DATAFLASH_OTP is not set
+CONFIG_MTD_M25P80=m
+CONFIG_M25PXX_USE_FAST_READ=y
+CONFIG_MTD_SST25L=m
+CONFIG_MTD_SLRAM=m
+CONFIG_MTD_PHRAM=m
+CONFIG_MTD_MTDRAM=m
+CONFIG_MTDRAM_TOTAL_SIZE=4096
+CONFIG_MTDRAM_ERASE_SIZE=128
+CONFIG_MTD_BLOCK2MTD=m
+
+#
+# Disk-On-Chip Device Drivers
+#
+CONFIG_MTD_DOC2000=m
+CONFIG_MTD_DOC2001=m
+CONFIG_MTD_DOC2001PLUS=m
+# CONFIG_MTD_DOCG3 is not set
+CONFIG_MTD_DOCPROBE=m
+CONFIG_MTD_DOCECC=m
+# CONFIG_MTD_DOCPROBE_ADVANCED is not set
+CONFIG_MTD_DOCPROBE_ADDRESS=0x0
+CONFIG_MTD_NAND_ECC=m
+# CONFIG_MTD_NAND_ECC_SMC is not set
+CONFIG_MTD_NAND=m
+# CONFIG_MTD_NAND_VERIFY_WRITE is not set
+# CONFIG_MTD_NAND_ECC_BCH is not set
+CONFIG_MTD_SM_COMMON=m
+# CONFIG_MTD_NAND_MUSEUM_IDS is not set
+# CONFIG_MTD_NAND_DENALI is not set
+CONFIG_MTD_NAND_IDS=m
+CONFIG_MTD_NAND_RICOH=m
+CONFIG_MTD_NAND_DISKONCHIP=m
+# CONFIG_MTD_NAND_DISKONCHIP_PROBE_ADVANCED is not set
+CONFIG_MTD_NAND_DISKONCHIP_PROBE_ADDRESS=0
+# CONFIG_MTD_NAND_DISKONCHIP_BBTWRITE is not set
+# CONFIG_MTD_NAND_DOCG4 is not set
+CONFIG_MTD_NAND_CAFE=m
+CONFIG_MTD_NAND_CS553X=m
+CONFIG_MTD_NAND_NANDSIM=m
+CONFIG_MTD_NAND_PLATFORM=m
+CONFIG_MTD_ALAUDA=m
+CONFIG_MTD_ONENAND=m
+CONFIG_MTD_ONENAND_VERIFY_WRITE=y
+CONFIG_MTD_ONENAND_GENERIC=m
+# CONFIG_MTD_ONENAND_OTP is not set
+CONFIG_MTD_ONENAND_2X_PROGRAM=y
+CONFIG_MTD_ONENAND_SIM=m
+
+#
+# LPDDR flash memory drivers
+#
+CONFIG_MTD_LPDDR=m
+CONFIG_MTD_QINFO_PROBE=m
+CONFIG_MTD_UBI=m
+CONFIG_MTD_UBI_WL_THRESHOLD=4096
+CONFIG_MTD_UBI_BEB_RESERVE=1
+# CONFIG_MTD_UBI_GLUEBI is not set
+# CONFIG_MTD_UBI_DEBUG is not set
+CONFIG_PARPORT=m
+CONFIG_PARPORT_PC=m
+CONFIG_PARPORT_SERIAL=m
+# CONFIG_PARPORT_PC_FIFO is not set
+# CONFIG_PARPORT_PC_SUPERIO is not set
+CONFIG_PARPORT_PC_PCMCIA=m
+# CONFIG_PARPORT_GSC is not set
+CONFIG_PARPORT_AX88796=m
+CONFIG_PARPORT_1284=y
+CONFIG_PARPORT_NOT_PC=y
+CONFIG_PNP=y
+# CONFIG_PNP_DEBUG_MESSAGES is not set
+
+#
+# Protocols
+#
+CONFIG_ISAPNP=y
+CONFIG_PNPBIOS=y
+CONFIG_PNPBIOS_PROC_FS=y
+CONFIG_PNPACPI=y
+CONFIG_BLK_DEV=y
+CONFIG_BLK_DEV_FD=m
+CONFIG_BLK_DEV_XD=m
+CONFIG_PARIDE=m
+
+#
+# Parallel IDE high-level drivers
+#
+CONFIG_PARIDE_PD=m
+CONFIG_PARIDE_PCD=m
+CONFIG_PARIDE_PF=m
+CONFIG_PARIDE_PT=m
+CONFIG_PARIDE_PG=m
+
+#
+# Parallel IDE protocol modules
+#
+CONFIG_PARIDE_ATEN=m
+CONFIG_PARIDE_BPCK=m
+CONFIG_PARIDE_BPCK6=m
+CONFIG_PARIDE_COMM=m
+CONFIG_PARIDE_DSTR=m
+CONFIG_PARIDE_FIT2=m
+CONFIG_PARIDE_FIT3=m
+CONFIG_PARIDE_EPAT=m
+# CONFIG_PARIDE_EPATC8 is not set
+CONFIG_PARIDE_EPIA=m
+CONFIG_PARIDE_FRIQ=m
+CONFIG_PARIDE_FRPW=m
+CONFIG_PARIDE_KBIC=m
+CONFIG_PARIDE_KTTI=m
+CONFIG_PARIDE_ON20=m
+CONFIG_PARIDE_ON26=m
+# CONFIG_BLK_DEV_PCIESSD_MTIP32XX is not set
+CONFIG_BLK_CPQ_DA=m
+CONFIG_BLK_CPQ_CISS_DA=m
+CONFIG_CISS_SCSI_TAPE=y
+CONFIG_BLK_DEV_DAC960=m
+CONFIG_BLK_DEV_UMEM=m
+# CONFIG_BLK_DEV_COW_COMMON is not set
+CONFIG_BLK_DEV_LOOP=m
+CONFIG_BLK_DEV_LOOP_MIN_COUNT=8
+# CONFIG_BLK_DEV_CRYPTOLOOP is not set
+CONFIG_BLK_DEV_DRBD=m
+# CONFIG_DRBD_FAULT_INJECTION is not set
+CONFIG_BLK_DEV_NBD=m
+# CONFIG_BLK_DEV_NVME is not set
+CONFIG_BLK_DEV_OSD=m
+CONFIG_BLK_DEV_SX8=m
+# CONFIG_BLK_DEV_UB is not set
+CONFIG_BLK_DEV_RAM=m
+CONFIG_BLK_DEV_RAM_COUNT=16
+CONFIG_BLK_DEV_RAM_SIZE=8192
+# CONFIG_BLK_DEV_XIP is not set
+CONFIG_CDROM_PKTCDVD=m
+CONFIG_CDROM_PKTCDVD_BUFFERS=8
+# CONFIG_CDROM_PKTCDVD_WCACHE is not set
+CONFIG_ATA_OVER_ETH=m
+CONFIG_XEN_BLKDEV_FRONTEND=m
+CONFIG_XEN_BLKDEV_BACKEND=m
+CONFIG_VIRTIO_BLK=m
+# CONFIG_BLK_DEV_HD is not set
+CONFIG_BLK_DEV_RBD=m
+
+#
+# Misc devices
+#
+CONFIG_SENSORS_LIS3LV02D=m
+CONFIG_AD525X_DPOT=m
+CONFIG_AD525X_DPOT_I2C=m
+CONFIG_AD525X_DPOT_SPI=m
+CONFIG_IBM_ASM=m
+CONFIG_PHANTOM=m
+# CONFIG_INTEL_MID_PTI is not set
+CONFIG_SGI_IOC4=m
+CONFIG_TIFM_CORE=m
+CONFIG_TIFM_7XX1=m
+CONFIG_ICS932S401=m
+CONFIG_ENCLOSURE_SERVICES=m
+CONFIG_CS5535_MFGPT=m
+CONFIG_CS5535_MFGPT_DEFAULT_IRQ=7
+CONFIG_CS5535_CLOCK_EVENT_SRC=m
+CONFIG_HP_ILO=m
+CONFIG_APDS9802ALS=m
+CONFIG_ISL29003=m
+CONFIG_ISL29020=m
+CONFIG_SENSORS_TSL2550=m
+CONFIG_SENSORS_BH1780=m
+CONFIG_SENSORS_BH1770=m
+CONFIG_SENSORS_APDS990X=m
+CONFIG_HMC6352=m
+CONFIG_DS1682=m
+CONFIG_TI_DAC7512=m
+CONFIG_VMWARE_BALLOON=m
+CONFIG_BMP085=m
+CONFIG_PCH_PHUB=m
+# CONFIG_USB_SWITCH_FSA9480 is not set
+CONFIG_C2PORT=m
+CONFIG_C2PORT_DURAMAR_2150=m
+
+#
+# EEPROM support
+#
+CONFIG_EEPROM_AT24=m
+CONFIG_EEPROM_AT25=m
+CONFIG_EEPROM_LEGACY=m
+CONFIG_EEPROM_MAX6875=m
+CONFIG_EEPROM_93CX6=m
+# CONFIG_EEPROM_93XX46 is not set
+CONFIG_CB710_CORE=m
+# CONFIG_CB710_DEBUG is not set
+CONFIG_CB710_DEBUG_ASSUMPTIONS=y
+CONFIG_IWMC3200TOP=m
+# CONFIG_IWMC3200TOP_DEBUG is not set
+# CONFIG_IWMC3200TOP_DEBUGFS is not set
+
+#
+# Texas Instruments shared transport line discipline
+#
+# CONFIG_TI_ST is not set
+CONFIG_SENSORS_LIS3_I2C=m
+
+#
+# Altera FPGA firmware download module
+#
+# CONFIG_ALTERA_STAPL is not set
+CONFIG_HAVE_IDE=y
+# CONFIG_IDE is not set
+
+#
+# SCSI device support
+#
+CONFIG_SCSI_MOD=m
+CONFIG_RAID_ATTRS=m
+CONFIG_SCSI=m
+CONFIG_SCSI_DMA=y
+CONFIG_SCSI_TGT=m
+CONFIG_SCSI_NETLINK=y
+# CONFIG_SCSI_PROC_FS is not set
+
+#
+# SCSI support type (disk, tape, CD-ROM)
+#
+CONFIG_BLK_DEV_SD=m
+CONFIG_CHR_DEV_ST=m
+CONFIG_CHR_DEV_OSST=m
+CONFIG_BLK_DEV_SR=m
+CONFIG_BLK_DEV_SR_VENDOR=y
+CONFIG_CHR_DEV_SG=m
+CONFIG_CHR_DEV_SCH=m
+CONFIG_SCSI_ENCLOSURE=m
+CONFIG_SCSI_MULTI_LUN=y
+CONFIG_SCSI_CONSTANTS=y
+CONFIG_SCSI_LOGGING=y
+CONFIG_SCSI_SCAN_ASYNC=y
+CONFIG_SCSI_WAIT_SCAN=m
+
+#
+# SCSI Transports
+#
+CONFIG_SCSI_SPI_ATTRS=m
+CONFIG_SCSI_FC_ATTRS=m
+CONFIG_SCSI_FC_TGT_ATTRS=y
+CONFIG_SCSI_ISCSI_ATTRS=m
+CONFIG_SCSI_SAS_ATTRS=m
+CONFIG_SCSI_SAS_LIBSAS=m
+CONFIG_SCSI_SAS_ATA=y
+CONFIG_SCSI_SAS_HOST_SMP=y
+CONFIG_SCSI_SRP_ATTRS=m
+CONFIG_SCSI_SRP_TGT_ATTRS=y
+CONFIG_SCSI_LOWLEVEL=y
+CONFIG_ISCSI_TCP=m
+CONFIG_ISCSI_BOOT_SYSFS=m
+CONFIG_SCSI_CXGB3_ISCSI=m
+CONFIG_SCSI_CXGB4_ISCSI=m
+CONFIG_SCSI_BNX2_ISCSI=m
+CONFIG_SCSI_BNX2X_FCOE=m
+CONFIG_BE2ISCSI=m
+CONFIG_BLK_DEV_3W_XXXX_RAID=m
+CONFIG_SCSI_HPSA=m
+CONFIG_SCSI_3W_9XXX=m
+CONFIG_SCSI_3W_SAS=m
+CONFIG_SCSI_7000FASST=m
+CONFIG_SCSI_ACARD=m
+CONFIG_SCSI_AHA152X=m
+CONFIG_SCSI_AHA1542=m
+CONFIG_SCSI_AACRAID=m
+CONFIG_SCSI_AIC7XXX=m
+CONFIG_AIC7XXX_CMDS_PER_DEVICE=8
+CONFIG_AIC7XXX_RESET_DELAY_MS=15000
+CONFIG_AIC7XXX_DEBUG_ENABLE=y
+CONFIG_AIC7XXX_DEBUG_MASK=0
+CONFIG_AIC7XXX_REG_PRETTY_PRINT=y
+CONFIG_SCSI_AIC7XXX_OLD=m
+CONFIG_SCSI_AIC79XX=m
+CONFIG_AIC79XX_CMDS_PER_DEVICE=32
+CONFIG_AIC79XX_RESET_DELAY_MS=15000
+CONFIG_AIC79XX_DEBUG_ENABLE=y
+CONFIG_AIC79XX_DEBUG_MASK=0
+CONFIG_AIC79XX_REG_PRETTY_PRINT=y
+CONFIG_SCSI_AIC94XX=m
+# CONFIG_AIC94XX_DEBUG is not set
+CONFIG_SCSI_MVSAS=m
+# CONFIG_SCSI_MVSAS_DEBUG is not set
+# CONFIG_SCSI_MVSAS_TASKLET is not set
+CONFIG_SCSI_MVUMI=m
+CONFIG_SCSI_DPT_I2O=m
+CONFIG_SCSI_ADVANSYS=m
+CONFIG_SCSI_IN2000=m
+CONFIG_SCSI_ARCMSR=m
+CONFIG_MEGARAID_NEWGEN=y
+CONFIG_MEGARAID_MM=m
+CONFIG_MEGARAID_MAILBOX=m
+CONFIG_MEGARAID_LEGACY=m
+CONFIG_MEGARAID_SAS=m
+CONFIG_SCSI_MPT2SAS=m
+CONFIG_SCSI_MPT2SAS_MAX_SGE=128
+# CONFIG_SCSI_MPT2SAS_LOGGING is not set
+# CONFIG_SCSI_UFSHCD is not set
+CONFIG_SCSI_HPTIOP=m
+CONFIG_SCSI_BUSLOGIC=m
+# CONFIG_SCSI_FLASHPOINT is not set
+CONFIG_VMWARE_PVSCSI=m
+CONFIG_HYPERV_STORAGE=m
+CONFIG_LIBFC=m
+CONFIG_LIBFCOE=m
+CONFIG_FCOE=m
+CONFIG_FCOE_FNIC=m
+CONFIG_SCSI_DMX3191D=m
+CONFIG_SCSI_DTC3280=m
+CONFIG_SCSI_EATA=m
+CONFIG_SCSI_EATA_TAGGED_QUEUE=y
+CONFIG_SCSI_EATA_LINKED_COMMANDS=y
+CONFIG_SCSI_EATA_MAX_TAGS=16
+CONFIG_SCSI_FUTURE_DOMAIN=m
+CONFIG_SCSI_GDTH=m
+CONFIG_SCSI_ISCI=m
+# CONFIG_SCSI_GENERIC_NCR5380 is not set
+# CONFIG_SCSI_GENERIC_NCR5380_MMIO is not set
+CONFIG_SCSI_IPS=m
+CONFIG_SCSI_INITIO=m
+# CONFIG_SCSI_INIA100 is not set
+CONFIG_SCSI_PPA=m
+CONFIG_SCSI_IMM=m
+# CONFIG_SCSI_IZIP_EPP16 is not set
+# CONFIG_SCSI_IZIP_SLOW_CTR is not set
+CONFIG_SCSI_NCR53C406A=m
+CONFIG_SCSI_STEX=m
+CONFIG_SCSI_SYM53C8XX_2=m
+CONFIG_SCSI_SYM53C8XX_DMA_ADDRESSING_MODE=1
+CONFIG_SCSI_SYM53C8XX_DEFAULT_TAGS=16
+CONFIG_SCSI_SYM53C8XX_MAX_TAGS=64
+CONFIG_SCSI_SYM53C8XX_MMIO=y
+CONFIG_SCSI_IPR=m
+# CONFIG_SCSI_IPR_TRACE is not set
+# CONFIG_SCSI_IPR_DUMP is not set
+CONFIG_SCSI_PAS16=m
+CONFIG_SCSI_QLOGIC_FAS=m
+CONFIG_SCSI_QLOGIC_1280=m
+CONFIG_SCSI_QLA_FC=m
+CONFIG_SCSI_QLA_ISCSI=m
+CONFIG_SCSI_LPFC=m
+# CONFIG_SCSI_LPFC_DEBUG_FS is not set
+CONFIG_SCSI_SYM53C416=m
+CONFIG_SCSI_DC395x=m
+CONFIG_SCSI_DC390T=m
+CONFIG_SCSI_T128=m
+CONFIG_SCSI_U14_34F=m
+CONFIG_SCSI_U14_34F_TAGGED_QUEUE=y
+CONFIG_SCSI_U14_34F_LINKED_COMMANDS=y
+CONFIG_SCSI_U14_34F_MAX_TAGS=8
+CONFIG_SCSI_ULTRASTOR=m
+CONFIG_SCSI_NSP32=m
+CONFIG_SCSI_DEBUG=m
+CONFIG_SCSI_PMCRAID=m
+CONFIG_SCSI_PM8001=m
+CONFIG_SCSI_SRP=m
+CONFIG_SCSI_BFA_FC=m
+CONFIG_SCSI_VIRTIO=m
+CONFIG_SCSI_LOWLEVEL_PCMCIA=y
+CONFIG_PCMCIA_AHA152X=m
+CONFIG_PCMCIA_FDOMAIN=m
+CONFIG_PCMCIA_NINJA_SCSI=m
+CONFIG_PCMCIA_QLOGIC=m
+CONFIG_PCMCIA_SYM53C500=m
+CONFIG_SCSI_DH=m
+CONFIG_SCSI_DH_RDAC=m
+CONFIG_SCSI_DH_HP_SW=m
+CONFIG_SCSI_DH_EMC=m
+CONFIG_SCSI_DH_ALUA=m
+CONFIG_SCSI_OSD_INITIATOR=m
+CONFIG_SCSI_OSD_ULD=m
+CONFIG_SCSI_OSD_DPRINT_SENSE=1
+# CONFIG_SCSI_OSD_DEBUG is not set
+CONFIG_ATA=m
+# CONFIG_ATA_NONSTANDARD is not set
+CONFIG_ATA_VERBOSE_ERROR=y
+CONFIG_ATA_ACPI=y
+CONFIG_SATA_PMP=y
+
+#
+# Controllers with non-SFF native interface
+#
+CONFIG_SATA_AHCI=m
+# CONFIG_SATA_AHCI_PLATFORM is not set
+# CONFIG_SATA_INIC162X is not set
+CONFIG_SATA_ACARD_AHCI=m
+CONFIG_SATA_SIL24=m
+CONFIG_ATA_SFF=y
+
+#
+# SFF controllers with custom DMA interface
+#
+CONFIG_PDC_ADMA=m
+CONFIG_SATA_QSTOR=m
+CONFIG_SATA_SX4=m
+CONFIG_ATA_BMDMA=y
+
+#
+# SATA SFF controllers with BMDMA
+#
+CONFIG_ATA_PIIX=m
+CONFIG_SATA_MV=m
+CONFIG_SATA_NV=m
+CONFIG_SATA_PROMISE=m
+CONFIG_SATA_SIL=m
+CONFIG_SATA_SIS=m
+CONFIG_SATA_SVW=m
+CONFIG_SATA_ULI=m
+CONFIG_SATA_VIA=m
+CONFIG_SATA_VITESSE=m
+
+#
+# PATA SFF controllers with BMDMA
+#
+CONFIG_PATA_ALI=m
+CONFIG_PATA_AMD=m
+CONFIG_PATA_ARASAN_CF=m
+CONFIG_PATA_ARTOP=m
+CONFIG_PATA_ATIIXP=m
+CONFIG_PATA_ATP867X=m
+CONFIG_PATA_CMD64X=m
+CONFIG_PATA_CS5520=m
+CONFIG_PATA_CS5530=m
+CONFIG_PATA_CS5535=m
+CONFIG_PATA_CS5536=m
+# CONFIG_PATA_CYPRESS is not set
+CONFIG_PATA_EFAR=m
+CONFIG_PATA_HPT366=m
+CONFIG_PATA_HPT37X=m
+# CONFIG_PATA_HPT3X2N is not set
+# CONFIG_PATA_HPT3X3 is not set
+CONFIG_PATA_IT8213=m
+CONFIG_PATA_IT821X=m
+CONFIG_PATA_JMICRON=m
+CONFIG_PATA_MARVELL=m
+CONFIG_PATA_NETCELL=m
+CONFIG_PATA_NINJA32=m
+CONFIG_PATA_NS87415=m
+CONFIG_PATA_OLDPIIX=m
+# CONFIG_PATA_OPTIDMA is not set
+CONFIG_PATA_PDC2027X=m
+CONFIG_PATA_PDC_OLD=m
+# CONFIG_PATA_RADISYS is not set
+CONFIG_PATA_RDC=m
+CONFIG_PATA_SC1200=m
+CONFIG_PATA_SCH=m
+CONFIG_PATA_SERVERWORKS=m
+CONFIG_PATA_SIL680=m
+CONFIG_PATA_SIS=m
+CONFIG_PATA_TOSHIBA=m
+CONFIG_PATA_TRIFLEX=m
+CONFIG_PATA_VIA=m
+# CONFIG_PATA_WINBOND is not set
+
+#
+# PIO-only SFF controllers
+#
+# CONFIG_PATA_CMD640_PCI is not set
+CONFIG_PATA_ISAPNP=m
+CONFIG_PATA_MPIIX=m
+CONFIG_PATA_NS87410=m
+CONFIG_PATA_OPTI=m
+CONFIG_PATA_PCMCIA=m
+# CONFIG_PATA_QDI is not set
+CONFIG_PATA_RZ1000=m
+# CONFIG_PATA_WINBOND_VLB is not set
+
+#
+# Generic fallback / legacy drivers
+#
+# CONFIG_PATA_ACPI is not set
+CONFIG_ATA_GENERIC=m
+CONFIG_PATA_LEGACY=m
+CONFIG_MD=y
+CONFIG_BLK_DEV_MD=m
+CONFIG_MD_LINEAR=m
+CONFIG_MD_RAID0=m
+CONFIG_MD_RAID1=m
+CONFIG_MD_RAID10=m
+CONFIG_MD_RAID456=m
+# CONFIG_MULTICORE_RAID456 is not set
+CONFIG_MD_MULTIPATH=m
+CONFIG_MD_FAULTY=m
+CONFIG_BLK_DEV_DM_BUILTIN=y
+CONFIG_BLK_DEV_DM=m
+# CONFIG_DM_DEBUG is not set
+CONFIG_DM_BUFIO=m
+CONFIG_DM_PERSISTENT_DATA=m
+CONFIG_DM_CRYPT=m
+CONFIG_DM_SNAPSHOT=m
+CONFIG_DM_THIN_PROVISIONING=m
+# CONFIG_DM_DEBUG_BLOCK_STACK_TRACING is not set
+# CONFIG_DM_DEBUG_SPACE_MAPS is not set
+CONFIG_DM_MIRROR=m
+CONFIG_DM_RAID=m
+CONFIG_DM_LOG_USERSPACE=m
+CONFIG_DM_ZERO=m
+CONFIG_DM_MULTIPATH=m
+CONFIG_DM_MULTIPATH_QL=m
+CONFIG_DM_MULTIPATH_ST=m
+CONFIG_DM_DELAY=m
+CONFIG_DM_UEVENT=y
+CONFIG_DM_FLAKEY=m
+# CONFIG_DM_VERITY is not set
+CONFIG_TARGET_CORE=m
+CONFIG_TCM_IBLOCK=m
+CONFIG_TCM_FILEIO=m
+CONFIG_TCM_PSCSI=m
+CONFIG_LOOPBACK_TARGET=m
+CONFIG_TCM_FC=m
+CONFIG_ISCSI_TARGET=m
+CONFIG_FUSION=y
+CONFIG_FUSION_SPI=m
+CONFIG_FUSION_FC=m
+CONFIG_FUSION_SAS=m
+CONFIG_FUSION_MAX_SGE=128
+CONFIG_FUSION_CTL=m
+CONFIG_FUSION_LAN=m
+# CONFIG_FUSION_LOGGING is not set
+
+#
+# IEEE 1394 (FireWire) support
+#
+CONFIG_FIREWIRE=m
+CONFIG_FIREWIRE_OHCI=m
+CONFIG_FIREWIRE_SBP2=m
+CONFIG_FIREWIRE_NET=m
+CONFIG_FIREWIRE_NOSY=m
+CONFIG_I2O=m
+CONFIG_I2O_LCT_NOTIFY_ON_CHANGES=y
+CONFIG_I2O_EXT_ADAPTEC=y
+CONFIG_I2O_EXT_ADAPTEC_DMA64=y
+CONFIG_I2O_CONFIG=m
+CONFIG_I2O_CONFIG_OLD_IOCTL=y
+CONFIG_I2O_BUS=m
+CONFIG_I2O_BLOCK=m
+CONFIG_I2O_SCSI=m
+CONFIG_I2O_PROC=m
+# CONFIG_MACINTOSH_DRIVERS is not set
+CONFIG_NETDEVICES=y
+CONFIG_NET_CORE=y
+CONFIG_BONDING=m
+CONFIG_DUMMY=m
+CONFIG_EQUALIZER=m
+CONFIG_NET_FC=y
+CONFIG_MII=m
+CONFIG_IEEE802154_DRIVERS=m
+CONFIG_IEEE802154_FAKEHARD=m
+CONFIG_IFB=m
+# CONFIG_NET_TEAM is not set
+CONFIG_MACVLAN=m
+CONFIG_MACVTAP=m
+CONFIG_NETCONSOLE=m
+CONFIG_NETCONSOLE_DYNAMIC=y
+CONFIG_NETPOLL=y
+# CONFIG_NETPOLL_TRAP is not set
+CONFIG_NET_POLL_CONTROLLER=y
+CONFIG_TUN=m
+CONFIG_VETH=m
+CONFIG_VIRTIO_NET=m
+CONFIG_SUNGEM_PHY=m
+CONFIG_ARCNET=m
+CONFIG_ARCNET_1201=m
+CONFIG_ARCNET_1051=m
+CONFIG_ARCNET_RAW=m
+CONFIG_ARCNET_CAP=m
+CONFIG_ARCNET_COM90xx=m
+CONFIG_ARCNET_COM90xxIO=m
+CONFIG_ARCNET_RIM_I=m
+CONFIG_ARCNET_COM20020=m
+CONFIG_ARCNET_COM20020_ISA=m
+CONFIG_ARCNET_COM20020_PCI=m
+CONFIG_ARCNET_COM20020_CS=m
+CONFIG_ATM_DRIVERS=y
+CONFIG_ATM_DUMMY=m
+CONFIG_ATM_TCP=m
+CONFIG_ATM_LANAI=m
+CONFIG_ATM_ENI=m
+# CONFIG_ATM_ENI_DEBUG is not set
+# CONFIG_ATM_ENI_TUNE_BURST is not set
+CONFIG_ATM_FIRESTREAM=m
+CONFIG_ATM_ZATM=m
+# CONFIG_ATM_ZATM_DEBUG is not set
+CONFIG_ATM_NICSTAR=m
+# CONFIG_ATM_NICSTAR_USE_SUNI is not set
+# CONFIG_ATM_NICSTAR_USE_IDT77105 is not set
+CONFIG_ATM_IDT77252=m
+# CONFIG_ATM_IDT77252_DEBUG is not set
+# CONFIG_ATM_IDT77252_RCV_ALL is not set
+CONFIG_ATM_IDT77252_USE_SUNI=y
+CONFIG_ATM_AMBASSADOR=m
+# CONFIG_ATM_AMBASSADOR_DEBUG is not set
+CONFIG_ATM_HORIZON=m
+# CONFIG_ATM_HORIZON_DEBUG is not set
+CONFIG_ATM_IA=m
+# CONFIG_ATM_IA_DEBUG is not set
+CONFIG_ATM_FORE200E=m
+# CONFIG_ATM_FORE200E_USE_TASKLET is not set
+CONFIG_ATM_FORE200E_TX_RETRY=16
+CONFIG_ATM_FORE200E_DEBUG=0
+CONFIG_ATM_HE=m
+CONFIG_ATM_HE_USE_SUNI=y
+CONFIG_ATM_SOLOS=m
+
+#
+# CAIF transport drivers
+#
+CONFIG_ETHERNET=y
+CONFIG_MDIO=m
+CONFIG_NET_VENDOR_3COM=y
+CONFIG_EL1=m
+CONFIG_EL3=m
+CONFIG_3C515=m
+CONFIG_PCMCIA_3C574=m
+CONFIG_PCMCIA_3C589=m
+CONFIG_VORTEX=m
+CONFIG_TYPHOON=m
+CONFIG_NET_VENDOR_ADAPTEC=y
+CONFIG_ADAPTEC_STARFIRE=m
+CONFIG_NET_VENDOR_ALTEON=y
+CONFIG_ACENIC=m
+# CONFIG_ACENIC_OMIT_TIGON_I is not set
+CONFIG_NET_VENDOR_AMD=y
+CONFIG_AMD8111_ETH=m
+CONFIG_LANCE=m
+CONFIG_PCNET32=m
+CONFIG_DEPCA=m
+CONFIG_PCMCIA_NMCLAN=m
+CONFIG_NI65=m
+CONFIG_NET_VENDOR_ATHEROS=y
+CONFIG_ATL2=m
+CONFIG_ATL1=m
+CONFIG_ATL1E=m
+CONFIG_ATL1C=m
+CONFIG_NET_VENDOR_BROADCOM=y
+CONFIG_B44=m
+CONFIG_B44_PCI_AUTOSELECT=y
+CONFIG_B44_PCICORE_AUTOSELECT=y
+CONFIG_B44_PCI=y
+CONFIG_BNX2=m
+CONFIG_CNIC=m
+CONFIG_TIGON3=m
+CONFIG_BNX2X=m
+CONFIG_NET_VENDOR_BROCADE=y
+CONFIG_BNA=m
+# CONFIG_NET_CALXEDA_XGMAC is not set
+CONFIG_NET_VENDOR_CHELSIO=y
+CONFIG_CHELSIO_T1=m
+CONFIG_CHELSIO_T1_1G=y
+CONFIG_CHELSIO_T3=m
+CONFIG_CHELSIO_T4=m
+CONFIG_CHELSIO_T4VF=m
+CONFIG_NET_VENDOR_CIRRUS=y
+CONFIG_CS89x0=m
+# CONFIG_CS89x0_PLATFORM is not set
+CONFIG_NET_VENDOR_CISCO=y
+CONFIG_ENIC=m
+CONFIG_DNET=m
+CONFIG_NET_VENDOR_DEC=y
+CONFIG_EWRK3=m
+CONFIG_NET_TULIP=y
+CONFIG_DE2104X=m
+CONFIG_DE2104X_DSL=0
+CONFIG_TULIP=m
+# CONFIG_TULIP_MWI is not set
+# CONFIG_TULIP_MMIO is not set
+CONFIG_TULIP_NAPI=y
+CONFIG_TULIP_NAPI_HW_MITIGATION=y
+# CONFIG_DE4X5 is not set
+CONFIG_WINBOND_840=m
+CONFIG_DM9102=m
+CONFIG_ULI526X=m
+CONFIG_PCMCIA_XIRCOM=m
+CONFIG_NET_VENDOR_DLINK=y
+CONFIG_DE600=m
+CONFIG_DE620=m
+CONFIG_DL2K=m
+CONFIG_SUNDANCE=m
+# CONFIG_SUNDANCE_MMIO is not set
+CONFIG_NET_VENDOR_EMULEX=y
+CONFIG_BE2NET=m
+CONFIG_NET_VENDOR_EXAR=y
+CONFIG_S2IO=m
+CONFIG_VXGE=m
+# CONFIG_VXGE_DEBUG_TRACE_ALL is not set
+CONFIG_NET_VENDOR_FUJITSU=y
+CONFIG_AT1700=m
+CONFIG_PCMCIA_FMVJ18X=m
+CONFIG_ETH16I=m
+CONFIG_NET_VENDOR_HP=y
+CONFIG_HP100=m
+CONFIG_NET_VENDOR_INTEL=y
+CONFIG_E100=m
+CONFIG_E1000=m
+CONFIG_E1000E=m
+CONFIG_IGB=m
+CONFIG_IGB_DCA=y
+CONFIG_IGBVF=m
+CONFIG_IXGB=m
+CONFIG_IXGBE=m
+CONFIG_IXGBE_DCA=y
+CONFIG_IXGBE_DCB=y
+CONFIG_IXGBEVF=m
+CONFIG_NET_VENDOR_I825XX=y
+CONFIG_ELPLUS=m
+CONFIG_EL16=m
+CONFIG_APRICOT=m
+CONFIG_EEXPRESS=m
+CONFIG_EEXPRESS_PRO=m
+CONFIG_LP486E=m
+CONFIG_NI52=m
+CONFIG_ZNET=m
+CONFIG_IP1000=m
+CONFIG_JME=m
+CONFIG_NET_VENDOR_MARVELL=y
+CONFIG_SKGE=m
+# CONFIG_SKGE_DEBUG is not set
+CONFIG_SKGE_GENESIS=y
+CONFIG_SKY2=m
+# CONFIG_SKY2_DEBUG is not set
+CONFIG_NET_VENDOR_MELLANOX=y
+CONFIG_MLX4_EN=m
+CONFIG_MLX4_CORE=m
+CONFIG_MLX4_DEBUG=y
+CONFIG_NET_VENDOR_MICREL=y
+CONFIG_KS8842=m
+CONFIG_KS8851=m
+CONFIG_KS8851_MLL=m
+CONFIG_KSZ884X_PCI=m
+CONFIG_NET_VENDOR_MICROCHIP=y
+CONFIG_ENC28J60=m
+# CONFIG_ENC28J60_WRITEVERIFY is not set
+CONFIG_NET_VENDOR_MYRI=y
+CONFIG_MYRI10GE=m
+CONFIG_MYRI10GE_DCA=y
+CONFIG_FEALNX=m
+CONFIG_NET_VENDOR_NATSEMI=y
+CONFIG_NATSEMI=m
+CONFIG_NS83820=m
+CONFIG_NET_VENDOR_8390=y
+CONFIG_EL2=m
+CONFIG_AC3200=m
+CONFIG_PCMCIA_AXNET=m
+CONFIG_E2100=m
+CONFIG_HPLAN_PLUS=m
+CONFIG_HPLAN=m
+CONFIG_NE2000=m
+CONFIG_NE2K_PCI=m
+CONFIG_PCMCIA_PCNET=m
+CONFIG_ULTRA=m
+CONFIG_WD80x3=m
+CONFIG_NET_VENDOR_NVIDIA=y
+CONFIG_FORCEDETH=m
+CONFIG_NET_VENDOR_OKI=y
+CONFIG_PCH_GBE=m
+CONFIG_ETHOC=m
+CONFIG_NET_PACKET_ENGINE=y
+CONFIG_HAMACHI=m
+CONFIG_YELLOWFIN=m
+CONFIG_NET_VENDOR_QLOGIC=y
+CONFIG_QLA3XXX=m
+CONFIG_QLCNIC=m
+CONFIG_QLGE=m
+CONFIG_NETXEN_NIC=m
+CONFIG_NET_VENDOR_RACAL=y
+CONFIG_NET_VENDOR_REALTEK=y
+CONFIG_ATP=m
+CONFIG_8139CP=m
+CONFIG_8139TOO=m
+CONFIG_8139TOO_PIO=y
+CONFIG_8139TOO_TUNE_TWISTER=y
+CONFIG_8139TOO_8129=y
+# CONFIG_8139_OLD_RX_RESET is not set
+CONFIG_R8169=m
+CONFIG_NET_VENDOR_RDC=y
+CONFIG_R6040=m
+CONFIG_NET_VENDOR_SEEQ=y
+CONFIG_SEEQ8005=m
+CONFIG_NET_VENDOR_SILAN=y
+CONFIG_SC92031=m
+CONFIG_NET_VENDOR_SIS=y
+CONFIG_SIS900=m
+CONFIG_SIS190=m
+CONFIG_SFC=m
+CONFIG_SFC_MTD=y
+# CONFIG_SFC_MCDI_MON is not set
+# CONFIG_SFC_SRIOV is not set
+CONFIG_NET_VENDOR_SMSC=y
+CONFIG_SMC9194=m
+CONFIG_PCMCIA_SMC91C92=m
+CONFIG_EPIC100=m
+CONFIG_SMSC9420=m
+CONFIG_NET_VENDOR_STMICRO=y
+# CONFIG_STMMAC_ETH is not set
+CONFIG_NET_VENDOR_SUN=y
+CONFIG_HAPPYMEAL=m
+CONFIG_SUNGEM=m
+CONFIG_CASSINI=m
+CONFIG_NIU=m
+CONFIG_NET_VENDOR_TEHUTI=y
+CONFIG_TEHUTI=m
+CONFIG_NET_VENDOR_TI=y
+CONFIG_TLAN=m
+CONFIG_NET_VENDOR_VIA=y
+CONFIG_VIA_RHINE=m
+# CONFIG_VIA_RHINE_MMIO is not set
+CONFIG_VIA_VELOCITY=m
+CONFIG_NET_VENDOR_XIRCOM=y
+CONFIG_PCMCIA_XIRC2PS=m
+CONFIG_FDDI=y
+CONFIG_DEFXX=m
+# CONFIG_DEFXX_MMIO is not set
+CONFIG_SKFP=m
+CONFIG_HIPPI=y
+CONFIG_ROADRUNNER=m
+# CONFIG_ROADRUNNER_LARGE_RINGS is not set
+CONFIG_NET_SB1000=m
+CONFIG_PHYLIB=m
+
+#
+# MII PHY device drivers
+#
+# CONFIG_AMD_PHY is not set
+CONFIG_MARVELL_PHY=m
+CONFIG_DAVICOM_PHY=m
+CONFIG_QSEMI_PHY=m
+CONFIG_LXT_PHY=m
+CONFIG_CICADA_PHY=m
+CONFIG_VITESSE_PHY=m
+CONFIG_SMSC_PHY=m
+CONFIG_BROADCOM_PHY=m
+CONFIG_ICPLUS_PHY=m
+CONFIG_REALTEK_PHY=m
+CONFIG_NATIONAL_PHY=m
+CONFIG_STE10XP=m
+CONFIG_LSI_ET1011C_PHY=m
+CONFIG_MICREL_PHY=m
+CONFIG_MDIO_BITBANG=m
+# CONFIG_MDIO_GPIO is not set
+# CONFIG_MICREL_KS8995MA is not set
+CONFIG_PLIP=m
+CONFIG_PPP=m
+CONFIG_PPP_BSDCOMP=m
+CONFIG_PPP_DEFLATE=m
+CONFIG_PPP_FILTER=y
+CONFIG_PPP_MPPE=m
+CONFIG_PPP_MULTILINK=y
+CONFIG_PPPOATM=m
+CONFIG_PPPOE=m
+CONFIG_PPTP=m
+CONFIG_PPPOL2TP=m
+CONFIG_PPP_ASYNC=m
+CONFIG_PPP_SYNC_TTY=m
+CONFIG_SLIP=m
+CONFIG_SLHC=m
+CONFIG_SLIP_COMPRESSED=y
+CONFIG_SLIP_SMART=y
+CONFIG_SLIP_MODE_SLIP6=y
+CONFIG_TR=y
+CONFIG_WANT_LLC=y
+CONFIG_PCMCIA_IBMTR=m
+CONFIG_IBMTR=m
+CONFIG_IBMOL=m
+CONFIG_IBMLS=m
+CONFIG_3C359=m
+CONFIG_TMS380TR=m
+CONFIG_TMSPCI=m
+CONFIG_SKISA=m
+CONFIG_PROTEON=m
+CONFIG_ABYSS=m
+CONFIG_SMCTR=m
+
+#
+# USB Network Adapters
+#
+CONFIG_USB_CATC=m
+CONFIG_USB_KAWETH=m
+CONFIG_USB_PEGASUS=m
+CONFIG_USB_RTL8150=m
+CONFIG_USB_USBNET=m
+CONFIG_USB_NET_AX8817X=m
+CONFIG_USB_NET_CDCETHER=m
+CONFIG_USB_NET_CDC_EEM=m
+CONFIG_USB_NET_CDC_NCM=m
+CONFIG_USB_NET_DM9601=m
+CONFIG_USB_NET_SMSC75XX=m
+CONFIG_USB_NET_SMSC95XX=m
+CONFIG_USB_NET_GL620A=m
+CONFIG_USB_NET_NET1080=m
+CONFIG_USB_NET_PLUSB=m
+CONFIG_USB_NET_MCS7830=m
+CONFIG_USB_NET_RNDIS_HOST=m
+CONFIG_USB_NET_CDC_SUBSET=m
+CONFIG_USB_ALI_M5632=y
+CONFIG_USB_AN2720=y
+CONFIG_USB_BELKIN=y
+CONFIG_USB_ARMLINUX=y
+CONFIG_USB_EPSON2888=y
+CONFIG_USB_KC2190=y
+CONFIG_USB_NET_ZAURUS=m
+CONFIG_USB_NET_CX82310_ETH=m
+CONFIG_USB_NET_KALMIA=m
+# CONFIG_USB_NET_QMI_WWAN is not set
+CONFIG_USB_HSO=m
+CONFIG_USB_NET_INT51X1=m
+CONFIG_USB_CDC_PHONET=m
+CONFIG_USB_IPHETH=m
+CONFIG_USB_SIERRA_NET=m
+CONFIG_USB_VL600=m
+CONFIG_WLAN=y
+CONFIG_PCMCIA_RAYCS=m
+CONFIG_LIBERTAS_THINFIRM=m
+# CONFIG_LIBERTAS_THINFIRM_DEBUG is not set
+CONFIG_LIBERTAS_THINFIRM_USB=m
+CONFIG_AIRO=m
+CONFIG_ATMEL=m
+CONFIG_PCI_ATMEL=m
+CONFIG_PCMCIA_ATMEL=m
+CONFIG_AT76C50X_USB=m
+CONFIG_AIRO_CS=m
+CONFIG_PCMCIA_WL3501=m
+# CONFIG_PRISM54 is not set
+CONFIG_USB_ZD1201=m
+CONFIG_USB_NET_RNDIS_WLAN=m
+CONFIG_RTL8180=m
+CONFIG_RTL8187=m
+CONFIG_RTL8187_LEDS=y
+CONFIG_ADM8211=m
+CONFIG_MAC80211_HWSIM=m
+CONFIG_MWL8K=m
+CONFIG_ATH_COMMON=m
+# CONFIG_ATH_DEBUG is not set
+CONFIG_ATH5K=m
+# CONFIG_ATH5K_DEBUG is not set
+# CONFIG_ATH5K_TRACER is not set
+CONFIG_ATH5K_PCI=y
+CONFIG_ATH9K_HW=m
+CONFIG_ATH9K_COMMON=m
+# CONFIG_ATH9K_BTCOEX_SUPPORT is not set
+CONFIG_ATH9K=m
+CONFIG_ATH9K_PCI=y
+# CONFIG_ATH9K_AHB is not set
+# CONFIG_ATH9K_DEBUGFS is not set
+# CONFIG_ATH9K_LEGACY_RATE_CONTROL is not set
+CONFIG_ATH9K_HTC=m
+# CONFIG_ATH9K_HTC_DEBUGFS is not set
+CONFIG_CARL9170=m
+CONFIG_CARL9170_LEDS=y
+CONFIG_CARL9170_WPC=y
+# CONFIG_CARL9170_HWRNG is not set
+# CONFIG_ATH6KL is not set
+CONFIG_B43=m
+CONFIG_B43_BCMA=y
+# CONFIG_B43_BCMA_EXTRA is not set
+CONFIG_B43_SSB=y
+CONFIG_B43_PCI_AUTOSELECT=y
+CONFIG_B43_PCICORE_AUTOSELECT=y
+CONFIG_B43_PCMCIA=y
+CONFIG_B43_SDIO=y
+CONFIG_B43_BCMA_PIO=y
+CONFIG_B43_PIO=y
+CONFIG_B43_PHY_N=y
+CONFIG_B43_PHY_LP=y
+CONFIG_B43_PHY_HT=y
+CONFIG_B43_LEDS=y
+CONFIG_B43_HWRNG=y
+# CONFIG_B43_DEBUG is not set
+CONFIG_B43LEGACY=m
+CONFIG_B43LEGACY_PCI_AUTOSELECT=y
+CONFIG_B43LEGACY_PCICORE_AUTOSELECT=y
+CONFIG_B43LEGACY_LEDS=y
+CONFIG_B43LEGACY_HWRNG=y
+CONFIG_B43LEGACY_DEBUG=y
+CONFIG_B43LEGACY_DMA=y
+CONFIG_B43LEGACY_PIO=y
+CONFIG_B43LEGACY_DMA_AND_PIO_MODE=y
+# CONFIG_B43LEGACY_DMA_MODE is not set
+# CONFIG_B43LEGACY_PIO_MODE is not set
+CONFIG_BRCMUTIL=m
+CONFIG_BRCMSMAC=m
+# CONFIG_BRCMFMAC is not set
+# CONFIG_BRCMDBG is not set
+CONFIG_HOSTAP=m
+CONFIG_HOSTAP_FIRMWARE=y
+# CONFIG_HOSTAP_FIRMWARE_NVRAM is not set
+CONFIG_HOSTAP_PLX=m
+CONFIG_HOSTAP_PCI=m
+CONFIG_HOSTAP_CS=m
+CONFIG_IPW2100=m
+CONFIG_IPW2100_MONITOR=y
+# CONFIG_IPW2100_DEBUG is not set
+CONFIG_IPW2200=m
+CONFIG_IPW2200_MONITOR=y
+CONFIG_IPW2200_RADIOTAP=y
+CONFIG_IPW2200_PROMISCUOUS=y
+CONFIG_IPW2200_QOS=y
+# CONFIG_IPW2200_DEBUG is not set
+CONFIG_LIBIPW=m
+# CONFIG_LIBIPW_DEBUG is not set
+CONFIG_IWLWIFI=m
+
+#
+# Debugging Options
+#
+# CONFIG_IWLWIFI_DEBUG is not set
+# CONFIG_IWLWIFI_DEVICE_TRACING is not set
+# CONFIG_IWLWIFI_P2P is not set
+# CONFIG_IWLWIFI_EXPERIMENTAL_MFP is not set
+CONFIG_IWLEGACY=m
+CONFIG_IWL4965=m
+CONFIG_IWL3945=m
+
+#
+# iwl3945 / iwl4965 Debugging Options
+#
+# CONFIG_IWLEGACY_DEBUG is not set
+CONFIG_IWM=m
+# CONFIG_IWM_DEBUG is not set
+# CONFIG_IWM_TRACING is not set
+CONFIG_LIBERTAS=m
+CONFIG_LIBERTAS_USB=m
+CONFIG_LIBERTAS_CS=m
+CONFIG_LIBERTAS_SDIO=m
+CONFIG_LIBERTAS_SPI=m
+# CONFIG_LIBERTAS_DEBUG is not set
+CONFIG_LIBERTAS_MESH=y
+CONFIG_HERMES=m
+# CONFIG_HERMES_PRISM is not set
+CONFIG_HERMES_CACHE_FW_ON_INIT=y
+CONFIG_PLX_HERMES=m
+CONFIG_TMD_HERMES=m
+CONFIG_NORTEL_HERMES=m
+CONFIG_PCMCIA_HERMES=m
+CONFIG_PCMCIA_SPECTRUM=m
+CONFIG_ORINOCO_USB=m
+CONFIG_P54_COMMON=m
+CONFIG_P54_USB=m
+CONFIG_P54_PCI=m
+CONFIG_P54_SPI=m
+# CONFIG_P54_SPI_DEFAULT_EEPROM is not set
+CONFIG_P54_LEDS=y
+CONFIG_RT2X00=m
+CONFIG_RT2400PCI=m
+CONFIG_RT2500PCI=m
+CONFIG_RT61PCI=m
+CONFIG_RT2800PCI=m
+CONFIG_RT2800PCI_RT33XX=y
+CONFIG_RT2800PCI_RT35XX=y
+CONFIG_RT2800PCI_RT53XX=y
+CONFIG_RT2500USB=m
+CONFIG_RT73USB=m
+CONFIG_RT2800USB=m
+CONFIG_RT2800USB_RT33XX=y
+CONFIG_RT2800USB_RT35XX=y
+CONFIG_RT2800USB_RT53XX=y
+# CONFIG_RT2800USB_UNKNOWN is not set
+CONFIG_RT2800_LIB=m
+CONFIG_RT2X00_LIB_PCI=m
+CONFIG_RT2X00_LIB_USB=m
+CONFIG_RT2X00_LIB=m
+CONFIG_RT2X00_LIB_FIRMWARE=y
+CONFIG_RT2X00_LIB_CRYPTO=y
+CONFIG_RT2X00_LIB_LEDS=y
+# CONFIG_RT2X00_DEBUG is not set
+CONFIG_RTL8192CE=m
+CONFIG_RTL8192SE=m
+CONFIG_RTL8192DE=m
+CONFIG_RTL8192CU=m
+CONFIG_RTLWIFI=m
+# CONFIG_RTLWIFI_DEBUG is not set
+CONFIG_RTL8192C_COMMON=m
+CONFIG_WL1251=m
+CONFIG_WL1251_SPI=m
+CONFIG_WL1251_SDIO=m
+CONFIG_WL12XX_MENU=m
+CONFIG_WL12XX=m
+CONFIG_WL12XX_SPI=m
+CONFIG_WL12XX_SDIO=m
+CONFIG_WL12XX_PLATFORM_DATA=y
+CONFIG_ZD1211RW=m
+# CONFIG_ZD1211RW_DEBUG is not set
+CONFIG_MWIFIEX=m
+CONFIG_MWIFIEX_SDIO=m
+CONFIG_MWIFIEX_PCIE=m
+
+#
+# WiMAX Wireless Broadband devices
+#
+CONFIG_WIMAX_I2400M=m
+CONFIG_WIMAX_I2400M_USB=m
+# CONFIG_WIMAX_I2400M_SDIO is not set
+CONFIG_WIMAX_I2400M_DEBUG_LEVEL=8
+CONFIG_WAN=y
+CONFIG_HOSTESS_SV11=m
+CONFIG_COSA=m
+CONFIG_LANMEDIA=m
+CONFIG_SEALEVEL_4021=m
+CONFIG_HDLC=m
+CONFIG_HDLC_RAW=m
+CONFIG_HDLC_RAW_ETH=m
+CONFIG_HDLC_CISCO=m
+CONFIG_HDLC_FR=m
+CONFIG_HDLC_PPP=m
+# CONFIG_HDLC_X25 is not set
+CONFIG_PCI200SYN=m
+CONFIG_WANXL=m
+# CONFIG_PC300TOO is not set
+CONFIG_N2=m
+CONFIG_C101=m
+CONFIG_FARSYNC=m
+CONFIG_DSCC4=m
+CONFIG_DSCC4_PCISYNC=y
+CONFIG_DSCC4_PCI_RST=y
+CONFIG_DLCI=m
+CONFIG_DLCI_MAX=8
+CONFIG_SDLA=m
+CONFIG_SBNI=m
+# CONFIG_SBNI_MULTILINE is not set
+CONFIG_XEN_NETDEV_FRONTEND=m
+CONFIG_XEN_NETDEV_BACKEND=m
+CONFIG_VMXNET3=m
+CONFIG_HYPERV_NET=m
+CONFIG_ISDN=y
+# CONFIG_ISDN_I4L is not set
+CONFIG_ISDN_CAPI=m
+CONFIG_ISDN_DRV_AVMB1_VERBOSE_REASON=y
+CONFIG_CAPI_TRACE=y
+CONFIG_ISDN_CAPI_MIDDLEWARE=y
+CONFIG_ISDN_CAPI_CAPI20=m
+
+#
+# CAPI hardware drivers
+#
+CONFIG_CAPI_AVM=y
+CONFIG_ISDN_DRV_AVMB1_B1ISA=m
+CONFIG_ISDN_DRV_AVMB1_B1PCI=m
+CONFIG_ISDN_DRV_AVMB1_B1PCIV4=y
+CONFIG_ISDN_DRV_AVMB1_T1ISA=m
+CONFIG_ISDN_DRV_AVMB1_B1PCMCIA=m
+CONFIG_ISDN_DRV_AVMB1_AVM_CS=m
+CONFIG_ISDN_DRV_AVMB1_T1PCI=m
+CONFIG_ISDN_DRV_AVMB1_C4=m
+CONFIG_CAPI_EICON=y
+CONFIG_ISDN_DIVAS=m
+CONFIG_ISDN_DIVAS_BRIPCI=y
+CONFIG_ISDN_DIVAS_PRIPCI=y
+CONFIG_ISDN_DIVAS_DIVACAPI=m
+CONFIG_ISDN_DIVAS_USERIDI=m
+CONFIG_ISDN_DIVAS_MAINT=m
+CONFIG_ISDN_DRV_GIGASET=m
+CONFIG_GIGASET_CAPI=y
+# CONFIG_GIGASET_DUMMYLL is not set
+CONFIG_GIGASET_BASE=m
+CONFIG_GIGASET_M105=m
+CONFIG_GIGASET_M101=m
+# CONFIG_GIGASET_DEBUG is not set
+CONFIG_HYSDN=m
+CONFIG_HYSDN_CAPI=y
+CONFIG_MISDN=m
+CONFIG_MISDN_DSP=m
+CONFIG_MISDN_L1OIP=m
+
+#
+# mISDN hardware drivers
+#
+CONFIG_MISDN_HFCPCI=m
+CONFIG_MISDN_HFCMULTI=m
+CONFIG_MISDN_HFCUSB=m
+CONFIG_MISDN_AVMFRITZ=m
+CONFIG_MISDN_SPEEDFAX=m
+CONFIG_MISDN_INFINEON=m
+CONFIG_MISDN_W6692=m
+# CONFIG_MISDN_NETJET is not set
+CONFIG_MISDN_IPAC=m
+CONFIG_MISDN_ISAR=m
+
+#
+# Input device support
+#
+CONFIG_INPUT=y
+CONFIG_INPUT_FF_MEMLESS=m
+CONFIG_INPUT_POLLDEV=m
+CONFIG_INPUT_SPARSEKMAP=m
+
+#
+# Userland interfaces
+#
+CONFIG_INPUT_MOUSEDEV=y
+CONFIG_INPUT_MOUSEDEV_PSAUX=y
+CONFIG_INPUT_MOUSEDEV_SCREEN_X=1024
+CONFIG_INPUT_MOUSEDEV_SCREEN_Y=768
+CONFIG_INPUT_JOYDEV=m
+CONFIG_INPUT_EVDEV=m
+# CONFIG_INPUT_EVBUG is not set
+
+#
+# Input Device Drivers
+#
+CONFIG_INPUT_KEYBOARD=y
+CONFIG_KEYBOARD_ADP5588=m
+# CONFIG_KEYBOARD_ADP5589 is not set
+CONFIG_KEYBOARD_ATKBD=y
+# CONFIG_KEYBOARD_QT1070 is not set
+CONFIG_KEYBOARD_QT2160=m
+CONFIG_KEYBOARD_LKKBD=m
+# CONFIG_KEYBOARD_GPIO is not set
+# CONFIG_KEYBOARD_GPIO_POLLED is not set
+# CONFIG_KEYBOARD_TCA6416 is not set
+# CONFIG_KEYBOARD_TCA8418 is not set
+# CONFIG_KEYBOARD_MATRIX is not set
+CONFIG_KEYBOARD_LM8323=m
+CONFIG_KEYBOARD_MAX7359=m
+# CONFIG_KEYBOARD_MCS is not set
+# CONFIG_KEYBOARD_MPR121 is not set
+CONFIG_KEYBOARD_NEWTON=m
+CONFIG_KEYBOARD_OPENCORES=m
+CONFIG_KEYBOARD_STOWAWAY=m
+CONFIG_KEYBOARD_SUNKBD=m
+# CONFIG_KEYBOARD_OMAP4 is not set
+CONFIG_KEYBOARD_XTKBD=m
+CONFIG_INPUT_MOUSE=y
+CONFIG_MOUSE_PS2=m
+CONFIG_MOUSE_PS2_ALPS=y
+CONFIG_MOUSE_PS2_LOGIPS2PP=y
+CONFIG_MOUSE_PS2_SYNAPTICS=y
+CONFIG_MOUSE_PS2_LIFEBOOK=y
+CONFIG_MOUSE_PS2_TRACKPOINT=y
+CONFIG_MOUSE_PS2_ELANTECH=y
+CONFIG_MOUSE_PS2_SENTELIC=y
+# CONFIG_MOUSE_PS2_TOUCHKIT is not set
+CONFIG_MOUSE_SERIAL=m
+CONFIG_MOUSE_APPLETOUCH=m
+CONFIG_MOUSE_BCM5974=m
+CONFIG_MOUSE_INPORT=m
+# CONFIG_MOUSE_ATIXL is not set
+CONFIG_MOUSE_LOGIBM=m
+CONFIG_MOUSE_PC110PAD=m
+CONFIG_MOUSE_VSXXXAA=m
+# CONFIG_MOUSE_GPIO is not set
+CONFIG_MOUSE_SYNAPTICS_I2C=m
+CONFIG_MOUSE_SYNAPTICS_USB=m
+CONFIG_INPUT_JOYSTICK=y
+CONFIG_JOYSTICK_ANALOG=m
+CONFIG_JOYSTICK_A3D=m
+CONFIG_JOYSTICK_ADI=m
+CONFIG_JOYSTICK_COBRA=m
+CONFIG_JOYSTICK_GF2K=m
+CONFIG_JOYSTICK_GRIP=m
+CONFIG_JOYSTICK_GRIP_MP=m
+CONFIG_JOYSTICK_GUILLEMOT=m
+CONFIG_JOYSTICK_INTERACT=m
+CONFIG_JOYSTICK_SIDEWINDER=m
+CONFIG_JOYSTICK_TMDC=m
+CONFIG_JOYSTICK_IFORCE=m
+CONFIG_JOYSTICK_IFORCE_USB=y
+CONFIG_JOYSTICK_IFORCE_232=y
+CONFIG_JOYSTICK_WARRIOR=m
+CONFIG_JOYSTICK_MAGELLAN=m
+CONFIG_JOYSTICK_SPACEORB=m
+CONFIG_JOYSTICK_SPACEBALL=m
+CONFIG_JOYSTICK_STINGER=m
+CONFIG_JOYSTICK_TWIDJOY=m
+CONFIG_JOYSTICK_ZHENHUA=m
+CONFIG_JOYSTICK_DB9=m
+CONFIG_JOYSTICK_GAMECON=m
+CONFIG_JOYSTICK_TURBOGRAFX=m
+# CONFIG_JOYSTICK_AS5011 is not set
+CONFIG_JOYSTICK_JOYDUMP=m
+CONFIG_JOYSTICK_XPAD=m
+CONFIG_JOYSTICK_XPAD_FF=y
+CONFIG_JOYSTICK_XPAD_LEDS=y
+CONFIG_JOYSTICK_WALKERA0701=m
+CONFIG_INPUT_TABLET=y
+CONFIG_TABLET_USB_ACECAD=m
+CONFIG_TABLET_USB_AIPTEK=m
+CONFIG_TABLET_USB_GTCO=m
+CONFIG_TABLET_USB_HANWANG=m
+CONFIG_TABLET_USB_KBTAB=m
+CONFIG_TABLET_USB_WACOM=m
+CONFIG_INPUT_TOUCHSCREEN=y
+CONFIG_TOUCHSCREEN_ADS7846=m
+CONFIG_TOUCHSCREEN_AD7877=m
+CONFIG_TOUCHSCREEN_AD7879=m
+CONFIG_TOUCHSCREEN_AD7879_I2C=m
+# CONFIG_TOUCHSCREEN_AD7879_SPI is not set
+CONFIG_TOUCHSCREEN_ATMEL_MXT=m
+# CONFIG_TOUCHSCREEN_AUO_PIXCIR is not set
+# CONFIG_TOUCHSCREEN_BU21013 is not set
+# CONFIG_TOUCHSCREEN_CY8CTMG110 is not set
+# CONFIG_TOUCHSCREEN_CYTTSP_CORE is not set
+CONFIG_TOUCHSCREEN_DYNAPRO=m
+CONFIG_TOUCHSCREEN_HAMPSHIRE=m
+CONFIG_TOUCHSCREEN_EETI=m
+# CONFIG_TOUCHSCREEN_EGALAX is not set
+CONFIG_TOUCHSCREEN_FUJITSU=m
+# CONFIG_TOUCHSCREEN_ILI210X is not set
+CONFIG_TOUCHSCREEN_GUNZE=m
+CONFIG_TOUCHSCREEN_ELO=m
+CONFIG_TOUCHSCREEN_WACOM_W8001=m
+# CONFIG_TOUCHSCREEN_MAX11801 is not set
+CONFIG_TOUCHSCREEN_MCS5000=m
+CONFIG_TOUCHSCREEN_MTOUCH=m
+CONFIG_TOUCHSCREEN_INEXIO=m
+CONFIG_TOUCHSCREEN_MK712=m
+CONFIG_TOUCHSCREEN_HTCPEN=m
+CONFIG_TOUCHSCREEN_PENMOUNT=m
+CONFIG_TOUCHSCREEN_TOUCHRIGHT=m
+CONFIG_TOUCHSCREEN_TOUCHWIN=m
+# CONFIG_TOUCHSCREEN_PIXCIR is not set
+CONFIG_TOUCHSCREEN_WM97XX=m
+CONFIG_TOUCHSCREEN_WM9705=y
+CONFIG_TOUCHSCREEN_WM9712=y
+CONFIG_TOUCHSCREEN_WM9713=y
+CONFIG_TOUCHSCREEN_USB_COMPOSITE=m
+CONFIG_TOUCHSCREEN_USB_EGALAX=y
+CONFIG_TOUCHSCREEN_USB_PANJIT=y
+CONFIG_TOUCHSCREEN_USB_3M=y
+CONFIG_TOUCHSCREEN_USB_ITM=y
+CONFIG_TOUCHSCREEN_USB_ETURBO=y
+CONFIG_TOUCHSCREEN_USB_GUNZE=y
+CONFIG_TOUCHSCREEN_USB_DMC_TSC10=y
+CONFIG_TOUCHSCREEN_USB_IRTOUCH=y
+CONFIG_TOUCHSCREEN_USB_IDEALTEK=y
+CONFIG_TOUCHSCREEN_USB_GENERAL_TOUCH=y
+CONFIG_TOUCHSCREEN_USB_GOTOP=y
+CONFIG_TOUCHSCREEN_USB_JASTEC=y
+CONFIG_TOUCHSCREEN_USB_ELO=y
+CONFIG_TOUCHSCREEN_USB_E2I=y
+CONFIG_TOUCHSCREEN_USB_ZYTRONIC=y
+CONFIG_TOUCHSCREEN_USB_ETT_TC45USB=y
+CONFIG_TOUCHSCREEN_USB_NEXIO=y
+CONFIG_TOUCHSCREEN_USB_EASYTOUCH=y
+CONFIG_TOUCHSCREEN_TOUCHIT213=m
+# CONFIG_TOUCHSCREEN_TSC_SERIO is not set
+# CONFIG_TOUCHSCREEN_TSC2005 is not set
+CONFIG_TOUCHSCREEN_TSC2007=m
+# CONFIG_TOUCHSCREEN_ST1232 is not set
+CONFIG_TOUCHSCREEN_TPS6507X=m
+CONFIG_INPUT_MISC=y
+# CONFIG_INPUT_AD714X is not set
+# CONFIG_INPUT_BMA150 is not set
+CONFIG_INPUT_PCSPKR=m
+# CONFIG_INPUT_MMA8450 is not set
+# CONFIG_INPUT_MPU3050 is not set
+CONFIG_INPUT_APANEL=m
+# CONFIG_INPUT_GP2A is not set
+# CONFIG_INPUT_GPIO_TILT_POLLED is not set
+CONFIG_INPUT_WISTRON_BTNS=m
+CONFIG_INPUT_ATLAS_BTNS=m
+CONFIG_INPUT_ATI_REMOTE2=m
+CONFIG_INPUT_KEYSPAN_REMOTE=m
+# CONFIG_INPUT_KXTJ9 is not set
+CONFIG_INPUT_POWERMATE=m
+CONFIG_INPUT_YEALINK=m
+CONFIG_INPUT_CM109=m
+CONFIG_INPUT_UINPUT=m
+CONFIG_INPUT_PCF50633_PMU=m
+# CONFIG_INPUT_PCF8574 is not set
+# CONFIG_INPUT_GPIO_ROTARY_ENCODER is not set
+# CONFIG_INPUT_ADXL34X is not set
+# CONFIG_INPUT_CMA3000 is not set
+CONFIG_INPUT_XEN_KBDDEV_FRONTEND=y
+
+#
+# Hardware I/O ports
+#
+CONFIG_SERIO=y
+CONFIG_SERIO_I8042=y
+CONFIG_SERIO_SERPORT=m
+CONFIG_SERIO_CT82C710=m
+CONFIG_SERIO_PARKBD=m
+CONFIG_SERIO_PCIPS2=m
+CONFIG_SERIO_LIBPS2=y
+CONFIG_SERIO_RAW=m
+CONFIG_SERIO_ALTERA_PS2=m
+# CONFIG_SERIO_PS2MULT is not set
+CONFIG_GAMEPORT=m
+CONFIG_GAMEPORT_NS558=m
+CONFIG_GAMEPORT_L4=m
+CONFIG_GAMEPORT_EMU10K1=m
+CONFIG_GAMEPORT_FM801=m
+
+#
+# Character devices
+#
+CONFIG_VT=y
+CONFIG_CONSOLE_TRANSLATIONS=y
+CONFIG_VT_CONSOLE=y
+CONFIG_VT_CONSOLE_SLEEP=y
+CONFIG_HW_CONSOLE=y
+CONFIG_VT_HW_CONSOLE_BINDING=y
+CONFIG_UNIX98_PTYS=y
+CONFIG_DEVPTS_MULTIPLE_INSTANCES=y
+# CONFIG_LEGACY_PTYS is not set
+CONFIG_SERIAL_NONSTANDARD=y
+CONFIG_ROCKETPORT=m
+CONFIG_CYCLADES=m
+# CONFIG_CYZ_INTR is not set
+# CONFIG_MOXA_INTELLIO is not set
+CONFIG_MOXA_SMARTIO=m
+CONFIG_SYNCLINK=m
+CONFIG_SYNCLINKMP=m
+CONFIG_SYNCLINK_GT=m
+CONFIG_NOZOMI=m
+# CONFIG_ISI is not set
+CONFIG_N_HDLC=m
+CONFIG_N_GSM=m
+# CONFIG_TRACE_SINK is not set
+# CONFIG_DEVKMEM is not set
+CONFIG_STALDRV=y
+
+#
+# Serial drivers
+#
+CONFIG_SERIAL_8250=y
+CONFIG_SERIAL_8250_CONSOLE=y
+CONFIG_FIX_EARLYCON_MEM=y
+CONFIG_SERIAL_8250_PCI=y
+CONFIG_SERIAL_8250_PNP=y
+CONFIG_SERIAL_8250_CS=m
+CONFIG_SERIAL_8250_NR_UARTS=32
+CONFIG_SERIAL_8250_RUNTIME_UARTS=4
+CONFIG_SERIAL_8250_EXTENDED=y
+CONFIG_SERIAL_8250_MANY_PORTS=y
+CONFIG_SERIAL_8250_FOURPORT=m
+CONFIG_SERIAL_8250_ACCENT=m
+CONFIG_SERIAL_8250_BOCA=m
+CONFIG_SERIAL_8250_EXAR_ST16C554=m
+CONFIG_SERIAL_8250_HUB6=m
+CONFIG_SERIAL_8250_SHARE_IRQ=y
+# CONFIG_SERIAL_8250_DETECT_IRQ is not set
+CONFIG_SERIAL_8250_RSA=y
+
+#
+# Non-8250 serial port support
+#
+CONFIG_SERIAL_MAX3100=m
+# CONFIG_SERIAL_MAX3107 is not set
+CONFIG_SERIAL_MFD_HSU=m
+CONFIG_SERIAL_CORE=y
+CONFIG_SERIAL_CORE_CONSOLE=y
+CONFIG_SERIAL_JSM=m
+# CONFIG_SERIAL_TIMBERDALE is not set
+# CONFIG_SERIAL_ALTERA_JTAGUART is not set
+# CONFIG_SERIAL_ALTERA_UART is not set
+# CONFIG_SERIAL_IFX6X60 is not set
+CONFIG_SERIAL_PCH_UART=m
+# CONFIG_SERIAL_XILINX_PS_UART is not set
+CONFIG_PRINTER=m
+# CONFIG_LP_CONSOLE is not set
+CONFIG_PPDEV=m
+CONFIG_HVC_DRIVER=y
+CONFIG_HVC_IRQ=y
+CONFIG_HVC_XEN=y
+# CONFIG_HVC_XEN_FRONTEND is not set
+CONFIG_VIRTIO_CONSOLE=m
+CONFIG_IPMI_HANDLER=m
+# CONFIG_IPMI_PANIC_EVENT is not set
+CONFIG_IPMI_DEVICE_INTERFACE=m
+CONFIG_IPMI_SI=m
+CONFIG_IPMI_WATCHDOG=m
+CONFIG_IPMI_POWEROFF=m
+CONFIG_HW_RANDOM=m
+CONFIG_HW_RANDOM_TIMERIOMEM=m
+CONFIG_HW_RANDOM_INTEL=m
+CONFIG_HW_RANDOM_AMD=m
+CONFIG_HW_RANDOM_GEODE=m
+CONFIG_HW_RANDOM_VIA=m
+CONFIG_HW_RANDOM_VIRTIO=m
+CONFIG_NVRAM=m
+CONFIG_DTLK=m
+CONFIG_R3964=m
+CONFIG_APPLICOM=m
+CONFIG_SONYPI=m
+
+#
+# PCMCIA character devices
+#
+CONFIG_SYNCLINK_CS=m
+CONFIG_CARDMAN_4000=m
+CONFIG_CARDMAN_4040=m
+CONFIG_IPWIRELESS=m
+CONFIG_MWAVE=m
+CONFIG_SCx200_GPIO=m
+CONFIG_PC8736x_GPIO=m
+CONFIG_NSC_GPIO=m
+CONFIG_RAW_DRIVER=m
+CONFIG_MAX_RAW_DEVS=256
+CONFIG_HPET=y
+CONFIG_HPET_MMAP=y
+CONFIG_HANGCHECK_TIMER=m
+CONFIG_TCG_TPM=m
+CONFIG_TCG_TIS=m
+CONFIG_TCG_NSC=m
+CONFIG_TCG_ATMEL=m
+CONFIG_TCG_INFINEON=m
+CONFIG_TELCLOCK=m
+CONFIG_DEVPORT=y
+CONFIG_RAMOOPS=m
+CONFIG_I2C=m
+CONFIG_I2C_BOARDINFO=y
+CONFIG_I2C_COMPAT=y
+CONFIG_I2C_CHARDEV=m
+# CONFIG_I2C_MUX is not set
+CONFIG_I2C_HELPER_AUTO=y
+CONFIG_I2C_SMBUS=m
+CONFIG_I2C_ALGOBIT=m
+CONFIG_I2C_ALGOPCA=m
+
+#
+# I2C Hardware Bus support
+#
+
+#
+# PC SMBus host controller drivers
+#
+CONFIG_I2C_ALI1535=m
+CONFIG_I2C_ALI1563=m
+CONFIG_I2C_ALI15X3=m
+CONFIG_I2C_AMD756=m
+CONFIG_I2C_AMD756_S4882=m
+CONFIG_I2C_AMD8111=m
+CONFIG_I2C_I801=m
+CONFIG_I2C_ISCH=m
+CONFIG_I2C_PIIX4=m
+CONFIG_I2C_NFORCE2=m
+CONFIG_I2C_NFORCE2_S4985=m
+CONFIG_I2C_SIS5595=m
+CONFIG_I2C_SIS630=m
+CONFIG_I2C_SIS96X=m
+CONFIG_I2C_VIA=m
+CONFIG_I2C_VIAPRO=m
+
+#
+# ACPI drivers
+#
+CONFIG_I2C_SCMI=m
+
+#
+# I2C system bus drivers (mostly embedded / system-on-chip)
+#
+# CONFIG_I2C_DESIGNWARE_PCI is not set
+CONFIG_I2C_EG20T=m
+# CONFIG_I2C_GPIO is not set
+# CONFIG_I2C_INTEL_MID is not set
+CONFIG_I2C_OCORES=m
+CONFIG_I2C_PCA_PLATFORM=m
+# CONFIG_I2C_PXA_PCI is not set
+CONFIG_I2C_SIMTEC=m
+# CONFIG_I2C_XILINX is not set
+
+#
+# External I2C/SMBus adapter drivers
+#
+CONFIG_I2C_DIOLAN_U2C=m
+CONFIG_I2C_PARPORT=m
+CONFIG_I2C_PARPORT_LIGHT=m
+CONFIG_I2C_TAOS_EVM=m
+CONFIG_I2C_TINY_USB=m
+
+#
+# Other I2C/SMBus bus drivers
+#
+CONFIG_I2C_PCA_ISA=m
+CONFIG_I2C_STUB=m
+CONFIG_SCx200_I2C=m
+CONFIG_SCx200_I2C_SCL=12
+CONFIG_SCx200_I2C_SDA=13
+CONFIG_SCx200_ACB=m
+# CONFIG_I2C_DEBUG_CORE is not set
+# CONFIG_I2C_DEBUG_ALGO is not set
+# CONFIG_I2C_DEBUG_BUS is not set
+CONFIG_SPI=y
+# CONFIG_SPI_DEBUG is not set
+CONFIG_SPI_MASTER=y
+
+#
+# SPI Master Controller Drivers
+#
+# CONFIG_SPI_ALTERA is not set
+CONFIG_SPI_BITBANG=m
+CONFIG_SPI_BUTTERFLY=m
+# CONFIG_SPI_GPIO is not set
+CONFIG_SPI_LM70_LLP=m
+# CONFIG_SPI_OC_TINY is not set
+# CONFIG_SPI_PXA2XX is not set
+# CONFIG_SPI_PXA2XX_PCI is not set
+CONFIG_SPI_TOPCLIFF_PCH=m
+# CONFIG_SPI_XILINX is not set
+# CONFIG_SPI_DESIGNWARE is not set
+
+#
+# SPI Protocol Masters
+#
+# CONFIG_SPI_SPIDEV is not set
+CONFIG_SPI_TLE62X0=m
+# CONFIG_HSI is not set
+
+#
+# PPS support
+#
+CONFIG_PPS=m
+# CONFIG_PPS_DEBUG is not set
+
+#
+# PPS clients support
+#
+# CONFIG_PPS_CLIENT_KTIMER is not set
+CONFIG_PPS_CLIENT_LDISC=m
+CONFIG_PPS_CLIENT_PARPORT=m
+# CONFIG_PPS_CLIENT_GPIO is not set
+
+#
+# PPS generators support
+#
+
+#
+# PTP clock support
+#
+CONFIG_PTP_1588_CLOCK=m
+
+#
+# Enable PHYLIB and NETWORK_PHY_TIMESTAMPING to see the additional clocks.
+#
+# CONFIG_PTP_1588_CLOCK_PCH is not set
+CONFIG_ARCH_WANT_OPTIONAL_GPIOLIB=y
+CONFIG_GPIOLIB=y
+# CONFIG_DEBUG_GPIO is not set
+# CONFIG_GPIO_SYSFS is not set
+
+#
+# Memory mapped GPIO drivers:
+#
+# CONFIG_GPIO_GENERIC_PLATFORM is not set
+# CONFIG_GPIO_IT8761E is not set
+# CONFIG_GPIO_SCH is not set
+CONFIG_GPIO_VX855=m
+
+#
+# I2C GPIO expanders:
+#
+# CONFIG_GPIO_MAX7300 is not set
+# CONFIG_GPIO_MAX732X is not set
+# CONFIG_GPIO_PCA953X is not set
+# CONFIG_GPIO_PCF857X is not set
+# CONFIG_GPIO_ADP5588 is not set
+
+#
+# PCI GPIO expanders:
+#
+CONFIG_GPIO_CS5535=m
+# CONFIG_GPIO_BT8XX is not set
+# CONFIG_GPIO_LANGWELL is not set
+CONFIG_GPIO_PCH=m
+CONFIG_GPIO_ML_IOH=m
+# CONFIG_GPIO_RDC321X is not set
+
+#
+# SPI GPIO expanders:
+#
+# CONFIG_GPIO_MAX7301 is not set
+# CONFIG_GPIO_MCP23S08 is not set
+# CONFIG_GPIO_MC33880 is not set
+# CONFIG_GPIO_74X164 is not set
+
+#
+# AC97 GPIO expanders:
+#
+
+#
+# MODULbus GPIO expanders:
+#
+CONFIG_W1=m
+CONFIG_W1_CON=y
+
+#
+# 1-wire Bus Masters
+#
+CONFIG_W1_MASTER_MATROX=m
+CONFIG_W1_MASTER_DS2490=m
+CONFIG_W1_MASTER_DS2482=m
+# CONFIG_W1_MASTER_DS1WM is not set
+# CONFIG_W1_MASTER_GPIO is not set
+
+#
+# 1-wire Slaves
+#
+CONFIG_W1_SLAVE_THERM=m
+CONFIG_W1_SLAVE_SMEM=m
+# CONFIG_W1_SLAVE_DS2408 is not set
+# CONFIG_W1_SLAVE_DS2423 is not set
+CONFIG_W1_SLAVE_DS2431=m
+CONFIG_W1_SLAVE_DS2433=m
+# CONFIG_W1_SLAVE_DS2433_CRC is not set
+CONFIG_W1_SLAVE_DS2760=m
+# CONFIG_W1_SLAVE_DS2780 is not set
+# CONFIG_W1_SLAVE_DS2781 is not set
+CONFIG_W1_SLAVE_BQ27000=m
+CONFIG_POWER_SUPPLY=m
+# CONFIG_POWER_SUPPLY_DEBUG is not set
+CONFIG_PDA_POWER=m
+# CONFIG_TEST_POWER is not set
+CONFIG_BATTERY_DS2760=m
+# CONFIG_BATTERY_DS2780 is not set
+# CONFIG_BATTERY_DS2781 is not set
+CONFIG_BATTERY_DS2782=m
+# CONFIG_BATTERY_SBS is not set
+CONFIG_BATTERY_BQ27x00=m
+CONFIG_BATTERY_BQ27X00_I2C=y
+CONFIG_BATTERY_BQ27X00_PLATFORM=y
+CONFIG_BATTERY_MAX17040=m
+# CONFIG_BATTERY_MAX17042 is not set
+CONFIG_CHARGER_PCF50633=m
+# CONFIG_CHARGER_ISP1704 is not set
+# CONFIG_CHARGER_MAX8903 is not set
+# CONFIG_CHARGER_LP8727 is not set
+# CONFIG_CHARGER_GPIO is not set
+# CONFIG_CHARGER_MANAGER is not set
+# CONFIG_CHARGER_SMB347 is not set
+CONFIG_HWMON=y
+CONFIG_HWMON_VID=m
+# CONFIG_HWMON_DEBUG_CHIP is not set
+
+#
+# Native drivers
+#
+CONFIG_SENSORS_ABITUGURU=m
+CONFIG_SENSORS_ABITUGURU3=m
+# CONFIG_SENSORS_AD7314 is not set
+CONFIG_SENSORS_AD7414=m
+CONFIG_SENSORS_AD7418=m
+CONFIG_SENSORS_ADCXX=m
+CONFIG_SENSORS_ADM1021=m
+CONFIG_SENSORS_ADM1025=m
+CONFIG_SENSORS_ADM1026=m
+CONFIG_SENSORS_ADM1029=m
+CONFIG_SENSORS_ADM1031=m
+CONFIG_SENSORS_ADM9240=m
+CONFIG_SENSORS_ADT7411=m
+CONFIG_SENSORS_ADT7462=m
+CONFIG_SENSORS_ADT7470=m
+CONFIG_SENSORS_ADT7475=m
+CONFIG_SENSORS_ASC7621=m
+CONFIG_SENSORS_K8TEMP=m
+CONFIG_SENSORS_K10TEMP=m
+CONFIG_SENSORS_FAM15H_POWER=m
+CONFIG_SENSORS_ASB100=m
+CONFIG_SENSORS_ATXP1=m
+CONFIG_SENSORS_DS620=m
+CONFIG_SENSORS_DS1621=m
+CONFIG_SENSORS_I5K_AMB=m
+CONFIG_SENSORS_F71805F=m
+CONFIG_SENSORS_F71882FG=m
+CONFIG_SENSORS_F75375S=m
+CONFIG_SENSORS_FSCHMD=m
+CONFIG_SENSORS_G760A=m
+CONFIG_SENSORS_GL518SM=m
+CONFIG_SENSORS_GL520SM=m
+# CONFIG_SENSORS_GPIO_FAN is not set
+CONFIG_SENSORS_CORETEMP=m
+CONFIG_SENSORS_IBMAEM=m
+CONFIG_SENSORS_IBMPEX=m
+CONFIG_SENSORS_IT87=m
+# CONFIG_SENSORS_JC42 is not set
+CONFIG_SENSORS_LINEAGE=m
+CONFIG_SENSORS_LM63=m
+CONFIG_SENSORS_LM70=m
+CONFIG_SENSORS_LM73=m
+CONFIG_SENSORS_LM75=m
+CONFIG_SENSORS_LM77=m
+CONFIG_SENSORS_LM78=m
+CONFIG_SENSORS_LM80=m
+CONFIG_SENSORS_LM83=m
+CONFIG_SENSORS_LM85=m
+CONFIG_SENSORS_LM87=m
+CONFIG_SENSORS_LM90=m
+CONFIG_SENSORS_LM92=m
+CONFIG_SENSORS_LM93=m
+CONFIG_SENSORS_LTC4151=m
+CONFIG_SENSORS_LTC4215=m
+CONFIG_SENSORS_LTC4245=m
+CONFIG_SENSORS_LTC4261=m
+CONFIG_SENSORS_LM95241=m
+CONFIG_SENSORS_LM95245=m
+CONFIG_SENSORS_MAX1111=m
+CONFIG_SENSORS_MAX16065=m
+CONFIG_SENSORS_MAX1619=m
+CONFIG_SENSORS_MAX1668=m
+CONFIG_SENSORS_MAX6639=m
+CONFIG_SENSORS_MAX6642=m
+CONFIG_SENSORS_MAX6650=m
+# CONFIG_SENSORS_MCP3021 is not set
+CONFIG_SENSORS_NTC_THERMISTOR=m
+CONFIG_SENSORS_PC87360=m
+CONFIG_SENSORS_PC87427=m
+CONFIG_SENSORS_PCF8591=m
+# CONFIG_PMBUS is not set
+# CONFIG_SENSORS_SHT15 is not set
+CONFIG_SENSORS_SHT21=m
+CONFIG_SENSORS_SIS5595=m
+CONFIG_SENSORS_SMM665=m
+CONFIG_SENSORS_DME1737=m
+CONFIG_SENSORS_EMC1403=m
+CONFIG_SENSORS_EMC2103=m
+CONFIG_SENSORS_EMC6W201=m
+CONFIG_SENSORS_SMSC47M1=m
+CONFIG_SENSORS_SMSC47M192=m
+CONFIG_SENSORS_SMSC47B397=m
+CONFIG_SENSORS_SCH56XX_COMMON=m
+CONFIG_SENSORS_SCH5627=m
+CONFIG_SENSORS_SCH5636=m
+CONFIG_SENSORS_ADS1015=m
+CONFIG_SENSORS_ADS7828=m
+CONFIG_SENSORS_ADS7871=m
+CONFIG_SENSORS_AMC6821=m
+CONFIG_SENSORS_THMC50=m
+CONFIG_SENSORS_TMP102=m
+CONFIG_SENSORS_TMP401=m
+CONFIG_SENSORS_TMP421=m
+CONFIG_SENSORS_VIA_CPUTEMP=m
+CONFIG_SENSORS_VIA686A=m
+CONFIG_SENSORS_VT1211=m
+CONFIG_SENSORS_VT8231=m
+CONFIG_SENSORS_W83781D=m
+CONFIG_SENSORS_W83791D=m
+CONFIG_SENSORS_W83792D=m
+CONFIG_SENSORS_W83793=m
+CONFIG_SENSORS_W83795=m
+# CONFIG_SENSORS_W83795_FANCTRL is not set
+CONFIG_SENSORS_W83L785TS=m
+CONFIG_SENSORS_W83L786NG=m
+CONFIG_SENSORS_W83627HF=m
+CONFIG_SENSORS_W83627EHF=m
+CONFIG_SENSORS_APPLESMC=m
+
+#
+# ACPI drivers
+#
+CONFIG_SENSORS_ACPI_POWER=m
+CONFIG_SENSORS_ATK0110=m
+CONFIG_THERMAL=m
+CONFIG_THERMAL_HWMON=y
+CONFIG_WATCHDOG=y
+CONFIG_WATCHDOG_CORE=y
+# CONFIG_WATCHDOG_NOWAYOUT is not set
+
+#
+# Watchdog Device Drivers
+#
+CONFIG_SOFT_WATCHDOG=m
+CONFIG_ACQUIRE_WDT=m
+CONFIG_ADVANTECH_WDT=m
+CONFIG_ALIM1535_WDT=m
+CONFIG_ALIM7101_WDT=m
+CONFIG_F71808E_WDT=m
+CONFIG_SP5100_TCO=m
+CONFIG_GEODE_WDT=m
+CONFIG_SC520_WDT=m
+CONFIG_SBC_FITPC2_WATCHDOG=m
+CONFIG_EUROTECH_WDT=m
+CONFIG_IB700_WDT=m
+CONFIG_IBMASR=m
+CONFIG_WAFER_WDT=m
+CONFIG_I6300ESB_WDT=m
+CONFIG_ITCO_WDT=m
+CONFIG_ITCO_VENDOR_SUPPORT=y
+CONFIG_IT8712F_WDT=m
+CONFIG_IT87_WDT=m
+CONFIG_HP_WATCHDOG=m
+CONFIG_HPWDT_NMI_DECODING=y
+CONFIG_SC1200_WDT=m
+CONFIG_SCx200_WDT=m
+CONFIG_PC87413_WDT=m
+CONFIG_NV_TCO=m
+CONFIG_60XX_WDT=m
+CONFIG_SBC8360_WDT=m
+CONFIG_SBC7240_WDT=m
+CONFIG_CPU5_WDT=m
+CONFIG_SMSC_SCH311X_WDT=m
+CONFIG_SMSC37B787_WDT=m
+# CONFIG_VIA_WDT is not set
+CONFIG_W83627HF_WDT=m
+CONFIG_W83697HF_WDT=m
+CONFIG_W83697UG_WDT=m
+CONFIG_W83877F_WDT=m
+CONFIG_W83977F_WDT=m
+CONFIG_MACHZ_WDT=m
+CONFIG_SBC_EPX_C3_WATCHDOG=m
+CONFIG_XEN_WDT=m
+
+#
+# ISA-based Watchdog Cards
+#
+CONFIG_PCWATCHDOG=m
+CONFIG_MIXCOMWD=m
+CONFIG_WDT=m
+
+#
+# PCI-based Watchdog Cards
+#
+CONFIG_PCIPCWATCHDOG=m
+CONFIG_WDTPCI=m
+
+#
+# USB-based Watchdog Cards
+#
+CONFIG_USBPCWATCHDOG=m
+CONFIG_SSB_POSSIBLE=y
+
+#
+# Sonics Silicon Backplane
+#
+CONFIG_SSB=m
+CONFIG_SSB_SPROM=y
+CONFIG_SSB_BLOCKIO=y
+CONFIG_SSB_PCIHOST_POSSIBLE=y
+CONFIG_SSB_PCIHOST=y
+CONFIG_SSB_B43_PCI_BRIDGE=y
+CONFIG_SSB_PCMCIAHOST_POSSIBLE=y
+CONFIG_SSB_PCMCIAHOST=y
+CONFIG_SSB_SDIOHOST_POSSIBLE=y
+CONFIG_SSB_SDIOHOST=y
+# CONFIG_SSB_DEBUG is not set
+CONFIG_SSB_DRIVER_PCICORE_POSSIBLE=y
+CONFIG_SSB_DRIVER_PCICORE=y
+CONFIG_BCMA_POSSIBLE=y
+
+#
+# Broadcom specific AMBA
+#
+CONFIG_BCMA=m
+CONFIG_BCMA_BLOCKIO=y
+CONFIG_BCMA_HOST_PCI_POSSIBLE=y
+CONFIG_BCMA_HOST_PCI=y
+# CONFIG_BCMA_DEBUG is not set
+
+#
+# Multifunction device drivers
+#
+CONFIG_MFD_CORE=m
+CONFIG_MFD_SM501=m
+# CONFIG_MFD_SM501_GPIO is not set
+CONFIG_HTC_PASIC3=m
+# CONFIG_UCB1400_CORE is not set
+# CONFIG_TPS6105X is not set
+CONFIG_TPS65010=m
+# CONFIG_TPS6507X is not set
+# CONFIG_MFD_TPS65217 is not set
+# CONFIG_MFD_TPS65912_SPI is not set
+# CONFIG_MFD_STMPE is not set
+# CONFIG_MFD_TMIO is not set
+# CONFIG_MFD_DA9052_SPI is not set
+CONFIG_MFD_WM8400=m
+# CONFIG_MFD_WM831X_SPI is not set
+CONFIG_MFD_PCF50633=m
+CONFIG_PCF50633_ADC=m
+CONFIG_PCF50633_GPIO=m
+# CONFIG_MFD_MC13XXX is not set
+# CONFIG_ABX500_CORE is not set
+# CONFIG_EZX_PCAP is not set
+CONFIG_MFD_CS5535=m
+# CONFIG_MFD_TIMBERDALE is not set
+CONFIG_LPC_SCH=m
+# CONFIG_MFD_RDC321X is not set
+# CONFIG_MFD_JANZ_CMODIO is not set
+CONFIG_MFD_VX855=m
+CONFIG_MFD_WL1273_CORE=m
+CONFIG_REGULATOR=y
+# CONFIG_REGULATOR_DEBUG is not set
+# CONFIG_REGULATOR_DUMMY is not set
+CONFIG_REGULATOR_FIXED_VOLTAGE=m
+# CONFIG_REGULATOR_VIRTUAL_CONSUMER is not set
+CONFIG_REGULATOR_USERSPACE_CONSUMER=m
+# CONFIG_REGULATOR_GPIO is not set
+# CONFIG_REGULATOR_AD5398 is not set
+# CONFIG_REGULATOR_ISL6271A is not set
+CONFIG_REGULATOR_MAX1586=m
+CONFIG_REGULATOR_MAX8649=m
+CONFIG_REGULATOR_MAX8660=m
+# CONFIG_REGULATOR_MAX8952 is not set
+CONFIG_REGULATOR_LP3971=m
+# CONFIG_REGULATOR_LP3972 is not set
+CONFIG_REGULATOR_PCF50633=m
+# CONFIG_REGULATOR_TPS62360 is not set
+CONFIG_REGULATOR_TPS65023=m
+CONFIG_REGULATOR_TPS6507X=m
+# CONFIG_REGULATOR_TPS6524X is not set
+CONFIG_REGULATOR_WM8400=m
+CONFIG_MEDIA_SUPPORT=m
+
+#
+# Multimedia core support
+#
+CONFIG_MEDIA_CONTROLLER=y
+CONFIG_VIDEO_DEV=m
+CONFIG_VIDEO_V4L2_COMMON=m
+# CONFIG_VIDEO_V4L2_SUBDEV_API is not set
+CONFIG_DVB_CORE=m
+CONFIG_DVB_NET=y
+CONFIG_VIDEO_MEDIA=m
+
+#
+# Multimedia drivers
+#
+CONFIG_VIDEO_SAA7146=m
+CONFIG_VIDEO_SAA7146_VV=m
+CONFIG_RC_CORE=m
+CONFIG_LIRC=m
+CONFIG_RC_MAP=m
+CONFIG_IR_NEC_DECODER=m
+CONFIG_IR_RC5_DECODER=m
+CONFIG_IR_RC6_DECODER=m
+CONFIG_IR_JVC_DECODER=m
+CONFIG_IR_SONY_DECODER=m
+CONFIG_IR_RC5_SZ_DECODER=m
+# CONFIG_IR_SANYO_DECODER is not set
+CONFIG_IR_MCE_KBD_DECODER=m
+CONFIG_IR_LIRC_CODEC=m
+CONFIG_RC_ATI_REMOTE=m
+CONFIG_IR_ENE=m
+CONFIG_IR_IMON=m
+CONFIG_IR_MCEUSB=m
+CONFIG_IR_ITE_CIR=m
+CONFIG_IR_FINTEK=m
+CONFIG_IR_NUVOTON=m
+CONFIG_IR_REDRAT3=m
+CONFIG_IR_STREAMZAP=m
+CONFIG_IR_WINBOND_CIR=m
+CONFIG_RC_LOOPBACK=m
+# CONFIG_IR_GPIO_CIR is not set
+CONFIG_MEDIA_ATTACH=y
+CONFIG_MEDIA_TUNER=m
+# CONFIG_MEDIA_TUNER_CUSTOMISE is not set
+CONFIG_MEDIA_TUNER_SIMPLE=m
+CONFIG_MEDIA_TUNER_TDA8290=m
+CONFIG_MEDIA_TUNER_TDA827X=m
+CONFIG_MEDIA_TUNER_TDA18271=m
+CONFIG_MEDIA_TUNER_TDA9887=m
+CONFIG_MEDIA_TUNER_TEA5761=m
+CONFIG_MEDIA_TUNER_TEA5767=m
+CONFIG_MEDIA_TUNER_MT20XX=m
+CONFIG_MEDIA_TUNER_MT2060=m
+CONFIG_MEDIA_TUNER_MT2266=m
+CONFIG_MEDIA_TUNER_MT2131=m
+CONFIG_MEDIA_TUNER_QT1010=m
+CONFIG_MEDIA_TUNER_XC2028=m
+CONFIG_MEDIA_TUNER_XC5000=m
+CONFIG_MEDIA_TUNER_XC4000=m
+CONFIG_MEDIA_TUNER_MXL5005S=m
+CONFIG_MEDIA_TUNER_MXL5007T=m
+CONFIG_MEDIA_TUNER_MC44S803=m
+CONFIG_MEDIA_TUNER_MAX2165=m
+CONFIG_MEDIA_TUNER_TDA18218=m
+CONFIG_MEDIA_TUNER_TDA18212=m
+CONFIG_VIDEO_V4L2=m
+CONFIG_VIDEOBUF_GEN=m
+CONFIG_VIDEOBUF_DMA_SG=m
+CONFIG_VIDEOBUF_VMALLOC=m
+CONFIG_VIDEOBUF_DVB=m
+CONFIG_VIDEO_TVEEPROM=m
+CONFIG_VIDEO_TUNER=m
+CONFIG_VIDEOBUF2_CORE=m
+CONFIG_VIDEOBUF2_MEMOPS=m
+CONFIG_VIDEOBUF2_VMALLOC=m
+CONFIG_VIDEO_CAPTURE_DRIVERS=y
+# CONFIG_VIDEO_ADV_DEBUG is not set
+# CONFIG_VIDEO_FIXED_MINOR_RANGES is not set
+CONFIG_VIDEO_HELPER_CHIPS_AUTO=y
+CONFIG_VIDEO_IR_I2C=m
+
+#
+# Audio decoders, processors and mixers
+#
+CONFIG_VIDEO_MSP3400=m
+CONFIG_VIDEO_CS53L32A=m
+CONFIG_VIDEO_WM8775=m
+
+#
+# RDS decoders
+#
+
+#
+# Video decoders
+#
+CONFIG_VIDEO_SAA711X=m
+CONFIG_VIDEO_TVP5150=m
+
+#
+# Video and audio decoders
+#
+CONFIG_VIDEO_CX25840=m
+
+#
+# MPEG video encoders
+#
+CONFIG_VIDEO_CX2341X=m
+
+#
+# Video encoders
+#
+
+#
+# Camera sensor devices
+#
+CONFIG_VIDEO_MT9V011=m
+
+#
+# Flash devices
+#
+
+#
+# Video improvement chips
+#
+
+#
+# Miscelaneous helper chips
+#
+CONFIG_VIDEO_VIVI=m
+CONFIG_V4L_USB_DRIVERS=y
+CONFIG_USB_VIDEO_CLASS=m
+CONFIG_USB_VIDEO_CLASS_INPUT_EVDEV=y
+CONFIG_USB_GSPCA=m
+CONFIG_USB_M5602=m
+CONFIG_USB_STV06XX=m
+CONFIG_USB_GL860=m
+CONFIG_USB_GSPCA_BENQ=m
+CONFIG_USB_GSPCA_CONEX=m
+CONFIG_USB_GSPCA_CPIA1=m
+CONFIG_USB_GSPCA_ETOMS=m
+CONFIG_USB_GSPCA_FINEPIX=m
+CONFIG_USB_GSPCA_JEILINJ=m
+# CONFIG_USB_GSPCA_JL2005BCD is not set
+CONFIG_USB_GSPCA_KINECT=m
+CONFIG_USB_GSPCA_KONICA=m
+CONFIG_USB_GSPCA_MARS=m
+CONFIG_USB_GSPCA_MR97310A=m
+CONFIG_USB_GSPCA_NW80X=m
+CONFIG_USB_GSPCA_OV519=m
+CONFIG_USB_GSPCA_OV534=m
+CONFIG_USB_GSPCA_OV534_9=m
+CONFIG_USB_GSPCA_PAC207=m
+CONFIG_USB_GSPCA_PAC7302=m
+CONFIG_USB_GSPCA_PAC7311=m
+CONFIG_USB_GSPCA_SE401=m
+CONFIG_USB_GSPCA_SN9C2028=m
+CONFIG_USB_GSPCA_SN9C20X=m
+CONFIG_USB_GSPCA_SONIXB=m
+CONFIG_USB_GSPCA_SONIXJ=m
+CONFIG_USB_GSPCA_SPCA500=m
+CONFIG_USB_GSPCA_SPCA501=m
+CONFIG_USB_GSPCA_SPCA505=m
+CONFIG_USB_GSPCA_SPCA506=m
+CONFIG_USB_GSPCA_SPCA508=m
+CONFIG_USB_GSPCA_SPCA561=m
+CONFIG_USB_GSPCA_SPCA1528=m
+CONFIG_USB_GSPCA_SQ905=m
+CONFIG_USB_GSPCA_SQ905C=m
+CONFIG_USB_GSPCA_SQ930X=m
+CONFIG_USB_GSPCA_STK014=m
+CONFIG_USB_GSPCA_STV0680=m
+CONFIG_USB_GSPCA_SUNPLUS=m
+CONFIG_USB_GSPCA_T613=m
+CONFIG_USB_GSPCA_TOPRO=m
+CONFIG_USB_GSPCA_TV8532=m
+CONFIG_USB_GSPCA_VC032X=m
+CONFIG_USB_GSPCA_VICAM=m
+CONFIG_USB_GSPCA_XIRLINK_CIT=m
+CONFIG_USB_GSPCA_ZC3XX=m
+CONFIG_VIDEO_PVRUSB2=m
+CONFIG_VIDEO_PVRUSB2_SYSFS=y
+CONFIG_VIDEO_PVRUSB2_DVB=y
+# CONFIG_VIDEO_PVRUSB2_DEBUGIFC is not set
+CONFIG_VIDEO_HDPVR=m
+CONFIG_VIDEO_EM28XX=m
+CONFIG_VIDEO_EM28XX_ALSA=m
+CONFIG_VIDEO_EM28XX_DVB=m
+CONFIG_VIDEO_EM28XX_RC=y
+CONFIG_VIDEO_TLG2300=m
+CONFIG_VIDEO_CX231XX=m
+CONFIG_VIDEO_CX231XX_RC=y
+CONFIG_VIDEO_CX231XX_ALSA=m
+CONFIG_VIDEO_CX231XX_DVB=m
+CONFIG_VIDEO_TM6000=m
+CONFIG_VIDEO_TM6000_ALSA=m
+CONFIG_VIDEO_TM6000_DVB=m
+CONFIG_VIDEO_USBVISION=m
+CONFIG_USB_ET61X251=m
+CONFIG_USB_SN9C102=m
+CONFIG_USB_PWC=m
+# CONFIG_USB_PWC_DEBUG is not set
+CONFIG_USB_PWC_INPUT_EVDEV=y
+CONFIG_VIDEO_CPIA2=m
+CONFIG_USB_ZR364XX=m
+CONFIG_USB_STKWEBCAM=m
+CONFIG_USB_S2255=m
+# CONFIG_V4L_PCI_DRIVERS is not set
+# CONFIG_V4L_ISA_PARPORT_DRIVERS is not set
+# CONFIG_V4L_PLATFORM_DRIVERS is not set
+CONFIG_V4L_MEM2MEM_DRIVERS=y
+# CONFIG_VIDEO_MEM2MEM_TESTDEV is not set
+CONFIG_RADIO_ADAPTERS=y
+CONFIG_RADIO_SI470X=y
+CONFIG_USB_SI470X=m
+CONFIG_I2C_SI470X=m
+CONFIG_USB_MR800=m
+CONFIG_USB_DSBR=m
+CONFIG_RADIO_MAXIRADIO=m
+CONFIG_I2C_SI4713=m
+CONFIG_RADIO_SI4713=m
+# CONFIG_USB_KEENE is not set
+CONFIG_RADIO_TEA5764=m
+CONFIG_RADIO_SAA7706H=m
+CONFIG_RADIO_TEF6862=m
+CONFIG_RADIO_WL1273=m
+
+#
+# Texas Instruments WL128x FM driver (ST based)
+#
+# CONFIG_RADIO_WL128X is not set
+# CONFIG_V4L_RADIO_ISA_DRIVERS is not set
+CONFIG_DVB_MAX_ADAPTERS=8
+CONFIG_DVB_DYNAMIC_MINORS=y
+CONFIG_DVB_CAPTURE_DRIVERS=y
+
+#
+# Supported SAA7146 based PCI Adapters
+#
+CONFIG_TTPCI_EEPROM=m
+CONFIG_DVB_AV7110=m
+CONFIG_DVB_AV7110_OSD=y
+CONFIG_DVB_BUDGET_CORE=m
+CONFIG_DVB_BUDGET=m
+CONFIG_DVB_BUDGET_CI=m
+CONFIG_DVB_BUDGET_AV=m
+CONFIG_DVB_BUDGET_PATCH=m
+
+#
+# Supported USB Adapters
+#
+CONFIG_DVB_USB=m
+# CONFIG_DVB_USB_DEBUG is not set
+CONFIG_DVB_USB_A800=m
+CONFIG_DVB_USB_DIBUSB_MB=m
+CONFIG_DVB_USB_DIBUSB_MB_FAULTY=y
+CONFIG_DVB_USB_DIBUSB_MC=m
+CONFIG_DVB_USB_DIB0700=m
+CONFIG_DVB_USB_UMT_010=m
+CONFIG_DVB_USB_CXUSB=m
+CONFIG_DVB_USB_M920X=m
+CONFIG_DVB_USB_GL861=m
+CONFIG_DVB_USB_AU6610=m
+CONFIG_DVB_USB_DIGITV=m
+CONFIG_DVB_USB_VP7045=m
+CONFIG_DVB_USB_VP702X=m
+CONFIG_DVB_USB_GP8PSK=m
+CONFIG_DVB_USB_NOVA_T_USB2=m
+CONFIG_DVB_USB_TTUSB2=m
+CONFIG_DVB_USB_DTT200U=m
+CONFIG_DVB_USB_OPERA1=m
+CONFIG_DVB_USB_AF9005=m
+CONFIG_DVB_USB_AF9005_REMOTE=m
+CONFIG_DVB_USB_PCTV452E=m
+CONFIG_DVB_USB_DW2102=m
+CONFIG_DVB_USB_CINERGY_T2=m
+CONFIG_DVB_USB_ANYSEE=m
+CONFIG_DVB_USB_DTV5100=m
+CONFIG_DVB_USB_AF9015=m
+CONFIG_DVB_USB_CE6230=m
+CONFIG_DVB_USB_FRIIO=m
+CONFIG_DVB_USB_EC168=m
+# CONFIG_DVB_USB_AZ6007 is not set
+CONFIG_DVB_USB_AZ6027=m
+CONFIG_DVB_USB_LME2510=m
+CONFIG_DVB_USB_TECHNISAT_USB2=m
+CONFIG_DVB_USB_IT913X=m
+CONFIG_DVB_USB_MXL111SF=m
+# CONFIG_DVB_USB_RTL28XXU is not set
+CONFIG_DVB_TTUSB_BUDGET=m
+CONFIG_DVB_TTUSB_DEC=m
+CONFIG_SMS_SIANO_MDTV=m
+
+#
+# Siano module components
+#
+CONFIG_SMS_USB_DRV=m
+CONFIG_SMS_SDIO_DRV=m
+
+#
+# Supported FlexCopII (B2C2) Adapters
+#
+CONFIG_DVB_B2C2_FLEXCOP=m
+CONFIG_DVB_B2C2_FLEXCOP_PCI=m
+CONFIG_DVB_B2C2_FLEXCOP_USB=m
+# CONFIG_DVB_B2C2_FLEXCOP_DEBUG is not set
+
+#
+# Supported BT878 Adapters
+#
+
+#
+# Supported Pluto2 Adapters
+#
+CONFIG_DVB_PLUTO2=m
+
+#
+# Supported SDMC DM1105 Adapters
+#
+CONFIG_DVB_DM1105=m
+
+#
+# Supported FireWire (IEEE 1394) Adapters
+#
+CONFIG_DVB_FIREDTV=m
+CONFIG_DVB_FIREDTV_INPUT=y
+
+#
+# Supported Earthsoft PT1 Adapters
+#
+CONFIG_DVB_PT1=m
+
+#
+# Supported Mantis Adapters
+#
+CONFIG_MANTIS_CORE=m
+CONFIG_DVB_MANTIS=m
+CONFIG_DVB_HOPPER=m
+
+#
+# Supported nGene Adapters
+#
+CONFIG_DVB_NGENE=m
+
+#
+# Supported ddbridge ('Octopus') Adapters
+#
+CONFIG_DVB_DDBRIDGE=m
+
+#
+# Supported DVB Frontends
+#
+# CONFIG_DVB_FE_CUSTOMISE is not set
+
+#
+# Multistandard (satellite) frontends
+#
+CONFIG_DVB_STB0899=m
+CONFIG_DVB_STB6100=m
+CONFIG_DVB_STV090x=m
+CONFIG_DVB_STV6110x=m
+
+#
+# Multistandard (cable + terrestrial) frontends
+#
+CONFIG_DVB_DRXK=m
+CONFIG_DVB_TDA18271C2DD=m
+
+#
+# DVB-S (satellite) frontends
+#
+CONFIG_DVB_CX24123=m
+CONFIG_DVB_MT312=m
+CONFIG_DVB_ZL10039=m
+CONFIG_DVB_S5H1420=m
+CONFIG_DVB_STV0288=m
+CONFIG_DVB_STB6000=m
+CONFIG_DVB_STV0299=m
+CONFIG_DVB_STV6110=m
+CONFIG_DVB_STV0900=m
+CONFIG_DVB_TDA8083=m
+CONFIG_DVB_TDA10086=m
+CONFIG_DVB_TDA8261=m
+CONFIG_DVB_VES1X93=m
+CONFIG_DVB_TUNER_ITD1000=m
+CONFIG_DVB_TUNER_CX24113=m
+CONFIG_DVB_TDA826X=m
+CONFIG_DVB_TUA6100=m
+CONFIG_DVB_CX24116=m
+CONFIG_DVB_SI21XX=m
+CONFIG_DVB_DS3000=m
+CONFIG_DVB_MB86A16=m
+CONFIG_DVB_TDA10071=m
+
+#
+# DVB-T (terrestrial) frontends
+#
+CONFIG_DVB_SP8870=m
+CONFIG_DVB_CX22700=m
+CONFIG_DVB_CX22702=m
+CONFIG_DVB_DRXD=m
+CONFIG_DVB_L64781=m
+CONFIG_DVB_TDA1004X=m
+CONFIG_DVB_NXT6000=m
+CONFIG_DVB_MT352=m
+CONFIG_DVB_ZL10353=m
+CONFIG_DVB_DIB3000MB=m
+CONFIG_DVB_DIB3000MC=m
+CONFIG_DVB_DIB7000M=m
+CONFIG_DVB_DIB7000P=m
+CONFIG_DVB_TDA10048=m
+CONFIG_DVB_AF9013=m
+CONFIG_DVB_EC100=m
+CONFIG_DVB_CXD2820R=m
+
+#
+# DVB-C (cable) frontends
+#
+CONFIG_DVB_VES1820=m
+CONFIG_DVB_TDA10021=m
+CONFIG_DVB_TDA10023=m
+CONFIG_DVB_STV0297=m
+
+#
+# ATSC (North American/Korean Terrestrial/Cable DTV) frontends
+#
+CONFIG_DVB_NXT200X=m
+CONFIG_DVB_BCM3510=m
+CONFIG_DVB_LGDT330X=m
+CONFIG_DVB_LGDT3305=m
+CONFIG_DVB_S5H1409=m
+CONFIG_DVB_S5H1411=m
+
+#
+# ISDB-T (terrestrial) frontends
+#
+CONFIG_DVB_S921=m
+CONFIG_DVB_DIB8000=m
+CONFIG_DVB_MB86A20S=m
+
+#
+# Digital terrestrial only tuners/PLL
+#
+CONFIG_DVB_PLL=m
+CONFIG_DVB_TUNER_DIB0070=m
+CONFIG_DVB_TUNER_DIB0090=m
+
+#
+# SEC control devices for DVB-S
+#
+CONFIG_DVB_LNBP21=m
+CONFIG_DVB_LNBP22=m
+CONFIG_DVB_ISL6421=m
+CONFIG_DVB_ISL6423=m
+CONFIG_DVB_A8293=m
+CONFIG_DVB_LGS8GXX=m
+CONFIG_DVB_ATBM8830=m
+CONFIG_DVB_TDA665x=m
+CONFIG_DVB_IX2505V=m
+CONFIG_DVB_IT913X_FE=m
+CONFIG_DVB_M88RS2000=m
+
+#
+# Tools to develop new frontends
+#
+# CONFIG_DVB_DUMMY_FE is not set
+
+#
+# Graphics support
+#
+CONFIG_AGP=y
+CONFIG_AGP_ALI=y
+CONFIG_AGP_ATI=y
+CONFIG_AGP_AMD=y
+CONFIG_AGP_AMD64=y
+CONFIG_AGP_INTEL=y
+CONFIG_AGP_NVIDIA=y
+CONFIG_AGP_SIS=y
+CONFIG_AGP_SWORKS=y
+CONFIG_AGP_VIA=y
+CONFIG_AGP_EFFICEON=y
+CONFIG_VGA_ARB=y
+CONFIG_VGA_ARB_MAX_GPUS=16
+CONFIG_VGA_SWITCHEROO=y
+CONFIG_DRM=m
+CONFIG_DRM_KMS_HELPER=m
+# CONFIG_DRM_LOAD_EDID_FIRMWARE is not set
+CONFIG_DRM_TTM=m
+CONFIG_DRM_TDFX=m
+CONFIG_DRM_R128=m
+CONFIG_DRM_RADEON=m
+CONFIG_DRM_RADEON_KMS=y
+CONFIG_DRM_NOUVEAU=m
+CONFIG_DRM_NOUVEAU_BACKLIGHT=y
+# CONFIG_DRM_NOUVEAU_DEBUG is not set
+
+#
+# I2C encoder or helper chips
+#
+CONFIG_DRM_I2C_CH7006=m
+CONFIG_DRM_I2C_SIL164=m
+CONFIG_DRM_I810=m
+CONFIG_DRM_I915=m
+CONFIG_DRM_I915_KMS=y
+CONFIG_DRM_MGA=m
+CONFIG_DRM_SIS=m
+CONFIG_DRM_VIA=m
+CONFIG_DRM_SAVAGE=m
+CONFIG_DRM_VMWGFX=m
+CONFIG_DRM_GMA500=m
+CONFIG_DRM_GMA600=y
+CONFIG_DRM_GMA3600=y
+# CONFIG_DRM_UDL is not set
+# CONFIG_STUB_POULSBO is not set
+CONFIG_VGASTATE=m
+CONFIG_VIDEO_OUTPUT_CONTROL=m
+CONFIG_FB=y
+CONFIG_FIRMWARE_EDID=y
+CONFIG_FB_DDC=m
+CONFIG_FB_BOOT_VESA_SUPPORT=y
+CONFIG_FB_CFB_FILLRECT=y
+CONFIG_FB_CFB_COPYAREA=y
+CONFIG_FB_CFB_IMAGEBLIT=y
+# CONFIG_FB_CFB_REV_PIXELS_IN_BYTE is not set
+CONFIG_FB_SYS_FILLRECT=y
+CONFIG_FB_SYS_COPYAREA=y
+CONFIG_FB_SYS_IMAGEBLIT=y
+# CONFIG_FB_FOREIGN_ENDIAN is not set
+CONFIG_FB_SYS_FOPS=y
+# CONFIG_FB_WMT_GE_ROPS is not set
+CONFIG_FB_DEFERRED_IO=y
+CONFIG_FB_HECUBA=m
+CONFIG_FB_SVGALIB=m
+# CONFIG_FB_MACMODES is not set
+CONFIG_FB_BACKLIGHT=y
+CONFIG_FB_MODE_HELPERS=y
+CONFIG_FB_TILEBLITTING=y
+
+#
+# Frame buffer hardware drivers
+#
+CONFIG_FB_CIRRUS=m
+CONFIG_FB_PM2=m
+CONFIG_FB_PM2_FIFO_DISCONNECT=y
+CONFIG_FB_CYBER2000=m
+CONFIG_FB_CYBER2000_DDC=y
+CONFIG_FB_ARC=m
+# CONFIG_FB_ASILIANT is not set
+# CONFIG_FB_IMSTT is not set
+CONFIG_FB_VGA16=m
+CONFIG_FB_UVESA=m
+CONFIG_FB_VESA=y
+CONFIG_FB_EFI=y
+CONFIG_FB_N411=m
+CONFIG_FB_HGA=m
+CONFIG_FB_S1D13XXX=m
+# CONFIG_FB_NVIDIA is not set
+# CONFIG_FB_RIVA is not set
+# CONFIG_FB_I740 is not set
+CONFIG_FB_I810=m
+CONFIG_FB_I810_GTF=y
+CONFIG_FB_I810_I2C=y
+CONFIG_FB_LE80578=m
+CONFIG_FB_CARILLO_RANCH=m
+CONFIG_FB_MATROX=m
+CONFIG_FB_MATROX_MILLENIUM=y
+CONFIG_FB_MATROX_MYSTIQUE=y
+CONFIG_FB_MATROX_G=y
+CONFIG_FB_MATROX_I2C=m
+CONFIG_FB_MATROX_MAVEN=m
+CONFIG_FB_RADEON=m
+CONFIG_FB_RADEON_I2C=y
+CONFIG_FB_RADEON_BACKLIGHT=y
+# CONFIG_FB_RADEON_DEBUG is not set
+CONFIG_FB_ATY128=m
+CONFIG_FB_ATY128_BACKLIGHT=y
+CONFIG_FB_ATY=m
+CONFIG_FB_ATY_CT=y
+CONFIG_FB_ATY_GENERIC_LCD=y
+CONFIG_FB_ATY_GX=y
+CONFIG_FB_ATY_BACKLIGHT=y
+CONFIG_FB_S3=m
+CONFIG_FB_S3_DDC=y
+CONFIG_FB_SAVAGE=m
+CONFIG_FB_SAVAGE_I2C=y
+# CONFIG_FB_SAVAGE_ACCEL is not set
+CONFIG_FB_SIS=m
+CONFIG_FB_SIS_300=y
+CONFIG_FB_SIS_315=y
+CONFIG_FB_VIA=m
+# CONFIG_FB_VIA_DIRECT_PROCFS is not set
+CONFIG_FB_VIA_X_COMPATIBILITY=y
+CONFIG_FB_NEOMAGIC=m
+CONFIG_FB_KYRO=m
+CONFIG_FB_3DFX=m
+# CONFIG_FB_3DFX_ACCEL is not set
+CONFIG_FB_3DFX_I2C=y
+CONFIG_FB_VOODOO1=m
+CONFIG_FB_VT8623=m
+CONFIG_FB_TRIDENT=m
+CONFIG_FB_ARK=m
+CONFIG_FB_PM3=m
+# CONFIG_FB_CARMINE is not set
+# CONFIG_FB_GEODE is not set
+# CONFIG_FB_TMIO is not set
+CONFIG_FB_SM501=m
+# CONFIG_FB_SMSCUFX is not set
+CONFIG_FB_UDL=m
+CONFIG_FB_VIRTUAL=m
+CONFIG_XEN_FBDEV_FRONTEND=y
+CONFIG_FB_METRONOME=m
+CONFIG_FB_MB862XX=m
+CONFIG_FB_MB862XX_PCI_GDC=y
+CONFIG_FB_MB862XX_I2C=y
+# CONFIG_FB_BROADSHEET is not set
+# CONFIG_EXYNOS_VIDEO is not set
+CONFIG_BACKLIGHT_LCD_SUPPORT=y
+# CONFIG_LCD_CLASS_DEVICE is not set
+CONFIG_BACKLIGHT_CLASS_DEVICE=y
+# CONFIG_BACKLIGHT_GENERIC is not set
+CONFIG_BACKLIGHT_PROGEAR=m
+CONFIG_BACKLIGHT_APPLE=m
+# CONFIG_BACKLIGHT_SAHARA is not set
+# CONFIG_BACKLIGHT_ADP8860 is not set
+# CONFIG_BACKLIGHT_ADP8870 is not set
+# CONFIG_BACKLIGHT_PCF50633 is not set
+# CONFIG_BACKLIGHT_LP855X is not set
+# CONFIG_BACKLIGHT_OT200 is not set
+
+#
+# Console display driver support
+#
+CONFIG_VGA_CONSOLE=y
+# CONFIG_VGACON_SOFT_SCROLLBACK is not set
+CONFIG_MDA_CONSOLE=m
+CONFIG_DUMMY_CONSOLE=y
+CONFIG_FRAMEBUFFER_CONSOLE=y
+CONFIG_FRAMEBUFFER_CONSOLE_DETECT_PRIMARY=y
+CONFIG_FRAMEBUFFER_CONSOLE_ROTATION=y
+# CONFIG_FONTS is not set
+CONFIG_FONT_8x8=y
+CONFIG_FONT_8x16=y
+# CONFIG_LOGO is not set
+CONFIG_SOUND=m
+CONFIG_SOUND_OSS_CORE=y
+# CONFIG_SOUND_OSS_CORE_PRECLAIM is not set
+CONFIG_SND=m
+CONFIG_SND_TIMER=m
+CONFIG_SND_PCM=m
+CONFIG_SND_HWDEP=m
+CONFIG_SND_RAWMIDI=m
+CONFIG_SND_JACK=y
+CONFIG_SND_SEQUENCER=m
+CONFIG_SND_SEQ_DUMMY=m
+CONFIG_SND_OSSEMUL=y
+CONFIG_SND_MIXER_OSS=m
+CONFIG_SND_PCM_OSS=m
+CONFIG_SND_PCM_OSS_PLUGINS=y
+# CONFIG_SND_SEQUENCER_OSS is not set
+CONFIG_SND_HRTIMER=m
+CONFIG_SND_SEQ_HRTIMER_DEFAULT=y
+CONFIG_SND_DYNAMIC_MINORS=y
+CONFIG_SND_SUPPORT_OLD_API=y
+CONFIG_SND_VERBOSE_PROCFS=y
+# CONFIG_SND_VERBOSE_PRINTK is not set
+# CONFIG_SND_DEBUG is not set
+CONFIG_SND_VMASTER=y
+CONFIG_SND_KCTL_JACK=y
+CONFIG_SND_DMA_SGBUF=y
+CONFIG_SND_RAWMIDI_SEQ=m
+CONFIG_SND_OPL3_LIB_SEQ=m
+CONFIG_SND_OPL4_LIB_SEQ=m
+CONFIG_SND_SBAWE_SEQ=m
+CONFIG_SND_EMU10K1_SEQ=m
+CONFIG_SND_MPU401_UART=m
+CONFIG_SND_OPL3_LIB=m
+CONFIG_SND_OPL4_LIB=m
+CONFIG_SND_VX_LIB=m
+CONFIG_SND_AC97_CODEC=m
+CONFIG_SND_DRIVERS=y
+CONFIG_SND_PCSP=m
+CONFIG_SND_DUMMY=m
+CONFIG_SND_ALOOP=m
+CONFIG_SND_VIRMIDI=m
+CONFIG_SND_MTPAV=m
+CONFIG_SND_MTS64=m
+CONFIG_SND_SERIAL_U16550=m
+CONFIG_SND_MPU401=m
+CONFIG_SND_PORTMAN2X4=m
+CONFIG_SND_AC97_POWER_SAVE=y
+CONFIG_SND_AC97_POWER_SAVE_DEFAULT=0
+CONFIG_SND_WSS_LIB=m
+CONFIG_SND_SB_COMMON=m
+CONFIG_SND_SB8_DSP=m
+CONFIG_SND_SB16_DSP=m
+CONFIG_SND_ISA=y
+CONFIG_SND_ADLIB=m
+CONFIG_SND_AD1816A=m
+CONFIG_SND_AD1848=m
+CONFIG_SND_ALS100=m
+CONFIG_SND_AZT1605=m
+CONFIG_SND_AZT2316=m
+CONFIG_SND_AZT2320=m
+CONFIG_SND_CMI8330=m
+CONFIG_SND_CS4231=m
+CONFIG_SND_CS4236=m
+CONFIG_SND_ES1688=m
+CONFIG_SND_ES18XX=m
+CONFIG_SND_SC6000=m
+CONFIG_SND_GUSCLASSIC=m
+CONFIG_SND_GUSEXTREME=m
+CONFIG_SND_GUSMAX=m
+CONFIG_SND_INTERWAVE=m
+CONFIG_SND_INTERWAVE_STB=m
+CONFIG_SND_JAZZ16=m
+CONFIG_SND_OPL3SA2=m
+CONFIG_SND_OPTI92X_AD1848=m
+CONFIG_SND_OPTI92X_CS4231=m
+CONFIG_SND_OPTI93X=m
+CONFIG_SND_MIRO=m
+CONFIG_SND_SB8=m
+CONFIG_SND_SB16=m
+CONFIG_SND_SBAWE=m
+CONFIG_SND_SB16_CSP=y
+CONFIG_SND_SSCAPE=m
+CONFIG_SND_WAVEFRONT=m
+CONFIG_SND_MSND_PINNACLE=m
+CONFIG_SND_MSND_CLASSIC=m
+CONFIG_SND_TEA575X=m
+CONFIG_SND_PCI=y
+CONFIG_SND_AD1889=m
+CONFIG_SND_ALS300=m
+CONFIG_SND_ALS4000=m
+CONFIG_SND_ALI5451=m
+CONFIG_SND_ASIHPI=m
+CONFIG_SND_ATIIXP=m
+CONFIG_SND_ATIIXP_MODEM=m
+CONFIG_SND_AU8810=m
+CONFIG_SND_AU8820=m
+CONFIG_SND_AU8830=m
+# CONFIG_SND_AW2 is not set
+CONFIG_SND_AZT3328=m
+CONFIG_SND_BT87X=m
+# CONFIG_SND_BT87X_OVERCLOCK is not set
+CONFIG_SND_CA0106=m
+CONFIG_SND_CMIPCI=m
+CONFIG_SND_OXYGEN_LIB=m
+CONFIG_SND_OXYGEN=m
+CONFIG_SND_CS4281=m
+CONFIG_SND_CS46XX=m
+# CONFIG_SND_CS46XX_NEW_DSP is not set
+CONFIG_SND_CS5530=m
+CONFIG_SND_CS5535AUDIO=m
+CONFIG_SND_CTXFI=m
+CONFIG_SND_DARLA20=m
+CONFIG_SND_GINA20=m
+CONFIG_SND_LAYLA20=m
+CONFIG_SND_DARLA24=m
+CONFIG_SND_GINA24=m
+CONFIG_SND_LAYLA24=m
+CONFIG_SND_MONA=m
+CONFIG_SND_MIA=m
+CONFIG_SND_ECHO3G=m
+CONFIG_SND_INDIGO=m
+CONFIG_SND_INDIGOIO=m
+CONFIG_SND_INDIGODJ=m
+CONFIG_SND_INDIGOIOX=m
+CONFIG_SND_INDIGODJX=m
+CONFIG_SND_EMU10K1=m
+CONFIG_SND_EMU10K1X=m
+CONFIG_SND_ENS1370=m
+CONFIG_SND_ENS1371=m
+CONFIG_SND_ES1938=m
+CONFIG_SND_ES1968=m
+CONFIG_SND_ES1968_INPUT=y
+CONFIG_SND_ES1968_RADIO=y
+CONFIG_SND_FM801=m
+CONFIG_SND_FM801_TEA575X_BOOL=y
+CONFIG_SND_HDA_INTEL=m
+CONFIG_SND_HDA_PREALLOC_SIZE=64
+CONFIG_SND_HDA_HWDEP=y
+CONFIG_SND_HDA_RECONFIG=y
+CONFIG_SND_HDA_INPUT_BEEP=y
+CONFIG_SND_HDA_INPUT_BEEP_MODE=1
+CONFIG_SND_HDA_INPUT_JACK=y
+CONFIG_SND_HDA_PATCH_LOADER=y
+CONFIG_SND_HDA_CODEC_REALTEK=y
+CONFIG_SND_HDA_ENABLE_REALTEK_QUIRKS=y
+CONFIG_SND_HDA_CODEC_ANALOG=y
+CONFIG_SND_HDA_CODEC_SIGMATEL=y
+CONFIG_SND_HDA_CODEC_VIA=y
+CONFIG_SND_HDA_CODEC_HDMI=y
+CONFIG_SND_HDA_CODEC_CIRRUS=y
+CONFIG_SND_HDA_CODEC_CONEXANT=y
+CONFIG_SND_HDA_CODEC_CA0110=y
+CONFIG_SND_HDA_CODEC_CA0132=y
+CONFIG_SND_HDA_CODEC_CMEDIA=y
+CONFIG_SND_HDA_CODEC_SI3054=y
+CONFIG_SND_HDA_GENERIC=y
+CONFIG_SND_HDA_POWER_SAVE=y
+CONFIG_SND_HDA_POWER_SAVE_DEFAULT=0
+CONFIG_SND_HDSP=m
+CONFIG_SND_HDSPM=m
+CONFIG_SND_ICE1712=m
+CONFIG_SND_ICE1724=m
+CONFIG_SND_INTEL8X0=m
+CONFIG_SND_INTEL8X0M=m
+CONFIG_SND_KORG1212=m
+CONFIG_SND_LOLA=m
+CONFIG_SND_LX6464ES=m
+CONFIG_SND_MAESTRO3=m
+CONFIG_SND_MAESTRO3_INPUT=y
+CONFIG_SND_MIXART=m
+CONFIG_SND_NM256=m
+CONFIG_SND_PCXHR=m
+CONFIG_SND_RIPTIDE=m
+CONFIG_SND_RME32=m
+CONFIG_SND_RME96=m
+CONFIG_SND_RME9652=m
+CONFIG_SND_SIS7019=m
+CONFIG_SND_SONICVIBES=m
+CONFIG_SND_TRIDENT=m
+CONFIG_SND_VIA82XX=m
+CONFIG_SND_VIA82XX_MODEM=m
+CONFIG_SND_VIRTUOSO=m
+CONFIG_SND_VX222=m
+CONFIG_SND_YMFPCI=m
+CONFIG_SND_SPI=y
+CONFIG_SND_USB=y
+CONFIG_SND_USB_AUDIO=m
+CONFIG_SND_USB_UA101=m
+CONFIG_SND_USB_USX2Y=m
+CONFIG_SND_USB_CAIAQ=m
+CONFIG_SND_USB_CAIAQ_INPUT=y
+CONFIG_SND_USB_US122L=m
+CONFIG_SND_USB_6FIRE=m
+CONFIG_SND_FIREWIRE=y
+CONFIG_SND_FIREWIRE_LIB=m
+CONFIG_SND_FIREWIRE_SPEAKERS=m
+CONFIG_SND_ISIGHT=m
+CONFIG_SND_PCMCIA=y
+CONFIG_SND_VXPOCKET=m
+CONFIG_SND_PDAUDIOCF=m
+# CONFIG_SND_SOC is not set
+# CONFIG_SOUND_PRIME is not set
+CONFIG_AC97_BUS=m
+CONFIG_HID_SUPPORT=y
+CONFIG_HID=m
+# CONFIG_HID_BATTERY_STRENGTH is not set
+CONFIG_HIDRAW=y
+
+#
+# USB Input Devices
+#
+CONFIG_USB_HID=m
+CONFIG_HID_PID=y
+CONFIG_USB_HIDDEV=y
+
+#
+# Special HID drivers
+#
+CONFIG_HID_A4TECH=m
+CONFIG_HID_ACRUX=m
+CONFIG_HID_ACRUX_FF=y
+CONFIG_HID_APPLE=m
+CONFIG_HID_BELKIN=m
+CONFIG_HID_CHERRY=m
+CONFIG_HID_CHICONY=m
+CONFIG_HID_PRODIKEYS=m
+CONFIG_HID_CYPRESS=m
+CONFIG_HID_DRAGONRISE=m
+CONFIG_DRAGONRISE_FF=y
+CONFIG_HID_EMS_FF=m
+CONFIG_HID_ELECOM=m
+CONFIG_HID_EZKEY=m
+CONFIG_HID_HOLTEK=m
+# CONFIG_HOLTEK_FF is not set
+CONFIG_HID_KEYTOUCH=m
+CONFIG_HID_KYE=m
+CONFIG_HID_UCLOGIC=m
+CONFIG_HID_WALTOP=m
+CONFIG_HID_GYRATION=m
+CONFIG_HID_TWINHAN=m
+CONFIG_HID_KENSINGTON=m
+CONFIG_HID_LCPOWER=m
+CONFIG_HID_LOGITECH=m
+CONFIG_HID_LOGITECH_DJ=m
+CONFIG_LOGITECH_FF=y
+CONFIG_LOGIRUMBLEPAD2_FF=y
+CONFIG_LOGIG940_FF=y
+CONFIG_LOGIWHEELS_FF=y
+CONFIG_HID_MAGICMOUSE=m
+CONFIG_HID_MICROSOFT=m
+CONFIG_HID_MONTEREY=m
+CONFIG_HID_MULTITOUCH=m
+CONFIG_HID_NTRIG=m
+CONFIG_HID_ORTEK=m
+CONFIG_HID_PANTHERLORD=m
+CONFIG_PANTHERLORD_FF=y
+CONFIG_HID_PETALYNX=m
+CONFIG_HID_PICOLCD=m
+CONFIG_HID_PICOLCD_FB=y
+CONFIG_HID_PICOLCD_BACKLIGHT=y
+CONFIG_HID_PICOLCD_LEDS=y
+CONFIG_HID_PRIMAX=m
+CONFIG_HID_ROCCAT=m
+# CONFIG_HID_SAITEK is not set
+CONFIG_HID_SAMSUNG=m
+CONFIG_HID_SONY=m
+CONFIG_HID_SPEEDLINK=m
+CONFIG_HID_SUNPLUS=m
+CONFIG_HID_GREENASIA=m
+CONFIG_GREENASIA_FF=y
+# CONFIG_HID_HYPERV_MOUSE is not set
+CONFIG_HID_SMARTJOYPLUS=m
+CONFIG_SMARTJOYPLUS_FF=y
+# CONFIG_HID_TIVO is not set
+CONFIG_HID_TOPSEED=m
+CONFIG_HID_THRUSTMASTER=m
+CONFIG_THRUSTMASTER_FF=y
+CONFIG_HID_WACOM=m
+CONFIG_HID_WACOM_POWER_SUPPLY=y
+CONFIG_HID_WIIMOTE=m
+# CONFIG_HID_WIIMOTE_EXT is not set
+CONFIG_HID_ZEROPLUS=m
+CONFIG_ZEROPLUS_FF=y
+CONFIG_HID_ZYDACRON=m
+CONFIG_USB_ARCH_HAS_OHCI=y
+CONFIG_USB_ARCH_HAS_EHCI=y
+CONFIG_USB_ARCH_HAS_XHCI=y
+CONFIG_USB_SUPPORT=y
+CONFIG_USB_COMMON=m
+CONFIG_USB_ARCH_HAS_HCD=y
+CONFIG_USB=m
+# CONFIG_USB_DEBUG is not set
+CONFIG_USB_ANNOUNCE_NEW_DEVICES=y
+
+#
+# Miscellaneous USB options
+#
+CONFIG_USB_DEVICEFS=y
+# CONFIG_USB_DEVICE_CLASS is not set
+CONFIG_USB_DYNAMIC_MINORS=y
+CONFIG_USB_SUSPEND=y
+# CONFIG_USB_OTG is not set
+# CONFIG_USB_DWC3 is not set
+CONFIG_USB_MON=m
+CONFIG_USB_WUSB=m
+CONFIG_USB_WUSB_CBAF=m
+# CONFIG_USB_WUSB_CBAF_DEBUG is not set
+
+#
+# USB Host Controller Drivers
+#
+CONFIG_USB_C67X00_HCD=m
+CONFIG_USB_XHCI_HCD=m
+# CONFIG_USB_XHCI_HCD_DEBUGGING is not set
+CONFIG_USB_EHCI_HCD=m
+CONFIG_USB_EHCI_ROOT_HUB_TT=y
+CONFIG_USB_EHCI_TT_NEWSCHED=y
+# CONFIG_USB_OXU210HP_HCD is not set
+CONFIG_USB_ISP116X_HCD=m
+# CONFIG_USB_ISP1760_HCD is not set
+# CONFIG_USB_ISP1362_HCD is not set
+CONFIG_USB_OHCI_HCD=m
+# CONFIG_USB_OHCI_HCD_SSB is not set
+# CONFIG_USB_OHCI_HCD_PLATFORM is not set
+# CONFIG_USB_EHCI_HCD_PLATFORM is not set
+# CONFIG_USB_OHCI_BIG_ENDIAN_DESC is not set
+# CONFIG_USB_OHCI_BIG_ENDIAN_MMIO is not set
+CONFIG_USB_OHCI_LITTLE_ENDIAN=y
+CONFIG_USB_UHCI_HCD=m
+CONFIG_USB_U132_HCD=m
+CONFIG_USB_SL811_HCD=m
+# CONFIG_USB_SL811_HCD_ISO is not set
+CONFIG_USB_SL811_CS=m
+CONFIG_USB_R8A66597_HCD=m
+CONFIG_USB_WHCI_HCD=m
+CONFIG_USB_HWA_HCD=m
+# CONFIG_USB_MUSB_HDRC is not set
+# CONFIG_USB_RENESAS_USBHS is not set
+
+#
+# USB Device Class drivers
+#
+CONFIG_USB_ACM=m
+CONFIG_USB_PRINTER=m
+CONFIG_USB_WDM=m
+CONFIG_USB_TMC=m
+
+#
+# NOTE: USB_STORAGE depends on SCSI but BLK_DEV_SD may
+#
+
+#
+# also be needed; see USB_STORAGE Help for more info
+#
+CONFIG_USB_STORAGE=m
+# CONFIG_USB_STORAGE_DEBUG is not set
+CONFIG_USB_STORAGE_REALTEK=m
+CONFIG_REALTEK_AUTOPM=y
+CONFIG_USB_STORAGE_DATAFAB=m
+CONFIG_USB_STORAGE_FREECOM=m
+CONFIG_USB_STORAGE_ISD200=m
+CONFIG_USB_STORAGE_USBAT=m
+CONFIG_USB_STORAGE_SDDR09=m
+CONFIG_USB_STORAGE_SDDR55=m
+CONFIG_USB_STORAGE_JUMPSHOT=m
+CONFIG_USB_STORAGE_ALAUDA=m
+CONFIG_USB_STORAGE_ONETOUCH=m
+CONFIG_USB_STORAGE_KARMA=m
+CONFIG_USB_STORAGE_CYPRESS_ATACB=m
+CONFIG_USB_STORAGE_ENE_UB6250=m
+# CONFIG_USB_LIBUSUAL is not set
+
+#
+# USB Imaging devices
+#
+CONFIG_USB_MDC800=m
+CONFIG_USB_MICROTEK=m
+
+#
+# USB port drivers
+#
+CONFIG_USB_USS720=m
+CONFIG_USB_SERIAL=m
+CONFIG_USB_EZUSB=y
+CONFIG_USB_SERIAL_GENERIC=y
+CONFIG_USB_SERIAL_AIRCABLE=m
+CONFIG_USB_SERIAL_ARK3116=m
+CONFIG_USB_SERIAL_BELKIN=m
+CONFIG_USB_SERIAL_CH341=m
+CONFIG_USB_SERIAL_WHITEHEAT=m
+CONFIG_USB_SERIAL_DIGI_ACCELEPORT=m
+CONFIG_USB_SERIAL_CP210X=m
+CONFIG_USB_SERIAL_CYPRESS_M8=m
+CONFIG_USB_SERIAL_EMPEG=m
+CONFIG_USB_SERIAL_FTDI_SIO=m
+CONFIG_USB_SERIAL_FUNSOFT=m
+CONFIG_USB_SERIAL_VISOR=m
+CONFIG_USB_SERIAL_IPAQ=m
+CONFIG_USB_SERIAL_IR=m
+CONFIG_USB_SERIAL_EDGEPORT=m
+CONFIG_USB_SERIAL_EDGEPORT_TI=m
+# CONFIG_USB_SERIAL_F81232 is not set
+CONFIG_USB_SERIAL_GARMIN=m
+CONFIG_USB_SERIAL_IPW=m
+CONFIG_USB_SERIAL_IUU=m
+CONFIG_USB_SERIAL_KEYSPAN_PDA=m
+CONFIG_USB_SERIAL_KEYSPAN=m
+CONFIG_USB_SERIAL_KLSI=m
+CONFIG_USB_SERIAL_KOBIL_SCT=m
+CONFIG_USB_SERIAL_MCT_U232=m
+# CONFIG_USB_SERIAL_METRO is not set
+CONFIG_USB_SERIAL_MOS7720=m
+CONFIG_USB_SERIAL_MOS7715_PARPORT=y
+CONFIG_USB_SERIAL_MOS7840=m
+CONFIG_USB_SERIAL_MOTOROLA=m
+CONFIG_USB_SERIAL_NAVMAN=m
+CONFIG_USB_SERIAL_PL2303=m
+CONFIG_USB_SERIAL_OTI6858=m
+CONFIG_USB_SERIAL_QCAUX=m
+CONFIG_USB_SERIAL_QUALCOMM=m
+CONFIG_USB_SERIAL_SPCP8X5=m
+CONFIG_USB_SERIAL_HP4X=m
+CONFIG_USB_SERIAL_SAFE=m
+# CONFIG_USB_SERIAL_SAFE_PADDED is not set
+CONFIG_USB_SERIAL_SIEMENS_MPI=m
+CONFIG_USB_SERIAL_SIERRAWIRELESS=m
+CONFIG_USB_SERIAL_SYMBOL=m
+CONFIG_USB_SERIAL_TI=m
+CONFIG_USB_SERIAL_CYBERJACK=m
+CONFIG_USB_SERIAL_XIRCOM=m
+CONFIG_USB_SERIAL_WWAN=m
+CONFIG_USB_SERIAL_OPTION=m
+CONFIG_USB_SERIAL_OMNINET=m
+CONFIG_USB_SERIAL_OPTICON=m
+CONFIG_USB_SERIAL_VIVOPAY_SERIAL=m
+CONFIG_USB_SERIAL_ZIO=m
+CONFIG_USB_SERIAL_SSU100=m
+CONFIG_USB_SERIAL_DEBUG=m
+
+#
+# USB Miscellaneous drivers
+#
+CONFIG_USB_EMI62=m
+CONFIG_USB_EMI26=m
+CONFIG_USB_ADUTUX=m
+CONFIG_USB_SEVSEG=m
+CONFIG_USB_RIO500=m
+CONFIG_USB_LEGOTOWER=m
+CONFIG_USB_LCD=m
+CONFIG_USB_LED=m
+CONFIG_USB_CYPRESS_CY7C63=m
+CONFIG_USB_CYTHERM=m
+CONFIG_USB_IDMOUSE=m
+CONFIG_USB_FTDI_ELAN=m
+CONFIG_USB_APPLEDISPLAY=m
+CONFIG_USB_SISUSBVGA=m
+CONFIG_USB_SISUSBVGA_CON=y
+CONFIG_USB_LD=m
+CONFIG_USB_TRANCEVIBRATOR=m
+CONFIG_USB_IOWARRIOR=m
+CONFIG_USB_TEST=m
+CONFIG_USB_ISIGHTFW=m
+CONFIG_USB_YUREX=m
+CONFIG_USB_ATM=m
+CONFIG_USB_SPEEDTOUCH=m
+CONFIG_USB_CXACRU=m
+CONFIG_USB_UEAGLEATM=m
+CONFIG_USB_XUSBATM=m
+CONFIG_USB_GADGET=m
+# CONFIG_USB_GADGET_DEBUG is not set
+# CONFIG_USB_GADGET_DEBUG_FILES is not set
+# CONFIG_USB_GADGET_DEBUG_FS is not set
+CONFIG_USB_GADGET_VBUS_DRAW=2
+CONFIG_USB_GADGET_STORAGE_NUM_BUFFERS=2
+# CONFIG_USB_R8A66597 is not set
+# CONFIG_USB_MV_UDC is not set
+# CONFIG_USB_M66592 is not set
+# CONFIG_USB_AMD5536UDC is not set
+# CONFIG_USB_CI13XXX_PCI is not set
+# CONFIG_USB_NET2272 is not set
+# CONFIG_USB_NET2280 is not set
+# CONFIG_USB_GOKU is not set
+CONFIG_USB_EG20T=m
+# CONFIG_USB_DUMMY_HCD is not set
+CONFIG_USB_GADGET_DUALSPEED=y
+# CONFIG_USB_ZERO is not set
+# CONFIG_USB_AUDIO is not set
+# CONFIG_USB_ETH is not set
+# CONFIG_USB_G_NCM is not set
+# CONFIG_USB_GADGETFS is not set
+# CONFIG_USB_FUNCTIONFS is not set
+# CONFIG_USB_FILE_STORAGE is not set
+# CONFIG_USB_MASS_STORAGE is not set
+# CONFIG_USB_G_SERIAL is not set
+# CONFIG_USB_MIDI_GADGET is not set
+# CONFIG_USB_G_PRINTER is not set
+# CONFIG_USB_CDC_COMPOSITE is not set
+# CONFIG_USB_G_NOKIA is not set
+# CONFIG_USB_G_ACM_MS is not set
+# CONFIG_USB_G_MULTI is not set
+# CONFIG_USB_G_HID is not set
+# CONFIG_USB_G_DBGP is not set
+# CONFIG_USB_G_WEBCAM is not set
+
+#
+# OTG and related infrastructure
+#
+CONFIG_USB_OTG_UTILS=y
+# CONFIG_USB_GPIO_VBUS is not set
+CONFIG_NOP_USB_XCEIV=m
+CONFIG_UWB=m
+CONFIG_UWB_HWA=m
+CONFIG_UWB_WHCI=m
+CONFIG_UWB_I1480U=m
+CONFIG_MMC=m
+# CONFIG_MMC_DEBUG is not set
+# CONFIG_MMC_UNSAFE_RESUME is not set
+# CONFIG_MMC_CLKGATE is not set
+
+#
+# MMC/SD/SDIO Card Drivers
+#
+CONFIG_MMC_BLOCK=m
+CONFIG_MMC_BLOCK_MINORS=8
+CONFIG_MMC_BLOCK_BOUNCE=y
+CONFIG_SDIO_UART=m
+# CONFIG_MMC_TEST is not set
+
+#
+# MMC/SD/SDIO Host Controller Drivers
+#
+CONFIG_MMC_SDHCI=m
+CONFIG_MMC_SDHCI_PCI=m
+CONFIG_MMC_RICOH_MMC=y
+CONFIG_MMC_SDHCI_PLTFM=m
+CONFIG_MMC_WBSD=m
+CONFIG_MMC_TIFM_SD=m
+CONFIG_MMC_SDRICOH_CS=m
+CONFIG_MMC_CB710=m
+CONFIG_MMC_VIA_SDMMC=m
+CONFIG_MMC_VUB300=m
+CONFIG_MMC_USHC=m
+CONFIG_MEMSTICK=m
+# CONFIG_MEMSTICK_DEBUG is not set
+
+#
+# MemoryStick drivers
+#
+# CONFIG_MEMSTICK_UNSAFE_RESUME is not set
+CONFIG_MSPRO_BLOCK=m
+
+#
+# MemoryStick Host Controller Drivers
+#
+CONFIG_MEMSTICK_TIFM_MS=m
+CONFIG_MEMSTICK_JMICRON_38X=m
+CONFIG_MEMSTICK_R592=m
+CONFIG_NEW_LEDS=y
+CONFIG_LEDS_CLASS=y
+
+#
+# LED drivers
+#
+# CONFIG_LEDS_LM3530 is not set
+CONFIG_LEDS_NET48XX=m
+CONFIG_LEDS_WRAP=m
+CONFIG_LEDS_PCA9532=m
+# CONFIG_LEDS_PCA9532_GPIO is not set
+# CONFIG_LEDS_GPIO is not set
+CONFIG_LEDS_LP3944=m
+# CONFIG_LEDS_LP5521 is not set
+# CONFIG_LEDS_LP5523 is not set
+CONFIG_LEDS_CLEVO_MAIL=m
+CONFIG_LEDS_PCA955X=m
+# CONFIG_LEDS_PCA9633 is not set
+CONFIG_LEDS_DAC124S085=m
+CONFIG_LEDS_REGULATOR=m
+CONFIG_LEDS_BD2802=m
+CONFIG_LEDS_INTEL_SS4200=m
+CONFIG_LEDS_LT3593=m
+CONFIG_LEDS_DELL_NETBOOKS=m
+# CONFIG_LEDS_TCA6507 is not set
+# CONFIG_LEDS_OT200 is not set
+CONFIG_LEDS_TRIGGERS=y
+
+#
+# LED Triggers
+#
+CONFIG_LEDS_TRIGGER_TIMER=m
+CONFIG_LEDS_TRIGGER_HEARTBEAT=m
+CONFIG_LEDS_TRIGGER_BACKLIGHT=m
+# CONFIG_LEDS_TRIGGER_GPIO is not set
+CONFIG_LEDS_TRIGGER_DEFAULT_ON=m
+
+#
+# iptables trigger is under Netfilter config (LED target)
+#
+CONFIG_ACCESSIBILITY=y
+CONFIG_A11Y_BRAILLE_CONSOLE=y
+CONFIG_INFINIBAND=m
+CONFIG_INFINIBAND_USER_MAD=m
+CONFIG_INFINIBAND_USER_ACCESS=m
+CONFIG_INFINIBAND_USER_MEM=y
+CONFIG_INFINIBAND_ADDR_TRANS=y
+CONFIG_INFINIBAND_MTHCA=m
+CONFIG_INFINIBAND_MTHCA_DEBUG=y
+CONFIG_INFINIBAND_AMSO1100=m
+# CONFIG_INFINIBAND_AMSO1100_DEBUG is not set
+CONFIG_INFINIBAND_CXGB3=m
+# CONFIG_INFINIBAND_CXGB3_DEBUG is not set
+CONFIG_INFINIBAND_CXGB4=m
+CONFIG_MLX4_INFINIBAND=m
+CONFIG_INFINIBAND_NES=m
+# CONFIG_INFINIBAND_NES_DEBUG is not set
+CONFIG_INFINIBAND_IPOIB=m
+CONFIG_INFINIBAND_IPOIB_CM=y
+CONFIG_INFINIBAND_IPOIB_DEBUG=y
+# CONFIG_INFINIBAND_IPOIB_DEBUG_DATA is not set
+CONFIG_INFINIBAND_SRP=m
+# CONFIG_INFINIBAND_SRPT is not set
+CONFIG_INFINIBAND_ISER=m
+CONFIG_EDAC=y
+
+#
+# Reporting subsystems
+#
+# CONFIG_EDAC_DEBUG is not set
+CONFIG_EDAC_DECODE_MCE=m
+# CONFIG_EDAC_MCE_INJ is not set
+CONFIG_EDAC_MM_EDAC=m
+CONFIG_EDAC_AMD76X=m
+CONFIG_EDAC_E7XXX=m
+CONFIG_EDAC_E752X=m
+CONFIG_EDAC_I82875P=m
+CONFIG_EDAC_I82975X=m
+CONFIG_EDAC_I3000=m
+CONFIG_EDAC_I3200=m
+CONFIG_EDAC_X38=m
+CONFIG_EDAC_I5400=m
+CONFIG_EDAC_I7CORE=m
+CONFIG_EDAC_I82860=m
+CONFIG_EDAC_R82600=m
+CONFIG_EDAC_I5000=m
+CONFIG_EDAC_I5100=m
+CONFIG_EDAC_I7300=m
+CONFIG_RTC_LIB=y
+CONFIG_RTC_CLASS=y
+CONFIG_RTC_HCTOSYS=y
+CONFIG_RTC_HCTOSYS_DEVICE="rtc0"
+# CONFIG_RTC_DEBUG is not set
+
+#
+# RTC interfaces
+#
+CONFIG_RTC_INTF_SYSFS=y
+CONFIG_RTC_INTF_PROC=y
+CONFIG_RTC_INTF_DEV=y
+# CONFIG_RTC_INTF_DEV_UIE_EMUL is not set
+# CONFIG_RTC_DRV_TEST is not set
+
+#
+# I2C RTC drivers
+#
+CONFIG_RTC_DRV_DS1307=m
+CONFIG_RTC_DRV_DS1374=m
+CONFIG_RTC_DRV_DS1672=m
+# CONFIG_RTC_DRV_DS3232 is not set
+CONFIG_RTC_DRV_MAX6900=m
+CONFIG_RTC_DRV_RS5C372=m
+CONFIG_RTC_DRV_ISL1208=m
+# CONFIG_RTC_DRV_ISL12022 is not set
+CONFIG_RTC_DRV_X1205=m
+CONFIG_RTC_DRV_PCF8563=m
+CONFIG_RTC_DRV_PCF8583=m
+CONFIG_RTC_DRV_M41T80=m
+# CONFIG_RTC_DRV_M41T80_WDT is not set
+CONFIG_RTC_DRV_BQ32K=m
+CONFIG_RTC_DRV_S35390A=m
+CONFIG_RTC_DRV_FM3130=m
+CONFIG_RTC_DRV_RX8581=m
+CONFIG_RTC_DRV_RX8025=m
+# CONFIG_RTC_DRV_EM3027 is not set
+# CONFIG_RTC_DRV_RV3029C2 is not set
+
+#
+# SPI RTC drivers
+#
+# CONFIG_RTC_DRV_M41T93 is not set
+CONFIG_RTC_DRV_M41T94=m
+CONFIG_RTC_DRV_DS1305=m
+CONFIG_RTC_DRV_DS1390=m
+CONFIG_RTC_DRV_MAX6902=m
+CONFIG_RTC_DRV_R9701=m
+CONFIG_RTC_DRV_RS5C348=m
+CONFIG_RTC_DRV_DS3234=m
+CONFIG_RTC_DRV_PCF2123=m
+
+#
+# Platform RTC drivers
+#
+CONFIG_RTC_DRV_CMOS=y
+CONFIG_RTC_DRV_DS1286=m
+CONFIG_RTC_DRV_DS1511=m
+CONFIG_RTC_DRV_DS1553=m
+CONFIG_RTC_DRV_DS1742=m
+CONFIG_RTC_DRV_STK17TA8=m
+CONFIG_RTC_DRV_M48T86=m
+CONFIG_RTC_DRV_M48T35=m
+CONFIG_RTC_DRV_M48T59=m
+CONFIG_RTC_DRV_MSM6242=m
+CONFIG_RTC_DRV_BQ4802=m
+CONFIG_RTC_DRV_RP5C01=m
+CONFIG_RTC_DRV_V3020=m
+CONFIG_RTC_DRV_PCF50633=m
+
+#
+# on-CPU RTC drivers
+#
+CONFIG_DMADEVICES=y
+# CONFIG_DMADEVICES_DEBUG is not set
+
+#
+# DMA Devices
+#
+# CONFIG_INTEL_MID_DMAC is not set
+CONFIG_INTEL_IOATDMA=m
+# CONFIG_TIMB_DMA is not set
+CONFIG_PCH_DMA=m
+CONFIG_DMA_ENGINE=y
+
+#
+# DMA Clients
+#
+CONFIG_ASYNC_TX_DMA=y
+# CONFIG_DMATEST is not set
+CONFIG_DCA=m
+# CONFIG_AUXDISPLAY is not set
+CONFIG_UIO=m
+CONFIG_UIO_CIF=m
+CONFIG_UIO_PDRV=m
+CONFIG_UIO_PDRV_GENIRQ=m
+CONFIG_UIO_AEC=m
+CONFIG_UIO_SERCOS3=m
+CONFIG_UIO_PCI_GENERIC=m
+CONFIG_UIO_NETX=m
+CONFIG_VIRTIO=m
+CONFIG_VIRTIO_RING=m
+
+#
+# Virtio drivers
+#
+CONFIG_VIRTIO_PCI=m
+CONFIG_VIRTIO_BALLOON=m
+# CONFIG_VIRTIO_MMIO is not set
+
+#
+# Microsoft Hyper-V guest support
+#
+CONFIG_HYPERV=m
+CONFIG_HYPERV_UTILS=m
+
+#
+# Xen driver support
+#
+CONFIG_XEN_BALLOON=y
+CONFIG_XEN_SCRUB_PAGES=y
+CONFIG_XEN_DEV_EVTCHN=m
+CONFIG_XEN_BACKEND=y
+CONFIG_XENFS=m
+CONFIG_XEN_COMPAT_XENFS=y
+CONFIG_XEN_SYS_HYPERVISOR=y
+CONFIG_XEN_XENBUS_FRONTEND=y
+CONFIG_XEN_GNTDEV=m
+CONFIG_XEN_GRANT_DEV_ALLOC=m
+CONFIG_SWIOTLB_XEN=y
+CONFIG_XEN_PCIDEV_BACKEND=m
+CONFIG_XEN_PRIVCMD=m
+# CONFIG_XEN_ACPI_PROCESSOR is not set
+CONFIG_STAGING=y
+CONFIG_ET131X=m
+# CONFIG_SLICOSS is not set
+CONFIG_USBIP_CORE=m
+CONFIG_USBIP_VHCI_HCD=m
+CONFIG_USBIP_HOST=m
+# CONFIG_USBIP_DEBUG is not set
+# CONFIG_W35UND is not set
+CONFIG_PRISM2_USB=m
+# CONFIG_ECHO is not set
+CONFIG_COMEDI=m
+# CONFIG_COMEDI_DEBUG is not set
+CONFIG_COMEDI_MISC_DRIVERS=m
+CONFIG_COMEDI_KCOMEDILIB=m
+CONFIG_COMEDI_BOND=m
+CONFIG_COMEDI_TEST=m
+CONFIG_COMEDI_PARPORT=m
+CONFIG_COMEDI_SERIAL2002=m
+# CONFIG_COMEDI_SKEL is not set
+CONFIG_COMEDI_ISA_DRIVERS=m
+CONFIG_COMEDI_ACL7225B=m
+CONFIG_COMEDI_PCL711=m
+CONFIG_COMEDI_PCL724=m
+CONFIG_COMEDI_PCL725=m
+CONFIG_COMEDI_PCL726=m
+CONFIG_COMEDI_PCL730=m
+CONFIG_COMEDI_PCL812=m
+CONFIG_COMEDI_PCL816=m
+CONFIG_COMEDI_PCL818=m
+CONFIG_COMEDI_PCM3724=m
+CONFIG_COMEDI_PCM3730=m
+CONFIG_COMEDI_RTI800=m
+CONFIG_COMEDI_RTI802=m
+CONFIG_COMEDI_DAS16M1=m
+CONFIG_COMEDI_DAS16=m
+CONFIG_COMEDI_DAS800=m
+CONFIG_COMEDI_DAS1800=m
+CONFIG_COMEDI_DAS6402=m
+CONFIG_COMEDI_DT2801=m
+CONFIG_COMEDI_DT2811=m
+CONFIG_COMEDI_DT2814=m
+CONFIG_COMEDI_DT2815=m
+CONFIG_COMEDI_DT2817=m
+CONFIG_COMEDI_DT282X=m
+CONFIG_COMEDI_DMM32AT=m
+CONFIG_COMEDI_FL512=m
+CONFIG_COMEDI_AIO_AIO12_8=m
+CONFIG_COMEDI_AIO_IIRO_16=m
+CONFIG_COMEDI_C6XDIGIO=m
+CONFIG_COMEDI_MPC624=m
+CONFIG_COMEDI_ADQ12B=m
+CONFIG_COMEDI_NI_AT_A2150=m
+CONFIG_COMEDI_NI_AT_AO=m
+CONFIG_COMEDI_NI_ATMIO=m
+CONFIG_COMEDI_NI_ATMIO16D=m
+CONFIG_COMEDI_PCMAD=m
+CONFIG_COMEDI_PCMDA12=m
+CONFIG_COMEDI_PCMMIO=m
+CONFIG_COMEDI_PCMUIO=m
+CONFIG_COMEDI_MULTIQ3=m
+CONFIG_COMEDI_POC=m
+CONFIG_COMEDI_PCI_DRIVERS=m
+CONFIG_COMEDI_ADDI_APCI_035=m
+CONFIG_COMEDI_ADDI_APCI_1032=m
+CONFIG_COMEDI_ADDI_APCI_1500=m
+CONFIG_COMEDI_ADDI_APCI_1516=m
+CONFIG_COMEDI_ADDI_APCI_1564=m
+CONFIG_COMEDI_ADDI_APCI_16XX=m
+CONFIG_COMEDI_ADDI_APCI_2016=m
+CONFIG_COMEDI_ADDI_APCI_2032=m
+CONFIG_COMEDI_ADDI_APCI_2200=m
+CONFIG_COMEDI_ADDI_APCI_3001=m
+CONFIG_COMEDI_ADDI_APCI_3120=m
+CONFIG_COMEDI_ADDI_APCI_3501=m
+CONFIG_COMEDI_ADDI_APCI_3XXX=m
+CONFIG_COMEDI_ADL_PCI6208=m
+# CONFIG_COMEDI_ADL_PCI7230 is not set
+CONFIG_COMEDI_ADL_PCI7296=m
+CONFIG_COMEDI_ADL_PCI7432=m
+CONFIG_COMEDI_ADL_PCI8164=m
+CONFIG_COMEDI_ADL_PCI9111=m
+CONFIG_COMEDI_ADL_PCI9118=m
+CONFIG_COMEDI_ADV_PCI1710=m
+CONFIG_COMEDI_ADV_PCI1723=m
+CONFIG_COMEDI_ADV_PCI_DIO=m
+CONFIG_COMEDI_AMPLC_DIO200=m
+CONFIG_COMEDI_AMPLC_PC236=m
+CONFIG_COMEDI_AMPLC_PC263=m
+CONFIG_COMEDI_AMPLC_PCI224=m
+CONFIG_COMEDI_AMPLC_PCI230=m
+CONFIG_COMEDI_CONTEC_PCI_DIO=m
+CONFIG_COMEDI_DT3000=m
+# CONFIG_COMEDI_DYNA_PCI10XX is not set
+CONFIG_COMEDI_UNIOXX5=m
+CONFIG_COMEDI_GSC_HPDI=m
+CONFIG_COMEDI_ICP_MULTI=m
+CONFIG_COMEDI_II_PCI20KC=m
+CONFIG_COMEDI_DAQBOARD2000=m
+CONFIG_COMEDI_JR3_PCI=m
+CONFIG_COMEDI_KE_COUNTER=m
+CONFIG_COMEDI_CB_PCIDAS64=m
+CONFIG_COMEDI_CB_PCIDAS=m
+CONFIG_COMEDI_CB_PCIDDA=m
+CONFIG_COMEDI_CB_PCIDIO=m
+CONFIG_COMEDI_CB_PCIMDAS=m
+CONFIG_COMEDI_CB_PCIMDDA=m
+CONFIG_COMEDI_ME4000=m
+CONFIG_COMEDI_ME_DAQ=m
+CONFIG_COMEDI_NI_6527=m
+CONFIG_COMEDI_NI_65XX=m
+CONFIG_COMEDI_NI_660X=m
+CONFIG_COMEDI_NI_670X=m
+CONFIG_COMEDI_NI_PCIDIO=m
+CONFIG_COMEDI_NI_PCIMIO=m
+CONFIG_COMEDI_RTD520=m
+CONFIG_COMEDI_S526=m
+CONFIG_COMEDI_S626=m
+CONFIG_COMEDI_SSV_DNP=m
+CONFIG_COMEDI_PCMCIA_DRIVERS=m
+CONFIG_COMEDI_CB_DAS16_CS=m
+CONFIG_COMEDI_DAS08_CS=m
+CONFIG_COMEDI_NI_DAQ_700_CS=m
+CONFIG_COMEDI_NI_DAQ_DIO24_CS=m
+CONFIG_COMEDI_NI_LABPC_CS=m
+CONFIG_COMEDI_NI_MIO_CS=m
+CONFIG_COMEDI_QUATECH_DAQP_CS=m
+CONFIG_COMEDI_USB_DRIVERS=m
+CONFIG_COMEDI_DT9812=m
+CONFIG_COMEDI_USBDUX=m
+CONFIG_COMEDI_USBDUXFAST=m
+# CONFIG_COMEDI_USBDUXSIGMA is not set
+CONFIG_COMEDI_VMK80XX=m
+CONFIG_COMEDI_NI_COMMON=m
+CONFIG_COMEDI_MITE=m
+CONFIG_COMEDI_NI_TIO=m
+CONFIG_COMEDI_NI_LABPC=m
+CONFIG_COMEDI_8255=m
+CONFIG_COMEDI_DAS08=m
+CONFIG_COMEDI_FC=m
+# CONFIG_ASUS_OLED is not set
+# CONFIG_PANEL is not set
+CONFIG_R8187SE=m
+CONFIG_RTL8192U=m
+# CONFIG_RTLLIB is not set
+CONFIG_R8712U=m
+CONFIG_RTS_PSTOR=m
+# CONFIG_RTS_PSTOR_DEBUG is not set
+CONFIG_RTS5139=m
+# CONFIG_RTS5139_DEBUG is not set
+# CONFIG_TRANZPORT is not set
+# CONFIG_IDE_PHISON is not set
+CONFIG_LINE6_USB=m
+# CONFIG_LINE6_USB_DEBUG is not set
+# CONFIG_LINE6_USB_DUMP_CTRL is not set
+# CONFIG_LINE6_USB_DUMP_MIDI is not set
+# CONFIG_LINE6_USB_DUMP_PCM is not set
+# CONFIG_LINE6_USB_RAW is not set
+# CONFIG_LINE6_USB_IMPULSE_RESPONSE is not set
+# CONFIG_USB_SERIAL_QUATECH2 is not set
+# CONFIG_USB_SERIAL_QUATECH_USB2 is not set
+# CONFIG_VT6655 is not set
+CONFIG_VT6656=m
+# CONFIG_VME_BUS is not set
+# CONFIG_DX_SEP is not set
+# CONFIG_IIO is not set
+CONFIG_ZRAM=m
+# CONFIG_ZRAM_DEBUG is not set
+CONFIG_ZSMALLOC=m
+# CONFIG_WLAGS49_H2 is not set
+# CONFIG_WLAGS49_H25 is not set
+# CONFIG_FB_SM7XX is not set
+# CONFIG_CRYSTALHD is not set
+# CONFIG_CXT1E1 is not set
+# CONFIG_FB_XGI is not set
+# CONFIG_ACPI_QUICKSTART is not set
+# CONFIG_SBE_2T3E3 is not set
+# CONFIG_USB_ENESTORAGE is not set
+# CONFIG_BCM_WIMAX is not set
+# CONFIG_FT1000 is not set
+
+#
+# Speakup console speech
+#
+CONFIG_SPEAKUP=m
+CONFIG_SPEAKUP_SYNTH_ACNTSA=m
+CONFIG_SPEAKUP_SYNTH_ACNTPC=m
+CONFIG_SPEAKUP_SYNTH_APOLLO=m
+CONFIG_SPEAKUP_SYNTH_AUDPTR=m
+CONFIG_SPEAKUP_SYNTH_BNS=m
+CONFIG_SPEAKUP_SYNTH_DECTLK=m
+CONFIG_SPEAKUP_SYNTH_DECEXT=m
+# CONFIG_SPEAKUP_SYNTH_DECPC is not set
+CONFIG_SPEAKUP_SYNTH_DTLK=m
+CONFIG_SPEAKUP_SYNTH_KEYPC=m
+CONFIG_SPEAKUP_SYNTH_LTLK=m
+CONFIG_SPEAKUP_SYNTH_SOFT=m
+CONFIG_SPEAKUP_SYNTH_SPKOUT=m
+CONFIG_SPEAKUP_SYNTH_TXPRT=m
+CONFIG_SPEAKUP_SYNTH_DUMMY=m
+# CONFIG_TOUCHSCREEN_CLEARPAD_TM1217 is not set
+# CONFIG_TOUCHSCREEN_SYNAPTICS_I2C_RMI4 is not set
+# CONFIG_INTEL_MEI is not set
+CONFIG_STAGING_MEDIA=y
+# CONFIG_DVB_AS102 is not set
+# CONFIG_DVB_CXD2099 is not set
+# CONFIG_VIDEO_DT3155 is not set
+CONFIG_EASYCAP=m
+# CONFIG_EASYCAP_DEBUG is not set
+# CONFIG_VIDEO_GO7007 is not set
+# CONFIG_SOLO6X10 is not set
+CONFIG_LIRC_STAGING=y
+CONFIG_LIRC_BT829=m
+CONFIG_LIRC_IGORPLUGUSB=m
+CONFIG_LIRC_IMON=m
+# CONFIG_LIRC_PARALLEL is not set
+CONFIG_LIRC_SASEM=m
+CONFIG_LIRC_SERIAL=m
+CONFIG_LIRC_SERIAL_TRANSMITTER=y
+CONFIG_LIRC_SIR=m
+CONFIG_LIRC_TTUSBIR=m
+CONFIG_LIRC_ZILOG=m
+
+#
+# Android
+#
+# CONFIG_ANDROID is not set
+CONFIG_PHONE=m
+CONFIG_PHONE_IXJ=m
+CONFIG_PHONE_IXJ_PCMCIA=m
+# CONFIG_USB_WPAN_HCD is not set
+CONFIG_X86_PLATFORM_DEVICES=y
+CONFIG_ACER_WMI=m
+CONFIG_ACERHDF=m
+CONFIG_ASUS_LAPTOP=m
+CONFIG_DELL_LAPTOP=m
+CONFIG_DELL_WMI=m
+CONFIG_DELL_WMI_AIO=m
+CONFIG_FUJITSU_LAPTOP=m
+# CONFIG_FUJITSU_LAPTOP_DEBUG is not set
+# CONFIG_FUJITSU_TABLET is not set
+CONFIG_AMILO_RFKILL=m
+CONFIG_TC1100_WMI=m
+CONFIG_HP_ACCEL=m
+CONFIG_HP_WMI=m
+CONFIG_MSI_LAPTOP=m
+CONFIG_PANASONIC_LAPTOP=m
+CONFIG_COMPAL_LAPTOP=m
+CONFIG_SONY_LAPTOP=m
+CONFIG_SONYPI_COMPAT=y
+CONFIG_IDEAPAD_LAPTOP=m
+CONFIG_THINKPAD_ACPI=m
+CONFIG_THINKPAD_ACPI_ALSA_SUPPORT=y
+# CONFIG_THINKPAD_ACPI_DEBUGFACILITIES is not set
+# CONFIG_THINKPAD_ACPI_DEBUG is not set
+# CONFIG_THINKPAD_ACPI_UNSAFE_LEDS is not set
+CONFIG_THINKPAD_ACPI_VIDEO=y
+CONFIG_THINKPAD_ACPI_HOTKEY_POLL=y
+CONFIG_SENSORS_HDAPS=m
+# CONFIG_INTEL_MENLOW is not set
+CONFIG_EEEPC_LAPTOP=m
+CONFIG_ASUS_WMI=m
+CONFIG_ASUS_NB_WMI=m
+CONFIG_EEEPC_WMI=m
+CONFIG_ACPI_WMI=m
+CONFIG_MSI_WMI=m
+CONFIG_TOPSTAR_LAPTOP=m
+CONFIG_ACPI_TOSHIBA=m
+CONFIG_TOSHIBA_BT_RFKILL=m
+CONFIG_ACPI_CMPC=m
+CONFIG_INTEL_IPS=m
+# CONFIG_IBM_RTL is not set
+CONFIG_XO15_EBOOK=m
+CONFIG_SAMSUNG_LAPTOP=m
+CONFIG_MXM_WMI=m
+CONFIG_INTEL_OAKTRAIL=m
+# CONFIG_SAMSUNG_Q10 is not set
+# CONFIG_APPLE_GMUX is not set
+
+#
+# Hardware Spinlock drivers
+#
+CONFIG_CLKSRC_I8253=y
+CONFIG_CLKEVT_I8253=y
+CONFIG_I8253_LOCK=y
+CONFIG_CLKBLD_I8253=y
+CONFIG_IOMMU_SUPPORT=y
+# CONFIG_INTEL_IOMMU is not set
+
+#
+# Remoteproc drivers (EXPERIMENTAL)
+#
+
+#
+# Rpmsg drivers (EXPERIMENTAL)
+#
+# CONFIG_VIRT_DRIVERS is not set
+# CONFIG_PM_DEVFREQ is not set
+
+#
+# Firmware Drivers
+#
+CONFIG_EDD=m
+# CONFIG_EDD_OFF is not set
+CONFIG_FIRMWARE_MEMMAP=y
+CONFIG_EFI_VARS=m
+CONFIG_EFI_VARS_PSTORE=y
+CONFIG_EFI_VARS_PSTORE_DEFAULT_DISABLE=y
+CONFIG_DELL_RBU=m
+CONFIG_DCDBAS=m
+CONFIG_DMIID=y
+# CONFIG_DMI_SYSFS is not set
+CONFIG_ISCSI_IBFT_FIND=y
+CONFIG_ISCSI_IBFT=m
+# CONFIG_GOOGLE_FIRMWARE is not set
+
+#
+# File systems
+#
+CONFIG_DCACHE_WORD_ACCESS=y
+CONFIG_EXT2_FS=m
+CONFIG_EXT2_FS_XATTR=y
+CONFIG_EXT2_FS_POSIX_ACL=y
+CONFIG_EXT2_FS_SECURITY=y
+# CONFIG_EXT2_FS_XIP is not set
+CONFIG_EXT3_FS=m
+CONFIG_EXT3_DEFAULTS_TO_ORDERED=y
+CONFIG_EXT3_FS_XATTR=y
+CONFIG_EXT3_FS_POSIX_ACL=y
+CONFIG_EXT3_FS_SECURITY=y
+CONFIG_EXT4_FS=m
+CONFIG_EXT4_FS_XATTR=y
+CONFIG_EXT4_FS_POSIX_ACL=y
+CONFIG_EXT4_FS_SECURITY=y
+# CONFIG_EXT4_DEBUG is not set
+CONFIG_JBD=m
+# CONFIG_JBD_DEBUG is not set
+CONFIG_JBD2=m
+# CONFIG_JBD2_DEBUG is not set
+CONFIG_FS_MBCACHE=m
+CONFIG_REISERFS_FS=m
+# CONFIG_REISERFS_CHECK is not set
+# CONFIG_REISERFS_PROC_INFO is not set
+CONFIG_REISERFS_FS_XATTR=y
+CONFIG_REISERFS_FS_POSIX_ACL=y
+CONFIG_REISERFS_FS_SECURITY=y
+CONFIG_JFS_FS=m
+CONFIG_JFS_POSIX_ACL=y
+CONFIG_JFS_SECURITY=y
+# CONFIG_JFS_DEBUG is not set
+# CONFIG_JFS_STATISTICS is not set
+CONFIG_XFS_FS=m
+CONFIG_XFS_QUOTA=y
+CONFIG_XFS_POSIX_ACL=y
+CONFIG_XFS_RT=y
+# CONFIG_XFS_DEBUG is not set
+CONFIG_GFS2_FS=m
+CONFIG_GFS2_FS_LOCKING_DLM=y
+CONFIG_OCFS2_FS=m
+CONFIG_OCFS2_FS_O2CB=m
+CONFIG_OCFS2_FS_USERSPACE_CLUSTER=m
+CONFIG_OCFS2_FS_STATS=y
+CONFIG_OCFS2_DEBUG_MASKLOG=y
+# CONFIG_OCFS2_DEBUG_FS is not set
+CONFIG_BTRFS_FS=m
+CONFIG_BTRFS_FS_POSIX_ACL=y
+# CONFIG_BTRFS_FS_CHECK_INTEGRITY is not set
+CONFIG_NILFS2_FS=m
+CONFIG_FS_POSIX_ACL=y
+CONFIG_EXPORTFS=y
+CONFIG_FILE_LOCKING=y
+CONFIG_FSNOTIFY=y
+CONFIG_DNOTIFY=y
+CONFIG_INOTIFY_USER=y
+CONFIG_FANOTIFY=y
+# CONFIG_FANOTIFY_ACCESS_PERMISSIONS is not set
+CONFIG_QUOTA=y
+CONFIG_QUOTA_NETLINK_INTERFACE=y
+CONFIG_PRINT_QUOTA_WARNING=y
+# CONFIG_QUOTA_DEBUG is not set
+CONFIG_QUOTA_TREE=m
+CONFIG_QFMT_V1=m
+CONFIG_QFMT_V2=m
+CONFIG_QUOTACTL=y
+CONFIG_AUTOFS4_FS=m
+CONFIG_FUSE_FS=m
+CONFIG_CUSE=m
+CONFIG_GENERIC_ACL=y
+
+#
+# Caches
+#
+CONFIG_FSCACHE=m
+CONFIG_FSCACHE_STATS=y
+# CONFIG_FSCACHE_HISTOGRAM is not set
+# CONFIG_FSCACHE_DEBUG is not set
+# CONFIG_FSCACHE_OBJECT_LIST is not set
+CONFIG_CACHEFILES=m
+# CONFIG_CACHEFILES_DEBUG is not set
+# CONFIG_CACHEFILES_HISTOGRAM is not set
+
+#
+# CD-ROM/DVD Filesystems
+#
+CONFIG_ISO9660_FS=m
+CONFIG_JOLIET=y
+CONFIG_ZISOFS=y
+CONFIG_UDF_FS=m
+CONFIG_UDF_NLS=y
+
+#
+# DOS/FAT/NT Filesystems
+#
+CONFIG_FAT_FS=m
+CONFIG_MSDOS_FS=m
+CONFIG_VFAT_FS=m
+CONFIG_FAT_DEFAULT_CODEPAGE=437
+CONFIG_FAT_DEFAULT_IOCHARSET="utf8"
+CONFIG_NTFS_FS=m
+# CONFIG_NTFS_DEBUG is not set
+CONFIG_NTFS_RW=y
+
+#
+# Pseudo filesystems
+#
+CONFIG_PROC_FS=y
+CONFIG_PROC_KCORE=y
+CONFIG_PROC_VMCORE=y
+CONFIG_PROC_SYSCTL=y
+CONFIG_PROC_PAGE_MONITOR=y
+CONFIG_SYSFS=y
+CONFIG_TMPFS=y
+CONFIG_TMPFS_POSIX_ACL=y
+CONFIG_TMPFS_XATTR=y
+CONFIG_HUGETLBFS=y
+CONFIG_HUGETLB_PAGE=y
+CONFIG_CONFIGFS_FS=m
+CONFIG_MISC_FILESYSTEMS=y
+CONFIG_ADFS_FS=m
+# CONFIG_ADFS_FS_RW is not set
+CONFIG_AFFS_FS=m
+CONFIG_ECRYPT_FS=m
+CONFIG_HFS_FS=m
+CONFIG_HFSPLUS_FS=m
+CONFIG_BEFS_FS=m
+# CONFIG_BEFS_DEBUG is not set
+CONFIG_BFS_FS=m
+CONFIG_EFS_FS=m
+CONFIG_JFFS2_FS=m
+CONFIG_JFFS2_FS_DEBUG=0
+CONFIG_JFFS2_FS_WRITEBUFFER=y
+# CONFIG_JFFS2_FS_WBUF_VERIFY is not set
+CONFIG_JFFS2_SUMMARY=y
+CONFIG_JFFS2_FS_XATTR=y
+CONFIG_JFFS2_FS_POSIX_ACL=y
+CONFIG_JFFS2_FS_SECURITY=y
+CONFIG_JFFS2_COMPRESSION_OPTIONS=y
+CONFIG_JFFS2_ZLIB=y
+CONFIG_JFFS2_LZO=y
+CONFIG_JFFS2_RTIME=y
+# CONFIG_JFFS2_RUBIN is not set
+# CONFIG_JFFS2_CMODE_NONE is not set
+CONFIG_JFFS2_CMODE_PRIORITY=y
+# CONFIG_JFFS2_CMODE_SIZE is not set
+# CONFIG_JFFS2_CMODE_FAVOURLZO is not set
+CONFIG_UBIFS_FS=m
+CONFIG_UBIFS_FS_XATTR=y
+CONFIG_UBIFS_FS_ADVANCED_COMPR=y
+CONFIG_UBIFS_FS_LZO=y
+CONFIG_UBIFS_FS_ZLIB=y
+# CONFIG_UBIFS_FS_DEBUG is not set
+CONFIG_LOGFS=m
+CONFIG_CRAMFS=m
+CONFIG_SQUASHFS=m
+CONFIG_SQUASHFS_XATTR=y
+CONFIG_SQUASHFS_ZLIB=y
+CONFIG_SQUASHFS_LZO=y
+CONFIG_SQUASHFS_XZ=y
+# CONFIG_SQUASHFS_4K_DEVBLK_SIZE is not set
+# CONFIG_SQUASHFS_EMBEDDED is not set
+CONFIG_SQUASHFS_FRAGMENT_CACHE_SIZE=3
+CONFIG_VXFS_FS=m
+CONFIG_MINIX_FS=m
+CONFIG_OMFS_FS=m
+# CONFIG_HPFS_FS is not set
+CONFIG_QNX4FS_FS=m
+# CONFIG_QNX6FS_FS is not set
+CONFIG_ROMFS_FS=m
+# CONFIG_ROMFS_BACKED_BY_BLOCK is not set
+# CONFIG_ROMFS_BACKED_BY_MTD is not set
+CONFIG_ROMFS_BACKED_BY_BOTH=y
+CONFIG_ROMFS_ON_BLOCK=y
+CONFIG_ROMFS_ON_MTD=y
+CONFIG_PSTORE=y
+CONFIG_SYSV_FS=m
+CONFIG_UFS_FS=m
+# CONFIG_UFS_FS_WRITE is not set
+# CONFIG_UFS_DEBUG is not set
+CONFIG_EXOFS_FS=m
+# CONFIG_EXOFS_DEBUG is not set
+CONFIG_ORE=m
+CONFIG_NETWORK_FILESYSTEMS=y
+CONFIG_NFS_FS=m
+CONFIG_NFS_V3=y
+CONFIG_NFS_V3_ACL=y
+CONFIG_NFS_V4=y
+CONFIG_NFS_V4_1=y
+CONFIG_PNFS_FILE_LAYOUT=m
+CONFIG_PNFS_BLOCK=m
+CONFIG_PNFS_OBJLAYOUT=m
+CONFIG_NFS_V4_1_IMPLEMENTATION_ID_DOMAIN="n"
+CONFIG_NFS_FSCACHE=y
+# CONFIG_NFS_USE_LEGACY_DNS is not set
+CONFIG_NFS_USE_KERNEL_DNS=y
+CONFIG_NFSD=m
+CONFIG_NFSD_V2_ACL=y
+CONFIG_NFSD_V3=y
+CONFIG_NFSD_V3_ACL=y
+CONFIG_NFSD_V4=y
+CONFIG_NFSD_FAULT_INJECTION=y
+CONFIG_LOCKD=m
+CONFIG_LOCKD_V4=y
+CONFIG_NFS_ACL_SUPPORT=m
+CONFIG_NFS_COMMON=y
+CONFIG_SUNRPC=m
+CONFIG_SUNRPC_GSS=m
+CONFIG_SUNRPC_BACKCHANNEL=y
+CONFIG_SUNRPC_XPRT_RDMA=m
+CONFIG_RPCSEC_GSS_KRB5=m
+# CONFIG_SUNRPC_DEBUG is not set
+CONFIG_CEPH_FS=m
+CONFIG_CIFS=m
+# CONFIG_CIFS_STATS is not set
+CONFIG_CIFS_WEAK_PW_HASH=y
+CONFIG_CIFS_UPCALL=y
+CONFIG_CIFS_XATTR=y
+CONFIG_CIFS_POSIX=y
+# CONFIG_CIFS_DEBUG2 is not set
+CONFIG_CIFS_DFS_UPCALL=y
+CONFIG_CIFS_FSCACHE=y
+CONFIG_CIFS_ACL=y
+CONFIG_NCP_FS=m
+CONFIG_NCPFS_PACKET_SIGNING=y
+CONFIG_NCPFS_IOCTL_LOCKING=y
+CONFIG_NCPFS_STRONG=y
+CONFIG_NCPFS_NFS_NS=y
+CONFIG_NCPFS_OS2_NS=y
+# CONFIG_NCPFS_SMALLDOS is not set
+CONFIG_NCPFS_NLS=y
+CONFIG_NCPFS_EXTRAS=y
+CONFIG_CODA_FS=m
+CONFIG_AFS_FS=m
+# CONFIG_AFS_DEBUG is not set
+CONFIG_AFS_FSCACHE=y
+CONFIG_9P_FS=m
+CONFIG_9P_FSCACHE=y
+CONFIG_9P_FS_POSIX_ACL=y
+CONFIG_NLS=y
+CONFIG_NLS_DEFAULT="utf8"
+CONFIG_NLS_CODEPAGE_437=m
+CONFIG_NLS_CODEPAGE_737=m
+CONFIG_NLS_CODEPAGE_775=m
+CONFIG_NLS_CODEPAGE_850=m
+CONFIG_NLS_CODEPAGE_852=m
+CONFIG_NLS_CODEPAGE_855=m
+CONFIG_NLS_CODEPAGE_857=m
+CONFIG_NLS_CODEPAGE_860=m
+CONFIG_NLS_CODEPAGE_861=m
+CONFIG_NLS_CODEPAGE_862=m
+CONFIG_NLS_CODEPAGE_863=m
+CONFIG_NLS_CODEPAGE_864=m
+CONFIG_NLS_CODEPAGE_865=m
+CONFIG_NLS_CODEPAGE_866=m
+CONFIG_NLS_CODEPAGE_869=m
+CONFIG_NLS_CODEPAGE_936=m
+CONFIG_NLS_CODEPAGE_950=m
+CONFIG_NLS_CODEPAGE_932=m
+CONFIG_NLS_CODEPAGE_949=m
+CONFIG_NLS_CODEPAGE_874=m
+CONFIG_NLS_ISO8859_8=m
+CONFIG_NLS_CODEPAGE_1250=m
+CONFIG_NLS_CODEPAGE_1251=m
+CONFIG_NLS_ASCII=m
+CONFIG_NLS_ISO8859_1=m
+CONFIG_NLS_ISO8859_2=m
+CONFIG_NLS_ISO8859_3=m
+CONFIG_NLS_ISO8859_4=m
+CONFIG_NLS_ISO8859_5=m
+CONFIG_NLS_ISO8859_6=m
+CONFIG_NLS_ISO8859_7=m
+CONFIG_NLS_ISO8859_9=m
+CONFIG_NLS_ISO8859_13=m
+CONFIG_NLS_ISO8859_14=m
+CONFIG_NLS_ISO8859_15=m
+CONFIG_NLS_KOI8_R=m
+CONFIG_NLS_KOI8_U=m
+CONFIG_NLS_UTF8=m
+CONFIG_DLM=m
+CONFIG_DLM_DEBUG=y
+
+#
+# Kernel hacking
+#
+CONFIG_TRACE_IRQFLAGS_SUPPORT=y
+CONFIG_PRINTK_TIME=y
+CONFIG_DEFAULT_MESSAGE_LOGLEVEL=4
+CONFIG_ENABLE_WARN_DEPRECATED=y
+CONFIG_ENABLE_MUST_CHECK=y
+CONFIG_FRAME_WARN=1024
+CONFIG_MAGIC_SYSRQ=y
+CONFIG_STRIP_ASM_SYMS=y
+CONFIG_UNUSED_SYMBOLS=y
+CONFIG_DEBUG_FS=y
+# CONFIG_HEADERS_CHECK is not set
+# CONFIG_DEBUG_SECTION_MISMATCH is not set
+CONFIG_DEBUG_KERNEL=y
+# CONFIG_DEBUG_SHIRQ is not set
+CONFIG_LOCKUP_DETECTOR=y
+CONFIG_HARDLOCKUP_DETECTOR=y
+# CONFIG_BOOTPARAM_HARDLOCKUP_PANIC is not set
+CONFIG_BOOTPARAM_HARDLOCKUP_PANIC_VALUE=0
+# CONFIG_BOOTPARAM_SOFTLOCKUP_PANIC is not set
+CONFIG_BOOTPARAM_SOFTLOCKUP_PANIC_VALUE=0
+CONFIG_DETECT_HUNG_TASK=y
+CONFIG_DEFAULT_HUNG_TASK_TIMEOUT=120
+# CONFIG_BOOTPARAM_HUNG_TASK_PANIC is not set
+CONFIG_BOOTPARAM_HUNG_TASK_PANIC_VALUE=0
+CONFIG_SCHED_DEBUG=y
+# CONFIG_SCHEDSTATS is not set
+CONFIG_TIMER_STATS=y
+# CONFIG_DEBUG_OBJECTS is not set
+# CONFIG_DEBUG_SLAB is not set
+# CONFIG_DEBUG_KMEMLEAK is not set
+# CONFIG_DEBUG_RT_MUTEXES is not set
+# CONFIG_RT_MUTEX_TESTER is not set
+# CONFIG_DEBUG_SPINLOCK is not set
+# CONFIG_DEBUG_MUTEXES is not set
+# CONFIG_DEBUG_LOCK_ALLOC is not set
+# CONFIG_PROVE_LOCKING is not set
+# CONFIG_SPARSE_RCU_POINTER is not set
+# CONFIG_LOCK_STAT is not set
+# CONFIG_DEBUG_ATOMIC_SLEEP is not set
+# CONFIG_DEBUG_LOCKING_API_SELFTESTS is not set
+CONFIG_STACKTRACE=y
+# CONFIG_DEBUG_STACK_USAGE is not set
+# CONFIG_DEBUG_KOBJECT is not set
+# CONFIG_DEBUG_HIGHMEM is not set
+CONFIG_DEBUG_BUGVERBOSE=y
+CONFIG_DEBUG_INFO=y
+# CONFIG_DEBUG_INFO_REDUCED is not set
+# CONFIG_DEBUG_VM is not set
+# CONFIG_DEBUG_VIRTUAL is not set
+# CONFIG_DEBUG_WRITECOUNT is not set
+CONFIG_DEBUG_MEMORY_INIT=y
+# CONFIG_DEBUG_LIST is not set
+# CONFIG_TEST_LIST_SORT is not set
+# CONFIG_DEBUG_SG is not set
+# CONFIG_DEBUG_NOTIFIERS is not set
+# CONFIG_DEBUG_CREDENTIALS is not set
+CONFIG_ARCH_WANT_FRAME_POINTERS=y
+# CONFIG_FRAME_POINTER is not set
+CONFIG_BOOT_PRINTK_DELAY=y
+# CONFIG_RCU_TORTURE_TEST is not set
+CONFIG_RCU_CPU_STALL_TIMEOUT=60
+# CONFIG_RCU_CPU_STALL_INFO is not set
+# CONFIG_RCU_TRACE is not set
+# CONFIG_KPROBES_SANITY_TEST is not set
+# CONFIG_BACKTRACE_SELF_TEST is not set
+# CONFIG_DEBUG_BLOCK_EXT_DEVT is not set
+# CONFIG_DEBUG_FORCE_WEAK_PER_CPU is not set
+# CONFIG_DEBUG_PER_CPU_MAPS is not set
+# CONFIG_LKDTM is not set
+# CONFIG_CPU_NOTIFIER_ERROR_INJECT is not set
+# CONFIG_FAULT_INJECTION is not set
+# CONFIG_LATENCYTOP is not set
+# CONFIG_DEBUG_PAGEALLOC is not set
+CONFIG_USER_STACKTRACE_SUPPORT=y
+CONFIG_NOP_TRACER=y
+CONFIG_HAVE_FUNCTION_TRACER=y
+CONFIG_HAVE_FUNCTION_GRAPH_TRACER=y
+CONFIG_HAVE_FUNCTION_GRAPH_FP_TEST=y
+CONFIG_HAVE_FUNCTION_TRACE_MCOUNT_TEST=y
+CONFIG_HAVE_DYNAMIC_FTRACE=y
+CONFIG_HAVE_FTRACE_MCOUNT_RECORD=y
+CONFIG_HAVE_SYSCALL_TRACEPOINTS=y
+CONFIG_HAVE_C_RECORDMCOUNT=y
+CONFIG_RING_BUFFER=y
+CONFIG_EVENT_TRACING=y
+CONFIG_EVENT_POWER_TRACING_DEPRECATED=y
+CONFIG_CONTEXT_SWITCH_TRACER=y
+CONFIG_RING_BUFFER_ALLOW_SWAP=y
+CONFIG_TRACING=y
+CONFIG_GENERIC_TRACER=y
+CONFIG_TRACING_SUPPORT=y
+CONFIG_FTRACE=y
+# CONFIG_FUNCTION_TRACER is not set
+# CONFIG_IRQSOFF_TRACER is not set
+# CONFIG_SCHED_TRACER is not set
+# CONFIG_FTRACE_SYSCALLS is not set
+CONFIG_BRANCH_PROFILE_NONE=y
+# CONFIG_PROFILE_ANNOTATED_BRANCHES is not set
+# CONFIG_PROFILE_ALL_BRANCHES is not set
+# CONFIG_STACK_TRACER is not set
+CONFIG_BLK_DEV_IO_TRACE=y
+# CONFIG_KPROBE_EVENT is not set
+# CONFIG_FTRACE_STARTUP_TEST is not set
+# CONFIG_MMIOTRACE is not set
+# CONFIG_RING_BUFFER_BENCHMARK is not set
+# CONFIG_PROVIDE_OHCI1394_DMA_INIT is not set
+# CONFIG_FIREWIRE_OHCI_REMOTE_DMA is not set
+# CONFIG_DYNAMIC_DEBUG is not set
+# CONFIG_DMA_API_DEBUG is not set
+# CONFIG_ATOMIC64_SELFTEST is not set
+# CONFIG_ASYNC_RAID6_TEST is not set
+# CONFIG_SAMPLES is not set
+CONFIG_HAVE_ARCH_KGDB=y
+# CONFIG_KGDB is not set
+CONFIG_HAVE_ARCH_KMEMCHECK=y
+# CONFIG_TEST_KSTRTOX is not set
+CONFIG_STRICT_DEVMEM=y
+CONFIG_X86_VERBOSE_BOOTUP=y
+CONFIG_EARLY_PRINTK=y
+# CONFIG_EARLY_PRINTK_DBGP is not set
+# CONFIG_DEBUG_STACKOVERFLOW is not set
+# CONFIG_X86_PTDUMP is not set
+CONFIG_DEBUG_RODATA=y
+# CONFIG_DEBUG_RODATA_TEST is not set
+CONFIG_DEBUG_SET_MODULE_RONX=y
+# CONFIG_DEBUG_NX_TEST is not set
+CONFIG_DOUBLEFAULT=y
+# CONFIG_IOMMU_STRESS is not set
+CONFIG_HAVE_MMIOTRACE_SUPPORT=y
+# CONFIG_X86_DECODER_SELFTEST is not set
+CONFIG_IO_DELAY_TYPE_0X80=0
+CONFIG_IO_DELAY_TYPE_0XED=1
+CONFIG_IO_DELAY_TYPE_UDELAY=2
+CONFIG_IO_DELAY_TYPE_NONE=3
+CONFIG_IO_DELAY_0X80=y
+# CONFIG_IO_DELAY_0XED is not set
+# CONFIG_IO_DELAY_UDELAY is not set
+# CONFIG_IO_DELAY_NONE is not set
+CONFIG_DEFAULT_IO_DELAY_TYPE=0
+# CONFIG_DEBUG_BOOT_PARAMS is not set
+# CONFIG_CPA_DEBUG is not set
+CONFIG_OPTIMIZE_INLINING=y
+# CONFIG_DEBUG_STRICT_USER_COPY_CHECKS is not set
+# CONFIG_DEBUG_NMI_SELFTEST is not set
+
+#
+# Security options
+#
+CONFIG_KEYS=y
+# CONFIG_TRUSTED_KEYS is not set
+# CONFIG_ENCRYPTED_KEYS is not set
+CONFIG_KEYS_DEBUG_PROC_KEYS=y
+# CONFIG_SECURITY_DMESG_RESTRICT is not set
+CONFIG_SECURITY=y
+CONFIG_SECURITYFS=y
+CONFIG_SECURITY_NETWORK=y
+CONFIG_SECURITY_NETWORK_XFRM=y
+CONFIG_SECURITY_PATH=y
+CONFIG_LSM_MMAP_MIN_ADDR=0
+CONFIG_SECURITY_SELINUX=y
+# CONFIG_SECURITY_SELINUX_BOOTPARAM is not set
+# CONFIG_SECURITY_SELINUX_DISABLE is not set
+CONFIG_SECURITY_SELINUX_DEVELOP=y
+CONFIG_SECURITY_SELINUX_AVC_STATS=y
+CONFIG_SECURITY_SELINUX_CHECKREQPROT_VALUE=1
+# CONFIG_SECURITY_SELINUX_POLICYDB_VERSION_MAX is not set
+CONFIG_SECURITY_TOMOYO=y
+CONFIG_SECURITY_TOMOYO_MAX_ACCEPT_ENTRY=2048
+CONFIG_SECURITY_TOMOYO_MAX_AUDIT_LOG=1024
+# CONFIG_SECURITY_TOMOYO_OMIT_USERSPACE_LOADER is not set
+CONFIG_SECURITY_TOMOYO_POLICY_LOADER="/sbin/tomoyo-init"
+CONFIG_SECURITY_TOMOYO_ACTIVATION_TRIGGER="/sbin/init"
+CONFIG_SECURITY_APPARMOR=y
+CONFIG_SECURITY_APPARMOR_BOOTPARAM_VALUE=1
+# CONFIG_SECURITY_YAMA is not set
+# CONFIG_IMA is not set
+# CONFIG_EVM is not set
+# CONFIG_DEFAULT_SECURITY_SELINUX is not set
+# CONFIG_DEFAULT_SECURITY_TOMOYO is not set
+# CONFIG_DEFAULT_SECURITY_APPARMOR is not set
+CONFIG_DEFAULT_SECURITY_DAC=y
+CONFIG_DEFAULT_SECURITY=""
+CONFIG_XOR_BLOCKS=m
+CONFIG_ASYNC_CORE=m
+CONFIG_ASYNC_MEMCPY=m
+CONFIG_ASYNC_XOR=m
+CONFIG_ASYNC_PQ=m
+CONFIG_ASYNC_RAID6_RECOV=m
+CONFIG_ASYNC_TX_DISABLE_PQ_VAL_DMA=y
+CONFIG_ASYNC_TX_DISABLE_XOR_VAL_DMA=y
+CONFIG_CRYPTO=y
+
+#
+# Crypto core or helper
+#
+CONFIG_CRYPTO_FIPS=y
+CONFIG_CRYPTO_ALGAPI=y
+CONFIG_CRYPTO_ALGAPI2=y
+CONFIG_CRYPTO_AEAD=m
+CONFIG_CRYPTO_AEAD2=y
+CONFIG_CRYPTO_BLKCIPHER=m
+CONFIG_CRYPTO_BLKCIPHER2=y
+CONFIG_CRYPTO_HASH=y
+CONFIG_CRYPTO_HASH2=y
+CONFIG_CRYPTO_RNG=m
+CONFIG_CRYPTO_RNG2=y
+CONFIG_CRYPTO_PCOMP=m
+CONFIG_CRYPTO_PCOMP2=y
+CONFIG_CRYPTO_MANAGER=y
+CONFIG_CRYPTO_MANAGER2=y
+# CONFIG_CRYPTO_USER is not set
+# CONFIG_CRYPTO_MANAGER_DISABLE_TESTS is not set
+CONFIG_CRYPTO_GF128MUL=m
+CONFIG_CRYPTO_NULL=m
+CONFIG_CRYPTO_PCRYPT=m
+CONFIG_CRYPTO_WORKQUEUE=y
+CONFIG_CRYPTO_CRYPTD=m
+CONFIG_CRYPTO_AUTHENC=m
+CONFIG_CRYPTO_TEST=m
+
+#
+# Authenticated Encryption with Associated Data
+#
+CONFIG_CRYPTO_CCM=m
+CONFIG_CRYPTO_GCM=m
+CONFIG_CRYPTO_SEQIV=m
+
+#
+# Block modes
+#
+CONFIG_CRYPTO_CBC=m
+CONFIG_CRYPTO_CTR=m
+CONFIG_CRYPTO_CTS=m
+CONFIG_CRYPTO_ECB=m
+CONFIG_CRYPTO_LRW=m
+CONFIG_CRYPTO_PCBC=m
+CONFIG_CRYPTO_XTS=m
+
+#
+# Hash modes
+#
+CONFIG_CRYPTO_HMAC=m
+CONFIG_CRYPTO_XCBC=m
+CONFIG_CRYPTO_VMAC=m
+
+#
+# Digest
+#
+CONFIG_CRYPTO_CRC32C=m
+CONFIG_CRYPTO_CRC32C_INTEL=m
+CONFIG_CRYPTO_GHASH=m
+CONFIG_CRYPTO_MD4=m
+CONFIG_CRYPTO_MD5=y
+CONFIG_CRYPTO_MICHAEL_MIC=m
+CONFIG_CRYPTO_RMD128=m
+CONFIG_CRYPTO_RMD160=m
+CONFIG_CRYPTO_RMD256=m
+CONFIG_CRYPTO_RMD320=m
+CONFIG_CRYPTO_SHA1=m
+CONFIG_CRYPTO_SHA256=m
+CONFIG_CRYPTO_SHA512=m
+CONFIG_CRYPTO_TGR192=m
+CONFIG_CRYPTO_WP512=m
+
+#
+# Ciphers
+#
+CONFIG_CRYPTO_AES=m
+CONFIG_CRYPTO_AES_586=m
+CONFIG_CRYPTO_AES_NI_INTEL=m
+CONFIG_CRYPTO_ANUBIS=m
+CONFIG_CRYPTO_ARC4=m
+CONFIG_CRYPTO_BLOWFISH=m
+CONFIG_CRYPTO_BLOWFISH_COMMON=m
+CONFIG_CRYPTO_CAMELLIA=m
+CONFIG_CRYPTO_CAST5=m
+CONFIG_CRYPTO_CAST6=m
+CONFIG_CRYPTO_DES=m
+CONFIG_CRYPTO_FCRYPT=m
+CONFIG_CRYPTO_KHAZAD=m
+CONFIG_CRYPTO_SALSA20=m
+CONFIG_CRYPTO_SALSA20_586=m
+CONFIG_CRYPTO_SEED=m
+CONFIG_CRYPTO_SERPENT=m
+# CONFIG_CRYPTO_SERPENT_SSE2_586 is not set
+CONFIG_CRYPTO_TEA=m
+CONFIG_CRYPTO_TWOFISH=m
+CONFIG_CRYPTO_TWOFISH_COMMON=m
+CONFIG_CRYPTO_TWOFISH_586=m
+
+#
+# Compression
+#
+CONFIG_CRYPTO_DEFLATE=m
+CONFIG_CRYPTO_ZLIB=m
+CONFIG_CRYPTO_LZO=m
+
+#
+# Random Number Generation
+#
+CONFIG_CRYPTO_ANSI_CPRNG=m
+CONFIG_CRYPTO_USER_API=m
+CONFIG_CRYPTO_USER_API_HASH=m
+CONFIG_CRYPTO_USER_API_SKCIPHER=m
+CONFIG_CRYPTO_HW=y
+CONFIG_CRYPTO_DEV_PADLOCK=m
+CONFIG_CRYPTO_DEV_PADLOCK_AES=m
+CONFIG_CRYPTO_DEV_PADLOCK_SHA=m
+CONFIG_CRYPTO_DEV_GEODE=m
+CONFIG_HAVE_KVM=y
+CONFIG_HAVE_KVM_IRQCHIP=y
+CONFIG_HAVE_KVM_EVENTFD=y
+CONFIG_KVM_APIC_ARCHITECTURE=y
+CONFIG_KVM_MMIO=y
+CONFIG_KVM_ASYNC_PF=y
+CONFIG_VIRTUALIZATION=y
+CONFIG_KVM=m
+CONFIG_KVM_INTEL=m
+CONFIG_KVM_AMD=m
+# CONFIG_KVM_MMU_AUDIT is not set
+CONFIG_VHOST_NET=m
+# CONFIG_LGUEST is not set
+CONFIG_BINARY_PRINTF=y
+
+#
+# Library routines
+#
+CONFIG_RAID6_PQ=m
+CONFIG_BITREVERSE=y
+CONFIG_GENERIC_FIND_FIRST_BIT=y
+CONFIG_GENERIC_PCI_IOMAP=y
+CONFIG_GENERIC_IOMAP=y
+CONFIG_GENERIC_IO=y
+CONFIG_CRC_CCITT=m
+CONFIG_CRC16=m
+CONFIG_CRC_T10DIF=m
+CONFIG_CRC_ITU_T=m
+CONFIG_CRC32=y
+# CONFIG_CRC32_SELFTEST is not set
+CONFIG_CRC32_SLICEBY8=y
+# CONFIG_CRC32_SLICEBY4 is not set
+# CONFIG_CRC32_SARWATE is not set
+# CONFIG_CRC32_BIT is not set
+CONFIG_CRC7=m
+CONFIG_LIBCRC32C=m
+CONFIG_CRC8=m
+CONFIG_AUDIT_GENERIC=y
+CONFIG_ZLIB_INFLATE=y
+CONFIG_ZLIB_DEFLATE=m
+CONFIG_LZO_COMPRESS=y
+CONFIG_LZO_DECOMPRESS=y
+CONFIG_XZ_DEC=y
+CONFIG_XZ_DEC_X86=y
+CONFIG_XZ_DEC_POWERPC=y
+CONFIG_XZ_DEC_IA64=y
+CONFIG_XZ_DEC_ARM=y
+CONFIG_XZ_DEC_ARMTHUMB=y
+CONFIG_XZ_DEC_SPARC=y
+CONFIG_XZ_DEC_BCJ=y
+# CONFIG_XZ_DEC_TEST is not set
+CONFIG_DECOMPRESS_GZIP=y
+CONFIG_DECOMPRESS_BZIP2=y
+CONFIG_DECOMPRESS_LZMA=y
+CONFIG_DECOMPRESS_XZ=y
+CONFIG_DECOMPRESS_LZO=y
+CONFIG_GENERIC_ALLOCATOR=y
+CONFIG_REED_SOLOMON=m
+CONFIG_REED_SOLOMON_DEC16=y
+CONFIG_TEXTSEARCH=y
+CONFIG_TEXTSEARCH_KMP=m
+CONFIG_TEXTSEARCH_BM=m
+CONFIG_TEXTSEARCH_FSM=m
+CONFIG_BTREE=y
+CONFIG_HAS_IOMEM=y
+CONFIG_HAS_IOPORT=y
+CONFIG_HAS_DMA=y
+CONFIG_CHECK_SIGNATURE=y
+CONFIG_CPU_RMAP=y
+CONFIG_DQL=y
+CONFIG_NLATTR=y
+CONFIG_LRU_CACHE=m
+CONFIG_AVERAGE=y
+CONFIG_CORDIC=m
diff -uprN ../linux-3.4.104-vanilla/.version linux-3.4.104-syssec_hw2_app2/.version
--- ../linux-3.4.104-vanilla/.version	1969-12-31 19:00:00.000000000 -0500
+++ linux-3.4.104-syssec_hw2_app2/.version	2014-11-12 22:47:42.000000000 -0500
@@ -0,0 +1 @@
+54
diff -uprN ../linux-3.4.104-vanilla/Module.symvers linux-3.4.104-syssec_hw2_app2/Module.symvers
--- ../linux-3.4.104-vanilla/Module.symvers	1969-12-31 19:00:00.000000000 -0500
+++ linux-3.4.104-syssec_hw2_app2/Module.symvers	2014-11-12 22:48:18.000000000 -0500
@@ -0,0 +1,12218 @@
+0x2978cafd	cfg80211_send_rx_assoc	net/wireless/cfg80211	EXPORT_SYMBOL
+0xe3f0face	iscsi_host_add	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0xb9db457f	pcmcia_reset_card	drivers/pcmcia/pcmcia_core	EXPORT_SYMBOL
+0xc47c22e8	mpt_deregister	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0x5a509f0c	tm6000_set_reg_mask	drivers/media/video/tm6000/tm6000	EXPORT_SYMBOL_GPL
+0x6bbae1e9	sata_pmp_error_handler	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x820a1fd9	kvm_get_cs_db_l_bits	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x9ba0501e	unregister_vt_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0x7389e635	generic_file_splice_write	vmlinux	EXPORT_SYMBOL
+0x3a0522b0	set_anon_super	vmlinux	EXPORT_SYMBOL
+0x8e73465f	kmem_cache_alloc	vmlinux	EXPORT_SYMBOL
+0xafaf4936	replace_page_cache_page	vmlinux	EXPORT_SYMBOL_GPL
+0x70523a7a	__cond_resched_softirq	vmlinux	EXPORT_SYMBOL
+0xd4dbef94	ieee80211_wake_queues	net/mac80211/mac80211	EXPORT_SYMBOL
+0x96cd2b04	scsi_sense_key_string	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xdf8a43a6	i2c_put_adapter	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x5059f7f5	rtc_class_open	vmlinux	EXPORT_SYMBOL_GPL
+0x79c570af	request_firmware	vmlinux	EXPORT_SYMBOL
+0x9869f86c	irq_to_desc	vmlinux	EXPORT_SYMBOL
+0x0a2487e0	unblock_all_signals	vmlinux	EXPORT_SYMBOL
+0x83a3928d	t3_register_cpl_handler	drivers/net/ethernet/chelsio/cxgb3/cxgb3	EXPORT_SYMBOL
+0xcedc2c7c	ib_init_ah_from_path	drivers/infiniband/core/ib_sa	EXPORT_SYMBOL
+0xc5cfa68d	ib_destroy_cm_id	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0x536022b3	ttm_agp_tt_populate	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0xacd1e4e3	dev_uc_sync	vmlinux	EXPORT_SYMBOL
+0x054d2715	dev_mc_sync	vmlinux	EXPORT_SYMBOL
+0x172b0fab	hwmon_device_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x0deb0ade	register_timer_hook	vmlinux	EXPORT_SYMBOL_GPL
+0xfbaaf01e	console_lock	vmlinux	EXPORT_SYMBOL
+0xf7322bc8	pv_time_ops	vmlinux	EXPORT_SYMBOL_GPL
+0x07d50a24	csum_partial	vmlinux	EXPORT_SYMBOL
+0xd70abaaf	cfg80211_wext_siwscan	net/wireless/cfg80211	EXPORT_SYMBOL_GPL
+0x20341baf	cfg80211_wext_giwscan	net/wireless/cfg80211	EXPORT_SYMBOL_GPL
+0x5da7803e	ieee80211_queue_stopped	net/mac80211/mac80211	EXPORT_SYMBOL
+0x9479194f	wpan_phy_find	net/ieee802154/ieee802154	EXPORT_SYMBOL
+0x5d614aa3	o2hb_setup_callback	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0xacbe4662	i2o_driver_register	drivers/message/i2o/i2o_core	EXPORT_SYMBOL
+0xf06c1cc7	unregister_timer_hook	vmlinux	EXPORT_SYMBOL_GPL
+0xc068440e	__kfifo_alloc	vmlinux	EXPORT_SYMBOL
+0xb8d1532a	kmap_atomic	vmlinux	EXPORT_SYMBOL
+0x5fe4b2fa	ceph_pagelist_truncate	net/ceph/libceph	EXPORT_SYMBOL
+0xdb4d9e81	usbip_dump_urb	drivers/staging/usbip/usbip-core	EXPORT_SYMBOL_GPL
+0x8c405285	scsi_execute	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x130a0d8e	iscsi_tcp_r2tpool_free	drivers/scsi/libiscsi_tcp	EXPORT_SYMBOL_GPL
+0x357c347c	rtl_cam_empty_entry	drivers/net/wireless/rtlwifi/rtlwifi	EXPORT_SYMBOL
+0x886fc6dc	videobuf_queue_cancel	drivers/media/video/videobuf-core	EXPORT_SYMBOL_GPL
+0x67826384	avmcard_dma_free	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0xdc3afd05	nf_log_register	vmlinux	EXPORT_SYMBOL
+0x4b60b83c	ps2_end_command	vmlinux	EXPORT_SYMBOL
+0x1b17e06c	kstrtoll	vmlinux	EXPORT_SYMBOL
+0xa8a9169c	proc_net_remove	vmlinux	EXPORT_SYMBOL_GPL
+0x4c0a303d	snd_msnd_dsp_halt	sound/isa/msnd/snd-msnd-lib	EXPORT_SYMBOL
+0x6129b60e	l2tp_session_find_by_ifname	net/l2tp/l2tp_core	EXPORT_SYMBOL_GPL
+0xc8142f0d	sch56xx_watchdog_register	drivers/hwmon/sch56xx-common	EXPORT_SYMBOL
+0x0d5aca31	ttm_bo_wait_unreserved	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x89d34831	raw_seq_open	vmlinux	EXPORT_SYMBOL_GPL
+0x6713ac14	device_add	vmlinux	EXPORT_SYMBOL_GPL
+0xaa641e33	device_del	vmlinux	EXPORT_SYMBOL_GPL
+0xd9091363	acpi_install_notify_handler	vmlinux	EXPORT_SYMBOL
+0x91492aba	crypto_hash_walk_done	vmlinux	EXPORT_SYMBOL_GPL
+0xa4eb4eff	_raw_spin_lock_bh	vmlinux	EXPORT_SYMBOL
+0x3c942368	profile_event_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x89ff43f6	init_uts_ns	vmlinux	EXPORT_SYMBOL_GPL
+0x42a0a78c	snd_pt2258_reset	sound/i2c/other/snd-pt2258	EXPORT_SYMBOL
+0x83b0769e	matroxfb_read_pins	drivers/video/matrox/matroxfb_misc	EXPORT_SYMBOL
+0xd16aa99c	core_tpg_clear_object_luns	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x3132ee65	__nand_calculate_ecc	drivers/mtd/nand/nand_ecc	EXPORT_SYMBOL
+0xca0dee0b	fw_send_request	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0x8e4a4aa3	__inet6_hash	vmlinux	EXPORT_SYMBOL
+0x0f81a6ca	dst_release	vmlinux	EXPORT_SYMBOL
+0xb52e0ff8	sock_no_mmap	vmlinux	EXPORT_SYMBOL
+0xbeee3c58	led_trigger_store	vmlinux	EXPORT_SYMBOL_GPL
+0xc11f20f3	acpi_bus_start	vmlinux	EXPORT_SYMBOL
+0xfdb9b629	ioread32be	vmlinux	EXPORT_SYMBOL
+0xe246f2a0	disk_map_sector_rcu	vmlinux	EXPORT_SYMBOL_GPL
+0x27866435	security_xfrm_state_alloc	vmlinux	EXPORT_SYMBOL
+0x02a4dba5	sysfs_update_group	vmlinux	EXPORT_SYMBOL_GPL
+0xa38602cd	drain_workqueue	vmlinux	EXPORT_SYMBOL_GPL
+0x2d7c7f3a	usb_serial_generic_write_bulk_callback	drivers/usb/serial/usbserial	EXPORT_SYMBOL_GPL
+0xb6e1ee4e	wm8400_block_read	drivers/mfd/wm8400-core	EXPORT_SYMBOL_GPL
+0xa2d9f6fa	v4l2_ctrl_grab	drivers/media/video/videodev	EXPORT_SYMBOL
+0x31b960bc	ata_sff_tf_read	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xc4e599f7	tcp_initialize_rcv_mss	vmlinux	EXPORT_SYMBOL
+0x54e6fcdd	net_enable_timestamp	vmlinux	EXPORT_SYMBOL
+0x8d795f01	sockfd_lookup	vmlinux	EXPORT_SYMBOL
+0x2b58d208	xen_pci_frontend	vmlinux	EXPORT_SYMBOL_GPL
+0x208739f6	acpi_load_table	vmlinux	EXPORT_SYMBOL
+0x9dcb8e7a	fb_validate_mode	vmlinux	EXPORT_SYMBOL
+0xea9855ae	blk_limits_max_hw_sectors	vmlinux	EXPORT_SYMBOL
+0x6bc3fbc0	__unregister_chrdev	vmlinux	EXPORT_SYMBOL
+0xd932b7ea	directly_mappable_cdev_bdi	vmlinux	EXPORT_SYMBOL
+0x0a9b6f0e	srcu_notifier_chain_register	vmlinux	EXPORT_SYMBOL_GPL
+0xb5dea7ef	g_token_size	net/sunrpc/auth_gss/auth_rpcgss	EXPORT_SYMBOL_GPL
+0xafb4f570	ax25_find_cb	net/ax25/ax25	EXPORT_SYMBOL
+0xd8fa57a6	dlm_unregister_eviction_cb	fs/ocfs2/dlm/ocfs2_dlm	EXPORT_SYMBOL_GPL
+0xcb6b7c32	scsi_get_command	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x58d296e1	cxgbi_get_host_param	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0xc68b1319	em28xx_write_reg	drivers/media/video/em28xx/em28xx	EXPORT_SYMBOL_GPL
+0x4e1f6991	tpm_gen_interrupt	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0xea7fe75a	dev_graft_qdisc	vmlinux	EXPORT_SYMBOL
+0xddc4a004	bio_integrity_alloc_bioset	vmlinux	EXPORT_SYMBOL
+0xc0ce2021	insert_vm_struct	vmlinux	EXPORT_SYMBOL
+0x7ff10ccf	raw_notifier_call_chain	vmlinux	EXPORT_SYMBOL_GPL
+0x3d20aa2f	scsi_target_quiesce	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xc25b9fda	sas_eh_device_reset_handler	drivers/scsi/libsas/libsas	EXPORT_SYMBOL_GPL
+0x74f9444a	rt2x00pci_uninitialize	drivers/net/wireless/rt2x00/rt2x00pci	EXPORT_SYMBOL_GPL
+0xce484a69	hostap_handle_sta_tx_exc	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x96022c0f	mlx4_unregister_mac	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xd2335101	drm_fb_get_bpp_depth	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x96d10323	transport_class_register	vmlinux	EXPORT_SYMBOL_GPL
+0x5af03a28	gnttab_claim_grant_reference	vmlinux	EXPORT_SYMBOL_GPL
+0x30cada8f	radix_tree_next_hole	vmlinux	EXPORT_SYMBOL
+0x66d0ee54	vfsmount_lock_global_unlock	vmlinux	EXPORT_SYMBOL
+0x0e9d62ad	snd_emux_terminate_all	sound/synth/emux/snd-emux-synth	EXPORT_SYMBOL
+0xd3c0c368	dccp_ctl_make_reset	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xa131e5cd	jbd2_journal_try_to_free_buffers	fs/jbd2/jbd2	EXPORT_SYMBOL
+0xe903a860	iscsi_conn_setup	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0xcb25aee9	fcoe_ctlr_destroy	drivers/scsi/fcoe/libfcoe	EXPORT_SYMBOL
+0xa5bb494d	mpt_free_fw_memory	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0x490d6298	dib8000_ctrl_timf	drivers/media/dvb/frontends/dib8000	EXPORT_SYMBOL
+0x6c6226df	dm_get_device	drivers/md/dm-mod	EXPORT_SYMBOL
+0xbb7fb680	dm_put_device	drivers/md/dm-mod	EXPORT_SYMBOL
+0xd8c42bd0	input_handler_for_each_handle	vmlinux	EXPORT_SYMBOL
+0x55e8d92e	transport_class_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x65f3ad9a	fb_videomode_to_var	vmlinux	EXPORT_SYMBOL
+0x2da418b5	copy_to_user	vmlinux	EXPORT_SYMBOL
+0xffd5a395	default_wake_function	vmlinux	EXPORT_SYMBOL
+0x0676e1dd	cmp_connection_init	sound/firewire/snd-firewire-lib	EXPORT_SYMBOL
+0x4dd81dd7	nf_nat_sdp_port_hook	net/netfilter/nf_conntrack_sip	EXPORT_SYMBOL_GPL
+0xb0a52c3a	p9_client_statfs	net/9p/9pnet	EXPORT_SYMBOL
+0xafd10fba	fc_remote_port_add	drivers/scsi/scsi_transport_fc	EXPORT_SYMBOL
+0x42950cd1	z8530_channel_load	drivers/net/wan/z85230	EXPORT_SYMBOL
+0x928f021e	sdhci_runtime_suspend_host	drivers/mmc/host/sdhci	EXPORT_SYMBOL_GPL
+0xc68a5bd8	videobuf_dma_init_overlay	drivers/media/video/videobuf-dma-sg	EXPORT_SYMBOL_GPL
+0x7d053fc5	dm_rh_start_recovery	drivers/md/dm-region-hash	EXPORT_SYMBOL_GPL
+0x2348cc3c	mISDN_FsmFree	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0xcc404922	ttm_suspend_lock	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0xaa54231f	drm_mm_clean	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xe052a6fd	dev_attr_link_power_management_policy	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x7618c9a9	agp_free_page_array	vmlinux	EXPORT_SYMBOL
+0xb718f2f9	sfi_table_parse	vmlinux	EXPORT_SYMBOL_GPL
+0x4c377360	pci_bus_read_config_byte	vmlinux	EXPORT_SYMBOL
+0x7f09eb30	mount_subtree	vmlinux	EXPORT_SYMBOL
+0xf61e7ea8	iget_locked	vmlinux	EXPORT_SYMBOL
+0x7c28028f	snd_akm4xxx_init	sound/i2c/other/snd-ak4xxx-adda	EXPORT_SYMBOL
+0x0947d3fc	osduld_device_info	drivers/scsi/osd/osd	EXPORT_SYMBOL
+0x45e060dc	hostap_info_process	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x5ca5d0d5	sock_get_timestampns	vmlinux	EXPORT_SYMBOL
+0x6d9add19	class_interface_register	vmlinux	EXPORT_SYMBOL_GPL
+0xa4b94fea	iowrite8_rep	vmlinux	EXPORT_SYMBOL
+0x557e3d3d	key_type_keyring	vmlinux	EXPORT_SYMBOL
+0x8b66f9e0	xen_platform_pci_unplug	vmlinux	EXPORT_SYMBOL_GPL
+0x027cf60e	sas_release_transport	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL
+0x27453847	rt2800_rfkill_poll	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0x9d2c7b2f	ir_raw_event_handle	drivers/media/rc/rc-core	EXPORT_SYMBOL_GPL
+0x14218e2b	rc_keyup	drivers/media/rc/rc-core	EXPORT_SYMBOL_GPL
+0xe9a874f9	dib8096p_get_i2c_tuner	drivers/media/dvb/frontends/dib8000	EXPORT_SYMBOL
+0xe8e78a1f	spi_get_device_id	vmlinux	EXPORT_SYMBOL_GPL
+0xbd3df93d	class_interface_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x73a903c4	vfsmount_lock_local_lock	vmlinux	EXPORT_SYMBOL
+0xa9c530b8	unregister_oom_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0x3cd1589d	snd_power_wait	sound/core/snd	EXPORT_SYMBOL
+0x2eec63c9	xdr_encode_netobj	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xccd06433	xdr_decode_word	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xc64eb2b9	w1_unregister_family	drivers/w1/wire	EXPORT_SYMBOL
+0xf01621c7	transport_set_vpd_proto_id	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x454c4789	wl1251_free_hw	drivers/net/wireless/wl1251/wl1251	EXPORT_SYMBOL_GPL
+0x2e130711	mwifiex_add_virtual_intf	drivers/net/wireless/mwifiex/mwifiex	EXPORT_SYMBOL_GPL
+0x3f836b0c	alloc_sja1000dev	drivers/net/can/sja1000/sja1000	EXPORT_SYMBOL_GPL
+0x494f0b6e	mptscsih_scandv_complete	drivers/message/fusion/mptscsih	EXPORT_SYMBOL
+0xfc43b889	tpm_write	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x31dc20c1	tcp_v4_md5_lookup	vmlinux	EXPORT_SYMBOL
+0xd0effb61	tty_register_device	vmlinux	EXPORT_SYMBOL
+0x44366cfc	simple_write_to_buffer	vmlinux	EXPORT_SYMBOL
+0xd890aee2	__srcu_read_unlock	vmlinux	EXPORT_SYMBOL_GPL
+0xc2e587d1	reset_devices	vmlinux	EXPORT_SYMBOL
+0x396f0053	ircomm_disconnect_request	net/irda/ircomm/ircomm	EXPORT_SYMBOL
+0x2d61fea7	uwb_rc_rm	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0x52068b8e	usb_bus_list_lock	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x8740ffa5	i2400m_error_recovery	drivers/net/wimax/i2400m/i2400m	EXPORT_SYMBOL_GPL
+0x288373b2	mmc_app_cmd	drivers/mmc/core/mmc_core	EXPORT_SYMBOL_GPL
+0x8b35e873	sg_last	vmlinux	EXPORT_SYMBOL
+0x8235805b	memmove	vmlinux	EXPORT_SYMBOL
+0x4f64e23c	__blk_run_queue	vmlinux	EXPORT_SYMBOL
+0xc10f2b8e	cgroup_unlock	vmlinux	EXPORT_SYMBOL_GPL
+0x3eaf291d	param_get_string	vmlinux	EXPORT_SYMBOL
+0xac0c02d0	rpc_d_lookup_sb	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xd21984df	ieee802154_nl_scan_confirm	net/ieee802154/ieee802154	EXPORT_SYMBOL
+0x752929cf	jbd2_journal_start_commit	fs/jbd2/jbd2	EXPORT_SYMBOL
+0x9ddba9e9	osd_execute_request_async	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0x470dc4bc	rtl92c_phy_iq_calibrate	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0x84dfa23d	rtl92c_phy_ap_calibrate	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0x7797d11a	stv0288_attach	drivers/media/dvb/frontends/stv0288	EXPORT_SYMBOL
+0xced0ebc4	dibusb_i2c_algo	drivers/media/dvb/dvb-usb/dvb-usb-dibusb-common	EXPORT_SYMBOL
+0x83c82dd4	tpm_pm_resume	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0xa298f13f	dmam_declare_coherent_memory	vmlinux	EXPORT_SYMBOL
+0x4e9026ca	__block_page_mkwrite	vmlinux	EXPORT_SYMBOL
+0x76d3cd60	laptop_mode	vmlinux	EXPORT_SYMBOL
+0x72bb2097	end_page_writeback	vmlinux	EXPORT_SYMBOL
+0xb8e8e438	generic_file_direct_write	vmlinux	EXPORT_SYMBOL
+0x50f5e532	call_rcu_sched	vmlinux	EXPORT_SYMBOL_GPL
+0xb77d5a3b	snd_gus_dram_read	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0x242852b9	ax25_uid_policy	net/ax25/ax25	EXPORT_SYMBOL
+0x3cb1dfe1	usbnet_cdc_unbind	drivers/net/usb/cdc_ether	EXPORT_SYMBOL_GPL
+0x23ef9d2d	drm_agp_enable	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x9129ef81	skb_recv_datagram	vmlinux	EXPORT_SYMBOL
+0x62579b2d	d_alloc_pseudo	vmlinux	EXPORT_SYMBOL
+0x871c0a7e	fiemap_check_flags	vmlinux	EXPORT_SYMBOL
+0xc14d608b	generic_file_readonly_mmap	vmlinux	EXPORT_SYMBOL
+0x5d730e7b	raw_notifier_chain_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x6c82352c	usb_autopm_get_interface	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x2bed0338	pcmcia_map_mem_page	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0x0ad69602	hostap_set_multicast_list_queue	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0xeda612c2	phy_device_register	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x3e9ad248	sdhci_suspend_host	drivers/mmc/host/sdhci	EXPORT_SYMBOL_GPL
+0xb47559e0	rc_map_dibusb_table	drivers/media/dvb/dvb-usb/dvb-usb-dibusb-common	EXPORT_SYMBOL
+0x4ca0a090	ttm_dma_tt_fini	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x0d542439	__ipv6_addr_type	vmlinux	EXPORT_SYMBOL
+0xe0d5c64c	unregister_qdisc	vmlinux	EXPORT_SYMBOL
+0x40d49764	acpi_pci_find_root	vmlinux	EXPORT_SYMBOL_GPL
+0x7ef00acb	pci_map_rom	vmlinux	EXPORT_SYMBOL
+0x8933728a	crypto_shash_final	vmlinux	EXPORT_SYMBOL_GPL
+0x3cd2ba9a	crypto_shash_finup	vmlinux	EXPORT_SYMBOL_GPL
+0xb1ed7445	crypto_ahash_final	vmlinux	EXPORT_SYMBOL_GPL
+0xae6ce15d	crypto_ahash_finup	vmlinux	EXPORT_SYMBOL_GPL
+0x32924a4d	scatterwalk_copychunks	vmlinux	EXPORT_SYMBOL_GPL
+0xe805a7a9	snd_hda_get_sub_nodes	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xf9d1164c	rpc_free	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xbac30ec9	can_rx_unregister	net/can/can	EXPORT_SYMBOL
+0xae7978e0	hci_find_ltk_by_addr	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x1617c5e8	ni_tio_cmdtest	drivers/staging/comedi/drivers/ni_tiocmd	EXPORT_SYMBOL_GPL
+0xaf561e47	fc_vport_terminate	drivers/scsi/scsi_transport_fc	EXPORT_SYMBOL
+0x232b5238	mxm_wmi_supported	drivers/platform/x86/mxm-wmi	EXPORT_SYMBOL_GPL
+0x46c72c93	mlx4_multicast_detach	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x171f99f1	ib_rate_to_mult	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x14f84918	ib_rate_to_mbps	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x03f0be5d	acpi_video_get_edid	drivers/acpi/video	EXPORT_SYMBOL
+0xb8440c34	sock_diag_put_meminfo	vmlinux	EXPORT_SYMBOL_GPL
+0xf88e0ee2	acpi_get_table_header	vmlinux	EXPORT_SYMBOL
+0x960ac6c9	vm_insert_page	vmlinux	EXPORT_SYMBOL
+0x78aa0672	register_console	vmlinux	EXPORT_SYMBOL
+0xa8b82a53	xen_destroy_contiguous_region	vmlinux	EXPORT_SYMBOL_GPL
+0x645356c0	snd_gf1_write_addr	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0xe7c44b83	nf_conntrack_l4proto_tcp4	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x928387ac	transport_complete_task	drivers/target/target_core_mod	EXPORT_SYMBOL
+0xe36c6b7b	transport_generic_handle_cdb_map	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x0a5fe50f	free_orinocodev	drivers/net/wireless/orinoco/orinoco	EXPORT_SYMBOL
+0x94632f90	v4l_fill_dv_preset_info	drivers/media/video/v4l2-common	EXPORT_SYMBOL_GPL
+0xc19a565e	b1dma_reset_ctr	drivers/isdn/hardware/avm/b1dma	EXPORT_SYMBOL
+0x977e288b	ata_pci_bmdma_init_one	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x92aefa86	sock_no_socketpair	vmlinux	EXPORT_SYMBOL
+0x13165f66	input_ff_event	vmlinux	EXPORT_SYMBOL_GPL
+0x5ed7c652	xenbus_unmap_ring	vmlinux	EXPORT_SYMBOL_GPL
+0x110106c1	cper_severity_to_aer	vmlinux	EXPORT_SYMBOL_GPL
+0x1d857dc6	devm_gpio_request	vmlinux	EXPORT_SYMBOL
+0xc43a5527	snd_gf1_atten_table	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0xc157ad58	arpt_do_table	net/ipv4/netfilter/arp_tables	EXPORT_SYMBOL
+0x22df866c	nfs_retry_commit	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0xdcb75fcd	iscsi_is_session_online	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0x2250c66e	mraid_mm_adapter_app_handle	drivers/scsi/megaraid/megaraid_mm	EXPORT_SYMBOL
+0xf95cb58c	wm97xx_set_suspend_mode	drivers/input/touchscreen/wm97xx-ts	EXPORT_SYMBOL_GPL
+0xbc2031de	acpi_processor_get_bios_limit	drivers/acpi/processor	EXPORT_SYMBOL
+0xffef38c3	async_tx_submit	crypto/async_tx/async_tx	EXPORT_SYMBOL_GPL
+0xd5a2541c	dev_addr_del	vmlinux	EXPORT_SYMBOL
+0xef88d5c7	gnet_stats_start_copy	vmlinux	EXPORT_SYMBOL
+0x33f0768c	cpufreq_quick_get_max	vmlinux	EXPORT_SYMBOL
+0x2bfeb410	acpi_get_handle	vmlinux	EXPORT_SYMBOL
+0xe2c6bb26	unregister_atmdevice_notifier	net/atm/atm	EXPORT_SYMBOL_GPL
+0xb7579311	__fat_fs_error	fs/fat/fat	EXPORT_SYMBOL_GPL
+0x3688c3ee	i2c_lock_adapter	drivers/i2c/i2c-core	EXPORT_SYMBOL_GPL
+0x71938019	tcp_tso_segment	vmlinux	EXPORT_SYMBOL
+0x8c5dd5c3	platform_device_put	vmlinux	EXPORT_SYMBOL_GPL
+0x2533e441	platform_device_del	vmlinux	EXPORT_SYMBOL_GPL
+0x89b54089	xenbus_dev_shutdown	vmlinux	EXPORT_SYMBOL_GPL
+0x02f00ffa	free_xenballooned_pages	vmlinux	EXPORT_SYMBOL
+0x1382165f	bio_copy_kern	vmlinux	EXPORT_SYMBOL
+0xe0878bfe	__krealloc	vmlinux	EXPORT_SYMBOL
+0xca442469	devm_free_irq	vmlinux	EXPORT_SYMBOL
+0x995d1071	prof_on	vmlinux	EXPORT_SYMBOL_GPL
+0xae81c993	task_nice	vmlinux	EXPORT_SYMBOL
+0x381ccc13	__kfifo_dma_in_prepare_r	vmlinux	EXPORT_SYMBOL
+0x3f630353	snd_vx_resume	sound/drivers/vx/snd-vx-lib	EXPORT_SYMBOL
+0xc2e133ae	rpc_exit	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x6d2d06a1	ceph_pagelist_reserve	net/ceph/libceph	EXPORT_SYMBOL
+0x83af8eb2	hostap_check_sta_fw_version	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x71e8d5ba	capilib_data_b3_req	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0xed532747	kernel_accept	vmlinux	EXPORT_SYMBOL
+0xfcac0d40	acpi_install_interface_handler	vmlinux	EXPORT_SYMBOL
+0xcc3da32d	aer_recover_queue	vmlinux	EXPORT_SYMBOL_GPL
+0xcc4bb90f	pcim_iounmap	vmlinux	EXPORT_SYMBOL
+0x7c26b5a4	kset_create_and_add	vmlinux	EXPORT_SYMBOL_GPL
+0xa7aae053	mm_kobj	vmlinux	EXPORT_SYMBOL_GPL
+0x81031a52	set_bdi_congested	vmlinux	EXPORT_SYMBOL
+0xec979ae9	xt_proto_fini	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0x90971c43	usb_gadget_map_request	drivers/usb/gadget/udc-core	EXPORT_SYMBOL_GPL
+0x62a50122	synth_remove	drivers/staging/speakup/speakup	EXPORT_SYMBOL_GPL
+0xd04584f8	mlx4_mr_enable	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x5b4d8f9b	sata_scr_write_flush	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x5efd0cf9	wakeup_source_drop	vmlinux	EXPORT_SYMBOL_GPL
+0x1f0cac94	driver_find	vmlinux	EXPORT_SYMBOL_GPL
+0x85f33532	sg_miter_start	vmlinux	EXPORT_SYMBOL
+0x8d4af759	blk_queue_unprep_rq	vmlinux	EXPORT_SYMBOL
+0x491a3e8e	lock_may_read	vmlinux	EXPORT_SYMBOL
+0x56d697ce	cpu_up	vmlinux	EXPORT_SYMBOL_GPL
+0xbb58b814	iomap_free	vmlinux	EXPORT_SYMBOL_GPL
+0x7bb69640	snd_card_free	sound/core/snd	EXPORT_SYMBOL
+0x99b6f1c7	whci_wait_for	drivers/uwb/whci	EXPORT_SYMBOL_GPL
+0x90cb655d	fc_block_scsi_eh	drivers/scsi/scsi_transport_fc	EXPORT_SYMBOL
+0xa7ffe59a	ath9k_hw_disable_interrupts	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x104dc486	iw_create_cm_id	drivers/infiniband/core/iw_cm	EXPORT_SYMBOL
+0x09fc397e	dma_buf_map_attachment	vmlinux	EXPORT_SYMBOL_GPL
+0x56da5944	tty_mode_ioctl	vmlinux	EXPORT_SYMBOL_GPL
+0x7b2b824d	pnp_stop_dev	vmlinux	EXPORT_SYMBOL
+0x5fe6ff1e	fb_class	vmlinux	EXPORT_SYMBOL
+0xabad9993	cpci_hp_register_controller	vmlinux	EXPORT_SYMBOL_GPL
+0x8bc57cf2	load_nls	vmlinux	EXPORT_SYMBOL
+0xeb9dd90c	padata_add_cpu	vmlinux	EXPORT_SYMBOL
+0x97999817	rfkill_set_hw_state	net/rfkill/rfkill	EXPORT_SYMBOL
+0xeff3732b	ehci_cf_port_reset_rwsem	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x173c99bc	target_fabric_configfs_free	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x0c65e73c	scsi_normalize_sense	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x79290dbc	rt2x00lib_txdone_noinfo	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x8c96f27b	dm_exception_store_destroy	drivers/md/dm-snapshot	EXPORT_SYMBOL
+0xfedb78e1	input_unregister_polled_device	drivers/input/input-polldev	EXPORT_SYMBOL
+0x96ce6c46	rdma_node_get_transport	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xb95278fb	drm_mode_connector_detach_encoder	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x118bae8c	ata_link_offline	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x09fa2dd3	ata_host_suspend	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x4859b8bb	rtc_year_days	vmlinux	EXPORT_SYMBOL
+0x7669cc2e	__pm_runtime_use_autosuspend	vmlinux	EXPORT_SYMBOL_GPL
+0xcb66ecd5	crypto_lookup_aead	vmlinux	EXPORT_SYMBOL_GPL
+0x6cd45716	delete_node_tpd	vmlinux	EXPORT_SYMBOL
+0x121ed3f3	add_timer_on	vmlinux	EXPORT_SYMBOL_GPL
+0x54c00e35	snd_hda_mixer_amp_volume_get	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xe9082a1b	ceph_osdc_alloc_request	net/ceph/libceph	EXPORT_SYMBOL
+0xbcc3792e	wusbhc_giveback_urb	drivers/usb/wusbcore/wusbcore	EXPORT_SYMBOL_GPL
+0xb4a56ee5	usb_wwan_open	drivers/usb/serial/usb_wwan	EXPORT_SYMBOL
+0x798df091	pcmcia_unregister_socket	drivers/pcmcia/pcmcia_core	EXPORT_SYMBOL
+0x0fc3d84e	register_pppox_proto	drivers/net/ppp/pppox	EXPORT_SYMBOL
+0x98bb5a22	eeprom_93cx6_read	drivers/misc/eeprom/eeprom_93cx6	EXPORT_SYMBOL_GPL
+0x44cc9c55	klist_iter_exit	vmlinux	EXPORT_SYMBOL_GPL
+0xe0ee6a2a	ip6_local_out	vmlinux	EXPORT_SYMBOL_GPL
+0xc49df089	pm_runtime_set_autosuspend_delay	vmlinux	EXPORT_SYMBOL_GPL
+0xfb6eedf9	power_group_name	vmlinux	EXPORT_SYMBOL_GPL
+0x66ca4d50	pci_slots_kset	vmlinux	EXPORT_SYMBOL_GPL
+0x215ebd78	bitrev16	vmlinux	EXPORT_SYMBOL
+0x9a74417e	kstrtoull_from_user	vmlinux	EXPORT_SYMBOL
+0x390def22	kstrtou16_from_user	vmlinux	EXPORT_SYMBOL
+0x72b243d4	free_dma	vmlinux	EXPORT_SYMBOL
+0xa0a3b21f	snd_pcm_new_internal	sound/core/snd-pcm	EXPORT_SYMBOL
+0x751897a2	xdr_init_decode	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x6cdf5ed3	nfs_remove_bad_delegation	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0x37079358	jbd2_journal_load	fs/jbd2/jbd2	EXPORT_SYMBOL
+0xfed11ed1	usb_mon_deregister	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xc21a961d	scsi_is_sas_rphy	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL
+0x5d0bad25	v4l2_i2c_new_subdev	drivers/media/video/v4l2-common	EXPORT_SYMBOL_GPL
+0x208858a8	cx231xx_dev_uninit	drivers/media/video/cx231xx/cx231xx	EXPORT_SYMBOL_GPL
+0xfab402b8	cx24123_attach	drivers/media/dvb/frontends/cx24123	EXPORT_SYMBOL
+0xe6a2f879	md_raid5_congested	drivers/md/raid456	EXPORT_SYMBOL_GPL
+0xea7e1f16	md_raid1_congested	drivers/md/raid1	EXPORT_SYMBOL_GPL
+0xad74eec5	md_check_no_bitmap	drivers/md/md-mod	EXPORT_SYMBOL
+0xc4251181	queue_ch_frame	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0x43f13307	gigaset_skb_rcvd	drivers/isdn/gigaset/gigaset	EXPORT_SYMBOL_GPL
+0x0a762e63	ib_sa_path_rec_get	drivers/infiniband/core/ib_sa	EXPORT_SYMBOL
+0xdc5c0320	device_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0xf7893a62	crypto_aead_type	vmlinux	EXPORT_SYMBOL_GPL
+0xdfcd4bd1	ezusb_set_reset	drivers/usb/serial/usbserial	EXPORT_SYMBOL_GPL
+0x7e45a745	il_power_initialize	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x1a8ad5e6	il_setup_watchdog	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xe3c4e8bc	mmc_cleanup_queue	drivers/mmc/card/mmc_block	EXPORT_SYMBOL
+0x0bba7907	videobuf_mmap_free	drivers/media/video/videobuf-core	EXPORT_SYMBOL_GPL
+0x09ef6c4e	kvm_requeue_exception	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x8773e9bd	iw_handler_set_thrspy	vmlinux	EXPORT_SYMBOL
+0xcf749337	xfrm_state_add	vmlinux	EXPORT_SYMBOL
+0xff5a8cfe	cn_del_callback	vmlinux	EXPORT_SYMBOL_GPL
+0xda3a7ca9	regulator_is_enabled	vmlinux	EXPORT_SYMBOL_GPL
+0x4c16f764	btree_remove	vmlinux	EXPORT_SYMBOL_GPL
+0xe68ddc9d	nf_ct_l3proto_put	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xcc180696	nf_ct_l4proto_put	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xc94f4c28	p9_client_lock_dotl	net/9p/9pnet	EXPORT_SYMBOL
+0x94845f54	uwb_pal_init	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0x75aad15b	usb_serial_deregister_drivers	drivers/usb/serial/usbserial	EXPORT_SYMBOL_GPL
+0xaeaa4df8	scsicam_bios_param	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xa77ef381	il_hdl_spectrum_measurement	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xebaef8e5	dvb_register_device	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0x14adc519	drm_fill_in_dev	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xf81ac6e7	kvm_set_page_dirty	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xbc039bd1	single_release_net	vmlinux	EXPORT_SYMBOL_GPL
+0xc46d0cbe	I_BDEV	vmlinux	EXPORT_SYMBOL
+0x74abdafa	task_handoff_register	vmlinux	EXPORT_SYMBOL_GPL
+0xe3bc7fd4	hpet_unregister_irq_handler	vmlinux	EXPORT_SYMBOL_GPL
+0xbbdbec4b	ssb_commit_settings	drivers/ssb/ssb	EXPORT_SYMBOL
+0x89bfe402	rt2x00usb_vendor_request	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0x7948c222	budget_debug	drivers/media/dvb/ttpci/budget-core	EXPORT_SYMBOL_GPL
+0x59fb7c10	tty_port_tty_get	vmlinux	EXPORT_SYMBOL
+0x3ec70ab6	tty_port_tty_set	vmlinux	EXPORT_SYMBOL
+0x3624576c	devm_regulator_get	vmlinux	EXPORT_SYMBOL_GPL
+0x833c03aa	acpi_enable_all_runtime_gpes	vmlinux	EXPORT_SYMBOL
+0x3441c3d6	gpio_set_value_cansleep	vmlinux	EXPORT_SYMBOL_GPL
+0x4f1cd128	security_tun_dev_create	vmlinux	EXPORT_SYMBOL
+0xcd06875f	seq_release_net	vmlinux	EXPORT_SYMBOL_GPL
+0xdcaadb3f	phy_stop_interrupts	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x4fa5cb5b	inet_csk_route_child_sock	vmlinux	EXPORT_SYMBOL_GPL
+0x8956aeae	apei_exec_ctx_init	vmlinux	EXPORT_SYMBOL_GPL
+0x41c75232	vfs_path_lookup	vmlinux	EXPORT_SYMBOL
+0xe00d9f89	find_or_create_page	vmlinux	EXPORT_SYMBOL
+0x65bbbc78	schedule_hrtimeout_range	vmlinux	EXPORT_SYMBOL_GPL
+0xcd9569c4	qtree_release_dquot	fs/quota/quota_tree	EXPORT_SYMBOL
+0x1081aa92	jbd2_journal_flush	fs/jbd2/jbd2	EXPORT_SYMBOL
+0xcfb4362c	usb_sg_init	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x588296b1	usb_sg_wait	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x3385a398	synth_add	drivers/staging/speakup/speakup	EXPORT_SYMBOL_GPL
+0xe956d980	sas_phy_add	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL
+0xd8d907ac	scsi_reset_provider	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x9b5ad73b	rt2x00lib_dmastart	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x637b1f72	gigaset_start	drivers/isdn/gigaset/gigaset	EXPORT_SYMBOL_GPL
+0x8a086add	ttm_bo_reserve	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x5d74dbcf	pnp_range_reserved	vmlinux	EXPORT_SYMBOL
+0x589e96bd	crypto_register_pcomp	vmlinux	EXPORT_SYMBOL_GPL
+0x0bbeeadb	invalidate_bdev	vmlinux	EXPORT_SYMBOL
+0x9aeacb87	ring_buffer_iter_empty	vmlinux	EXPORT_SYMBOL_GPL
+0x8790c466	snd_hda_delete_codec_preset	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x81fff2d1	ip_set_netmask_map	net/netfilter/ipset/ip_set	EXPORT_SYMBOL_GPL
+0xfda3ec7a	ip_set_put_byindex	net/netfilter/ipset/ip_set	EXPORT_SYMBOL_GPL
+0x658d1542	ceph_put_page_vector	net/ceph/libceph	EXPORT_SYMBOL
+0x544105e6	p9_client_fsync	net/9p/9pnet	EXPORT_SYMBOL
+0x11267875	scsi_extd_sense_format	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x6ef54451	rt2x00usb_disable_radio	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0x0f934475	mdio45_ethtool_gset_npage	drivers/net/mdio	EXPORT_SYMBOL
+0x15c388df	mmc_try_claim_host	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0xd9a92a75	mpt_reset_deregister	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0xe1372311	acpi_smbus_write	drivers/acpi/sbshc	EXPORT_SYMBOL_GPL
+0xbd3344da	tcp_twsk_unique	vmlinux	EXPORT_SYMBOL_GPL
+0xe4d4b24c	netdev_info	vmlinux	EXPORT_SYMBOL
+0x7a2436d0	pm_wakeup_event	vmlinux	EXPORT_SYMBOL_GPL
+0x6c61ce70	num_registered_fb	vmlinux	EXPORT_SYMBOL
+0x37888cf6	kobject_uevent	vmlinux	EXPORT_SYMBOL_GPL
+0x6f780160	xdr_buf_from_iov	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x8af69a83	__orinoco_ev_info	drivers/net/wireless/orinoco/orinoco	EXPORT_SYMBOL
+0x76aa72a2	xfrm_tmpl_sort	vmlinux	EXPORT_SYMBOL
+0x7b880073	wakeup_source_add	vmlinux	EXPORT_SYMBOL_GPL
+0x47f1cf4e	pci_bus_write_config_dword	vmlinux	EXPORT_SYMBOL
+0x92d4bf61	snd_pcm_lib_default_mmap	sound/core/snd-pcm	EXPORT_SYMBOL_GPL
+0x6e39e128	parport_wait_peripheral	drivers/parport/parport	EXPORT_SYMBOL
+0xd4ffebf0	z8530_interrupt	drivers/net/wan/z85230	EXPORT_SYMBOL
+0xe4d7721e	__dev_printk	vmlinux	EXPORT_SYMBOL
+0x3d2886d1	tty_hung_up_p	vmlinux	EXPORT_SYMBOL
+0x4e21999c	acpi_get_child	vmlinux	EXPORT_SYMBOL
+0x99a9f225	blk_cleanup_queue	vmlinux	EXPORT_SYMBOL
+0xc772904d	generic_setlease	vmlinux	EXPORT_SYMBOL
+0x8b735283	wiphy_to_ieee80211_hw	net/mac80211/mac80211	EXPORT_SYMBOL
+0x13aa8131	usb_ftdi_elan_edset_setup	drivers/usb/misc/ftdi-elan	EXPORT_SYMBOL_GPL
+0xdc047fc4	scsi_dev_info_list_add_keyed	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x0650e1b3	il_set_decrypted_flag	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xadfba754	ath9k_hw_setmcastfilter	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x93928c7b	mpt_GetIocState	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0xa172cee1	roccat_connect	drivers/hid/hid-roccat	EXPORT_SYMBOL_GPL
+0x1bcc7e45	ipv6_getsockopt	vmlinux	EXPORT_SYMBOL
+0x9994c0ca	ps2_is_keyboard_id	vmlinux	EXPORT_SYMBOL
+0xdc97af2e	syscore_suspend	vmlinux	EXPORT_SYMBOL_GPL
+0x957f9287	acpi_walk_resources	vmlinux	EXPORT_SYMBOL
+0xea02eb4c	pcim_enable_device	vmlinux	EXPORT_SYMBOL
+0x044dae08	timerqueue_del	vmlinux	EXPORT_SYMBOL_GPL
+0x85d7edfd	hpet_set_periodic_freq	vmlinux	EXPORT_SYMBOL_GPL
+0xedb73dd6	usb_driver_release_interface	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x42d8bb0a	v4l2_i2c_new_subdev_board	drivers/media/video/v4l2-common	EXPORT_SYMBOL_GPL
+0xeb9abbee	ata_sff_queue_work	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xf6e874f5	ata_timing_merge	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xb176d623	swiotlb_unmap_sg	vmlinux	EXPORT_SYMBOL
+0xe8cff0d2	mpage_writepages	vmlinux	EXPORT_SYMBOL
+0x9c5f3233	write_one_page	vmlinux	EXPORT_SYMBOL
+0x32b31a8c	ktime_get_boottime	vmlinux	EXPORT_SYMBOL_GPL
+0x15892417	async_synchronize_cookie	vmlinux	EXPORT_SYMBOL_GPL
+0x4ab44872	cfg80211_notify_new_peer_candidate	net/wireless/cfg80211	EXPORT_SYMBOL
+0x87b82b77	o2nm_node_get	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0x57933755	nlmsvc_ops	fs/lockd/lockd	EXPORT_SYMBOL_GPL
+0x50a756be	virtqueue_enable_cb_delayed	drivers/virtio/virtio_ring	EXPORT_SYMBOL_GPL
+0x8ed71c30	lis3lv02d_joystick_disable	drivers/misc/lis3lv02d/lis3lv02d	EXPORT_SYMBOL_GPL
+0x6dd88b06	dib7000p_ctrl_timf	drivers/media/dvb/frontends/dib7000p	EXPORT_SYMBOL
+0xeeb9d125	ata_host_activate	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x2aa90b54	inet_add_protocol	vmlinux	EXPORT_SYMBOL
+0x2e52bf61	n_tty_ioctl_helper	vmlinux	EXPORT_SYMBOL
+0xa9b781de	pnp_find_dev	vmlinux	EXPORT_SYMBOL
+0xefe099c3	acpi_get_event_status	vmlinux	EXPORT_SYMBOL
+0x7f8cb5e8	sync_blockdev	vmlinux	EXPORT_SYMBOL
+0x84d97d5d	nobh_write_end	vmlinux	EXPORT_SYMBOL
+0x85b5e625	rfkill_set_states	net/rfkill/rfkill	EXPORT_SYMBOL
+0x99e43b57	ore_get_rw_state	fs/exofs/libore	EXPORT_SYMBOL
+0xe0f8d497	ore_get_io_state	fs/exofs/libore	EXPORT_SYMBOL
+0x70b937b5	wusbhc_handle_dn	drivers/usb/wusbcore/wusbcore	EXPORT_SYMBOL_GPL
+0xdb2044b2	range_unipolar5	drivers/staging/comedi/comedi	EXPORT_SYMBOL
+0x68b630a2	can_put_echo_skb	drivers/net/can/can-dev	EXPORT_SYMBOL_GPL
+0x4d6266f9	sdhci_alloc_host	drivers/mmc/host/sdhci	EXPORT_SYMBOL_GPL
+0x811c3d99	dibusb_rc_query	drivers/media/dvb/dvb-usb/dvb-usb-dibusb-common	EXPORT_SYMBOL
+0x8a4e99fb	mISDN_clock_update	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0x5eacba1f	ahci_interrupt	drivers/ata/libahci	EXPORT_SYMBOL_GPL
+0x6e720ff2	rtnl_unlock	vmlinux	EXPORT_SYMBOL
+0x8001e4e2	sock_rfree	vmlinux	EXPORT_SYMBOL
+0xb3f93a12	kernel_recvmsg	vmlinux	EXPORT_SYMBOL
+0x3f66046e	__root_device_register	vmlinux	EXPORT_SYMBOL_GPL
+0x5d366dec	gnttab_cancel_free_callback	vmlinux	EXPORT_SYMBOL_GPL
+0xc0a3d105	find_next_bit	vmlinux	EXPORT_SYMBOL
+0xbf963f9f	disk_part_iter_init	vmlinux	EXPORT_SYMBOL_GPL
+0xe87120d2	freeze_bdev	vmlinux	EXPORT_SYMBOL
+0xb69341f5	srcu_batches_completed	vmlinux	EXPORT_SYMBOL_GPL
+0x50ba3bec	acpi_processor_ffh_cstate_enter	vmlinux	EXPORT_SYMBOL_GPL
+0x2cc2d52d	vcc_hash	net/atm/atm	EXPORT_SYMBOL
+0xa6cfdb09	vcc_process_recv_queue	net/atm/atm	EXPORT_SYMBOL
+0x5cc4e97e	cx2341x_handler_setup	drivers/media/video/cx2341x	EXPORT_SYMBOL
+0xe07c0954	cs5535_gpio_clear	drivers/gpio/gpio-cs5535	EXPORT_SYMBOL_GPL
+0xb07d75de	ip_xfrm_me_harder	vmlinux	EXPORT_SYMBOL
+0xe2d0d926	__netdev_printk	vmlinux	EXPORT_SYMBOL
+0xd50dfb53	skb_kill_datagram	vmlinux	EXPORT_SYMBOL
+0xd0b10cc7	kfree_skb	vmlinux	EXPORT_SYMBOL
+0x1a63af34	vga_switcheroo_process_delayed_switch	vmlinux	EXPORT_SYMBOL
+0x891a5a7f	gnttab_max_grant_frames	vmlinux	EXPORT_SYMBOL_GPL
+0xde8f877f	kernel_kobj	vmlinux	EXPORT_SYMBOL_GPL
+0x9f29601a	atomic_notifier_chain_register	vmlinux	EXPORT_SYMBOL_GPL
+0xab1d6cc1	param_get_long	vmlinux	EXPORT_SYMBOL
+0xbf505dc6	snd_usbmidi_create	sound/usb/snd-usbmidi-lib	EXPORT_SYMBOL
+0x300d7e57	free_rs	lib/reed_solomon/reed_solomon	EXPORT_SYMBOL_GPL
+0xc0512e0f	ssb_admatch_base	drivers/ssb/ssb	EXPORT_SYMBOL
+0xd481192b	ssb_admatch_size	drivers/ssb/ssb	EXPORT_SYMBOL
+0xfc1b2d0c	il_tx_queue_free	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xd9c08ab3	il_add_beacon_time	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x8c5d5125	saa7146_wait_for_debi_done	drivers/media/common/saa7146	EXPORT_SYMBOL_GPL
+0xf02063d4	ib_send_cm_mra	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0x912c23fe	drm_mm_takedown	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xd005e2ea	inet_twsk_schedule	vmlinux	EXPORT_SYMBOL_GPL
+0x698be398	regulator_get_voltage	vmlinux	EXPORT_SYMBOL_GPL
+0x5297ef12	pci_msi_off	vmlinux	EXPORT_SYMBOL_GPL
+0x3d93ee61	posix_acl_alloc	vmlinux	EXPORT_SYMBOL
+0x3a57f235	snd_seq_autoload_unlock	sound/core/seq/snd-seq-device	EXPORT_SYMBOL
+0xb0470e1f	svc_set_num_threads	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x0c00ea88	nfnetlink_parse_nat_setup_hook	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x12ff235f	fuse_do_open	fs/fuse/fuse	EXPORT_SYMBOL_GPL
+0x80f24d95	svga_wcrt_multi	drivers/video/svgalib	EXPORT_SYMBOL
+0xd1429fca	svga_wseq_multi	drivers/video/svgalib	EXPORT_SYMBOL
+0x8349b96a	get_mtd_device_nm	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0xac1c4eb6	skb_copy_datagram_iovec	vmlinux	EXPORT_SYMBOL
+0xc32107d3	__kfree_skb	vmlinux	EXPORT_SYMBOL
+0xf65268df	pci_find_parent_resource	vmlinux	EXPORT_SYMBOL
+0x18d96501	atomic64_dec_if_positive_cx8	vmlinux	EXPORT_SYMBOL
+0x0992780d	efi_enabled	vmlinux	EXPORT_SYMBOL
+0x82b83678	rds_send_drop_acked	net/rds/rds	EXPORT_SYMBOL_GPL
+0xfbfd2bec	DOT11D_GetMaxTxPwrInDbm	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0xf28cfa0c	rtl_cam_reset_all_entry	drivers/net/wireless/rtlwifi/rtlwifi	EXPORT_SYMBOL
+0xd2a9615d	mptscsih_proc_info	drivers/message/fusion/mptscsih	EXPORT_SYMBOL
+0x6cc3bc2a	dib7000p_update_pll	drivers/media/dvb/frontends/dib7000p	EXPORT_SYMBOL
+0x7a93ed4e	snd_i2c_device_free	sound/i2c/snd-i2c	EXPORT_SYMBOL
+0xfafa2523	scsi_flush_work	drivers/scsi/scsi_mod	EXPORT_SYMBOL_GPL
+0xfc36206a	mmc_interrupt_hpi	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0xfbb3e7f0	mmc_can_discard	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x504bc49d	mISDN_unregister_Bprotocol	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0xbe4293d6	ip_defrag	vmlinux	EXPORT_SYMBOL
+0xd74170ba	register_qdisc	vmlinux	EXPORT_SYMBOL
+0xb53decb0	fbcon_rotate_ccw	vmlinux	EXPORT_SYMBOL
+0x61536865	idr_destroy	vmlinux	EXPORT_SYMBOL
+0x8a93b57a	ida_destroy	vmlinux	EXPORT_SYMBOL
+0x253df0eb	generic_file_aio_read	vmlinux	EXPORT_SYMBOL
+0x5c405bae	amdtp_out_stream_set_rate	sound/firewire/snd-firewire-lib	EXPORT_SYMBOL
+0x07b2adb8	xprt_wait_for_buffer_space	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xd9d98597	arpt_alloc_initial_table	net/ipv4/netfilter/arp_tables	EXPORT_SYMBOL_GPL
+0x6920890a	osduld_register_test	drivers/scsi/osd/osd	EXPORT_SYMBOL
+0x3b4a90b2	onenand_scan_bbt	drivers/mtd/onenand/onenand	EXPORT_SYMBOL
+0x73437583	v4l2_subdev_queryctrl	drivers/media/video/videodev	EXPORT_SYMBOL
+0xf184d68f	free_netdev	vmlinux	EXPORT_SYMBOL
+0x170c25ee	acpi_get_next_object	vmlinux	EXPORT_SYMBOL
+0xc9ec4e21	free_percpu	vmlinux	EXPORT_SYMBOL_GPL
+0x500e251b	gss_mech_get_by_pseudoflavor	net/sunrpc/auth_gss/auth_rpcgss	EXPORT_SYMBOL_GPL
+0xa69396f1	uwb_notifs_deregister	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0xcb0145a5	scsi_host_get	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x6969f70b	sk_setup_caps	vmlinux	EXPORT_SYMBOL_GPL
+0x9ec8d1d3	spi_sync_locked	vmlinux	EXPORT_SYMBOL_GPL
+0x6e147d74	regulator_bulk_get	vmlinux	EXPORT_SYMBOL_GPL
+0x668da8d5	zlib_inflateIncomp	vmlinux	EXPORT_SYMBOL
+0x419ee6e8	idr_pre_get	vmlinux	EXPORT_SYMBOL
+0x52423a0c	ida_pre_get	vmlinux	EXPORT_SYMBOL
+0x28d664ff	__raw_notifier_call_chain	vmlinux	EXPORT_SYMBOL_GPL
+0x4d3c153f	sigprocmask	vmlinux	EXPORT_SYMBOL
+0x71a34ca4	ax25_listen_register	net/ax25/ax25	EXPORT_SYMBOL
+0x8c2ba369	cxgbi_ddp_ppod_clear	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0xe1e46928	parport_ieee1284_ecp_write_addr	drivers/parport/parport	EXPORT_SYMBOL
+0xe2e27048	parport_ieee1284_epp_write_addr	drivers/parport/parport	EXPORT_SYMBOL
+0xeeaffd66	mtd_concat_destroy	drivers/mtd/mtd	EXPORT_SYMBOL
+0xc3e1c566	drm_vblank_init	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x9e13f6f6	gf128mul_lle	crypto/gf128mul	EXPORT_SYMBOL
+0x16fd5016	sk_stream_wait_connect	vmlinux	EXPORT_SYMBOL
+0x9144a8e2	ec_burst_disable	vmlinux	EXPORT_SYMBOL
+0x49dd7177	jbd2_journal_update_sb_errno	fs/jbd2/jbd2	EXPORT_SYMBOL
+0xc1fd408a	umc_driver_unregister	drivers/uwb/umc	EXPORT_SYMBOL_GPL
+0x836bdb72	nand_flash_ids	drivers/mtd/nand/nand_ids	EXPORT_SYMBOL
+0x67abe3f2	dib0070_wbd_offset	drivers/media/dvb/frontends/dib0070	EXPORT_SYMBOL
+0xcc95a86e	flexcop_pass_dmx_packets	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0xf70343fb	i2c_master_recv	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x54f1e926	drm_global_mutex	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x2801e757	__async_tx_find_channel	crypto/async_tx/async_tx	EXPORT_SYMBOL_GPL
+0x8d551bef	sysctl_tcp_rmem	vmlinux	EXPORT_SYMBOL
+0x3f3aa1d5	sock_no_sendmsg	vmlinux	EXPORT_SYMBOL
+0x5c1caacc	vfs_unlink	vmlinux	EXPORT_SYMBOL
+0xd969b2c7	amd_e400_c1e_detected	vmlinux	EXPORT_SYMBOL
+0xc622fb29	snd_seq_device_unregister_driver	sound/core/seq/snd-seq-device	EXPORT_SYMBOL
+0xbfa56df2	ieee80211_stop_tx_ba_cb_irqsafe	net/mac80211/mac80211	EXPORT_SYMBOL
+0x2bab6c8e	lro_flush_all	net/ipv4/inet_lro	EXPORT_SYMBOL
+0x0eb66853	transport_init_se_cmd	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x4a5f14c4	scsi_tgt_it_nexus_create	drivers/scsi/scsi_tgt	EXPORT_SYMBOL_GPL
+0xdfad6303	fcoe_check_wait_queue	drivers/scsi/fcoe/libfcoe	EXPORT_SYMBOL_GPL
+0x83b652bd	ata_acpi_gtm	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x4d465c46	ata_acpi_stm	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x7e096996	key_revoke	vmlinux	EXPORT_SYMBOL
+0xdc99131d	pipe_unlock	vmlinux	EXPORT_SYMBOL
+0x2eff14f4	xprt_reserve_xprt_cong	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xf2a01c4f	rds_message_addref	net/rds/rds	EXPORT_SYMBOL_GPL
+0x94b1c82a	transport_complete_sync_cache	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x7bd57b8a	ieee80211_wx_set_power_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x993c6318	ieee80211_wx_get_power_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x6b55d3fa	rt2x00lib_remove_dev	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0xadb2c342	ioc4_register_submodule	drivers/misc/ioc4	EXPORT_SYMBOL
+0xee4b265d	ttm_mem_global_alloc	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x16c329e1	genlmsg_multicast_allns	vmlinux	EXPORT_SYMBOL
+0xb83d0abe	__sock_recv_wifi_status	vmlinux	EXPORT_SYMBOL_GPL
+0x2c6aa378	pm_generic_restore	vmlinux	EXPORT_SYMBOL_GPL
+0xb43f52c5	bus_rescan_devices	vmlinux	EXPORT_SYMBOL_GPL
+0x9eb6cc89	put_tty_driver	vmlinux	EXPORT_SYMBOL
+0x5f73f6bc	backlight_force_update	vmlinux	EXPORT_SYMBOL
+0x622e3ffe	__tracepoint_rpm_resume	vmlinux	EXPORT_SYMBOL_GPL
+0x1655bb05	queue_work_on	vmlinux	EXPORT_SYMBOL_GPL
+0xff7559e4	ioport_resource	vmlinux	EXPORT_SYMBOL
+0xa6ad09c8	ieee80211_sched_scan_stopped	net/mac80211/mac80211	EXPORT_SYMBOL
+0x8a7d37f7	__fscache_maybe_release_page	fs/fscache/fscache	EXPORT_SYMBOL
+0x63381476	uwb_rc_cmd	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0x8eb2005e	uwb_rc_add	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0xd90477ff	uwb_rc_put	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0x4e7ad69f	rtl_ps_set_rf_state	drivers/net/wireless/rtlwifi/rtlwifi	EXPORT_SYMBOL
+0x2785e29c	p54_free_common	drivers/net/wireless/p54/p54common	EXPORT_SYMBOL_GPL
+0xcfe6c20d	ath9k_hw_addrxbuf_edma	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xe99b3f36	tps65010_set_gpio_out_value	drivers/mfd/tps65010	EXPORT_SYMBOL
+0x94a68723	ata_scsi_slave_destroy	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xc7a4fbed	rtnl_lock	vmlinux	EXPORT_SYMBOL
+0x122df3e9	debugfs_create_bool	vmlinux	EXPORT_SYMBOL_GPL
+0x40f36416	generic_file_splice_read	vmlinux	EXPORT_SYMBOL
+0xdd2efc0f	ring_buffer_reset_cpu	vmlinux	EXPORT_SYMBOL_GPL
+0xa54623a5	prepare_kernel_cred	vmlinux	EXPORT_SYMBOL
+0x897473df	mktime	vmlinux	EXPORT_SYMBOL
+0x2288378f	system_state	vmlinux	EXPORT_SYMBOL
+0x26931b51	xfrm6_tunnel_alloc_spi	net/ipv6/xfrm6_tunnel	EXPORT_SYMBOL
+0x5763378b	pnfs_update_layout	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0x7811f8f0	cxgbi_ddp_cleanup	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0x10f359f4	ath9k_hw_deinit	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xe56e0d6d	v4l2_int_ioctl_0	drivers/media/video/v4l2-int-device	EXPORT_SYMBOL_GPL
+0x784c67ac	hidinput_connect	drivers/hid/hid	EXPORT_SYMBOL_GPL
+0x70a2e930	kvm_set_memory_region	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x22b2ed4a	udp_push_pending_frames	vmlinux	EXPORT_SYMBOL
+0x21346afe	llc_add_pack	vmlinux	EXPORT_SYMBOL
+0x3e882943	pcibios_align_resource	vmlinux	EXPORT_SYMBOL
+0xa3b2f15a	splice_from_pipe_next	vmlinux	EXPORT_SYMBOL
+0x6d044c26	param_ops_uint	vmlinux	EXPORT_SYMBOL
+0xd5f2172f	del_timer_sync	vmlinux	EXPORT_SYMBOL
+0xc6875326	dccp_setsockopt	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x7c640527	bt_info	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x7cbae2c0	mwifiex_add_card	drivers/net/wireless/mwifiex/mwifiex	EXPORT_SYMBOL_GPL
+0x9601ea24	stv6110_attach	drivers/media/dvb/frontends/stv6110	EXPORT_SYMBOL
+0x952d328c	lnbp22_attach	drivers/media/dvb/frontends/lnbp22	EXPORT_SYMBOL
+0x13e247e0	rc_map_af9005_table	drivers/media/dvb/dvb-usb/dvb-usb-af9005-remote	EXPORT_SYMBOL
+0x00e8097b	csum_partial_copy_fromiovecend	vmlinux	EXPORT_SYMBOL
+0x012b6e50	con_set_default_unimap	vmlinux	EXPORT_SYMBOL
+0x8f782da3	acpi_is_video_device	vmlinux	EXPORT_SYMBOL
+0x1d42077b	fb_deferred_io_open	vmlinux	EXPORT_SYMBOL_GPL
+0xca8333e6	l2tp_tunnel_delete	net/l2tp/l2tp_core	EXPORT_SYMBOL_GPL
+0x300b396d	inet_diag_bc_sk	net/ipv4/inet_diag	EXPORT_SYMBOL_GPL
+0x0d0a5e0b	srp_remove_host	drivers/scsi/scsi_transport_srp	EXPORT_SYMBOL_GPL
+0xe71ebadd	rtlwifi_rate_mapping	drivers/net/wireless/rtlwifi/rtlwifi	EXPORT_SYMBOL
+0x803bd8f8	rt2800_read_eeprom_efuse	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0xdb9fea75	ath9k_hw_abortpcurecv	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xf300f07c	mtd_do_chip_probe	drivers/mtd/chips/gen_probe	EXPORT_SYMBOL
+0x28526b14	s921_attach	drivers/media/dvb/frontends/s921	EXPORT_SYMBOL
+0x54ce5100	ipmi_get_smi_info	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0x2d58910a	__qdisc_calculate_pkt_len	vmlinux	EXPORT_SYMBOL
+0x85540e20	dev_get_by_index	vmlinux	EXPORT_SYMBOL
+0x97c4b492	edac_get_sysfs_subsys	vmlinux	EXPORT_SYMBOL_GPL
+0x1c85ae50	dma_buf_unmap_attachment	vmlinux	EXPORT_SYMBOL_GPL
+0x8120917c	pci_enable_ats	vmlinux	EXPORT_SYMBOL_GPL
+0xd49e23ee	pci_enable_ido	vmlinux	EXPORT_SYMBOL
+0x462a2e75	match_strlcpy	vmlinux	EXPORT_SYMBOL
+0xe60c7d32	ioctl_by_bdev	vmlinux	EXPORT_SYMBOL
+0x65256d14	snd_gf1_translate_freq	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0x599fcf8f	configfs_unregister_subsystem	fs/configfs/configfs	EXPORT_SYMBOL
+0x44ee76a8	svga_settile	drivers/video/svgalib	EXPORT_SYMBOL
+0x3995c397	zs_unmap_object	drivers/staging/zsmalloc/zsmalloc	EXPORT_SYMBOL_GPL
+0x1fed06ba	osd_finalize_request	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0xff290c07	mmc_power_restore_host	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x2f622ea1	roccat_disconnect	drivers/hid/hid-roccat	EXPORT_SYMBOL_GPL
+0x669a09d4	init_net	vmlinux	EXPORT_SYMBOL
+0x6114d8a4	regulator_force_disable	vmlinux	EXPORT_SYMBOL_GPL
+0x68306f20	textsearch_find_continuous	vmlinux	EXPORT_SYMBOL
+0xc64c21ea	__next_cpu	vmlinux	EXPORT_SYMBOL
+0x7c5c9843	crypto_larval_lookup	vmlinux	EXPORT_SYMBOL_GPL
+0xa4c6cb1a	__crypto_alloc_tfm	vmlinux	EXPORT_SYMBOL_GPL
+0xff07b15b	keyring_search	vmlinux	EXPORT_SYMBOL
+0xfff33bd2	key_unlink	vmlinux	EXPORT_SYMBOL
+0xd820c283	eventfd_ctx_remove_wait_queue	vmlinux	EXPORT_SYMBOL_GPL
+0xc88ef0b4	generic_delete_inode	vmlinux	EXPORT_SYMBOL
+0xb5f17edf	perf_register_guest_info_callbacks	vmlinux	EXPORT_SYMBOL_GPL
+0x97f9c45a	trace_nowake_buffer_unlock_commit_regs	vmlinux	EXPORT_SYMBOL_GPL
+0xeade6597	osd_req_create_object	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0xcacd995c	fc_vport_setlink	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x6c345a41	i2c_pca_add_bus	drivers/i2c/algos/i2c-algo-pca	EXPORT_SYMBOL
+0xf726d02f	atomic64_add_unless_cx8	vmlinux	EXPORT_SYMBOL
+0x1400f70b	nf_nat_pptp_hook_expectfn	net/netfilter/nf_conntrack_pptp	EXPORT_SYMBOL_GPL
+0xca6b44d6	ceph_release_page_vector	net/ceph/libceph	EXPORT_SYMBOL
+0x2ab9eaad	w1_add_master_device	drivers/w1/wire	EXPORT_SYMBOL
+0xf99b85b7	orinoco_if_del	drivers/net/wireless/orinoco/orinoco	EXPORT_SYMBOL
+0x0166307e	mmc_wait_for_req	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x3f1d8c37	regmap_init_i2c	drivers/base/regmap/regmap-i2c	EXPORT_SYMBOL_GPL
+0x98cc564a	regulator_set_voltage	vmlinux	EXPORT_SYMBOL_GPL
+0xd8185c4e	blk_run_queue	vmlinux	EXPORT_SYMBOL
+0x91815586	irda_param_pack	net/irda/irda	EXPORT_SYMBOL
+0x1d7b0140	hci_register_dev	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x04ded235	deregister_atm_ioctl	net/atm/atm	EXPORT_SYMBOL
+0xaf64ad0d	zlib_deflate	lib/zlib_deflate/zlib_deflate	EXPORT_SYMBOL
+0xc99316a6	iscsi_parse_pr_out_transport_id	drivers/target/target_core_mod	EXPORT_SYMBOL
+0xf6f47dd8	fc_frame_crc_check	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x42c8e001	v4l2_ctrl_next	drivers/media/video/v4l2-common	EXPORT_SYMBOL
+0x1209c0ff	i2c_smbus_write_i2c_block_data	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0xe3bebba5	__secpath_destroy	vmlinux	EXPORT_SYMBOL
+0x24fdac79	wake_bit_function	vmlinux	EXPORT_SYMBOL
+0xbfdf1c78	snd_rawmidi_drain_output	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0x74182571	fuse_request_send_background	fs/fuse/fuse	EXPORT_SYMBOL_GPL
+0x4cb62e4a	init_airo_card	drivers/net/wireless/airo	EXPORT_SYMBOL
+0x6540d3f0	i2o_parm_issue	drivers/message/i2o/i2o_core	EXPORT_SYMBOL
+0x3bd7cfe8	hid_set_field	drivers/hid/hid	EXPORT_SYMBOL_GPL
+0xadbe8526	ata_sff_dev_classify	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x64fea17d	inet_csk_route_req	vmlinux	EXPORT_SYMBOL_GPL
+0xb6a61a86	qdisc_get_rtab	vmlinux	EXPORT_SYMBOL
+0x5f6a67d6	bus_remove_file	vmlinux	EXPORT_SYMBOL_GPL
+0xcd25dbc5	locks_release_private	vmlinux	EXPORT_SYMBOL_GPL
+0x8150c0ba	mempool_resize	vmlinux	EXPORT_SYMBOL
+0xc60f75ec	__ftrace_vprintk	vmlinux	EXPORT_SYMBOL_GPL
+0x196614ce	hw_breakpoint_restore	vmlinux	EXPORT_SYMBOL_GPL
+0xaa96ad72	snd_ac97_pcm_open	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0xd1861e50	mlx4_get_eth_qp	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x5d0a74d4	ei_netdev_ops	drivers/net/ethernet/8390/8390	EXPORT_SYMBOL
+0xc1b27608	lis3_dev	drivers/misc/lis3lv02d/lis3lv02d	EXPORT_SYMBOL_GPL
+0x09754372	hid_destroy_device	drivers/hid/hid	EXPORT_SYMBOL_GPL
+0x9c06f9fc	drm_agp_unbind	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xc419543a	xfrm_unregister_km	vmlinux	EXPORT_SYMBOL
+0x3c7a3d7c	in_dev_finish_destroy	vmlinux	EXPORT_SYMBOL
+0x3fec048f	sg_next	vmlinux	EXPORT_SYMBOL
+0x8aff7a5c	bio_map_user	vmlinux	EXPORT_SYMBOL
+0x0b07abe2	unshare_fs_struct	vmlinux	EXPORT_SYMBOL_GPL
+0x5dc1e094	smp_call_function_any	vmlinux	EXPORT_SYMBOL_GPL
+0x3534e2a3	system_nrt_wq	vmlinux	EXPORT_SYMBOL_GPL
+0xd0fb7cd4	__tasklet_hi_schedule_first	vmlinux	EXPORT_SYMBOL
+0x67ab3d48	x86_platform	vmlinux	EXPORT_SYMBOL_GPL
+0xd63b09a7	cfg80211_wext_siwrts	net/wireless/cfg80211	EXPORT_SYMBOL_GPL
+0x1a916ba1	cfg80211_wext_giwrts	net/wireless/cfg80211	EXPORT_SYMBOL_GPL
+0x1580e4ff	__nf_conntrack_confirm	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xe2bd47db	ocfs2_dlm_lock	fs/ocfs2/ocfs2_stackglue	EXPORT_SYMBOL_GPL
+0xb8e7e1ba	core_tpg_check_initiator_node_acl	drivers/target/target_core_mod	EXPORT_SYMBOL
+0xf37b9110	rtl92c_phy_set_bb_reg	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0xd13a22a3	usbnet_suspend	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0xc85443d1	mdiobus_scan	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x9fed5d6d	lirc_dev_fop_poll	drivers/media/rc/lirc_dev	EXPORT_SYMBOL
+0x34d7f4e0	unix_inq_len	vmlinux	EXPORT_SYMBOL_GPL
+0x8faafd1b	dmam_alloc_coherent	vmlinux	EXPORT_SYMBOL
+0x96a0b4cf	tty_port_carrier_raised	vmlinux	EXPORT_SYMBOL
+0x1e314b21	regulator_use_dummy_regulator	vmlinux	EXPORT_SYMBOL_GPL
+0x61282eb8	__brelse	vmlinux	EXPORT_SYMBOL
+0xa56a0052	pipe_lock	vmlinux	EXPORT_SYMBOL
+0x7de53067	rpc_init_rtt	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x883d6572	ip_set_name_byindex	net/netfilter/ipset/ip_set	EXPORT_SYMBOL_GPL
+0x178bf55b	scsi_host_get_command	drivers/scsi/scsi_tgt	EXPORT_SYMBOL_GPL
+0xa4104760	scsi_device_set_state	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xa82b2066	dm_bufio_write_dirty_buffers	drivers/md/dm-bufio	EXPORT_SYMBOL_GPL
+0x072654a4	ib_register_mad_agent	drivers/infiniband/core/ib_mad	EXPORT_SYMBOL
+0x5526d453	fw_iso_resource_manage	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0x347fd4b3	eventfd_ctx_get	vmlinux	EXPORT_SYMBOL_GPL
+0x941f2aaa	eventfd_ctx_put	vmlinux	EXPORT_SYMBOL_GPL
+0xc50e7edb	mark_buffer_async_write	vmlinux	EXPORT_SYMBOL
+0xc41e8f7a	wait_for_completion_interruptible_timeout	vmlinux	EXPORT_SYMBOL
+0x06971b8d	mwifiex_deauthenticate	drivers/net/wireless/mwifiex/mwifiex	EXPORT_SYMBOL_GPL
+0x3223e8ef	lbtf_send_tx_feedback	drivers/net/wireless/libertas_tf/libertas_tf	EXPORT_SYMBOL_GPL
+0x75c5ec7c	mmc_add_host	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x3e4ccf4b	sparse_keymap_entry_from_scancode	drivers/input/sparse-keymap	EXPORT_SYMBOL
+0x28e23139	xfrm_probe_algs	vmlinux	EXPORT_SYMBOL_GPL
+0x07405dc3	ip_route_me_harder	vmlinux	EXPORT_SYMBOL
+0xa416c21e	inet_sock_destruct	vmlinux	EXPORT_SYMBOL
+0x73da75fd	nf_reinject	vmlinux	EXPORT_SYMBOL
+0xa3fe451d	dev_pm_qos_update_request	vmlinux	EXPORT_SYMBOL_GPL
+0xf6c23e3c	tty_chars_in_buffer	vmlinux	EXPORT_SYMBOL
+0x3a9b6fb9	blk_unregister_region	vmlinux	EXPORT_SYMBOL
+0x013fcad2	unregister_nls	vmlinux	EXPORT_SYMBOL
+0x5358fc36	ring_buffer_discard_commit	vmlinux	EXPORT_SYMBOL_GPL
+0xc94d1f9c	dccp_feat_nn_get	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x5b342cbd	ceph_auth_verify_authorizer_reply	net/ceph/libceph	EXPORT_SYMBOL
+0xc17515d7	usb_hcds_loaded	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xb6a031e3	md_integrity_register	drivers/md/md-mod	EXPORT_SYMBOL
+0x66baa5aa	__serio_register_port	vmlinux	EXPORT_SYMBOL
+0x1f0b9654	amdtp_out_stream_destroy	sound/firewire/snd-firewire-lib	EXPORT_SYMBOL
+0xf122d16a	snd_ctl_unregister_ioctl	sound/core/snd	EXPORT_SYMBOL
+0x5c35e312	ssb_bus_resume	drivers/ssb/ssb	EXPORT_SYMBOL
+0x963085c7	__scsi_device_lookup_by_target	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xbe84e19a	parport_claim	drivers/parport/parport	EXPORT_SYMBOL
+0xa3ddb849	skb_pull_rcsum	vmlinux	EXPORT_SYMBOL_GPL
+0xa9fc3f54	gnttab_grant_foreign_access_trans	vmlinux	EXPORT_SYMBOL_GPL
+0x62c1ade7	malloc_sizes	vmlinux	EXPORT_SYMBOL
+0x737e8927	dccp_insert_option_elapsed_time	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x8e328500	dlm_posix_unlock	fs/dlm/dlm	EXPORT_SYMBOL_GPL
+0x6c70305f	osd_req_read_sg	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0x2364f90d	usbnet_get_msglevel	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0x1650cd06	usbnet_set_msglevel	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0x7d670a81	saa7146_vmalloc_build_pgtable	drivers/media/common/saa7146	EXPORT_SYMBOL_GPL
+0xaf8d11ac	ib_dealloc_device	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x2b67f096	speedstep_get_frequency	drivers/cpufreq/speedstep-lib	EXPORT_SYMBOL_GPL
+0x01902adf	netpoll_trap	vmlinux	EXPORT_SYMBOL
+0xa296e800	pm_generic_suspend	vmlinux	EXPORT_SYMBOL_GPL
+0x261c47f3	agp_remove_bridge	vmlinux	EXPORT_SYMBOL_GPL
+0xebdbe48c	radix_tree_gang_lookup	vmlinux	EXPORT_SYMBOL
+0x105bbe5c	register_nls	vmlinux	EXPORT_SYMBOL
+0x06375b55	locks_alloc_lock	vmlinux	EXPORT_SYMBOL_GPL
+0x6585e310	alloc_pages_exact_nid	vmlinux	EXPORT_SYMBOL
+0xb121390a	probe_irq_on	vmlinux	EXPORT_SYMBOL
+0xe34146fd	cache_create_net	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x4a7a6e4c	svc_prepare_thread	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x1d747ce3	o2hb_check_node_heartbeating	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0x6b39d68e	fscache_mark_pages_cached	fs/fscache/fscache	EXPORT_SYMBOL
+0x593f6878	usb_stor_suspend	drivers/usb/storage/usb-storage	EXPORT_SYMBOL_GPL
+0x7faf7e26	i2c_smbus_write_block_data	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x1627ed72	register_dcbevent_notifier	vmlinux	EXPORT_SYMBOL
+0x6b6bb3d5	xfrm_state_lookup	vmlinux	EXPORT_SYMBOL
+0x1a499e93	tcp_parse_options	vmlinux	EXPORT_SYMBOL
+0x7e917681	rps_may_expire_flow	vmlinux	EXPORT_SYMBOL
+0x5917543a	xen_find_device_domain_owner	vmlinux	EXPORT_SYMBOL_GPL
+0x145784d1	gdt_page	vmlinux	EXPORT_SYMBOL_GPL
+0x22e23dca	oxygen_pci_shutdown	sound/pci/oxygen/snd-oxygen-lib	EXPORT_SYMBOL
+0x21243820	rpc_unlink	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x30bb22e8	svc_gss_principal	net/sunrpc/auth_gss/auth_rpcgss	EXPORT_SYMBOL_GPL
+0xbe40ace9	irlmp_discovery_request	net/irda/irda	EXPORT_SYMBOL
+0x6f959b35	locks_in_grace	fs/lockd/lockd	EXPORT_SYMBOL_GPL
+0x89253b37	ssb_device_is_enabled	drivers/ssb/ssb	EXPORT_SYMBOL
+0xd50ebe17	edac_mc_find_csrow_by_page	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x9d33ef5e	acpi_enable	vmlinux	EXPORT_SYMBOL
+0x978da7b4	module_refcount	vmlinux	EXPORT_SYMBOL
+0xd541fdf4	sunrpc_destroy_cache_detail	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x1f69bc36	dlm_unregister_domain	fs/ocfs2/dlm/ocfs2_dlm	EXPORT_SYMBOL_GPL
+0x58c83438	dlm_register_domain	fs/ocfs2/dlm/ocfs2_dlm	EXPORT_SYMBOL_GPL
+0x3b7e6029	usb_wwan_suspend	drivers/usb/serial/usb_wwan	EXPORT_SYMBOL
+0xf2a932ce	drm_mode_create_from_cmdline_mode	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x832be4f9	edac_pci_reset_delay_period	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0xf2b74197	inet_ctl_sock_create	vmlinux	EXPORT_SYMBOL_GPL
+0x234d1c25	dev_addr_add_multiple	vmlinux	EXPORT_SYMBOL
+0x278ec596	firmware_kobj	vmlinux	EXPORT_SYMBOL_GPL
+0x25a98c03	pci_store_saved_state	vmlinux	EXPORT_SYMBOL_GPL
+0x71318ebb	handle_edge_irq	vmlinux	EXPORT_SYMBOL
+0x44d23c72	snd_hda_pin_sense	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x1b4b3869	ip_vs_conn_in_get	net/netfilter/ipvs/ip_vs	EXPORT_SYMBOL
+0x8d95fe6a	usb_autopm_put_interface_async	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x144dbaf4	usb_lock_device_for_reset	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x8f1a5604	ttusbdecfe_dvbt_attach	drivers/media/dvb/ttusb-dec/ttusbdecfe	EXPORT_SYMBOL
+0xa4dd57ce	ttusbdecfe_dvbs_attach	drivers/media/dvb/ttusb-dec/ttusbdecfe	EXPORT_SYMBOL
+0x14863d4c	snd_timer_global_new	sound/core/snd-timer	EXPORT_SYMBOL
+0x05bd9253	usb_ftdi_elan_edset_empty	drivers/usb/misc/ftdi-elan	EXPORT_SYMBOL_GPL
+0xe96e7f01	i2400m_tx_msg_sent	drivers/net/wimax/i2400m/i2400m	EXPORT_SYMBOL_GPL
+0xed1d2a08	sch56xx_write_virtual_reg	drivers/hwmon/sch56xx-common	EXPORT_SYMBOL
+0x08a7896d	i915_gpu_raise	drivers/gpu/drm/i915/i915	EXPORT_SYMBOL_GPL
+0x3dc877b5	ata_std_prereset	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xbad3085a	genl_register_mc_group	vmlinux	EXPORT_SYMBOL
+0x082fb94c	___pskb_trim	vmlinux	EXPORT_SYMBOL
+0x34e51ce3	tty_driver_flush_buffer	vmlinux	EXPORT_SYMBOL
+0xd648e564	fb_match_mode	vmlinux	EXPORT_SYMBOL
+0x037b043f	pci_setup_cardbus	vmlinux	EXPORT_SYMBOL
+0xe2d5255a	strcmp	vmlinux	EXPORT_SYMBOL
+0x85df9b6c	strsep	vmlinux	EXPORT_SYMBOL
+0x69a358a6	iomem_resource	vmlinux	EXPORT_SYMBOL
+0x6729d3df	__get_user_4	vmlinux	EXPORT_SYMBOL
+0xb2fd5ceb	__put_user_4	vmlinux	EXPORT_SYMBOL
+0x8ae202e4	snd_ctl_add	sound/core/snd	EXPORT_SYMBOL
+0x2705d444	sctp_do_peeloff	net/sctp/sctp	EXPORT_SYMBOL
+0xb50fd575	ieee80211_queue_delayed_work	net/mac80211/mac80211	EXPORT_SYMBOL
+0x301b8dcd	register_virtio_driver	drivers/virtio/virtio	EXPORT_SYMBOL_GPL
+0x31b640f0	osd_end_request	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0x3cd8d1c0	tm6000_set_audio_bitrate	drivers/media/video/tm6000/tm6000	EXPORT_SYMBOL_GPL
+0x6f1cb374	dvb_ca_en50221_release	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0xb889f6b0	drm_fb_helper_pan_display	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0x5ccffca3	sata_scr_read	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x2f47d8c7	cpufreq_frequency_get_table	vmlinux	EXPORT_SYMBOL_GPL
+0x7723b4f7	devm_kfree	vmlinux	EXPORT_SYMBOL_GPL
+0xe01e0484	xenbus_dev_suspend	vmlinux	EXPORT_SYMBOL_GPL
+0x69022a6b	mnt_unpin	vmlinux	EXPORT_SYMBOL
+0x717f42b9	end_writeback	vmlinux	EXPORT_SYMBOL
+0x2e1717cb	vfs_create	vmlinux	EXPORT_SYMBOL
+0xed82c84b	dccp_done	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x6ed41be2	ceph_pagelist_append	net/ceph/libceph	EXPORT_SYMBOL
+0xe5818842	ath9k_hw_check_alive	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x8eea917f	mtd_erase_callback	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0xf100416a	remove_conflicting_framebuffers	vmlinux	EXPORT_SYMBOL
+0x319c054b	__ablkcipher_walk_complete	vmlinux	EXPORT_SYMBOL_GPL
+0x26ed1163	sb_min_blocksize	vmlinux	EXPORT_SYMBOL
+0x1e2039ae	zs_create_pool	drivers/staging/zsmalloc/zsmalloc	EXPORT_SYMBOL_GPL
+0xf1f015a5	sas_phy_alloc	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL
+0x11a42918	z8530_sync_txdma_close	drivers/net/wan/z85230	EXPORT_SYMBOL
+0xe4c873ec	v4l2_device_set_name	drivers/media/video/videodev	EXPORT_SYMBOL_GPL
+0x154c6338	dm_kcopyd_client_destroy	drivers/md/dm-mod	EXPORT_SYMBOL
+0x703189d7	regulator_get_mode	vmlinux	EXPORT_SYMBOL_GPL
+0x59d696b6	register_module_notifier	vmlinux	EXPORT_SYMBOL
+0xc03ab504	setup_deferrable_timer_on_stack_key	vmlinux	EXPORT_SYMBOL_GPL
+0x8e4fad1e	snd_emu8000_load_chorus_fx	sound/isa/sb/snd-sbawe	EXPORT_SYMBOL
+0x0d841c59	snd_cs8427_reg_write	sound/i2c/snd-cs8427	EXPORT_SYMBOL
+0x53dff67d	wl12xx_debug_level	drivers/net/wireless/wl12xx/wl12xx	EXPORT_SYMBOL_GPL
+0x6763742e	rtl92c_dm_init_rate_adaptive_mask	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0xa60a1a2d	ath9k_hw_setopmode	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xe4d0c67e	irda_unregister_dongle	drivers/net/irda/sir-dev	EXPORT_SYMBOL
+0x28796a16	cs5535_mfgpt_set_irq	drivers/misc/cs5535-mfgpt	EXPORT_SYMBOL_GPL
+0xcd763b95	bitmap_start_sync	drivers/md/md-mod	EXPORT_SYMBOL
+0xfa53bd41	ttm_bo_create	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x81cb7ab8	pi_schedule_claimed	drivers/block/paride/paride	EXPORT_SYMBOL
+0xd5eb595e	cpuidle_disable_device	vmlinux	EXPORT_SYMBOL_GPL
+0x8eaf2a5f	vga_switcheroo_unregister_handler	vmlinux	EXPORT_SYMBOL
+0xc7208c3a	serial8250_resume_port	vmlinux	EXPORT_SYMBOL
+0xda7068f8	present_bit_handler	vmlinux	EXPORT_SYMBOL
+0x845efc42	w1_ds2760_recall_eeprom	drivers/w1/slaves/w1_ds2760	EXPORT_SYMBOL
+0x0d3f4011	pcmcia_request_irq	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0x35782695	lirc_get_pdata	drivers/media/rc/lirc_dev	EXPORT_SYMBOL
+0xbc7d447b	hid_input_report	drivers/hid/hid	EXPORT_SYMBOL_GPL
+0x70d94edd	inet_csk_clone_lock	vmlinux	EXPORT_SYMBOL_GPL
+0xc597f3bf	pcix_set_mmrbc	vmlinux	EXPORT_SYMBOL
+0x4842d76f	unregister_sysctl_table	vmlinux	EXPORT_SYMBOL
+0xaf91d89f	__kernel_param_lock	vmlinux	EXPORT_SYMBOL
+0x86fcde20	das08_cs_boards	drivers/staging/comedi/drivers/das08	EXPORT_SYMBOL_GPL
+0xde4f0c9e	il_eeprom_init	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xdcc5a25c	rdma_set_service_type	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0xfe3a5ce4	paride_register	drivers/block/paride/paride	EXPORT_SYMBOL
+0x1c8984c7	acpi_smbus_unregister_callback	drivers/acpi/sbshc	EXPORT_SYMBOL_GPL
+0x74fbc94a	is_fault_pfn	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x6ffa8ccf	del_gendisk	vmlinux	EXPORT_SYMBOL
+0x803a41b5	block_write_full_page	vmlinux	EXPORT_SYMBOL
+0xa61aa028	snd_pcm_format_unsigned	sound/core/snd-pcm	EXPORT_SYMBOL
+0xdabb79df	nf_ct_invert_tuple	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x6a1c858b	lockd_up	fs/lockd/lockd	EXPORT_SYMBOL_GPL
+0xee60f0c9	fat_sync_inode	fs/fat/fat	EXPORT_SYMBOL_GPL
+0x19dbd5f5	rt2800_config_shared_key	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0x5f60c0ec	il_tx_queue_reset	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xfcc60759	usbnet_stop	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0x0a402e19	dib8000_update_pll	drivers/media/dvb/frontends/dib8000	EXPORT_SYMBOL
+0x08a936ca	dm_btree_insert_notify	drivers/md/persistent-data/dm-persistent-data	EXPORT_SYMBOL_GPL
+0xd7fbdb1e	xfrm_register_type	vmlinux	EXPORT_SYMBOL
+0x9305f8e6	cpufreq_get	vmlinux	EXPORT_SYMBOL
+0x251c020d	clear_bdi_congested	vmlinux	EXPORT_SYMBOL
+0x8de63fb4	svga_set_timings	drivers/video/svgalib	EXPORT_SYMBOL
+0xb513b61d	rt2800_link_tuner	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0x955713e8	sock_no_setsockopt	vmlinux	EXPORT_SYMBOL
+0xdd46cf30	sock_no_getsockopt	vmlinux	EXPORT_SYMBOL
+0xab01acbe	gnttab_request_free_callback	vmlinux	EXPORT_SYMBOL_GPL
+0x8e9a9713	__blockdev_direct_IO	vmlinux	EXPORT_SYMBOL
+0x90e9a741	splice_from_pipe_end	vmlinux	EXPORT_SYMBOL
+0xe1f47299	migrate_page	vmlinux	EXPORT_SYMBOL
+0x2e45e488	rcu_note_context_switch	vmlinux	EXPORT_SYMBOL_GPL
+0x7b202637	snd_wss_interrupt	sound/isa/wss/snd-wss-lib	EXPORT_SYMBOL
+0xd90876fe	nfs_commit_release_pages	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0xf0bb8290	usb_ftdi_elan_write_pcimem	drivers/usb/misc/ftdi-elan	EXPORT_SYMBOL_GPL
+0xb19a318a	thermal_zone_device_update	drivers/thermal/thermal_sys	EXPORT_SYMBOL
+0x4fceeaaf	sas_rphy_delete	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL
+0xa905c79d	cb710_set_irq_handler	drivers/misc/cb710/cb710	EXPORT_SYMBOL_GPL
+0xfec8cf8e	rc_map_get	drivers/media/rc/rc-core	EXPORT_SYMBOL_GPL
+0x2a52d4a5	ip6_route_me_harder	vmlinux	EXPORT_SYMBOL
+0x6cc955ba	snd_device_new	sound/core/snd	EXPORT_SYMBOL
+0xd519ed29	lro_receive_skb	net/ipv4/inet_lro	EXPORT_SYMBOL
+0x944a9d0f	iscsi_get_port_speed_name	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0x8d5a6b19	iscsi_get_port_state_name	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0x7954b1ea	fc_get_event_number	drivers/scsi/scsi_transport_fc	EXPORT_SYMBOL
+0x6ba2689b	fcoe_start_io	drivers/scsi/fcoe/libfcoe	EXPORT_SYMBOL_GPL
+0x5f3c8f5c	mmc_assume_removable	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0xa4027ff1	dib7090_tuner_sleep	drivers/media/dvb/frontends/dib7000p	EXPORT_SYMBOL
+0xbcd72140	km_new_mapping	vmlinux	EXPORT_SYMBOL
+0x570cc0dc	napi_complete	vmlinux	EXPORT_SYMBOL
+0x7eacf56e	pm_generic_thaw_early	vmlinux	EXPORT_SYMBOL_GPL
+0xaea976a8	acpi_check_resource_conflict	vmlinux	EXPORT_SYMBOL
+0x47229b5c	gpio_request	vmlinux	EXPORT_SYMBOL_GPL
+0x979302c7	swiotlb_sync_single_for_cpu	vmlinux	EXPORT_SYMBOL
+0xd32db0e0	generic_block_bmap	vmlinux	EXPORT_SYMBOL
+0x868784cb	__symbol_get	vmlinux	EXPORT_SYMBOL_GPL
+0x8cd996ad	snd_pcm_hw_constraint_list	sound/core/snd-pcm	EXPORT_SYMBOL
+0xb376723d	p9_client_disconnect	net/9p/9pnet	EXPORT_SYMBOL
+0x52ab2a20	nfs_put_client	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0xed1086ee	matrox_mystique	drivers/video/matrox/matroxfb_DAC1064	EXPORT_SYMBOL
+0xc2fb4eb8	iscsi_boot_create_ethernet	drivers/scsi/iscsi_boot_sysfs	EXPORT_SYMBOL_GPL
+0x3a5c4389	cxgbi_ddp_page_size_factor	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0x01b3725e	libipw_get_channel_flags	drivers/net/wireless/ipw2x00/libipw	EXPORT_SYMBOL
+0x90460066	mlx4_set_stats_bitmap	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL
+0x78684e9a	smscore_getbuffer	drivers/media/dvb/siano/smsmdtv	EXPORT_SYMBOL_GPL
+0x75c06cfc	smscore_putbuffer	drivers/media/dvb/siano/smsmdtv	EXPORT_SYMBOL_GPL
+0x5858af2d	__ip_dev_find	vmlinux	EXPORT_SYMBOL
+0xf1db1704	nla_memcpy	vmlinux	EXPORT_SYMBOL
+0xbe0e5118	nla_memcmp	vmlinux	EXPORT_SYMBOL
+0x1d9e5c25	d_materialise_unique	vmlinux	EXPORT_SYMBOL_GPL
+0x5bdb243e	kmem_cache_free	vmlinux	EXPORT_SYMBOL
+0x8323799a	file_remove_suid	vmlinux	EXPORT_SYMBOL
+0xe2a38fa9	ieee80211_data_from_8023	net/wireless/cfg80211	EXPORT_SYMBOL
+0x1cce9f19	DoCMil_init	drivers/mtd/devices/doc2001	EXPORT_SYMBOL_GPL
+0x78fd36e7	ipmi_request_supply_msgs	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0x643b5478	get_cpu_device	vmlinux	EXPORT_SYMBOL_GPL
+0x923b1276	dmaengine_get	vmlinux	EXPORT_SYMBOL
+0xf3986b06	acpi_os_map_generic_address	vmlinux	EXPORT_SYMBOL
+0xb34338ed	pci_restore_ats_state	vmlinux	EXPORT_SYMBOL_GPL
+0x15e97d42	pci_restore_msi_state	vmlinux	EXPORT_SYMBOL_GPL
+0x1993c415	swiotlb_bounce	vmlinux	EXPORT_SYMBOL_GPL
+0x5edd0762	bin2bcd	vmlinux	EXPORT_SYMBOL
+0x622fa02a	prepare_to_wait	vmlinux	EXPORT_SYMBOL
+0x1fedf0f4	__request_region	vmlinux	EXPORT_SYMBOL
+0xdf90f3a0	snd_cs8427_create	sound/i2c/snd-cs8427	EXPORT_SYMBOL
+0xc473df1b	transport_generic_process_write	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x57eb37f3	core_tpg_deregister	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x653aac69	dvb_frontend_reinitialise	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0x453971f1	ata_host_detach	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xe089cfcc	agp_memory_reserved	vmlinux	EXPORT_SYMBOL_GPL
+0x843d70ef	acpi_is_root_bridge	vmlinux	EXPORT_SYMBOL_GPL
+0xe3667ee2	acpi_ec_add_query_handler	vmlinux	EXPORT_SYMBOL_GPL
+0x873cd665	bdev_read_only	vmlinux	EXPORT_SYMBOL
+0xf0009fee	put_pages_list	vmlinux	EXPORT_SYMBOL
+0x993ad14b	irda_param_extract_all	net/irda/irda	EXPORT_SYMBOL
+0x76a7c336	s5h1411_attach	drivers/media/dvb/frontends/s5h1411	EXPORT_SYMBOL
+0x83aae7a3	sock_wfree	vmlinux	EXPORT_SYMBOL
+0x1c1b4fdf	xenbus_alloc_evtchn	vmlinux	EXPORT_SYMBOL_GPL
+0x021ba977	test_set_page_writeback	vmlinux	EXPORT_SYMBOL
+0x9c8ecd26	abort_exclusive_wait	vmlinux	EXPORT_SYMBOL
+0x091eb9b4	round_jiffies	vmlinux	EXPORT_SYMBOL_GPL
+0x5264849c	snd_ac97_pcm_assign	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0xe1b002c4	gss_mech_get_by_OID	net/sunrpc/auth_gss/auth_rpcgss	EXPORT_SYMBOL_GPL
+0x0f50a5cc	p9_is_proto_dotl	net/9p/9pnet	EXPORT_SYMBOL
+0xedb2a627	mite_request_channel_in_range	drivers/staging/comedi/drivers/mite	EXPORT_SYMBOL
+0x49f0b0ce	dm_exception_store_create	drivers/md/dm-snapshot	EXPORT_SYMBOL
+0x692bc932	register_efivars	drivers/firmware/efivars	EXPORT_SYMBOL_GPL
+0x943fd11c	qdisc_destroy	vmlinux	EXPORT_SYMBOL
+0x5594be03	bitmap_remap	vmlinux	EXPORT_SYMBOL
+0xf58d8b88	dquot_commit	vmlinux	EXPORT_SYMBOL
+0xee30febe	truncate_inode_pages	vmlinux	EXPORT_SYMBOL
+0xc5c264a5	amd_erratum_400	vmlinux	EXPORT_SYMBOL_GPL
+0x7a7c5175	amd_erratum_383	vmlinux	EXPORT_SYMBOL_GPL
+0x5ab9bbc0	snd_util_mem_alloc	sound/synth/snd-util-mem	EXPORT_SYMBOL
+0xec781d01	iscsi_conn_login_event	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0xee6c6448	dvb_frontend_detach	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0x0422fe4a	inet_csk_timer_bug_msg	vmlinux	EXPORT_SYMBOL
+0x8e7f5922	input_flush_device	vmlinux	EXPORT_SYMBOL
+0x5e7e1fe3	regmap_bulk_write	vmlinux	EXPORT_SYMBOL_GPL
+0x56e352bb	sysfs_notify	vmlinux	EXPORT_SYMBOL_GPL
+0x0948cde9	num_physpages	vmlinux	EXPORT_SYMBOL
+0xb759f615	p9_client_renameat	net/9p/9pnet	EXPORT_SYMBOL
+0xbcf484c8	matroxfb_g450_connect	drivers/video/matrox/matroxfb_g450	EXPORT_SYMBOL
+0x95ac2cb2	ath9k_hw_stop_dma_queue	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x4327dc7d	media_entity_pipeline_stop	drivers/media/media	EXPORT_SYMBOL_GPL
+0xf48b0dbf	inet_hash	vmlinux	EXPORT_SYMBOL_GPL
+0x9a1dfd65	strpbrk	vmlinux	EXPORT_SYMBOL
+0xba95db49	sysfs_create_file	vmlinux	EXPORT_SYMBOL_GPL
+0xdb246df1	seq_lseek	vmlinux	EXPORT_SYMBOL
+0xf7a14f56	apei_mce_report_mem_error	vmlinux	EXPORT_SYMBOL_GPL
+0x9e6d79f8	snd_info_get_str	sound/core/snd	EXPORT_SYMBOL
+0x81843aa2	ip_vs_conn_out_get_proto	net/netfilter/ipvs/ip_vs	EXPORT_SYMBOL_GPL
+0xdb64e57a	subdev_8255_init	drivers/staging/comedi/drivers/8255	EXPORT_SYMBOL
+0x655bf327	sdhci_add_host	drivers/mmc/host/sdhci	EXPORT_SYMBOL_GPL
+0x26e38620	enclosure_add_device	drivers/misc/enclosure	EXPORT_SYMBOL_GPL
+0xd4e39203	drm_crtc_init	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xecc94da1	cdrom_get_last_written	drivers/cdrom/cdrom	EXPORT_SYMBOL
+0x7cf8c1f1	ip6_frag_match	vmlinux	EXPORT_SYMBOL
+0xb53620d1	pci_vpd_find_info_keyword	vmlinux	EXPORT_SYMBOL_GPL
+0x1551dc51	bitmap_find_free_region	vmlinux	EXPORT_SYMBOL
+0x9f491e5d	ftrace_print_symbols_seq_u64	vmlinux	EXPORT_SYMBOL
+0x71fa908a	cache_flush	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x2b21c193	bc_svc_process	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x1c58cec7	journal_invalidatepage	fs/jbd/jbd	EXPORT_SYMBOL
+0x5200d484	ubi_leb_erase	drivers/mtd/ubi/ubi	EXPORT_SYMBOL_GPL
+0xf37a3cfe	dm_rh_get_region_key	drivers/md/dm-region-hash	EXPORT_SYMBOL_GPL
+0xa6e26ecc	mISDNipac_irq	drivers/isdn/hardware/mISDN/mISDNipac	EXPORT_SYMBOL
+0x24ab7e10	edac_pci_alloc_ctl_info	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0xd3431561	vlan_vid_add	vmlinux	EXPORT_SYMBOL
+0x2234b4da	sock_update_classid	vmlinux	EXPORT_SYMBOL
+0xafa2b7b9	leds_list_lock	vmlinux	EXPORT_SYMBOL_GPL
+0x19fc7f60	regulator_set_mode	vmlinux	EXPORT_SYMBOL_GPL
+0x8c06a108	xenbus_transaction_start	vmlinux	EXPORT_SYMBOL_GPL
+0x56b63670	lzo1x_1_compress	vmlinux	EXPORT_SYMBOL_GPL
+0x40c60949	set_disk_ro	vmlinux	EXPORT_SYMBOL
+0xa3ef4d60	dquot_enable	vmlinux	EXPORT_SYMBOL
+0xf112bcf4	svc_alien_sock	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xc4ca1547	pcmcia_request_window	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0xace35a27	rt2x00queue_unmap_skb	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x88ef742e	nand_unlock	drivers/mtd/nand/nand	EXPORT_SYMBOL
+0xaf2d8f70	dib3000mc_pid_parse	drivers/media/dvb/frontends/dib3000mc	EXPORT_SYMBOL
+0xe04f7caa	dm_read_arg_group	drivers/md/dm-mod	EXPORT_SYMBOL
+0xb60e5e5f	capi_cmsg_header	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0xfa32fec5	drm_gem_handle_create	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x8d04486b	bus_find_device	vmlinux	EXPORT_SYMBOL_GPL
+0xf429f0a8	blk_rq_unprep_clone	vmlinux	EXPORT_SYMBOL_GPL
+0x0ce288d6	relay_switch_subbuf	vmlinux	EXPORT_SYMBOL_GPL
+0x55763f40	iso_packets_buffer_destroy	sound/firewire/snd-firewire-lib	EXPORT_SYMBOL
+0xf1532da3	cfg80211_sched_scan_results	net/wireless/cfg80211	EXPORT_SYMBOL
+0x090d2c42	rpc_create	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xee10f3ec	rxrpc_get_server_data_key	net/rxrpc/af-rxrpc	EXPORT_SYMBOL
+0xd02b42d9	register_ip_vs_app_inc	net/netfilter/ipvs/ip_vs	EXPORT_SYMBOL
+0x39486996	wusbhc_rh_status_data	drivers/usb/wusbcore/wusbcore	EXPORT_SYMBOL_GPL
+0x0a4a2d01	video_device_release	drivers/media/video/videodev	EXPORT_SYMBOL
+0x669da1fd	kvm_set_pfn_dirty	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x32d5e7fc	xfrm_aalg_get_byid	vmlinux	EXPORT_SYMBOL_GPL
+0x29a0edea	tcp_create_openreq_child	vmlinux	EXPORT_SYMBOL
+0xa0c31268	sk_common_release	vmlinux	EXPORT_SYMBOL
+0xdaa344f7	led_trigger_register	vmlinux	EXPORT_SYMBOL_GPL
+0x24c9bf42	inode_sub_rsv_space	vmlinux	EXPORT_SYMBOL
+0xbd6b9c66	sched_autogroup_create_attach	vmlinux	EXPORT_SYMBOL
+0x7a525e1d	snd_pcm_hw_rule_noresample	sound/core/snd-pcm	EXPORT_SYMBOL
+0xd3ae899f	fuse_conn_put	fs/fuse/fuse	EXPORT_SYMBOL_GPL
+0xe010f3be	usbip_recv_xbuff	drivers/staging/usbip/usbip-core	EXPORT_SYMBOL_GPL
+0x0cd330f4	range_unknown	drivers/staging/comedi/comedi	EXPORT_SYMBOL
+0x78224b6f	cxgbi_hbas_add	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0x0162144e	rt2x00mac_sw_scan_start	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0xb7318ace	v4l2_subdev_querymenu	drivers/media/video/videodev	EXPORT_SYMBOL
+0x8ca25d31	capi_ctr_resume_output	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0xf75e4e08	drm_helper_mode_fill_fb_struct	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0x69b3b7cd	skb_queue_head	vmlinux	EXPORT_SYMBOL
+0x9bc4d8e8	skb_prepare_seq_read	vmlinux	EXPORT_SYMBOL
+0x7d73f765	sk_reset_timer	vmlinux	EXPORT_SYMBOL
+0x72b212ff	regulator_bulk_enable	vmlinux	EXPORT_SYMBOL_GPL
+0xe4e68bc8	apei_map_generic_address	vmlinux	EXPORT_SYMBOL_GPL
+0x5c14ce43	irq_get_irq_data	vmlinux	EXPORT_SYMBOL_GPL
+0xf5b4a948	crc_itu_t	lib/crc-itu-t	EXPORT_SYMBOL
+0x7eb73de5	cxgbi_device_portmap_cleanup	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0xd8843493	mpt_Soft_Hard_ResetHandler	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0x6f894a67	em28xx_set_mode	drivers/media/video/em28xx/em28xx	EXPORT_SYMBOL_GPL
+0xc052f472	drm_pci_free	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x5b8c239d	xen_swiotlb_map_page	vmlinux	EXPORT_SYMBOL_GPL
+0xbdd5f10f	apei_hest_parse	vmlinux	EXPORT_SYMBOL_GPL
+0x5f58f676	flex_array_get_ptr	vmlinux	EXPORT_SYMBOL
+0xa080d7a9	bio_alloc_bioset	vmlinux	EXPORT_SYMBOL
+0x3387bc13	ieee80211_get_hdrlen_from_skb	net/wireless/cfg80211	EXPORT_SYMBOL
+0xcd614f43	usb_driver_set_configuration	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xb64999c8	comedi_driver_unregister	drivers/staging/comedi/comedi	EXPORT_SYMBOL
+0xb8d6a445	rt2x00mac_bss_info_changed	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x96a081f7	atmel_open	drivers/net/wireless/atmel	EXPORT_SYMBOL
+0x8301baea	mii_ethtool_gset	drivers/net/mii	EXPORT_SYMBOL
+0x35f74b86	mii_ethtool_sset	drivers/net/mii	EXPORT_SYMBOL
+0x1a90f3d9	videobuf_querybuf	drivers/media/video/videobuf-core	EXPORT_SYMBOL_GPL
+0x17fbabfc	class_compat_create_link	vmlinux	EXPORT_SYMBOL_GPL
+0x95cd2d1c	vfs_cancel_lock	vmlinux	EXPORT_SYMBOL_GPL
+0x4121fd7c	pm_qos_remove_request	vmlinux	EXPORT_SYMBOL_GPL
+0x150389d6	acpi_processor_power_init_bm_check	vmlinux	EXPORT_SYMBOL
+0x045d2219	snd_hda_check_board_codec_sid_config	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xb602c57e	nf_ct_l3proto_module_put	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xa814b419	transport_kunmap_data_sg	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x5b1a1e00	gameport_stop_polling	drivers/input/gameport/gameport	EXPORT_SYMBOL
+0xb862614a	ib_get_cached_lmc	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x1da7cf14	drm_i2c_encoder_init	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x11c548eb	release_sock	vmlinux	EXPORT_SYMBOL
+0x50e7193a	__i2c_first_dynamic_bus_num	vmlinux	EXPORT_SYMBOL_GPL
+0x6fa58bae	class_remove_file	vmlinux	EXPORT_SYMBOL_GPL
+0x3d22be36	agp_backend_acquire	vmlinux	EXPORT_SYMBOL
+0x816570b2	textsearch_destroy	vmlinux	EXPORT_SYMBOL
+0x0705f9b6	snd_pcm_hw_constraint_msbits	sound/core/snd-pcm	EXPORT_SYMBOL
+0x392b9d71	v4l2_device_register_subdev_nodes	drivers/media/video/videodev	EXPORT_SYMBOL_GPL
+0x23a574fd	security_secmark_relabel_packet	vmlinux	EXPORT_SYMBOL
+0xd74a8cf4	unmap_underlying_metadata	vmlinux	EXPORT_SYMBOL
+0x8808d8bf	sync_inode	vmlinux	EXPORT_SYMBOL
+0xb859f38b	krealloc	vmlinux	EXPORT_SYMBOL
+0x1eac12c6	oxygen_read32	sound/pci/oxygen/snd-oxygen-lib	EXPORT_SYMBOL
+0xa0fd2427	snd_pci_quirk_lookup_id	sound/core/snd	EXPORT_SYMBOL
+0x9ead1b97	snd_card_create	sound/core/snd	EXPORT_SYMBOL
+0xd4534d80	crc8_populate_msb	lib/crc8	EXPORT_SYMBOL
+0xab9ad613	crc8_populate_lsb	lib/crc8	EXPORT_SYMBOL
+0x35e33c1e	nfs4_acl_write_who	fs/nfsd/nfsd	EXPORT_SYMBOL
+0xf421b6d5	il_get_single_channel_number	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xe5022f95	sch56xx_read_virtual_reg12	drivers/hwmon/sch56xx-common	EXPORT_SYMBOL
+0x21b7679d	drm_fb_helper_fini	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0x6c3c51c6	input_register_device	vmlinux	EXPORT_SYMBOL
+0x31266931	con_debug_leave	vmlinux	EXPORT_SYMBOL_GPL
+0xe7b858c2	__invalidate_device	vmlinux	EXPORT_SYMBOL
+0xb4d6e420	seq_put_decimal_ull	vmlinux	EXPORT_SYMBOL
+0x9e7d3f0f	snd_midi_event_reset_encode	sound/core/seq/snd-seq-midi-event	EXPORT_SYMBOL
+0xbc64d47a	__fscache_write_page	fs/fscache/fscache	EXPORT_SYMBOL
+0x31bfc581	gigaset_stop	drivers/isdn/gigaset/gigaset	EXPORT_SYMBOL_GPL
+0xcba8923e	ata_sff_qc_issue	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x2ba707a8	sysctl_tcp_low_latency	vmlinux	EXPORT_SYMBOL
+0x7d05bdb9	led_classdev_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x1163f0a7	blk_max_low_pfn	vmlinux	EXPORT_SYMBOL
+0x8d7585f4	blk_queue_free_tags	vmlinux	EXPORT_SYMBOL
+0xe6983615	elv_unregister_queue	vmlinux	EXPORT_SYMBOL
+0xaa397122	register_sysctl_table	vmlinux	EXPORT_SYMBOL
+0x67b78eb3	seq_hlist_next_rcu	vmlinux	EXPORT_SYMBOL
+0x6a27bfce	csum_partial_copy_generic	vmlinux	EXPORT_SYMBOL
+0x62acf28c	irias_add_string_attrib	net/irda/irda	EXPORT_SYMBOL
+0xe293f830	nfs4_insert_deviceid_node	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0xd2562494	dev_attr_usbip_debug	drivers/staging/usbip/usbip-core	EXPORT_SYMBOL_GPL
+0xbf4a6580	comedi_check_chanlist	drivers/staging/comedi/comedi	EXPORT_SYMBOL
+0xc6b1163f	mdio45_links_ok	drivers/net/mdio	EXPORT_SYMBOL
+0x5b077fed	drm_idlelock_release	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x5866bba4	tty_flip_buffer_push	vmlinux	EXPORT_SYMBOL
+0xf745cb16	atomic64_sub_return_cx8	vmlinux	EXPORT_SYMBOL
+0x5397f2d3	posix_acl_init	vmlinux	EXPORT_SYMBOL
+0xc3687567	ceph_osdc_wait_request	net/ceph/libceph	EXPORT_SYMBOL
+0x4b178fbf	atm_dev_register	net/atm/atm	EXPORT_SYMBOL
+0x25cf8049	matroxfb_PLL_calcclock	drivers/video/matrox/matroxfb_misc	EXPORT_SYMBOL
+0xfc5630db	cxgbi_ddp_ppod_set	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0x1d34e996	pp_msgs	drivers/edac/edac_mce_amd	EXPORT_SYMBOL_GPL
+0x630b8692	uart_get_divisor	vmlinux	EXPORT_SYMBOL
+0x6fe3d8cf	ktime_add_safe	vmlinux	EXPORT_SYMBOL_GPL
+0xf9a482f9	msleep	vmlinux	EXPORT_SYMBOL
+0xf7b017cc	snd_opl4_read	sound/drivers/opl4/snd-opl4-lib	EXPORT_SYMBOL
+0xcfb75f29	ceph_zero_page_vector_range	net/ceph/libceph	EXPORT_SYMBOL
+0x09290ab3	ceph_debugfs_init	net/ceph/libceph	EXPORT_SYMBOL
+0x01eb5ddf	ceph_monc_create_snapid	net/ceph/libceph	EXPORT_SYMBOL
+0x3618c80e	dca3_get_tag	drivers/dca/dca	EXPORT_SYMBOL_GPL
+0xdf365971	sata_async_notification	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xbe197e48	unregister_netdev	vmlinux	EXPORT_SYMBOL
+0x970eeabd	proc_net_mkdir	vmlinux	EXPORT_SYMBOL_GPL
+0x52c2641d	__bforget	vmlinux	EXPORT_SYMBOL
+0x5907337c	__audit_inode_child	vmlinux	EXPORT_SYMBOL_GPL
+0xb5bed635	xdr_reserve_space	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xdb2fa697	xt_register_table	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0x586f69ad	set_h225_addr_hook	net/netfilter/nf_conntrack_h323	EXPORT_SYMBOL_GPL
+0xebfef7aa	lapb_disconnect_request	net/lapb/lapb	EXPORT_SYMBOL
+0xa5aa3586	p9stat_read	net/9p/9pnet	EXPORT_SYMBOL
+0x2670be9a	uwb_pal_unregister	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0x05bf2d8b	usb_serial_generic_unthrottle	drivers/usb/serial/usbserial	EXPORT_SYMBOL_GPL
+0x65fa533b	usb_unpoison_anchored_urbs	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x03d3a3a7	scsi_device_lookup_by_target	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x0f5b2f9a	sas_alloc_task	drivers/scsi/libsas/libsas	EXPORT_SYMBOL_GPL
+0xd1197240	il_pci_suspend	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xe0ff7a18	unregister_pppox_proto	drivers/net/ppp/pppox	EXPORT_SYMBOL
+0x1c3790d4	nand_lock	drivers/mtd/nand/nand	EXPORT_SYMBOL
+0xb4fcb11b	rc_map_unregister	drivers/media/rc/rc-core	EXPORT_SYMBOL_GPL
+0x81e3a1ff	md_unregister_thread	drivers/md/md-mod	EXPORT_SYMBOL
+0xe836f8c5	inet6_add_protocol	vmlinux	EXPORT_SYMBOL
+0xcb3ab6d0	raw_unhash_sk	vmlinux	EXPORT_SYMBOL_GPL
+0xdff7656f	sock_no_listen	vmlinux	EXPORT_SYMBOL
+0xb2a37dff	input_mt_destroy_slots	vmlinux	EXPORT_SYMBOL
+0x79aa04a2	get_random_bytes	vmlinux	EXPORT_SYMBOL
+0xab600421	probe_irq_off	vmlinux	EXPORT_SYMBOL
+0xbff999e7	snd_ctl_activate_id	sound/core/snd	EXPORT_SYMBOL_GPL
+0xc3c447f5	rpcauth_unregister	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xc1f8e504	usb_serial_generic_submit_read_urbs	drivers/usb/serial/usbserial	EXPORT_SYMBOL_GPL
+0x45d6ed66	fc_eh_host_reset	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x36e9c1e9	rt2x00mac_sw_scan_complete	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x8cce5391	sdhci_get_of_property	drivers/mmc/host/sdhci-pltfm	EXPORT_SYMBOL_GPL
+0x9660a33b	ipmi_smi_add_proc_entry	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0xc236c5e3	tcf_exts_destroy	vmlinux	EXPORT_SYMBOL
+0x381d06c9	regcache_sync_region	vmlinux	EXPORT_SYMBOL_GPL
+0xcbc8f34e	pm_runtime_allow	vmlinux	EXPORT_SYMBOL_GPL
+0x2db08531	do_unbind_con_driver	vmlinux	EXPORT_SYMBOL_GPL
+0xdaf4dfb3	fb_mode_option	vmlinux	EXPORT_SYMBOL_GPL
+0x3c9390db	pci_vpd_find_tag	vmlinux	EXPORT_SYMBOL_GPL
+0xd38480a0	rb_augment_erase_end	vmlinux	EXPORT_SYMBOL
+0xe0fba64e	blk_peek_request	vmlinux	EXPORT_SYMBOL
+0x96fafe85	rds_stats_info_copy	net/rds/rds	EXPORT_SYMBOL_GPL
+0xc9f82b38	ceph_msgr_init	net/ceph/libceph	EXPORT_SYMBOL
+0x30a15952	ceph_create_client	net/ceph/libceph	EXPORT_SYMBOL
+0x341e4e73	usb_serial_generic_close	drivers/usb/serial/usbserial	EXPORT_SYMBOL_GPL
+0x296b3286	cnic_register_driver	drivers/net/ethernet/broadcom/cnic	EXPORT_SYMBOL
+0xb00fcbc8	sdio_unregister_driver	drivers/mmc/core/mmc_core	EXPORT_SYMBOL_GPL
+0x53d6bc47	dm_exception_store_type_unregister	drivers/md/dm-snapshot	EXPORT_SYMBOL
+0xe9740eb2	input_free_polled_device	drivers/input/input-polldev	EXPORT_SYMBOL
+0x612ed9b2	drm_mode_connector_attach_encoder	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x8a5e05b4	tcf_hash_lookup	vmlinux	EXPORT_SYMBOL
+0x30843ce3	sock_no_poll	vmlinux	EXPORT_SYMBOL
+0x039b59fb	regulator_get	vmlinux	EXPORT_SYMBOL_GPL
+0xeb766978	blk_rq_prep_clone	vmlinux	EXPORT_SYMBOL_GPL
+0x50bbb5ab	crypto_alloc_shash	vmlinux	EXPORT_SYMBOL_GPL
+0xa11cda53	crypto_alloc_ahash	vmlinux	EXPORT_SYMBOL_GPL
+0x4d9b6d35	snd_pcm_format_size	sound/core/snd-pcm	EXPORT_SYMBOL
+0x269273ec	unregister_ip_vs_scheduler	net/netfilter/ipvs/ip_vs	EXPORT_SYMBOL
+0x7857d7c2	cxgb3_unregister_client	drivers/net/ethernet/chelsio/cxgb3/cxgb3	EXPORT_SYMBOL
+0xe606d0df	v4l2_ctrl_activate	drivers/media/video/videodev	EXPORT_SYMBOL
+0xc3801f82	ib_alloc_device	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x245010f3	__vmbus_driver_register	drivers/hv/hv_vmbus	EXPORT_SYMBOL_GPL
+0x512e214d	drm_mode_detachmode_crtc	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xe0ccf407	vlan_ioctl_set	vmlinux	EXPORT_SYMBOL
+0xc11d8093	iov_shorten	vmlinux	EXPORT_SYMBOL
+0x6a037cf1	mempool_kfree	vmlinux	EXPORT_SYMBOL
+0xe9a5dc89	irttp_data_request	net/irda/irda	EXPORT_SYMBOL
+0xd63429c8	irlmp_data_request	net/irda/irda	EXPORT_SYMBOL
+0x5c5bb78c	scsi_scan_target	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x9fe73fb6	rt2800_config_erp	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0x346e7310	subsys_dev_iter_init	vmlinux	EXPORT_SYMBOL_GPL
+0x7a40b701	subsys_dev_iter_exit	vmlinux	EXPORT_SYMBOL_GPL
+0xf0ef15b4	list_sort	vmlinux	EXPORT_SYMBOL
+0x93ee4977	register_quota_format	vmlinux	EXPORT_SYMBOL
+0x93e33826	remove_arg_zero	vmlinux	EXPORT_SYMBOL
+0x7b5c8440	vm_munmap	vmlinux	EXPORT_SYMBOL
+0x0c17b302	remap_pfn_range	vmlinux	EXPORT_SYMBOL
+0x46608fa0	getnstimeofday	vmlinux	EXPORT_SYMBOL
+0x8e240f8d	snd_opl4_create	sound/drivers/opl4/snd-opl4-lib	EXPORT_SYMBOL
+0xa00701e0	snd_opl3_create	sound/drivers/opl3/snd-opl3-lib	EXPORT_SYMBOL
+0x962f4b84	dccp_v4_conn_request	net/dccp/dccp_ipv4	EXPORT_SYMBOL_GPL
+0xe7e810f8	spk_serial_in	drivers/staging/speakup/speakup	EXPORT_SYMBOL_GPL
+0xf6fc97bb	cfc_write_array_to_buffer	drivers/staging/comedi/drivers/comedi_fc	EXPORT_SYMBOL
+0x38870992	ath9k_hw_rxprocdesc	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x161f9a96	phy_register_fixup	drivers/net/phy/libphy	EXPORT_SYMBOL
+0xafb0258a	vb2_wait_for_all_buffers	drivers/media/video/videobuf2-core	EXPORT_SYMBOL_GPL
+0xa91285eb	dib8000_set_gpio	drivers/media/dvb/frontends/dib8000	EXPORT_SYMBOL
+0x8ecd269d	flexcop_pid_feed_control	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0x7da28f12	nvram_check_checksum	drivers/char/nvram	EXPORT_SYMBOL
+0x07b82917	device_bind_driver	vmlinux	EXPORT_SYMBOL_GPL
+0x0c62dfa3	device_store_ulong	vmlinux	EXPORT_SYMBOL_GPL
+0xc80b6c25	pci_vpd_truncate	vmlinux	EXPORT_SYMBOL
+0x60a9676b	skcipher_geniv_exit	vmlinux	EXPORT_SYMBOL_GPL
+0x27ed6922	file_update_time	vmlinux	EXPORT_SYMBOL
+0x7fb75aba	bdi_unregister	vmlinux	EXPORT_SYMBOL
+0xf49bc67a	atm_pcr_goal	net/atm/atm	EXPORT_SYMBOL
+0xad7b55b1	mb_cache_entry_alloc	fs/mbcache	EXPORT_SYMBOL
+0x7726bf04	uwb_rc_cmd_async	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0x24ecd829	scsi_setup_blk_pc_cmnd	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x3add0799	nand_correct_data	drivers/mtd/nand/nand_ecc	EXPORT_SYMBOL
+0x97ce3da8	xc5000_attach	drivers/media/common/tuners/xc5000	EXPORT_SYMBOL
+0x7445c0e7	xc4000_attach	drivers/media/common/tuners/xc4000	EXPORT_SYMBOL
+0xd816489b	sis_info133_for_sata	drivers/ata/pata_sis	EXPORT_SYMBOL_GPL
+0xd1d6f413	inet6_csk_search_req	vmlinux	EXPORT_SYMBOL_GPL
+0x865029ac	__hw_addr_sync	vmlinux	EXPORT_SYMBOL
+0x87064a76	dev_uc_init	vmlinux	EXPORT_SYMBOL
+0x4c52fb6c	dev_mc_init	vmlinux	EXPORT_SYMBOL
+0x11a13e31	_kstrtol	vmlinux	EXPORT_SYMBOL
+0x2073eadf	kobject_uevent_env	vmlinux	EXPORT_SYMBOL_GPL
+0x872f214a	relay_file_operations	vmlinux	EXPORT_SYMBOL_GPL
+0x0fb0e29f	init_timer_key	vmlinux	EXPORT_SYMBOL
+0x7f86d4b1	fpu_finit	vmlinux	EXPORT_SYMBOL_GPL
+0x198cd22f	sound_class	sound/soundcore	EXPORT_SYMBOL
+0x9bf1b494	snd_emu10k1_voice_alloc	sound/pci/emu10k1/snd-emu10k1	EXPORT_SYMBOL
+0x3fb4d161	snd_seq_kernel_client_dispatch	sound/core/seq/snd-seq	EXPORT_SYMBOL
+0x5106293b	rpc_wake_up_status	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x7cb68d9d	fc_lport_notifier_head	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x9e637dc9	mlx4_xrcd_alloc	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xcf884f8d	pcf50633_reg_set_bit_mask	drivers/mfd/pcf50633	EXPORT_SYMBOL_GPL
+0x61bdb34f	ttm_eu_fence_buffer_objects	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x5ed303c5	pi_read_regr	drivers/block/paride/paride	EXPORT_SYMBOL
+0xf39bf4d9	put_cmsg	vmlinux	EXPORT_SYMBOL
+0x4fba8e33	skb_free_datagram	vmlinux	EXPORT_SYMBOL
+0x879746f2	pci_wake_from_d3	vmlinux	EXPORT_SYMBOL
+0xfc5fa008	filp_close	vmlinux	EXPORT_SYMBOL
+0xcb807900	truncate_setsize	vmlinux	EXPORT_SYMBOL
+0x53f2ef10	wait_for_completion_interruptible	vmlinux	EXPORT_SYMBOL
+0x44bcfa6d	system_nrt_freezable_wq	vmlinux	EXPORT_SYMBOL_GPL
+0x739a64ec	snd_es1688_reset	sound/isa/es1688/snd-es1688-lib	EXPORT_SYMBOL
+0x0c85c83c	svcauth_gss_flavor	net/sunrpc/auth_gss/auth_rpcgss	EXPORT_SYMBOL_GPL
+0x8d1a827e	svcauth_gss_register_pseudoflavor	net/sunrpc/auth_gss/auth_rpcgss	EXPORT_SYMBOL_GPL
+0x67b27ec1	tty_std_termios	vmlinux	EXPORT_SYMBOL
+0x507bb39f	generic_readlink	vmlinux	EXPORT_SYMBOL
+0x1602cc18	snd_hda_mixer_bind_ctls_put	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xa414d519	svga_get_caps	drivers/video/svgalib	EXPORT_SYMBOL
+0x5d34e34a	usb_deregister_device_driver	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xe2f1a6da	usbnet_nway_reset	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0x7e6f1307	capi20_get_manufacturer	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x044088f1	ether_setup	vmlinux	EXPORT_SYMBOL
+0x4010f245	device_create_file	vmlinux	EXPORT_SYMBOL_GPL
+0xc967fbd8	__break_lease	vmlinux	EXPORT_SYMBOL
+0x60110c88	get_task_comm	vmlinux	EXPORT_SYMBOL_GPL
+0xba5fce81	__get_vm_area	vmlinux	EXPORT_SYMBOL_GPL
+0xadb5559d	param_ops_byte	vmlinux	EXPORT_SYMBOL
+0x6b7589f4	param_set_bool	vmlinux	EXPORT_SYMBOL
+0xbfc407b4	param_ops_bint	vmlinux	EXPORT_SYMBOL
+0x6ca22cff	xprt_free	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xebebae60	transport_generic_map_mem_to_cmd	drivers/target/target_core_mod	EXPORT_SYMBOL
+0xbae34c27	scsi_nl_remove_transport	drivers/scsi/scsi_mod	EXPORT_SYMBOL_GPL
+0x934ae50a	i2o_find_iop	drivers/message/i2o/i2o_core	EXPORT_SYMBOL
+0x0fccafb1	drm_global_item_unref	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x79e476e9	async_tx_quiesce	crypto/async_tx/async_tx	EXPORT_SYMBOL_GPL
+0x29bfbaef	vga_switcheroo_register_handler	vmlinux	EXPORT_SYMBOL
+0xc5f46566	rb_augment_insert	vmlinux	EXPORT_SYMBOL
+0xbf12e74e	would_dump	vmlinux	EXPORT_SYMBOL
+0xd883ee93	truncate_inode_pages_range	vmlinux	EXPORT_SYMBOL
+0x21c3d1ac	force_sig	vmlinux	EXPORT_SYMBOL
+0x16756dc0	snd_usbmidi_input_start	sound/usb/snd-usbmidi-lib	EXPORT_SYMBOL
+0x6c32c8b5	ieee80211_is_shortslot_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x2a7ff5d7	parport_ieee1284_read_nibble	drivers/parport/parport	EXPORT_SYMBOL
+0x495426ee	v4l2_ctrl_get_name	drivers/media/video/videodev	EXPORT_SYMBOL
+0x1eb1a2b4	kvm_get_kvm	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x945d5059	pci_set_dma_max_seg_size	vmlinux	EXPORT_SYMBOL
+0x05240ee7	percpu_counter_batch	vmlinux	EXPORT_SYMBOL
+0xa25b3a5b	d_path	vmlinux	EXPORT_SYMBOL
+0x71de1573	vring_del_virtqueue	drivers/virtio/virtio_ring	EXPORT_SYMBOL_GPL
+0x20770b3c	scsi_is_fc_vport	drivers/scsi/scsi_transport_fc	EXPORT_SYMBOL
+0x143d81d3	rt2x00lib_dmadone	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0xc029ca23	il_hdl_error	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xe8f617eb	mISDN_unregister_clock	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0xb7dcb0fd	b1dma_load_firmware	drivers/isdn/hardware/avm/b1dma	EXPORT_SYMBOL
+0xa2b344cf	acpi_notifier_call_chain	vmlinux	EXPORT_SYMBOL
+0x8c14d941	vfs_fstatat	vmlinux	EXPORT_SYMBOL
+0xb2f979cc	snd_emu8000_update_chorus_mode	sound/isa/sb/snd-sbawe	EXPORT_SYMBOL
+0xcac8ca6e	snd_gf1_pcm_new	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0xf67496f9	hci_free_dev	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x916d3afc	sdev_evt_send	drivers/scsi/scsi_mod	EXPORT_SYMBOL_GPL
+0x50cf9888	usbnet_resume	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0x59f95809	bio_integrity_tag_size	vmlinux	EXPORT_SYMBOL
+0x12c79b8e	igrab	vmlinux	EXPORT_SYMBOL
+0x57c7f3fa	snd_pcm_open_substream	sound/core/snd-pcm	EXPORT_SYMBOL
+0x10940306	ceph_pagelist_set_cursor	net/ceph/libceph	EXPORT_SYMBOL
+0xdf5285a4	usb_hcd_unmap_urb_for_dma	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xe9010fa4	ssb_device_disable	drivers/ssb/ssb	EXPORT_SYMBOL
+0x739cb622	mwifiex_handle_rx_packet	drivers/net/wireless/mwifiex/mwifiex	EXPORT_SYMBOL_GPL
+0xde2f8c65	libipw_txb_free	drivers/net/wireless/ipw2x00/libipw	EXPORT_SYMBOL
+0x8a103663	mmc_can_secure_erase_trim	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x6c119e2b	__rtnl_link_register	vmlinux	EXPORT_SYMBOL_GPL
+0xbb7e23fc	rtnl_notify	vmlinux	EXPORT_SYMBOL
+0x265d46eb	sock_recvmsg	vmlinux	EXPORT_SYMBOL
+0x6bea6d61	pci_back_from_sleep	vmlinux	EXPORT_SYMBOL
+0x3907797f	blk_queue_bio	vmlinux	EXPORT_SYMBOL_GPL
+0xe19a46fe	blk_end_request_all	vmlinux	EXPORT_SYMBOL
+0xe1bf8d30	blk_end_request_err	vmlinux	EXPORT_SYMBOL_GPL
+0xd16712f3	crypto_check_attr_type	vmlinux	EXPORT_SYMBOL_GPL
+0x16305289	warn_slowpath_null	vmlinux	EXPORT_SYMBOL
+0xbb5d7758	snd_ac97_update	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0x5912926d	snd_device_free	sound/core/snd	EXPORT_SYMBOL
+0xe159facd	nf_ct_l3protos	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x5a9665f6	il_mac_sta_remove	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xc7f80911	nand_calculate_ecc	drivers/mtd/nand/nand_ecc	EXPORT_SYMBOL
+0xeab19ca1	linkwatch_fire_event	vmlinux	EXPORT_SYMBOL
+0xd37e13b4	regulator_set_optimum_mode	vmlinux	EXPORT_SYMBOL_GPL
+0x309dd9f8	xenbus_dev_error	vmlinux	EXPORT_SYMBOL_GPL
+0x5ac376a5	acpi_install_fixed_event_handler	vmlinux	EXPORT_SYMBOL
+0x5fc15359	oxygen_pci_suspend	sound/pci/oxygen/snd-oxygen-lib	EXPORT_SYMBOL
+0xeca287b5	scsi_init_io	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x33c89117	load_pdptrs	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x21a9580f	ndisc_build_skb	vmlinux	EXPORT_SYMBOL
+0x1598dc9d	unregister_netevent_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0xb9aeddc7	input_mt_report_slot_state	vmlinux	EXPORT_SYMBOL
+0xdccc9040	rpc_queue_upcall	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x0784451c	mlx4_unicast_attach	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x48cd96cf	mlx4_unicast_detach	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xcfef22c0	sdhci_remove_host	drivers/mmc/host/sdhci	EXPORT_SYMBOL_GPL
+0x413a2b59	v4l2_i2c_subdev_init	drivers/media/video/v4l2-common	EXPORT_SYMBOL_GPL
+0x542efe2a	v4l2_i2c_subdev_addr	drivers/media/video/v4l2-common	EXPORT_SYMBOL_GPL
+0x519241e0	mddev_congested	drivers/md/md-mod	EXPORT_SYMBOL
+0x072f8573	hiddev_hid_event	drivers/hid/usbhid/usbhid	EXPORT_SYMBOL_GPL
+0xb26656b6	snd_pcm_period_elapsed	sound/core/snd-pcm	EXPORT_SYMBOL
+0xa40bd703	ceph_pagelist_free_reserve	net/ceph/libceph	EXPORT_SYMBOL
+0xce08b034	usbatm_usb_probe	drivers/usb/atm/usbatm	EXPORT_SYMBOL_GPL
+0x5b666df9	ixj_pcmcia_probe	drivers/staging/telephony/ixj	EXPORT_SYMBOL
+0x41849acd	fcoe_ctlr_link_up	drivers/scsi/fcoe/libfcoe	EXPORT_SYMBOL
+0xbcc6cfd4	cxgbi_device_portmap_create	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0x0c0d42f7	i2400m_dev_bootstrap	drivers/net/wimax/i2400m/i2400m	EXPORT_SYMBOL_GPL
+0x0eff0311	drm_av_sync_delay	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x19d765f8	fib_default_rule_pref	vmlinux	EXPORT_SYMBOL
+0x119ec7d2	swiotlb_sync_single_for_device	vmlinux	EXPORT_SYMBOL
+0x5d68ac33	debugfs_create_x8	vmlinux	EXPORT_SYMBOL_GPL
+0x56fc1c95	kmap_to_page	vmlinux	EXPORT_SYMBOL
+0x742e6c1e	snd_hda_mixer_amp_volume_put	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xc2c1d7f4	mlx4_qp_query	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x8f699913	capilib_release	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x7a33596c	capi20_get_serial	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0xf4779477	uart_write_wakeup	vmlinux	EXPORT_SYMBOL
+0x05e38c41	pci_bus_read_config_word	vmlinux	EXPORT_SYMBOL
+0x1ab6ddec	snd_hda_codec_update_cache	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x240cdc29	snd_emu10k1_synth_copy_from_user	sound/pci/emu10k1/snd-emu10k1	EXPORT_SYMBOL
+0xe8854307	tifm_alloc_device	drivers/misc/tifm_core	EXPORT_SYMBOL
+0xd6f9f1ea	b1dma_interrupt	drivers/isdn/hardware/avm/b1dma	EXPORT_SYMBOL
+0x93f6098f	kvm_vcpu_on_spin	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xcce46f17	skb_append	vmlinux	EXPORT_SYMBOL
+0x31c7970f	pciserial_suspend_ports	vmlinux	EXPORT_SYMBOL_GPL
+0xc34b5fcd	xenbus_dev_remove	vmlinux	EXPORT_SYMBOL_GPL
+0xbd711e38	read_cache_page_gfp	vmlinux	EXPORT_SYMBOL
+0x225e909e	schedule_delayed_work_on	vmlinux	EXPORT_SYMBOL
+0xb15d1399	uwb_rc_mac_addr_get	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0x425b28a4	uwb_rc_dev_addr_get	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0x3ecd1fb3	usb_stor_CB_reset	drivers/usb/storage/usb-storage	EXPORT_SYMBOL_GPL
+0x672e3068	iscsi_tcp_segment_unmap	drivers/scsi/libiscsi_tcp	EXPORT_SYMBOL_GPL
+0xd71bb0ce	wm97xx_read_aux_adc	drivers/input/touchscreen/wm97xx-ts	EXPORT_SYMBOL_GPL
+0x5a717d33	drm_fb_helper_debug_leave	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0x5656f2a0	sk_stream_error	vmlinux	EXPORT_SYMBOL
+0x14a15791	devm_request_and_ioremap	vmlinux	EXPORT_SYMBOL
+0x6332cc1a	audit_log_start	vmlinux	EXPORT_SYMBOL
+0xb123adc1	oxygen_write8_masked	sound/pci/oxygen/snd-oxygen-lib	EXPORT_SYMBOL
+0xa463fa7c	v4l2_ctrl_cluster	drivers/media/video/videodev	EXPORT_SYMBOL
+0x0c69b0cf	sparse_keymap_free	drivers/input/sparse-keymap	EXPORT_SYMBOL
+0x61a7b09c	netdev_crit	vmlinux	EXPORT_SYMBOL
+0x5ff42b08	acpi_video_get_capabilities	vmlinux	EXPORT_SYMBOL
+0x876dafc3	ec_write	vmlinux	EXPORT_SYMBOL
+0x2bc95bd4	memset	vmlinux	EXPORT_SYMBOL
+0xb2b704d9	sysfs_create_files	vmlinux	EXPORT_SYMBOL_GPL
+0x1f428b85	sget	vmlinux	EXPORT_SYMBOL
+0x1fe79e4d	pci_map_biosrom	vmlinux	EXPORT_SYMBOL
+0xe744ad9d	tcp_vegas_pkts_acked	net/ipv4/tcp_vegas	EXPORT_SYMBOL_GPL
+0xe3ff255a	hci_send_sco	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0xfa9c6007	uwb_rc_get_by_grandpa	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0x4ec59b2f	iscsi_tcp_dgst_header	drivers/scsi/libiscsi_tcp	EXPORT_SYMBOL_GPL
+0xcbdbc098	rtl92c_dm_check_txpower_tracking	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0x79bc2f6c	mtd_kmalloc_up_to	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0xf416aee7	v4l2_event_pending	drivers/media/video/videodev	EXPORT_SYMBOL_GPL
+0xdd728189	ttm_bo_unmap_virtual	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0xa189bf7e	cdrom_media_changed	drivers/cdrom/cdrom	EXPORT_SYMBOL
+0x722a5688	ahci_start_engine	drivers/ata/libahci	EXPORT_SYMBOL_GPL
+0xdc3fcbc9	__sw_hweight8	vmlinux	EXPORT_SYMBOL
+0x02ee26c1	free_pages_exact	vmlinux	EXPORT_SYMBOL
+0x6eda9749	tasklet_hrtimer_init	vmlinux	EXPORT_SYMBOL_GPL
+0xc348df3f	snd_ak4117_build	sound/i2c/other/snd-ak4117	EXPORT_SYMBOL
+0x46a54d1b	snd_ak4114_build	sound/i2c/other/snd-ak4114	EXPORT_SYMBOL
+0x8d2a1e85	snd_ak4113_build	sound/i2c/other/snd-ak4113	EXPORT_SYMBOL_GPL
+0xf057ea24	__fscache_uncache_all_inode_pages	fs/fscache/fscache	EXPORT_SYMBOL
+0xb559e455	w1_ds2760_read	drivers/w1/slaves/w1_ds2760	EXPORT_SYMBOL
+0xe396cf7b	ieee80211_stop_queue_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0xc3c42b0a	mlx4_cq_modify	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x559ffbf7	i2o_dma_map_sg	drivers/message/i2o/i2o_core	EXPORT_SYMBOL_GPL
+0x480dc53d	videobuf_dma_free	drivers/media/video/videobuf-dma-sg	EXPORT_SYMBOL_GPL
+0x32528d16	dib0090_update_rframp_7090	drivers/media/dvb/frontends/dib0090	EXPORT_SYMBOL
+0x064db9a5	mark_mounts_for_expiry	vmlinux	EXPORT_SYMBOL_GPL
+0xacfd81f6	work_cpu	vmlinux	EXPORT_SYMBOL_GPL
+0x4550ba8a	register_cpu_notifier	vmlinux	EXPORT_SYMBOL
+0xc61ed02b	snd_hda_enable_beep_device	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xba490602	nci_to_errno	net/nfc/nci/nci	EXPORT_SYMBOL
+0xd492c89c	w1_ds2760_write	drivers/w1/slaves/w1_ds2760	EXPORT_SYMBOL
+0xc6dfacb1	usb_wwan_write_room	drivers/usb/serial/usb_wwan	EXPORT_SYMBOL
+0xd98d62d0	cxd2820r_attach	drivers/media/dvb/frontends/cxd2820r	EXPORT_SYMBOL
+0x6d340f64	tty_termios_input_baud_rate	vmlinux	EXPORT_SYMBOL
+0xab1a4348	d_set_d_op	vmlinux	EXPORT_SYMBOL
+0x48d17824	irias_add_integer_attrib	net/irda/irda	EXPORT_SYMBOL
+0xf588343d	spi_attach_transport	drivers/scsi/scsi_transport_spi	EXPORT_SYMBOL
+0x1547655a	ib_alloc_fast_reg_page_list	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x6f6522a5	tpm_show_temp_deactivated	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x53c74bdd	unregister_cdrom	drivers/cdrom/cdrom	EXPORT_SYMBOL
+0x2e47f677	xfrm_aalg_get_byidx	vmlinux	EXPORT_SYMBOL_GPL
+0x34da8e01	unregister_tcf_proto_ops	vmlinux	EXPORT_SYMBOL
+0x8b9cfcc6	sock_update_netprioidx	vmlinux	EXPORT_SYMBOL_GPL
+0x9e54c057	ps2_drain	vmlinux	EXPORT_SYMBOL
+0xc9ee1912	pci_cfg_access_unlock	vmlinux	EXPORT_SYMBOL_GPL
+0xd859ac8c	o2net_fill_node_map	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0x7bfe9dac	ieee80211_wx_set_rawtx_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x677ca0f4	rt2x00usb_register_read_async	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0x11e10c61	mmc_erase_group_aligned	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x7f6175bb	drm_agp_bind	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xa363dab4	udp_table	vmlinux	EXPORT_SYMBOL
+0x48163ef2	agp3_generic_tlbflush	vmlinux	EXPORT_SYMBOL
+0xf996171c	pnp_get_resource	vmlinux	EXPORT_SYMBOL
+0xf407ec99	acpi_bus_get_status	vmlinux	EXPORT_SYMBOL
+0x96e79739	idr_get_new_above	vmlinux	EXPORT_SYMBOL
+0xb99cf582	ida_get_new_above	vmlinux	EXPORT_SYMBOL
+0x2e2f1740	ring_buffer_record_disable_cpu	vmlinux	EXPORT_SYMBOL_GPL
+0xc92ec43b	snd_hda_is_supported_format	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x73aac73d	rds_message_populate_header	net/rds/rds	EXPORT_SYMBOL_GPL
+0x0a7419f2	ieee80211_disable_dyn_ps	net/mac80211/mac80211	EXPORT_SYMBOL
+0x7d8ef55e	usbip_recv_iso	drivers/staging/usbip/usbip-core	EXPORT_SYMBOL_GPL
+0xaf3dd7dc	scsi_logging_level	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x62e9c18b	power_supply_am_i_supplied	drivers/power/power_supply	EXPORT_SYMBOL_GPL
+0xf887e9b0	__lbtf_cmd	drivers/net/wireless/libertas_tf/libertas_tf	EXPORT_SYMBOL_GPL
+0xc019f0e0	ath9k_hw_reset_tsf	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xa5228b24	v4l2_int_device_try_attach_all	drivers/media/video/v4l2-int-device	EXPORT_SYMBOL_GPL
+0x24c11956	regcache_mark_dirty	vmlinux	EXPORT_SYMBOL_GPL
+0x98d40aa3	transport_configure_device	vmlinux	EXPORT_SYMBOL_GPL
+0x9d06688b	register_xenbus_watch	vmlinux	EXPORT_SYMBOL_GPL
+0x60dd5a80	nla_put	vmlinux	EXPORT_SYMBOL
+0x0fcc1969	copy_from_user_nmi	vmlinux	EXPORT_SYMBOL_GPL
+0x05d6e19b	revalidate_disk	vmlinux	EXPORT_SYMBOL
+0x72e50086	vm_stat	vmlinux	EXPORT_SYMBOL
+0xd5b1376d	register_shrinker	vmlinux	EXPORT_SYMBOL
+0xf23fcb99	__kfifo_in	vmlinux	EXPORT_SYMBOL
+0x1412df9d	register_sound_dsp	sound/soundcore	EXPORT_SYMBOL
+0x3f8f335d	fcoe_get_wwn	drivers/scsi/fcoe/libfcoe	EXPORT_SYMBOL_GPL
+0x48081714	rtl_cam_delete_one_entry	drivers/net/wireless/rtlwifi/rtlwifi	EXPORT_SYMBOL
+0x625f5732	ipmi_register_smi	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0x624a6406	hwrng_register	drivers/char/hw_random/rng-core	EXPORT_SYMBOL_GPL
+0xdde246e3	misc_register	vmlinux	EXPORT_SYMBOL
+0x5641fbf5	block_invalidatepage	vmlinux	EXPORT_SYMBOL
+0xfbf6ccaa	may_umount_tree	vmlinux	EXPORT_SYMBOL
+0x7a944007	rcu_idle_enter	vmlinux	EXPORT_SYMBOL_GPL
+0x370c994a	rxrpc_kernel_free_skb	net/rxrpc/af-rxrpc	EXPORT_SYMBOL
+0x636b12c8	nf_nat_need_gre	net/ipv4/netfilter/nf_nat_proto_gre	EXPORT_SYMBOL_GPL
+0x17ce645d	locks_end_grace	fs/lockd/lockd	EXPORT_SYMBOL_GPL
+0xc7b3668f	ath9k_hw_getrxfilter	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x42f81815	ath9k_hw_setrxfilter	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xd8159b21	dvb_usb_device_init	drivers/media/dvb/dvb-usb/dvb-usb	EXPORT_SYMBOL
+0x66f30e0d	ib_init_ah_from_mcmember	drivers/infiniband/core/ib_sa	EXPORT_SYMBOL
+0xb6155435	ata_sff_wait_ready	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xc23e92a6	dev_attr_unload_heads	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xa8caca9c	udp_lib_get_port	vmlinux	EXPORT_SYMBOL
+0x2776d64c	tty_ldisc_ref	vmlinux	EXPORT_SYMBOL_GPL
+0xb3acabb8	devm_ioport_map	vmlinux	EXPORT_SYMBOL
+0x72bf2140	mtrr_add	vmlinux	EXPORT_SYMBOL
+0xd353efe4	rpc_put_sb_net	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x919e4092	dccp_sendmsg	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x84d40a39	lc_reset	lib/lru_cache	EXPORT_SYMBOL
+0x7916623f	il_mac_config	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xd1a23e18	i2400m_rx	drivers/net/wimax/i2400m/i2400m	EXPORT_SYMBOL_GPL
+0x36bd1888	i2400m_tx	drivers/net/wimax/i2400m/i2400m	EXPORT_SYMBOL_GPL
+0xbfee3ad5	loop_unregister_transfer	drivers/block/loop	EXPORT_SYMBOL
+0xb42a7722	tcp_md5_do_add	vmlinux	EXPORT_SYMBOL
+0x806b33f0	rtnl_af_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x9046ae2a	class_dev_iter_exit	vmlinux	EXPORT_SYMBOL_GPL
+0x39a055f3	acpi_remove_gpe_handler	vmlinux	EXPORT_SYMBOL
+0x2b63855f	blk_integrity_unregister	vmlinux	EXPORT_SYMBOL
+0x1c8e18c5	iget_failed	vmlinux	EXPORT_SYMBOL
+0xc3880471	xdr_decode_netobj	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x9aec901c	__fscache_acquire_cookie	fs/fscache/fscache	EXPORT_SYMBOL
+0x0a0fa6da	zs_free	drivers/staging/zsmalloc/zsmalloc	EXPORT_SYMBOL_GPL
+0x4666242d	rtl92c_phy_set_txpower_level	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0xd3044d28	mmc_cache_ctrl	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0xf323be41	input_register_polled_device	drivers/input/input-polldev	EXPORT_SYMBOL
+0x2b941579	ttm_lock_init	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x3f9626f7	ata_bmdma_dumb_qc_prep	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xaa3b8294	sata_set_spd	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x25c677c4	mac_pton	vmlinux	EXPORT_SYMBOL
+0xda08c0d7	pcibios_get_irq_routing_table	vmlinux	EXPORT_SYMBOL
+0x52c40493	pci_restore_state	vmlinux	EXPORT_SYMBOL
+0xf331236f	btree_geo32	vmlinux	EXPORT_SYMBOL_GPL
+0xe84fd18b	filemap_fdatawait_range	vmlinux	EXPORT_SYMBOL
+0x5053bfa8	register_atm_ioctl	net/atm/atm	EXPORT_SYMBOL
+0xa8d6daac	iTCO_vendor_pre_start	drivers/watchdog/iTCO_vendor_support	EXPORT_SYMBOL
+0x7f778ea1	ssb_pmu_set_ldo_paref	drivers/ssb/ssb	EXPORT_SYMBOL
+0x59e249e7	flexcop_dma_config_timer	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0x10dc6aee	flexcop_device_initialize	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0x84756e69	usb_enable_xhci_ports	vmlinux	EXPORT_SYMBOL_GPL
+0x5522a7a4	acpi_bus_trim	vmlinux	EXPORT_SYMBOL_GPL
+0xd0ea2221	inode_sub_bytes	vmlinux	EXPORT_SYMBOL
+0x349e6d2d	inode_set_bytes	vmlinux	EXPORT_SYMBOL
+0x6513d355	svc_unreg_xprt_class	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xd980f08c	ceph_alloc_page_vector	net/ceph/libceph	EXPORT_SYMBOL
+0x479dbf9f	dlmlock	fs/ocfs2/dlm/ocfs2_dlm	EXPORT_SYMBOL_GPL
+0xa583313e	usb_serial_generic_write	drivers/usb/serial/usbserial	EXPORT_SYMBOL_GPL
+0x95aba9e7	scsi_tgt_it_nexus_destroy	drivers/scsi/scsi_tgt	EXPORT_SYMBOL_GPL
+0x8c6bbfca	pps_register_source	drivers/pps/pps_core	EXPORT_SYMBOL
+0xce70a4d9	ar9003_paprd_is_done	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xd5bb0068	ar9003_get_pll_sqsum_dvc	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xe08507d1	mdiobus_register	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x2a3a9ae1	mlx4_buf_alloc	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x3ed0004d	v4l2_ctrl_new_std	drivers/media/video/videodev	EXPORT_SYMBOL
+0x0d5345ea	ib_cm_notify	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0xa24b29da	arp_xmit	vmlinux	EXPORT_SYMBOL
+0x675c3d41	__dev_get_by_index	vmlinux	EXPORT_SYMBOL
+0x4c47c4ab	__dev_getfirstbyhwtype	vmlinux	EXPORT_SYMBOL
+0x7102db29	agp_enable	vmlinux	EXPORT_SYMBOL
+0xd53cfd2e	pci_release_selected_regions	vmlinux	EXPORT_SYMBOL
+0x66a67dab	flex_array_shrink	vmlinux	EXPORT_SYMBOL
+0x703b4352	_raw_read_unlock_irqrestore	vmlinux	EXPORT_SYMBOL
+0xa30fa370	snd_timer_interrupt	sound/core/snd-timer	EXPORT_SYMBOL
+0xedcf6be4	qword_add	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xafb8a407	ceph_msgr_flush	net/ceph/libceph	EXPORT_SYMBOL
+0xb9b92419	fc_eh_device_reset	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0xfa193442	ppp_register_net_channel	drivers/net/ppp/ppp_generic	EXPORT_SYMBOL
+0x0e0a7985	mlx4_get_protocol_dev	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x8b6ee1be	sdio_claim_host	drivers/mmc/core/mmc_core	EXPORT_SYMBOL_GPL
+0x63f2d762	capi_ctr_suspend_output	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x0fedac01	__inet6_lookup_established	vmlinux	EXPORT_SYMBOL
+0x510dabfa	skb_recycle	vmlinux	EXPORT_SYMBOL
+0x381def4c	__nla_put_nohdr	vmlinux	EXPORT_SYMBOL
+0xcf551a91	crypto_unregister_instance	vmlinux	EXPORT_SYMBOL_GPL
+0xfe9cda4a	bdi_init	vmlinux	EXPORT_SYMBOL
+0xbcb838a1	amd_flush_garts	vmlinux	EXPORT_SYMBOL_GPL
+0x475e158a	synth_request_region	drivers/staging/speakup/speakup	EXPORT_SYMBOL_GPL
+0x9f32b727	il_setup_scan_deferred_work	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x95a39ee4	usbnet_probe	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0xd00e5a36	cxgb4_unregister_uld	drivers/net/ethernet/chelsio/cxgb4/cxgb4	EXPORT_SYMBOL
+0x2941db3d	md_register_thread	drivers/md/md-mod	EXPORT_SYMBOL
+0x40973662	sysctl_udp_mem	vmlinux	EXPORT_SYMBOL
+0x17df17bc	sysctl_tcp_ecn	vmlinux	EXPORT_SYMBOL
+0x5e51cd74	swiotlb_nr_tbl	vmlinux	EXPORT_SYMBOL_GPL
+0xdaa9a14e	snd_sbmixer_suspend	sound/isa/sb/snd-sb-common	EXPORT_SYMBOL
+0x48a9836b	rxrpc_unregister_security	net/rxrpc/af-rxrpc	EXPORT_SYMBOL_GPL
+0xe09462b9	ieee80211_stop_tx_ba_session	net/mac80211/mac80211	EXPORT_SYMBOL
+0xb6328ca4	generic_mii_ioctl	drivers/net/mii	EXPORT_SYMBOL
+0x0614dd5a	v4l2_video_std_frame_period	drivers/media/video/videodev	EXPORT_SYMBOL
+0x2c6d9b8f	drm_select_eld	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xf84b4edc	inet_csk_accept	vmlinux	EXPORT_SYMBOL
+0xade54214	inet_hash_connect	vmlinux	EXPORT_SYMBOL_GPL
+0x9a42abee	alloc_trdev	vmlinux	EXPORT_SYMBOL
+0x45a765cf	pci_add_resource	vmlinux	EXPORT_SYMBOL
+0x0334da4e	scsi_command_size_tbl	vmlinux	EXPORT_SYMBOL
+0xb58dcfa2	synchronize_sched_expedited	vmlinux	EXPORT_SYMBOL_GPL
+0x767ddb02	set_memory_wc	vmlinux	EXPORT_SYMBOL
+0x91607d95	set_memory_wb	vmlinux	EXPORT_SYMBOL
+0x486d3137	xprt_wake_pending_tasks	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x33b72039	bt_accept_dequeue	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x892f7848	p9_client_wstat	net/9p/9pnet	EXPORT_SYMBOL
+0x66e5496a	usb_bulk_msg	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x301d1915	fc_rport_init	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0xee041854	fc_lport_init	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x84e01f71	generic_rndis_bind	drivers/net/usb/rndis_host	EXPORT_SYMBOL_GPL
+0xf7c7420e	bitmap_endwrite	drivers/md/md-mod	EXPORT_SYMBOL
+0x33a56e3b	usbhid_wait_io	drivers/hid/usbhid/usbhid	EXPORT_SYMBOL_GPL
+0x83b956de	tcf_unregister_action	vmlinux	EXPORT_SYMBOL
+0x52026cdf	security_sb_parse_opts_str	vmlinux	EXPORT_SYMBOL
+0xb5a1b183	matrox_G100	drivers/video/matrox/matroxfb_DAC1064	EXPORT_SYMBOL
+0x081f217d	hdlcdrv_unregister	drivers/net/hamradio/hdlcdrv	EXPORT_SYMBOL
+0x9ece98d8	videobuf_mmap_mapper	drivers/media/video/videobuf-core	EXPORT_SYMBOL_GPL
+0x648f7957	zl10039_attach	drivers/media/dvb/frontends/zl10039	EXPORT_SYMBOL
+0x4e03c5da	gfn_to_pfn_prot	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x15d9251e	xfrm_state_delete_tunnel	vmlinux	EXPORT_SYMBOL
+0x0c1418f4	platform_device_add_resources	vmlinux	EXPORT_SYMBOL_GPL
+0xa0e2399d	acpiphp_register_attention	vmlinux	EXPORT_SYMBOL_GPL
+0x7521afb6	leave_mm	vmlinux	EXPORT_SYMBOL_GPL
+0x05396aff	__ieee80211_get_radio_led_name	net/mac80211/mac80211	EXPORT_SYMBOL
+0x57034a2a	p9_client_xattrcreate	net/9p/9pnet	EXPORT_SYMBOL_GPL
+0x2ba6950e	jbd2_journal_init_dev	fs/jbd2/jbd2	EXPORT_SYMBOL
+0x16e90de4	fscache_add_cache	fs/fscache/fscache	EXPORT_SYMBOL
+0xcf9f3328	dlm_release_lockspace	fs/dlm/dlm	EXPORT_SYMBOL_GPL
+0xdd666679	usb_wwan_close	drivers/usb/serial/usb_wwan	EXPORT_SYMBOL
+0x837c7f0f	sas_expander_alloc	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL
+0x3b430b29	scsi_rescan_device	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x2b1c93a4	rtl92c_phy_lc_calibrate	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0x7bb905bd	ath9k_hw_getnf	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xf1951e75	ib_umem_page_count	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x6680da56	in6_dev_finish_destroy	vmlinux	EXPORT_SYMBOL
+0x4aa8a50f	tcp_gro_receive	vmlinux	EXPORT_SYMBOL
+0x4f71283b	eth_header	vmlinux	EXPORT_SYMBOL
+0x5bfc03c3	unregister_keyboard_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0xfd51b281	gnttab_end_foreign_access_ref	vmlinux	EXPORT_SYMBOL_GPL
+0xdc692f8b	unregister_framebuffer	vmlinux	EXPORT_SYMBOL
+0xcd2d69da	pci_sriov_migration	vmlinux	EXPORT_SYMBOL_GPL
+0x8f48679a	rb_prev	vmlinux	EXPORT_SYMBOL
+0x5a166e9b	user_match	vmlinux	EXPORT_SYMBOL_GPL
+0xb886f30c	request_key_async_with_auxdata	vmlinux	EXPORT_SYMBOL
+0x69882fac	bd_unlink_disk_holder	vmlinux	EXPORT_SYMBOL_GPL
+0xea065e01	task_handoff_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x7cc8aa6b	down_killable	vmlinux	EXPORT_SYMBOL
+0xad37e0e2	rt2x00mac_tx_frames_pending	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x511fa6f1	em28xx_alloc_isoc	drivers/media/video/em28xx/em28xx	EXPORT_SYMBOL_GPL
+0xfebd1af9	capi20_register	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x45822642	ib_umem_get	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x80d86f0e	ttm_object_device_release	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0xad264a77	napi_gro_receive	vmlinux	EXPORT_SYMBOL
+0x16535106	pci_reset_function	vmlinux	EXPORT_SYMBOL_GPL
+0x5135a106	debugfs_print_regs32	vmlinux	EXPORT_SYMBOL_GPL
+0xc6fabd4b	phonet_stream_ops	net/phonet/phonet	EXPORT_SYMBOL
+0x0babe75e	comedi_buf_memcpy_from	drivers/staging/comedi/comedi	EXPORT_SYMBOL
+0xc2dc85de	rt2x00mac_get_stats	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x37ef643f	i2400m_setup	drivers/net/wimax/i2400m/i2400m	EXPORT_SYMBOL_GPL
+0x8f221056	ttm_dma_tt_init	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0xcfc47c87	cdrom_check_events	drivers/cdrom/cdrom	EXPORT_SYMBOL
+0xdfbab14d	kvm_release_page_clean	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xf396cd21	tcp_parse_md5sig_option	vmlinux	EXPORT_SYMBOL
+0x546bd8e5	nf_unregister_queue_handler	vmlinux	EXPORT_SYMBOL
+0x877bd0ea	xen_register_device_domain_owner	vmlinux	EXPORT_SYMBOL_GPL
+0x24eb7e32	leds_list	vmlinux	EXPORT_SYMBOL_GPL
+0x04c3f2c1	gnttab_empty_grant_references	vmlinux	EXPORT_SYMBOL_GPL
+0xc0a8ff16	acpi_evaluate_object	vmlinux	EXPORT_SYMBOL
+0xeae3dfd6	__const_udelay	vmlinux	EXPORT_SYMBOL
+0x5db7a170	snd_ac97_resume	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0x8b98ce8e	il_pm_ops	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xb93d6e98	capi_ctr_handle_message	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x05876c69	i915_gpu_busy	drivers/gpu/drm/i915/i915	EXPORT_SYMBOL_GPL
+0x4c971bec	ipmi_smi_msg_received	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0x18b5b898	tcp_v4_tw_get_peer	vmlinux	EXPORT_SYMBOL
+0x02fa3840	dev_get_by_flags_rcu	vmlinux	EXPORT_SYMBOL
+0x7647726c	handle_sysrq	vmlinux	EXPORT_SYMBOL
+0x2e6b89ee	pcie_port_bus_type	vmlinux	EXPORT_SYMBOL_GPL
+0x996bdb64	_kstrtoul	vmlinux	EXPORT_SYMBOL
+0x2cea32ee	unregister_oldmem_pfn_is_ram	vmlinux	EXPORT_SYMBOL_GPL
+0x76c3c9a2	__block_write_begin	vmlinux	EXPORT_SYMBOL
+0x1cc6719a	register_reboot_notifier	vmlinux	EXPORT_SYMBOL
+0x188a3dfb	timespec_trunc	vmlinux	EXPORT_SYMBOL
+0xe453dea3	ieee80211_queue_work	net/mac80211/mac80211	EXPORT_SYMBOL
+0xabb293f2	dccp_send_ack	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xd8eda45e	p9dirent_read	net/9p/9pnet	EXPORT_SYMBOL
+0xdbf5fa09	p9_client_readdir	net/9p/9pnet	EXPORT_SYMBOL
+0x1ac64151	scsi_tgt_queue_command	drivers/scsi/scsi_tgt	EXPORT_SYMBOL_GPL
+0xbe3dbd3d	v4l2_s_ctrl	drivers/media/video/videodev	EXPORT_SYMBOL
+0xdfd28376	b1_detect	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0x9745d638	drm_err	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x9e7264af	tpm_show_active	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0xd3593bf9	serpent_setkey	crypto/serpent_generic	EXPORT_SYMBOL_GPL
+0x32cea339	tcp_sockets_allocated	vmlinux	EXPORT_SYMBOL
+0x3e2ae3a8	acpi_release_global_lock	vmlinux	EXPORT_SYMBOL
+0xbcb22808	inode_owner_or_capable	vmlinux	EXPORT_SYMBOL
+0x1f792bcf	generic_pipe_buf_confirm	vmlinux	EXPORT_SYMBOL
+0x265a0a15	get_super_thawed	vmlinux	EXPORT_SYMBOL
+0x3cd19573	l2tp_tunnel_find	net/l2tp/l2tp_core	EXPORT_SYMBOL_GPL
+0xd840e7d8	scsi_device_quiesce	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xa70b2b05	p54_free_skb	drivers/net/wireless/p54/p54common	EXPORT_SYMBOL_GPL
+0x9d797ef7	usbnet_tx_timeout	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0x5b88faf6	cx2341x_ext_ctrls	drivers/media/video/cx2341x	EXPORT_SYMBOL
+0xcf683cf2	saa7146_devices	drivers/media/common/saa7146	EXPORT_SYMBOL_GPL
+0x9a216313	kvm_define_shared_msr	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x50529870	acpi_get_gpe_status	vmlinux	EXPORT_SYMBOL
+0xffa4c4ec	cgroup_lock	vmlinux	EXPORT_SYMBOL_GPL
+0x838a6fcf	snd_pcm_hw_param_first	sound/core/snd-pcm	EXPORT_SYMBOL
+0xf83b4063	uwb_rc_neh_error	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0xb8cf2ed1	memstick_resume_host	drivers/memstick/core/memstick	EXPORT_SYMBOL
+0x454aa44f	gigaset_debuglevel	drivers/isdn/gigaset/gigaset	EXPORT_SYMBOL_GPL
+0x286a9c13	bcma_core_disable	drivers/bcma/bcma	EXPORT_SYMBOL_GPL
+0x7b2ae2e1	pci_select_bars	vmlinux	EXPORT_SYMBOL
+0xf184d189	kernel_power_off	vmlinux	EXPORT_SYMBOL_GPL
+0xf7855ce6	snd_hda_queue_unsol_event	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xa63684cf	snd_tea6330t_detect	sound/i2c/snd-tea6330t	EXPORT_SYMBOL
+0xccf39457	snd_pcm_new	sound/core/snd-pcm	EXPORT_SYMBOL
+0xe1528792	svc_create_pooled	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xca81e1d5	ip6t_unregister_table	net/ipv6/netfilter/ip6_tables	EXPORT_SYMBOL
+0xb24e7413	qtree_write_dquot	fs/quota/quota_tree	EXPORT_SYMBOL
+0xbc3966c9	sas_read_port_mode_page	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL
+0xbde049b3	sas_unregister_ha	drivers/scsi/libsas/libsas	EXPORT_SYMBOL_GPL
+0x9ceda20a	mlx4_register_interface	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x172421a5	rdma_set_reuseaddr	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0xa19fb2cf	ib_find_gid	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xb8fee9f9	__ata_ehi_push_desc	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x3b0ab2a0	genl_register_ops	vmlinux	EXPORT_SYMBOL
+0xabfb21c5	con_copy_unimap	vmlinux	EXPORT_SYMBOL
+0xe9ed97d1	tty_ldisc_ref_wait	vmlinux	EXPORT_SYMBOL_GPL
+0xc26351f8	bind_evtchn_to_irq	vmlinux	EXPORT_SYMBOL_GPL
+0xf713a5e3	blk_rq_count_integrity_sg	vmlinux	EXPORT_SYMBOL
+0xac22de57	debugfs_create_u64	vmlinux	EXPORT_SYMBOL_GPL
+0x6e898fc7	dquot_quota_on_mount	vmlinux	EXPORT_SYMBOL
+0x7fbfbf24	block_commit_write	vmlinux	EXPORT_SYMBOL
+0x0ae26c81	_snd_pcm_lib_alloc_vmalloc_buffer	sound/core/snd-pcm	EXPORT_SYMBOL
+0x1db4b6a2	lapb_setparms	net/lapb/lapb	EXPORT_SYMBOL
+0xce516555	ircomm_control_request	net/irda/ircomm/ircomm	EXPORT_SYMBOL
+0x86073efe	journal_get_undo_access	fs/jbd/jbd	EXPORT_SYMBOL
+0x169d5aea	mite_devices	drivers/staging/comedi/drivers/mite	EXPORT_SYMBOL
+0x25698d59	if_usb_prog_firmware	drivers/net/wireless/libertas_tf/libertas_tf_usb	EXPORT_SYMBOL_GPL
+0xc4e486af	il_send_cmd_sync	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xae1246c5	ath9k_hw_computetxtime	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xce271bc0	kvm_complete_insn_gp	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xb9352c30	__tracepoint_kvm_inj_virq	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xd74c8b5b	__netdev_alloc_skb	vmlinux	EXPORT_SYMBOL
+0xfec3c2f2	bcd2bin	vmlinux	EXPORT_SYMBOL
+0x3dc8a8ee	perf_event_create_kernel_counter	vmlinux	EXPORT_SYMBOL_GPL
+0x0bfa3a19	rcu_idle_exit	vmlinux	EXPORT_SYMBOL_GPL
+0x90ff6c9f	nf_ct_invert_tuplepr	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x952c16ca	cxgbi_sock_rcv_wr_ack	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0x88afe372	cxgbi_sock_skb_entail	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0xad2607e6	mlx4_free_hwq_res	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x4bb5025f	v4l2_s_ext_ctrls	drivers/media/video/videodev	EXPORT_SYMBOL
+0xb1e125b2	tty_kref_put	vmlinux	EXPORT_SYMBOL
+0x56310925	regulator_mode_to_status	vmlinux	EXPORT_SYMBOL_GPL
+0xd94be3e0	fb_set_suspend	vmlinux	EXPORT_SYMBOL
+0x0178171f	locks_delete_block	vmlinux	EXPORT_SYMBOL
+0x6e11c1f4	dput	vmlinux	EXPORT_SYMBOL
+0x3f07efd4	try_module_get	vmlinux	EXPORT_SYMBOL
+0xb34cdb94	is_container_init	vmlinux	EXPORT_SYMBOL
+0xdc34f101	rpc_proc_unregister	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x2eaa2cfd	rpc_delay	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x8a490c90	rfkill_set_sw_state	net/rfkill/rfkill	EXPORT_SYMBOL
+0x1b50df30	fill_inquiry_response	drivers/usb/storage/usb-storage	EXPORT_SYMBOL_GPL
+0x365d3e62	usb_match_one_id	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x0caa5bce	transport_add_device_to_core_hba	drivers/target/target_core_mod	EXPORT_SYMBOL
+0xc5d55c7a	comedi_buf_get	drivers/staging/comedi/comedi	EXPORT_SYMBOL
+0x55f2a15a	il_free_geos	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xdff0fda7	ar9003_paprd_create_curve	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xc428068d	sata_deb_timing_long	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x20de5193	kvm_disable_largepages	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xabf63637	screen_glyph	vmlinux	EXPORT_SYMBOL_GPL
+0x59217615	srcu_notifier_call_chain	vmlinux	EXPORT_SYMBOL_GPL
+0x74c08941	kvm_async_pf_task_wake	vmlinux	EXPORT_SYMBOL_GPL
+0x47c7b0d2	cpu_number	vmlinux	EXPORT_SYMBOL
+0xb2e3a0fe	scsi_is_sdev_device	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x4bef2bca	il_rx_queue_update_write_ptr	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x7112c10e	ath9k_hw_gpio_get	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x83a3ea2a	mISDNisar_irq	drivers/isdn/hardware/mISDN/mISDNisar	EXPORT_SYMBOL
+0x791af523	mISDNisac_irq	drivers/isdn/hardware/mISDN/mISDNipac	EXPORT_SYMBOL
+0xc8d71b26	drm_vblank_pre_modeset	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x41e33e2d	vlan_vids_del_by_dev	vmlinux	EXPORT_SYMBOL
+0xfe7b8adf	sk_free	vmlinux	EXPORT_SYMBOL
+0x2a303d4d	check_signature	vmlinux	EXPORT_SYMBOL
+0x59c14222	snd_gf1_free_voice	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0x7ef39823	ieee80211_hdrlen	net/wireless/cfg80211	EXPORT_SYMBOL
+0x9d73ccac	ieee80211_stop_queue	net/mac80211/mac80211	EXPORT_SYMBOL
+0x510efa6e	parport_set_timeout	drivers/parport/parport	EXPORT_SYMBOL
+0xf3251e7b	v4l2_norm_to_name	drivers/media/video/videodev	EXPORT_SYMBOL
+0x72c99a52	ttm_agp_tt_unpopulate	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x652fd1e8	pci_bus_max_busnr	vmlinux	EXPORT_SYMBOL_GPL
+0x055a8ec1	kobject_init	vmlinux	EXPORT_SYMBOL
+0xb2e764e8	suspend_valid_only_mem	vmlinux	EXPORT_SYMBOL_GPL
+0x621d77a0	sleep_on	vmlinux	EXPORT_SYMBOL
+0x42160169	flush_workqueue	vmlinux	EXPORT_SYMBOL_GPL
+0x06a3ee58	irias_new_integer_value	net/irda/irda	EXPORT_SYMBOL
+0x25840acc	dccp_ioctl	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x1f35eeb3	parport_read	drivers/parport/parport	EXPORT_SYMBOL
+0xc424dc7c	mpt_suspend	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0xed22b3ca	smscore_register_device	drivers/media/dvb/siano/smsmdtv	EXPORT_SYMBOL_GPL
+0x82cda070	ata_link_online	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x020c47e0	key_type_user	vmlinux	EXPORT_SYMBOL_GPL
+0x6400b396	simple_lookup	vmlinux	EXPORT_SYMBOL
+0xd3d5986d	key_type_rxrpc	net/rxrpc/af-rxrpc	EXPORT_SYMBOL
+0xc1aa66f6	p9_client_clunk	net/9p/9pnet	EXPORT_SYMBOL
+0x9e3b63fb	usb_match_id	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x098460fd	dm_io	drivers/md/dm-mod	EXPORT_SYMBOL
+0xc7246721	ib_query_srq	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x1eda84e4	drm_idlelock_take	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xf78d04ab	netlink_register_notifier	vmlinux	EXPORT_SYMBOL
+0x74ae3f13	bio_integrity_endio	vmlinux	EXPORT_SYMBOL
+0xfe68e317	usb_add_hcd	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x8dea03c7	rt2x00lib_get_bssidx	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0xcdf7fa0a	il_rx_queue_space	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x93a17fa3	il_pci_resume	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x184b82fb	mmc_vddrange_to_ocrmask	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x4b216eef	dm_suspended	drivers/md/dm-mod	EXPORT_SYMBOL_GPL
+0x4adb30c5	ad7879_pm_ops	drivers/input/touchscreen/ad7879	EXPORT_SYMBOL
+0x2ed6e386	ib_ud_header_pack	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x99ed499a	xfrm_policy_insert	vmlinux	EXPORT_SYMBOL
+0x2dad1d37	__netpoll_cleanup	vmlinux	EXPORT_SYMBOL_GPL
+0x77d9d404	skb_segment	vmlinux	EXPORT_SYMBOL_GPL
+0x1af40e18	__copy_from_user_ll	vmlinux	EXPORT_SYMBOL
+0x33672fb5	blk_queue_max_segments	vmlinux	EXPORT_SYMBOL
+0xa1d13662	unlock_rename	vmlinux	EXPORT_SYMBOL
+0x9820b644	warn_slowpath_fmt_taint	vmlinux	EXPORT_SYMBOL
+0xa04bdbc0	snd_opl3_timer_new	sound/drivers/opl3/snd-opl3-lib	EXPORT_SYMBOL
+0xd48e9dd2	ip_vs_conn_put	net/netfilter/ipvs/ip_vs	EXPORT_SYMBOL
+0x747a5bef	iscsi_session_chkready	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0x0c8fac4b	il_scan_cancel	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x9989e57f	sdio_f0_writeb	drivers/mmc/core/mmc_core	EXPORT_SYMBOL_GPL
+0xd8d83a57	i2o_parm_table_get	drivers/message/i2o/i2o_core	EXPORT_SYMBOL
+0xa20b9031	dib7000p_attach	drivers/media/dvb/frontends/dib7000p	EXPORT_SYMBOL
+0x821ad1d0	dib7000m_attach	drivers/media/dvb/frontends/dib7000m	EXPORT_SYMBOL
+0xdc69e37a	dm_bufio_get_block_number	drivers/md/dm-bufio	EXPORT_SYMBOL_GPL
+0xe31447eb	capi20_put_message	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x7573bc03	tcp_init_congestion_ops	vmlinux	EXPORT_SYMBOL_GPL
+0x7ae56a9f	dev_gro_receive	vmlinux	EXPORT_SYMBOL
+0x4eb17772	skb_push	vmlinux	EXPORT_SYMBOL
+0xed1e5367	device_create	vmlinux	EXPORT_SYMBOL_GPL
+0x7343c77e	blk_run_queue_async	vmlinux	EXPORT_SYMBOL
+0xfdac5689	simple_rmdir	vmlinux	EXPORT_SYMBOL
+0x089d5020	alloc_file	vmlinux	EXPORT_SYMBOL
+0x538706bd	free_task	vmlinux	EXPORT_SYMBOL
+0x593822e7	tcp_vegas_get_info	net/ipv4/tcp_vegas	EXPORT_SYMBOL_GPL
+0xa1ae61d0	usb_register_driver	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x87be5314	ieee80211_wx_set_rate_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0xd6dcd5dd	ieee80211_wx_get_rate_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0xdb9d3775	ieee80211_wx_set_mode_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x8affb1bc	ieee80211_wx_get_mode_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0xc8f84283	ieee80211_wx_get_name_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x839a186f	ieee80211_wx_set_mlme_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x20a99c41	scsi_block_requests	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xcff5da36	ath9k_hw_proc_mib_event	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x4f0b687c	rndis_status	drivers/net/usb/rndis_host	EXPORT_SYMBOL_GPL
+0x487136d4	mtd_write	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0x1eb402bb	vb2_read	drivers/media/video/videobuf2-core	EXPORT_SYMBOL_GPL
+0xf52a9564	i2c_del_adapter	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x5838f6c9	rtc_valid_tm	vmlinux	EXPORT_SYMBOL
+0x5621ee31	sysfs_get	vmlinux	EXPORT_SYMBOL_GPL
+0x543ef284	seq_hlist_start	vmlinux	EXPORT_SYMBOL
+0x96573b80	__kfifo_dma_in_finish_r	vmlinux	EXPORT_SYMBOL
+0x99c95fa5	unregister_sound_special	sound/soundcore	EXPORT_SYMBOL
+0x7aee9c07	irttp_disconnect_request	net/irda/irda	EXPORT_SYMBOL
+0xc08e3b8e	irlmp_disconnect_request	net/irda/irda	EXPORT_SYMBOL
+0xae6e26a0	fat_dir_empty	fs/fat/fat	EXPORT_SYMBOL_GPL
+0xf179824c	sas_end_device_alloc	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL
+0x8e6656ba	il_power_update_mode	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xf8f2e6f7	il_cmd_queue_unmap	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x299c04f9	mmc_release_host	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x28da2be3	pcf50633_irq_mask	drivers/mfd/pcf50633	EXPORT_SYMBOL_GPL
+0x142b8b35	drm_buffer_copy_from_user	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x0412f3cb	ahci_save_initial_config	drivers/ata/libahci	EXPORT_SYMBOL_GPL
+0x7385ef7a	__getblk	vmlinux	EXPORT_SYMBOL
+0x8d32ecfd	cdev_alloc	vmlinux	EXPORT_SYMBOL
+0x2511771d	x86_cpu_to_apicid	vmlinux	EXPORT_SYMBOL
+0x1d459685	xstate_size	vmlinux	EXPORT_SYMBOL_GPL
+0xb72096b8	snd_hda_mixer_amp_tlv	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x6ad51551	snd_hda_input_mux_put	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x761a7d83	rpc_put_task_async	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xa539e531	lc_del	lib/lru_cache	EXPORT_SYMBOL
+0x5d69a15e	ocfs2_plock	fs/ocfs2/ocfs2_stackglue	EXPORT_SYMBOL_GPL
+0xba29038d	usb_hcd_unlink_urb_from_ep	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x59e88358	mlx4_qp_reserve_range	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x57f751b6	dvb_dmx_swfilter_packets	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0xa109f7f8	iw_cm_connect	drivers/infiniband/core/iw_cm	EXPORT_SYMBOL
+0x49e061df	device_wakeup_enable	vmlinux	EXPORT_SYMBOL_GPL
+0x4026214b	dev_warn	vmlinux	EXPORT_SYMBOL
+0xf502d273	acpi_get_current_resources	vmlinux	EXPORT_SYMBOL
+0x7d72cec3	security_path_mkdir	vmlinux	EXPORT_SYMBOL
+0xb2f63508	snd_jack_set_key	sound/core/snd	EXPORT_SYMBOL
+0xab3d1f95	nf_ct_untracked_status_or	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xd0efe320	iTCO_vendor_pre_stop	drivers/watchdog/iTCO_vendor_support	EXPORT_SYMBOL
+0xeffd0152	ieee80211_rx_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x724bcde1	get_phy_device	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x84a29ba7	roccat_common_receive	drivers/hid/hid-roccat-common	EXPORT_SYMBOL_GPL
+0xd77cb0d2	ata_cable_sata	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x8e1cd06f	kvm_set_pfn_accessed	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x7495958b	wakeup_source_register	vmlinux	EXPORT_SYMBOL_GPL
+0x74c134b9	__sw_hweight32	vmlinux	EXPORT_SYMBOL
+0x57674fd7	__sw_hweight16	vmlinux	EXPORT_SYMBOL
+0x9f46ced8	__sw_hweight64	vmlinux	EXPORT_SYMBOL
+0x1ec4eb34	flex_array_prealloc	vmlinux	EXPORT_SYMBOL
+0x93215e1d	__kfifo_skip_r	vmlinux	EXPORT_SYMBOL
+0xeab3d8ff	svc_exit_thread	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x2a92ce86	rds_message_unmapped	net/rds/rds	EXPORT_SYMBOL_GPL
+0xba9c37c1	dlm_posix_lock	fs/dlm/dlm	EXPORT_SYMBOL_GPL
+0xecadd55d	ubi_leb_map	drivers/mtd/ubi/ubi	EXPORT_SYMBOL_GPL
+0xf2576cb9	ipmi_smi_watchdog_pretimeout	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0x8ec30cfb	pagevec_lookup_tag	vmlinux	EXPORT_SYMBOL
+0x34184afe	current_kernel_time	vmlinux	EXPORT_SYMBOL
+0x5b748c0d	snd_wss_get_double	sound/isa/wss/snd-wss-lib	EXPORT_SYMBOL
+0xcdb35fee	snd_wss_put_double	sound/isa/wss/snd-wss-lib	EXPORT_SYMBOL
+0xf4f9315b	snd_gf1_peek	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0x0c19d700	iriap_getvaluebyclass_request	net/irda/irda	EXPORT_SYMBOL
+0x7e8ca82f	usb_reset_device	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x259113f7	rtl92c_set_fw_rsvdpagepkt	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0x061e0291	dib0090_set_vga	drivers/media/dvb/frontends/dib0090	EXPORT_SYMBOL
+0x66dcbbad	gigaset_initcs	drivers/isdn/gigaset/gigaset	EXPORT_SYMBOL_GPL
+0xe1cbbf7f	ata_sas_queuecmd	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x34fe5a33	kvm_vcpu_cache	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x28afd262	twofish_enc_blk	arch/x86/crypto/twofish-i586	EXPORT_SYMBOL_GPL
+0x6f068d90	twofish_dec_blk	arch/x86/crypto/twofish-i586	EXPORT_SYMBOL_GPL
+0x58923e54	tcp_reno_cong_avoid	vmlinux	EXPORT_SYMBOL_GPL
+0x5a744b86	netlink_set_nonroot	vmlinux	EXPORT_SYMBOL
+0xcca063cf	led_trigger_blink	vmlinux	EXPORT_SYMBOL_GPL
+0x7505bdef	memchr_inv	vmlinux	EXPORT_SYMBOL
+0xa8b3ba26	__dquot_free_space	vmlinux	EXPORT_SYMBOL
+0xa52da185	locks_copy_lock	vmlinux	EXPORT_SYMBOL
+0x3bf837cf	scsi_nl_add_transport	drivers/scsi/scsi_mod	EXPORT_SYMBOL_GPL
+0x9b626515	fc_lport_reset	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x87eb34f1	em28xx_audio_analog_set	drivers/media/video/em28xx/em28xx	EXPORT_SYMBOL_GPL
+0x8a31a0f4	gnet_stats_start_copy_compat	vmlinux	EXPORT_SYMBOL
+0x5b62b3f2	rtc_alarm_irq_enable	vmlinux	EXPORT_SYMBOL_GPL
+0x9b0fe775	pcim_iounmap_regions	vmlinux	EXPORT_SYMBOL
+0x7522f3ba	irq_modify_status	vmlinux	EXPORT_SYMBOL_GPL
+0xf1f04d23	snd_vx_irq_handler	sound/drivers/vx/snd-vx-lib	EXPORT_SYMBOL
+0x16551970	scsi_eh_restore_cmnd	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x84aaf823	orinoco_init	drivers/net/wireless/orinoco/orinoco	EXPORT_SYMBOL
+0x78639c44	drm_class_device_register	drivers/gpu/drm/drm	EXPORT_SYMBOL_GPL
+0x962f4098	dcbnl_ieee_notify	vmlinux	EXPORT_SYMBOL
+0x1fc615fe	inet6_del_protocol	vmlinux	EXPORT_SYMBOL
+0xebb65db5	xfrm_input_resume	vmlinux	EXPORT_SYMBOL
+0x5dd547f4	udplite_prot	vmlinux	EXPORT_SYMBOL
+0xceb52f86	sock_create_kern	vmlinux	EXPORT_SYMBOL
+0x87715125	transport_remove_device	vmlinux	EXPORT_SYMBOL_GPL
+0x8260686f	bitmap_find_next_zero_area	vmlinux	EXPORT_SYMBOL
+0x38e7de6e	bio_integrity_enabled	vmlinux	EXPORT_SYMBOL
+0x11dc2eb0	cache_destroy_net	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xf7d991c2	drm_gtf_mode	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xd3b9d0f3	sk_clone_lock	vmlinux	EXPORT_SYMBOL_GPL
+0x2a678a13	__suspend_report_result	vmlinux	EXPORT_SYMBOL_GPL
+0x29fde08e	vga_tryget	vmlinux	EXPORT_SYMBOL
+0x5a48534a	regulator_count_voltages	vmlinux	EXPORT_SYMBOL_GPL
+0x819e1c25	acpi_evaluate_reference	vmlinux	EXPORT_SYMBOL
+0x00ee9a42	d_find_any_alias	vmlinux	EXPORT_SYMBOL
+0x252bc670	ftrace_event_reg	vmlinux	EXPORT_SYMBOL_GPL
+0x0244e395	snd_timer_open	sound/core/snd-timer	EXPORT_SYMBOL
+0x4868f93a	snd_rawmidi_transmit_empty	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0x4205ffd7	ceph_destroy_options	net/ceph/libceph	EXPORT_SYMBOL
+0xf741c793	zlib_deflateEnd	lib/zlib_deflate/zlib_deflate	EXPORT_SYMBOL
+0xcb31f156	rt2800_wait_wpdma_ready	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0x9f059b92	stop_airo_card	drivers/net/wireless/airo	EXPORT_SYMBOL
+0x720be648	sk_attach_filter	vmlinux	EXPORT_SYMBOL_GPL
+0x560d8ef9	sk_detach_filter	vmlinux	EXPORT_SYMBOL_GPL
+0xed7e121e	fb_set_cmap	vmlinux	EXPORT_SYMBOL
+0x3e0f9459	pci_unregister_driver	vmlinux	EXPORT_SYMBOL
+0x7469fcfe	radix_tree_tagged	vmlinux	EXPORT_SYMBOL
+0x82e634df	unload_nls	vmlinux	EXPORT_SYMBOL
+0x05b32c3c	seq_open_private	vmlinux	EXPORT_SYMBOL
+0xb6bc49a9	__supported_pte_mask	vmlinux	EXPORT_SYMBOL_GPL
+0xff0ff7f7	oxygen_pci_remove	sound/pci/oxygen/snd-oxygen-lib	EXPORT_SYMBOL
+0xfc6bafce	snd_jack_set_parent	sound/core/snd	EXPORT_SYMBOL
+0x0f762d47	sunrpc_cache_update	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xc230d733	ax25_listen_release	net/ax25/ax25	EXPORT_SYMBOL
+0xfeadd76c	v9fs_get_trans_by_name	net/9p/9pnet	EXPORT_SYMBOL
+0xe1ea0586	usbip_dump_header	drivers/staging/usbip/usbip-core	EXPORT_SYMBOL_GPL
+0xf96376f3	subdev_8255_interrupt	drivers/staging/comedi/drivers/8255	EXPORT_SYMBOL
+0x25e2726c	rtl_pci_resume	drivers/net/wireless/rtlwifi/rtlwifi	EXPORT_SYMBOL
+0xaa8fc4a9	dvb_dmx_init	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0x6f14cd29	skb_gso_segment	vmlinux	EXPORT_SYMBOL
+0x2fe85763	kernel_listen	vmlinux	EXPORT_SYMBOL
+0x3ec7c07a	serio_unregister_driver	vmlinux	EXPORT_SYMBOL
+0x460c293d	pnp_register_card_driver	vmlinux	EXPORT_SYMBOL
+0x76bf656d	__bitmap_shift_left	vmlinux	EXPORT_SYMBOL
+0x40526057	gss_mech_get	net/sunrpc/auth_gss/auth_rpcgss	EXPORT_SYMBOL_GPL
+0x747054a7	nat_rtp_rtcp_hook	net/netfilter/nf_conntrack_h323	EXPORT_SYMBOL_GPL
+0x571df83e	ip_set_type_register	net/netfilter/ipset/ip_set	EXPORT_SYMBOL_GPL
+0xd2454ecc	ebt_unregister_table	net/bridge/netfilter/ebtables	EXPORT_SYMBOL
+0xd52ed51b	__scsi_device_lookup	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x5de0f61f	fc_eh_abort	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x6f13ce70	fc_set_rport_loss_tmo	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x70d85565	cxgbi_set_conn_param	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0x6389f39d	rc_repeat	drivers/media/rc/rc-core	EXPORT_SYMBOL_GPL
+0x76d0b0a6	ib_alloc_fast_reg_mr	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xe68f3dcf	ata_bmdma_stop	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xdf084992	napi_skb_finish	vmlinux	EXPORT_SYMBOL
+0x2e60bace	memcpy	vmlinux	EXPORT_SYMBOL
+0xe23ae481	blk_iopoll_complete	vmlinux	EXPORT_SYMBOL
+0x4dc0683b	crypto_chain	vmlinux	EXPORT_SYMBOL_GPL
+0x6d5bfec4	x86_hyper_xen_hvm	vmlinux	EXPORT_SYMBOL
+0x0b534f24	rpc_run_task	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x58bdd78e	ip6t_do_table	net/ipv6/netfilter/ip6_tables	EXPORT_SYMBOL
+0xd29b009f	crc_itu_t_table	lib/crc-itu-t	EXPORT_SYMBOL
+0x9e3f11eb	spi_release_transport	drivers/scsi/scsi_transport_spi	EXPORT_SYMBOL
+0x8001438f	ib_sa_unregister_client	drivers/infiniband/core/ib_sa	EXPORT_SYMBOL
+0x3c272b69	ata_std_postreset	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x079396cb	kvm_init_shadow_mmu	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xf6eff6b1	i8042_remove_filter	vmlinux	EXPORT_SYMBOL
+0x40c89d46	acpi_get_table_by_index	vmlinux	EXPORT_SYMBOL
+0x478d10b2	ht_destroy_irq	vmlinux	EXPORT_SYMBOL
+0x1c80d27d	btree_geo128	vmlinux	EXPORT_SYMBOL_GPL
+0x982c3e37	bdevname	vmlinux	EXPORT_SYMBOL
+0x43a0458b	blk_start_plug	vmlinux	EXPORT_SYMBOL
+0x9141a807	cdev_init	vmlinux	EXPORT_SYMBOL
+0x764bd77c	request_resource	vmlinux	EXPORT_SYMBOL
+0x36ecae33	snd_hda_mixer_bind_ctls_get	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x10e59306	snd_unregister_oss_device	sound/core/snd	EXPORT_SYMBOL
+0xe9042e2d	nf_ct_expect_init	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x4303af8f	nand_scan_bbt	drivers/mtd/nand/nand	EXPORT_SYMBOL
+0x9ba104f7	gameport_start_polling	drivers/input/gameport/gameport	EXPORT_SYMBOL
+0x17db078f	inet_getname	vmlinux	EXPORT_SYMBOL
+0xd88a21af	tcp_md5_do_lookup	vmlinux	EXPORT_SYMBOL
+0x5278b10a	regcache_sync	vmlinux	EXPORT_SYMBOL_GPL
+0xa1b80fd6	agp_generic_insert_memory	vmlinux	EXPORT_SYMBOL
+0x85e7deb2	iov_iter_fault_in_readable	vmlinux	EXPORT_SYMBOL
+0x82b2ecf6	module_mutex	vmlinux	EXPORT_SYMBOL_GPL
+0x359c6704	put_mtd_device	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0xa0d4b05b	mddev_suspend	drivers/md/md-mod	EXPORT_SYMBOL_GPL
+0xa89b14a5	dm_get_mapinfo	drivers/md/dm-mod	EXPORT_SYMBOL
+0x28faa261	drm_mode_config_init	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x01d19038	acpi_enable_subsystem	vmlinux	EXPORT_SYMBOL
+0xb90b6d5a	do_thread_private_mmap	vmlinux	EXPORT_SYMBOL
+0xd7ad7a69	modify_user_hw_breakpoint	vmlinux	EXPORT_SYMBOL_GPL
+0xbf9bcc8d	__cap_empty_set	vmlinux	EXPORT_SYMBOL
+0x0efc1d14	xprt_register_transport	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x30dbca29	spk_var_show	drivers/staging/speakup/speakup	EXPORT_SYMBOL_GPL
+0x6685dd9b	orinoco_stop	drivers/net/wireless/orinoco/orinoco	EXPORT_SYMBOL
+0xaa344204	mtd_get_fact_prot_info	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0x405376cd	dibx000_get_i2c_adapter	drivers/media/dvb/frontends/dibx000_common	EXPORT_SYMBOL
+0x6127db09	i2c_smbus_process_call	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x402468e9	i915_gpu_lower	drivers/gpu/drm/i915/i915	EXPORT_SYMBOL_GPL
+0x93eefc5a	platform_get_resource	vmlinux	EXPORT_SYMBOL_GPL
+0x08e974e6	pci_disable_pcie_error_reporting	vmlinux	EXPORT_SYMBOL_GPL
+0xb7e78501	crypto_shoot_alg	vmlinux	EXPORT_SYMBOL_GPL
+0x74bb6c34	iput	vmlinux	EXPORT_SYMBOL
+0x2bf8d577	sleep_on_timeout	vmlinux	EXPORT_SYMBOL
+0xe3b6da53	xprt_complete_rqst	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x61f83a0d	pn_sock_unhash	net/phonet/phonet	EXPORT_SYMBOL
+0x5a157ae4	nfs4_acl_get_whotype	fs/nfsd/nfsd	EXPORT_SYMBOL
+0x320faf24	ieee80211_wx_set_auth_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x1b49768d	iscsi_alloc_session	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0x16410708	capi_ctr_down	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x28a82da4	snmp_mib_init	vmlinux	EXPORT_SYMBOL_GPL
+0x7802917b	input_ff_upload	vmlinux	EXPORT_SYMBOL_GPL
+0xb7025069	intel_idle_cpu_init	vmlinux	EXPORT_SYMBOL_GPL
+0x9ad846e0	create_proc_entry	vmlinux	EXPORT_SYMBOL
+0x03fd2571	vm_unmap_ram	vmlinux	EXPORT_SYMBOL
+0x3437d4a9	proc_doulongvec_ms_jiffies_minmax	vmlinux	EXPORT_SYMBOL
+0xda0a6b0e	acpi_map_lsapic	vmlinux	EXPORT_SYMBOL
+0x15f19f4e	ceph_client_id	net/ceph/libceph	EXPORT_SYMBOL
+0xb36f3da3	fuse_sync_release	fs/fuse/fuse	EXPORT_SYMBOL_GPL
+0xf36eee0f	il_connection_init_rx_config	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xeb89fd47	mt352_attach	drivers/media/dvb/frontends/mt352	EXPORT_SYMBOL
+0x235da7fb	mt312_attach	drivers/media/dvb/frontends/mt312	EXPORT_SYMBOL
+0x233ce2e4	to_msgs	drivers/edac/edac_mce_amd	EXPORT_SYMBOL_GPL
+0xcedd2302	kvm_mmu_unprotect_page_virt	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x139e9231	xfrm_output	vmlinux	EXPORT_SYMBOL_GPL
+0x5b05cbb8	pci_enable_device_mem	vmlinux	EXPORT_SYMBOL
+0xeea9dbaf	bitmap_bitremap	vmlinux	EXPORT_SYMBOL
+0x71a50dbc	register_blkdev	vmlinux	EXPORT_SYMBOL
+0x1b9aca3f	jprobe_return	vmlinux	EXPORT_SYMBOL_GPL
+0x00a467af	rds_wq	net/rds/rds	EXPORT_SYMBOL_GPL
+0x48682e72	nf_conntrack_alter_reply	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x46a96ce4	jbd2_journal_blocks_per_page	fs/jbd2/jbd2	EXPORT_SYMBOL
+0x5529b743	wusbhc_chid_set	drivers/usb/wusbcore/wusbcore	EXPORT_SYMBOL_GPL
+0x8e7821c9	if_usb_reset_device	drivers/net/wireless/libertas_tf/libertas_tf_usb	EXPORT_SYMBOL_GPL
+0x0509e6bf	sdhci_free_host	drivers/mmc/host/sdhci	EXPORT_SYMBOL_GPL
+0x8a5f8d79	cx231xx_send_gpio_cmd	drivers/media/video/cx231xx/cx231xx	EXPORT_SYMBOL_GPL
+0x397c537b	drm_prime_destroy_file_private	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x83740f6f	ata_sff_data_xfer_noirq	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xe183ac1b	neigh_event_ns	vmlinux	EXPORT_SYMBOL
+0xd5da32c8	fb_firmware_edid	vmlinux	EXPORT_SYMBOL
+0xe58fb452	aer_irq	vmlinux	EXPORT_SYMBOL_GPL
+0x6139bb8d	elevator_change	vmlinux	EXPORT_SYMBOL
+0x76643540	iterate_supers_type	vmlinux	EXPORT_SYMBOL
+0x7f986ba6	snd_hda_jack_add_kctls	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x56af1cd5	snd_hda_codec_resume_cache	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x98736034	fscache_check_aux	fs/fscache/fscache	EXPORT_SYMBOL
+0xc6dc8c2f	dlm_new_lockspace	fs/dlm/dlm	EXPORT_SYMBOL_GPL
+0x8c4db1b5	usb_kill_anchored_urbs	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xebbd25e9	ssb_bus_sdiobus_register	drivers/ssb/ssb	EXPORT_SYMBOL
+0xd485607e	iscsi_queuecommand	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0x27956599	iw_cm_init_qp_attr	drivers/infiniband/core/iw_cm	EXPORT_SYMBOL
+0x18bdc23d	drm_gem_handle_delete	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x63205de1	ata_scsi_unlock_native_capacity	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xd9f23a10	request_firmware_nowait	vmlinux	EXPORT_SYMBOL
+0xd08197fa	acpi_load_tables	vmlinux	EXPORT_SYMBOL
+0xf6fd386d	cfg80211_unlink_bss	net/wireless/cfg80211	EXPORT_SYMBOL
+0x3b0601dc	nfs4_put_deviceid_node	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0xdcace704	ttm_bo_init_mm	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0xe9d6ba19	netdev_change_features	vmlinux	EXPORT_SYMBOL
+0x312f00ef	init_dummy_netdev	vmlinux	EXPORT_SYMBOL_GPL
+0x623803c8	hest_disable	vmlinux	EXPORT_SYMBOL_GPL
+0x9e4f1cfb	ring_buffer_resize	vmlinux	EXPORT_SYMBOL_GPL
+0x225894bc	p9_client_xattrwalk	net/9p/9pnet	EXPORT_SYMBOL_GPL
+0x27b41ed5	journal_errno	fs/jbd/jbd	EXPORT_SYMBOL
+0xe22034b7	sockfd_to_socket	drivers/staging/usbip/usbip-core	EXPORT_SYMBOL_GPL
+0x65fb6ecc	z8530_sync_txdma_open	drivers/net/wan/z85230	EXPORT_SYMBOL
+0x20b3a8b3	usbnet_get_drvinfo	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0xd4a70a3a	kvm_get_rflags	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x7ac9665a	kvm_set_rflags	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xdd4ab44e	__tracepoint_kvm_nested_intr_vmexit	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x86c953f5	dst_destroy	vmlinux	EXPORT_SYMBOL
+0x983b4bf6	pci_disable_ats	vmlinux	EXPORT_SYMBOL_GPL
+0x98699c90	pci_disable_msi	vmlinux	EXPORT_SYMBOL
+0xd46444cb	pci_disable_rom	vmlinux	EXPORT_SYMBOL_GPL
+0xb14450bd	pci_disable_ido	vmlinux	EXPORT_SYMBOL
+0x2a32ccd2	pci_disable_ltr	vmlinux	EXPORT_SYMBOL
+0x890fbeef	svc_wake_up	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xc65f2acd	xprt_write_space	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xe4729fac	nf_ct_helper_expectfn_unregister	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x88f2d66b	journal_check_available_features	fs/jbd/jbd	EXPORT_SYMBOL
+0x9321df95	dlm_lock	fs/dlm/dlm	EXPORT_SYMBOL_GPL
+0xd3015b44	ieee80211_softmac_stop_protocol_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x67cee87d	scsi_mode_sense	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x2d89342a	scsi_show_sense_hdr	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x11b01be2	hostap_set_roaming	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x1914105b	ath9k_hw_setpower	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xe6eeb024	mtd_blktrans_cease_background	drivers/mtd/mtd_blkdevs	EXPORT_SYMBOL_GPL
+0x0835da8f	videobuf_read_stream	drivers/media/video/videobuf-core	EXPORT_SYMBOL_GPL
+0xc2287577	ndisc_send_skb	vmlinux	EXPORT_SYMBOL
+0xb874d776	nf_unregister_queue_handlers	vmlinux	EXPORT_SYMBOL_GPL
+0xda7ca6cb	fb_mode_is_equal	vmlinux	EXPORT_SYMBOL
+0x9baac769	pci_enable_ltr	vmlinux	EXPORT_SYMBOL
+0x68dfc59f	__init_waitqueue_head	vmlinux	EXPORT_SYMBOL
+0xa637d7c2	nf_ct_get_tuple	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x8a4470cc	xfrm6_tunnel_register	net/ipv6/tunnel6	EXPORT_SYMBOL
+0x98f81ddc	xfrm4_tunnel_register	net/ipv4/tunnel4	EXPORT_SYMBOL
+0x42398c2b	ssb_clockspeed	drivers/ssb/ssb	EXPORT_SYMBOL
+0x040b1945	wl1271_load_firmware	drivers/net/wireless/wl12xx/wl12xx	EXPORT_SYMBOL_GPL
+0x987cfb92	ib_init_ah_from_wc	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x842bfd7d	blk_insert_cloned_request	vmlinux	EXPORT_SYMBOL_GPL
+0xe6802477	security_sb_set_mnt_opts	vmlinux	EXPORT_SYMBOL
+0x16c42197	init_timer_deferrable_key	vmlinux	EXPORT_SYMBOL
+0x6596569d	snd_pcm_lib_ioctl	sound/core/snd-pcm	EXPORT_SYMBOL
+0xf050036d	ircomm_open	net/irda/ircomm/ircomm	EXPORT_SYMBOL
+0x36963885	p9_client_readlink	net/9p/9pnet	EXPORT_SYMBOL
+0x7cd751e2	w1_read_8	drivers/w1/wire	EXPORT_SYMBOL_GPL
+0x7a30b12a	rt2x00queue_stop_queue	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x103352aa	brcmu_pktq_penq_head	drivers/net/wireless/brcm80211/brcmutil/brcmutil	EXPORT_SYMBOL
+0xc09c424f	brcmu_pktq_pdeq_tail	drivers/net/wireless/brcm80211/brcmutil/brcmutil	EXPORT_SYMBOL
+0x56501f4b	brcmu_pktq_peek_tail	drivers/net/wireless/brcm80211/brcmutil/brcmutil	EXPORT_SYMBOL
+0x087a7507	__mlx4_register_mac	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x371d11ce	ir_raw_event_store_edge	drivers/media/rc/rc-core	EXPORT_SYMBOL_GPL
+0xcf238f42	mISDN_unregister_device	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0x1e5ef992	skb_copy_datagram_from_iovec	vmlinux	EXPORT_SYMBOL
+0x8a5c7a80	regulator_enable	vmlinux	EXPORT_SYMBOL_GPL
+0x9ac11b74	suspend_set_ops	vmlinux	EXPORT_SYMBOL_GPL
+0x932c58a9	ircomm_close	net/irda/ircomm/ircomm	EXPORT_SYMBOL
+0xb6081d6d	ceph_msgr_exit	net/ceph/libceph	EXPORT_SYMBOL
+0xeb8c0465	lc_seq_printf_stats	lib/lru_cache	EXPORT_SYMBOL
+0xc14e469a	dst_alloc	vmlinux	EXPORT_SYMBOL
+0x3b3016d3	cpufreq_unregister_notifier	vmlinux	EXPORT_SYMBOL
+0xe93e49c3	devres_free	vmlinux	EXPORT_SYMBOL_GPL
+0x825f0828	timerqueue_iterate_next	vmlinux	EXPORT_SYMBOL_GPL
+0xb10fdcfc	blk_put_queue	vmlinux	EXPORT_SYMBOL
+0xa682332a	single_release	vmlinux	EXPORT_SYMBOL
+0x86854794	get_user_pages	vmlinux	EXPORT_SYMBOL
+0xf125c5b4	jbd2_journal_destroy	fs/jbd2/jbd2	EXPORT_SYMBOL
+0x3ed4d4d3	jbd2_journal_restart	fs/jbd2/jbd2	EXPORT_SYMBOL
+0x399fc9fe	mlx4_SYNC_TPT	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xf7896550	v4l2_device_register	drivers/media/video/videodev	EXPORT_SYMBOL_GPL
+0xa108eb4d	sysctl_optmem_max	vmlinux	EXPORT_SYMBOL
+0xeaa91a5b	scsi_mode_select	drivers/scsi/scsi_mod	EXPORT_SYMBOL_GPL
+0xfa5d4fbe	em28xx_capture_start	drivers/media/video/em28xx/em28xx	EXPORT_SYMBOL_GPL
+0xac024da0	ibnl_put_msg	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xaccabc6a	in4_pton	vmlinux	EXPORT_SYMBOL
+0xe57878a1	in6_pton	vmlinux	EXPORT_SYMBOL
+0xd20d2198	cfb_copyarea	vmlinux	EXPORT_SYMBOL
+0xd0181f4f	__bitmap_xor	vmlinux	EXPORT_SYMBOL
+0x2455c156	__clear_user	vmlinux	EXPORT_SYMBOL
+0x59d5a652	mnt_want_write	vmlinux	EXPORT_SYMBOL_GPL
+0x2b822751	xprt_lock_and_alloc_slot	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x14cb6981	config_group_init	fs/configfs/configfs	EXPORT_SYMBOL
+0xcb7c6bf0	memstick_alloc_host	drivers/memstick/core/memstick	EXPORT_SYMBOL
+0x0da13e68	ata_sff_softreset	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x038476d7	__dev_remove_pack	vmlinux	EXPORT_SYMBOL
+0x82034bdc	posix_acl_to_xattr	vmlinux	EXPORT_SYMBOL
+0xb18429eb	suspend_device_irqs	vmlinux	EXPORT_SYMBOL_GPL
+0x68ccff6e	dccp_invalid_packet	net/dccp/dccp_ipv4	EXPORT_SYMBOL_GPL
+0xbbd15a51	speakup_start_ttys	drivers/staging/speakup/speakup	EXPORT_SYMBOL_GPL
+0xe9473a92	__starget_for_each_device	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xa4622c1b	tifm_map_sg	drivers/misc/tifm_core	EXPORT_SYMBOL
+0xc3e4c127	ttpci_eeprom_decode_mac	drivers/media/dvb/ttpci/ttpci-eeprom	EXPORT_SYMBOL
+0xd116ac23	drm_mode_config_cleanup	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x85d16790	tcf_hash_insert	vmlinux	EXPORT_SYMBOL
+0xf13feb57	radix_tree_next_chunk	vmlinux	EXPORT_SYMBOL
+0x90a1004a	crypto_has_alg	vmlinux	EXPORT_SYMBOL_GPL
+0x6defd660	bioset_integrity_create	vmlinux	EXPORT_SYMBOL
+0x5f7fac8b	iget5_locked	vmlinux	EXPORT_SYMBOL
+0x69b2cb5f	do_mmap	vmlinux	EXPORT_SYMBOL
+0x3dcb88a0	irq_set_handler_data	vmlinux	EXPORT_SYMBOL
+0x0a84ac2e	yield_to	vmlinux	EXPORT_SYMBOL_GPL
+0x15fce11f	snd_sbdsp_command	sound/isa/sb/snd-sb-common	EXPORT_SYMBOL
+0x7513e94e	ieee80211_channel_to_frequency	net/wireless/cfg80211	EXPORT_SYMBOL
+0xa02f12fe	il_set_tx_power	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xd351f6b1	z8530_describe	drivers/net/wan/z85230	EXPORT_SYMBOL
+0x07b40571	mii_check_media	drivers/net/mii	EXPORT_SYMBOL
+0xffdb81e9	edac_mc_handle_fbd_ue	drivers/edac/edac_core	EXPORT_SYMBOL
+0xa8522879	edac_mc_handle_fbd_ce	drivers/edac/edac_core	EXPORT_SYMBOL
+0x412b7e11	__tracepoint_kvm_nested_intercepts	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x79a23450	user_revoke	vmlinux	EXPORT_SYMBOL
+0xf4218e4f	debugfs_create_dir	vmlinux	EXPORT_SYMBOL_GPL
+0x95149358	dcache_dir_lseek	vmlinux	EXPORT_SYMBOL
+0x0c2cdbf1	synchronize_sched	vmlinux	EXPORT_SYMBOL_GPL
+0x92a9c60c	time_to_tm	vmlinux	EXPORT_SYMBOL
+0x651a4139	test_taint	vmlinux	EXPORT_SYMBOL
+0xaa024146	sonet_copy_stats	net/atm/atm	EXPORT_SYMBOL
+0x15fe0cd3	raid6_gfexp	lib/raid6/raid6_pq	EXPORT_SYMBOL
+0x49f30ff9	thermal_zone_device_register	drivers/thermal/thermal_sys	EXPORT_SYMBOL
+0xc766ae09	synth_printf	drivers/staging/speakup/speakup	EXPORT_SYMBOL_GPL
+0x59dca8f0	dvb_register_frontend	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0xdcb71c02	netdev_printk	vmlinux	EXPORT_SYMBOL
+0x5892d54c	acpi_remove_address_space_handler	vmlinux	EXPORT_SYMBOL
+0xa5fdf540	pci_scan_bus_parented	vmlinux	EXPORT_SYMBOL
+0xf5a691cd	invalidate_bh_lrus	vmlinux	EXPORT_SYMBOL_GPL
+0x98cb107c	ipcomp_init_state	net/xfrm/xfrm_ipcomp	EXPORT_SYMBOL_GPL
+0xd59e3793	xt_check_match	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0x7f0e8e42	can_rx_register	net/can/can	EXPORT_SYMBOL
+0x14317cb5	ei_open	drivers/net/ethernet/8390/8390	EXPORT_SYMBOL
+0x98ef9724	cfi_qry_mode_on	drivers/mtd/chips/cfi_util	EXPORT_SYMBOL_GPL
+0x7e5b8f8d	dib3000mc_attach	drivers/media/dvb/frontends/dib3000mc	EXPORT_SYMBOL
+0xb24f7728	dib3000mb_attach	drivers/media/dvb/frontends/dib3000mb	EXPORT_SYMBOL
+0x5d413248	drm_mm_insert_node	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x7b56bd05	acpi_lid_notifier_register	drivers/acpi/button	EXPORT_SYMBOL
+0x24aac4d9	crypto_aes_expand_key	crypto/aes_generic	EXPORT_SYMBOL_GPL
+0x32c3cb4e	class_compat_register	vmlinux	EXPORT_SYMBOL_GPL
+0xc402cc99	register_acpi_notifier	vmlinux	EXPORT_SYMBOL
+0x53e3286c	d_splice_alias	vmlinux	EXPORT_SYMBOL
+0x813e3403	do_sync_read	vmlinux	EXPORT_SYMBOL
+0x8848379e	mem_map	vmlinux	EXPORT_SYMBOL
+0x0366307a	console_suspend_enabled	vmlinux	EXPORT_SYMBOL
+0xe53befee	register_sound_midi	sound/soundcore	EXPORT_SYMBOL
+0x8ec53b7a	svc_reg_xprt_class	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x78f9b710	nf_ct_l3proto_try_module_get	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x4449e1dd	synth_buffer_clear	drivers/staging/speakup/speakup	EXPORT_SYMBOL_GPL
+0xcb558453	pps_unregister_source	drivers/pps/pps_core	EXPORT_SYMBOL
+0x6de2d732	sdio_release_irq	drivers/mmc/core/mmc_core	EXPORT_SYMBOL_GPL
+0xfee9bc6d	mmc_wait_for_cmd	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x1dc5ddcc	wm97xx_reg_write	drivers/input/touchscreen/wm97xx-ts	EXPORT_SYMBOL_GPL
+0xf8fc0eb1	drm_mm_replace_node	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x6b04d77b	kobject_rename	vmlinux	EXPORT_SYMBOL_GPL
+0x35b6b772	param_ops_charp	vmlinux	EXPORT_SYMBOL
+0xd7ba575e	dlm_errmsg	fs/ocfs2/dlm/ocfs2_dlm	EXPORT_SYMBOL_GPL
+0xd2645f92	HTUpdateSelfAndPeerSetting	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0xdbd58efc	mxl5005s_attach	drivers/media/common/tuners/mxl5005s	EXPORT_SYMBOL
+0x9c35dc8b	drm_get_encoder_name	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xb4ad8d57	cgroup_taskset_cur_cgroup	vmlinux	EXPORT_SYMBOL_GPL
+0x0e8c09db	cad_pid	vmlinux	EXPORT_SYMBOL
+0x116af9eb	snd_trident_stop_voice	sound/pci/trident/snd-trident	EXPORT_SYMBOL
+0xa82a8645	o2nm_this_node	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0x5fdd0479	sdhci_enable_irq_wakeups	drivers/mmc/host/sdhci	EXPORT_SYMBOL_GPL
+0x94fe95fe	dib8000_remove_slave_frontend	drivers/media/dvb/frontends/dib8000	EXPORT_SYMBOL
+0x4eacc349	ata_host_start	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xb0aaa72d	agp_put_bridge	vmlinux	EXPORT_SYMBOL
+0x5a5a94a6	kstrtou8	vmlinux	EXPORT_SYMBOL
+0xcdfe7d25	blk_rq_map_integrity_sg	vmlinux	EXPORT_SYMBOL
+0x6528c063	get_task_pid	vmlinux	EXPORT_SYMBOL_GPL
+0xa69775f9	snd_hda_get_connections	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xa1afcd43	snd_component_add	sound/core/snd	EXPORT_SYMBOL
+0xe90fa4d6	ceph_auth_invalidate_authorizer	net/ceph/libceph	EXPORT_SYMBOL
+0xe49093c1	atm_proc_root	net/atm/atm	EXPORT_SYMBOL
+0x9a888082	synth_buffer_getc	drivers/staging/speakup/speakup	EXPORT_SYMBOL_GPL
+0x85478a0b	inet6_hash_frag	vmlinux	EXPORT_SYMBOL_GPL
+0x006c2653	serial8250_rx_chars	vmlinux	EXPORT_SYMBOL_GPL
+0x6605f97f	flex_array_clear	vmlinux	EXPORT_SYMBOL
+0x5a7bfe41	crypto_probing_notify	vmlinux	EXPORT_SYMBOL_GPL
+0x3e53c958	ip6t_alloc_initial_table	net/ipv6/netfilter/ip6_tables	EXPORT_SYMBOL_GPL
+0xaf4baf01	journal_update_format	fs/jbd/jbd	EXPORT_SYMBOL
+0xdaf23d68	hostap_set_encryption	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x1af19f85	mtd_writev	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0x4446c35f	lis3lv02d_init_device	drivers/misc/lis3lv02d/lis3lv02d	EXPORT_SYMBOL_GPL
+0xc2821775	tuner_count	drivers/media/common/tuners/tuner-types	EXPORT_SYMBOL
+0x0531dcb8	ata_dev_classify	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x317f9e6b	kvm_enable_efer_bits	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x4b1c593e	netif_receive_skb	vmlinux	EXPORT_SYMBOL
+0x5e70beb9	spi_new_device	vmlinux	EXPORT_SYMBOL_GPL
+0xe1a5038a	pm_runtime_enable	vmlinux	EXPORT_SYMBOL_GPL
+0xfb6af58d	recalc_sigpending	vmlinux	EXPORT_SYMBOL
+0x601c0842	snd_emu8000_init_fm	sound/isa/sb/snd-sbawe	EXPORT_SYMBOL
+0xc10ab551	wimax_reset	net/wimax/wimax	EXPORT_SYMBOL
+0x397f6231	ip_set_free	net/netfilter/ipset/ip_set	EXPORT_SYMBOL_GPL
+0x23d9cd2e	nf_nat_proto_unique_tuple	net/ipv4/netfilter/nf_nat	EXPORT_SYMBOL_GPL
+0x406f8738	nf_nat_mangle_udp_packet	net/ipv4/netfilter/nf_nat	EXPORT_SYMBOL
+0xe2304303	mac_map_monitor_sense	drivers/video/macmodes	EXPORT_SYMBOL
+0xcb4dd4a1	vb2_get_contig_userptr	drivers/media/video/videobuf2-memops	EXPORT_SYMBOL_GPL
+0xd3767601	smscore_unregister_hotplug	drivers/media/dvb/siano/smsmdtv	EXPORT_SYMBOL_GPL
+0xbde7f2b2	si21xx_attach	drivers/media/dvb/frontends/si21xx	EXPORT_SYMBOL
+0xb98308d8	mISDN_dsp_element_register	drivers/isdn/mISDN/mISDN_dsp	EXPORT_SYMBOL
+0x9c8a00ef	ata_acpi_gtm_xfermask	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xb51fbd64	edac_op_state	vmlinux	EXPORT_SYMBOL_GPL
+0x585a45d9	cmp_connection_break	sound/firewire/snd-firewire-lib	EXPORT_SYMBOL
+0x306800ff	nfc_class	net/nfc/nfc	EXPORT_SYMBOL
+0x27f7c862	ieee80211_restart_hw	net/mac80211/mac80211	EXPORT_SYMBOL
+0xf111084e	iscsi_tcp_recv_segment_is_hdr	drivers/scsi/libiscsi_tcp	EXPORT_SYMBOL_GPL
+0x57a8545f	iscsi_itt_to_ctask	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0xd12b8204	hostap_80211_rx	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x7c576277	smsendian_handle_message_header	drivers/media/dvb/siano/smsmdtv	EXPORT_SYMBOL_GPL
+0xb1425b32	dm_table_add_target_callbacks	drivers/md/dm-mod	EXPORT_SYMBOL_GPL
+0xfd2408d2	ib_rereg_phys_mr	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xb9ac756c	anon_transport_class_register	vmlinux	EXPORT_SYMBOL_GPL
+0xf097f899	disk_part_iter_exit	vmlinux	EXPORT_SYMBOL_GPL
+0x8fdc79c2	__tracepoint_block_bio_complete	vmlinux	EXPORT_SYMBOL_GPL
+0x31ca7058	follow_down_one	vmlinux	EXPORT_SYMBOL
+0x7944e0fc	tracing_off	vmlinux	EXPORT_SYMBOL_GPL
+0x31e76b57	recalibrate_cpu_khz	vmlinux	EXPORT_SYMBOL
+0x4b015768	snd_iprintf	sound/core/snd	EXPORT_SYMBOL
+0x56710c6e	rpcauth_init_credcache	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xee4f0e69	nxt6000_attach	drivers/media/dvb/frontends/nxt6000	EXPORT_SYMBOL
+0x7aae09f3	input_ff_create_memless	drivers/input/ff-memless	EXPORT_SYMBOL_GPL
+0x0d01a9a7	drm_agp_bind_pages	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xcb77c6f6	raw_seq_next	vmlinux	EXPORT_SYMBOL_GPL
+0x1deb12c2	ip_setsockopt	vmlinux	EXPORT_SYMBOL
+0xfc994887	ip_getsockopt	vmlinux	EXPORT_SYMBOL
+0x417591c2	qdisc_watchdog_schedule	vmlinux	EXPORT_SYMBOL
+0x0ae6aa02	tty_encode_baud_rate	vmlinux	EXPORT_SYMBOL_GPL
+0xd39c7712	blk_unprep_request	vmlinux	EXPORT_SYMBOL_GPL
+0x0bae62b1	ktime_get_monotonic_offset	vmlinux	EXPORT_SYMBOL_GPL
+0x4861a5ae	xdr_shift_buf	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x12154160	comedi_buf_write_alloc	drivers/staging/comedi/comedi	EXPORT_SYMBOL
+0x39f86aa1	tifm_queue_work	drivers/misc/tifm_core	EXPORT_SYMBOL
+0x9357ba8e	rdma_disconnect	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0xfab07baa	ib_create_cq	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xc34f11da	i2c_bit_add_numbered_bus	drivers/i2c/algos/i2c-algo-bit	EXPORT_SYMBOL
+0x40295956	ip_options_rcv_srr	vmlinux	EXPORT_SYMBOL
+0xf7b449ee	device_register	vmlinux	EXPORT_SYMBOL_GPL
+0x6212c1f9	pnp_request_card_device	vmlinux	EXPORT_SYMBOL
+0x19239c53	pcim_iomap_regions_request_all	vmlinux	EXPORT_SYMBOL
+0x7efa8ddd	dentry_open	vmlinux	EXPORT_SYMBOL
+0x731dba7a	xen_domain_type	vmlinux	EXPORT_SYMBOL_GPL
+0x258a06c9	ieee80211_sched_scan_results	net/mac80211/mac80211	EXPORT_SYMBOL
+0x40a27c37	scsi_dev_info_remove_list	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xb5a6ebe2	wmi_remove_notify_handler	drivers/platform/x86/wmi	EXPORT_SYMBOL_GPL
+0x1f6ba2c6	skb_checksum_help	vmlinux	EXPORT_SYMBOL
+0xb6b8391c	unregister_netdevice_queue	vmlinux	EXPORT_SYMBOL
+0x1eea6e37	regmap_write	vmlinux	EXPORT_SYMBOL_GPL
+0x52095e19	acpi_get_data	vmlinux	EXPORT_SYMBOL
+0x86bfae20	acpi_install_global_event_handler	vmlinux	EXPORT_SYMBOL
+0x9545af6d	tasklet_init	vmlinux	EXPORT_SYMBOL
+0xda131ef5	nf_nat_setup_info	net/ipv4/netfilter/nf_nat	EXPORT_SYMBOL
+0xb7bc363c	jbd2_journal_get_undo_access	fs/jbd2/jbd2	EXPORT_SYMBOL
+0x082ba9a3	virtqueue_enable_cb	drivers/virtio/virtio_ring	EXPORT_SYMBOL_GPL
+0x28a9530c	ath9k_hw_setup_statusring	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x4947b9bb	mlx4_bf_free	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x9643c195	ib_dealloc_fmr	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x4475b60b	ata_sff_hsm_move	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x510327f6	sata_link_debounce	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xaf68f25e	led_trigger_set_default	vmlinux	EXPORT_SYMBOL_GPL
+0xf553318d	cpuidle_pause_and_lock	vmlinux	EXPORT_SYMBOL_GPL
+0xa011cd7d	padata_unregister_cpumask_notifier	vmlinux	EXPORT_SYMBOL
+0xc71a7e0b	stop_machine	vmlinux	EXPORT_SYMBOL_GPL
+0x53986488	register_die_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0x3655c645	wimax_dev_add	net/wimax/wimax	EXPORT_SYMBOL_GPL
+0x72a14bc3	wimax_msg	net/wimax/wimax	EXPORT_SYMBOL_GPL
+0x593b0f00	nf_ct_unlink_expect_report	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x8113872c	range_unipolar10	drivers/staging/comedi/comedi	EXPORT_SYMBOL
+0xe6024e59	dm_bufio_release	drivers/md/dm-bufio	EXPORT_SYMBOL_GPL
+0x25392771	ttm_ref_object_add	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0xab7c386a	ata_do_set_mode	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x4eaa1cb8	sock_no_recvmsg	vmlinux	EXPORT_SYMBOL
+0x92fdada8	fb_is_primary_device	vmlinux	EXPORT_SYMBOL
+0xb75d662a	hrtimer_cancel	vmlinux	EXPORT_SYMBOL_GPL
+0x49102f56	xt_unregister_matches	net/netfilter/x_tables	EXPORT_SYMBOL
+0xa7e8eb0f	sis_free_new	drivers/video/sis/sisfb	EXPORT_SYMBOL_GPL
+0xb8c5d507	rdma_set_ib_paths	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0xe6b090db	ttm_mem_global_init	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x40af0dec	ata_xfer_mode2mask	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x5d7a4906	security_inode_setattr	vmlinux	EXPORT_SYMBOL_GPL
+0x16d9aa2e	dquot_file_open	vmlinux	EXPORT_SYMBOL
+0xfdfc0b3b	fiemap_fill_next_extent	vmlinux	EXPORT_SYMBOL
+0x581f5238	uwb_rc_ie_add	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0x8846703a	osd_auto_detect_ver	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0x821bca52	mlx4_uar_free	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xa2e9c09e	media_entity_init	drivers/media/media	EXPORT_SYMBOL_GPL
+0x80c89b3d	dm_tm_unlock	drivers/md/persistent-data/dm-persistent-data	EXPORT_SYMBOL_GPL
+0xb7bad799	dm_bm_unlock	drivers/md/persistent-data/dm-persistent-data	EXPORT_SYMBOL_GPL
+0x8bfc0828	btmrvl_register_hdev	drivers/bluetooth/btmrvl	EXPORT_SYMBOL_GPL
+0xf01d2076	kvm_set_xcr	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x590fbe40	qdisc_watchdog_cancel	vmlinux	EXPORT_SYMBOL
+0x78381cd4	crypto_shash_digest	vmlinux	EXPORT_SYMBOL_GPL
+0xf9b09f37	crypto_ahash_digest	vmlinux	EXPORT_SYMBOL_GPL
+0x3de9cae1	crypto_remove_final	vmlinux	EXPORT_SYMBOL_GPL
+0x5912883c	svc_authenticate	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xc2bdd025	rxrpc_kernel_begin_call	net/rxrpc/af-rxrpc	EXPORT_SYMBOL
+0x07d3647c	irlmp_register_service	net/irda/irda	EXPORT_SYMBOL
+0x4a2a205f	usb_hcd_pci_remove	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x0c981ee6	usb_cdc_wdm_register	drivers/usb/class/cdc-wdm	EXPORT_SYMBOL
+0x14cf4b0e	iscsi_update_cmdsn	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0x0a8a2eff	m88rs2000_attach	drivers/media/dvb/frontends/m88rs2000	EXPORT_SYMBOL
+0x3914b590	gigaset_shutdown	drivers/isdn/gigaset/gigaset	EXPORT_SYMBOL_GPL
+0x30a7bfa3	wm9713_codec	drivers/input/touchscreen/wm97xx-ts	EXPORT_SYMBOL_GPL
+0x1c5d4103	tpm_bios_log_teardown	drivers/char/tpm/tpm_bios	EXPORT_SYMBOL_GPL
+0x4a63b454	rtnl_set_sk_err	vmlinux	EXPORT_SYMBOL
+0xc01cf848	_raw_read_lock	vmlinux	EXPORT_SYMBOL
+0x19a9e62b	complete	vmlinux	EXPORT_SYMBOL
+0xf4f19e51	downgrade_write	vmlinux	EXPORT_SYMBOL
+0x7a4c1438	pv_info	vmlinux	EXPORT_SYMBOL_GPL
+0xec869dfc	snd_hda_bus_new	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x58e3d7fa	config_item_init_type_name	fs/configfs/configfs	EXPORT_SYMBOL
+0x56faf6c7	i1480_fw_upload	drivers/uwb/i1480/dfu/i1480-dfu-usb	EXPORT_SYMBOL_GPL
+0xc7a7a52f	ieee80211_wx_set_scan_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x96c523e6	ieee80211_wx_get_scan_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0xde2f80af	iscsi_block_session	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0x7b6f2bc7	fc_fcp_destroy	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x457fdf46	rtl_efuse_shadow_map_update	drivers/net/wireless/rtlwifi/rtlwifi	EXPORT_SYMBOL
+0x5c08642a	__gameport_register_driver	drivers/input/gameport/gameport	EXPORT_SYMBOL
+0x2ce23ce0	nsc_gpio_write	drivers/char/nsc_gpio	EXPORT_SYMBOL
+0xeaae2f06	ata_bmdma_start	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xd07f1fd5	ata_port_freeze	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xb88b4221	ip_check_defrag	vmlinux	EXPORT_SYMBOL
+0xae6d5ec9	rdev_get_dev	vmlinux	EXPORT_SYMBOL_GPL
+0xdb864d65	iov_iter_single_seg_count	vmlinux	EXPORT_SYMBOL
+0x357dd971	snd_ac97_pcm_close	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0x944defd1	snd_pcm_new_stream	sound/core/snd-pcm	EXPORT_SYMBOL
+0x9e84360c	__ieee80211_get_tx_led_name	net/mac80211/mac80211	EXPORT_SYMBOL
+0x0b28b426	l2tp_xmit_skb	net/l2tp/l2tp_core	EXPORT_SYMBOL_GPL
+0x87fea045	scsi_test_unit_ready	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x77105663	brcmu_pkt_buf_get_skb	drivers/net/wireless/brcm80211/brcmutil/brcmutil	EXPORT_SYMBOL
+0x41e90389	sync_page_io	drivers/md/md-mod	EXPORT_SYMBOL_GPL
+0xd5a090f7	sata_link_resume	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x7234eafb	otg_state_string	vmlinux	EXPORT_SYMBOL
+0xbbb7779a	dentry_update_name_case	vmlinux	EXPORT_SYMBOL
+0x8a7d1c31	high_memory	vmlinux	EXPORT_SYMBOL
+0x24eaa38c	smp_call_function_many	vmlinux	EXPORT_SYMBOL
+0x326425ca	pci_unmap_biosrom	vmlinux	EXPORT_SYMBOL
+0x67fa34ca	iscsi_itt_to_task	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0x7a3cd015	v4l2_ctrl_get_menu	drivers/media/video/videodev	EXPORT_SYMBOL
+0xc0a18521	mc44s803_attach	drivers/media/common/tuners/mc44s803	EXPORT_SYMBOL
+0x18b91828	saa7146_pgtable_alloc	drivers/media/common/saa7146	EXPORT_SYMBOL_GPL
+0x588886a6	l1_event	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0xe3fbe148	acpi_install_table_handler	vmlinux	EXPORT_SYMBOL
+0x481cb9ab	acpi_enter_sleep_state_prep	vmlinux	EXPORT_SYMBOL
+0x10e0d348	simple_link	vmlinux	EXPORT_SYMBOL
+0xbdd2f42a	rcu_bh_force_quiescent_state	vmlinux	EXPORT_SYMBOL_GPL
+0x396e3d37	journal_blocks_per_page	fs/jbd/jbd	EXPORT_SYMBOL
+0x500aa43f	usb_serial_suspend	drivers/usb/serial/usbserial	EXPORT_SYMBOL
+0xa9962f60	scsi_remove_target	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xb6c5a973	scsi_show_result	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xb102eea0	rtl92c_phy_set_rfpath_switch	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0x146b2069	videobuf_queue_vmalloc_init	drivers/media/video/videobuf-vmalloc	EXPORT_SYMBOL_GPL
+0x433cb5e9	ib_create_fmr_pool	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xc2254755	hidinput_find_field	drivers/hid/hid	EXPORT_SYMBOL_GPL
+0xf58eb082	kvm_find_cpuid_entry	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x7ae1ae8e	cpufreq_frequency_table_put_attr	vmlinux	EXPORT_SYMBOL_GPL
+0x56cb2648	sysptr	vmlinux	EXPORT_SYMBOL
+0xd10d5912	page_cache_async_readahead	vmlinux	EXPORT_SYMBOL_GPL
+0xd266efe7	mempool_create	vmlinux	EXPORT_SYMBOL
+0xcc77b76a	padata_alloc_possible	vmlinux	EXPORT_SYMBOL
+0x57231f45	ring_buffer_record_on	vmlinux	EXPORT_SYMBOL_GPL
+0xf4a111d8	p9_idpool_create	net/9p/9pnet	EXPORT_SYMBOL
+0x3c86a647	nfs4_init_ds_session	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0xa4db6fcb	comedi_buf_read_alloc	drivers/staging/comedi/comedi	EXPORT_SYMBOL
+0x72d5ab78	drm_cvt_mode	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x88c88716	bcma_driver_unregister	drivers/bcma/bcma	EXPORT_SYMBOL_GPL
+0xdc387a74	kblockd_schedule_work	vmlinux	EXPORT_SYMBOL
+0xa3db34c3	mem_section	vmlinux	EXPORT_SYMBOL
+0xd7e255ee	send_sig_info	vmlinux	EXPORT_SYMBOL
+0xedc03953	iounmap	vmlinux	EXPORT_SYMBOL
+0x1e7a3b61	register_mce_write_callback	vmlinux	EXPORT_SYMBOL_GPL
+0xfaf94d01	snd_gus_initialize	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0xf4bf0142	xprt_release_xprt	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xdf75534f	mlx4_qp_free	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xbbcc7b72	mptscsih_get_scsi_lookup	drivers/message/fusion/mptscsih	EXPORT_SYMBOL
+0xa21133b0	__neigh_event_send	vmlinux	EXPORT_SYMBOL
+0xd489b67b	sk_stream_wait_close	vmlinux	EXPORT_SYMBOL
+0x08fc55a3	show_class_attr_string	vmlinux	EXPORT_SYMBOL_GPL
+0x0581057f	read_cache_page_async	vmlinux	EXPORT_SYMBOL
+0xd0ee38b8	schedule_timeout_uninterruptible	vmlinux	EXPORT_SYMBOL
+0xd79b5a02	allow_signal	vmlinux	EXPORT_SYMBOL
+0xaee7f778	snd_timer_global_register	sound/core/snd-timer	EXPORT_SYMBOL
+0x092a6556	snd_rawmidi_info_select	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0xce37a8fe	sas_remove_host	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL
+0x6a977d2b	fc_fabric_logoff	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x2a263622	gspca_frame_add	drivers/media/video/gspca/gspca_main	EXPORT_SYMBOL
+0x0a59b03f	ir_raw_event_set_idle	drivers/media/rc/rc-core	EXPORT_SYMBOL_GPL
+0x39d8de7e	ata_host_register	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xb4b876f8	platform_get_irq	vmlinux	EXPORT_SYMBOL_GPL
+0x8d7d581d	kill_anon_super	vmlinux	EXPORT_SYMBOL
+0x0c805f93	clflush_cache_range	vmlinux	EXPORT_SYMBOL_GPL
+0xe48f46de	snd_ac97_update_bits	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0x2950d211	nf_ct_delete_from_lists	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x5a3fe94e	l2tp_session_find	net/l2tp/l2tp_core	EXPORT_SYMBOL_GPL
+0x33a539e4	irttp_connect_response	net/irda/irda	EXPORT_SYMBOL
+0x15399372	irlmp_connect_response	net/irda/irda	EXPORT_SYMBOL
+0x3c97353c	ppp_output_wakeup	drivers/net/ppp/ppp_generic	EXPORT_SYMBOL
+0xca57c7e1	bcma_core_set_clockmode	drivers/bcma/bcma	EXPORT_SYMBOL_GPL
+0xb3d3926e	ata_msleep	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x53ec046d	xfrm6_rcv	vmlinux	EXPORT_SYMBOL
+0x7b157102	xfrm4_rcv	vmlinux	EXPORT_SYMBOL
+0xe200f872	secure_dccpv6_sequence_number	vmlinux	EXPORT_SYMBOL
+0xb0a8fd0a	intel_gtt_unmap_memory	vmlinux	EXPORT_SYMBOL
+0x8ada5ad5	pci_enable_pcie_error_reporting	vmlinux	EXPORT_SYMBOL_GPL
+0x6c837177	xdr_buf_subsegment	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xb61a0c3b	bt_err	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x64fdb4ea	fscache_init_cache	fs/fscache/fscache	EXPORT_SYMBOL
+0x634561cd	matroxfb_g450_setpll_cond	drivers/video/matrox/g450_pll	EXPORT_SYMBOL
+0x17bab8e6	cxgbi_device_register	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0xb3314d48	_rtl92c_phy_calculate_bit_shift	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0xe532a90c	rtl8192_phy_check_is_legal_rfpath	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0xcc3abdbc	lbs_host_sleep_cfg	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0xe3e30362	flexcop_dma_free	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0x3e01a5a5	vmbus_recvpacket_raw	drivers/hv/hv_vmbus	EXPORT_SYMBOL_GPL
+0x9efb9334	async_raid6_2data_recov	crypto/async_tx/async_raid6_recov	EXPORT_SYMBOL_GPL
+0xb4d4d28b	bio_integrity_free	vmlinux	EXPORT_SYMBOL
+0xf38cc0f0	bio_integrity_prep	vmlinux	EXPORT_SYMBOL
+0x94b238d0	bio_integrity_trim	vmlinux	EXPORT_SYMBOL
+0x67b9e73f	cfg80211_put_bss	net/wireless/cfg80211	EXPORT_SYMBOL
+0x1d3ad1ec	virtqueue_get_buf	drivers/virtio/virtio_ring	EXPORT_SYMBOL_GPL
+0x18e7089e	usb_find_alt_setting	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x94cc10b7	pcf50633_mbc_get_usb_online_status	drivers/power/pcf50633-charger	EXPORT_SYMBOL_GPL
+0x88c16e13	asus_wmi_register_driver	drivers/platform/x86/asus-wmi	EXPORT_SYMBOL_GPL
+0xe0db05d0	il_mac_reset_tsf	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x1b8d43c8	libipw_is_valid_channel	drivers/net/wireless/ipw2x00/libipw	EXPORT_SYMBOL
+0x9d999abc	phy_connect	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x74ee9098	sms_board_load_modules	drivers/media/dvb/siano/smsmdtv	EXPORT_SYMBOL_GPL
+0xaac3d297	ttm_bo_wait_cpu	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0xe20c467d	ttm_bo_dma_acc_size	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0xc32155d5	drm_fb_helper_single_fb_probe	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0x3b48607a	btmrvl_check_evtpkt	drivers/bluetooth/btmrvl	EXPORT_SYMBOL_GPL
+0x088a7445	inet_dgram_connect	vmlinux	EXPORT_SYMBOL
+0x3a9ec7d5	driver_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x89bab3df	generic_pipe_buf_unmap	vmlinux	EXPORT_SYMBOL
+0xbc04a37b	generic_pipe_buf_steal	vmlinux	EXPORT_SYMBOL
+0xe5d95985	param_ops_ulong	vmlinux	EXPORT_SYMBOL
+0x5a36cf86	rds_inc_init	net/rds/rds	EXPORT_SYMBOL_GPL
+0x07a6c5d6	nfs4_reset_write	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0xb725d128	wusb_cluster_id_put	drivers/usb/wusbcore/wusbcore	EXPORT_SYMBOL_GPL
+0x080160c8	iscsi_unblock_session	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0x1f7f7b2b	fcoe_ctlr_recv	drivers/scsi/fcoe/libfcoe	EXPORT_SYMBOL
+0xbc2d8e77	il_remove_station	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL_GPL
+0x2bf396e8	ath9k_cmn_init_crypto	drivers/net/wireless/ath/ath9k/ath9k_common	EXPORT_SYMBOL
+0xe3719f5c	v4l2_ctrl_fill	drivers/media/video/videodev	EXPORT_SYMBOL
+0x83ac5ebf	v4l2_ctrl_find	drivers/media/video/videodev	EXPORT_SYMBOL
+0x5ebefe4b	v4l_printk_ioctl	drivers/media/video/videodev	EXPORT_SYMBOL
+0x4046118a	stv6110x_attach	drivers/media/dvb/frontends/stv6110x	EXPORT_SYMBOL
+0xe3cd9b5c	saa7146_debug	drivers/media/common/saa7146	EXPORT_SYMBOL_GPL
+0xa1c93771	ttm_dma_populate	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL_GPL
+0x6c3c2074	inet_frags_exit_net	vmlinux	EXPORT_SYMBOL
+0x8a78989f	irq_from_evtchn	vmlinux	EXPORT_SYMBOL_GPL
+0x61528b43	kobject_get	vmlinux	EXPORT_SYMBOL
+0x7406f5c5	kobject_put	vmlinux	EXPORT_SYMBOL
+0x46214106	files_lglock_local_unlock_cpu	vmlinux	EXPORT_SYMBOL
+0x10fe3fe1	relay_open	vmlinux	EXPORT_SYMBOL_GPL
+0x37b777df	param_set_copystring	vmlinux	EXPORT_SYMBOL
+0x59e70f93	__send_remote_softirq	vmlinux	EXPORT_SYMBOL
+0xe05b7927	snd_msndmix_force_recsrc	sound/isa/msnd/snd-msnd-lib	EXPORT_SYMBOL
+0x8fb576b8	usb_scuttle_anchored_urbs	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xce56e8c5	speakup_info	drivers/staging/speakup/speakup	EXPORT_SYMBOL_GPL
+0x06b5d5f5	cfi_read_pri	drivers/mtd/chips/cfi_util	EXPORT_SYMBOL
+0xfc9c58cc	vb2_put_vma	drivers/media/video/videobuf2-memops	EXPORT_SYMBOL_GPL
+0x17a9cdc4	tda18218_attach	drivers/media/common/tuners/tda18218	EXPORT_SYMBOL
+0xfbd27787	tda18212_attach	drivers/media/common/tuners/tda18212	EXPORT_SYMBOL
+0xd40896ef	i2c_handle_smbus_alert	drivers/i2c/i2c-smbus	EXPORT_SYMBOL_GPL
+0xfc39e32f	ioport_unmap	vmlinux	EXPORT_SYMBOL
+0xf1deabf2	div64_u64	vmlinux	EXPORT_SYMBOL
+0x3117e667	relay_close	vmlinux	EXPORT_SYMBOL_GPL
+0xd95acf02	ircomm_data_request	net/irda/ircomm/ircomm	EXPORT_SYMBOL
+0x56275147	matroxfb_vgaHWrestore	drivers/video/matrox/matroxfb_misc	EXPORT_SYMBOL
+0xb6858389	usb_reset_configuration	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xb91dbfa8	fc_exch_mgr_free	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0xeeda2b24	libipw_channel_to_freq	drivers/net/wireless/ipw2x00/libipw	EXPORT_SYMBOL
+0x1c82ff62	detach_hdlc_protocol	drivers/net/wan/hdlc	EXPORT_SYMBOL
+0x62a23587	dm_bufio_get_device_size	drivers/md/dm-bufio	EXPORT_SYMBOL_GPL
+0x02f847bc	ib_copy_path_rec_from_user	drivers/infiniband/core/ib_uverbs	EXPORT_SYMBOL
+0x5dacccbe	sysfs_merge_group	vmlinux	EXPORT_SYMBOL_GPL
+0xa67e2845	dq_data_lock	vmlinux	EXPORT_SYMBOL
+0xc84a0a7e	seq_hlist_start_rcu	vmlinux	EXPORT_SYMBOL
+0xdc3d4ed0	d_validate	vmlinux	EXPORT_SYMBOL
+0xef43e78b	__get_user_pages_fast	vmlinux	EXPORT_SYMBOL_GPL
+0x21b08e39	down_trylock	vmlinux	EXPORT_SYMBOL
+0xc0294c47	snd_ak4117_check_rate_and_errors	sound/i2c/other/snd-ak4117	EXPORT_SYMBOL
+0x35ec0afa	snd_ak4114_check_rate_and_errors	sound/i2c/other/snd-ak4114	EXPORT_SYMBOL
+0xdb3425e1	snd_ak4113_check_rate_and_errors	sound/i2c/other/snd-ak4113	EXPORT_SYMBOL_GPL
+0x2c5a9beb	wimax_report_rfkill_sw	net/wimax/wimax	EXPORT_SYMBOL_GPL
+0x454a3cf0	sis_free	drivers/video/sis/sisfb	EXPORT_SYMBOL
+0x4ac25033	rt2x00queue_stop_queues	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0xcdf78b05	i2o_msg_get_wait	drivers/message/i2o/i2o_core	EXPORT_SYMBOL
+0x2de7389a	ib_cm_listen	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0x0e2a6864	sch56xx_read_virtual_reg	drivers/hwmon/sch56xx-common	EXPORT_SYMBOL
+0xae1cd119	genl_register_family	vmlinux	EXPORT_SYMBOL
+0xc256e762	__bitmap_equal	vmlinux	EXPORT_SYMBOL
+0x657879ce	__init_rwsem	vmlinux	EXPORT_SYMBOL
+0x44c54aa4	page_zero_new_buffers	vmlinux	EXPORT_SYMBOL
+0x3358ebde	mntput	vmlinux	EXPORT_SYMBOL
+0x1aa49e2c	mntget	vmlinux	EXPORT_SYMBOL
+0xec4f8b43	fasync_helper	vmlinux	EXPORT_SYMBOL
+0xccec5c53	snd_emu8000_update_equalizer	sound/isa/sb/snd-sbawe	EXPORT_SYMBOL
+0xbc33e94d	pnfs_ld_write_done	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0xfe208e32	Dot11d_UpdateCountryIe	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x8dd62cdd	lbs_start_card	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0x3e7f01a8	mlx4_fmr_enable	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x0404f8c7	mount_mtd	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0x8652b96c	i2o_pool_free	drivers/message/i2o/i2o_core	EXPORT_SYMBOL_GPL
+0x502108d0	mpt_fwfault_debug	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0xd19376eb	cx231xx_unregister_extension	drivers/media/video/cx231xx/cx231xx	EXPORT_SYMBOL
+0x557ee12b	dibusb_dib3000mc_frontend_attach	drivers/media/dvb/dvb-usb/dvb-usb-dibusb-common	EXPORT_SYMBOL
+0x4c70c35a	dvb_ringbuffer_write	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0x3c56ef91	fw_workqueue	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0x6e3ff83a	edac_device_alloc_index	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x24501ae0	tpm_show_owned	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0xadf6aa4d	tpm_pcr_read	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x2f4113a2	dcookie_register	vmlinux	EXPORT_SYMBOL_GPL
+0xd7ad88ec	locks_mandatory_area	vmlinux	EXPORT_SYMBOL
+0x501164b8	snd_hda_multi_out_analog_open	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x4c36d492	xt_table_unlock	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0x20877999	sas_port_add	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL
+0xe97f7934	iscsi_tcp_recv_skb	drivers/scsi/libiscsi_tcp	EXPORT_SYMBOL_GPL
+0x9ce7ff9a	mlx4_counter_alloc	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x14f2aa5a	capi20_get_version	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x2a5016f7	amd756_smbus	drivers/i2c/busses/i2c-amd756	EXPORT_SYMBOL
+0x20cec9e9	inet_twsk_deschedule	vmlinux	EXPORT_SYMBOL
+0x7bf456de	tcf_exts_dump_stats	vmlinux	EXPORT_SYMBOL
+0x6ebba512	sock_alloc_send_pskb	vmlinux	EXPORT_SYMBOL
+0xe41534ce	bind_evtchn_to_irqhandler	vmlinux	EXPORT_SYMBOL_GPL
+0x0acb1a3c	__bitmap_shift_right	vmlinux	EXPORT_SYMBOL
+0xaaa918c9	ftrace_dump	vmlinux	EXPORT_SYMBOL_GPL
+0x402b8281	__request_module	vmlinux	EXPORT_SYMBOL
+0x2095976a	nfs4_acl_new	fs/nfsd/nfsd	EXPORT_SYMBOL
+0xcf86d20a	ieee80211_wx_get_freq_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x9ee454c3	ieee80211_wx_set_freq_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0xa822cd84	phy_find_first	drivers/net/phy/libphy	EXPORT_SYMBOL
+0xc813c2f7	ata_sff_error_handler	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x74a883e0	inet_register_protosw	vmlinux	EXPORT_SYMBOL
+0x25ea0959	__inet_inherit_port	vmlinux	EXPORT_SYMBOL_GPL
+0x52d12dfc	dev_deactivate	vmlinux	EXPORT_SYMBOL
+0xb89af9bf	srandom32	vmlinux	EXPORT_SYMBOL
+0x23fd3028	vmalloc_node	vmlinux	EXPORT_SYMBOL
+0x5f27544a	mempool_destroy	vmlinux	EXPORT_SYMBOL
+0x054e550b	kernel_halt	vmlinux	EXPORT_SYMBOL_GPL
+0x31524620	snd_pcm_sgbuf_ops_page	sound/core/snd-pcm	EXPORT_SYMBOL
+0xea7468e4	xfrm6_tunnel_spi_lookup	net/ipv6/xfrm6_tunnel	EXPORT_SYMBOL
+0x4458385c	p9_client_begin_disconnect	net/9p/9pnet	EXPORT_SYMBOL
+0xe2ff0713	qtree_read_dquot	fs/quota/quota_tree	EXPORT_SYMBOL
+0xb93ce53f	scsi_ioctl	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x71adf781	cx231xx_dev_init	drivers/media/video/cx231xx/cx231xx	EXPORT_SYMBOL_GPL
+0x56555499	wm97xx_register_mach_ops	drivers/input/touchscreen/wm97xx-ts	EXPORT_SYMBOL_GPL
+0xb11e9288	iw_destroy_cm_id	drivers/infiniband/core/iw_cm	EXPORT_SYMBOL
+0x9d990967	netpoll_cleanup	vmlinux	EXPORT_SYMBOL
+0xfdaf5237	set_binfmt	vmlinux	EXPORT_SYMBOL
+0xde4fc950	fscache_object_work_func	fs/fscache/fscache	EXPORT_SYMBOL
+0x33ed9cee	mac_find_mode	drivers/video/macmodes	EXPORT_SYMBOL
+0x9e4faeef	dm_io_client_destroy	drivers/md/dm-mod	EXPORT_SYMBOL
+0x2d397726	sparse_keymap_entry_from_keycode	drivers/input/sparse-keymap	EXPORT_SYMBOL
+0x2fd13a36	ttm_fbdev_mmap	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x534b9bae	pi_release	drivers/block/paride/paride	EXPORT_SYMBOL
+0x4c9d1c1e	km_policy_expired	vmlinux	EXPORT_SYMBOL
+0x742c6bec	spi_unregister_master	vmlinux	EXPORT_SYMBOL_GPL
+0x9d08a005	hvc_poll	vmlinux	EXPORT_SYMBOL_GPL
+0x271ce725	__first_cpu	vmlinux	EXPORT_SYMBOL
+0x0ce3347f	elv_rb_find	vmlinux	EXPORT_SYMBOL
+0xba99670b	padata_register_cpumask_notifier	vmlinux	EXPORT_SYMBOL
+0xb1cbcffb	comedi_event	drivers/staging/comedi/comedi	EXPORT_SYMBOL
+0x9a2b54bd	mptscsih_IssueTaskMgmt	drivers/message/fusion/mptscsih	EXPORT_SYMBOL
+0x2869ebaf	regulator_bulk_force_disable	vmlinux	EXPORT_SYMBOL_GPL
+0xbee90f2f	__kfifo_out_peek_r	vmlinux	EXPORT_SYMBOL
+0x7036fbc2	snd_seq_kernel_client_write_poll	sound/core/seq/snd-seq	EXPORT_SYMBOL
+0x2d0f99e5	print_ssid	net/wireless/lib80211	EXPORT_SYMBOL
+0x12e6b80b	ulist_alloc	fs/btrfs/btrfs	EXPORT_SYMBOL
+0x045d2715	v4l2_subdev_init	drivers/media/video/videodev	EXPORT_SYMBOL
+0xef82e52f	cx231xx_uninit_bulk	drivers/media/video/cx231xx/cx231xx	EXPORT_SYMBOL_GPL
+0xa04a01bd	qdisc_class_hash_insert	vmlinux	EXPORT_SYMBOL
+0xb53d7712	alloc_hippi_dev	vmlinux	EXPORT_SYMBOL
+0xe5867808	dlci_ioctl_set	vmlinux	EXPORT_SYMBOL
+0x1f69585d	crypto_alg_lookup	vmlinux	EXPORT_SYMBOL_GPL
+0x3c39e514	__rpc_wait_for_completion_task	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x5f1d5347	phonet_header_ops	net/phonet/phonet	EXPORT_SYMBOL
+0xfd126c31	scsi_report_device_reset	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x232b0691	scsi_print_sense	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xff238046	cxgbi_sock_established	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0x5ece32d9	_rtl92c_phy_set_rf_sleep	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0x76820e1d	macvlan_common_setup	drivers/net/macvlan	EXPORT_SYMBOL_GPL
+0x7b348f1f	rdma_init_qp_attr	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0x80e6e9ff	ib_redirect_mad_qp	drivers/infiniband/core/ib_mad	EXPORT_SYMBOL
+0xd9b2437d	drm_mode_create_dirty_info_property	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x53833ba0	bcma_core_pll_ctl	drivers/bcma/bcma	EXPORT_SYMBOL_GPL
+0xbf8b39e9	isapnp_present	vmlinux	EXPORT_SYMBOL
+0x625f6b25	apei_get_debugfs_dir	vmlinux	EXPORT_SYMBOL_GPL
+0xbc98cfd2	locks_free_lock	vmlinux	EXPORT_SYMBOL
+0xd07756c2	register_sound_mixer	sound/soundcore	EXPORT_SYMBOL
+0x408539bc	snd_gf1_mem_alloc	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0x83fb5968	ip_set_get_ip4_port	net/netfilter/ipset/ip_set	EXPORT_SYMBOL_GPL
+0x770250d7	ip_set_get_ip6_port	net/netfilter/ipset/ip_set	EXPORT_SYMBOL_GPL
+0xc0c9fae9	core_alua_check_nonop_delay	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x67e431da	ieee80211_disassociate_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0xde2eeb09	ssb_bus_suspend	drivers/ssb/ssb	EXPORT_SYMBOL
+0x1b2479f2	osduld_put_device	drivers/scsi/osd/osd	EXPORT_SYMBOL
+0xa0a0191e	pcmcia_fixup_iowidth	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0x81657a83	mmc_regulator_set_ocr	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0xc8b892c9	dib0090_set_dc_servo	drivers/media/dvb/frontends/dib0090	EXPORT_SYMBOL
+0x990b0af8	btmrvl_enable_ps	drivers/bluetooth/btmrvl	EXPORT_SYMBOL_GPL
+0xd760e022	simple_attr_release	vmlinux	EXPORT_SYMBOL_GPL
+0xf6e04730	event_storage	vmlinux	EXPORT_SYMBOL_GPL
+0xebe6bfb7	cfg80211_wext_giwretry	net/wireless/cfg80211	EXPORT_SYMBOL_GPL
+0xa2a2e035	async_wrap_skb	net/irda/irda	EXPORT_SYMBOL
+0xe4a62304	usb_submit_urb	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xc6482712	rt2x00usb_flush_queue	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0xeb25263d	mptscsih_bus_reset	drivers/message/fusion/mptscsih	EXPORT_SYMBOL
+0xdebf7d52	ata_link_abort	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xc1fa0ff3	cpci_hp_unregister_controller	vmlinux	EXPORT_SYMBOL_GPL
+0x819d96ea	bio_integrity_advance	vmlinux	EXPORT_SYMBOL
+0x9696ac72	rename_lock	vmlinux	EXPORT_SYMBOL
+0x47f4c508	page_symlink_inode_operations	vmlinux	EXPORT_SYMBOL
+0x5c3edd59	_raw_write_unlock_bh	vmlinux	EXPORT_SYMBOL
+0x1cb231d0	mlog_not_bits	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0x33782a74	jbd2_inode_cache	fs/jbd2/jbd2	EXPORT_SYMBOL
+0x02527dbd	register_virtio_device	drivers/virtio/virtio	EXPORT_SYMBOL_GPL
+0x060ea2d6	kstrtoull	vmlinux	EXPORT_SYMBOL
+0x5ac15bae	kstrtou16	vmlinux	EXPORT_SYMBOL
+0x94961283	vunmap	vmlinux	EXPORT_SYMBOL
+0x810d3253	write_cache_pages	vmlinux	EXPORT_SYMBOL
+0x44d3c350	snd_seq_device_new	sound/core/seq/snd-seq-device	EXPORT_SYMBOL
+0xd5f22901	nf_conntrack_l4proto_tcp6	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xf84f2022	p9_idpool_put	net/9p/9pnet	EXPORT_SYMBOL
+0x5589460d	unregister_virtio_device	drivers/virtio/virtio	EXPORT_SYMBOL_GPL
+0xf22671a8	ieee80211_softmac_scan_syncro_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x7fdb6004	cxgbi_device_unregister_all	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0x53bb351e	iw_cm_disconnect	drivers/infiniband/core/iw_cm	EXPORT_SYMBOL
+0xfd75e15d	xfrm_policy_alloc	vmlinux	EXPORT_SYMBOL
+0xf9c585bb	led_blink_set	vmlinux	EXPORT_SYMBOL
+0xe5c78a99	do_blank_screen	vmlinux	EXPORT_SYMBOL
+0x509b9024	pci_check_and_unmask_intx	vmlinux	EXPORT_SYMBOL_GPL
+0x72f86425	snd_seq_create_kernel_client	sound/core/seq/snd-seq	EXPORT_SYMBOL
+0xe732c14d	cfg80211_remain_on_channel_expired	net/wireless/cfg80211	EXPORT_SYMBOL
+0xdd7098d9	__nf_ct_ext_add	net/netfilter/nf_conntrack	EXPORT_SYMBOL
+0x2144152c	hci_conn_change_link_key	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0xdc583c08	dlm_unlock	fs/dlm/dlm	EXPORT_SYMBOL_GPL
+0x54a492d3	mtd_del_partition	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0xf814d14c	pcf50633_adc_sync_read	drivers/mfd/pcf50633-adc	EXPORT_SYMBOL_GPL
+0xae858c24	dvb_dmx_swfilter	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0x117093be	qdisc_class_hash_init	vmlinux	EXPORT_SYMBOL
+0x9c5b5738	sk_prot_clear_portaddr_nulls	vmlinux	EXPORT_SYMBOL
+0x1d739e1c	xen_set_callback_via	vmlinux	EXPORT_SYMBOL_GPL
+0x4d7bf85c	task_current_syscall	vmlinux	EXPORT_SYMBOL_GPL
+0x110fc49f	single_open_net	vmlinux	EXPORT_SYMBOL_GPL
+0x0ac8363a	set_page_dirty_lock	vmlinux	EXPORT_SYMBOL
+0x4d1a25e8	cache_unregister_net	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xbf383cee	rds_conn_create	net/rds/rds	EXPORT_SYMBOL_GPL
+0x5cf2a775	l2tp_session_find_nth	net/l2tp/l2tp_core	EXPORT_SYMBOL_GPL
+0x77a8188d	usb_get_descriptor	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x88a12091	fcoe_ctlr_link_down	drivers/scsi/fcoe/libfcoe	EXPORT_SYMBOL
+0x8b39e05f	get_mtd_device	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0x044700a2	ata_sas_port_alloc	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xe8e418ac	ata_port_abort	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x209674c5	tcp_v4_conn_request	vmlinux	EXPORT_SYMBOL
+0xeffa48fa	cpufreq_frequency_table_cpuinfo	vmlinux	EXPORT_SYMBOL_GPL
+0xc56fe207	spi_async_locked	vmlinux	EXPORT_SYMBOL_GPL
+0xeec924c1	blk_rq_init	vmlinux	EXPORT_SYMBOL
+0x109bb51f	rds_conn_destroy	net/rds/rds	EXPORT_SYMBOL_GPL
+0x74afa5c4	usb_put_dev	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xc994871f	kvm_read_guest_atomic	arch/x86/kvm/kvm	EXPORT_SYMBOL
+0x26e76fb8	sysctl_udp_wmem_min	vmlinux	EXPORT_SYMBOL
+0x5bb7c7ea	tcp_v4_syn_recv_sock	vmlinux	EXPORT_SYMBOL
+0xf4319730	agp_find_bridge	vmlinux	EXPORT_SYMBOL
+0xefbc5c28	swiotlb_tbl_sync_single	vmlinux	EXPORT_SYMBOL_GPL
+0x9ea0ad49	__sg_free_table	vmlinux	EXPORT_SYMBOL
+0x2f98491b	kmem_cache_shrink	vmlinux	EXPORT_SYMBOL
+0x9533e116	lib80211_register_crypto_ops	net/wireless/lib80211	EXPORT_SYMBOL
+0x41248eaf	crc8	lib/crc8	EXPORT_SYMBOL
+0xa7587646	crc7	lib/crc7	EXPORT_SYMBOL
+0x72940b4e	scsi_tgt_alloc_queue	drivers/scsi/scsi_tgt	EXPORT_SYMBOL_GPL
+0x16fdff58	mii_check_link	drivers/net/mii	EXPORT_SYMBOL
+0x601f665f	dm_io_client_create	drivers/md/dm-mod	EXPORT_SYMBOL
+0x1aa2644e	gigaset_fill_inbuf	drivers/isdn/gigaset/gigaset	EXPORT_SYMBOL_GPL
+0x10d9d048	icmp_err_convert	vmlinux	EXPORT_SYMBOL
+0xcb733bf2	acpi_bus_set_power	vmlinux	EXPORT_SYMBOL
+0xe102a9ba	blkio_policy_register	vmlinux	EXPORT_SYMBOL_GPL
+0x96cbcf31	pm_qos_add_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0x33fbdddd	snd_i2c_readbytes	sound/i2c/snd-i2c	EXPORT_SYMBOL
+0x930bf7db	inet_diag_dump_one_icsk	net/ipv4/inet_diag	EXPORT_SYMBOL_GPL
+0xf88a4bf5	nlmclnt_init	fs/lockd/lockd	EXPORT_SYMBOL_GPL
+0x91ec8899	scsi_unregister	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x034d4e6d	mlx4_qp_release_range	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x9ad12f11	mtd_is_locked	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0x42803257	tea5761_attach	drivers/media/common/tuners/tea5761	EXPORT_SYMBOL_GPL
+0xb4630900	ib_alloc_mw	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x1e56ba0a	hid_report_raw_event	drivers/hid/hid	EXPORT_SYMBOL_GPL
+0x556e6d88	tcp_hashinfo	vmlinux	EXPORT_SYMBOL
+0x2d140a58	genl_unlock	vmlinux	EXPORT_SYMBOL
+0x4c6f2628	dma_buf_begin_cpu_access	vmlinux	EXPORT_SYMBOL_GPL
+0xc281adf3	crypto_aead_setauthsize	vmlinux	EXPORT_SYMBOL_GPL
+0x283396e2	fd_install	vmlinux	EXPORT_SYMBOL
+0xfdee7d42	_raw_read_lock_bh	vmlinux	EXPORT_SYMBOL
+0x6eaa5a5d	snd_hda_mixer_amp_switch_info	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x84503eec	nf_nat_used_tuple	net/ipv4/netfilter/nf_nat	EXPORT_SYMBOL
+0xfefd99e1	nf_nat_packet	net/ipv4/netfilter/nf_nat	EXPORT_SYMBOL_GPL
+0x1c452763	scsi_internal_device_unblock	drivers/scsi/scsi_mod	EXPORT_SYMBOL_GPL
+0xd177780a	parport_release	drivers/parport/parport	EXPORT_SYMBOL
+0xebcc64a4	dm_bufio_get_block_data	drivers/md/dm-bufio	EXPORT_SYMBOL_GPL
+0xd73a5d7c	blk_init_tags	vmlinux	EXPORT_SYMBOL
+0x8091e74a	vfs_fsync_range	vmlinux	EXPORT_SYMBOL
+0x3ce4ca6f	disable_irq	vmlinux	EXPORT_SYMBOL
+0x87754115	raw_notifier_chain_register	vmlinux	EXPORT_SYMBOL_GPL
+0xa70fabbe	release_evntsel_nmi	vmlinux	EXPORT_SYMBOL
+0x350963b4	snd_midi_event_decode	sound/core/seq/snd-seq-midi-event	EXPORT_SYMBOL
+0xec307781	usb_ftdi_elan_edset_input	drivers/usb/misc/ftdi-elan	EXPORT_SYMBOL_GPL
+0x7dbada9d	transport_set_vpd_ident_type	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x3d28776d	scsi_host_alloc	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xb62a7536	iscsi_tcp_hdr_recv_prep	drivers/scsi/libiscsi_tcp	EXPORT_SYMBOL_GPL
+0x8f862af9	mlx4_free_cmd_mailbox	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x0930684c	v4l2_ctrl_g_ctrl	drivers/media/video/videodev	EXPORT_SYMBOL
+0x2c329593	cdrom_get_media_event	drivers/cdrom/cdrom	EXPORT_SYMBOL
+0xa9540721	bus_get_device_klist	vmlinux	EXPORT_SYMBOL_GPL
+0x019edde3	sysfs_remove_file	vmlinux	EXPORT_SYMBOL_GPL
+0x08673b0b	path_put	vmlinux	EXPORT_SYMBOL
+0x602a5f28	apply_to_page_range	vmlinux	EXPORT_SYMBOL_GPL
+0xa0ceef51	out_of_line_wait_on_bit	vmlinux	EXPORT_SYMBOL
+0xfd5ee7f6	tcp_vegas_state	net/ipv4/tcp_vegas	EXPORT_SYMBOL_GPL
+0x29b16b53	fc_remote_port_delete	drivers/scsi/scsi_transport_fc	EXPORT_SYMBOL
+0x13db08e7	drm_irq_uninstall	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x0e4d7798	edac_mc_find	drivers/edac/edac_core	EXPORT_SYMBOL
+0xf3028f20	dst_discard	vmlinux	EXPORT_SYMBOL
+0xaa2a72bf	__iowrite64_copy	vmlinux	EXPORT_SYMBOL_GPL
+0x359b43c4	invalidate_partition	vmlinux	EXPORT_SYMBOL
+0xd217e9e6	trace_set_clr_event	vmlinux	EXPORT_SYMBOL_GPL
+0xdeb9924e	blk_add_driver_data	vmlinux	EXPORT_SYMBOL_GPL
+0x1907f521	kick_process	vmlinux	EXPORT_SYMBOL_GPL
+0xcc67a935	jbd2_journal_init_jbd_inode	fs/jbd2/jbd2	EXPORT_SYMBOL
+0x3686ea09	spi_print_msg	drivers/scsi/scsi_transport_spi	EXPORT_SYMBOL
+0xb0214101	memstick_suspend_host	drivers/memstick/core/memstick	EXPORT_SYMBOL
+0xd4d3f1d8	dib0090_get_current_gain	drivers/media/dvb/frontends/dib0090	EXPORT_SYMBOL
+0xc4620722	sk_release_kernel	vmlinux	EXPORT_SYMBOL
+0xe84f6e5c	pciserial_remove_ports	vmlinux	EXPORT_SYMBOL_GPL
+0xbfbc5434	pciserial_resume_ports	vmlinux	EXPORT_SYMBOL_GPL
+0xecc2ca06	sg_miter_stop	vmlinux	EXPORT_SYMBOL
+0x277000cd	bsg_request_fn	vmlinux	EXPORT_SYMBOL_GPL
+0x0da10ec3	security_sock_graft	vmlinux	EXPORT_SYMBOL
+0xcf74d25b	key_reject_and_link	vmlinux	EXPORT_SYMBOL
+0x08bf826c	_raw_spin_unlock_bh	vmlinux	EXPORT_SYMBOL
+0x46f317b2	pci_biosrom_size	vmlinux	EXPORT_SYMBOL
+0x7c4dafb9	xt_proto_init	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0xe395e17f	fscache_put_operation	fs/fscache/fscache	EXPORT_SYMBOL
+0x89272b19	com20020_found	drivers/net/arcnet/com20020	EXPORT_SYMBOL
+0xdd1c65f6	blk_finish_plug	vmlinux	EXPORT_SYMBOL
+0x0b1beb31	vmalloc_32_user	vmlinux	EXPORT_SYMBOL
+0x5904dd1b	ssb_bus_pcmciabus_register	drivers/ssb/ssb	EXPORT_SYMBOL
+0x63222b29	smsclient_sendrequest	drivers/media/dvb/siano/smsmdtv	EXPORT_SYMBOL_GPL
+0x92da04e8	ttm_write_unlock	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0xc9d465b8	drm_master_put	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xe6ab72a6	ipmi_set_my_LUN	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0x04d2bb7b	sata_pmp_qc_defer_cmd_switch	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xcb2ccddc	ata_sff_port_intr	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xd32fe193	ata_scsi_change_queue_depth	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x9f560a73	pci_get_subsys	vmlinux	EXPORT_SYMBOL
+0xcc5e2003	usb_hcd_check_unlink_urb	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x085e8f6d	target_submit_tmr	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x9e3601be	phy_device_free	drivers/net/phy/libphy	EXPORT_SYMBOL
+0xaf88f0dc	c2port_device_unregister	drivers/misc/c2port/core	EXPORT_SYMBOL
+0x861b7ed2	pcf50633_irq_mask_get	drivers/mfd/pcf50633	EXPORT_SYMBOL_GPL
+0x878ab3ce	sysctl_tcp_adv_win_scale	vmlinux	EXPORT_SYMBOL
+0x76160991	ip_local_out	vmlinux	EXPORT_SYMBOL_GPL
+0x063c201e	regcache_cache_bypass	vmlinux	EXPORT_SYMBOL_GPL
+0xccfbd196	generic_permission	vmlinux	EXPORT_SYMBOL
+0x1dd39f89	rtl_pci_disconnect	drivers/net/wireless/rtlwifi/rtlwifi	EXPORT_SYMBOL
+0x0ff41ec6	hostap_set_hostapd	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x93e20109	ath9k_hw_puttxbuf	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xd8573641	ath9k_hw_putrxbuf	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x2d999bb2	usbnet_open	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0x3b6518e8	pasic3_read_register	drivers/mfd/htc-pasic3	EXPORT_SYMBOL
+0x0cb18888	pci_test_config_bits	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x5b3f72c3	hippi_change_mtu	vmlinux	EXPORT_SYMBOL
+0xd59668e6	unlock_flocks	vmlinux	EXPORT_SYMBOL_GPL
+0xa36aa1c5	is_jack_detectable	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xab0b6a01	snd_hda_find_mixer_ctl	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x1b19aab3	snd_ctl_notify	sound/core/snd	EXPORT_SYMBOL
+0x7cf31b57	irlap_open	net/irda/irda	EXPORT_SYMBOL
+0xca013149	iriap_open	net/irda/irda	EXPORT_SYMBOL
+0x1c736810	ieee80211_rx_mgt_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x72f73d4d	fc_get_host_stats	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0xcabb7e7a	orinoco_open	drivers/net/wireless/orinoco/orinoco	EXPORT_SYMBOL
+0xacdf3225	cx2341x_handler_set_busy	drivers/media/video/cx2341x	EXPORT_SYMBOL
+0x9beeaeb3	fw_schedule_bus_reset	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0xab28271c	i8253_lock	vmlinux	EXPORT_SYMBOL
+0xa13a2326	uart_get_baud_rate	vmlinux	EXPORT_SYMBOL
+0xfee59b05	pci_find_next_bus	vmlinux	EXPORT_SYMBOL
+0x9d3aa376	blk_iopoll_init	vmlinux	EXPORT_SYMBOL
+0xf997d715	atomic_notifier_chain_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x70b63b4a	snd_msndmix_setup	sound/isa/msnd/snd-msnd-lib	EXPORT_SYMBOL
+0x9f30347d	snd_pcm_hw_constraint_step	sound/core/snd-pcm	EXPORT_SYMBOL
+0x52580479	irlap_close	net/irda/irda	EXPORT_SYMBOL
+0x2022796f	iriap_close	net/irda/irda	EXPORT_SYMBOL
+0xacb2d541	nfs41_setup_sequence	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0x6c2f6943	ToLegalChannel	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x06ba63e3	hostap_init_proc	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x45fc9b2f	usbnet_disconnect	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0x315945bd	tifm_alloc_adapter	drivers/misc/tifm_core	EXPORT_SYMBOL
+0x2683fc4d	media_device_unregister_entity	drivers/media/media	EXPORT_SYMBOL_GPL
+0x2e730a21	dm_bm_checksum	drivers/md/persistent-data/dm-persistent-data	EXPORT_SYMBOL_GPL
+0x533bc7b1	drm_framebuffer_init	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x301f1093	secpath_dup	vmlinux	EXPORT_SYMBOL
+0x0b19ed7c	apei_estatus_check_header	vmlinux	EXPORT_SYMBOL_GPL
+0x80ec9c32	set_user_nice	vmlinux	EXPORT_SYMBOL
+0x95c72330	m2p_remove_override	vmlinux	EXPORT_SYMBOL_GPL
+0x7fe1a403	cfg80211_find_ie	net/wireless/cfg80211	EXPORT_SYMBOL
+0x3aeba408	gss_pseudoflavor_to_service	net/sunrpc/auth_gss/auth_rpcgss	EXPORT_SYMBOL_GPL
+0x5d1cc9fc	w1_register_family	drivers/w1/wire	EXPORT_SYMBOL
+0x211bc1b0	ieee80211_txb_free_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0xa54f7ca0	dibx000_i2c_set_speed	drivers/media/dvb/frontends/dibx000_common	EXPORT_SYMBOL
+0x83aea1d5	ib_modify_port	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x67685b22	splice_direct_to_actor	vmlinux	EXPORT_SYMBOL
+0xb5cb8145	hrtimer_get_res	vmlinux	EXPORT_SYMBOL_GPL
+0x837a2156	snd_msnd_enable_irq	sound/isa/msnd/snd-msnd-lib	EXPORT_SYMBOL
+0x95268ad5	nf_nat_pptp_hook_inbound	net/netfilter/nf_conntrack_pptp	EXPORT_SYMBOL_GPL
+0x2b3a3faa	nf_conntrack_l3proto_unregister	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x0309f138	nf_conntrack_l4proto_unregister	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x2b9da7a4	genl_lock	vmlinux	EXPORT_SYMBOL
+0x314ef3a5	qdisc_class_hash_grow	vmlinux	EXPORT_SYMBOL
+0xb133efb8	sock_setsockopt	vmlinux	EXPORT_SYMBOL
+0xf14b7a64	tty_port_close_start	vmlinux	EXPORT_SYMBOL
+0x92539a0c	dma_find_channel	vmlinux	EXPORT_SYMBOL
+0x174b05f0	fb_find_mode	vmlinux	EXPORT_SYMBOL
+0x74d80856	ida_simple_remove	vmlinux	EXPORT_SYMBOL
+0x2ecee19f	unlock_buffer	vmlinux	EXPORT_SYMBOL
+0x5c61a886	simple_transaction_release	vmlinux	EXPORT_SYMBOL
+0x15568631	lookup_address	vmlinux	EXPORT_SYMBOL_GPL
+0x5685bc71	nfulnl_log_packet	net/netfilter/nfnetlink_log	EXPORT_SYMBOL_GPL
+0x9ff998ac	nfs_commit_free	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0xccdd7b95	ulist_fini	fs/btrfs/btrfs	EXPORT_SYMBOL
+0x58cbfcc2	ulist_free	fs/btrfs/btrfs	EXPORT_SYMBOL
+0x85aa880c	transport_set_vpd_assoc	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x32d271d6	sas_get_fabric_proto_ident	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x162ee220	sas_queuecommand	drivers/scsi/libsas/libsas	EXPORT_SYMBOL_GPL
+0x01010c6d	klist_add_before	vmlinux	EXPORT_SYMBOL_GPL
+0x9cb96e92	qdisc_put_rtab	vmlinux	EXPORT_SYMBOL
+0x241710d6	subsys_find_device_by_id	vmlinux	EXPORT_SYMBOL_GPL
+0xc1113f5d	vga_put	vmlinux	EXPORT_SYMBOL
+0xcef69050	crypto_attr_alg2	vmlinux	EXPORT_SYMBOL_GPL
+0xe57361dd	__tracepoint_kmem_cache_alloc	vmlinux	EXPORT_SYMBOL
+0x280f9f14	__per_cpu_offset	vmlinux	EXPORT_SYMBOL
+0x1999e0b4	set_sig_addr_hook	net/netfilter/nf_conntrack_h323	EXPORT_SYMBOL_GPL
+0x47370b9d	ieee80211_remain_on_channel_expired	net/mac80211/mac80211	EXPORT_SYMBOL_GPL
+0x4ffcf57c	rt2x00pci_regbusy_read	drivers/net/wireless/rt2x00/rt2x00pci	EXPORT_SYMBOL_GPL
+0x052e2028	drm_crtc_helper_set_mode	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0xbf4ee12b	tpm_show_enabled	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0xe8009719	proto_register	vmlinux	EXPORT_SYMBOL
+0x5a4d5192	rtc_irq_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0xc3a290db	tty_wakeup	vmlinux	EXPORT_SYMBOL_GPL
+0xdc14a211	xen_hvm_evtchn_do_upcall	vmlinux	EXPORT_SYMBOL_GPL
+0x4a0d25a7	gen_pool_virt_to_phys	vmlinux	EXPORT_SYMBOL
+0x54b0a269	blkcg_get_weight	vmlinux	EXPORT_SYMBOL_GPL
+0x9113e8b0	event_storage_mutex	vmlinux	EXPORT_SYMBOL_GPL
+0x51d12d4e	acpi_pci_disabled	vmlinux	EXPORT_SYMBOL
+0x46f4a31e	snd_sbmixer_read	sound/isa/sb/snd-sb-common	EXPORT_SYMBOL
+0x0ae0f246	smscore_start_device	drivers/media/dvb/siano/smsmdtv	EXPORT_SYMBOL_GPL
+0xf535e7d3	flexcop_wan_set_speed	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0x3a50c486	drm_plane_cleanup	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x63a1682e	x86_emulate_instruction	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x45d216b9	tcp_put_md5sig_pool	vmlinux	EXPORT_SYMBOL
+0xe0536851	check_disk_size_change	vmlinux	EXPORT_SYMBOL
+0x31f72e2d	d_clear_need_lookup	vmlinux	EXPORT_SYMBOL
+0xd0f0d945	down_read	vmlinux	EXPORT_SYMBOL
+0xc11ce82e	sas_phy_reset	drivers/scsi/libsas/libsas	EXPORT_SYMBOL_GPL
+0x738660c2	cxgbi_conn_init_pdu	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0x89fa52f1	rt2800_disable_radio	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0x749a8663	km_report	vmlinux	EXPORT_SYMBOL
+0x225fc03b	__napi_complete	vmlinux	EXPORT_SYMBOL
+0x1b6684de	skb_copy_expand	vmlinux	EXPORT_SYMBOL
+0xabd0c91c	rtc_time_to_tm	vmlinux	EXPORT_SYMBOL
+0x82001ae2	dmam_free_coherent	vmlinux	EXPORT_SYMBOL
+0xced2758c	transport_setup_device	vmlinux	EXPORT_SYMBOL_GPL
+0x5a2b1b67	gnttab_free_grant_reference	vmlinux	EXPORT_SYMBOL_GPL
+0xbe4f8621	blk_queue_softirq_done	vmlinux	EXPORT_SYMBOL
+0xac5f5b1d	d_lookup	vmlinux	EXPORT_SYMBOL
+0x00a72d9d	virtio_check_driver_offered_feature	drivers/virtio/virtio	EXPORT_SYMBOL_GPL
+0xf811e69d	scsi_eh_flush_done_q	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xdb1f23f2	cxgbi_iscsi_init	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0x36732a27	pcmcia_get_socket	drivers/pcmcia/pcmcia_core	EXPORT_SYMBOL
+0xfb08ca01	pcmcia_put_socket	drivers/pcmcia/pcmcia_core	EXPORT_SYMBOL
+0x339ba661	rtl92c_phy_query_bb_reg	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0x021d462d	cxgb4_iscsi_init	drivers/net/ethernet/chelsio/cxgb4/cxgb4	EXPORT_SYMBOL
+0x42d814c6	ubi_leb_change	drivers/mtd/ubi/ubi	EXPORT_SYMBOL_GPL
+0xbeafbf49	b1dma_reset	drivers/isdn/hardware/avm/b1dma	EXPORT_SYMBOL
+0x0126b8f9	ib_reg_phys_mr	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x3b969a5f	genl_unregister_mc_group	vmlinux	EXPORT_SYMBOL
+0xca439f2a	pci_iomap	vmlinux	EXPORT_SYMBOL
+0xb87eae30	path_is_under	vmlinux	EXPORT_SYMBOL
+0xbd7e1304	xt_hook_unlink	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0x8d26a311	transport_wait_for_tasks	drivers/target/target_core_mod	EXPORT_SYMBOL
+0xacd8f536	il_send_cmd_pdu_async	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x3f8de7aa	ath9k_hw_setantenna	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x9fa5ff7d	mmc_erase	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x5b9cc70a	v4l2_ctrl_s_ctrl	drivers/media/video/videodev	EXPORT_SYMBOL
+0xcbbafc09	dm_underlying_device_busy	drivers/md/dm-mod	EXPORT_SYMBOL_GPL
+0x2b54aa9a	ttm_object_file_init	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x5cf59609	ttm_bo_global_init	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x65028277	drm_mode_equal	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xf3cd4752	skb_morph	vmlinux	EXPORT_SYMBOL_GPL
+0x7c46233a	cpufreq_quick_get	vmlinux	EXPORT_SYMBOL
+0x6a9db3ff	serio_unregister_port	vmlinux	EXPORT_SYMBOL
+0x5fe41fb6	percpu_counter_set	vmlinux	EXPORT_SYMBOL
+0x42c8de35	ioremap_nocache	vmlinux	EXPORT_SYMBOL
+0x68a24153	snd_pcm_format_physical_width	sound/core/snd-pcm	EXPORT_SYMBOL
+0x5ca3a232	pnfs_ld_read_done	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0xb80dad4a	video_output_register	drivers/video/output	EXPORT_SYMBOL
+0x81d33f32	transport_generic_handle_tmr	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x4b4c7e0f	scsi_remove_host	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xe01ba366	fc_exch_mgr_reset	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x71e9ef2b	t3_l2t_send_event	drivers/net/ethernet/chelsio/cxgb3/cxgb3	EXPORT_SYMBOL
+0xd3ee7530	dvb_ringbuffer_read	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0xa4ed753e	__bcma_driver_register	drivers/bcma/bcma	EXPORT_SYMBOL_GPL
+0xd82e5d1d	gfn_to_hva	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x953a0bab	gfn_to_pfn	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xfd05464b	klist_add_head	vmlinux	EXPORT_SYMBOL_GPL
+0x884de19e	pci_request_selected_regions_exclusive	vmlinux	EXPORT_SYMBOL
+0xb6822a33	radix_tree_gang_lookup_tag	vmlinux	EXPORT_SYMBOL
+0xba22aa12	scsi_is_host_device	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x1dacb74a	iscsi_eh_target_reset	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0x8c67b4df	ei_start_xmit	drivers/net/ethernet/8390/8390	EXPORT_SYMBOL
+0xd47f043d	v4l2_querymenu	drivers/media/video/videodev	EXPORT_SYMBOL
+0xd7cec25e	dvb_pll_attach	drivers/media/dvb/frontends/dvb-pll	EXPORT_SYMBOL
+0x01d2f9ac	dm_rh_recovery_start	drivers/md/dm-region-hash	EXPORT_SYMBOL_GPL
+0xd9d4af2d	devm_ioremap_nocache	vmlinux	EXPORT_SYMBOL
+0x318a8775	sync_dirty_buffer	vmlinux	EXPORT_SYMBOL
+0x32f942ad	ebt_register_table	net/bridge/netfilter/ebtables	EXPORT_SYMBOL
+0x91c9a325	bt_to_errno	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x6c200518	matroxfb_g450_setclk	drivers/video/matrox/g450_pll	EXPORT_SYMBOL
+0x4ae7d8af	cx2341x_handler_init	drivers/media/video/cx2341x	EXPORT_SYMBOL
+0x8b45dfb8	ib_fmr_pool_map_phys	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xf1421d13	drm_mode_sort	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xf70399ad	edac_mc_add_mc	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0xcf14c73c	tcp_reno_ssthresh	vmlinux	EXPORT_SYMBOL_GPL
+0x6dd6422b	netlink_has_listeners	vmlinux	EXPORT_SYMBOL_GPL
+0xe075d6eb	iter_div_u64_rem	vmlinux	EXPORT_SYMBOL
+0x50ca9ce9	filter_current_check_discard	vmlinux	EXPORT_SYMBOL_GPL
+0xbbabde96	dma_supported	vmlinux	EXPORT_SYMBOL
+0x5d5a33a9	__snd_util_memblk_new	sound/synth/snd-util-mem	EXPORT_SYMBOL
+0x9f2261f9	nf_nat_seq_adjust_hook	net/ipv4/netfilter/nf_conntrack_ipv4	EXPORT_SYMBOL_GPL
+0xc3948a1b	atm_init_aal5	net/atm/atm	EXPORT_SYMBOL
+0x436024f3	usb_alloc_urb	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x7a14ecf9	usbip_event_add	drivers/staging/usbip/usbip-core	EXPORT_SYMBOL_GPL
+0x7566a346	rt2800_reset_tuner	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0x5a82922a	ath9k_hw_releasetxqueue	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xa94fc284	rdma_resolve_route	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0x3465ed3d	drm_mm_search_free	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x17f341a0	i8042_lock_chip	vmlinux	EXPORT_SYMBOL
+0xf285c87b	spi_setup	vmlinux	EXPORT_SYMBOL_GPL
+0x7bff4fe8	__pci_enable_wake	vmlinux	EXPORT_SYMBOL
+0x97b093dd	btree_update	vmlinux	EXPORT_SYMBOL_GPL
+0x7efdcbcf	inode_init_once	vmlinux	EXPORT_SYMBOL
+0x73d69364	ring_buffer_change_overwrite	vmlinux	EXPORT_SYMBOL_GPL
+0xcfe07747	__srcu_notifier_call_chain	vmlinux	EXPORT_SYMBOL_GPL
+0x83bdffcf	hci_conn_put_device	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x4a48d81c	raid6_datap_recov	lib/raid6/raid6_pq	EXPORT_SYMBOL_GPL
+0x9224c139	il_mac_add_interface	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xe8df3c70	alloc_arcdev	drivers/net/arcnet/arcnet	EXPORT_SYMBOL
+0x897ccce4	ttm_pool_unpopulate	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0xb6561c42	nf_ip6_checksum	vmlinux	EXPORT_SYMBOL
+0x83102201	netpoll_send_skb_on_dev	vmlinux	EXPORT_SYMBOL
+0xb513ada7	device_move	vmlinux	EXPORT_SYMBOL_GPL
+0xadd727a9	scsi_cmd_ioctl	vmlinux	EXPORT_SYMBOL
+0x9430a8d2	async_unwrap_char	net/irda/irda	EXPORT_SYMBOL
+0x64babf41	usb_stor_clear_halt	drivers/usb/storage/usb-storage	EXPORT_SYMBOL_GPL
+0xece8e9ec	mite_bytes_read_from_memory_lb	drivers/staging/comedi/drivers/mite	EXPORT_SYMBOL
+0x568cb743	mite_bytes_read_from_memory_ub	drivers/staging/comedi/drivers/mite	EXPORT_SYMBOL
+0xa7d62380	asus_wmi_unregister_driver	drivers/platform/x86/asus-wmi	EXPORT_SYMBOL_GPL
+0xc2ea21a4	rt2x00usb_initialize	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0xcd7c21f7	alloc_can_err_skb	drivers/net/can/can-dev	EXPORT_SYMBOL_GPL
+0x52c86f45	mtd_block_isbad	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0xd32479bc	dm_sm_checker_create	drivers/md/persistent-data/dm-persistent-data	EXPORT_SYMBOL_GPL
+0x7c7dac9b	drm_core_ioremapfree	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x84ef3048	fw_core_handle_bus_reset	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0xab11946d	tcp_md5_do_del	vmlinux	EXPORT_SYMBOL
+0x43ed6436	neigh_seq_stop	vmlinux	EXPORT_SYMBOL
+0x0f4c91ed	ns_to_timespec	vmlinux	EXPORT_SYMBOL
+0xed93f29e	__kunmap_atomic	vmlinux	EXPORT_SYMBOL
+0xbca707c4	rpc_pipefs_notifier_unregister	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xaeb7451e	ax25_defaddr	net/ax25/ax25	EXPORT_SYMBOL_GPL
+0xdbc57173	p9_tag_lookup	net/9p/9pnet	EXPORT_SYMBOL
+0xf68626e0	target_get_sess_cmd	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x83a2c1a6	target_put_sess_cmd	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x879267b8	cxgbi_set_host_param	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0x8242d412	mtd_get_user_prot_info	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0x7ca70f05	mtd_read_user_prot_reg	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0x346127a7	drm_global_item_ref	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x4c59d66b	drm_framebuffer_cleanup	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x75887a90	dev_mc_add_global	vmlinux	EXPORT_SYMBOL
+0xe2ec6935	dev_mc_del_global	vmlinux	EXPORT_SYMBOL
+0x3c803f6f	pnp_device_attach	vmlinux	EXPORT_SYMBOL
+0x62049256	acpi_disable	vmlinux	EXPORT_SYMBOL
+0xa91b5561	acpi_video_backlight_support	vmlinux	EXPORT_SYMBOL
+0x99525e3a	vfsmount_lock_local_unlock	vmlinux	EXPORT_SYMBOL
+0xe9ed7c9e	blocking_notifier_chain_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0xf2db5956	svga_match_format	drivers/video/svgalib	EXPORT_SYMBOL
+0x0ec6d8e0	libfc_vport_create	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x7a3e7608	lbs_add_card	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0xa7e89b53	mmc_register_driver	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x40ae6b58	mfd_cell_enable	drivers/mfd/mfd-core	EXPORT_SYMBOL
+0x06df9592	mantis_dvb_init	drivers/media/dvb/mantis/mantis_core	EXPORT_SYMBOL_GPL
+0x0e91cfa7	mantis_i2c_init	drivers/media/dvb/mantis/mantis_core	EXPORT_SYMBOL_GPL
+0xd3197b37	mantis_pci_init	drivers/media/dvb/mantis/mantis_core	EXPORT_SYMBOL_GPL
+0x078aacea	mantis_dma_init	drivers/media/dvb/mantis/mantis_core	EXPORT_SYMBOL_GPL
+0x02d4198f	gigaset_add_event	drivers/isdn/gigaset/gigaset	EXPORT_SYMBOL_GPL
+0x02e62ffc	drm_vblank_count_and_time	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xc8dd4f3f	fifo_create_dflt	vmlinux	EXPORT_SYMBOL
+0xd4605a96	neigh_table_init	vmlinux	EXPORT_SYMBOL
+0x9bd70dc7	cpuidle_register_device	vmlinux	EXPORT_SYMBOL_GPL
+0x38a9c2c7	input_ff_effect_from_user	vmlinux	EXPORT_SYMBOL_GPL
+0xd1c0517e	attribute_container_register	vmlinux	EXPORT_SYMBOL_GPL
+0x63146fbb	blk_queue_segment_boundary	vmlinux	EXPORT_SYMBOL
+0x44e43a99	blk_stop_queue	vmlinux	EXPORT_SYMBOL
+0x51e84464	blkcipher_walk_virt_block	vmlinux	EXPORT_SYMBOL_GPL
+0x7aeaa7d1	sysfs_create_link	vmlinux	EXPORT_SYMBOL_GPL
+0x15eaaa92	task_active_pid_ns	vmlinux	EXPORT_SYMBOL_GPL
+0x6aafcb64	svc_set_client	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x59457776	nf_nat_proto_nlattr_to_range	net/ipv4/netfilter/nf_nat	EXPORT_SYMBOL_GPL
+0x71634da7	lc_seq_dump_details	lib/lru_cache	EXPORT_SYMBOL
+0xbb9adf81	power_supply_powers	drivers/power/power_supply	EXPORT_SYMBOL_GPL
+0x99485560	fw_core_remove_card	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0xfcb77cfd	ipmi_free_recv_msg	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0x5f9e2086	inetpeer_invalidate_tree	vmlinux	EXPORT_SYMBOL
+0xb34d4c2e	acpi_terminate	vmlinux	EXPORT_SYMBOL
+0xe6ac5e6c	pci_add_dynid	vmlinux	EXPORT_SYMBOL_GPL
+0x6d294e43	clock_t_to_jiffies	vmlinux	EXPORT_SYMBOL
+0x87d4139b	snd_pcm_lib_preallocate_pages_for_all	sound/core/snd-pcm	EXPORT_SYMBOL
+0xe97f4ce5	qword_get	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x523da61e	ip_vs_nfct_expect_related	net/netfilter/ipvs/ip_vs	EXPORT_SYMBOL
+0x3a1fcc6b	journal_revoke	fs/jbd/jbd	EXPORT_SYMBOL
+0x61cdf799	mxm_wmi_call_mxds	drivers/platform/x86/mxm-wmi	EXPORT_SYMBOL_GPL
+0x5c33db87	cx231xx_init_bulk	drivers/media/video/cx231xx/cx231xx	EXPORT_SYMBOL_GPL
+0x1e922e21	drm_prime_remove_imported_buf_handle	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xdbb5a9f5	drm_ht_remove_item	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x8b03d29c	drm_vblank_get	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x842c95fa	drm_vblank_off	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xba9ed435	kvm_mmu_set_mmio_spte_mask	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x500ab9a4	pcim_iomap_table	vmlinux	EXPORT_SYMBOL
+0x1a69d511	crypto_larval_alloc	vmlinux	EXPORT_SYMBOL_GPL
+0x69622f23	seq_release	vmlinux	EXPORT_SYMBOL
+0xb85d2f32	insert_inode_locked	vmlinux	EXPORT_SYMBOL
+0x838b13e7	ring_buffer_free	vmlinux	EXPORT_SYMBOL_GPL
+0x4c3866c0	ring_buffer_size	vmlinux	EXPORT_SYMBOL_GPL
+0xa9f9e8e1	module_layout	vmlinux	EXPORT_SYMBOL
+0xce45a6f1	raid6_gfexi	lib/raid6/raid6_pq	EXPORT_SYMBOL
+0xbc8bd654	qtree_entry_unused	fs/quota/quota_tree	EXPORT_SYMBOL
+0x0724e090	osd_req_list_dev_partitions	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0x038854b8	parport_register_driver	drivers/parport/parport	EXPORT_SYMBOL
+0xa7c4fd6c	capi_message2str	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x2ece0257	hidinput_disconnect	drivers/hid/hid	EXPORT_SYMBOL_GPL
+0xc11a1c4c	xfrm_audit_state_notfound	vmlinux	EXPORT_SYMBOL_GPL
+0x948e00ed	amdtp_out_stream_update	sound/firewire/snd-firewire-lib	EXPORT_SYMBOL
+0xcc1fb551	baswap	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x88be4a32	tun_get_socket	drivers/net/tun	EXPORT_SYMBOL_GPL
+0xc2ab3f49	onenand_release	drivers/mtd/onenand/onenand	EXPORT_SYMBOL_GPL
+0x8fae8ae5	dm_snap_origin	drivers/md/dm-snapshot	EXPORT_SYMBOL
+0x73a48b4a	ata_sff_std_ports	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x3d388324	dpm_resume_end	vmlinux	EXPORT_SYMBOL_GPL
+0xd6feefa5	agp_num_entries	vmlinux	EXPORT_SYMBOL_GPL
+0xef417173	__blk_put_request	vmlinux	EXPORT_SYMBOL_GPL
+0x655a5512	elv_rb_latter_request	vmlinux	EXPORT_SYMBOL
+0xe599e8e2	sysfs_create_bin_file	vmlinux	EXPORT_SYMBOL_GPL
+0x66b2a859	nr_free_buffer_pages	vmlinux	EXPORT_SYMBOL_GPL
+0x3c6b05ad	cgroup_taskset_next	vmlinux	EXPORT_SYMBOL_GPL
+0x060d1064	set_memory_ro	vmlinux	EXPORT_SYMBOL_GPL
+0xf97666a0	set_memory_rw	vmlinux	EXPORT_SYMBOL_GPL
+0xd6b33026	cpu_khz	vmlinux	EXPORT_SYMBOL
+0xc652fd69	snd_hda_get_jack_connectivity	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x1c5d48ed	snd_card_unref	sound/core/snd	EXPORT_SYMBOL
+0xdd8a50ab	dccp_destroy_sock	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xa33a6d24	uwb_rc_reset_all	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0x3c1a598f	cxgbi_sock_check_wr_invariants	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0xd15e142f	rt2800_ampdu_action	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0xbdc0a9a2	dm_noflush_suspending	drivers/md/dm-mod	EXPORT_SYMBOL_GPL
+0x13f3e3fb	klist_init	vmlinux	EXPORT_SYMBOL_GPL
+0x095b778b	xfrm_state_unregister_afinfo	vmlinux	EXPORT_SYMBOL
+0x620cdb12	serial8250_do_pm	vmlinux	EXPORT_SYMBOL
+0x14b9ccc9	acpi_get_physical_device	vmlinux	EXPORT_SYMBOL
+0x2af2d83b	pci_ltr_supported	vmlinux	EXPORT_SYMBOL
+0x6cdc5c6b	nla_strlcpy	vmlinux	EXPORT_SYMBOL
+0xa46f2f1b	kstrtouint	vmlinux	EXPORT_SYMBOL
+0xb72ac1e9	blk_init_queue_node	vmlinux	EXPORT_SYMBOL
+0x73ccf6b4	pstore_register	vmlinux	EXPORT_SYMBOL_GPL
+0xbc1afedf	up_write	vmlinux	EXPORT_SYMBOL
+0xca3141e7	cpu_all_bits	vmlinux	EXPORT_SYMBOL
+0xd9519b0f	snd_rawmidi_kernel_open	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0xbd209c8d	auth_domain_put	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xbf35707e	p9_client_remove	net/9p/9pnet	EXPORT_SYMBOL
+0x148cb8ea	p9_client_rename	net/9p/9pnet	EXPORT_SYMBOL
+0x201a4e3b	scsi_prep_state_check	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x91989280	scsi_target_block	drivers/scsi/scsi_mod	EXPORT_SYMBOL_GPL
+0xa63d85ab	slhc_remember	drivers/net/slip/slhc	EXPORT_SYMBOL
+0x0c6ad2cf	tps65010_config_vdcdc2	drivers/mfd/tps65010	EXPORT_SYMBOL
+0x30ceb09d	mpt_halt_firmware	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0x549b2c8d	drm_mm_put_block	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x7aa81449	tcf_hash_release	vmlinux	EXPORT_SYMBOL
+0x15398c9f	cpufreq_cpu_get	vmlinux	EXPORT_SYMBOL_GPL
+0xdae02f3a	cpufreq_cpu_put	vmlinux	EXPORT_SYMBOL_GPL
+0x9edcf8c2	free_buffer_head	vmlinux	EXPORT_SYMBOL
+0xfc81d791	fget	vmlinux	EXPORT_SYMBOL
+0xb6c0a980	snd_ctl_boolean_mono_info	sound/core/snd	EXPORT_SYMBOL
+0xee1551ac	can_send	net/can/can	EXPORT_SYMBOL
+0x1862f060	jbd2_log_start_commit	fs/jbd2/jbd2	EXPORT_SYMBOL
+0x939a8f78	phone_register_device	drivers/staging/telephony/phonedev	EXPORT_SYMBOL
+0x108aeb79	iscsi_complete_pdu	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0xb5cae4e8	fc_queuecommand	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x6684ab92	rt2800_wait_csr_ready	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0xfa1eb910	unregister_syscore_ops	vmlinux	EXPORT_SYMBOL_GPL
+0xa4ca0d4e	unregister_acpi_hed_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0x2fd29027	lib80211_crypt_info_free	net/wireless/lib80211	EXPORT_SYMBOL
+0x0fb81044	jbd2_journal_abort	fs/jbd2/jbd2	EXPORT_SYMBOL
+0xfcf80eb7	b1_free_card	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0x706b3a33	cpufreq_frequency_table_get_attr	vmlinux	EXPORT_SYMBOL_GPL
+0xb3cc0478	usb_put_transceiver	vmlinux	EXPORT_SYMBOL
+0x44e9a829	match_token	vmlinux	EXPORT_SYMBOL
+0xa7364e21	vmtruncate	vmlinux	EXPORT_SYMBOL
+0x1a323362	__ftrace_vbprintk	vmlinux	EXPORT_SYMBOL_GPL
+0x61b5ade0	down_write	vmlinux	EXPORT_SYMBOL
+0xaaf88cd2	snd_gf1_i_write8	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0x063c95b6	cmp_connection_destroy	sound/firewire/snd-firewire-lib	EXPORT_SYMBOL
+0x09c64fbd	ieee80211_frequency_to_channel	net/wireless/cfg80211	EXPORT_SYMBOL
+0x1b9e0ff1	scsilun_to_int	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xe00cec3c	il_clear_bit	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x62a5641e	dibusb_power_ctrl	drivers/media/dvb/dvb-usb/dvb-usb-dibusb-common	EXPORT_SYMBOL
+0x10cf025b	drm_prime_pages_to_sg	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x87480a04	ip_route_output_flow	vmlinux	EXPORT_SYMBOL_GPL
+0x8212721d	xenbus_dev_request_and_reply	vmlinux	EXPORT_SYMBOL
+0x18a09289	key_type_logon	vmlinux	EXPORT_SYMBOL_GPL
+0xda5eb706	posix_test_lock	vmlinux	EXPORT_SYMBOL
+0x6e68b902	kill_block_super	vmlinux	EXPORT_SYMBOL
+0xe9c548f7	flush_signals	vmlinux	EXPORT_SYMBOL
+0xc572e2df	amdtp_out_stream_stop	sound/firewire/snd-firewire-lib	EXPORT_SYMBOL
+0xb94b4735	nf_ct_remove_expectations	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x0e3d0216	ceph_calc_object_layout	net/ceph/libceph	EXPORT_SYMBOL
+0x8ffdb3b8	crc16	lib/crc16	EXPORT_SYMBOL
+0x8ea1977c	mb_cache_entry_insert	fs/mbcache	EXPORT_SYMBOL
+0xf6b615ab	umc_device_unregister	drivers/uwb/umc	EXPORT_SYMBOL_GPL
+0x422cfcfa	usb_stor_disconnect	drivers/usb/storage/usb-storage	EXPORT_SYMBOL_GPL
+0xf381bfc9	pccard_register_pcmcia	drivers/pcmcia/pcmcia_core	EXPORT_SYMBOL
+0x4e2481d5	ath_is_world_regd	drivers/net/wireless/ath/ath	EXPORT_SYMBOL
+0x12ccef3c	neigh_lookup_nodev	vmlinux	EXPORT_SYMBOL
+0xb77c0f0a	kernel_getsockopt	vmlinux	EXPORT_SYMBOL
+0xa14c169d	kernel_setsockopt	vmlinux	EXPORT_SYMBOL
+0xb4357ea2	kernel_sock_ioctl	vmlinux	EXPORT_SYMBOL
+0xec9d6bc0	dquot_operations	vmlinux	EXPORT_SYMBOL
+0xa20fc8dd	padata_start	vmlinux	EXPORT_SYMBOL
+0x5200b69e	kallsyms_on_each_symbol	vmlinux	EXPORT_SYMBOL_GPL
+0xd2a8caf0	work_on_cpu	vmlinux	EXPORT_SYMBOL_GPL
+0xfba16a83	snd_mixer_oss_ioctl_card	sound/core/oss/snd-mixer-oss	EXPORT_SYMBOL
+0x1e0a6a22	nfnetlink_unicast	net/netfilter/nfnetlink	EXPORT_SYMBOL_GPL
+0xbf457dd7	nf_tproxy_assign_sock	net/netfilter/nf_tproxy_core	EXPORT_SYMBOL_GPL
+0xbf3fb937	rt2x00lib_pretbtt	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x70a6ddae	libipw_rx_mgt	drivers/net/wireless/ipw2x00/libipw	EXPORT_SYMBOL
+0xb385a23f	mpt_raid_phys_disk_pg1	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0x7e7a3110	drm_get_last_vbltimestamp	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x88323aa3	dev_pm_qos_hide_latency_limit	vmlinux	EXPORT_SYMBOL_GPL
+0xc6d7da79	pci_intx_mask_supported	vmlinux	EXPORT_SYMBOL_GPL
+0xab694444	bsearch	vmlinux	EXPORT_SYMBOL
+0x7ff9576c	blk_put_request	vmlinux	EXPORT_SYMBOL
+0x9f40a6d6	async_synchronize_full_domain	vmlinux	EXPORT_SYMBOL_GPL
+0x249f5995	snd_es1688_create	sound/isa/es1688/snd-es1688-lib	EXPORT_SYMBOL
+0x61db7cb7	usb_serial_generic_throttle	drivers/usb/serial/usbserial	EXPORT_SYMBOL_GPL
+0xdb95cf16	usb_wwan_disconnect	drivers/usb/serial/usb_wwan	EXPORT_SYMBOL
+0xe3914e5b	iscsi_tcp_task_xmit	drivers/scsi/libiscsi_tcp	EXPORT_SYMBOL_GPL
+0x47e09ceb	ar9003_paprd_enable	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xb22936e6	dibusb2_0_streaming_ctrl	drivers/media/dvb/dvb-usb/dvb-usb-dibusb-common	EXPORT_SYMBOL
+0x6d0cab68	cdrom_mode_select	drivers/cdrom/cdrom	EXPORT_SYMBOL
+0xbd7f8c4d	xen_swiotlb_map_sg	vmlinux	EXPORT_SYMBOL_GPL
+0xe4d468c0	crypto_create_tfm	vmlinux	EXPORT_SYMBOL_GPL
+0xdca82e6d	snd_pcm_lib_preallocate_free_for_all	sound/core/snd-pcm	EXPORT_SYMBOL
+0xf27191a4	nf_conntrack_in	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x2b506def	matroxfb_vgaHWinit	drivers/video/matrox/matroxfb_misc	EXPORT_SYMBOL
+0x78b72f44	usbip_debug_flag	drivers/staging/usbip/usbip-core	EXPORT_SYMBOL_GPL
+0x8ba3ebd3	iscsi_tcp_conn_setup	drivers/scsi/libiscsi_tcp	EXPORT_SYMBOL_GPL
+0xfeb56f95	memstick_set_rw_addr	drivers/memstick/core/memstick	EXPORT_SYMBOL
+0x2a6062bc	v4l2_fh_add	drivers/media/video/videodev	EXPORT_SYMBOL_GPL
+0x1f7b45ca	rc_map_register	drivers/media/rc/rc-core	EXPORT_SYMBOL_GPL
+0x35ca8cfa	dm_kcopyd_client_create	drivers/md/dm-mod	EXPORT_SYMBOL
+0xbbf41783	ib_sa_join_multicast	drivers/infiniband/core/ib_sa	EXPORT_SYMBOL
+0x11d255c2	drm_mode_remove	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xa6b2961f	edac_pci_free_ctl_info	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0xea606bbf	ata_port_schedule_eh	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x90ad7abe	sock_queue_rcv_skb	vmlinux	EXPORT_SYMBOL
+0xfcd35070	blk_limits_io_min	vmlinux	EXPORT_SYMBOL
+0xa7d0a2da	sysfs_remove_files	vmlinux	EXPORT_SYMBOL_GPL
+0xd13b7a31	mapping_tagged	vmlinux	EXPORT_SYMBOL
+0x2f252dc4	rpc_setbufsize	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x3391a4eb	aarp_send_ddp	net/appletalk/appletalk	EXPORT_SYMBOL
+0xf45f95ec	__transport_register_session	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x2d240bb4	sas_get_pr_transport_id	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x3aad4b51	p54_rx	drivers/net/wireless/p54/p54common	EXPORT_SYMBOL_GPL
+0x2d2141ab	ath9k_hw_set_gpio	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x2d6888a8	usbnet_purge_paused_rxq	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0x91d3e045	rc_unregister_device	drivers/media/rc/rc-core	EXPORT_SYMBOL_GPL
+0xe8832390	usbhid_set_leds	drivers/hid/usbhid/usbhid	EXPORT_SYMBOL_GPL
+0x35f3ae51	unix_table_lock	vmlinux	EXPORT_SYMBOL_GPL
+0x10a0d8cb	serio_interrupt	vmlinux	EXPORT_SYMBOL
+0xf6bb4729	color_table	vmlinux	EXPORT_SYMBOL
+0x0ca7b7a8	acpi_check_region	vmlinux	EXPORT_SYMBOL
+0xd95df569	put_disk	vmlinux	EXPORT_SYMBOL
+0xbe2c0274	add_timer	vmlinux	EXPORT_SYMBOL
+0x9687d7ce	snd_hda_power_down	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xbd082a74	rxrpc_register_security	net/rxrpc/af-rxrpc	EXPORT_SYMBOL_GPL
+0x142b61f4	can_proto_register	net/can/can	EXPORT_SYMBOL
+0x23d43ea9	md_set_array_sectors	drivers/md/md-mod	EXPORT_SYMBOL
+0xb417a7d6	hid_allocate_device	drivers/hid/hid	EXPORT_SYMBOL_GPL
+0x980cbd47	fw_core_remove_address_handler	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0x38296813	spi_sync	vmlinux	EXPORT_SYMBOL_GPL
+0x54cfade9	dma_sync_wait	vmlinux	EXPORT_SYMBOL
+0x732b7833	irq_cpu_rmap_add	vmlinux	EXPORT_SYMBOL
+0x9ba7089d	argv_split	vmlinux	EXPORT_SYMBOL
+0x904cde6d	snd_hda_spdif_ctls_assign	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x43e083b7	cfc_handle_events	drivers/staging/comedi/drivers/comedi_fc	EXPORT_SYMBOL
+0x821b3c2d	il_full_rxon_required	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x101b2a6a	cxgb4_l2t_release	drivers/net/ethernet/chelsio/cxgb4/cxgb4	EXPORT_SYMBOL
+0x21569afa	flexcop_dump_reg	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0x405d34cd	drm_add_modes_noedid	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xb352177e	find_first_bit	vmlinux	EXPORT_SYMBOL
+0x00fe0468	blk_queue_max_hw_sectors	vmlinux	EXPORT_SYMBOL
+0x44777ade	cfg80211_ref_bss	net/wireless/cfg80211	EXPORT_SYMBOL
+0x31a89d59	rpc_debug	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xf1826c4c	svc_xprt_enqueue	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x36fe08d2	rds_inc_put	net/rds/rds	EXPORT_SYMBOL_GPL
+0x41720077	jbd2__journal_restart	fs/jbd2/jbd2	EXPORT_SYMBOL
+0xb2a945e0	hostap_dump_rx_header	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0xa12ad27f	hostap_dump_tx_header	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x36286586	crypto_aes_set_key	crypto/aes_generic	EXPORT_SYMBOL_GPL
+0xd6e67185	bus_create_file	vmlinux	EXPORT_SYMBOL_GPL
+0xafc420e9	xenbus_register_backend	vmlinux	EXPORT_SYMBOL_GPL
+0x5086ac3a	alg_test	vmlinux	EXPORT_SYMBOL_GPL
+0xbef43296	console_conditional_schedule	vmlinux	EXPORT_SYMBOL
+0xa5e3e4c5	snd_unregister_device	sound/core/snd	EXPORT_SYMBOL
+0x356244a4	svc_destroy	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x2546ed76	__fscache_update_cookie	fs/fscache/fscache	EXPORT_SYMBOL
+0x6f745e8b	fat_detach	fs/fat/fat	EXPORT_SYMBOL_GPL
+0x0d5cbd7e	wusbhc_b_create	drivers/usb/wusbcore/wusbcore	EXPORT_SYMBOL_GPL
+0x4fa4dc9d	_rtl92c_phy_rf_serial_read	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0x64a18517	ei_poll	drivers/net/ethernet/8390/8390	EXPORT_SYMBOL
+0xf24ae0a5	vb2_mmap_pfn_range	drivers/media/video/videobuf2-memops	EXPORT_SYMBOL_GPL
+0x96309324	mISDN_FsmDelTimer	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0x55e7a9cf	ata_scsi_cmd_error_handler	drivers/ata/libata	EXPORT_SYMBOL
+0x1f6d795b	af_alg_accept	crypto/af_alg	EXPORT_SYMBOL_GPL
+0x5280061f	pci_target_state	vmlinux	EXPORT_SYMBOL
+0x01747b3a	blkdev_issue_discard	vmlinux	EXPORT_SYMBOL
+0x5f172a74	crypto_unregister_pcomp	vmlinux	EXPORT_SYMBOL_GPL
+0x07d7ce79	debugfs_create_symlink	vmlinux	EXPORT_SYMBOL_GPL
+0x698a899f	ring_buffer_peek	vmlinux	EXPORT_SYMBOL_GPL
+0x153ce9ea	xt_request_find_match	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0x8eb68a86	dccp_orphan_count	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xbe586ca2	wusbhc_b_destroy	drivers/usb/wusbcore/wusbcore	EXPORT_SYMBOL_GPL
+0x69e910ac	iscsi_put_task	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0xabdc60dd	il_get_passive_dwell_time	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x0acabdd1	mantis_ca_init	drivers/media/dvb/mantis/mantis_core	EXPORT_SYMBOL_GPL
+0xf0e7dca5	microtune_attach	drivers/media/common/tuners/mt20xx	EXPORT_SYMBOL_GPL
+0x2baa6586	capilib_new_ncci	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x18382f6a	ib_copy_path_rec_to_user	drivers/infiniband/core/ib_uverbs	EXPORT_SYMBOL
+0x1e78031d	ib_modify_ah	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x183ce726	drm_ioctl	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x6093c1c0	blkiocg_add_blkio_group	vmlinux	EXPORT_SYMBOL_GPL
+0x15976804	writeback_inodes_sb_nr_if_idle	vmlinux	EXPORT_SYMBOL
+0xa690783c	xattr_getsecurity	vmlinux	EXPORT_SYMBOL_GPL
+0x6228c21f	smp_call_function_single	vmlinux	EXPORT_SYMBOL
+0x029444f0	native_read_tsc	vmlinux	EXPORT_SYMBOL
+0xbe4265f4	snd_hda_ctl_add	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xc1bdf5b3	cx231xx_demod_reset	drivers/media/video/cx231xx/cx231xx	EXPORT_SYMBOL_GPL
+0xe937f348	dibusb2_0_power_ctrl	drivers/media/dvb/dvb-usb/dvb-usb-dibusb-common	EXPORT_SYMBOL
+0x7d34b2c5	b1_reset_ctr	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0x06860cbe	drm_mode_duplicate	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x7e7cde9c	af_alg_wait_for_completion	crypto/af_alg	EXPORT_SYMBOL_GPL
+0x50211ee3	tcp_free_md5sig_pool	vmlinux	EXPORT_SYMBOL
+0xc0580937	rb_erase	vmlinux	EXPORT_SYMBOL
+0x83dbaa45	can_proto_unregister	net/can/can	EXPORT_SYMBOL
+0x7c2f2afb	w1_calc_crc8	drivers/w1/wire	EXPORT_SYMBOL_GPL
+0xb4fdf9ae	ni_tio_acknowledge_and_confirm	drivers/staging/comedi/drivers/ni_tiocmd	EXPORT_SYMBOL_GPL
+0x0d3f21ed	ttm_bo_synccpu_write_release	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x93ad2c48	drm_mm_get_block_range_generic	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x2adec1e0	__nvram_check_checksum	drivers/char/nvram	EXPORT_SYMBOL
+0xee79c5cd	ata_sff_busy_sleep	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x058b582a	vt_get_leds	vmlinux	EXPORT_SYMBOL_GPL
+0xaafdc258	strcasecmp	vmlinux	EXPORT_SYMBOL
+0x19584215	save_mount_options	vmlinux	EXPORT_SYMBOL
+0x5edbf50d	unregister_kretprobe	vmlinux	EXPORT_SYMBOL_GPL
+0x9808e48c	clockevents_register_device	vmlinux	EXPORT_SYMBOL_GPL
+0xe3908a4e	snd_gus_use_inc	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0x05a010b9	snd_gus_use_dec	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0xbf3624fa	cache_check	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x4d034aee	nci_recv_frame	net/nfc/nci/nci	EXPORT_SYMBOL
+0xc0240dd4	nf_conntrack_set_hashsize	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xfdaf5940	viafb_find_i2c_adapter	drivers/video/via/viafb	EXPORT_SYMBOL_GPL
+0x82651f54	usbip_stop_eh	drivers/staging/usbip/usbip-core	EXPORT_SYMBOL_GPL
+0x5f5b7e4a	iscsi_destroy_session	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0xd4b18096	rt2x00mac_sta_remove	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0xc6d9c735	video_usercopy	drivers/media/video/videodev	EXPORT_SYMBOL
+0x93c8bea2	vb2_qbuf	drivers/media/video/videobuf2-core	EXPORT_SYMBOL_GPL
+0x5c64429d	ifla_policy	vmlinux	EXPORT_SYMBOL
+0xdb2e90d1	tty_unthrottle	vmlinux	EXPORT_SYMBOL
+0xd251d7b0	security_socket_getpeersec_dgram	vmlinux	EXPORT_SYMBOL
+0x6d525552	set_blocksize	vmlinux	EXPORT_SYMBOL
+0xccfd640d	block_page_mkwrite	vmlinux	EXPORT_SYMBOL
+0x5f248f72	set_timer_slack	vmlinux	EXPORT_SYMBOL_GPL
+0xbfe4784c	efi	vmlinux	EXPORT_SYMBOL
+0x205f004b	snd_sbmixer_resume	sound/isa/sb/snd-sb-common	EXPORT_SYMBOL
+0xcd9bf417	snd_gf1_write8	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0x1137d407	flexcop_i2c_request	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0xc31e2b0a	saa7146_pgtable_build_single	drivers/media/common/saa7146	EXPORT_SYMBOL_GPL
+0xedd7137b	md_done_sync	drivers/md/md-mod	EXPORT_SYMBOL
+0x2e6c4039	recv_Dchannel	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0x36f2a250	class_compat_remove_link	vmlinux	EXPORT_SYMBOL_GPL
+0xefd63ee1	uart_unregister_driver	vmlinux	EXPORT_SYMBOL
+0x0acf7679	dma_issue_pending_all	vmlinux	EXPORT_SYMBOL
+0xe744ecf0	cpci_hp_unregister_bus	vmlinux	EXPORT_SYMBOL_GPL
+0x87d45783	crypto_spawn_tfm	vmlinux	EXPORT_SYMBOL_GPL
+0x2173ca54	security_inode_notifysecctx	vmlinux	EXPORT_SYMBOL
+0x58d44565	generic_error_remove_page	vmlinux	EXPORT_SYMBOL
+0x10fed6a2	lib80211_crypt_info_init	net/wireless/lib80211	EXPORT_SYMBOL
+0x991aaead	nf_ct_nat_offset	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x8cd99be0	hashbin_insert	net/irda/irda	EXPORT_SYMBOL
+0x494ef160	usb_ftdi_elan_edset_output	drivers/usb/misc/ftdi-elan	EXPORT_SYMBOL_GPL
+0xf48dea09	osd_execute_request	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0xf5eebd0b	mdio_bus_type	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x9fd44c69	tps65010_set_led	drivers/mfd/tps65010	EXPORT_SYMBOL
+0xfdaa5e93	ipv6_chk_prefix	vmlinux	EXPORT_SYMBOL
+0x0c9c7a0b	ip6_dst_lookup_flow	vmlinux	EXPORT_SYMBOL_GPL
+0xef53515e	inet_csk_search_req	vmlinux	EXPORT_SYMBOL_GPL
+0x5a5ae24c	inet_unhash	vmlinux	EXPORT_SYMBOL_GPL
+0x90a1601f	dmi_check_system	vmlinux	EXPORT_SYMBOL
+0xf83e6727	blk_execute_rq	vmlinux	EXPORT_SYMBOL
+0xb278adce	rpc_call_sync	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x7469dcf3	jbd2_journal_unlock_updates	fs/jbd2/jbd2	EXPORT_SYMBOL
+0xecb4e4b7	ata_sff_dev_select	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xe07dcab1	ata_noop_qc_prep	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x74fa8399	ip6_xmit	vmlinux	EXPORT_SYMBOL
+0x3aa4c582	tcf_exts_dump	vmlinux	EXPORT_SYMBOL
+0xf23d0ddc	wl12xx_get_platform_data	vmlinux	EXPORT_SYMBOL
+0xc6890ef3	acpi_get_object_info	vmlinux	EXPORT_SYMBOL
+0x13307fde	vsscanf	vmlinux	EXPORT_SYMBOL
+0xeced08a5	seq_open_net	vmlinux	EXPORT_SYMBOL_GPL
+0x82d79b51	sysctl_vfs_cache_pressure	vmlinux	EXPORT_SYMBOL_GPL
+0x04486e88	rcu_batches_completed	vmlinux	EXPORT_SYMBOL_GPL
+0x7c1372e8	panic	vmlinux	EXPORT_SYMBOL
+0x830e547b	ioremap_prot	vmlinux	EXPORT_SYMBOL
+0xd7dd777b	reserve_perfctr_nmi	vmlinux	EXPORT_SYMBOL
+0x10dd37eb	o2nm_get_node_by_ip	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0xa7a4bee1	w1_remove_master_device	drivers/w1/wire	EXPORT_SYMBOL
+0xfa0dd3ea	led_trigger_remove	vmlinux	EXPORT_SYMBOL_GPL
+0x7c8f7dc9	pci_set_dma_seg_boundary	vmlinux	EXPORT_SYMBOL
+0xb6244511	sg_init_one	vmlinux	EXPORT_SYMBOL
+0x12da5bb2	__kmalloc	vmlinux	EXPORT_SYMBOL
+0x5705088a	__vmalloc	vmlinux	EXPORT_SYMBOL
+0xf1355070	__fscache_relinquish_cookie	fs/fscache/fscache	EXPORT_SYMBOL
+0x6bd891f7	dlm_posix_get	fs/dlm/dlm	EXPORT_SYMBOL_GPL
+0x3d400e9c	usbnet_get_ethernet_addr	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0x8ee509e6	enclosure_register	drivers/misc/enclosure	EXPORT_SYMBOL_GPL
+0x5d76d174	ata_sas_port_start	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xf5945bac	gnttab_free_grant_references	vmlinux	EXPORT_SYMBOL_GPL
+0xaf4b1540	acpi_get_irq_routing_table	vmlinux	EXPORT_SYMBOL
+0x2bc18852	kobject_init_and_add	vmlinux	EXPORT_SYMBOL_GPL
+0xfc1fadf3	rpc_wake_up_next	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xb21e8b66	journal_load	fs/jbd/jbd	EXPORT_SYMBOL
+0xfe03e71f	orinoco_get_stats	drivers/net/wireless/orinoco/orinoco	EXPORT_SYMBOL
+0x069a58f4	ata_sg_init	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x2f2889a0	gf128mul_init_64k_lle	crypto/gf128mul	EXPORT_SYMBOL
+0x3755f990	gf128mul_init_64k_bbe	crypto/gf128mul	EXPORT_SYMBOL
+0x9272dff0	__ip_select_ident	vmlinux	EXPORT_SYMBOL
+0x3fc5dbf8	skb_gro_receive	vmlinux	EXPORT_SYMBOL_GPL
+0xbb70e622	pci_find_next_ht_capability	vmlinux	EXPORT_SYMBOL_GPL
+0x07acf223	pci_find_ht_capability	vmlinux	EXPORT_SYMBOL_GPL
+0xca06b1d5	flock_lock_file_wait	vmlinux	EXPORT_SYMBOL
+0xc423fcc9	xt_find_match	net/netfilter/x_tables	EXPORT_SYMBOL
+0xe1205d23	ieee802154_nl_assoc_indic	net/ieee802154/ieee802154	EXPORT_SYMBOL
+0xa3f87d84	rtl_ps_enable_nic	drivers/net/wireless/rtlwifi/rtlwifi	EXPORT_SYMBOL
+0x171489a1	dvb_usb_device_exit	drivers/media/dvb/dvb-usb/dvb-usb	EXPORT_SYMBOL
+0x3c25b650	iw_handler_get_spy	vmlinux	EXPORT_SYMBOL
+0x7c5eb372	__skb_warn_lro_forwarding	vmlinux	EXPORT_SYMBOL
+0xf49b1d4e	regmap_init	vmlinux	EXPORT_SYMBOL_GPL
+0x8371aeb3	regmap_exit	vmlinux	EXPORT_SYMBOL_GPL
+0xf05ffa15	fb_var_to_videomode	vmlinux	EXPORT_SYMBOL
+0x6bcbaf4f	pci_stop_and_remove_behind_bridge	vmlinux	EXPORT_SYMBOL
+0x5152e605	memcmp	vmlinux	EXPORT_SYMBOL
+0x4e29c7cb	idr_for_each	vmlinux	EXPORT_SYMBOL
+0x7e069a13	blkiocg_update_io_merged_stats	vmlinux	EXPORT_SYMBOL_GPL
+0x6ce3f8f2	shash_ahash_digest	vmlinux	EXPORT_SYMBOL_GPL
+0x758753fc	locks_init_lock	vmlinux	EXPORT_SYMBOL
+0x47cd7c40	bio_add_pc_page	vmlinux	EXPORT_SYMBOL
+0x38603b94	snd_vx_create	sound/drivers/vx/snd-vx-lib	EXPORT_SYMBOL
+0x156e4e84	snd_card_set_id	sound/core/snd	EXPORT_SYMBOL
+0x7ad19ea1	nf_ct_helper_expectfn_find_by_name	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xd653d127	fc_slave_alloc	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0xecba87ff	drm_fb_helper_fill_fix	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0x9bb3587e	kvm_set_cr4	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x5770c3fe	kvm_task_switch	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x0101d5b1	ip_idents_reserve	vmlinux	EXPORT_SYMBOL
+0xec3e5268	netif_stacked_transfer_operstate	vmlinux	EXPORT_SYMBOL
+0x83ab9f38	serio_reconnect	vmlinux	EXPORT_SYMBOL
+0x22ad3930	key_set_timeout	vmlinux	EXPORT_SYMBOL_GPL
+0xa16980de	d_alloc_name	vmlinux	EXPORT_SYMBOL
+0x86d5255f	_raw_write_lock_irqsave	vmlinux	EXPORT_SYMBOL
+0x375cacd5	snd_hda_input_mux_info	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xfb158983	ar9003_hw_disable_phy_restart	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x66a693f2	ttm_pool_populate	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x6ef10c6d	drm_encoder_cleanup	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xa78722aa	napi_frags_finish	vmlinux	EXPORT_SYMBOL
+0xcf32056e	dma_async_memcpy_buf_to_buf	vmlinux	EXPORT_SYMBOL
+0x635ec980	apei_exec_post_unmap_gars	vmlinux	EXPORT_SYMBOL_GPL
+0xbf9e1eea	devm_ioport_unmap	vmlinux	EXPORT_SYMBOL
+0xe690b113	cont_write_begin	vmlinux	EXPORT_SYMBOL
+0xb20dac32	vfs_readdir	vmlinux	EXPORT_SYMBOL
+0xbdd295f0	trace_vprintk	vmlinux	EXPORT_SYMBOL_GPL
+0x3b4fc0fc	rds_page_remainder_alloc	net/rds/rds	EXPORT_SYMBOL_GPL
+0x3771b461	crc_ccitt	lib/crc-ccitt	EXPORT_SYMBOL
+0xc48b7ccf	ata_mode_string	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x881039d0	zlib_inflate	vmlinux	EXPORT_SYMBOL
+0xa43b1297	vscnprintf	vmlinux	EXPORT_SYMBOL
+0xed735763	blk_recount_segments	vmlinux	EXPORT_SYMBOL
+0x22d3ad06	simple_statfs	vmlinux	EXPORT_SYMBOL
+0x617643a2	param_set_long	vmlinux	EXPORT_SYMBOL
+0x6988d0ca	cpu_dr7	vmlinux	EXPORT_SYMBOL
+0x592299df	xfrm6_tunnel_deregister	net/ipv6/tunnel6	EXPORT_SYMBOL
+0x0fd3545f	xfrm4_tunnel_deregister	net/ipv4/tunnel4	EXPORT_SYMBOL
+0xc0195090	configfs_undepend_item	fs/configfs/configfs	EXPORT_SYMBOL
+0x1d73256a	usb_string	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x342c595f	enclosure_unregister	drivers/misc/enclosure	EXPORT_SYMBOL_GPL
+0xeabf360c	mantis_uart_init	drivers/media/dvb/mantis/mantis_core	EXPORT_SYMBOL_GPL
+0x2af6d009	mantis_uart_exit	drivers/media/dvb/mantis/mantis_core	EXPORT_SYMBOL_GPL
+0xad3e7f47	mantis_gpio_set_bits	drivers/media/dvb/mantis/mantis_core	EXPORT_SYMBOL_GPL
+0xf9e7832f	mISDN_FsmNew	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0x8149ea54	ata_timing_find_mode	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x172a96b8	km_policy_notify	vmlinux	EXPORT_SYMBOL
+0x84da255b	ip_mc_join_group	vmlinux	EXPORT_SYMBOL
+0x770effb2	usb_is_intel_switchable_xhci	vmlinux	EXPORT_SYMBOL_GPL
+0xdb760f52	__kfifo_free	vmlinux	EXPORT_SYMBOL
+0x30643fef	nf_ct_unexpect_related	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xc8147957	ieee80211_disable_rssi_reports	net/mac80211/mac80211	EXPORT_SYMBOL
+0xe672ab5c	p9_client_attach	net/9p/9pnet	EXPORT_SYMBOL
+0xa25a0518	b1dmactl_proc_fops	drivers/isdn/hardware/avm/b1dma	EXPORT_SYMBOL
+0x5dc80e19	ib_alloc_pd	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x62f98e92	inet_csk_reqsk_queue_hash_add	vmlinux	EXPORT_SYMBOL_GPL
+0x92468e92	agp_generic_free_gatt_table	vmlinux	EXPORT_SYMBOL
+0xf441ac43	ioread8_rep	vmlinux	EXPORT_SYMBOL
+0xe6e1c5fe	uuid_be_gen	vmlinux	EXPORT_SYMBOL_GPL
+0x2b5e9742	blkiocg_update_io_add_stats	vmlinux	EXPORT_SYMBOL_GPL
+0x5eb09c48	debugfs_remove	vmlinux	EXPORT_SYMBOL_GPL
+0xa133f855	lease_modify	vmlinux	EXPORT_SYMBOL
+0x47e2c9ae	drop_nlink	vmlinux	EXPORT_SYMBOL
+0xb330f229	kmap_atomic_to_page	vmlinux	EXPORT_SYMBOL
+0xd1747cbc	dibx000_init_i2c_master	drivers/media/dvb/frontends/dibx000_common	EXPORT_SYMBOL
+0x22d8e50b	dibx000_exit_i2c_master	drivers/media/dvb/frontends/dibx000_common	EXPORT_SYMBOL
+0x536402de	dib7000p_get_agc_values	drivers/media/dvb/frontends/dib7000p	EXPORT_SYMBOL
+0x3f1ba47e	mISDN_freedchannel	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0x03309a5e	xfrm_dst_ifdown	vmlinux	EXPORT_SYMBOL
+0xcc87130c	neigh_seq_start	vmlinux	EXPORT_SYMBOL
+0x67b2b4bf	pci_assign_unassigned_bridge_resources	vmlinux	EXPORT_SYMBOL_GPL
+0x3f0546a8	ioread32_rep	vmlinux	EXPORT_SYMBOL
+0x2ae3deaa	release_and_free_resource	sound/core/snd	EXPORT_SYMBOL
+0x3ea0aeb3	snd_pcm_hw_constraint_ratdens	sound/core/snd-pcm	EXPORT_SYMBOL
+0xa29d9ed2	rpc_put_task	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xcd1279b2	virtqueue_disable_cb	drivers/virtio/virtio_ring	EXPORT_SYMBOL_GPL
+0x0b4b60b4	iscsi_tcp_conn_teardown	drivers/scsi/libiscsi_tcp	EXPORT_SYMBOL_GPL
+0xf8ea40d3	_il_grab_nic_access	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL_GPL
+0x3924167e	ibnl_add_client	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x658d0ade	kvm_write_guest_virt_system	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x41f323d8	eth_header_cache_update	vmlinux	EXPORT_SYMBOL
+0x05ae262e	regulator_unregister_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0x9e4b3747	sg_copy_from_buffer	vmlinux	EXPORT_SYMBOL
+0xb6ed1e53	strncpy	vmlinux	EXPORT_SYMBOL
+0x73e20c1c	strlcpy	vmlinux	EXPORT_SYMBOL
+0x8abacc47	get_max_files	vmlinux	EXPORT_SYMBOL_GPL
+0x1a45cb6c	acpi_disabled	vmlinux	EXPORT_SYMBOL
+0xe9d9a6e1	ssb_pmu_spuravoid_pllupdate	drivers/ssb/ssb	EXPORT_SYMBOL_GPL
+0x221d542f	scsi_release_buffers	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x66916a4a	pcmcia_get_socket_by_nr	drivers/pcmcia/pcmcia_core	EXPORT_SYMBOL
+0x49c08fd6	a8293_attach	drivers/media/dvb/frontends/a8293	EXPORT_SYMBOL
+0x6f077fcf	ib_get_mad_data_offset	drivers/infiniband/core/ib_mad	EXPORT_SYMBOL
+0x6759a4fa	__tracepoint_kvm_page_fault	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x41edc7bb	tcf_em_tree_destroy	vmlinux	EXPORT_SYMBOL
+0x2762e816	fddi_type_trans	vmlinux	EXPORT_SYMBOL
+0xf195c682	fb_invert_cmaps	vmlinux	EXPORT_SYMBOL
+0xaa977fbd	delete_list_tpd	vmlinux	EXPORT_SYMBOL
+0xb1b89f58	__tracepoint_kmem_cache_free	vmlinux	EXPORT_SYMBOL
+0x9027bc7a	snd_gf1_new_mixer	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0xdbe0123e	p9_client_cb	net/9p/9pnet	EXPORT_SYMBOL
+0x7e97a848	uwb_est_find_size	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0x2e93b4cd	_rtl92c_phy_txpwr_idx_to_dbm	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0x08b00ab8	ib_create_srq	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x13574bbf	nf_net_netfilter_sysctl_path	vmlinux	EXPORT_SYMBOL_GPL
+0xb751dd34	driver_create_file	vmlinux	EXPORT_SYMBOL_GPL
+0xf568838c	kern_mount_data	vmlinux	EXPORT_SYMBOL_GPL
+0x266e22c2	__init_kthread_worker	vmlinux	EXPORT_SYMBOL_GPL
+0xedb83c02	snd_emu8000_poke	sound/isa/sb/snd-sbawe	EXPORT_SYMBOL
+0x083eb21c	rfkill_unregister	net/rfkill/rfkill	EXPORT_SYMBOL
+0x5b2072b6	sas_drain_work	drivers/scsi/libsas/libsas	EXPORT_SYMBOL_GPL
+0xacf05e1f	fc_frame_alloc_fill	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x7fad3a21	media_entity_graph_walk_next	drivers/media/media	EXPORT_SYMBOL_GPL
+0xe2652efa	bcma_chipco_pll_maskset	drivers/bcma/bcma	EXPORT_SYMBOL_GPL
+0x098b71c6	fb_dealloc_cmap	vmlinux	EXPORT_SYMBOL
+0x331a716e	blk_requeue_request	vmlinux	EXPORT_SYMBOL
+0x2003ee33	insert_inode_locked4	vmlinux	EXPORT_SYMBOL
+0x41482d8b	strndup_user	vmlinux	EXPORT_SYMBOL
+0xddd58dc0	ring_buffer_reset	vmlinux	EXPORT_SYMBOL_GPL
+0xb54b8971	set_pages_wb	vmlinux	EXPORT_SYMBOL
+0x632d0e31	snd_cs8427_iec958_pcm	sound/i2c/snd-cs8427	EXPORT_SYMBOL
+0x7827d7a3	rds_conn_create_outgoing	net/rds/rds	EXPORT_SYMBOL_GPL
+0x0067f181	pccard_nonstatic_ops	drivers/pcmcia/pcmcia_rsrc	EXPORT_SYMBOL
+0x453bfe31	mptscsih_remove	drivers/message/fusion/mptscsih	EXPORT_SYMBOL
+0x8664f62e	cpufreq_update_policy	vmlinux	EXPORT_SYMBOL
+0x7b52d842	agp_bind_memory	vmlinux	EXPORT_SYMBOL
+0x3f41e966	crypto_init_spawn	vmlinux	EXPORT_SYMBOL_GPL
+0x80894ec6	mount_nodev	vmlinux	EXPORT_SYMBOL
+0x50f041f4	pagevec_lookup	vmlinux	EXPORT_SYMBOL
+0x47b6a10f	ftrace_print_symbols_seq	vmlinux	EXPORT_SYMBOL
+0x0bca6ed6	snd_hda_add_codec_preset	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xb1fa0b48	scsi_scan_host	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x899809b1	scsi_setup_fs_cmnd	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xc35cee9a	cxgbi_conn_tx_open	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0xc6c10040	il_init_geos	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x970315ea	xfrm_find_acq	vmlinux	EXPORT_SYMBOL
+0x50ce3b82	eth_mac_addr	vmlinux	EXPORT_SYMBOL
+0x732dfdaa	padata_free	vmlinux	EXPORT_SYMBOL
+0x2eef122e	unregister_hw_breakpoint	vmlinux	EXPORT_SYMBOL_GPL
+0x963405f4	snd_hda_mixer_bind_switch_get	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xb6da67df	snd_hda_mixer_bind_switch_put	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xe865d73a	cfg80211_wext_siwfrag	net/wireless/cfg80211	EXPORT_SYMBOL_GPL
+0x01cad86d	cfg80211_wext_giwfrag	net/wireless/cfg80211	EXPORT_SYMBOL_GPL
+0xffc08798	svc_xprt_received	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xdb562135	dm_btree_empty	drivers/md/persistent-data/dm-persistent-data	EXPORT_SYMBOL_GPL
+0x0d814a72	ib_destroy_cq	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x197cdbac	ata_slave_link_init	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x7377f52c	tcp_sendpage	vmlinux	EXPORT_SYMBOL
+0xb98a0185	rtc_tm_to_time	vmlinux	EXPORT_SYMBOL
+0xe5883bd9	class_compat_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x47b3f862	radix_tree_lookup_slot	vmlinux	EXPORT_SYMBOL
+0x2f064b55	allocate_resource	vmlinux	EXPORT_SYMBOL
+0xcb50a624	ceph_parse_ips	net/ceph/libceph	EXPORT_SYMBOL
+0x2126ab05	uio_event_notify	drivers/uio/uio	EXPORT_SYMBOL_GPL
+0x16bd7de3	alloc_mdio_bitbang	drivers/net/phy/mdio-bitbang	EXPORT_SYMBOL
+0xf262bc60	pm_schedule_suspend	vmlinux	EXPORT_SYMBOL_GPL
+0xcdb82b08	pci_ats_queue_depth	vmlinux	EXPORT_SYMBOL_GPL
+0xc08647ff	ring_buffer_bytes_cpu	vmlinux	EXPORT_SYMBOL_GPL
+0x02d81845	audit_log_task_context	vmlinux	EXPORT_SYMBOL
+0xed3cd92e	dccp_init_sock	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x1213fb61	w1_reset_select_slave	drivers/w1/wire	EXPORT_SYMBOL_GPL
+0x1bdc96e2	lbtf_remove_card	drivers/net/wireless/libertas_tf/libertas_tf	EXPORT_SYMBOL_GPL
+0x340d2112	hostap_free_data	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x62ba4e19	ubi_get_volume_info	drivers/mtd/ubi/ubi	EXPORT_SYMBOL_GPL
+0x449c33b9	mtd_device_parse_register	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0x8b1f59f0	mt2060_attach	drivers/media/common/tuners/mt2060	EXPORT_SYMBOL
+0x47e88448	spi_write_then_read	vmlinux	EXPORT_SYMBOL_GPL
+0x4cbf6579	splice_from_pipe_feed	vmlinux	EXPORT_SYMBOL
+0xf9a054b5	__round_jiffies	vmlinux	EXPORT_SYMBOL_GPL
+0x2e6d0443	dvb_usb_get_hexline	drivers/media/dvb/dvb-usb/dvb-usb	EXPORT_SYMBOL
+0x30fa6e4f	bitmap_load	drivers/md/md-mod	EXPORT_SYMBOL_GPL
+0x03c06156	bitmap_fold	vmlinux	EXPORT_SYMBOL
+0x428ec9c2	security_sb_clone_mnt_opts	vmlinux	EXPORT_SYMBOL
+0x74bb2200	vfs_rmdir	vmlinux	EXPORT_SYMBOL
+0x34bddb13	generic_shutdown_super	vmlinux	EXPORT_SYMBOL
+0x85162885	css_lookup	vmlinux	EXPORT_SYMBOL_GPL
+0x37e74642	get_jiffies_64	vmlinux	EXPORT_SYMBOL
+0x1de8d243	cfg80211_rx_spurious_frame	net/wireless/cfg80211	EXPORT_SYMBOL
+0x02a6ce5a	crc16_table	lib/crc16	EXPORT_SYMBOL
+0x4eced940	ocfs2_stack_glue_unregister	fs/ocfs2/ocfs2_stackglue	EXPORT_SYMBOL_GPL
+0xf7acb480	sas_disable_tlr	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL_GPL
+0xc09b9734	sas_port_delete_phy	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL
+0x108231ad	scsi_track_queue_full	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xf2357254	acpi_evaluate_integer	vmlinux	EXPORT_SYMBOL
+0xa84f4787	init_buffer	vmlinux	EXPORT_SYMBOL
+0x8c548b34	o2hb_unregister_callback	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0x8408476b	jbd2__journal_start	fs/jbd2/jbd2	EXPORT_SYMBOL
+0x05c56e22	ieee80211_wx_set_wap_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0xb9439d13	ieee80211_wx_get_wap_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x1e32ac86	ieee80211_wx_set_rts_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0xa2b45fb7	ieee80211_wx_get_rts_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0xd97adbdf	sas_enable_tlr	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL_GPL
+0xc58d886c	scsi_nl_add_driver	drivers/scsi/scsi_mod	EXPORT_SYMBOL_GPL
+0x7e79eb35	qlogicfas408_abort	drivers/scsi/qlogicfas408	EXPORT_SYMBOL
+0x3449a5c7	ubi_close_volume	drivers/mtd/ubi/ubi	EXPORT_SYMBOL_GPL
+0x81dba424	videobuf_read_one	drivers/media/video/videobuf-core	EXPORT_SYMBOL_GPL
+0x73ac492c	__sock_recv_ts_and_drops	vmlinux	EXPORT_SYMBOL_GPL
+0xbb7d1550	pm_qos_request_active	vmlinux	EXPORT_SYMBOL_GPL
+0xbf7fd2f5	schedule_timeout_killable	vmlinux	EXPORT_SYMBOL
+0x8cb82639	snd_pcm_lib_readv	sound/core/snd-pcm	EXPORT_SYMBOL
+0x88fa7ceb	rpcauth_create	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xbd13d975	fcoe_validate_vport_create	drivers/scsi/fcoe/libfcoe	EXPORT_SYMBOL_GPL
+0xa9b7afd8	wmi_set_block	drivers/platform/x86/wmi	EXPORT_SYMBOL_GPL
+0x760bd0fe	dev2t3cdev	drivers/net/ethernet/chelsio/cxgb3/cxgb3	EXPORT_SYMBOL
+0xba11bacb	v4l2_event_subscribe	drivers/media/video/videodev	EXPORT_SYMBOL_GPL
+0xcd0fc417	drm_ht_just_insert_please	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x15334aa4	sock_no_getname	vmlinux	EXPORT_SYMBOL
+0xb265b4bf	vfs_link	vmlinux	EXPORT_SYMBOL
+0x85050965	__irq_alloc_descs	vmlinux	EXPORT_SYMBOL_GPL
+0x0ebfb51e	call_usermodehelper_setup	vmlinux	EXPORT_SYMBOL
+0xa3c84a1e	snd_hda_bind_vol	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xa3ab9ab4	journal_flush	fs/jbd/jbd	EXPORT_SYMBOL
+0x5c997f29	phy_driver_unregister	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x998e45c0	ttm_ref_object_base_unref	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0xb0ca1fe7	ll_msgs	drivers/edac/edac_mce_amd	EXPORT_SYMBOL_GPL
+0xa8ae2a6c	netlink_rcv_skb	vmlinux	EXPORT_SYMBOL
+0xf82abc1d	isa_dma_bridge_buggy	vmlinux	EXPORT_SYMBOL
+0x63a30c1b	crypto_alloc_pcomp	vmlinux	EXPORT_SYMBOL_GPL
+0x2447533c	ktime_get_real	vmlinux	EXPORT_SYMBOL_GPL
+0x6fc2d0a4	panic_notifier_list	vmlinux	EXPORT_SYMBOL
+0xac9ce195	kvm_async_pf_task_wait	vmlinux	EXPORT_SYMBOL_GPL
+0x77f54721	snd_hda_get_bool_hint	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xf7c1e180	snd_hda_codec_prepare	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x264fc270	ceph_check_fsid	net/ceph/libceph	EXPORT_SYMBOL
+0x882a4852	__fcoe_get_lesb	drivers/scsi/fcoe/libfcoe	EXPORT_SYMBOL_GPL
+0x554be5ca	ath9k_hw_wait	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x6e3715e2	ath_regd_init	drivers/net/wireless/ath/ath	EXPORT_SYMBOL
+0x06d46678	unregister_mtd_chip_driver	drivers/mtd/chips/chipreg	EXPORT_SYMBOL
+0x5a477735	mxl111sf_demod_attach	drivers/media/dvb/dvb-usb/mxl111sf-demod	EXPORT_SYMBOL_GPL
+0x2974ead1	DIVA_DIDD_Read	drivers/isdn/hardware/eicon/divadidd	EXPORT_SYMBOL
+0x258cd57e	__xfrm_state_delete	vmlinux	EXPORT_SYMBOL
+0xd768e985	regulator_has_full_constraints	vmlinux	EXPORT_SYMBOL_GPL
+0xde8c4b55	d_delete	vmlinux	EXPORT_SYMBOL
+0x8b1799a4	find_get_pages_tag	vmlinux	EXPORT_SYMBOL
+0x8834396c	mod_timer	vmlinux	EXPORT_SYMBOL
+0x8ab177c0	ulist_init	fs/btrfs/btrfs	EXPORT_SYMBOL
+0xb9d1ac46	wm97xx_unregister_mach_ops	drivers/input/touchscreen/wm97xx-ts	EXPORT_SYMBOL_GPL
+0xa1665d68	ib_open_qp	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xc6c9207a	fw_iso_context_stop	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0xcf380a3a	gfn_to_pfn_async	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x99052a84	acpi_os_write_port	vmlinux	EXPORT_SYMBOL
+0xb6588e7a	idr_remove	vmlinux	EXPORT_SYMBOL
+0xfb1be686	ida_remove	vmlinux	EXPORT_SYMBOL
+0x1d315f13	mnt_set_expiry	vmlinux	EXPORT_SYMBOL
+0xbccd287d	use_mm	vmlinux	EXPORT_SYMBOL_GPL
+0x5143c678	param_get_invbool	vmlinux	EXPORT_SYMBOL
+0xead756ef	flush_delayed_work_sync	vmlinux	EXPORT_SYMBOL
+0x745149a6	save_stack_trace_tsk	vmlinux	EXPORT_SYMBOL_GPL
+0x5ead59a0	snd_ac97_set_rate	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0xbf9d1b96	nfsd_debug	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xe3d5158b	ct_sip_parse_numerical_param	net/netfilter/nf_conntrack_sip	EXPORT_SYMBOL_GPL
+0x7f4b778a	il_send_stats_request	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x737912b3	amd_unregister_ecc_decoder	drivers/edac/edac_mce_amd	EXPORT_SYMBOL_GPL
+0x5a8580d0	genl_notify	vmlinux	EXPORT_SYMBOL
+0xebe03d29	devres_destroy	vmlinux	EXPORT_SYMBOL_GPL
+0xd90ade2b	tty_hangup	vmlinux	EXPORT_SYMBOL
+0x4f783f30	acpi_read	vmlinux	EXPORT_SYMBOL
+0xc3c7aab5	pci_disable_device	vmlinux	EXPORT_SYMBOL
+0xf4d36db8	add_page_wait_queue	vmlinux	EXPORT_SYMBOL_GPL
+0xe58a3360	p9_error_init	net/9p/9pnet	EXPORT_SYMBOL
+0x3ac6113a	fscache_obtained_object	fs/fscache/fscache	EXPORT_SYMBOL
+0x06099f70	rt2x00mac_add_interface	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0xd436997e	mdiobus_read	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x6c3229bb	__twofish_setkey	crypto/twofish_common	EXPORT_SYMBOL_GPL
+0x21398fe9	cryptd_free_aead	crypto/cryptd	EXPORT_SYMBOL_GPL
+0xcffbc01c	pm_runtime_forbid	vmlinux	EXPORT_SYMBOL_GPL
+0x30e74134	tty_termios_copy_hw	vmlinux	EXPORT_SYMBOL
+0x4455e1b3	regulator_disable_deferred	vmlinux	EXPORT_SYMBOL_GPL
+0x5e1a0edb	dma_release_channel	vmlinux	EXPORT_SYMBOL_GPL
+0xac33396b	seq_put_decimal_ll	vmlinux	EXPORT_SYMBOL
+0x2f8ebbe0	rpc_ntop	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xd1634396	rpc_pton	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x29e4ee4c	w1_reset_resume_command	drivers/w1/wire	EXPORT_SYMBOL_GPL
+0x77802ba4	virtqueue_poll	drivers/virtio/virtio_ring	EXPORT_SYMBOL_GPL
+0xe143da57	alloc_hdlcdev	drivers/net/wan/hdlc	EXPORT_SYMBOL
+0x6fa647b3	mlx4_wol_read	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xc0e69f82	mpt_device_driver_deregister	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0x29307595	b1dma_release_appl	drivers/isdn/hardware/avm/b1dma	EXPORT_SYMBOL
+0x47f710fd	ib_query_port	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xcfd9a2c0	des_ekey	crypto/des_generic	EXPORT_SYMBOL_GPL
+0x70a6ffb6	PageHuge	vmlinux	EXPORT_SYMBOL_GPL
+0x06f1b1cb	snd_emu8000_peek	sound/isa/sb/snd-sbawe	EXPORT_SYMBOL
+0x22bce513	mdio_mii_ioctl	drivers/net/mdio	EXPORT_SYMBOL
+0x2f848732	com20020_check	drivers/net/arcnet/com20020	EXPORT_SYMBOL
+0x8887a951	ir_raw_event_store	drivers/media/rc/rc-core	EXPORT_SYMBOL_GPL
+0x03bb26e4	drm_irq_install	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x8cb0deb0	con_is_bound	vmlinux	EXPORT_SYMBOL
+0xdce57037	apei_estatus_print	vmlinux	EXPORT_SYMBOL_GPL
+0xa00aca2a	dql_completed	vmlinux	EXPORT_SYMBOL
+0xb6f503b3	key_link	vmlinux	EXPORT_SYMBOL
+0x1f49a824	read_cache_page	vmlinux	EXPORT_SYMBOL
+0xd0595a3d	nfs4_find_get_deviceid	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0x4f0079e9	rtl92c_phy_rf_config	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0x43e4defc	mdio45_nway_restart	drivers/net/mdio	EXPORT_SYMBOL
+0x99c03fd7	eip_interrupt	drivers/net/ethernet/8390/8390p	EXPORT_SYMBOL
+0xfc0045c2	onenand_default_bbt	drivers/mtd/onenand/onenand	EXPORT_SYMBOL
+0x0933426d	dev_change_flags	vmlinux	EXPORT_SYMBOL
+0x6613e461	dquot_drop	vmlinux	EXPORT_SYMBOL
+0x14d6408e	snd_hda_codec_amp_update	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x6c626faf	amdtp_out_stream_pcm_abort	sound/firewire/snd-firewire-lib	EXPORT_SYMBOL
+0x3ee3e88d	snd_opl3_new	sound/drivers/opl3/snd-opl3-lib	EXPORT_SYMBOL
+0xde2fa1c7	lapb_unregister	net/lapb/lapb	EXPORT_SYMBOL
+0x58904f84	iscsi_boot_create_host_kset	drivers/scsi/iscsi_boot_sysfs	EXPORT_SYMBOL_GPL
+0x1d147729	rtl92c_phy_set_io	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0x1969b791	il_set_rxon_ht	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xb353bed9	phy_scan_fixups	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x92553b87	nand_scan	drivers/mtd/nand/nand	EXPORT_SYMBOL
+0xc3401729	mISDN_register_clock	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0x6d25c4de	xfrm_state_walk	vmlinux	EXPORT_SYMBOL
+0xe13cd8a7	dmi_name_in_vendors	vmlinux	EXPORT_SYMBOL
+0xa8d68abd	acpi_warning	vmlinux	EXPORT_SYMBOL
+0x3f0897ff	nla_put_nohdr	vmlinux	EXPORT_SYMBOL
+0x2aa617cf	mce_unregister_decode_chain	vmlinux	EXPORT_SYMBOL_GPL
+0xf19294db	bt_sock_unregister	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x80d25898	scsi_set_medium_removal	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xffdb8827	sas_free_task	drivers/scsi/libsas/libsas	EXPORT_SYMBOL_GPL
+0xaa2a8638	pcmcia_socket_list_rwsem	drivers/pcmcia/pcmcia_core	EXPORT_SYMBOL
+0x6a7fdde5	ath9k_hw_setuptxqueue	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x22c978cb	tpm_show_durations	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x27bb6cd5	napi_gro_flush	vmlinux	EXPORT_SYMBOL
+0x58aed1a4	xen_swiotlb_sync_sg_for_cpu	vmlinux	EXPORT_SYMBOL_GPL
+0x8b989cf9	acpi_bus_can_wakeup	vmlinux	EXPORT_SYMBOL
+0xe4b5d111	blkiocg_update_dispatch_stats	vmlinux	EXPORT_SYMBOL_GPL
+0xc46f7050	keyring_clear	vmlinux	EXPORT_SYMBOL
+0x5186518f	profile_pc	vmlinux	EXPORT_SYMBOL
+0x969241b7	snd_timer_resolution	sound/core/snd-timer	EXPORT_SYMBOL
+0xe05c1a55	gss_service_to_auth_domain_name	net/sunrpc/auth_gss/auth_rpcgss	EXPORT_SYMBOL_GPL
+0x2750d57d	jbd2_journal_wipe	fs/jbd2/jbd2	EXPORT_SYMBOL
+0x52f1b23b	memstick_debug_get_tpc_name	drivers/memstick/host/r592	EXPORT_SYMBOL
+0x7e1183c9	async_schedule	vmlinux	EXPORT_SYMBOL_GPL
+0x1e0c2be4	ioremap_wc	vmlinux	EXPORT_SYMBOL
+0xa5a974bd	snd_hda_multi_out_analog_prepare	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x7d8d6a78	snd_gf1_write16	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0xf66541ea	usb_block_urb	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x6f18caba	mlx4_fmr_free	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x34257f35	sch56xx_watchdog_unregister	drivers/hwmon/sch56xx-common	EXPORT_SYMBOL
+0x8f28ae50	__ps2_command	vmlinux	EXPORT_SYMBOL
+0xbd0234b4	fb_set_var	vmlinux	EXPORT_SYMBOL
+0x67c82233	__nla_put	vmlinux	EXPORT_SYMBOL
+0x4c2ae700	strnstr	vmlinux	EXPORT_SYMBOL
+0x0fa06164	__css_put	vmlinux	EXPORT_SYMBOL_GPL
+0x0237b57a	arch_unregister_cpu	vmlinux	EXPORT_SYMBOL
+0xa2804aab	snd_es1688_pcm	sound/isa/es1688/snd-es1688-lib	EXPORT_SYMBOL
+0xcba6ed1e	svc_sock_names	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xd87b4225	inet_diag_register	net/ipv4/inet_diag	EXPORT_SYMBOL_GPL
+0x761a0d08	sas_port_mark_backlink	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL
+0x45173ae2	rtl_init_rfkill	drivers/net/wireless/rtlwifi/rtlwifi	EXPORT_SYMBOL
+0x289566bb	ath9k_hw_set_sta_beacon_timers	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x9da89ebc	sdhci_pltfm_unregister	drivers/mmc/host/sdhci-pltfm	EXPORT_SYMBOL_GPL
+0xf6bff1a4	dm_rh_dirty_log	drivers/md/dm-region-hash	EXPORT_SYMBOL_GPL
+0x2755dd8e	tpm_show_timeouts	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0xa3cd00cf	ata_pci_sff_prepare_host	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x7a849af8	dma_buf_kmap_atomic	vmlinux	EXPORT_SYMBOL_GPL
+0x1f8ec1b3	acpi_get_pci_rootbridge_handle	vmlinux	EXPORT_SYMBOL_GPL
+0xdf951754	blk_trace_startstop	vmlinux	EXPORT_SYMBOL_GPL
+0x21fb443e	_raw_spin_lock_irqsave	vmlinux	EXPORT_SYMBOL
+0x0d05565c	snd_pcm_hw_rule_add	sound/core/snd-pcm	EXPORT_SYMBOL
+0x3f1e8ece	tcp_done	vmlinux	EXPORT_SYMBOL_GPL
+0x2fb6de5d	add_device_randomness	vmlinux	EXPORT_SYMBOL
+0x964add15	xenbus_scanf	vmlinux	EXPORT_SYMBOL_GPL
+0xda8af7ad	fb_find_nearest_mode	vmlinux	EXPORT_SYMBOL
+0xde417b81	async_schedule_domain	vmlinux	EXPORT_SYMBOL_GPL
+0x9ba870d2	snd_card_file_remove	sound/core/snd	EXPORT_SYMBOL
+0x3b91f3af	snd_free_pages	sound/core/snd-page-alloc	EXPORT_SYMBOL
+0x3101936e	rds_message_add_extension	net/rds/rds	EXPORT_SYMBOL_GPL
+0xc2dab779	rds_info_copy	net/rds/rds	EXPORT_SYMBOL_GPL
+0xa6428ba1	o2nm_get_node_by_num	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0x4659c558	usb_init_urb	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x11e8c581	iscsi_create_iface	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0x5cd45a21	__iscsi_complete_pdu	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0x9c70f32a	cxgbi_sock_free_cpl_skbs	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0x16959358	get_phy_id	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x7ade1071	dm_tm_destroy	drivers/md/persistent-data/dm-persistent-data	EXPORT_SYMBOL_GPL
+0xf9765833	dmi_match	vmlinux	EXPORT_SYMBOL_GPL
+0xa008e4d8	blk_free_tags	vmlinux	EXPORT_SYMBOL
+0x8d4d25b3	security_inode_getsecctx	vmlinux	EXPORT_SYMBOL
+0xc0b2494c	vfsmount_lock_lock_init	vmlinux	EXPORT_SYMBOL
+0xa239823f	padata_remove_cpu	vmlinux	EXPORT_SYMBOL
+0xce46e140	ktime_get_ts	vmlinux	EXPORT_SYMBOL_GPL
+0x8f9c199c	__get_user_2	vmlinux	EXPORT_SYMBOL
+0x5a4896a8	__put_user_2	vmlinux	EXPORT_SYMBOL
+0xf5276dc5	snd_ac97_read	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0xf3797152	snd_interval_ratnum	sound/core/snd-pcm	EXPORT_SYMBOL
+0x5ca8f6bd	usb_hcd_unmap_urb_setup_for_dma	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x49df2ebb	scsi_device_get	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x701ab5d5	scsi_device_put	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x2a1886d2	tpm_bios_log_setup	drivers/char/tpm/tpm_bios	EXPORT_SYMBOL_GPL
+0xcccfb2fa	sata_deb_timing_hotplug	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xe25050be	__pm_runtime_set_status	vmlinux	EXPORT_SYMBOL_GPL
+0x51ce5ad3	files_lglock_local_lock_cpu	vmlinux	EXPORT_SYMBOL
+0xa8a93398	map_vm_area	vmlinux	EXPORT_SYMBOL_GPL
+0x0084e86d	unregister_shrinker	vmlinux	EXPORT_SYMBOL
+0xe42e6cfd	snd_emu8000_update_reverb_mode	sound/isa/sb/snd-sbawe	EXPORT_SYMBOL
+0x797a69e6	wimax_msg_send	net/wimax/wimax	EXPORT_SYMBOL_GPL
+0x6eed1d37	rpc_rmdir	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xdc173c4a	il_eeprom_free	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x7fd7b40b	mmc_set_blocklen	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x83675dc2	pcf50633_free_irq	drivers/mfd/pcf50633	EXPORT_SYMBOL_GPL
+0x29f7eaf2	tea5761_autodetection	drivers/media/common/tuners/tea5761	EXPORT_SYMBOL_GPL
+0x4645c061	dm_register_path_selector	drivers/md/dm-multipath	EXPORT_SYMBOL_GPL
+0x3eba1a17	rrrr_msgs	drivers/edac/edac_mce_amd	EXPORT_SYMBOL_GPL
+0xe8219f70	tpm_show_pcrs	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x8ac2a5c8	ipv6_dev_get_saddr	vmlinux	EXPORT_SYMBOL
+0x2593bae2	xfrm_policy_flush	vmlinux	EXPORT_SYMBOL
+0xa8a6f639	__check_region	vmlinux	EXPORT_SYMBOL
+0x16a1477d	rds_atomic_send_complete	net/rds/rds	EXPORT_SYMBOL_GPL
+0xf3eed683	pn_sock_hash	net/phonet/phonet	EXPORT_SYMBOL
+0x92a8ca9e	nf_nat_protocol_register	net/ipv4/netfilter/nf_nat	EXPORT_SYMBOL
+0x782db178	hci_conn_hold_device	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0xe1943d8c	cxgbi_device_unregister	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0xdecabad0	dib0090_gain_control	drivers/media/dvb/frontends/dib0090	EXPORT_SYMBOL
+0xf6388c56	sysctl_ip_default_ttl	vmlinux	EXPORT_SYMBOL
+0x9f25e201	napi_gro_frags	vmlinux	EXPORT_SYMBOL
+0x6f91fa42	pci_load_saved_state	vmlinux	EXPORT_SYMBOL_GPL
+0x217dda13	flex_array_get	vmlinux	EXPORT_SYMBOL
+0xd178e8cb	key_task_permission	vmlinux	EXPORT_SYMBOL
+0x65f5e438	snd_i2c_bus_create	sound/i2c/snd-i2c	EXPORT_SYMBOL
+0xade88e76	snd_malloc_pages	sound/core/snd-page-alloc	EXPORT_SYMBOL
+0xf6d60e61	ieee80211_rate_control_register	net/mac80211/mac80211	EXPORT_SYMBOL
+0xd5873ea2	nf_nat_protocol_unregister	net/ipv4/netfilter/nf_nat	EXPORT_SYMBOL
+0xb7a7cab8	inet_diag_unregister	net/ipv4/inet_diag	EXPORT_SYMBOL_GPL
+0xa2825910	iscsi_offload_mesg	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0xc2f68bcf	sas_domain_attach_transport	drivers/scsi/libsas/libsas	EXPORT_SYMBOL_GPL
+0x48f209fc	detach_capi_ctr	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0xb9ccaa02	sock_sendmsg	vmlinux	EXPORT_SYMBOL
+0x42595e58	vgacon_text_force	vmlinux	EXPORT_SYMBOL
+0x30e2db78	disk_get_part	vmlinux	EXPORT_SYMBOL_GPL
+0xae445b07	snd_hwdep_new	sound/core/snd-hwdep	EXPORT_SYMBOL
+0xfed4d591	cfg80211_find_vendor_ie	net/wireless/cfg80211	EXPORT_SYMBOL
+0x4beacf29	l2tp_recv_common	net/l2tp/l2tp_core	EXPORT_SYMBOL
+0x1ba0efb8	rt2x00usb_vendor_request_buff	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0x20c0a82c	kvm_read_guest_cached	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x253e852a	netlink_kernel_release	vmlinux	EXPORT_SYMBOL
+0xe0840c7e	destroy_EII_client	vmlinux	EXPORT_SYMBOL
+0xc51ddf92	__sock_create	vmlinux	EXPORT_SYMBOL
+0xeb107853	rtc_set_mmss	vmlinux	EXPORT_SYMBOL_GPL
+0x7b68d75e	pci_bus_resource_n	vmlinux	EXPORT_SYMBOL_GPL
+0x2addc0be	down_interruptible	vmlinux	EXPORT_SYMBOL
+0x0fec3d37	snd_hda_bus_reboot_notify	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x46074c17	sdev_evt_alloc	drivers/scsi/scsi_mod	EXPORT_SYMBOL_GPL
+0xf796f2b0	mmc_request_done	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0xa28a2ace	ipmi_set_gets_events	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0xb95e5698	netif_carrier_off	vmlinux	EXPORT_SYMBOL
+0xa14f3d8c	ewma_add	vmlinux	EXPORT_SYMBOL
+0xe86d1fea	lease_get_mtime	vmlinux	EXPORT_SYMBOL
+0xac2263af	sb_set_blocksize	vmlinux	EXPORT_SYMBOL
+0xd986dad1	kernel_fpu_begin	vmlinux	EXPORT_SYMBOL
+0x4a931623	snd_ctl_boolean_stereo_info	sound/core/snd	EXPORT_SYMBOL
+0x3a72959f	matroxfb_DAC_in	drivers/video/matrox/matroxfb_misc	EXPORT_SYMBOL
+0xcdc90c64	matroxfb_var2my	drivers/video/matrox/matroxfb_misc	EXPORT_SYMBOL
+0xbe253a40	parport_ieee1284_epp_read_addr	drivers/parport/parport	EXPORT_SYMBOL
+0x859fdced	arc_raw_proto	drivers/net/arcnet/arcnet	EXPORT_SYMBOL
+0x4c4d56e2	sdio_writew	drivers/mmc/core/mmc_core	EXPORT_SYMBOL_GPL
+0xe7efecc5	edac_pci_add_device	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x3744cf36	vmalloc_to_pfn	vmlinux	EXPORT_SYMBOL
+0x0acfb8dd	get_task_mm	vmlinux	EXPORT_SYMBOL_GPL
+0x4a3ca876	__ieee80211_get_assoc_led_name	net/mac80211/mac80211	EXPORT_SYMBOL
+0x2cb93125	ieee80211_ctstoself_duration	net/mac80211/mac80211	EXPORT_SYMBOL
+0x278d849b	fuse_request_send	fs/fuse/fuse	EXPORT_SYMBOL_GPL
+0xd67706ac	rtl_pci_suspend	drivers/net/wireless/rtlwifi/rtlwifi	EXPORT_SYMBOL
+0x30e02706	inet_csk_prepare_forced_close	vmlinux	EXPORT_SYMBOL
+0x6feb2039	acpi_write	vmlinux	EXPORT_SYMBOL
+0x7452adff	user_return_notifier_register	vmlinux	EXPORT_SYMBOL_GPL
+0xb6bc30f2	nf_ct_expect_put	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x6dacc7eb	v4l2_ctrl_new_custom	drivers/media/video/videodev	EXPORT_SYMBOL
+0xa22d5ac1	tda829x_attach	drivers/media/common/tuners/tda8290	EXPORT_SYMBOL_GPL
+0x6a9e581f	register_tcf_proto_ops	vmlinux	EXPORT_SYMBOL
+0xb9b9df41	usb_amd_dev_put	vmlinux	EXPORT_SYMBOL_GPL
+0x318920b1	register_dock_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0xb25066eb	crypto_unregister_alg	vmlinux	EXPORT_SYMBOL_GPL
+0xd042b39b	dump_write	vmlinux	EXPORT_SYMBOL
+0x2de32689	lock_super	vmlinux	EXPORT_SYMBOL
+0xff480992	dump_fpu	vmlinux	EXPORT_SYMBOL
+0x5b03ae83	wimax_dev_init	net/wimax/wimax	EXPORT_SYMBOL_GPL
+0xa9f5379a	o2net_send_message_vec	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0xb85e34f7	fuse_conn_get	fs/fuse/fuse	EXPORT_SYMBOL_GPL
+0x373fdc02	virtqueue_add_buf	drivers/virtio/virtio_ring	EXPORT_SYMBOL_GPL
+0x4c6e3b8a	osd_req_flush_obsd	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0xb62d1c0e	iscsi_suspend_tx	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0x0b41741e	hdlc_start_xmit	drivers/net/wan/hdlc	EXPORT_SYMBOL
+0xe02e0ba4	unregister_md_personality	drivers/md/md-mod	EXPORT_SYMBOL
+0x78ee9563	__class_create	vmlinux	EXPORT_SYMBOL_GPL
+0x0d696561	xenbus_unmap_ring_vfree	vmlinux	EXPORT_SYMBOL_GPL
+0x7712771a	unbind_from_irqhandler	vmlinux	EXPORT_SYMBOL_GPL
+0xc9ab2eef	acpi_os_wait_events_complete	vmlinux	EXPORT_SYMBOL
+0x3dbf65a7	filp_open	vmlinux	EXPORT_SYMBOL
+0xd5a971d0	generic_file_aio_write	vmlinux	EXPORT_SYMBOL
+0x3512a1ed	oxygen_reset_uart	sound/pci/oxygen/snd-oxygen-lib	EXPORT_SYMBOL
+0x6d1f6ece	snd_rawmidi_set_ops	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0xa9adc229	snd_pcm_link_rwlock	sound/core/snd-pcm	EXPORT_SYMBOL
+0xadd001ea	ip_vs_tcp_conn_listen	net/netfilter/ipvs/ip_vs	EXPORT_SYMBOL
+0x1d99d49a	dccp_timestamp	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x906757ec	rtl92c_phy_set_bw_mode	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0x550e162f	z8530_sync	drivers/net/wan/z85230	EXPORT_SYMBOL
+0x80ea1509	xfrm6_prepare_output	vmlinux	EXPORT_SYMBOL
+0x4d4fd5f1	xfrm_calg_get_byname	vmlinux	EXPORT_SYMBOL_GPL
+0x5f896212	xfrm4_prepare_output	vmlinux	EXPORT_SYMBOL
+0x2ebe3135	cpu_is_hotpluggable	vmlinux	EXPORT_SYMBOL_GPL
+0xb8dea8a8	agp_allocate_memory	vmlinux	EXPORT_SYMBOL
+0x4fffd1c8	pci_read_vpd	vmlinux	EXPORT_SYMBOL
+0x210b4003	matroxfb_DAC_out	drivers/video/matrox/matroxfb_misc	EXPORT_SYMBOL
+0x356d217b	comedi_pci_auto_unconfig	drivers/staging/comedi/comedi	EXPORT_SYMBOL_GPL
+0x312eacb0	comedi_usb_auto_unconfig	drivers/staging/comedi/comedi	EXPORT_SYMBOL_GPL
+0x1508c3b0	vb2_reqbufs	drivers/media/video/videobuf2-core	EXPORT_SYMBOL_GPL
+0xeca7949e	dm_bufio_client_destroy	drivers/md/dm-bufio	EXPORT_SYMBOL_GPL
+0x753d921b	bsg_setup_queue	vmlinux	EXPORT_SYMBOL_GPL
+0x91e6794c	get_disk	vmlinux	EXPORT_SYMBOL
+0x0d5237d8	__free_pages	vmlinux	EXPORT_SYMBOL
+0xfa012fe7	tracepoint_probe_register	vmlinux	EXPORT_SYMBOL_GPL
+0xf8802492	print_stack_trace	vmlinux	EXPORT_SYMBOL_GPL
+0x24c41be0	nf_nat_amanda_hook	net/netfilter/nf_conntrack_amanda	EXPORT_SYMBOL_GPL
+0x69e08980	ieee80211_ready_on_channel	net/mac80211/mac80211	EXPORT_SYMBOL_GPL
+0xeb40ce64	lc_try_get	lib/lru_cache	EXPORT_SYMBOL
+0x3caf54af	usb_gadget_probe_driver	drivers/usb/gadget/udc-core	EXPORT_SYMBOL_GPL
+0x2a69e80a	spk_var_store	drivers/staging/speakup/speakup	EXPORT_SYMBOL_GPL
+0xc2f39ce1	power_supply_class	drivers/power/power_supply	EXPORT_SYMBOL_GPL
+0x8175c020	parport_get_port	drivers/parport/parport	EXPORT_SYMBOL
+0x7864dbd7	parport_put_port	drivers/parport/parport	EXPORT_SYMBOL
+0x67cd01b2	inet_bind	vmlinux	EXPORT_SYMBOL
+0x50298bfe	qdisc_watchdog_init	vmlinux	EXPORT_SYMBOL
+0x124a12f5	class_find_device	vmlinux	EXPORT_SYMBOL_GPL
+0x27fe1037	pci_scan_child_bus	vmlinux	EXPORT_SYMBOL_GPL
+0xc9f1066f	__register_binfmt	vmlinux	EXPORT_SYMBOL
+0x4e7abf86	v9fs_register_trans	net/9p/9pnet	EXPORT_SYMBOL
+0xc2b08670	rtl_pci_probe	drivers/net/wireless/rtlwifi/rtlwifi	EXPORT_SYMBOL
+0x3b619d64	vb2_create_bufs	drivers/media/video/videobuf2-core	EXPORT_SYMBOL_GPL
+0xf11fb69e	kvm_mmu_unprotect_page	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xa147a39d	xfrm_init_state	vmlinux	EXPORT_SYMBOL
+0xf5785b42	evtchn_get	vmlinux	EXPORT_SYMBOL_GPL
+0x9312d80e	evtchn_put	vmlinux	EXPORT_SYMBOL_GPL
+0x33b96e5d	apei_exec_write_register	vmlinux	EXPORT_SYMBOL_GPL
+0xef1f6e23	apei_resources_request	vmlinux	EXPORT_SYMBOL_GPL
+0x684bdb45	pci_assign_resource	vmlinux	EXPORT_SYMBOL
+0x89ca47bf	kstrtos8_from_user	vmlinux	EXPORT_SYMBOL
+0x804fb9b5	crypto_init_spawn2	vmlinux	EXPORT_SYMBOL_GPL
+0x6cb738cf	journal_try_to_free_buffers	fs/jbd/jbd	EXPORT_SYMBOL
+0x9e88a70e	il_check_rxon_cmd	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x79025f04	pcf50633_gpio_power_supply_set	drivers/mfd/pcf50633-gpio	EXPORT_SYMBOL_GPL
+0x45017bf4	dvb_generic_open	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0xf2eaa709	ttm_write_lock	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0xc0bb404a	cs5535_gpio_setup_event	drivers/gpio/gpio-cs5535	EXPORT_SYMBOL_GPL
+0xba75a3af	xfrm_user_policy	vmlinux	EXPORT_SYMBOL
+0x321536fb	netif_notify_peers	vmlinux	EXPORT_SYMBOL
+0x79c76a35	netif_napi_add	vmlinux	EXPORT_SYMBOL
+0xfbb4dd35	skb_split	vmlinux	EXPORT_SYMBOL
+0x0be048a7	input_grab_device	vmlinux	EXPORT_SYMBOL
+0x88f95795	tty_port_block_til_ready	vmlinux	EXPORT_SYMBOL
+0x53a3e486	regulator_get_current_limit	vmlinux	EXPORT_SYMBOL_GPL
+0xcd850362	regulator_get_init_drvdata	vmlinux	EXPORT_SYMBOL_GPL
+0xf10de535	ioread8	vmlinux	EXPORT_SYMBOL
+0x302b865b	x86_hyper_vmware	vmlinux	EXPORT_SYMBOL
+0xe00797f4	eip_open	drivers/net/ethernet/8390/8390p	EXPORT_SYMBOL
+0xf005fa06	ib_destroy_srq	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x686c703f	xfrm_count_auth_supported	vmlinux	EXPORT_SYMBOL_GPL
+0x96dcf033	netlink_broadcast	vmlinux	EXPORT_SYMBOL
+0x0343bdf1	__i2c_board_list	vmlinux	EXPORT_SYMBOL_GPL
+0xb6230f1f	gnttab_grant_foreign_access	vmlinux	EXPORT_SYMBOL_GPL
+0x89502f0c	gnttab_subpage_grants_available	vmlinux	EXPORT_SYMBOL_GPL
+0x279cb985	apei_exec_pre_map_gars	vmlinux	EXPORT_SYMBOL_GPL
+0x691751e1	pci_get_hp_params	vmlinux	EXPORT_SYMBOL_GPL
+0x51fe2479	block_write_full_page_endio	vmlinux	EXPORT_SYMBOL
+0x79807077	shmem_file_setup	vmlinux	EXPORT_SYMBOL_GPL
+0xc3cf1128	in_group_p	vmlinux	EXPORT_SYMBOL
+0xc631580a	console_unlock	vmlinux	EXPORT_SYMBOL
+0xd2aae070	apic	vmlinux	EXPORT_SYMBOL_GPL
+0xff087be2	iso_packets_buffer_init	sound/firewire/snd-firewire-lib	EXPORT_SYMBOL
+0x0086ac0b	ax25_send_frame	net/ax25/ax25	EXPORT_SYMBOL
+0x0957e33f	osd_req_write	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0x6e8a9454	mtd_block_markbad	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0xa3546c0a	mmc_start_req	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0xcd74cdf7	udp_sendmsg	vmlinux	EXPORT_SYMBOL
+0xb95ec7ba	tcp_md5_hash_key	vmlinux	EXPORT_SYMBOL
+0x5ff863d3	elv_rb_former_request	vmlinux	EXPORT_SYMBOL
+0xd85833cb	__kfifo_dma_out_prepare_r	vmlinux	EXPORT_SYMBOL
+0x0112498e	snd_timer_stop	sound/core/snd-timer	EXPORT_SYMBOL
+0x79e6190a	viafb_irq_disable	drivers/video/via/viafb	EXPORT_SYMBOL_GPL
+0x1d50a64b	usb_kill_urb	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xd69c9df2	usb_get_intf	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x38ab79b0	ath9k_hw_stopdmarecv	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xa4f6f710	sdio_register_driver	drivers/mmc/core/mmc_core	EXPORT_SYMBOL_GPL
+0x9e18fd28	ata_sff_lost_interrupt	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xf343e99b	dcb_ieee_setapp	vmlinux	EXPORT_SYMBOL
+0x2574d760	dcb_ieee_delapp	vmlinux	EXPORT_SYMBOL
+0xf53d4c26	qdisc_class_hash_destroy	vmlinux	EXPORT_SYMBOL
+0x6bfa9c6a	cfg80211_ready_on_channel	net/wireless/cfg80211	EXPORT_SYMBOL
+0x593a36c2	scsi_dh_handler_exist	drivers/scsi/device_handler/scsi_dh	EXPORT_SYMBOL_GPL
+0xb9ca8e07	rt2x00queue_for_each_entry	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0xeb205ded	tifm_add_adapter	drivers/misc/tifm_core	EXPORT_SYMBOL
+0xb91859e7	drm_helper_encoder_in_use	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0x9e607910	audit_log	vmlinux	EXPORT_SYMBOL
+0xf53ea538	set_security_override_from_ctx	vmlinux	EXPORT_SYMBOL
+0x9d44abde	snd_sbdsp_get_byte	sound/isa/sb/snd-sb-common	EXPORT_SYMBOL
+0x22bf864f	xdr_process_buf	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xf4c4f413	usb_autopm_put_interface_no_suspend	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x02de3b18	transport_set_vpd_ident	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x704a7dbe	dib8000_set_wbd_ref	drivers/media/dvb/frontends/dib8000	EXPORT_SYMBOL
+0xa7494df6	tda18271_attach	drivers/media/common/tuners/tda18271	EXPORT_SYMBOL_GPL
+0x40f7bd91	dm_tm_inc	drivers/md/persistent-data/dm-persistent-data	EXPORT_SYMBOL_GPL
+0x45737a42	drm_edid_to_eld	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x0f28cb91	nvram_read_byte	drivers/char/nvram	EXPORT_SYMBOL
+0xcc2a8975	ata_sff_wait_after_reset	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xac31f2e1	sk_wait_data	vmlinux	EXPORT_SYMBOL
+0xedbc6f67	gnttab_end_foreign_access	vmlinux	EXPORT_SYMBOL_GPL
+0x287d8c2e	pci_enable_obff	vmlinux	EXPORT_SYMBOL
+0x8e026975	crypto_remove_spawns	vmlinux	EXPORT_SYMBOL_GPL
+0x4fd4e89d	ring_buffer_empty_cpu	vmlinux	EXPORT_SYMBOL_GPL
+0x8c667450	snd_ac97_update_power	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0x2cafb150	snd_ak4117_reinit	sound/i2c/other/snd-ak4117	EXPORT_SYMBOL
+0xae9926f7	snd_ak4114_reinit	sound/i2c/other/snd-ak4114	EXPORT_SYMBOL
+0x2c50e3ad	snd_ak4113_reinit	sound/i2c/other/snd-ak4113	EXPORT_SYMBOL_GPL
+0x63d239c6	lib80211_unregister_crypto_ops	net/wireless/lib80211	EXPORT_SYMBOL
+0xb88652dc	xt_replace_table	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0xb301123b	v4l2_int_device_register	drivers/media/video/v4l2-int-device	EXPORT_SYMBOL_GPL
+0xbc8f8c59	ib_alloc_xrcd	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x7586fb3a	ttm_eu_reserve_buffers	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x856ba1c7	bcma_find_core	drivers/bcma/bcma	EXPORT_SYMBOL_GPL
+0x6e1cfe1f	__netpoll_setup	vmlinux	EXPORT_SYMBOL_GPL
+0x2d59c954	edac_handlers	vmlinux	EXPORT_SYMBOL_GPL
+0x3f9f868f	__percpu_counter_init	vmlinux	EXPORT_SYMBOL
+0x34ac50a4	visitorl	vmlinux	EXPORT_SYMBOL_GPL
+0x430126aa	irq_set_affinity_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0x56398615	mark_tsc_unstable	vmlinux	EXPORT_SYMBOL_GPL
+0x15b0606e	e820_any_mapped	vmlinux	EXPORT_SYMBOL_GPL
+0xaf81e113	snd_wss_get_single	sound/isa/wss/snd-wss-lib	EXPORT_SYMBOL
+0x394632f0	snd_wss_put_single	sound/isa/wss/snd-wss-lib	EXPORT_SYMBOL
+0xda227d12	snd_fw_transaction	sound/firewire/snd-firewire-lib	EXPORT_SYMBOL
+0xbc141dfc	snd_midi_event_encode_byte	sound/core/seq/snd-seq-midi-event	EXPORT_SYMBOL
+0x24d54403	nf_nat_sip_seq_adjust_hook	net/netfilter/nf_conntrack_sip	EXPORT_SYMBOL_GPL
+0xd94865c7	usb_stor_bulk_transfer_sg	drivers/usb/storage/usb-storage	EXPORT_SYMBOL_GPL
+0x43ef3a46	sas_task_abort	drivers/scsi/libsas/libsas	EXPORT_SYMBOL_GPL
+0x62bc2c34	iscsi_host_set_param	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0xd776effc	v4l2_int_device_unregister	drivers/media/video/v4l2-int-device	EXPORT_SYMBOL_GPL
+0xf6ab63be	dm_dispatch_request	drivers/md/dm-mod	EXPORT_SYMBOL_GPL
+0xb93baf0d	rdma_resolve_ip	drivers/infiniband/core/ib_addr	EXPORT_SYMBOL
+0x1198b37a	tpm_remove_hardware	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x15f6012b	inet_hashinfo_init	vmlinux	EXPORT_SYMBOL_GPL
+0xb3fe958a	input_mt_report_pointer_emulation	vmlinux	EXPORT_SYMBOL
+0x5475a63b	pci_ioremap_bar	vmlinux	EXPORT_SYMBOL_GPL
+0x6173db15	end_buffer_read_sync	vmlinux	EXPORT_SYMBOL
+0x26cc7878	set_cpus_allowed_ptr	vmlinux	EXPORT_SYMBOL_GPL
+0x98fa21b0	mod_timer_pinned	vmlinux	EXPORT_SYMBOL
+0x2766faad	snd_vx_setup_firmware	sound/drivers/vx/snd-vx-lib	EXPORT_SYMBOL
+0x7e64181d	usb_calc_bus_time	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xcdfcba7b	mite_buf_change	drivers/staging/comedi/drivers/mite	EXPORT_SYMBOL
+0x842beb3b	sas_register_ha	drivers/scsi/libsas/libsas	EXPORT_SYMBOL_GPL
+0x4e35986a	rt2x00usb_kick_queue	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0x7610c7e8	vb2_plane_cookie	drivers/media/video/videobuf2-core	EXPORT_SYMBOL_GPL
+0xea0e8abe	drm_calc_vbltimestamp_from_scanoutpos	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x4eab2d44	tcf_em_tree_dump	vmlinux	EXPORT_SYMBOL
+0xb641b26d	neigh_for_each	vmlinux	EXPORT_SYMBOL
+0x3d73207c	rtc_initialize_alarm	vmlinux	EXPORT_SYMBOL_GPL
+0x6971447a	rtc_month_days	vmlinux	EXPORT_SYMBOL
+0xef051902	sg_miter_next	vmlinux	EXPORT_SYMBOL
+0xc083aa10	crypto_init_shash_spawn	vmlinux	EXPORT_SYMBOL_GPL
+0xf6b44dfa	crypto_init_ahash_spawn	vmlinux	EXPORT_SYMBOL_GPL
+0x7285f84f	unregister_jprobe	vmlinux	EXPORT_SYMBOL_GPL
+0x754c6393	posix_timers_register_clock	vmlinux	EXPORT_SYMBOL_GPL
+0xc702156b	param_get_ushort	vmlinux	EXPORT_SYMBOL
+0xc6ae9255	snd_emu10k1_ptr_read	sound/pci/emu10k1/snd-emu10k1	EXPORT_SYMBOL
+0x37139813	svc_sock_update_bufs	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x158bbe61	vcc_insert_socket	net/atm/atm	EXPORT_SYMBOL
+0x04c7f924	uwb_rsv_get_usable_mas	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0xe585d881	usb_find_interface	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xcc9e5b9d	osd_req_remove_partition	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0x2e6fc583	ubi_open_volume_path	drivers/mtd/ubi/ubi	EXPORT_SYMBOL_GPL
+0xc994d438	stv090x_attach	drivers/media/dvb/frontends/stv090x	EXPORT_SYMBOL
+0x002e8da3	ix2505v_attach	drivers/media/dvb/frontends/ix2505v	EXPORT_SYMBOL
+0xd288bd20	ata_scsi_ioctl	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x85454b62	skb_pull	vmlinux	EXPORT_SYMBOL
+0x09c8eb55	font_vga_8x16	vmlinux	EXPORT_SYMBOL
+0x3b2ec677	pci_add_new_bus	vmlinux	EXPORT_SYMBOL
+0x8574ca6c	gpio_request_array	vmlinux	EXPORT_SYMBOL_GPL
+0x4417f70d	swiotlb_unmap_page	vmlinux	EXPORT_SYMBOL_GPL
+0x5fce76ee	blkio_policy_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0xa2827d76	snd_hda_get_jack_location	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xe1ac2bb8	sunrpc_net_id	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xd023e32c	iscsi_block_scsi_eh	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0x3f03c21e	scsi_get_vpd_page	drivers/scsi/scsi_mod	EXPORT_SYMBOL_GPL
+0x4b203ed3	cxgbi_device_find_by_lldev	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0x61a51877	il_prep_station	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL_GPL
+0x233fdab7	phy_start_interrupts	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x166e2d53	fw_iso_context_start	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0xd0b2727a	kvm_mmu_set_mask_ptes	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x93d2422d	snmp_mib_free	vmlinux	EXPORT_SYMBOL_GPL
+0x41c63346	spi_master_resume	vmlinux	EXPORT_SYMBOL_GPL
+0x84125e48	pm_generic_restore_noirq	vmlinux	EXPORT_SYMBOL_GPL
+0xf82e3d47	acpi_initialize_objects	vmlinux	EXPORT_SYMBOL
+0x9dfdf722	gpio_free_array	vmlinux	EXPORT_SYMBOL_GPL
+0xfa1f4662	scatterwalk_start	vmlinux	EXPORT_SYMBOL_GPL
+0x6d025e7b	sysfs_put	vmlinux	EXPORT_SYMBOL_GPL
+0x9aedb171	irq_remove_generic_chip	vmlinux	EXPORT_SYMBOL_GPL
+0x2665edee	snd_hda_codec_set_pincfg	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xa740a43f	snd_hda_codec_get_pincfg	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xfe950da8	fc_fcp_init	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x55b9bd78	parport_register_port	drivers/parport/parport	EXPORT_SYMBOL
+0x966eab29	lbs_stop_card	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0x14c94b00	xfrm_state_check_expire	vmlinux	EXPORT_SYMBOL
+0x4528f0a4	sock_diag_unregister_inet_compat	vmlinux	EXPORT_SYMBOL_GPL
+0x6d4c5a13	netdev_boot_setup_check	vmlinux	EXPORT_SYMBOL
+0x2a41ae58	sock_i_uid	vmlinux	EXPORT_SYMBOL
+0x7868a4fc	sock_i_ino	vmlinux	EXPORT_SYMBOL
+0x374fe40c	cpufreq_global_kobject	vmlinux	EXPORT_SYMBOL
+0xf3dd036d	regulator_set_voltage_time	vmlinux	EXPORT_SYMBOL_GPL
+0x1c8a04b0	acpi_reset	vmlinux	EXPORT_SYMBOL
+0x4eb11f1f	seq_bitmap	vmlinux	EXPORT_SYMBOL
+0x3965d4af	snd_emux_lock_voice	sound/synth/emux/snd-emux-synth	EXPORT_SYMBOL
+0xc816e64c	oxygen_read16	sound/pci/oxygen/snd-oxygen-lib	EXPORT_SYMBOL
+0x83050198	drm_mode_validate_clocks	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x6a3a97a9	drm_rmmap_locked	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x1e2f42ed	edac_pci_handle_npe	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0xdf6e0b42	__tracepoint_kvm_skinit	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x2ef03c78	ip_build_and_send_pkt	vmlinux	EXPORT_SYMBOL_GPL
+0x6d839b9d	register_gifconf	vmlinux	EXPORT_SYMBOL
+0x69bc9f0d	cpufreq_unregister_driver	vmlinux	EXPORT_SYMBOL_GPL
+0x3d819c30	gpiochip_find	vmlinux	EXPORT_SYMBOL_GPL
+0xf126cc0a	crypto_rng_type	vmlinux	EXPORT_SYMBOL_GPL
+0x457594fa	crypto_alg_list	vmlinux	EXPORT_SYMBOL_GPL
+0x6da8e0c0	sync_inode_metadata	vmlinux	EXPORT_SYMBOL
+0xa67da660	mempool_alloc	vmlinux	EXPORT_SYMBOL
+0x1e62faa8	unregister_wide_hw_breakpoint	vmlinux	EXPORT_SYMBOL_GPL
+0x86f6b99d	synchronize_rcu_expedited	vmlinux	EXPORT_SYMBOL_GPL
+0xaa6901ac	__kfifo_out_r	vmlinux	EXPORT_SYMBOL
+0x80ea85ea	cfg80211_classify8021d	net/wireless/cfg80211	EXPORT_SYMBOL
+0xea76de25	inet_dccp_listen	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xdfd59cd0	irda_register_dongle	drivers/net/irda/sir-dev	EXPORT_SYMBOL
+0xb15a055c	media_entity_pipeline_start	drivers/media/media	EXPORT_SYMBOL_GPL
+0x5f098f77	drm_mm_init_scan_with_range	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x92708d11	ata_do_dev_read_id	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x3b72fc98	acpi_resource_to_address64	vmlinux	EXPORT_SYMBOL
+0x6f6324ee	__srcu_read_lock	vmlinux	EXPORT_SYMBOL_GPL
+0x42c04002	iscsi_conn_stop	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0xd03c7700	secure_ipv4_port_ephemeral	vmlinux	EXPORT_SYMBOL_GPL
+0x3d7ea99a	gnttab_grant_foreign_transfer	vmlinux	EXPORT_SYMBOL_GPL
+0xc293a804	proc_dointvec_minmax	vmlinux	EXPORT_SYMBOL
+0x530e6fc4	ceph_osdc_set_request_linger	net/ceph/libceph	EXPORT_SYMBOL
+0x416b81c4	atm_charge	net/atm/atm	EXPORT_SYMBOL
+0x0c6eb0be	pccard_static_ops	drivers/pcmcia/pcmcia_rsrc	EXPORT_SYMBOL
+0x6dfb62b1	rtl_fw_cb	drivers/net/wireless/rtlwifi/rtlwifi	EXPORT_SYMBOL
+0x01b8efd7	mlx4_is_slave_active	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL
+0x7f3a7bdf	i2c_bus_type	drivers/i2c/i2c-core	EXPORT_SYMBOL_GPL
+0xdc43a9c8	daemonize	vmlinux	EXPORT_SYMBOL
+0x629f08b5	kmap	vmlinux	EXPORT_SYMBOL
+0x9a75e460	rpc_malloc	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x3fc23318	fscache_wait_bit	fs/fscache/fscache	EXPORT_SYMBOL
+0x64ebe677	wmi_query_block	drivers/platform/x86/wmi	EXPORT_SYMBOL_GPL
+0xa1bbfca6	usbnet_pause_rx	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0x78f8e436	video_device_release_empty	drivers/media/video/videodev	EXPORT_SYMBOL
+0x9bcb83cf	wait_for_tpm_stat	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x3c9881ef	icmpv6_send	vmlinux	EXPORT_SYMBOL
+0x71246ab7	do_take_over_console	vmlinux	EXPORT_SYMBOL_GPL
+0xe2dd67e5	regulator_set_current_limit	vmlinux	EXPORT_SYMBOL_GPL
+0x86a51007	gnttab_end_foreign_transfer	vmlinux	EXPORT_SYMBOL_GPL
+0x5f976dc5	blk_queue_make_request	vmlinux	EXPORT_SYMBOL
+0x15575df5	truncate_pagecache_range	vmlinux	EXPORT_SYMBOL
+0x915a960c	put_page	vmlinux	EXPORT_SYMBOL
+0x39e15e5f	trace_nowake_buffer_unlock_commit	vmlinux	EXPORT_SYMBOL_GPL
+0x74954462	timecounter_read	vmlinux	EXPORT_SYMBOL_GPL
+0x5b0369a8	rpc_lookup_cred	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x7a889be4	nf_conntrack_lock	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x09597060	il_mac_hw_scan	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xefa523c0	it913x_fe_attach	drivers/media/dvb/frontends/it913x-fe	EXPORT_SYMBOL
+0x638bba80	saa7146_vv_release	drivers/media/common/saa7146_vv	EXPORT_SYMBOL_GPL
+0xd9b40b95	led_classdev_resume	vmlinux	EXPORT_SYMBOL_GPL
+0x6bbf5ea8	rtc_device_register	vmlinux	EXPORT_SYMBOL_GPL
+0x6c2ce5ed	input_reset_device	vmlinux	EXPORT_SYMBOL
+0x725d0e11	tty_ldisc_deref	vmlinux	EXPORT_SYMBOL_GPL
+0x56526e4e	security_inode_setsecctx	vmlinux	EXPORT_SYMBOL
+0xf5dd7cf6	dquot_scan_active	vmlinux	EXPORT_SYMBOL
+0xed0720ad	vfs_getattr	vmlinux	EXPORT_SYMBOL
+0x6d790ea5	snd_hda_override_conn_list	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x43c8d341	ceph_buffer_new	net/ceph/libceph	EXPORT_SYMBOL
+0xe2bcfd3a	p9_client_walk	net/9p/9pnet	EXPORT_SYMBOL
+0x40edfeec	spi_bitbang_start	drivers/spi/spi-bitbang	EXPORT_SYMBOL_GPL
+0xc729fb1e	phy_stop	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x02d29a95	mpt_set_taskmgmt_in_progress_flag	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0x2f86e639	drm_kms_helper_poll_enable	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0xb261afdd	ata_dummy_port_info	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x3df34825	inet_del_protocol	vmlinux	EXPORT_SYMBOL
+0x30f449be	neigh_update	vmlinux	EXPORT_SYMBOL
+0x8b3fdea8	put_io_context	vmlinux	EXPORT_SYMBOL
+0x37ee2b11	blk_queue_io_min	vmlinux	EXPORT_SYMBOL
+0x4ec8a579	nobh_truncate_page	vmlinux	EXPORT_SYMBOL
+0x274d08dc	__kfifo_dma_out_prepare	vmlinux	EXPORT_SYMBOL
+0xfe727411	get_phys_to_machine	vmlinux	EXPORT_SYMBOL_GPL
+0xfbad9595	snd_vx_check_reg_bit	sound/drivers/vx/snd-vx-lib	EXPORT_SYMBOL
+0x045072cd	nf_ct_port_nla_policy	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x37850c67	ieee80211_generic_frame_duration	net/mac80211/mac80211	EXPORT_SYMBOL
+0x2f55d1ee	ceph_monc_init	net/ceph/libceph	EXPORT_SYMBOL
+0xbaeb4700	o2hb_check_node_heartbeating_from_callback	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0xe219707d	usb_wwan_set_termios	drivers/usb/serial/usb_wwan	EXPORT_SYMBOL
+0xdcfcd732	iscsi_conn_start	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0x4604ce01	em28xx_uninit_isoc	drivers/media/video/em28xx/em28xx	EXPORT_SYMBOL_GPL
+0xc4554217	up	vmlinux	EXPORT_SYMBOL
+0x63f4929e	rpc_call_start	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xdd4cb952	rds_page_copy_user	net/rds/rds	EXPORT_SYMBOL_GPL
+0xc19c7b97	nfs4_set_ds_client	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0x4132f9ed	iscsi_lookup_endpoint	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0x6e6ce22c	il_poll_bit	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xf060d2ef	il_send_cmd_pdu	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x0d16e728	il_send_add_sta	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x37016b73	ubi_leb_unmap	drivers/mtd/ubi/ubi	EXPORT_SYMBOL_GPL
+0x2925a47e	nand_scan_tail	drivers/mtd/nand/nand	EXPORT_SYMBOL
+0xe7f6dd3c	icmp_send	vmlinux	EXPORT_SYMBOL
+0xc7f1ef1f	xen_swiotlb_sync_sg_for_device	vmlinux	EXPORT_SYMBOL_GPL
+0xf81f8f77	pci_hp_remove_module_link	vmlinux	EXPORT_SYMBOL_GPL
+0xe37ee06c	path_get	vmlinux	EXPORT_SYMBOL
+0x07bd45d2	iov_iter_copy_from_user_atomic	vmlinux	EXPORT_SYMBOL
+0x531b604e	__virt_addr_valid	vmlinux	EXPORT_SYMBOL
+0xef774f5d	svga_compute_pll	drivers/video/svgalib	EXPORT_SYMBOL
+0x474b132a	usb_deregister_dev	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x0f76ff9f	usb_hcd_is_primary_hcd	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xe0033b1b	spk_synth_is_alive_restart	drivers/staging/speakup/speakup	EXPORT_SYMBOL_GPL
+0xbc70f9e2	rt2800_check_firmware	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0x650e9b23	mlx4_uar_alloc	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x75fd1f1e	mantis_ca_exit	drivers/media/dvb/mantis/mantis_core	EXPORT_SYMBOL_GPL
+0x0ffa49fc	mISDN_initdchannel	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0xd3482007	xfrm_state_update	vmlinux	EXPORT_SYMBOL
+0x9541ab62	pm_generic_resume_noirq	vmlinux	EXPORT_SYMBOL_GPL
+0x61a6e879	crypto_grab_aead	vmlinux	EXPORT_SYMBOL_GPL
+0x23864ce7	cpuset_mem_spread_node	vmlinux	EXPORT_SYMBOL_GPL
+0x8750ccc5	hrtimer_start	vmlinux	EXPORT_SYMBOL_GPL
+0xe0bbbc90	get_pid_task	vmlinux	EXPORT_SYMBOL_GPL
+0x0e1f41b9	snd_cards	sound/core/snd	EXPORT_SYMBOL
+0x9e326eb3	hashbin_delete	net/irda/irda	EXPORT_SYMBOL
+0x5d634477	__ceph_open_session	net/ceph/libceph	EXPORT_SYMBOL
+0x4ee87ff8	transport_deregister_session_configfs	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x5e254677	ieee80211_wx_set_gen_ie_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0xed9a1af1	ath9k_hw_disable_mib_counters	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xaf9e1a2a	sdhci_resume_host	drivers/mmc/host/sdhci	EXPORT_SYMBOL_GPL
+0x63af5214	bcma_chipco_chipctl_maskset	drivers/bcma/bcma	EXPORT_SYMBOL_GPL
+0x7a45377b	acpi_video_unregister	drivers/acpi/video	EXPORT_SYMBOL
+0x6c702af7	sysctl_udp_rmem_min	vmlinux	EXPORT_SYMBOL
+0xa1c8e1dd	hippi_mac_addr	vmlinux	EXPORT_SYMBOL
+0x61f05aec	dev_open	vmlinux	EXPORT_SYMBOL
+0x9fee6a87	lock_sock_fast	vmlinux	EXPORT_SYMBOL
+0x252e43b4	cn_add_callback	vmlinux	EXPORT_SYMBOL_GPL
+0x8cc79cab	iowrite16_rep	vmlinux	EXPORT_SYMBOL
+0xbfc177bc	iowrite32_rep	vmlinux	EXPORT_SYMBOL
+0x55d6c5df	ilookup	vmlinux	EXPORT_SYMBOL
+0x4302d0eb	free_pages	vmlinux	EXPORT_SYMBOL
+0x6d629c59	snd_mpu401_uart_interrupt_tx	sound/drivers/mpu401/snd-mpu401-uart	EXPORT_SYMBOL
+0x276e209e	nat_q931_hook	net/netfilter/nf_conntrack_h323	EXPORT_SYMBOL_GPL
+0x18d81be9	iscsi_get_fabric_proto_ident	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x06f921dd	mwifiex_del_virtual_intf	drivers/net/wireless/mwifiex/mwifiex	EXPORT_SYMBOL_GPL
+0x35538cdd	mdiobus_free	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x68fe6381	gigaset_m10x_input	drivers/isdn/gigaset/gigaset	EXPORT_SYMBOL_GPL
+0x81e6b37f	dmi_get_system_info	vmlinux	EXPORT_SYMBOL
+0x75fd7d8d	i8042_install_filter	vmlinux	EXPORT_SYMBOL
+0x03592ea0	security_unix_stream_connect	vmlinux	EXPORT_SYMBOL
+0x8972315c	generic_file_fsync	vmlinux	EXPORT_SYMBOL
+0x37a7631c	unlock_new_inode	vmlinux	EXPORT_SYMBOL
+0x3f06960a	__f_setown	vmlinux	EXPORT_SYMBOL
+0xf82f16b3	execute_in_process_context	vmlinux	EXPORT_SYMBOL_GPL
+0x73dd54eb	irq_fpu_usable	vmlinux	EXPORT_SYMBOL
+0x8d5fffb2	xt_find_table_lock	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0x8fe4ab75	lbs_send_tx_feedback	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0xbcd23793	tms380tr_interrupt	drivers/net/tokenring/tms380tr	EXPORT_SYMBOL
+0xa4b93aa9	ppp_dev_name	drivers/net/ppp/ppp_generic	EXPORT_SYMBOL
+0xdcab50df	tea5767_attach	drivers/media/common/tuners/tea5767	EXPORT_SYMBOL_GPL
+0x62737e1d	sock_unregister	vmlinux	EXPORT_SYMBOL
+0xe3d6f284	fb_find_mode_cvt	vmlinux	EXPORT_SYMBOL
+0x9a9fcd70	kset_register	vmlinux	EXPORT_SYMBOL
+0xba21f2ef	fput	vmlinux	EXPORT_SYMBOL
+0xacafa8e7	vector_used_by_percpu_irq	vmlinux	EXPORT_SYMBOL_GPL
+0xb9394173	irias_delete_value	net/irda/irda	EXPORT_SYMBOL
+0x9357b8fc	sas_phy_delete	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL
+0x9b639e87	platform_device_alloc	vmlinux	EXPORT_SYMBOL_GPL
+0x5108b3fc	acpi_os_map_memory	vmlinux	EXPORT_SYMBOL_GPL
+0x3d7c1ed7	msrs_alloc	vmlinux	EXPORT_SYMBOL
+0xf60ee374	posix_timer_event	vmlinux	EXPORT_SYMBOL_GPL
+0x82d167b3	wimax_msg_len	net/wimax/wimax	EXPORT_SYMBOL_GPL
+0x5efe0410	journal_set_features	fs/jbd/jbd	EXPORT_SYMBOL
+0xeae74760	scsi_nl_send_transport_msg	drivers/scsi/scsi_mod	EXPORT_SYMBOL_GPL
+0xaf74f2f2	il_irq_handle_error	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xda33929f	arc_bcast_proto	drivers/net/arcnet/arcnet	EXPORT_SYMBOL
+0x64d2fb88	flexonenand_region	drivers/mtd/onenand/onenand	EXPORT_SYMBOL
+0x0953e32a	ir_raw_handler_unregister	drivers/media/rc/rc-core	EXPORT_SYMBOL
+0xc72d5f51	ip6_frag_init	vmlinux	EXPORT_SYMBOL
+0x6b5b2729	pm_generic_suspend_noirq	vmlinux	EXPORT_SYMBOL_GPL
+0x74f7431a	__fsnotify_parent	vmlinux	EXPORT_SYMBOL_GPL
+0xd46e5b30	pm_qos_add_request	vmlinux	EXPORT_SYMBOL_GPL
+0x1976aa06	param_ops_bool	vmlinux	EXPORT_SYMBOL
+0x8e94c395	l2tp_session_delete	net/l2tp/l2tp_core	EXPORT_SYMBOL_GPL
+0xc3f1db97	ceph_monc_open_session	net/ceph/libceph	EXPORT_SYMBOL
+0x3d008013	usb_ep0_reinit	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xcc2da963	sas_phy_free	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL
+0x8019d49f	media_entity_get	drivers/media/media	EXPORT_SYMBOL_GPL
+0xfd4428e2	media_entity_put	drivers/media/media	EXPORT_SYMBOL_GPL
+0x7d60b117	smscore_unregister_device	drivers/media/dvb/siano/smsmdtv	EXPORT_SYMBOL_GPL
+0x0ae4b94c	drm_ht_remove	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x6ab922b2	regulator_get_drvdata	vmlinux	EXPORT_SYMBOL_GPL
+0xe2071050	add_disk	vmlinux	EXPORT_SYMBOL
+0x0dd2126d	snd_wss_out	sound/isa/wss/snd-wss-lib	EXPORT_SYMBOL
+0x133e13b5	xt_rateest_put	net/netfilter/xt_RATEEST	EXPORT_SYMBOL_GPL
+0x836eb209	mwifiex_cancel_hs	drivers/net/wireless/mwifiex/mwifiex	EXPORT_SYMBOL_GPL
+0xb30cf7d7	__mlx4_unregister_mac	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x9b47657e	mptscsih_info	drivers/message/fusion/mptscsih	EXPORT_SYMBOL
+0x01fd453e	usbhid_lookup_quirk	drivers/hid/usbhid/usbhid	EXPORT_SYMBOL_GPL
+0xf3bb52e7	cryptd_shash_desc	crypto/cryptd	EXPORT_SYMBOL_GPL
+0xf0153369	__udp6_lib_lookup	vmlinux	EXPORT_SYMBOL_GPL
+0x58089052	inet_shutdown	vmlinux	EXPORT_SYMBOL
+0x742def44	__tracepoint_block_bio_remap	vmlinux	EXPORT_SYMBOL_GPL
+0xe00a386b	posix_lock_file_wait	vmlinux	EXPORT_SYMBOL
+0x76b29507	accountable_mapping	vmlinux	EXPORT_SYMBOL
+0xbce712bc	snd_hda_override_amp_caps	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x42d4e58d	snd_hda_override_pin_caps	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xe230430b	xt_unregister_table	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0x64fa0685	lc_find	lib/lru_cache	EXPORT_SYMBOL
+0x2468d5c9	video_output_unregister	drivers/video/output	EXPORT_SYMBOL
+0x0b8aad57	uwb_est_unregister	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0x32ed9ec5	iscsi_requeue_task	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0xe5249719	mlx4_qp_modify	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xf3ef7d82	mb86a16_attach	drivers/media/dvb/frontends/mb86a16	EXPORT_SYMBOL
+0xa8b4e08f	drm_handle_vblank	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x7e431b14	fw_csr_string	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0x07276a49	uart_remove_one_port	vmlinux	EXPORT_SYMBOL
+0x4e830a3e	strnicmp	vmlinux	EXPORT_SYMBOL
+0x2deb6e89	vmalloc_to_page	vmlinux	EXPORT_SYMBOL
+0x1d027e4b	snd_pcm_format_signed	sound/core/snd-pcm	EXPORT_SYMBOL
+0x41eb4270	journal_start_commit	fs/jbd/jbd	EXPORT_SYMBOL
+0x0513af9e	usb_get_hcd	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x15efc407	hostap_80211_ops	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x7baf428d	hostap_info_init	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x8eff9111	drm_ht_find_item	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xd2727e99	fbcon_set_bitops	vmlinux	EXPORT_SYMBOL
+0x6cade3ae	blk_integrity_merge_rq	vmlinux	EXPORT_SYMBOL
+0xbfc8b37f	blk_update_request	vmlinux	EXPORT_SYMBOL_GPL
+0x02649054	security_sock_rcv_skb	vmlinux	EXPORT_SYMBOL
+0x36aad357	__wake_up_bit	vmlinux	EXPORT_SYMBOL
+0x655cb202	snd_sf_linear_to_log	sound/synth/emux/snd-emux-synth	EXPORT_SYMBOL
+0xb8bdeb0e	xdr_encode_array2	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x233917d1	mac_vmode_to_var	drivers/video/macmodes	EXPORT_SYMBOL
+0x19a90a4c	usb_hcd_giveback_urb	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xec66ffc3	subdev_700_interrupt	drivers/staging/comedi/drivers/ni_daq_700	EXPORT_SYMBOL
+0x01f02c29	iscsi_is_session_dev	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0x5cd24d29	z8530_hdlc_kilostream	drivers/net/wan/z85230	EXPORT_SYMBOL
+0x78cb990f	flexcop_sram_ctrl	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0x4c753237	drm_prime_gem_destroy	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x3e855901	fw_iso_context_create	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0x99e3514f	sock_release	vmlinux	EXPORT_SYMBOL
+0x5d36f1ab	user_instantiate	vmlinux	EXPORT_SYMBOL_GPL
+0x619b187b	add_wait_queue_exclusive	vmlinux	EXPORT_SYMBOL
+0x136c0838	snd_emu10k1_synth_bzero	sound/pci/emu10k1/snd-emu10k1	EXPORT_SYMBOL
+0x8ee9e07a	snd_msndmix_new	sound/isa/msnd/snd-msnd-lib	EXPORT_SYMBOL
+0x3906ce71	snd_gf1_mem_xfree	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0x319f4658	ct_sip_get_sdp_header	net/netfilter/nf_conntrack_sip	EXPORT_SYMBOL_GPL
+0x8fa80d55	nf_nat_icmp_reply_translation	net/ipv4/netfilter/nf_nat	EXPORT_SYMBOL_GPL
+0x75811312	crc_ccitt_table	lib/crc-ccitt	EXPORT_SYMBOL
+0x04251d8c	nlmclnt_proc	fs/lockd/lockd	EXPORT_SYMBOL_GPL
+0xf0f69435	mlx4_mtt_addr	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xd1e0573d	drm_debugfs_create_files	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x34908c14	print_hex_dump_bytes	vmlinux	EXPORT_SYMBOL
+0xe2764de8	d_add_ci	vmlinux	EXPORT_SYMBOL
+0x14fe7a8f	zs_destroy_pool	drivers/staging/zsmalloc/zsmalloc	EXPORT_SYMBOL_GPL
+0xea1149c4	spi_bitbang_transfer	drivers/spi/spi-bitbang	EXPORT_SYMBOL_GPL
+0xfcce18bf	scsi_dh_attach	drivers/scsi/device_handler/scsi_dh	EXPORT_SYMBOL_GPL
+0xe306b8df	scsi_dh_detach	drivers/scsi/device_handler/scsi_dh	EXPORT_SYMBOL_GPL
+0x3d23891b	rt2800_link_stats	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0x83581089	gf128mul_init_4k_lle	crypto/gf128mul	EXPORT_SYMBOL
+0x9b2560b9	gf128mul_init_4k_bbe	crypto/gf128mul	EXPORT_SYMBOL
+0x5e6947f7	unregister_dcbevent_notifier	vmlinux	EXPORT_SYMBOL
+0x017543f0	net_ipv6_ctl_path	vmlinux	EXPORT_SYMBOL_GPL
+0xa9f3f261	net_ipv4_ctl_path	vmlinux	EXPORT_SYMBOL_GPL
+0x5394b459	netdev_set_master	vmlinux	EXPORT_SYMBOL
+0xe790e8ce	__skb_checksum_complete_head	vmlinux	EXPORT_SYMBOL
+0xac3f3cc4	unlink_framebuffer	vmlinux	EXPORT_SYMBOL
+0xde042094	swiotlb_map_sg	vmlinux	EXPORT_SYMBOL
+0x772f9eec	__percpu_counter_add	vmlinux	EXPORT_SYMBOL
+0xa6b13658	__percpu_counter_sum	vmlinux	EXPORT_SYMBOL
+0xcb451e56	idr_init	vmlinux	EXPORT_SYMBOL
+0x4239de63	ida_init	vmlinux	EXPORT_SYMBOL
+0x82e73a4f	mpage_readpage	vmlinux	EXPORT_SYMBOL
+0x70bc17d7	inode_wait	vmlinux	EXPORT_SYMBOL
+0xd6ee688f	vmalloc	vmlinux	EXPORT_SYMBOL
+0xf31b3fd1	workqueue_set_max_active	vmlinux	EXPORT_SYMBOL_GPL
+0x9d0b87b4	hermes_struct_init	drivers/net/wireless/orinoco/orinoco	EXPORT_SYMBOL
+0x5247c4f6	usbnet_cdc_status	drivers/net/usb/cdc_ether	EXPORT_SYMBOL_GPL
+0xda9c3620	macvlan_dellink	drivers/net/macvlan	EXPORT_SYMBOL_GPL
+0x560762a8	cs5535_mfgpt_toggle_event	drivers/misc/cs5535-mfgpt	EXPORT_SYMBOL_GPL
+0x482d4f72	raid5_set_cache_size	drivers/md/raid456	EXPORT_SYMBOL
+0x3d652ad3	ib_free_fast_reg_page_list	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x3d279d9e	ata_bmdma_error_handler	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x2b7f2ac3	tty_port_raise_dtr_rts	vmlinux	EXPORT_SYMBOL
+0xb7d4fbf1	pci_request_region	vmlinux	EXPORT_SYMBOL
+0x98108fe7	blk_queue_io_opt	vmlinux	EXPORT_SYMBOL
+0xe7a08fdc	bdgrab	vmlinux	EXPORT_SYMBOL
+0xd4c14632	system_unbound_wq	vmlinux	EXPORT_SYMBOL_GPL
+0x40dc45b3	snd_emu10k1_voice_free	sound/pci/emu10k1/snd-emu10k1	EXPORT_SYMBOL
+0x110124a1	ct_sip_parse_request	net/netfilter/nf_conntrack_sip	EXPORT_SYMBOL_GPL
+0x5f98fc32	ath9k_hw_phy_disable	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x8f8f2174	mtd_lock	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0xfa49603e	pcf50633_gpio_set	drivers/mfd/pcf50633-gpio	EXPORT_SYMBOL_GPL
+0x7ec4c4ea	pcf50633_gpio_get	drivers/mfd/pcf50633-gpio	EXPORT_SYMBOL_GPL
+0xe431321d	flexcop_sram_set_dest	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0x4ea1f5a2	drm_gem_object_free	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x55cde958	ata_sff_irq_on	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x3d8f8c9b	kvm_clear_guest_page	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xf11543ff	find_first_zero_bit	vmlinux	EXPORT_SYMBOL
+0x3478c16b	mb_cache_entry_find_first	fs/mbcache	EXPORT_SYMBOL
+0x90699a84	scsi_adjust_queue_depth	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xcc263095	mxl111sf_tuner_attach	drivers/media/dvb/dvb-usb/mxl111sf-tuner	EXPORT_SYMBOL_GPL
+0x87d8c81b	ib_attach_mcast	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x7b49280e	ib_detach_mcast	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x06aff52f	drm_get_edid	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x5fe85ddf	x86_dma_fallback_dev	vmlinux	EXPORT_SYMBOL
+0x95524aaf	snd_hda_spdif_ctls_unassign	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x5bafe9e1	gss_mech_get_by_name	net/sunrpc/auth_gss/auth_rpcgss	EXPORT_SYMBOL_GPL
+0x1a37c7e9	p9_parse_header	net/9p/9pnet	EXPORT_SYMBOL
+0xae5cb1cd	cxgbi_sock_rcv_peer_close	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0x9e33ca8e	ppp_unregister_compressor	drivers/net/ppp/ppp_generic	EXPORT_SYMBOL
+0x95db8e48	i2o_dma_map_single	drivers/message/i2o/i2o_core	EXPORT_SYMBOL_GPL
+0x7dc89419	i2o_pool_alloc	drivers/message/i2o/i2o_core	EXPORT_SYMBOL_GPL
+0x39937aa9	recv_Dchannel_skb	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0x31c24aa4	capi20_isinstalled	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0xdf66ca81	ucode_cpu_info	arch/x86/kernel/microcode	EXPORT_SYMBOL_GPL
+0x9fcfc85e	tcp_unregister_congestion_control	vmlinux	EXPORT_SYMBOL_GPL
+0xbe8a6939	agp_generic_alloc_page	vmlinux	EXPORT_SYMBOL
+0x95a17f0d	acpi_bus_add	vmlinux	EXPORT_SYMBOL
+0x94ed4952	bio_split	vmlinux	EXPORT_SYMBOL
+0x8c60f45d	lock_rename	vmlinux	EXPORT_SYMBOL
+0x06316b07	preempt_notifier_register	vmlinux	EXPORT_SYMBOL_GPL
+0xc577963b	snd_hda_codec_configure	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x596736b0	dccp_set_state	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xf2a46736	cxgbi_destroy_session	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0x2927dc52	v4l2_chip_match_i2c_client	drivers/media/video/v4l2-common	EXPORT_SYMBOL
+0xe9383e3f	i2c_bit_add_bus	drivers/i2c/algos/i2c-algo-bit	EXPORT_SYMBOL
+0x23476a1f	class_destroy	vmlinux	EXPORT_SYMBOL_GPL
+0x8da1a3cb	acpi_remove_interface	vmlinux	EXPORT_SYMBOL
+0x231d4001	fb_edid_add_monspecs	vmlinux	EXPORT_SYMBOL
+0x4b6104dc	pci_pme_active	vmlinux	EXPORT_SYMBOL
+0xed0a58b5	gpiochip_remove	vmlinux	EXPORT_SYMBOL_GPL
+0x8f0b11e6	__locks_copy_lock	vmlinux	EXPORT_SYMBOL
+0x58c9e57e	mutex_lock_killable	vmlinux	EXPORT_SYMBOL
+0x5b812e1a	xdr_inline_decode	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xed2faf8f	__fscache_check_page_write	fs/fscache/fscache	EXPORT_SYMBOL
+0xe137680f	usb_ftdi_elan_edset_single	drivers/usb/misc/ftdi-elan	EXPORT_SYMBOL_GPL
+0x972a0ec8	mlx4_register_vlan	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x780d7165	i2o_device_claim_release	drivers/message/i2o/i2o_core	EXPORT_SYMBOL
+0xea7bf6b9	md_rdev_init	drivers/md/md-mod	EXPORT_SYMBOL_GPL
+0x3909d3a8	dm_bufio_prefetch	drivers/md/dm-bufio	EXPORT_SYMBOL_GPL
+0x71fac33c	fw_iso_buffer_destroy	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0xdde30fc0	ata_bmdma_status	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xde69b2ac	kvm_write_guest_page	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xe409b491	crypto_aes_decrypt_x86	arch/x86/crypto/aes-i586	EXPORT_SYMBOL_GPL
+0xe587b021	tcp_check_req	vmlinux	EXPORT_SYMBOL
+0xedf65c72	netlink_unicast	vmlinux	EXPORT_SYMBOL
+0x5ecd7a29	neigh_sysctl_register	vmlinux	EXPORT_SYMBOL
+0xebfd5bde	snd_gf1_delay	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0x4d12dd79	snd_timer_start	sound/core/snd-timer	EXPORT_SYMBOL
+0x49f7d9df	atrtr_get_dev	net/appletalk/appletalk	EXPORT_SYMBOL
+0x857df09b	usb_serial_generic_read_bulk_callback	drivers/usb/serial/usbserial	EXPORT_SYMBOL_GPL
+0x6d142dff	fc_parse_pr_out_transport_id	drivers/target/target_core_mod	EXPORT_SYMBOL
+0xec393869	i2c_setup_smbus_alert	drivers/i2c/i2c-smbus	EXPORT_SYMBOL_GPL
+0x38d3a66d	drm_mode_attachmode_crtc	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xd85ba1aa	xenbus_dev_probe	vmlinux	EXPORT_SYMBOL_GPL
+0x84060081	xen_poll_irq_timeout	vmlinux	EXPORT_SYMBOL
+0x19ba4a0d	set_nlink	vmlinux	EXPORT_SYMBOL
+0x268cc6a2	sys_close	vmlinux	EXPORT_SYMBOL
+0x30806fd5	kill_pgrp	vmlinux	EXPORT_SYMBOL
+0xd5e8ce76	fat_build_inode	fs/fat/fat	EXPORT_SYMBOL_GPL
+0xc469cc4a	svga_get_tilemax	drivers/video/svgalib	EXPORT_SYMBOL
+0xe1dbe424	mlx4_qp_remove	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x65a1bffe	mptscsih_flush_running_cmds	drivers/message/fusion/mptscsih	EXPORT_SYMBOL
+0x3034f36a	s5h1409_attach	drivers/media/dvb/frontends/s5h1409	EXPORT_SYMBOL
+0xc10fe128	cdebbuf_free	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x3e7833de	device_wakeup_disable	vmlinux	EXPORT_SYMBOL_GPL
+0xa4d4f0e6	global_cache_flush	vmlinux	EXPORT_SYMBOL
+0xd1472061	acpi_pci_register_driver	vmlinux	EXPORT_SYMBOL
+0xde87e491	seq_read	vmlinux	EXPORT_SYMBOL
+0x1c4c4dc3	is_bad_inode	vmlinux	EXPORT_SYMBOL
+0x253bdb78	param_get_int	vmlinux	EXPORT_SYMBOL
+0xc7f97973	snd_hda_codec_write	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xebde69a8	ieee80211_key_removed	net/mac80211/mac80211	EXPORT_SYMBOL_GPL
+0xdcacd991	ath9k_hw_process_rxdesc_edma	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x85bf753f	hdlcdrv_receiver	drivers/net/hamradio/hdlcdrv	EXPORT_SYMBOL
+0xb5665f21	tcf_hash_new_index	vmlinux	EXPORT_SYMBOL
+0x0e35633b	start_tty	vmlinux	EXPORT_SYMBOL
+0x3f84d4c9	gnttab_release_grant_reference	vmlinux	EXPORT_SYMBOL_GPL
+0x6513a3fa	fb_get_color_depth	vmlinux	EXPORT_SYMBOL
+0x7ffc8718	gpio_set_debounce	vmlinux	EXPORT_SYMBOL_GPL
+0xdde59a78	shash_ahash_finup	vmlinux	EXPORT_SYMBOL_GPL
+0xaba1f5ad	user_update	vmlinux	EXPORT_SYMBOL_GPL
+0x6e329af3	snd_pcm_notify	sound/core/snd-pcm	EXPORT_SYMBOL
+0xf097e638	phonet_proto_register	net/phonet/phonet	EXPORT_SYMBOL
+0x01fc07fb	nf_ct_get_tuplepr	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x09e87295	rt2x00mac_remove_interface	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0xe6d4d07c	max2165_attach	drivers/media/common/tuners/max2165	EXPORT_SYMBOL
+0x6d0f1f89	dm_table_get_mode	drivers/md/dm-mod	EXPORT_SYMBOL
+0xe739883c	kvm_read_guest	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x970d6068	skb_free_datagram_locked	vmlinux	EXPORT_SYMBOL
+0xd379c819	kernel_sock_shutdown	vmlinux	EXPORT_SYMBOL
+0x2ca4ebcd	regulator_set_drvdata	vmlinux	EXPORT_SYMBOL_GPL
+0x7415231f	pnp_unregister_card_driver	vmlinux	EXPORT_SYMBOL
+0x64256424	visitor32	vmlinux	EXPORT_SYMBOL_GPL
+0xc00131cf	visitor64	vmlinux	EXPORT_SYMBOL_GPL
+0xeba677bd	posix_acl_chmod	vmlinux	EXPORT_SYMBOL
+0xadaf0523	notify_change	vmlinux	EXPORT_SYMBOL
+0x96ae568f	follow_up	vmlinux	EXPORT_SYMBOL
+0xa577a850	param_get_short	vmlinux	EXPORT_SYMBOL
+0x1b16f0fd	snd_gf1_look8	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0x1052ae36	ieee80211_start_tx_ba_cb_irqsafe	net/mac80211/mac80211	EXPORT_SYMBOL
+0xde4c6b3c	irlmp_service_to_hint	net/irda/irda	EXPORT_SYMBOL
+0x2bb0370f	garp_request_join	net/802/garp	EXPORT_SYMBOL_GPL
+0x6d407536	cxgb4_port_chan	drivers/net/ethernet/chelsio/cxgb4/cxgb4	EXPORT_SYMBOL
+0x2fa4c43b	sm501_set_clock	drivers/mfd/sm501	EXPORT_SYMBOL_GPL
+0x0054f69d	dm_tm_pre_commit	drivers/md/persistent-data/dm-persistent-data	EXPORT_SYMBOL_GPL
+0x72289260	dm_block_manager_destroy	drivers/md/persistent-data/dm-persistent-data	EXPORT_SYMBOL_GPL
+0xcde948da	nf_log_bind_pf	vmlinux	EXPORT_SYMBOL
+0x21e499cd	skb_copy_and_csum_datagram_iovec	vmlinux	EXPORT_SYMBOL
+0x42393c4b	sock_no_ioctl	vmlinux	EXPORT_SYMBOL
+0xc3386346	get_user_pages_fast	vmlinux	EXPORT_SYMBOL_GPL
+0xca85d8cf	tracepoint_probe_update_all	vmlinux	EXPORT_SYMBOL_GPL
+0xbbb98859	edid_info	vmlinux	EXPORT_SYMBOL_GPL
+0x33d7bd95	snd_rawmidi_transmit_ack	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0x34588ff3	nf_conntrack_find_get	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x9b652d20	ieee80211_sta_block_awake	net/mac80211/mac80211	EXPORT_SYMBOL
+0xa87bc9e7	o2nm_configured_node_map	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0xfcb91319	usbip_pack_pdu	drivers/staging/usbip/usbip-core	EXPORT_SYMBOL_GPL
+0x89d1e8e5	scsi_remove_device	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xd34e45fa	mpt_verify_adapter	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0xe8151013	dib8000_i2c_enumeration	drivers/media/dvb/frontends/dib8000	EXPORT_SYMBOL
+0xa6b1949d	md_write_start	drivers/md/md-mod	EXPORT_SYMBOL
+0xa6fcff11	serio_unregister_child_port	vmlinux	EXPORT_SYMBOL
+0x6c4d983c	pci_hp_change_slot_info	vmlinux	EXPORT_SYMBOL_GPL
+0x208687c1	simple_empty	vmlinux	EXPORT_SYMBOL
+0x0143007a	vm_mmap	vmlinux	EXPORT_SYMBOL
+0x79df182f	shmem_read_mapping_page_gfp	vmlinux	EXPORT_SYMBOL_GPL
+0x16c57b0c	unregister_jprobes	vmlinux	EXPORT_SYMBOL_GPL
+0x8a9e5bfe	snd_gf1_alloc_voice	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0xdedd809a	nf_nat_sip_expect_hook	net/netfilter/nf_conntrack_sip	EXPORT_SYMBOL_GPL
+0xcebd717e	dccp_make_response	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x0556218c	journal_lock_updates	fs/jbd/jbd	EXPORT_SYMBOL
+0x33bb0fb8	fuse_file_poll	fs/fuse/fuse	EXPORT_SYMBOL_GPL
+0x70cf032f	usb_hcd_irq	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x47987908	__lbs_cmd	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0xae6ef0ed	hid_disconnect	drivers/hid/hid	EXPORT_SYMBOL_GPL
+0x6298d92f	__hid_register_driver	drivers/hid/hid	EXPORT_SYMBOL_GPL
+0xecf73767	bcma_chipco_gpio_control	drivers/bcma/bcma	EXPORT_SYMBOL_GPL
+0x660069a3	xfrm_cfg_mutex	vmlinux	EXPORT_SYMBOL
+0x00c80113	__sk_mem_schedule	vmlinux	EXPORT_SYMBOL
+0x0897287b	acpi_disable_all_gpes	vmlinux	EXPORT_SYMBOL
+0x231dfc90	__pci_register_driver	vmlinux	EXPORT_SYMBOL
+0xcde172ac	radix_tree_gang_lookup_tag_slot	vmlinux	EXPORT_SYMBOL
+0x40db753c	blk_queue_merge_bvec	vmlinux	EXPORT_SYMBOL
+0x165109b0	mnt_want_write_file	vmlinux	EXPORT_SYMBOL_GPL
+0x2c6a0410	xen_set_domain_pte	vmlinux	EXPORT_SYMBOL_GPL
+0x3abec91f	ceph_pr_addr	net/ceph/libceph	EXPORT_SYMBOL
+0xee134658	hci_register_cb	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x21f78dae	umc_match_pci_id	drivers/uwb/umc	EXPORT_SYMBOL_GPL
+0xf59eadf3	ath9k_cmn_padpos	drivers/net/wireless/ath/ath9k/ath9k_common	EXPORT_SYMBOL
+0xc8ab91e8	dm_snap_cow	drivers/md/dm-snapshot	EXPORT_SYMBOL
+0x095b16ef	ahci_fill_cmd_slot	drivers/ata/libahci	EXPORT_SYMBOL_GPL
+0x1dc17bab	ip_ct_attach	vmlinux	EXPORT_SYMBOL
+0x7bcc87d4	dev_set_mtu	vmlinux	EXPORT_SYMBOL
+0x202671d5	crypto_unregister_template	vmlinux	EXPORT_SYMBOL_GPL
+0x2deda4a1	security_sk_classify_flow	vmlinux	EXPORT_SYMBOL
+0x0eff1957	bd_link_disk_holder	vmlinux	EXPORT_SYMBOL_GPL
+0x3dc90d14	snd_hda_codec_setup_stream	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x38cd190f	wimax_state_get	net/wimax/wimax	EXPORT_SYMBOL_GPL
+0x2919b156	xdr_decode_string_inplace	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x2ea14e05	fscache_cache_cleared_wq	fs/fscache/fscache	EXPORT_SYMBOL
+0x21400bdd	ath9k_hw_gettsf32	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xf26d941d	vmbus_open	drivers/hv/hv_vmbus	EXPORT_SYMBOL_GPL
+0x013fbdac	cs5535_gpio_set	drivers/gpio/gpio-cs5535	EXPORT_SYMBOL_GPL
+0x565b6892	uuid_le_gen	vmlinux	EXPORT_SYMBOL_GPL
+0x436c4d6c	query_amp_caps	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x899c2538	svc_seq_show	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x84751974	ore_put_io_state	fs/exofs/libore	EXPORT_SYMBOL
+0x44e75af2	fc_vport_create	drivers/scsi/scsi_transport_fc	EXPORT_SYMBOL
+0x462187e9	scsi_free_host_dev	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x797bfb33	rt2x00pci_suspend	drivers/net/wireless/rt2x00/rt2x00pci	EXPORT_SYMBOL_GPL
+0xe471d6e6	rt2800_config_pairwise_key	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0x942c833b	ath_key_delete	drivers/net/wireless/ath/ath	EXPORT_SYMBOL
+0xcf68e18d	ttpci_budget_init	drivers/media/dvb/ttpci/budget-core	EXPORT_SYMBOL_GPL
+0xf2bb017b	vmbus_close	drivers/hv/hv_vmbus	EXPORT_SYMBOL_GPL
+0xaaef1da8	tcp_md5_hash_header	vmlinux	EXPORT_SYMBOL
+0x0b4326fd	driver_register	vmlinux	EXPORT_SYMBOL_GPL
+0xd0fef3b2	agp_free_key	vmlinux	EXPORT_SYMBOL
+0x49c50fef	pnp_device_detach	vmlinux	EXPORT_SYMBOL
+0x60b2e38a	rwsem_down_write_failed	vmlinux	EXPORT_SYMBOL
+0x412a331d	should_remove_suid	vmlinux	EXPORT_SYMBOL
+0xfc59c333	snd_wss_timer	sound/isa/wss/snd-wss-lib	EXPORT_SYMBOL
+0x3e606ec3	osd_req_decode_sense_full	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0x630ff0e8	fc_lport_destroy	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0xf99dc2cf	dm_btree_del	drivers/md/persistent-data/dm-persistent-data	EXPORT_SYMBOL_GPL
+0x6057c6f3	capi_message2cmsg	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x00ebcb5d	ata_id_string	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xee63fd8e	input_ff_create	vmlinux	EXPORT_SYMBOL_GPL
+0x27828d02	device_destroy	vmlinux	EXPORT_SYMBOL_GPL
+0xd6499ed9	find_lock_page	vmlinux	EXPORT_SYMBOL
+0xaab142e9	srcu_notifier_chain_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0xcd8761ec	wiphy_register	net/wireless/cfg80211	EXPORT_SYMBOL
+0x6e4adb1e	svga_check_timings	drivers/video/svgalib	EXPORT_SYMBOL
+0x8368d085	usb_wwan_chars_in_buffer	drivers/usb/serial/usb_wwan	EXPORT_SYMBOL
+0xba30ab4e	il_force_reset	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x319c6026	ath_is_49ghz_allowed	drivers/net/wireless/ath/ath	EXPORT_SYMBOL
+0x1986a49e	mfd_cell_disable	drivers/mfd/mfd-core	EXPORT_SYMBOL
+0xc03c04fa	videobuf_to_vmalloc	drivers/media/video/videobuf-vmalloc	EXPORT_SYMBOL_GPL
+0xe4c85ad8	unregister_pernet_device	vmlinux	EXPORT_SYMBOL_GPL
+0x92f93148	input_ff_destroy	vmlinux	EXPORT_SYMBOL_GPL
+0xe5fc371e	platform_get_irq_byname	vmlinux	EXPORT_SYMBOL_GPL
+0x3a013b7d	remove_wait_queue	vmlinux	EXPORT_SYMBOL
+0x4845c423	param_array_ops	vmlinux	EXPORT_SYMBOL
+0xba0e2261	nf_nat_sdp_addr_hook	net/netfilter/nf_conntrack_sip	EXPORT_SYMBOL_GPL
+0x367bba3e	ceph_copy_from_page_vector	net/ceph/libceph	EXPORT_SYMBOL
+0xd68365c2	iscsi_tcp_set_max_r2t	drivers/scsi/libiscsi_tcp	EXPORT_SYMBOL_GPL
+0x49dc2bf3	iscsi_conn_queue_work	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0xc86e4698	mtd_get_unmapped_area	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0x890d2592	v4l2_event_unsubscribe	drivers/media/video/videodev	EXPORT_SYMBOL_GPL
+0xae703216	ib_send_cm_sidr_req	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0x16480ac2	ib_send_cm_sidr_rep	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0xaad98f3f	napi_get_frags	vmlinux	EXPORT_SYMBOL
+0xb2f5cecc	sk_stream_write_space	vmlinux	EXPORT_SYMBOL
+0xebf82e5d	scsi_verify_blk_ioctl	vmlinux	EXPORT_SYMBOL
+0x2c65c3b4	sysfs_notify_dirent	vmlinux	EXPORT_SYMBOL_GPL
+0x900c178d	kill_bdev	vmlinux	EXPORT_SYMBOL
+0x2be7fb8e	disable_kprobe	vmlinux	EXPORT_SYMBOL_GPL
+0x61ff2666	wimax_rfkill	net/wimax/wimax	EXPORT_SYMBOL
+0x8d714f14	ieee80211_beacon_get_tim	net/mac80211/mac80211	EXPORT_SYMBOL
+0xd332de5c	phy_register_fixup_for_id	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x214197da	add_mtd_blktrans_dev	drivers/mtd/mtd_blkdevs	EXPORT_SYMBOL_GPL
+0x513b5934	videobuf_dvb_unregister_bus	drivers/media/video/videobuf-dvb	EXPORT_SYMBOL
+0x838aa57e	dib7090_get_i2c_tuner	drivers/media/dvb/frontends/dib7000p	EXPORT_SYMBOL
+0x97e71c52	dib7090_get_adc_power	drivers/media/dvb/frontends/dib7000p	EXPORT_SYMBOL
+0xda50b766	dvb_generic_ioctl	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0xa23d7eec	ipv6_dup_options	vmlinux	EXPORT_SYMBOL_GPL
+0xa9c1b627	intel_gtt_insert_sg_entries	vmlinux	EXPORT_SYMBOL
+0xc98a6890	sys_copyarea	vmlinux	EXPORT_SYMBOL
+0x5d80af92	cgroup_attach_task_all	vmlinux	EXPORT_SYMBOL_GPL
+0xbbcd7f10	rxrpc_kernel_get_error_number	net/rxrpc/af-rxrpc	EXPORT_SYMBOL
+0x49c84718	subdev_700_init	drivers/staging/comedi/drivers/ni_daq_700	EXPORT_SYMBOL
+0x9affcf58	ath_hw_setbssidmask	drivers/net/wireless/ath/ath	EXPORT_SYMBOL
+0xccb3423a	drm_fasync	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x485cd7f6	kvm_rebooting	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x8e002cda	acpi_remove_gpe_block	vmlinux	EXPORT_SYMBOL
+0x7d51f34e	first_ec	vmlinux	EXPORT_SYMBOL
+0x842e87c6	zap_vma_ptes	vmlinux	EXPORT_SYMBOL_GPL
+0xab65ed80	set_memory_uc	vmlinux	EXPORT_SYMBOL
+0x618bdbd6	rpc_init_priority_wait_queue	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x6e6b8680	ceph_osdc_create_event	net/ceph/libceph	EXPORT_SYMBOL
+0x7e275ea8	scsi_complete_async_scans	drivers/scsi/scsi_mod	EXPORT_SYMBOL_GPL
+0x79bd55bb	vb2_dqbuf	drivers/media/video/videobuf2-core	EXPORT_SYMBOL_GPL
+0x8646c154	i2c_smbus_write_word_data	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x6687320e	vmbus_sendpacket_pagebuffer	drivers/hv/hv_vmbus	EXPORT_SYMBOL_GPL
+0x48588afb	fw_card_add	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0xeb25d6ad	ata_bmdma_port_start	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xf6464980	ahci_em_messages	drivers/ata/libahci	EXPORT_SYMBOL_GPL
+0x15dc744b	xfrm_policy_bysel_ctx	vmlinux	EXPORT_SYMBOL
+0x9efa01bf	tcp_sendmsg	vmlinux	EXPORT_SYMBOL
+0x04cafa66	elv_rb_add	vmlinux	EXPORT_SYMBOL
+0xafde0c71	elv_rb_del	vmlinux	EXPORT_SYMBOL
+0x29939313	init_user_ns	vmlinux	EXPORT_SYMBOL_GPL
+0x059b18af	wpan_phy_free	net/ieee802154/ieee802154	EXPORT_SYMBOL
+0xf770a6b4	wusbd	drivers/usb/wusbcore/wusbcore	EXPORT_SYMBOL_GPL
+0x29f8f9eb	ath9k_hw_gettsf64	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xa09a7bd2	ath9k_hw_settsf64	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x3a07ee6c	mptscsih_is_phys_disk	drivers/message/fusion/mptscsih	EXPORT_SYMBOL
+0x9e04bf5e	mptscsih_qcmd	drivers/message/fusion/mptscsih	EXPORT_SYMBOL
+0x31572a27	drm_pci_init	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x2b64385f	drm_pci_exit	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x685097b8	kvm_write_tsc	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x8fc3d4ab	netif_skb_features	vmlinux	EXPORT_SYMBOL
+0x97da8ef6	sock_map_fd	vmlinux	EXPORT_SYMBOL
+0x7b9a6116	intel_agp_enabled	vmlinux	EXPORT_SYMBOL
+0x00632780	work_busy	vmlinux	EXPORT_SYMBOL_GPL
+0xd4babeb3	snd_util_mem_avail	sound/synth/snd-util-mem	EXPORT_SYMBOL
+0xa6cc8c0c	dccp_disconnect	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xcb795bde	gspca_dev_probe2	drivers/media/video/gspca/gspca_main	EXPORT_SYMBOL
+0x6bdb8638	ib_sa_get_mcmember_rec	drivers/infiniband/core/ib_sa	EXPORT_SYMBOL
+0x837922a1	find_mci_by_dev	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x7e946895	__sk_mem_reclaim	vmlinux	EXPORT_SYMBOL
+0x5e1ee803	pcim_pin_device	vmlinux	EXPORT_SYMBOL
+0xcdf38957	pci_cfg_access_lock	vmlinux	EXPORT_SYMBOL_GPL
+0x80aec6a8	d_prune_aliases	vmlinux	EXPORT_SYMBOL
+0x12a38747	usleep_range	vmlinux	EXPORT_SYMBOL
+0xb0ec8c44	gameport_open	drivers/input/gameport/gameport	EXPORT_SYMBOL
+0x58f8a23a	tcf_hash_check	vmlinux	EXPORT_SYMBOL
+0xa43b9539	memcpy_fromiovecend	vmlinux	EXPORT_SYMBOL
+0xf912e541	blk_make_request	vmlinux	EXPORT_SYMBOL
+0xc1af9a93	__pagevec_release	vmlinux	EXPORT_SYMBOL
+0x1e047854	warn_slowpath_fmt	vmlinux	EXPORT_SYMBOL
+0x6e65f2dc	rtc_lock	vmlinux	EXPORT_SYMBOL
+0x524ce840	cfg80211_cqm_rssi_notify	net/wireless/cfg80211	EXPORT_SYMBOL
+0x7e04a3af	cache_register_net	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xf1a5611d	o2net_unregister_handler_list	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0xdd23feca	usb_autopm_put_interface	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x0e81c76d	spk_serial_out	drivers/staging/speakup/speakup	EXPORT_SYMBOL_GPL
+0x2fa10a16	videobuf_read_start	drivers/media/video/videobuf-core	EXPORT_SYMBOL_GPL
+0xe6732024	smscore_register_hotplug	drivers/media/dvb/siano/smsmdtv	EXPORT_SYMBOL_GPL
+0xa7698cbd	hid_unregister_driver	drivers/hid/hid	EXPORT_SYMBOL_GPL
+0x369e43a4	pcie_set_readrq	vmlinux	EXPORT_SYMBOL
+0x1ec83668	pcie_bus_configure_settings	vmlinux	EXPORT_SYMBOL_GPL
+0xc946b975	nla_reserve_nohdr	vmlinux	EXPORT_SYMBOL
+0x7c62fc12	securityfs_create_file	vmlinux	EXPORT_SYMBOL_GPL
+0x3be00862	exportfs_encode_fh	vmlinux	EXPORT_SYMBOL_GPL
+0x76e306ac	ilookup5	vmlinux	EXPORT_SYMBOL
+0x1650bf27	rcutorture_record_progress	vmlinux	EXPORT_SYMBOL_GPL
+0xf1faac3a	_raw_spin_lock_irq	vmlinux	EXPORT_SYMBOL
+0x85c2e9b0	prepare_creds	vmlinux	EXPORT_SYMBOL
+0xfd1e1e6e	mutex_unlock	vmlinux	EXPORT_SYMBOL
+0xcb301b6e	snd_hda_get_jack_type	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xf32491d6	snd_dma_reserve_buf	sound/core/snd-page-alloc	EXPORT_SYMBOL
+0xcba95d66	journal_release_buffer	fs/jbd/jbd	EXPORT_SYMBOL
+0xa7131300	transport_subsystem_release	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x68d733ae	il_get_channel_info	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x02a9f6d2	ath9k_hw_init_global_settings	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x63d9cd7b	alloc_can_skb	drivers/net/can/can-dev	EXPORT_SYMBOL_GPL
+0x269e5926	drm_unplug_dev	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xd00bcaac	__tracepoint_kvm_nested_vmrun	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x6bd47d61	genl_register_family_with_ops	vmlinux	EXPORT_SYMBOL
+0xdc5a7195	dev_addr_flush	vmlinux	EXPORT_SYMBOL
+0x83a476ce	bitmap_scnlistprintf	vmlinux	EXPORT_SYMBOL
+0x7e066758	dquot_quota_sync	vmlinux	EXPORT_SYMBOL
+0x4ccfe547	wiphy_rfkill_set_hw_state	net/wireless/cfg80211	EXPORT_SYMBOL
+0x410e2bd1	sunrpc_cache_pipe_upcall	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xc887aef4	osduld_device_same	drivers/scsi/osd/osd	EXPORT_SYMBOL
+0x2592f169	mlx4_cq_resize	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x6534792a	arcnet_debug	drivers/net/arcnet/arcnet	EXPORT_SYMBOL
+0x3754f46d	acpi_enter_sleep_state	vmlinux	EXPORT_SYMBOL
+0x6bee1223	blkdev_get_by_dev	vmlinux	EXPORT_SYMBOL
+0xd89da37f	movable_zone	vmlinux	EXPORT_SYMBOL
+0xd87601cc	ring_buffer_unlock_commit	vmlinux	EXPORT_SYMBOL_GPL
+0x5b9965c1	il_add_station_common	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x51e5d4f4	rc_allocate_device	drivers/media/rc/rc-core	EXPORT_SYMBOL_GPL
+0xdbd019c4	ib_wq	drivers/infiniband/core/ib_core	EXPORT_SYMBOL_GPL
+0x18ecfc9b	simple_fill_super	vmlinux	EXPORT_SYMBOL
+0xb7034a67	have_submounts	vmlinux	EXPORT_SYMBOL
+0x07cc4a5d	printk_timed_ratelimit	vmlinux	EXPORT_SYMBOL
+0x7d7f6435	snd_add_device_sysfs_file	sound/core/snd	EXPORT_SYMBOL
+0x6b043eba	irda_init_max_qos_capabilies	net/irda/irda	EXPORT_SYMBOL
+0xd6c04af2	pnfs_register_layoutdriver	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0x3d60f25b	ore_truncate	fs/exofs/libore	EXPORT_SYMBOL
+0x09a7f1ae	cxgbi_ddp_init	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0x3a18389a	dm_rh_update_states	drivers/md/dm-region-hash	EXPORT_SYMBOL_GPL
+0xda700c67	sock_queue_err_skb	vmlinux	EXPORT_SYMBOL
+0xe6ebc016	key_create_or_update	vmlinux	EXPORT_SYMBOL
+0x1f8db7f9	ring_buffer_overrun_cpu	vmlinux	EXPORT_SYMBOL_GPL
+0x0faef0ed	__tasklet_schedule	vmlinux	EXPORT_SYMBOL
+0x5ef826d9	xprt_adjust_cwnd	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x3b0a2ab6	irias_find_object	net/irda/irda	EXPORT_SYMBOL
+0x34a64292	ceph_messenger_init	net/ceph/libceph	EXPORT_SYMBOL
+0xe9d6b1fd	pcmcia_write_config_byte	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0x88f4375f	rc_keydown	drivers/media/rc/rc-core	EXPORT_SYMBOL_GPL
+0xc37ec601	saa7146_unregister_extension	drivers/media/common/saa7146	EXPORT_SYMBOL_GPL
+0x6772d7d3	ib_process_mad_wc	drivers/infiniband/core/ib_mad	EXPORT_SYMBOL
+0xf4f14de6	rtnl_trylock	vmlinux	EXPORT_SYMBOL
+0xdf791fe3	dev_load	vmlinux	EXPORT_SYMBOL
+0xac0ba8c1	blk_iopoll_disable	vmlinux	EXPORT_SYMBOL
+0x30a15cd7	debugfs_create_u16	vmlinux	EXPORT_SYMBOL_GPL
+0xc3686e33	bio_add_page	vmlinux	EXPORT_SYMBOL
+0x4860d6f0	init_pid_ns	vmlinux	EXPORT_SYMBOL_GPL
+0x7e9ebb05	kernel_thread	vmlinux	EXPORT_SYMBOL
+0xc2a010bd	ipt_unregister_table	net/ipv4/netfilter/ip_tables	EXPORT_SYMBOL
+0xe0412a81	usb_wwan_write	drivers/usb/serial/usb_wwan	EXPORT_SYMBOL
+0x803fd0c1	usb_unlink_anchored_urbs	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x14f06fe7	spk_serial_in_nowait	drivers/staging/speakup/speakup	EXPORT_SYMBOL_GPL
+0x73d417bf	rt2x00mac_conf_tx	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x99e697d8	ath9k_hw_getchan_noise	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xf6fd8463	mptscsih_slave_destroy	drivers/message/fusion/mptscsih	EXPORT_SYMBOL
+0x316054a4	vb2_buffer_done	drivers/media/video/videobuf2-core	EXPORT_SYMBOL_GPL
+0x40f2b10c	ipmi_alloc_smi_msg	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0x30226ddf	agp_device_command	vmlinux	EXPORT_SYMBOL
+0x724a36b4	fb_bl_default_curve	vmlinux	EXPORT_SYMBOL_GPL
+0x77ecac9f	zlib_inflateEnd	vmlinux	EXPORT_SYMBOL
+0xf9a02bcc	contig_page_data	vmlinux	EXPORT_SYMBOL
+0x6ea09972	snd_midi_channel_alloc_set	sound/core/seq/snd-seq-midi-emul	EXPORT_SYMBOL
+0xa7439d90	xt_unregister_target	net/netfilter/x_tables	EXPORT_SYMBOL
+0xd39e11b8	p9_client_getlock_dotl	net/9p/9pnet	EXPORT_SYMBOL
+0x0eb3e981	hostap_add_interface	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x5bb1246d	cxgb3_register_client	drivers/net/ethernet/chelsio/cxgb3/cxgb3	EXPORT_SYMBOL
+0x16fb6cf9	flexcop_device_kfree	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0x32120e74	inet_frag_evictor	vmlinux	EXPORT_SYMBOL
+0x9c7ec569	led_trigger_show	vmlinux	EXPORT_SYMBOL_GPL
+0xb423dba1	console_blanked	vmlinux	EXPORT_SYMBOL
+0x4cab21fa	pci_bus_add_device	vmlinux	EXPORT_SYMBOL_GPL
+0xb72fc265	oxygen_write_i2c	sound/pci/oxygen/snd-oxygen-lib	EXPORT_SYMBOL
+0x4ac9f260	fw_iso_resources_free	sound/firewire/snd-firewire-lib	EXPORT_SYMBOL
+0x4fb39646	ieee80211_start_tx_ba_session	net/mac80211/mac80211	EXPORT_SYMBOL
+0x49ab5314	ax25_findbyuid	net/ax25/ax25	EXPORT_SYMBOL
+0x258524b2	config_group_init_type_name	fs/configfs/configfs	EXPORT_SYMBOL
+0x16b3097f	cxgb4_register_uld	drivers/net/ethernet/chelsio/cxgb4/cxgb4	EXPORT_SYMBOL
+0x6a8cd2cf	v4l2_fh_is_singular	drivers/media/video/videodev	EXPORT_SYMBOL_GPL
+0x370060d7	gigaset_freedriver	drivers/isdn/gigaset/gigaset	EXPORT_SYMBOL_GPL
+0x71eae6ac	nforce2_smbus	drivers/i2c/busses/i2c-nforce2	EXPORT_SYMBOL_GPL
+0x8417f512	acpi_update_all_gpes	vmlinux	EXPORT_SYMBOL
+0x23679939	__iowrite32_copy	vmlinux	EXPORT_SYMBOL_GPL
+0x2fc52db5	xdr_enter_page	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xc6bb59a1	ct_sip_parse_address_param	net/netfilter/nf_conntrack_sip	EXPORT_SYMBOL_GPL
+0x821c0f91	nf_conntrack_unregister_notifier	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x84f84d82	ssb_pcicore_dev_irqvecs_enable	drivers/ssb/ssb	EXPORT_SYMBOL
+0x9f705e93	iscsi_create_conn	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0x7fb1a2ae	rndis_rx_fixup	drivers/net/usb/rndis_host	EXPORT_SYMBOL_GPL
+0x44408971	pcf50633_reg_write	drivers/mfd/pcf50633	EXPORT_SYMBOL_GPL
+0xfcade1f1	cx231xx_capture_start	drivers/media/video/cx231xx/cx231xx	EXPORT_SYMBOL_GPL
+0x27af48fe	ttm_bo_mem_space	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0xdc890abd	ata_do_eh	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x5a5eec67	fib_rules_register	vmlinux	EXPORT_SYMBOL_GPL
+0x612390ad	netpoll_set_trap	vmlinux	EXPORT_SYMBOL
+0x1cedac13	intel_gtt_get	vmlinux	EXPORT_SYMBOL
+0xfaf98462	bitrev32	vmlinux	EXPORT_SYMBOL
+0x2e18b231	simple_transaction_read	vmlinux	EXPORT_SYMBOL
+0x8a99a016	mempool_free_slab	vmlinux	EXPORT_SYMBOL
+0xe384a102	usb_speed_string	drivers/usb/usb-common	EXPORT_SYMBOL_GPL
+0x15c556a8	qlogicfas408_bus_reset	drivers/scsi/qlogicfas408	EXPORT_SYMBOL
+0xafaf2edf	mlx4_write_mtt	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x37d91069	smsendian_handle_tx_message	drivers/media/dvb/siano/smsmdtv	EXPORT_SYMBOL_GPL
+0x45284ae9	smsendian_handle_rx_message	drivers/media/dvb/siano/smsmdtv	EXPORT_SYMBOL_GPL
+0x6d3f57bd	dm_bufio_get_client	drivers/md/dm-bufio	EXPORT_SYMBOL_GPL
+0x60c66bdf	gigaset_skb_sent	drivers/isdn/gigaset/gigaset	EXPORT_SYMBOL_GPL
+0x694b6a81	pm_generic_thaw	vmlinux	EXPORT_SYMBOL_GPL
+0xd7b8454f	pm_generic_resume_early	vmlinux	EXPORT_SYMBOL_GPL
+0x27ae7d0c	ec_transaction	vmlinux	EXPORT_SYMBOL
+0x06e0a480	pci_scan_slot	vmlinux	EXPORT_SYMBOL
+0xe3470929	generic_getxattr	vmlinux	EXPORT_SYMBOL
+0xbe043fd8	generic_setxattr	vmlinux	EXPORT_SYMBOL
+0x16541c48	cfg80211_connect_result	net/wireless/cfg80211	EXPORT_SYMBOL
+0x5fd1a1ab	gss_mech_register	net/sunrpc/auth_gss/auth_rpcgss	EXPORT_SYMBOL_GPL
+0xadf3b7b5	jbd2_journal_set_features	fs/jbd2/jbd2	EXPORT_SYMBOL
+0x5259c170	mite_get_status	drivers/staging/comedi/drivers/mite	EXPORT_SYMBOL
+0xae9297f6	usbnet_start_xmit	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0xc8c6ccb5	processors	drivers/acpi/processor	EXPORT_SYMBOL
+0x2847fdc9	__pm_runtime_resume	vmlinux	EXPORT_SYMBOL_GPL
+0x715444ce	mpage_readpages	vmlinux	EXPORT_SYMBOL
+0xf5285a10	filter_match_preds	vmlinux	EXPORT_SYMBOL_GPL
+0xa0064861	iscsi_conn_get_param	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0xc4dad918	saa7146_pgtable_free	drivers/media/common/saa7146	EXPORT_SYMBOL_GPL
+0xb580246e	i2c_unlock_adapter	drivers/i2c/i2c-core	EXPORT_SYMBOL_GPL
+0x1a10c898	ipmi_set_maintenance_mode	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0x457ffddf	regmap_raw_read	vmlinux	EXPORT_SYMBOL_GPL
+0x86623fd7	notify_remote_via_irq	vmlinux	EXPORT_SYMBOL_GPL
+0xb758b225	acpi_disable_event	vmlinux	EXPORT_SYMBOL
+0xd5a72bed	pci_request_regions	vmlinux	EXPORT_SYMBOL
+0x4df119fa	__bitmap_parse	vmlinux	EXPORT_SYMBOL
+0x67626e93	__wait_on_buffer	vmlinux	EXPORT_SYMBOL
+0x6baae653	cancel_delayed_work_sync	vmlinux	EXPORT_SYMBOL
+0xdfaef211	usb_serial_handle_sysrq_char	drivers/usb/serial/usbserial	EXPORT_SYMBOL_GPL
+0x4eff5a30	rt2x00pci_remove	drivers/net/wireless/rt2x00/rt2x00pci	EXPORT_SYMBOL_GPL
+0x226dd607	rt2x00pci_resume	drivers/net/wireless/rt2x00/rt2x00pci	EXPORT_SYMBOL_GPL
+0xcd5b7c8f	ath9k_hw_abort_tx_dma	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xad84bef8	dm_table_event	drivers/md/dm-mod	EXPORT_SYMBOL
+0x97f83edf	ad7879_remove	drivers/input/touchscreen/ad7879	EXPORT_SYMBOL
+0x743a165e	ata_pack_xfermask	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xa44748de	sock_create	vmlinux	EXPORT_SYMBOL
+0x341321e5	class_dev_iter_next	vmlinux	EXPORT_SYMBOL_GPL
+0x30dcecd2	debugfs_create_x32	vmlinux	EXPORT_SYMBOL_GPL
+0x3ed4cb9b	bprm_change_interp	vmlinux	EXPORT_SYMBOL
+0x00f31cd7	kill_litter_super	vmlinux	EXPORT_SYMBOL
+0x7ac2f329	snd_seq_expand_var_event	sound/core/seq/snd-seq	EXPORT_SYMBOL
+0xa8e8efff	ip_vs_conn_new	net/netfilter/ipvs/ip_vs	EXPORT_SYMBOL
+0x6391cf6f	__fscache_read_or_alloc_page	fs/fscache/fscache	EXPORT_SYMBOL
+0xffcc0e7b	mb862xxfb_init_accel	drivers/video/mb862xx/mb862xxfb	EXPORT_SYMBOL
+0xa4b9ccf4	usb_free_urb	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xaf409cf6	comedi_buf_read_free	drivers/staging/comedi/comedi	EXPORT_SYMBOL
+0xdc7161b7	mwifiex_process_sleep_confirm_resp	drivers/net/wireless/mwifiex/mwifiex	EXPORT_SYMBOL_GPL
+0x3165050f	dm_region_hash_create	drivers/md/dm-region-hash	EXPORT_SYMBOL_GPL
+0x7b6b9070	inet_proto_csum_replace4	vmlinux	EXPORT_SYMBOL
+0xb668bae0	neigh_direct_output	vmlinux	EXPORT_SYMBOL
+0x8b295fe2	agp_generic_enable	vmlinux	EXPORT_SYMBOL
+0xc571fe15	tty_prepare_flip_string	vmlinux	EXPORT_SYMBOL_GPL
+0x74fb30da	tty_prepare_flip_string_flags	vmlinux	EXPORT_SYMBOL_GPL
+0xfdbe0288	pci_add_resource_offset	vmlinux	EXPORT_SYMBOL
+0xf1216c75	prandom32	vmlinux	EXPORT_SYMBOL
+0x29e0d99e	blk_rq_check_limits	vmlinux	EXPORT_SYMBOL_GPL
+0x75bda77a	seq_hlist_next	vmlinux	EXPORT_SYMBOL
+0x0bff9fcd	account_page_dirtied	vmlinux	EXPORT_SYMBOL
+0x8cecd32f	__lock_page_killable	vmlinux	EXPORT_SYMBOL_GPL
+0x5bb1e117	sony_pic_camera_command	drivers/platform/x86/sony-laptop	EXPORT_SYMBOL
+0x87a3dcd2	cdrom_number_of_slots	drivers/cdrom/cdrom	EXPORT_SYMBOL
+0xa1cd293e	fib_rules_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x1adb3095	skb_copy_bits	vmlinux	EXPORT_SYMBOL
+0x35cebec6	agp_generic_alloc_pages	vmlinux	EXPORT_SYMBOL
+0x189868d7	get_random_bytes_arch	vmlinux	EXPORT_SYMBOL
+0x3955281c	pcim_iomap	vmlinux	EXPORT_SYMBOL
+0xd132ed10	__blk_end_request_all	vmlinux	EXPORT_SYMBOL
+0x7f7c10cd	crypto_register_ahash	vmlinux	EXPORT_SYMBOL_GPL
+0x691cbab6	sysfs_remove_link	vmlinux	EXPORT_SYMBOL_GPL
+0x8924eb1e	rcu_force_quiescent_state	vmlinux	EXPORT_SYMBOL_GPL
+0xd6db1bce	snd_akm4xxx_build_controls	sound/i2c/other/snd-ak4xxx-adda	EXPORT_SYMBOL
+0xa293f8a6	ip_set_get_ipaddr4	net/netfilter/ipset/ip_set	EXPORT_SYMBOL_GPL
+0x9e98722b	ip_set_get_ipaddr6	net/netfilter/ipset/ip_set	EXPORT_SYMBOL_GPL
+0x04e04753	ceph_osdc_unregister_linger_request	net/ceph/libceph	EXPORT_SYMBOL
+0x4d57ae3c	uwb_rsv_type_str	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0x15228452	mii_check_gmii_support	drivers/net/mii	EXPORT_SYMBOL
+0x7ab1dea1	mptscsih_taskmgmt_response_code	drivers/message/fusion/mptscsih	EXPORT_SYMBOL
+0x89019030	ib_free_send_mad	drivers/infiniband/core/ib_mad	EXPORT_SYMBOL
+0x17256916	ata_ehi_clear_desc	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x1646a351	kvm_release_page_dirty	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xb27477ac	tcp_make_synack	vmlinux	EXPORT_SYMBOL
+0x93acfb59	dma_async_device_register	vmlinux	EXPORT_SYMBOL
+0x90c6fc47	find_get_page	vmlinux	EXPORT_SYMBOL
+0x7d59dd46	pm_wq	vmlinux	EXPORT_SYMBOL_GPL
+0x22e85e41	hrtimer_forward	vmlinux	EXPORT_SYMBOL_GPL
+0x7114a71f	bit_waitqueue	vmlinux	EXPORT_SYMBOL
+0x377f0a50	snd_sbmixer_write	sound/isa/sb/snd-sb-common	EXPORT_SYMBOL
+0xa58ecdc3	sl811h_driver	drivers/usb/host/sl811-hcd	EXPORT_SYMBOL
+0x15441df8	ptp_clock_register	drivers/ptp/ptp	EXPORT_SYMBOL
+0x6f18a898	p54_parse_eeprom	drivers/net/wireless/p54/p54common	EXPORT_SYMBOL_GPL
+0xb3590788	__video_register_device	drivers/media/video/videodev	EXPORT_SYMBOL
+0x96ffa148	sms_board_setup	drivers/media/dvb/siano/smsmdtv	EXPORT_SYMBOL_GPL
+0x7121b833	amd_decode_nb_mce	drivers/edac/edac_mce_amd	EXPORT_SYMBOL_GPL
+0x18aad453	ata_wait_register	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xa6490fa8	sock_common_recvmsg	vmlinux	EXPORT_SYMBOL
+0x534b6f18	cyber2000fb_disable_extregs	drivers/video/cyber2000fb	EXPORT_SYMBOL
+0x20f1671c	wa_urb_enqueue	drivers/usb/wusbcore/wusb-wa	EXPORT_SYMBOL_GPL
+0xad12c7bd	wa_urb_dequeue	drivers/usb/wusbcore/wusb-wa	EXPORT_SYMBOL_GPL
+0x0560655b	Dot11d_Init	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0xf22c83c9	rt2x00usb_clear_entry	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0xffd9993d	vb2_write	drivers/media/video/videobuf2-core	EXPORT_SYMBOL_GPL
+0x9af8170a	md_stop_writes	drivers/md/md-mod	EXPORT_SYMBOL_GPL
+0x8b619423	inet_csk_addr2sockaddr	vmlinux	EXPORT_SYMBOL_GPL
+0xeda0d76e	gen_estimator_active	vmlinux	EXPORT_SYMBOL
+0x8251bcc3	bitmap_release_region	vmlinux	EXPORT_SYMBOL
+0x7054a3e4	request_dma	vmlinux	EXPORT_SYMBOL
+0x5567c227	kernel_cpustat	vmlinux	EXPORT_SYMBOL
+0xaa75a06d	snd_mpu401_uart_new	sound/drivers/mpu401/snd-mpu401-uart	EXPORT_SYMBOL
+0x112ccf2c	cfg80211_roamed	net/wireless/cfg80211	EXPORT_SYMBOL
+0x3b9bdefe	irias_add_octseq_attrib	net/irda/irda	EXPORT_SYMBOL
+0x23216009	ircomm_flow_request	net/irda/ircomm/ircomm	EXPORT_SYMBOL
+0x56f29838	fat_attach	fs/fat/fat	EXPORT_SYMBOL_GPL
+0xa139a945	ssb_bus_may_powerdown	drivers/ssb/ssb	EXPORT_SYMBOL
+0xa4832cf0	iscsi_pool_free	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0x459be916	il_fill_probe_req	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x77779c1d	eip_close	drivers/net/ethernet/8390/8390p	EXPORT_SYMBOL
+0x827309ff	lis3lv02d_joystick_enable	drivers/misc/lis3lv02d/lis3lv02d	EXPORT_SYMBOL_GPL
+0xb08afd73	cx231xx_register_extension	drivers/media/video/cx231xx/cx231xx	EXPORT_SYMBOL
+0xbe38a431	dm_rh_recovery_prepare	drivers/md/dm-region-hash	EXPORT_SYMBOL_GPL
+0xaaf38baa	ata_sff_data_xfer	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x208fb324	ip_mc_inc_group	vmlinux	EXPORT_SYMBOL
+0x19496284	tcp_orphan_count	vmlinux	EXPORT_SYMBOL_GPL
+0x0c18fe26	request_key_with_auxdata	vmlinux	EXPORT_SYMBOL
+0x9a4dd855	sysfs_remove_bin_file	vmlinux	EXPORT_SYMBOL_GPL
+0x4abc2761	kick_iocb	vmlinux	EXPORT_SYMBOL
+0x7a51a676	register_wide_hw_breakpoint	vmlinux	EXPORT_SYMBOL_GPL
+0x96178bc9	ieee80211_send_probe_requests_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x56f0c067	mlx4_xrcd_free	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xb8d7afcc	videobuf_queue_to_vaddr	drivers/media/video/videobuf-core	EXPORT_SYMBOL_GPL
+0x31b69de4	md_new_event	drivers/md/md-mod	EXPORT_SYMBOL_GPL
+0x7aee40cc	hid_dump_device	drivers/hid/hid	EXPORT_SYMBOL_GPL
+0x182ffed3	tcf_exts_validate	vmlinux	EXPORT_SYMBOL
+0x5973a7ed	wakeup_source_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0xb81960ca	snprintf	vmlinux	EXPORT_SYMBOL
+0x5935fed1	get_io_context	vmlinux	EXPORT_SYMBOL
+0xa5449d2d	__tracepoint_block_rq_remap	vmlinux	EXPORT_SYMBOL_GPL
+0x594d1b33	proc_mkdir_mode	vmlinux	EXPORT_SYMBOL
+0xc8ad52a8	tag_pages_for_writeback	vmlinux	EXPORT_SYMBOL
+0x18e1683f	snd_dma_program	sound/core/snd	EXPORT_SYMBOL
+0x8b80f929	rpcauth_destroy_credcache	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x9eecdd09	scsi_tgt_tsk_mgmt_request	drivers/scsi/scsi_tgt	EXPORT_SYMBOL_GPL
+0x958b4a65	cx231xx_init_vbi_isoc	drivers/media/video/cx231xx/cx231xx	EXPORT_SYMBOL_GPL
+0x57d1fd52	ata_scsi_simulate	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x17d2cd4d	devm_kzalloc	vmlinux	EXPORT_SYMBOL_GPL
+0x7d57ed14	swiotlb_dma_supported	vmlinux	EXPORT_SYMBOL
+0xc0e75cec	visitor128	vmlinux	EXPORT_SYMBOL_GPL
+0x2296c00d	crypto_attr_u32	vmlinux	EXPORT_SYMBOL_GPL
+0x54449a89	__bread	vmlinux	EXPORT_SYMBOL
+0xbba159e0	files_lglock_local_unlock	vmlinux	EXPORT_SYMBOL
+0xba655351	follow_pfn	vmlinux	EXPORT_SYMBOL
+0xea905975	hrtimer_init	vmlinux	EXPORT_SYMBOL_GPL
+0x9f28d5e8	snd_gf1_look16	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0x763ce19d	ieee80211_cqm_rssi_notify	net/mac80211/mac80211	EXPORT_SYMBOL
+0x85d14468	iscsi_session_teardown	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0xa6a6f3e6	ath_hw_get_listen_time	drivers/net/wireless/ath/ath	EXPORT_SYMBOL
+0x54e6bcf2	free_sja1000dev	drivers/net/can/sja1000/sja1000	EXPORT_SYMBOL_GPL
+0xbcdd5588	v4l2_subdev_g_ext_ctrls	drivers/media/video/videodev	EXPORT_SYMBOL
+0x3edc9ef2	v4l2_subdev_s_ext_ctrls	drivers/media/video/videodev	EXPORT_SYMBOL
+0x3717f5d2	em28xx_init_isoc	drivers/media/video/em28xx/em28xx	EXPORT_SYMBOL_GPL
+0x954488a4	syncookie_secret	vmlinux	EXPORT_SYMBOL
+0x9ceb163c	memcpy_toiovec	vmlinux	EXPORT_SYMBOL
+0x7b0b9501	usb_disable_xhci_ports	vmlinux	EXPORT_SYMBOL_GPL
+0x7f39d33c	agp_alloc_page_array	vmlinux	EXPORT_SYMBOL
+0x4b085dbf	agp3_generic_configure	vmlinux	EXPORT_SYMBOL
+0xeaded60f	snd_card_register	sound/core/snd	EXPORT_SYMBOL
+0x3a820bf0	rds_rdma_send_complete	net/rds/rds	EXPORT_SYMBOL_GPL
+0x6a953c35	irttp_udata_request	net/irda/irda	EXPORT_SYMBOL
+0x477448de	journal_init_dev	fs/jbd/jbd	EXPORT_SYMBOL
+0xef346615	cxgbi_attr_is_visible	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0xf782bcd7	ptp_clock_unregister	drivers/ptp/ptp	EXPORT_SYMBOL
+0xa2a6f257	b1pciv4_detect	drivers/isdn/hardware/avm/b1dma	EXPORT_SYMBOL
+0x1b6314fd	in_aton	vmlinux	EXPORT_SYMBOL
+0x2fd92efb	neigh_resolve_output	vmlinux	EXPORT_SYMBOL
+0xba2d8594	ec_read	vmlinux	EXPORT_SYMBOL
+0x952d479c	cfb_imageblit	vmlinux	EXPORT_SYMBOL
+0x7b52a859	wrmsr_safe_on_cpu	vmlinux	EXPORT_SYMBOL
+0xe9e16ef9	posix_unblock_lock	vmlinux	EXPORT_SYMBOL
+0xdda16f34	__mnt_is_readonly	vmlinux	EXPORT_SYMBOL_GPL
+0xeb60d844	__tracepoint_cpu_idle	vmlinux	EXPORT_SYMBOL_GPL
+0x9422e337	oxygen_write_spi	sound/pci/oxygen/snd-oxygen-lib	EXPORT_SYMBOL
+0xdb922678	nf_nat_sip_hook	net/netfilter/nf_conntrack_sip	EXPORT_SYMBOL_GPL
+0x194bc4d3	nf_nat_irc_hook	net/netfilter/nf_conntrack_irc	EXPORT_SYMBOL_GPL
+0xdcd52d2f	nf_nat_ftp_hook	net/netfilter/nf_conntrack_ftp	EXPORT_SYMBOL_GPL
+0xa34281d0	usb_register_dev	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xfb23824d	scsi_dma_map	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x748a054c	rt2x00usb_probe	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0xde4a9785	p54_register_common	drivers/net/wireless/p54/p54common	EXPORT_SYMBOL_GPL
+0x1bf58db6	mddev_resume	drivers/md/md-mod	EXPORT_SYMBOL_GPL
+0x5359c7c7	tcp_close	vmlinux	EXPORT_SYMBOL
+0xf5ece4b0	__scm_send	vmlinux	EXPORT_SYMBOL
+0x457bb444	pnp_register_driver	vmlinux	EXPORT_SYMBOL
+0xa07ed110	xz_dec_init	vmlinux	EXPORT_SYMBOL
+0x3dd4d3a7	bprintf	vmlinux	EXPORT_SYMBOL_GPL
+0xe52ac437	try_to_free_buffers	vmlinux	EXPORT_SYMBOL
+0xb7034a41	wait_iff_congested	vmlinux	EXPORT_SYMBOL
+0x83d3a441	blk_trace_setup	vmlinux	EXPORT_SYMBOL_GPL
+0x4138a070	__put_cred	vmlinux	EXPORT_SYMBOL
+0xd37562b0	lbs_get_firmware	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0x99f39007	i2400m_is_boot_barker	drivers/net/wimax/i2400m/i2400m	EXPORT_SYMBOL_GPL
+0x275e2365	nand_default_bbt	drivers/mtd/nand/nand	EXPORT_SYMBOL
+0x9317ff93	i2o_dma_alloc	drivers/message/i2o/i2o_core	EXPORT_SYMBOL_GPL
+0x4847bfb5	dm_path_uevent	drivers/md/dm-mod	EXPORT_SYMBOL_GPL
+0x16e91e21	fw_csr_iterator_next	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0x9a46dd01	xfrm_migrate	vmlinux	EXPORT_SYMBOL
+0xb52ee8be	intel_gtt_clear_range	vmlinux	EXPORT_SYMBOL
+0xae136d1e	xenbus_dev_is_online	vmlinux	EXPORT_SYMBOL_GPL
+0xac871eae	register_framebuffer	vmlinux	EXPORT_SYMBOL
+0x89573945	dquot_free_inode	vmlinux	EXPORT_SYMBOL
+0x84b7ab8f	snd_hda_resume	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xba00c251	make_8023_client	net/802/p8023	EXPORT_SYMBOL
+0xd3665a60	rt2x00queue_map_txskb	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x95a00c5b	il_mac_conf_tx	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xb1d180d3	mfd_remove_devices	drivers/mfd/mfd-core	EXPORT_SYMBOL
+0xd7860eaa	unregister_efivars	drivers/firmware/efivars	EXPORT_SYMBOL_GPL
+0x0d38cee6	amd_decode_mce	drivers/edac/edac_mce_amd	EXPORT_SYMBOL_GPL
+0x52c8f4a2	xen_unregister_device_domain_owner	vmlinux	EXPORT_SYMBOL_GPL
+0x7b1d544d	edac_handler_set	vmlinux	EXPORT_SYMBOL_GPL
+0x2687edd0	pm_generic_suspend_late	vmlinux	EXPORT_SYMBOL_GPL
+0x3cd06035	add_input_randomness	vmlinux	EXPORT_SYMBOL_GPL
+0x5d87c067	register_acpi_bus_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0x9ed685ee	iov_iter_advance	vmlinux	EXPORT_SYMBOL
+0x685bfac1	xdr_set_scratch_buffer	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x5d874ce1	transport_lookup_cmd_lun	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x0dabc400	transport_lookup_tmr_lun	drivers/target/target_core_mod	EXPORT_SYMBOL
+0xb685707d	scsi_unblock_requests	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x1907a725	arc_proto_map	drivers/net/arcnet/arcnet	EXPORT_SYMBOL
+0x36fdc79f	register_cdrom	drivers/cdrom/cdrom	EXPORT_SYMBOL
+0x60dd3a9d	edac_subsys	vmlinux	EXPORT_SYMBOL_GPL
+0xe8394889	device_remove_bin_file	vmlinux	EXPORT_SYMBOL_GPL
+0xfbdc7f8f	tty_port_free_xmit_buf	vmlinux	EXPORT_SYMBOL
+0xec1b043e	regulator_suspend_prepare	vmlinux	EXPORT_SYMBOL_GPL
+0x43385ad9	acpi_pci_unregister_driver	vmlinux	EXPORT_SYMBOL
+0xf51ae235	touch_nmi_watchdog	vmlinux	EXPORT_SYMBOL
+0x3ea77eaa	oxygen_pci_probe	sound/pci/oxygen/snd-oxygen-lib	EXPORT_SYMBOL
+0x26d95107	snd_gf1_poke	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0xaf5bf6ef	nfs_debug	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xd87ced11	nf_ct_deliver_cached_events	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xe34b6383	rt2800_enable_radio	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0x17ae97fb	mtd_unlock	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0xc50feb15	hidraw_report_event	drivers/hid/hid	EXPORT_SYMBOL_GPL
+0xb3284531	acpi_dbg_layer	vmlinux	EXPORT_SYMBOL
+0x98dd29e1	svga_tilefill	drivers/video/svgalib	EXPORT_SYMBOL
+0xd27fda64	sas_get_pr_transport_id_len	drivers/target/target_core_mod	EXPORT_SYMBOL
+0xbfa3aacd	ni_tio_insn_config	drivers/staging/comedi/drivers/ni_tio	EXPORT_SYMBOL_GPL
+0x660de71b	mlx4_mtt_init	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xd9c532ac	dib8000_pid_filter	drivers/media/dvb/frontends/dib8000	EXPORT_SYMBOL
+0xb72b5fa0	dvb_ringbuffer_empty	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0x425a962a	saa7146_vfree_destroy_pgtable	drivers/media/common/saa7146	EXPORT_SYMBOL_GPL
+0x7267db00	hwrng_unregister	drivers/char/hw_random/rng-core	EXPORT_SYMBOL_GPL
+0xa566b760	crypto_nivaead_type	vmlinux	EXPORT_SYMBOL_GPL
+0xcd6a0305	bdi_writeout_inc	vmlinux	EXPORT_SYMBOL_GPL
+0xe4982450	snd_pcm_release_substream	sound/core/snd-pcm	EXPORT_SYMBOL
+0x3ef9497e	dccp_reqsk_init	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x178e5cb0	parport_remove_port	drivers/parport/parport	EXPORT_SYMBOL
+0x16fd7313	xfrm6_rcv_spi	vmlinux	EXPORT_SYMBOL
+0x3b5e95c9	tcf_exts_change	vmlinux	EXPORT_SYMBOL
+0x27c1e63f	usb_amd_find_chipset_info	vmlinux	EXPORT_SYMBOL_GPL
+0xd41e1715	dma_release_from_coherent	vmlinux	EXPORT_SYMBOL
+0x97de0ddd	acpi_install_gpe_block	vmlinux	EXPORT_SYMBOL
+0x5e0f750a	disk_stack_limits	vmlinux	EXPORT_SYMBOL
+0x75e8f3c3	crypto_register_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0xd220cf8a	jiffies_to_timespec	vmlinux	EXPORT_SYMBOL
+0x29b64ee3	snd_trident_alloc_voice	sound/pci/trident/snd-trident	EXPORT_SYMBOL
+0x05060a19	snd_opl3_regmap	sound/drivers/opl3/snd-opl3-lib	EXPORT_SYMBOL
+0x810cd8a7	scsi_tgt_free_queue	drivers/scsi/scsi_tgt	EXPORT_SYMBOL_GPL
+0xac003533	dm_dirty_log_destroy	drivers/md/dm-log	EXPORT_SYMBOL
+0xf451f508	i2c_master_send	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x5d69c81f	fw_iso_context_queue	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0xcf229a85	ata_sas_slave_configure	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xbf5300c0	ata_qc_complete	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xf5afa7b2	pskb_put	vmlinux	EXPORT_SYMBOL_GPL
+0x05a2690c	fib_table_lookup	vmlinux	EXPORT_SYMBOL_GPL
+0x24902802	device_reprobe	vmlinux	EXPORT_SYMBOL_GPL
+0x479c3c86	find_next_zero_bit	vmlinux	EXPORT_SYMBOL
+0x09a92369	inc_nlink	vmlinux	EXPORT_SYMBOL
+0x8a1ab4ee	timeval_to_jiffies	vmlinux	EXPORT_SYMBOL
+0xeea47bce	snd_ctl_new1	sound/core/snd	EXPORT_SYMBOL
+0x48f9585e	wiphy_free	net/wireless/cfg80211	EXPORT_SYMBOL
+0xbed400b4	journal_abort	fs/jbd/jbd	EXPORT_SYMBOL
+0x73dd4362	rt2800_process_rxwi	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0xd27fd8b5	dib8000_pwm_agc_reset	drivers/media/dvb/frontends/dib8000	EXPORT_SYMBOL
+0x67fefe4c	dvb_ca_en50221_init	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0x7774620f	dm_rh_stop_recovery	drivers/md/dm-region-hash	EXPORT_SYMBOL_GPL
+0x1e491a04	ib_unmap_fmr	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x6df40adf	__netlink_dump_start	vmlinux	EXPORT_SYMBOL
+0xd8ef5868	dev_kfree_skb_any	vmlinux	EXPORT_SYMBOL
+0x0ad38654	security_task_getsecid	vmlinux	EXPORT_SYMBOL
+0x84e6967a	seq_open	vmlinux	EXPORT_SYMBOL
+0x6de3ecc4	mnt_drop_write	vmlinux	EXPORT_SYMBOL_GPL
+0x16552254	rpc_uaddr2sockaddr	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x249936aa	ceph_osdc_readpages	net/ceph/libceph	EXPORT_SYMBOL
+0xd02b58fa	usb_wwan_tiocmget	drivers/usb/serial/usb_wwan	EXPORT_SYMBOL
+0x127dbe92	usb_wwan_tiocmset	drivers/usb/serial/usb_wwan	EXPORT_SYMBOL
+0x6172c197	iscsi_eh_device_reset	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0x7fbab7eb	ath9k_cmn_update_ichannel	drivers/net/wireless/ath/ath9k/ath9k_common	EXPORT_SYMBOL
+0x86136af0	drm_mm_init_scan	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x7e394c4e	sysctl_local_reserved_ports	vmlinux	EXPORT_SYMBOL
+0x83dc9e3c	xen_swiotlb_map_sg_attrs	vmlinux	EXPORT_SYMBOL_GPL
+0xa9329732	pci_bus_type	vmlinux	EXPORT_SYMBOL
+0x96248313	pci_enable_bridges	vmlinux	EXPORT_SYMBOL
+0x901cefd8	simple_readpage	vmlinux	EXPORT_SYMBOL
+0x9efc0f48	__lock_page	vmlinux	EXPORT_SYMBOL
+0xb140d14c	ring_buffer_read	vmlinux	EXPORT_SYMBOL_GPL
+0xf499fdb2	rcu_barrier_bh	vmlinux	EXPORT_SYMBOL_GPL
+0x09c60af6	synchronize_srcu_expedited	vmlinux	EXPORT_SYMBOL_GPL
+0xca401fef	ore_read	fs/exofs/libore	EXPORT_SYMBOL
+0x0f05f5a6	usb_altnum_to_altsetting	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x4710f0bb	il_eeprom_query_addr	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xda0d50ec	ib_sa_cancel_query	drivers/infiniband/core/ib_sa	EXPORT_SYMBOL
+0xc245c5f6	tcp_cong_avoid_ai	vmlinux	EXPORT_SYMBOL_GPL
+0xab6bde28	sysctl_max_syn_backlog	vmlinux	EXPORT_SYMBOL
+0xcabe04de	cpuidle_resume_and_unlock	vmlinux	EXPORT_SYMBOL_GPL
+0x2e2a9bd4	pci_create_slot	vmlinux	EXPORT_SYMBOL_GPL
+0x58a4c260	blk_delay_queue	vmlinux	EXPORT_SYMBOL
+0xefdd70ce	security_secid_to_secctx	vmlinux	EXPORT_SYMBOL
+0x2aef2694	follow_down	vmlinux	EXPORT_SYMBOL
+0x8a8b436f	filemap_write_and_wait_range	vmlinux	EXPORT_SYMBOL
+0x40c063d3	__generic_file_aio_write	vmlinux	EXPORT_SYMBOL
+0x38722f80	kernel_fpu_end	vmlinux	EXPORT_SYMBOL
+0xb096458a	snd_sbmixer_add_ctl	sound/isa/sb/snd-sb-common	EXPORT_SYMBOL
+0x594f257c	rds_info_register_func	net/rds/rds	EXPORT_SYMBOL_GPL
+0x33b9e63f	tifm_unregister_driver	drivers/misc/tifm_core	EXPORT_SYMBOL
+0x360b1afe	probe_irq_mask	vmlinux	EXPORT_SYMBOL
+0x1bc5b400	snd_hda_jack_tbl_get_from_tag	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x98f3658e	cfg80211_rx_mgmt	net/wireless/cfg80211	EXPORT_SYMBOL
+0xf3017e21	dccp_statistics	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x1349292c	virtqueue_detach_unused_buf	drivers/virtio/virtio_ring	EXPORT_SYMBOL_GPL
+0x5d6a8194	genphy_read_status	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x797e5a8e	ubi_leb_read	drivers/mtd/ubi/ubi	EXPORT_SYMBOL_GPL
+0xefb991f8	dib3000mc_pid_control	drivers/media/dvb/frontends/dib3000mc	EXPORT_SYMBOL
+0xb11462d6	drm_mode_create_dithering_property	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x7389713f	btmrvl_add_card	drivers/bluetooth/btmrvl	EXPORT_SYMBOL_GPL
+0x707ff1bb	ata_xfer_mask2mode	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x3eed9685	redraw_screen	vmlinux	EXPORT_SYMBOL
+0xdfdf4af5	tty_unregister_driver	vmlinux	EXPORT_SYMBOL
+0x3bb0ecc3	pci_reenable_device	vmlinux	EXPORT_SYMBOL
+0x6d73704d	get_write_access	vmlinux	EXPORT_SYMBOL
+0x8af88bd6	invalidate_mapping_pages	vmlinux	EXPORT_SYMBOL
+0x5c28cca5	ieee80211_get_tkip_p1k_iv	net/mac80211/mac80211	EXPORT_SYMBOL
+0x46ea4185	svga_tilecopy	drivers/video/svgalib	EXPORT_SYMBOL
+0xc846eb25	mite_dma_disarm	drivers/staging/comedi/drivers/mite	EXPORT_SYMBOL
+0x4746074e	pcmcia_parse_uevents	drivers/pcmcia/pcmcia_core	EXPORT_SYMBOL
+0x3bdd0f94	v4l2_prio_change	drivers/media/video/videodev	EXPORT_SYMBOL
+0xee867781	drm_poll	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x70c42b6e	isapnp_protocol	vmlinux	EXPORT_SYMBOL
+0x5d87f553	pci_enable_rom	vmlinux	EXPORT_SYMBOL_GPL
+0xf3bf0bce	__bitmap_complement	vmlinux	EXPORT_SYMBOL
+0xe2e8065e	memdup_user	vmlinux	EXPORT_SYMBOL
+0x2d784985	thermal_cooling_device_unregister	drivers/thermal/thermal_sys	EXPORT_SYMBOL
+0x826e6e28	ath_gen_timer_free	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x08510661	kvm_lmsw	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xad910b8e	dma_get_required_mask	vmlinux	EXPORT_SYMBOL_GPL
+0xc996d097	del_timer	vmlinux	EXPORT_SYMBOL
+0x03fa1007	snd_msnd_DARQ	sound/isa/msnd/snd-msnd-lib	EXPORT_SYMBOL
+0xc45270a3	usb_get_current_frame_number	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xb2588f4c	map_destroy	drivers/mtd/chips/chipreg	EXPORT_SYMBOL
+0x16dcec76	ipmi_set_my_address	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0x39511956	kvm_cpu_has_pending_timer	arch/x86/kvm/kvm	EXPORT_SYMBOL
+0x4dc45be9	nf_log_unbind_pf	vmlinux	EXPORT_SYMBOL
+0xd289051d	pcie_update_link_speed	vmlinux	EXPORT_SYMBOL_GPL
+0x5bb906a7	wait_rcu_gp	vmlinux	EXPORT_SYMBOL_GPL
+0x6d9f82cb	snd_pcm_lib_free_pages	sound/core/snd-pcm	EXPORT_SYMBOL
+0x47b1904f	rds_recv_incoming	net/rds/rds	EXPORT_SYMBOL_GPL
+0x35b6c446	nf_ct_expect_find_get	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x0920406e	hci_suspend_dev	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x7675fb50	vcc_release_async	net/atm/atm	EXPORT_SYMBOL
+0x081bd397	transport_generic_request_failure	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x24db9667	smscore_set_board_id	drivers/media/dvb/siano/smsmdtv	EXPORT_SYMBOL_GPL
+0x1b640e30	smscore_get_board_id	drivers/media/dvb/siano/smsmdtv	EXPORT_SYMBOL_GPL
+0xeb61ec1f	ttm_bo_manager_func	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0xf2c42938	tcp_v4_send_check	vmlinux	EXPORT_SYMBOL
+0x80bb4795	dev_close	vmlinux	EXPORT_SYMBOL
+0x82c50f62	dma_buf_get	vmlinux	EXPORT_SYMBOL_GPL
+0x0edd7ea1	dma_buf_put	vmlinux	EXPORT_SYMBOL_GPL
+0xe457509f	__mark_inode_dirty	vmlinux	EXPORT_SYMBOL
+0xd4835e7d	snd_card_disconnect	sound/core/snd	EXPORT_SYMBOL
+0x19d543b5	il_write_targ_mem	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xba97a539	i2400m_unknown_barker	drivers/net/wimax/i2400m/i2400m	EXPORT_SYMBOL
+0x3adbd595	v4l2_field_names	drivers/media/video/videodev	EXPORT_SYMBOL
+0xaf833913	zl10353_attach	drivers/media/dvb/frontends/zl10353	EXPORT_SYMBOL
+0x251b766e	tda9887_attach	drivers/media/common/tuners/tda9887	EXPORT_SYMBOL_GPL
+0x31c0c2d1	dm_put	drivers/md/dm-mod	EXPORT_SYMBOL_GPL
+0x67133679	fw_send_response	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0x3dd756c0	noop_qdisc	vmlinux	EXPORT_SYMBOL
+0x951e4a24	sock_alloc_send_skb	vmlinux	EXPORT_SYMBOL
+0x9d222e26	acpi_bus_get_device	vmlinux	EXPORT_SYMBOL
+0x738803e6	strnlen	vmlinux	EXPORT_SYMBOL
+0x007c88bc	unregister_filesystem	vmlinux	EXPORT_SYMBOL
+0x4abbe3c2	vm_brk	vmlinux	EXPORT_SYMBOL
+0x9ebd4c04	adjust_resource	vmlinux	EXPORT_SYMBOL
+0xd0e43207	usb_nop_xceiv_register	drivers/usb/otg/nop-usb-xceiv	EXPORT_SYMBOL
+0x70af01a5	rtl92c_dm_write_dig	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0x2d095b7a	il_leds_init	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xef8e75ae	il_leds_exit	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x97ad7536	dm_dirty_log_create	drivers/md/dm-log	EXPORT_SYMBOL
+0xa20fa2cf	xfrm_state_insert	vmlinux	EXPORT_SYMBOL
+0x3e78c198	hippi_neigh_setup_dev	vmlinux	EXPORT_SYMBOL
+0x474359b6	kmsg_dump_register	vmlinux	EXPORT_SYMBOL_GPL
+0x1bfed22f	snd_hda_shutup_pins	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x02bb999d	xprt_setup_backchannel	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x6aa5ccce	rpc_peeraddr2str	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x40728a63	xt_find_revision	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0xfc9e6a2b	il_cancel_scan_deferred_work	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xf7523f9f	il_cmd_queue_free	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x1160706e	ath9k_hw_set_interrupts	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x17ee2502	mlx4_SET_MCAST_FLTR	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL
+0x4fd398dd	ahci_reset_controller	drivers/ata/libahci	EXPORT_SYMBOL_GPL
+0x709e5fb9	isa_unregister_driver	vmlinux	EXPORT_SYMBOL_GPL
+0x96fbf69a	__destroy_inode	vmlinux	EXPORT_SYMBOL
+0x9c2ac238	print_context_stack_bp	vmlinux	EXPORT_SYMBOL_GPL
+0xf0a1fdb3	snd_midi_process_event	sound/core/seq/snd-seq-midi-emul	EXPORT_SYMBOL
+0x0ff777a7	nf_conntrack_l3proto_generic	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xe61ceb15	usb_mon_register	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x8e9a2c94	libipw_wx_get_encodeext	drivers/net/wireless/ipw2x00/libipw	EXPORT_SYMBOL
+0x1d1357e8	mlx4_srq_arm	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x9bfb6428	lis3lv02d_poweron	drivers/misc/lis3lv02d/lis3lv02d	EXPORT_SYMBOL_GPL
+0x4ba16344	mpt_event_register	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0x1d3879aa	rdma_join_multicast	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0x03a79708	iw_cm_listen	drivers/infiniband/core/iw_cm	EXPORT_SYMBOL
+0x3387272f	tcp_is_cwnd_limited	vmlinux	EXPORT_SYMBOL_GPL
+0x663c16d6	gnttab_grant_foreign_access_subpage_ref	vmlinux	EXPORT_SYMBOL_GPL
+0x93f30a20	pci_bus_add_devices	vmlinux	EXPORT_SYMBOL
+0x49039234	blk_rq_unmap_user	vmlinux	EXPORT_SYMBOL
+0x805465a9	crypto_mod_get	vmlinux	EXPORT_SYMBOL_GPL
+0x0bc477a2	irq_set_irq_type	vmlinux	EXPORT_SYMBOL
+0xce2840e7	irq_set_irq_wake	vmlinux	EXPORT_SYMBOL
+0x0a1c3985	snd_wss_pcm	sound/isa/wss/snd-wss-lib	EXPORT_SYMBOL
+0xe0072a4e	snd_rawmidi_drop_output	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0x76c1068d	fc_remove_host	drivers/scsi/scsi_transport_fc	EXPORT_SYMBOL
+0x3bfcd2c4	v4l2_device_unregister_subdev	drivers/media/video/videodev	EXPORT_SYMBOL_GPL
+0x16bfc58b	ata_sas_port_init	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x5568e110	__remove_inode_hash	vmlinux	EXPORT_SYMBOL
+0x7c633c38	__lru_cache_add	vmlinux	EXPORT_SYMBOL
+0x1ce90eba	l2tp_session_free	net/l2tp/l2tp_core	EXPORT_SYMBOL_GPL
+0xb9bf2157	mite_dma_tcr	drivers/staging/comedi/drivers/mite	EXPORT_SYMBOL
+0x2bd6257c	dib0070_get_rf_output	drivers/media/dvb/frontends/dib0070	EXPORT_SYMBOL
+0xcb729930	dib0070_set_rf_output	drivers/media/dvb/frontends/dib0070	EXPORT_SYMBOL
+0x6973d935	__pci_reset_function_locked	vmlinux	EXPORT_SYMBOL_GPL
+0x6128b5fc	__printk_ratelimit	vmlinux	EXPORT_SYMBOL
+0xd544e902	pgprot_writecombine	vmlinux	EXPORT_SYMBOL_GPL
+0xc563ea40	xdr_encode_pages	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x6dfdaa7a	xdr_read_pages	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x6fbb3bd9	init_rs_non_canonical	lib/reed_solomon/reed_solomon	EXPORT_SYMBOL_GPL
+0x4a0610c5	drm_free_agp	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xcc1f1c3d	inet_twdr_hangman	vmlinux	EXPORT_SYMBOL_GPL
+0xc6ebb065	pm_generic_restore_early	vmlinux	EXPORT_SYMBOL_GPL
+0x7e1ecdc5	register_hotplug_dock_device	vmlinux	EXPORT_SYMBOL_GPL
+0xa2162a9e	__blk_end_request_cur	vmlinux	EXPORT_SYMBOL
+0x69e0f9f4	__blk_end_request_err	vmlinux	EXPORT_SYMBOL_GPL
+0xb2682405	utf8_to_utf32	vmlinux	EXPORT_SYMBOL
+0x9621849f	ring_buffer_event_data	vmlinux	EXPORT_SYMBOL_GPL
+0x43f7fc1d	snd_hda_ch_mode_info	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x9991f1ca	transport_do_task_sg_chain	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x617bff60	iscsi_create_session	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0x4afebfa9	scsi_prep_return	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x99a66f85	dm_dirty_log_type_unregister	drivers/md/dm-log	EXPORT_SYMBOL
+0xdedccae4	crypto_sha1_update	crypto/sha1_generic	EXPORT_SYMBOL
+0xe4649fde	af_alg_cmsg_send	crypto/af_alg	EXPORT_SYMBOL_GPL
+0x081f815c	__pm_runtime_disable	vmlinux	EXPORT_SYMBOL_GPL
+0xab8d7f3c	__bus_register	vmlinux	EXPORT_SYMBOL_GPL
+0x2e3f8175	__tracepoint_kfree	vmlinux	EXPORT_SYMBOL
+0xb2bff174	override_creds	vmlinux	EXPORT_SYMBOL
+0x131db64a	system_long_wq	vmlinux	EXPORT_SYMBOL_GPL
+0x0b28defb	kmsg_dump_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x865f7de7	journal_get_create_access	fs/jbd/jbd	EXPORT_SYMBOL
+0xd97039fc	il_is_ht40_tx_allowed	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x5fe9ea75	cx231xx_enable656	drivers/media/video/cx231xx/cx231xx	EXPORT_SYMBOL_GPL
+0xa215f1b2	dsp_audio_s16_to_law	drivers/isdn/mISDN/mISDN_dsp	EXPORT_SYMBOL
+0x50dbc447	ib_flush_fmr_pool	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xe88f5e0b	dca_remove_requester	drivers/dca/dca	EXPORT_SYMBOL_GPL
+0x606d0b09	secure_tcpv6_sequence_number	vmlinux	EXPORT_SYMBOL
+0x5607515d	input_register_handle	vmlinux	EXPORT_SYMBOL
+0x938e38de	acpi_device_hid	vmlinux	EXPORT_SYMBOL
+0x233462cc	blkdev_issue_zeroout	vmlinux	EXPORT_SYMBOL
+0x66d557bf	handle_level_irq	vmlinux	EXPORT_SYMBOL_GPL
+0x982e6b6d	ieee80211_radiotap_iterator_init	net/wireless/cfg80211	EXPORT_SYMBOL
+0xc781bd9f	rfkill_resume_polling	net/rfkill/rfkill	EXPORT_SYMBOL
+0xfb86b96f	dlm_errname	fs/ocfs2/dlm/ocfs2_dlm	EXPORT_SYMBOL_GPL
+0xee96b986	nfs4_init_deviceid_node	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0x272ea697	__fscache_register_netfs	fs/fscache/fscache	EXPORT_SYMBOL
+0xf62d92d8	fc_get_fabric_proto_ident	drivers/target/target_core_mod	EXPORT_SYMBOL
+0xc25a3064	iscsi_eh_abort	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0x09194ca3	sdio_writesb	drivers/mmc/core/mmc_core	EXPORT_SYMBOL_GPL
+0x47f3b62d	ata_dev_printk	drivers/ata/libata	EXPORT_SYMBOL
+0xf30fda27	lzo1x_decompress_safe	vmlinux	EXPORT_SYMBOL_GPL
+0x424acc6d	scatterwalk_done	vmlinux	EXPORT_SYMBOL_GPL
+0xb0a38ee4	request_key	vmlinux	EXPORT_SYMBOL
+0x7c7c442f	kern_unmount	vmlinux	EXPORT_SYMBOL
+0xb813ce5a	timecompare_transform	vmlinux	EXPORT_SYMBOL_GPL
+0x1d9756e7	ip_vs_proto_get	net/netfilter/ipvs/ip_vs	EXPORT_SYMBOL
+0xedd5e045	ceph_con_init	net/ceph/libceph	EXPORT_SYMBOL
+0x4b8ab902	jbd2_journal_lock_updates	fs/jbd2/jbd2	EXPORT_SYMBOL
+0xc50561c4	__fscache_read_or_alloc_pages	fs/fscache/fscache	EXPORT_SYMBOL
+0xba22b5da	usb_control_msg	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x31fc1482	mtd_table_mutex	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0x791ab099	v4l2_ctrl_query_fill	drivers/media/video/v4l2-common	EXPORT_SYMBOL
+0xd84b5cb7	roccat_common_send	drivers/hid/hid-roccat-common	EXPORT_SYMBOL_GPL
+0x71d4c232	drm_prime_add_imported_buf_handle	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x8c3b1073	kvm_mmu_reset_context	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x3ff41e04	xen_swiotlb_sync_single_for_device	vmlinux	EXPORT_SYMBOL_GPL
+0x575d2e40	nla_append	vmlinux	EXPORT_SYMBOL
+0x79541757	pcim_iomap_regions	vmlinux	EXPORT_SYMBOL
+0xb86e4ab9	random32	vmlinux	EXPORT_SYMBOL
+0xaa32e503	skcipher_geniv_free	vmlinux	EXPORT_SYMBOL_GPL
+0x90946d65	vfs_llseek	vmlinux	EXPORT_SYMBOL
+0x9b2804f2	__irq_set_handler	vmlinux	EXPORT_SYMBOL_GPL
+0x2d17a0e1	cgroup_taskset_size	vmlinux	EXPORT_SYMBOL_GPL
+0x2f59152a	snd_dma_free_pages	sound/core/snd-page-alloc	EXPORT_SYMBOL
+0x8f67643d	ieee80211_find_sta	net/mac80211/mac80211	EXPORT_SYMBOL
+0x8dd500b6	ieee80211_tx_status_irqsafe	net/mac80211/mac80211	EXPORT_SYMBOL
+0x46feb099	dm_read_arg	drivers/md/dm-mod	EXPORT_SYMBOL
+0x266d8a60	ttm_io_prot	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0xbef6a87c	ttm_bo_init	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x76f68802	ttm_bo_wait	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0xc5e9c4d8	dev_get_drvdata	vmlinux	EXPORT_SYMBOL
+0x4f1bd4b7	dev_set_drvdata	vmlinux	EXPORT_SYMBOL
+0x4d6a273e	pci_do_scan_bus	vmlinux	EXPORT_SYMBOL
+0x7ceaf0d5	generic_handle_irq	vmlinux	EXPORT_SYMBOL_GPL
+0x60624da7	bt_sock_unlink	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0xfaa73fd5	nfs4_schedule_lease_recovery	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0x136cf856	iscsi_add_session	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0xe86b685a	can_free_echo_skb	drivers/net/can/can-dev	EXPORT_SYMBOL_GPL
+0x9c59dc1d	ves1x93_attach	drivers/media/dvb/frontends/ves1x93	EXPORT_SYMBOL
+0xc570f1ee	dquot_resume	vmlinux	EXPORT_SYMBOL
+0xbc2bf721	blocking_notifier_chain_cond_register	vmlinux	EXPORT_SYMBOL_GPL
+0x8c031360	usb_unpoison_urb	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x8106095a	v4l2_prio_max	drivers/media/video/videodev	EXPORT_SYMBOL
+0x9d251144	drm_fb_helper_panic	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0xe444288c	__xfrm_state_destroy	vmlinux	EXPORT_SYMBOL
+0x61cefad6	tcp_v4_md5_hash_skb	vmlinux	EXPORT_SYMBOL
+0x1b1ae0ad	bfifo_qdisc_ops	vmlinux	EXPORT_SYMBOL
+0xa33e4770	tty_port_init	vmlinux	EXPORT_SYMBOL
+0x101318dc	__copy_from_user_ll_nocache	vmlinux	EXPORT_SYMBOL
+0x6a7900b3	complete_request_key	vmlinux	EXPORT_SYMBOL
+0x1f8544b8	panic_timeout	vmlinux	EXPORT_SYMBOL_GPL
+0x272d394e	mtrr_del	vmlinux	EXPORT_SYMBOL
+0x89502fe7	ocfs2_cluster_connect	fs/ocfs2/ocfs2_stackglue	EXPORT_SYMBOL_GPL
+0x9ee6355e	usb_hcd_resume_root_hub	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x63b2f279	cfc_read_array_from_buffer	drivers/staging/comedi/drivers/comedi_fc	EXPORT_SYMBOL
+0x4e21098e	rt2x00usb_uninitialize	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0x5e60ab94	__orinoco_ev_rx	drivers/net/wireless/orinoco/orinoco	EXPORT_SYMBOL
+0x8332b284	ar9003_paprd_init_table	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xfb2a56a8	af_alg_complete	crypto/af_alg	EXPORT_SYMBOL_GPL
+0xa20ce1b8	net_msg_warn	vmlinux	EXPORT_SYMBOL
+0x1aa365d1	__sock_recv_timestamp	vmlinux	EXPORT_SYMBOL_GPL
+0x5026585c	xen_irq_from_gsi	vmlinux	EXPORT_SYMBOL_GPL
+0x7b1c813f	pci_configure_slot	vmlinux	EXPORT_SYMBOL_GPL
+0x6225637e	md5_transform	vmlinux	EXPORT_SYMBOL
+0x4a5f805e	securityfs_remove	vmlinux	EXPORT_SYMBOL_GPL
+0xc2383064	noop_fsync	vmlinux	EXPORT_SYMBOL
+0xb2d22ec2	pv_cpu_ops	vmlinux	EXPORT_SYMBOL
+0xf22a691d	pv_mmu_ops	vmlinux	EXPORT_SYMBOL
+0x8f759e94	snd_msnd_send_word	sound/isa/msnd/snd-msnd-lib	EXPORT_SYMBOL
+0x57c493d1	cfg80211_ibss_joined	net/wireless/cfg80211	EXPORT_SYMBOL
+0x094c39b5	rpc_count_iostats	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xa1b5a3d8	rpc_destroy_pipe_data	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xa1a61122	nfs4_proc_getdeviceinfo	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0xaef867e4	gsm_free_mux	drivers/tty/n_gsm	EXPORT_SYMBOL_GPL
+0xf809226d	scsi_add_host_with_dma	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xe9a1a049	osd_req_write_kern	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0x3d2e5ff9	lbs_remove_card	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0x9f048247	hostap_set_string	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x444178dc	mlx4_unicast_promisc_add	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x921f8d8e	videobuf_mmap_setup	drivers/media/video/videobuf-core	EXPORT_SYMBOL_GPL
+0xd46d21a7	tea5767_autodetection	drivers/media/common/tuners/tea5767	EXPORT_SYMBOL_GPL
+0xb6a02a8f	tpm_calc_ordinal_duration	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0xd0f881c6	kvm_set_msr_common	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xad6a5fbe	kvm_get_msr_common	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x96845906	xfrm_migrate_state_find	vmlinux	EXPORT_SYMBOL
+0xd986af87	devres_remove_group	vmlinux	EXPORT_SYMBOL_GPL
+0xd7c42ff8	crypto_hash_walk_first	vmlinux	EXPORT_SYMBOL_GPL
+0x118f01ea	putname	vmlinux	EXPORT_SYMBOL
+0xb982b1c8	snd_ctl_remove_id	sound/core/snd	EXPORT_SYMBOL
+0x6d7a5696	mmc_can_erase	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0xc726339b	i2c_add_adapter	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x6be03f4a	drm_kms_helper_poll_fini	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0x9d46091e	drm_mmap	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xf313da4e	sha_transform	vmlinux	EXPORT_SYMBOL
+0x44918331	inet_sendpage	vmlinux	EXPORT_SYMBOL
+0x5fa17c73	sk_filter_release_rcu	vmlinux	EXPORT_SYMBOL
+0xb7fe93a3	dev_get_by_index_rcu	vmlinux	EXPORT_SYMBOL
+0x7be8f4da	dev_set_allmulti	vmlinux	EXPORT_SYMBOL
+0x89f5ddd1	input_mt_report_finger_count	vmlinux	EXPORT_SYMBOL
+0xea10655a	__bitmap_intersects	vmlinux	EXPORT_SYMBOL
+0x9b6eb137	ksize	vmlinux	EXPORT_SYMBOL
+0x38869d88	kstat	vmlinux	EXPORT_SYMBOL
+0xbf5f42cb	hci_conn_security	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x813884a4	v4l2_ctrl_del_event	drivers/media/video/videodev	EXPORT_SYMBOL
+0xc414b1ca	dm_send_uevents	drivers/md/dm-mod	EXPORT_SYMBOL_GPL
+0xb97cec2e	pci_stop_bus_device	vmlinux	EXPORT_SYMBOL_GPL
+0x72b0a36c	kobject_set_name	vmlinux	EXPORT_SYMBOL
+0xdc8da412	shmem_truncate_range	vmlinux	EXPORT_SYMBOL_GPL
+0xa3e7c113	ring_buffer_iter_peek	vmlinux	EXPORT_SYMBOL_GPL
+0xa5efbf4c	async_synchronize_full	vmlinux	EXPORT_SYMBOL_GPL
+0x9e1e55ef	bt_debugfs	net/bluetooth/bluetooth	EXPORT_SYMBOL_GPL
+0x28806871	ore_verify_layout	fs/exofs/libore	EXPORT_SYMBOL
+0xe64dc0a5	mptscsih_bios_param	drivers/message/fusion/mptscsih	EXPORT_SYMBOL
+0x4ab1f4b1	media_entity_remote_source	drivers/media/media	EXPORT_SYMBOL_GPL
+0xe0504b01	unregister_dca_provider	drivers/dca/dca	EXPORT_SYMBOL_GPL
+0xb40837bf	ipmi_smi_watcher_register	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0x7dd58f62	ata_bmdma_irq_clear	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x6f556bdb	acpi_get_gpe_device	vmlinux	EXPORT_SYMBOL
+0x2bb55d6e	acpi_remove_notify_handler	vmlinux	EXPORT_SYMBOL
+0x2b082f78	set_device_ro	vmlinux	EXPORT_SYMBOL
+0xb4a45c82	update_tpd_list	vmlinux	EXPORT_SYMBOL
+0xbb038ce4	perf_unregister_guest_info_callbacks	vmlinux	EXPORT_SYMBOL_GPL
+0x7da170b3	atm_dev_release_vccs	net/atm/atm	EXPORT_SYMBOL
+0x572c4578	usb_anchor_urb	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x750b7f08	mite_unsetup	drivers/staging/comedi/drivers/mite	EXPORT_SYMBOL
+0xcf97f3bd	dead_socket	drivers/pcmcia/pcmcia_core	EXPORT_SYMBOL
+0xe216eb81	libipw_wx_set_encodeext	drivers/net/wireless/ipw2x00/libipw	EXPORT_SYMBOL
+0x2a843bef	i2o_dump_message	drivers/message/i2o/i2o_core	EXPORT_SYMBOL
+0xbaa513b0	dm_sm_disk_open	drivers/md/persistent-data/dm-persistent-data	EXPORT_SYMBOL_GPL
+0x0d606409	pcibios_set_irq_routing	vmlinux	EXPORT_SYMBOL
+0x1de3d480	pci_clear_mwi	vmlinux	EXPORT_SYMBOL
+0x44b28e06	shash_attr_alg	vmlinux	EXPORT_SYMBOL_GPL
+0x63eb9355	panic_blink	vmlinux	EXPORT_SYMBOL
+0x68c51ed7	rds_info_deregister_func	net/rds/rds	EXPORT_SYMBOL_GPL
+0xf0c333d6	uwb_rsv_establish	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0x8b71f379	rtl92c_dm_watchdog	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0xdb6e2f2e	ppp_register_channel	drivers/net/ppp/ppp_generic	EXPORT_SYMBOL
+0x023ecaec	ata_sas_port_stop	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xdd98a6c4	xenbus_dev_attrs	vmlinux	EXPORT_SYMBOL_GPL
+0x24c7698a	xenbus_write	vmlinux	EXPORT_SYMBOL_GPL
+0x0d189ab6	pci_cfg_access_trylock	vmlinux	EXPORT_SYMBOL_GPL
+0xa4fc162c	__sync_dirty_buffer	vmlinux	EXPORT_SYMBOL
+0xd59ac783	kmap_high	vmlinux	EXPORT_SYMBOL
+0xc2fbb1ef	cancel_dirty_page	vmlinux	EXPORT_SYMBOL
+0xf4fc2d6c	__ring_buffer_alloc	vmlinux	EXPORT_SYMBOL_GPL
+0x82072614	tasklet_kill	vmlinux	EXPORT_SYMBOL
+0x5031b8c5	rds_str_array	net/rds/rds	EXPORT_SYMBOL
+0x6c8fe6ab	ieee80211_get_beacon_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x73cbabf7	scsi_print_command	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x063ce087	fc_get_host_speed	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0xc67fa99b	fc_fc4_deregister_provider	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0xbe53c963	dvb_unregister_frontend	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0x77058be0	__gameport_register_port	drivers/input/gameport/gameport	EXPORT_SYMBOL
+0xae849df9	i2c_use_client	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x4997e47d	drm_agp_alloc	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x10b6671f	async_syndrome_val	crypto/async_tx/async_pq	EXPORT_SYMBOL_GPL
+0xd296def9	kvm_is_error_hva	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xdae6f89e	xenbus_probe_node	vmlinux	EXPORT_SYMBOL_GPL
+0x17f3d862	pci_try_set_mwi	vmlinux	EXPORT_SYMBOL
+0x0cfd5d9c	bio_endio	vmlinux	EXPORT_SYMBOL
+0xf2512e89	account_page_redirty	vmlinux	EXPORT_SYMBOL
+0x85c7f674	ring_buffer_normalize_time_stamp	vmlinux	EXPORT_SYMBOL_GPL
+0x93fbd788	nf_ct_expect_unregister_notifier	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xd16cde50	ieee80211_stop_queues	net/mac80211/mac80211	EXPORT_SYMBOL
+0x2b20dfcf	wa_create	drivers/usb/wusbcore/wusb-wa	EXPORT_SYMBOL_GPL
+0x35e1b9c7	sas_rphy_remove	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL
+0xad72388c	pcmcia_register_driver	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0xc5fa5069	libipw_set_geo	drivers/net/wireless/ipw2x00/libipw	EXPORT_SYMBOL
+0xf662d7c6	libipw_get_geo	drivers/net/wireless/ipw2x00/libipw	EXPORT_SYMBOL
+0xd60736ec	gf128mul_free_64k	crypto/gf128mul	EXPORT_SYMBOL
+0xe12ce339	cryptd_ablkcipher_child	crypto/cryptd	EXPORT_SYMBOL_GPL
+0x22798bca	sk_stop_timer	vmlinux	EXPORT_SYMBOL
+0xef605bbd	xenbus_frontend_closed	vmlinux	EXPORT_SYMBOL_GPL
+0x5654f836	erst_get_record_id_next	vmlinux	EXPORT_SYMBOL_GPL
+0xb1645a2e	sg_free_table	vmlinux	EXPORT_SYMBOL
+0x2b40a45f	locks_remove_posix	vmlinux	EXPORT_SYMBOL
+0xb0b85f47	ring_buffer_iter_reset	vmlinux	EXPORT_SYMBOL_GPL
+0x91b41804	i1480_rceb_check	drivers/uwb/i1480/dfu/i1480-dfu-usb	EXPORT_SYMBOL_GPL
+0x44514596	iscsi_unregister_transport	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0x17a78f76	stv090x_set_gpio	drivers/media/dvb/frontends/stv090x	EXPORT_SYMBOL
+0x3c551b43	pm_generic_thaw_noirq	vmlinux	EXPORT_SYMBOL_GPL
+0xccd19013	alloc_xenballooned_pages	vmlinux	EXPORT_SYMBOL
+0xcf88b5fc	pcie_port_service_unregister	vmlinux	EXPORT_SYMBOL
+0x5d5b5a16	radix_tree_delete	vmlinux	EXPORT_SYMBOL
+0x18582826	amd_pmu_disable_virt	vmlinux	EXPORT_SYMBOL_GPL
+0x86a6768a	snd_aci_cmd	sound/isa/opti9xx/snd-miro	EXPORT_SYMBOL
+0xa54dbc07	ieee80211_enable_dyn_ps	net/mac80211/mac80211	EXPORT_SYMBOL
+0x72815d02	z8530_init	drivers/net/wan/z85230	EXPORT_SYMBOL
+0xcbba536b	simple_tuner_attach	drivers/media/common/tuners/tuner-simple	EXPORT_SYMBOL_GPL
+0x637dbd53	kvm_put_kvm	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xd07d15ec	tcp_slow_start	vmlinux	EXPORT_SYMBOL_GPL
+0x93994702	proc_net_netfilter	vmlinux	EXPORT_SYMBOL
+0xb38d2d48	dev_activate	vmlinux	EXPORT_SYMBOL
+0xe4f196ac	__pneigh_lookup	vmlinux	EXPORT_SYMBOL_GPL
+0x2ccfe23b	led_brightness_set	vmlinux	EXPORT_SYMBOL
+0x95c41dcf	devm_ioremap	vmlinux	EXPORT_SYMBOL
+0xc6cc6913	devm_iounmap	vmlinux	EXPORT_SYMBOL
+0x5541ea93	on_each_cpu	vmlinux	EXPORT_SYMBOL
+0x91a70cc8	dma_set_mask	vmlinux	EXPORT_SYMBOL
+0x3ea64308	snd_hda_codec_set_power_to_all	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x4202f686	snd_msnd_disable_irq	sound/isa/msnd/snd-msnd-lib	EXPORT_SYMBOL
+0x36caf5e9	snd_gf1_stop_voice	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0x67408466	snd_pcm_set_sync	sound/core/snd-pcm	EXPORT_SYMBOL
+0x29bb1845	pcmcia_loop_tuple	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0x8e30f4a9	parport_find_number	drivers/parport/parport	EXPORT_SYMBOL
+0xe33a4406	mISDN_freebchannel	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0xbf797ebf	drm_gem_object_lookup	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xc65abeb7	agp3_generic_sizes	vmlinux	EXPORT_SYMBOL
+0xfa1e2c1e	nla_reserve	vmlinux	EXPORT_SYMBOL
+0x2713c6e9	bioset_create	vmlinux	EXPORT_SYMBOL
+0xad18580f	cgroup_lock_live_group	vmlinux	EXPORT_SYMBOL_GPL
+0x295db419	x86_hyper	vmlinux	EXPORT_SYMBOL
+0x08005496	xen_privcmd_fops	drivers/xen/xen-privcmd	EXPORT_SYMBOL_GPL
+0x5f23a9c8	speakup_event	drivers/staging/speakup/speakup	EXPORT_SYMBOL_GPL
+0xb6cd73e7	rtl92c_dm_bt_coexist	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0xcde4e191	dib0070_attach	drivers/media/dvb/frontends/dib0070	EXPORT_SYMBOL
+0x856045e3	rtnl_put_cacheinfo	vmlinux	EXPORT_SYMBOL_GPL
+0xda10e1cd	__cpufreq_driver_target	vmlinux	EXPORT_SYMBOL_GPL
+0xea124bd1	gcd	vmlinux	EXPORT_SYMBOL_GPL
+0x3428642e	ihold	vmlinux	EXPORT_SYMBOL
+0xb8fa285d	names_cachep	vmlinux	EXPORT_SYMBOL
+0x815df2ce	invalidate_inode_pages2_range	vmlinux	EXPORT_SYMBOL_GPL
+0x780caa12	snd_info_create_card_entry	sound/core/snd	EXPORT_SYMBOL
+0xc8e96dea	qword_addhex	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xb0d904b7	raid6_empty_zero_page	lib/raid6/raid6_pq	EXPORT_SYMBOL
+0x46180183	ore_check_io	fs/exofs/libore	EXPORT_SYMBOL
+0xb4523c62	z8530_null_rx	drivers/net/wan/z85230	EXPORT_SYMBOL
+0x6c476f6d	ata_qc_complete_multiple	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xc6c594f9	kvm_emulate_wbinvd	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xb1233aa5	xfrm_policy_register_afinfo	vmlinux	EXPORT_SYMBOL
+0x30288feb	pci_unmap_rom	vmlinux	EXPORT_SYMBOL
+0x1f8cb5e8	key_instantiate_and_link	vmlinux	EXPORT_SYMBOL
+0x63bc3ab6	dentry_path_raw	vmlinux	EXPORT_SYMBOL
+0x2838aa94	wimax_msg_alloc	net/wimax/wimax	EXPORT_SYMBOL_GPL
+0x7063fb2c	mlx4_mr_alloc	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xcce985bf	mpt_get_msg_frame	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0xf0b9afb1	ttm_bo_unref	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x403e6778	kvm_cpu_has_interrupt	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x29df180d	xfrm_sad_getinfo	vmlinux	EXPORT_SYMBOL
+0xf9a8cba7	netif_napi_del	vmlinux	EXPORT_SYMBOL
+0x0f751aea	input_event_from_user	vmlinux	EXPORT_SYMBOL_GPL
+0x4484a5a4	wait_for_device_probe	vmlinux	EXPORT_SYMBOL_GPL
+0xdd5ef163	tty_port_put	vmlinux	EXPORT_SYMBOL
+0xa9a82042	gnttab_trans_grants_available	vmlinux	EXPORT_SYMBOL_GPL
+0xa1b759ce	fb_add_videomode	vmlinux	EXPORT_SYMBOL
+0xd0ddb714	crypto_register_alg	vmlinux	EXPORT_SYMBOL_GPL
+0x386b341b	pstore_cannot_block_path	vmlinux	EXPORT_SYMBOL_GPL
+0xf359a3a3	debugfs_rename	vmlinux	EXPORT_SYMBOL_GPL
+0xfb1e75c5	simple_open	vmlinux	EXPORT_SYMBOL
+0x66dcc62b	single_open	vmlinux	EXPORT_SYMBOL
+0x078e5af3	page_follow_link_light	vmlinux	EXPORT_SYMBOL
+0xf07af930	snd_ac97_suspend	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0x198788b4	snd_lookup_oss_minor_data	sound/core/snd	EXPORT_SYMBOL
+0x4a3ea5c0	snd_request_card	sound/core/snd	EXPORT_SYMBOL
+0xdefb37ec	cfg80211_send_disassoc	net/wireless/cfg80211	EXPORT_SYMBOL
+0xfef96e23	__scsi_print_command	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x615ef0ef	brcmu_pktq_mlen	drivers/net/wireless/brcm80211/brcmutil/brcmutil	EXPORT_SYMBOL
+0xb848d951	brcmu_pktq_mdeq	drivers/net/wireless/brcm80211/brcmutil/brcmutil	EXPORT_SYMBOL
+0x9c4dcd73	drm_helper_disable_unused_functions	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0x8cfa375c	scx200_gpio_shadow	arch/x86/platform/scx200/scx200	EXPORT_SYMBOL
+0x908de210	kvm_get_guest_memory_type	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xb6737f0a	xfrm6_find_1stfragopt	vmlinux	EXPORT_SYMBOL
+0xea7b8a44	acpi_install_interface	vmlinux	EXPORT_SYMBOL
+0x90d9efe9	register_ftrace_event	vmlinux	EXPORT_SYMBOL_GPL
+0x373cc639	kthread_stop	vmlinux	EXPORT_SYMBOL
+0x58fef6f8	ist_info	vmlinux	EXPORT_SYMBOL
+0x1a724fcc	snd_seq_kernel_client_ctl	sound/core/seq/snd-seq	EXPORT_SYMBOL
+0x1ddad6a7	rxrpc_kernel_intercept_rx_messages	net/rxrpc/af-rxrpc	EXPORT_SYMBOL
+0xc9027674	l2tp_nl_register_ops	net/l2tp/l2tp_netlink	EXPORT_SYMBOL_GPL
+0xc4f1a136	lockd_down	fs/lockd/lockd	EXPORT_SYMBOL_GPL
+0xd0e957e0	journal_trans_will_send_data_barrier	fs/jbd/jbd	EXPORT_SYMBOL
+0x186043ba	mlx4_pd_alloc	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x494d9a26	dm_register_target	drivers/md/dm-mod	EXPORT_SYMBOL
+0x49a14b75	gameport_unregister_driver	drivers/input/gameport/gameport	EXPORT_SYMBOL
+0x593ec4b5	ii_msgs	drivers/edac/edac_mce_amd	EXPORT_SYMBOL_GPL
+0x45081703	ec_get_handle	vmlinux	EXPORT_SYMBOL
+0xdd29be69	security_inode_create	vmlinux	EXPORT_SYMBOL_GPL
+0xcfe766d8	xprt_reserve_xprt	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x4545974c	ieee80211_nullfunc_get	net/mac80211/mac80211	EXPORT_SYMBOL
+0x026c1368	ax25_display_timer	net/ax25/ax25	EXPORT_SYMBOL
+0x761225ea	__scsi_get_command	drivers/scsi/scsi_mod	EXPORT_SYMBOL_GPL
+0xa980a428	__scsi_put_command	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xcda04a5b	v4l2_prio_close	drivers/media/video/videodev	EXPORT_SYMBOL
+0x11e5f7bb	hid_register_report	drivers/hid/hid	EXPORT_SYMBOL_GPL
+0x022c69b7	ahci_kick_engine	drivers/ata/libahci	EXPORT_SYMBOL_GPL
+0xcb15eee9	sdhci_pci_get_data	vmlinux	EXPORT_SYMBOL_GPL
+0xe4d26a36	rtc_set_alarm	vmlinux	EXPORT_SYMBOL_GPL
+0xaa4a7797	hex2bin	vmlinux	EXPORT_SYMBOL
+0x2a7fbc38	crypto_default_rng	vmlinux	EXPORT_SYMBOL_GPL
+0x2b53b05d	d_make_root	vmlinux	EXPORT_SYMBOL
+0xf5510827	__snd_util_mem_free	sound/synth/snd-util-mem	EXPORT_SYMBOL
+0x303101ae	ip_set_test	net/netfilter/ipset/ip_set	EXPORT_SYMBOL_GPL
+0x0bb6bf5e	wusb_cluster_id_get	drivers/usb/wusbcore/wusbcore	EXPORT_SYMBOL_GPL
+0xd0b8ea06	ezusb_writememory	drivers/usb/serial/usbserial	EXPORT_SYMBOL_GPL
+0x6e44fd9f	ib_sa_register_client	drivers/infiniband/core/ib_sa	EXPORT_SYMBOL
+0xcc83ee25	ttm_object_device_init	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0xa1b2d9ac	inet_csk_listen_start	vmlinux	EXPORT_SYMBOL_GPL
+0x385f5bb3	regmap_update_bits_check	vmlinux	EXPORT_SYMBOL_GPL
+0xfcc2a43c	utf32_to_utf8	vmlinux	EXPORT_SYMBOL
+0xb1cdf500	blk_trace_remove	vmlinux	EXPORT_SYMBOL_GPL
+0x800df1d7	groups_free	vmlinux	EXPORT_SYMBOL
+0x8abf06e3	cleanup_srcu_struct	vmlinux	EXPORT_SYMBOL_GPL
+0x3980aac1	unregister_reboot_notifier	vmlinux	EXPORT_SYMBOL
+0x2def7f76	rtc_cmos_write	vmlinux	EXPORT_SYMBOL
+0x900faa1a	ceph_osdc_writepages	net/ceph/libceph	EXPORT_SYMBOL
+0x8e146195	synth_release_region	drivers/staging/speakup/speakup	EXPORT_SYMBOL_GPL
+0xae6b11fa	mptscsih_taskmgmt_complete	drivers/message/fusion/mptscsih	EXPORT_SYMBOL
+0xaa165d27	capilib_release_appl	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0xc0890413	gf128mul_64k_lle	crypto/gf128mul	EXPORT_SYMBOL
+0x384ef9ce	gf128mul_64k_bbe	crypto/gf128mul	EXPORT_SYMBOL
+0x2259bf03	tcf_destroy_chain	vmlinux	EXPORT_SYMBOL
+0x47fa6721	regmap_register_patch	vmlinux	EXPORT_SYMBOL_GPL
+0x35a30316	tty_perform_flush	vmlinux	EXPORT_SYMBOL_GPL
+0xa156a1f2	erst_get_record_id_end	vmlinux	EXPORT_SYMBOL_GPL
+0xf0696401	acpi_pci_detect_ejectable	vmlinux	EXPORT_SYMBOL_GPL
+0x6c0398a2	pci_request_region_exclusive	vmlinux	EXPORT_SYMBOL
+0xe997667b	wrmsr_on_cpu	vmlinux	EXPORT_SYMBOL
+0x9cdf0ec5	vfsmount_lock_global_lock_online	vmlinux	EXPORT_SYMBOL
+0xd2e5d342	ip_vs_scheduler_err	net/netfilter/ipvs/ip_vs	EXPORT_SYMBOL
+0x89b18b38	ieee80211_stop_rx_ba_session	net/mac80211/mac80211	EXPORT_SYMBOL
+0xcaf04a4f	i2o_iop_find_device	drivers/message/i2o/i2o_core	EXPORT_SYMBOL
+0x4be69297	fw_core_handle_request	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0x1aba5db8	ipmi_unregister_smi	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0x5118c382	secure_dccp_sequence_number	vmlinux	EXPORT_SYMBOL
+0xee7eb9e1	pnp_platform_devices	vmlinux	EXPORT_SYMBOL
+0xce0737cb	debugfs_remove_recursive	vmlinux	EXPORT_SYMBOL_GPL
+0xf37260ab	_raw_read_unlock_bh	vmlinux	EXPORT_SYMBOL
+0x63d8b3de	snd_es1688_mixer_write	sound/isa/es1688/snd-es1688-lib	EXPORT_SYMBOL
+0x32ba109b	cfg80211_send_deauth	net/wireless/cfg80211	EXPORT_SYMBOL
+0x04cabed9	rfkill_register	net/rfkill/rfkill	EXPORT_SYMBOL
+0x35d1e27e	p9_idpool_get	net/9p/9pnet	EXPORT_SYMBOL
+0x19a304ba	usb_disabled	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xd69a0294	cxgb4_best_mtu	drivers/net/ethernet/chelsio/cxgb4/cxgb4	EXPORT_SYMBOL
+0x532c4cc5	tpm_dev_release	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x3de08404	kvm_set_shared_msr	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x03378c4f	km_migrate	vmlinux	EXPORT_SYMBOL
+0xa3ab75e9	neigh_parms_alloc	vmlinux	EXPORT_SYMBOL
+0x38517837	cpuidle_unregister_device	vmlinux	EXPORT_SYMBOL_GPL
+0x1faa6daa	mount_single	vmlinux	EXPORT_SYMBOL
+0xc87e487a	sched_clock_idle_sleep_event	vmlinux	EXPORT_SYMBOL_GPL
+0x62cb4cee	interruptible_sleep_on	vmlinux	EXPORT_SYMBOL
+0x632e429d	amd_northbridges	vmlinux	EXPORT_SYMBOL
+0xca8d40fc	snd_i2c_device_create	sound/i2c/snd-i2c	EXPORT_SYMBOL
+0x5e7f4920	snd_pcm_format_set_silence	sound/core/snd-pcm	EXPORT_SYMBOL
+0x7560896b	libipw_wx_get_encode	drivers/net/wireless/ipw2x00/libipw	EXPORT_SYMBOL
+0x13523dfb	__ip_route_output_key	vmlinux	EXPORT_SYMBOL_GPL
+0xe6488b47	cpufreq_notify_transition	vmlinux	EXPORT_SYMBOL_GPL
+0xb9c425de	register_syscore_ops	vmlinux	EXPORT_SYMBOL_GPL
+0x354c00a8	intel_gmch_remove	vmlinux	EXPORT_SYMBOL
+0xda3ef2b0	blk_queue_invalidate_tags	vmlinux	EXPORT_SYMBOL
+0x08caadf4	remove_irq	vmlinux	EXPORT_SYMBOL_GPL
+0x93a6e0b2	io_schedule	vmlinux	EXPORT_SYMBOL
+0x9c54c219	ib_create_send_mad	drivers/infiniband/core/ib_mad	EXPORT_SYMBOL
+0xe6c19e16	ata_pci_bmdma_init	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xf019d78a	cfb_fillrect	vmlinux	EXPORT_SYMBOL
+0xf124d791	disk_part_iter_next	vmlinux	EXPORT_SYMBOL_GPL
+0x804159ff	block_write_end	vmlinux	EXPORT_SYMBOL
+0x0bb80c04	pid_vnr	vmlinux	EXPORT_SYMBOL_GPL
+0xa4d58669	math_state_restore	vmlinux	EXPORT_SYMBOL_GPL
+0x2d665d99	cfg80211_roamed_bss	net/wireless/cfg80211	EXPORT_SYMBOL
+0xba66fd57	ath9k_hw_beaconinit	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x06b70c01	sdhci_runtime_resume_host	drivers/mmc/host/sdhci	EXPORT_SYMBOL_GPL
+0x7a073203	__xfrm_decode_session	vmlinux	EXPORT_SYMBOL
+0xad5f1b39	nf_net_ipv4_netfilter_sysctl_path	vmlinux	EXPORT_SYMBOL_GPL
+0xd5e9298c	devm_regmap_init	vmlinux	EXPORT_SYMBOL_GPL
+0xd28afdd0	tty_port_lower_dtr_rts	vmlinux	EXPORT_SYMBOL
+0xda8fd495	isapnp_write_byte	vmlinux	EXPORT_SYMBOL
+0xf803fe39	bitmap_set	vmlinux	EXPORT_SYMBOL
+0x27f69da3	blkio_subsys	vmlinux	EXPORT_SYMBOL_GPL
+0xc6b14113	__pagevec_lru_add	vmlinux	EXPORT_SYMBOL
+0xd1b2db37	tracepoint_probe_register_noupdate	vmlinux	EXPORT_SYMBOL_GPL
+0x04ef8a1b	__clocksource_updatefreq_scale	vmlinux	EXPORT_SYMBOL_GPL
+0x2ba7ba2f	wiphy_rfkill_stop_polling	net/wireless/cfg80211	EXPORT_SYMBOL
+0x5739979e	mite_sync_output_dma	drivers/staging/comedi/drivers/mite	EXPORT_SYMBOL
+0x981428c0	fc_attach_transport	drivers/scsi/scsi_transport_fc	EXPORT_SYMBOL
+0xb1e4afc6	rt2800_txdone_entry	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0x64327821	mlx4_fmr_alloc	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xcf30ed53	cb710_sg_dwiter_write_next_block	drivers/misc/cb710/cb710	EXPORT_SYMBOL_GPL
+0x93b9187c	lnbh24_attach	drivers/media/dvb/frontends/lnbp21	EXPORT_SYMBOL
+0xc469c244	drm_fb_helper_restore	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0x01d492b1	netlink_set_err	vmlinux	EXPORT_SYMBOL
+0x2f7f0502	tr_type_trans	vmlinux	EXPORT_SYMBOL
+0x5936f39c	alloc_netdev_mqs	vmlinux	EXPORT_SYMBOL
+0xf993edbd	bus_register_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0x0eb9d8ad	agp_bridge	vmlinux	EXPORT_SYMBOL
+0xaae9fa50	gpiochip_add	vmlinux	EXPORT_SYMBOL_GPL
+0x336154ca	rcutorture_record_test_transition	vmlinux	EXPORT_SYMBOL_GPL
+0xdc714560	register_kprobe	vmlinux	EXPORT_SYMBOL_GPL
+0xb5d8913d	register_jprobe	vmlinux	EXPORT_SYMBOL_GPL
+0xc399468f	scsi_nl_remove_driver	drivers/scsi/scsi_mod	EXPORT_SYMBOL_GPL
+0xcee7324f	mlx4_srq_free	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xb1260af2	lis3lv02d_poweroff	drivers/misc/lis3lv02d/lis3lv02d	EXPORT_SYMBOL_GPL
+0x277f782b	mantis_frontend_soft_reset	drivers/media/dvb/mantis/mantis_core	EXPORT_SYMBOL_GPL
+0x0f5877d4	sch56xx_read_virtual_reg16	drivers/hwmon/sch56xx-common	EXPORT_SYMBOL
+0x613c4382	wireless_spy_update	vmlinux	EXPORT_SYMBOL
+0x20550058	inet_listen	vmlinux	EXPORT_SYMBOL
+0x83e0c015	register_snap_client	vmlinux	EXPORT_SYMBOL
+0xacd30dc5	__dst_destroy_metrics_generic	vmlinux	EXPORT_SYMBOL
+0xeab07512	skb_queue_purge	vmlinux	EXPORT_SYMBOL
+0xcfcc83ad	register_vt_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0x41719ff7	xenbus_match	vmlinux	EXPORT_SYMBOL_GPL
+0xfcbc11ce	get_unmapped_area	vmlinux	EXPORT_SYMBOL
+0x044c6111	add_to_page_cache_lru	vmlinux	EXPORT_SYMBOL_GPL
+0x38a55a7d	snd_hda_codec_read	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x9a8e1877	snd_array_free	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xa44f618e	nci_unregister_device	net/nfc/nci/nci	EXPORT_SYMBOL
+0x1adc483a	jbd2_journal_clear_features	fs/jbd2/jbd2	EXPORT_SYMBOL
+0x794faa8f	orinoco_process_xmit_skb	drivers/net/wireless/orinoco/orinoco	EXPORT_SYMBOL
+0x260c01fe	drm_fb_helper_check_var	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0x07b52e38	rtnl_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x23cc95cf	platform_bus_type	vmlinux	EXPORT_SYMBOL_GPL
+0x5f949849	agp_generic_destroy_pages	vmlinux	EXPORT_SYMBOL
+0xf7016530	xenbus_gather	vmlinux	EXPORT_SYMBOL_GPL
+0x0a146e5f	blk_rq_map_user	vmlinux	EXPORT_SYMBOL
+0xc6b2abcc	generic_pipe_buf_release	vmlinux	EXPORT_SYMBOL
+0x2dc39b6f	cmp_connection_update	sound/firewire/snd-firewire-lib	EXPORT_SYMBOL
+0xc0750cda	nf_ct_gre_keymap_add	net/netfilter/nf_conntrack_proto_gre	EXPORT_SYMBOL_GPL
+0x975d96cc	bt_accept_unlink	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x39cc685b	sdhci_pltfm_pmops	drivers/mmc/host/sdhci-pltfm	EXPORT_SYMBOL_GPL
+0xff08a1e6	enclosure_remove_device	drivers/misc/enclosure	EXPORT_SYMBOL_GPL
+0x9586adca	tm6000_init_digital_mode	drivers/media/video/tm6000/tm6000	EXPORT_SYMBOL
+0xd4ae3de2	d_find_alias	vmlinux	EXPORT_SYMBOL
+0x81d10f5f	trace_seq_putc	vmlinux	EXPORT_SYMBOL
+0x760a0f4f	yield	vmlinux	EXPORT_SYMBOL
+0xfa7a6cdd	xt_check_target	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0xe11cf7dd	comedi_pcm_cmdtest	drivers/staging/comedi/drivers/pcm_common	EXPORT_SYMBOL
+0x23818dd8	rt2x00queue_pause_queue	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x26696f84	sdio_claim_irq	drivers/mmc/core/mmc_core	EXPORT_SYMBOL_GPL
+0xca61e5aa	i2o_device_claim	drivers/message/i2o/i2o_core	EXPORT_SYMBOL
+0xd68057e3	rdma_listen	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0x3375acb6	__tracepoint_kfree_skb	vmlinux	EXPORT_SYMBOL_GPL
+0x53cb2800	__tracepoint_napi_poll	vmlinux	EXPORT_SYMBOL_GPL
+0xc7002ac4	evtchn_make_refcounted	vmlinux	EXPORT_SYMBOL_GPL
+0x1dc36131	fb_destroy_modedb	vmlinux	EXPORT_SYMBOL
+0x6189cf63	fsstack_copy_attr_all	vmlinux	EXPORT_SYMBOL_GPL
+0x8edfc605	acpi_processor_ffh_cstate_probe	vmlinux	EXPORT_SYMBOL_GPL
+0x4e28b375	snd_jack_report	sound/core/snd	EXPORT_SYMBOL
+0xc0de13e3	__nf_ct_try_assign_helper	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xb8e834b5	atm_dev_signal_change	net/atm/atm	EXPORT_SYMBOL
+0xd322b125	transport_init_session	drivers/target/target_core_mod	EXPORT_SYMBOL
+0xc59370a3	scsi_command_normalize_sense	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xa1a9f65b	ath_regd_get_band_ctl	drivers/net/wireless/ath/ath	EXPORT_SYMBOL
+0x52a9b58a	kvm_require_cpl	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x26836c6f	udp6_lib_lookup	vmlinux	EXPORT_SYMBOL_GPL
+0xa382b26a	xfrm_init_replay	vmlinux	EXPORT_SYMBOL
+0xb92b7272	udp4_lib_lookup	vmlinux	EXPORT_SYMBOL_GPL
+0x3b271ab0	genl_unregister_ops	vmlinux	EXPORT_SYMBOL
+0x9e2000a7	memcpy_toiovecend	vmlinux	EXPORT_SYMBOL
+0x9d47c254	xenbus_dev_fatal	vmlinux	EXPORT_SYMBOL_GPL
+0x86b05542	inode_init_always	vmlinux	EXPORT_SYMBOL
+0x866df2e1	inode_sb_list_add	vmlinux	EXPORT_SYMBOL_GPL
+0xc4fd250c	d_invalidate	vmlinux	EXPORT_SYMBOL
+0xa0b04675	vmalloc_32	vmlinux	EXPORT_SYMBOL
+0x07d696df	pid_task	vmlinux	EXPORT_SYMBOL
+0xd8ef89b8	set_h245_addr_hook	net/netfilter/nf_conntrack_h323	EXPORT_SYMBOL_GPL
+0x9935b8db	seq_print_acct	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x6dbfcc2e	stp_proto_register	net/802/stp	EXPORT_SYMBOL_GPL
+0x017ea7c7	cx231xx_tuner_callback	drivers/media/video/cx231xx/cx231xx	EXPORT_SYMBOL_GPL
+0x1bbb2647	drm_class_device_unregister	drivers/gpu/drm/drm	EXPORT_SYMBOL_GPL
+0x4cb758c7	tpm_register_hardware	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0xe6de9fcc	input_register_handler	vmlinux	EXPORT_SYMBOL
+0x833080ee	textsearch_unregister	vmlinux	EXPORT_SYMBOL
+0x2a37d074	dma_pool_free	vmlinux	EXPORT_SYMBOL
+0x32fd447a	monotonic_to_bootbased	vmlinux	EXPORT_SYMBOL_GPL
+0x988ed85d	set_memory_x	vmlinux	EXPORT_SYMBOL
+0x04355c49	garp_register_application	net/802/garp	EXPORT_SYMBOL_GPL
+0xeaa10fc6	scsi_unregister_device_handler	drivers/scsi/device_handler/scsi_dh	EXPORT_SYMBOL_GPL
+0x53c736eb	pcmcia_loop_config	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0xc28f0896	inet6_csk_bind_conflict	vmlinux	EXPORT_SYMBOL_GPL
+0xa35de80f	ipv4_config	vmlinux	EXPORT_SYMBOL
+0x66d0a128	netif_carrier_on	vmlinux	EXPORT_SYMBOL
+0xae9d317c	fib_rules_lookup	vmlinux	EXPORT_SYMBOL_GPL
+0xb0b847ac	__bitmap_full	vmlinux	EXPORT_SYMBOL
+0x4059792f	print_hex_dump	vmlinux	EXPORT_SYMBOL
+0x636ff575	fw_iso_resources_init	sound/firewire/snd-firewire-lib	EXPORT_SYMBOL
+0x175283b7	cfg80211_del_sta	net/wireless/cfg80211	EXPORT_SYMBOL
+0x7c6cc8ce	ieee80211_rts_duration	net/mac80211/mac80211	EXPORT_SYMBOL
+0xae808bac	o2net_register_handler	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0x28522fcf	rtl_cam_del_entry	drivers/net/wireless/rtlwifi/rtlwifi	EXPORT_SYMBOL
+0xd2fcbeda	s5h1420_get_tuner_i2c_adapter	drivers/media/dvb/frontends/s5h1420	EXPORT_SYMBOL
+0x300f2abb	dvb_ringbuffer_init	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0x48168ca0	drm_crtc_helper_set_config	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0x32216d48	drm_mode_group_init_legacy_group	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x6f7f93cd	ip6_route_output	vmlinux	EXPORT_SYMBOL
+0x51ff12a5	__rta_fill	vmlinux	EXPORT_SYMBOL
+0x67cd0b66	__dst_free	vmlinux	EXPORT_SYMBOL
+0x6f22558a	dev_pm_qos_add_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0x91063c91	inode_newsize_ok	vmlinux	EXPORT_SYMBOL
+0xca32b01c	pn_sock_get_port	net/phonet/phonet	EXPORT_SYMBOL
+0xb050f329	init_rs	lib/reed_solomon/reed_solomon	EXPORT_SYMBOL_GPL
+0x2d5bcb2e	nfs_pageio_reset_read_mds	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0xcd93caf0	virtqueue_kick_prepare	drivers/virtio/virtio_ring	EXPORT_SYMBOL_GPL
+0x5adeb8d6	iscsi_post_host_event	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0x01e33248	fcoe_ctlr_els_send	drivers/scsi/fcoe/libfcoe	EXPORT_SYMBOL
+0xee4c51f8	pcmcia_fixup_vpp	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0x84866c8b	kvm_inject_page_fault	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xbb80e1de	inet_csk_destroy_sock	vmlinux	EXPORT_SYMBOL
+0x9c6027ff	__pm_runtime_idle	vmlinux	EXPORT_SYMBOL_GPL
+0x626ba885	pci_disable_obff	vmlinux	EXPORT_SYMBOL
+0x78df6bd7	no_pci_devices	vmlinux	EXPORT_SYMBOL
+0x6c2e3320	strncmp	vmlinux	EXPORT_SYMBOL
+0x1e26be3b	get_anon_bdev	vmlinux	EXPORT_SYMBOL
+0x6b29a1fa	ring_buffer_event_length	vmlinux	EXPORT_SYMBOL_GPL
+0xdc635aac	snd_hda_jack_set_dirty_all	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x3796bdcc	snd_pcm_format_little_endian	sound/core/snd-pcm	EXPORT_SYMBOL
+0x4b32bf71	ieee80211_gtk_rekey_notify	net/mac80211/mac80211	EXPORT_SYMBOL_GPL
+0x4027d636	irttp_flow_request	net/irda/irda	EXPORT_SYMBOL
+0x692b263c	dccp_reqsk_send_ack	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x5da4b91d	usb_stor_access_xfer_buf	drivers/usb/storage/usb-storage	EXPORT_SYMBOL_GPL
+0x224cc39d	core_tpg_add_initiator_node_acl	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x3451e45f	zs_malloc	drivers/staging/zsmalloc/zsmalloc	EXPORT_SYMBOL_GPL
+0x8285332a	range_labpc_1200_ai	drivers/staging/comedi/drivers/ni_labpc	EXPORT_SYMBOL_GPL
+0x93cd46d3	sock_kfree_s	vmlinux	EXPORT_SYMBOL
+0xa34f1ef5	crc32_le	vmlinux	EXPORT_SYMBOL
+0xf54bd49b	lcm	vmlinux	EXPORT_SYMBOL_GPL
+0xb903674c	scatterwalk_map_and_copy	vmlinux	EXPORT_SYMBOL_GPL
+0x5c08da83	empty_aops	vmlinux	EXPORT_SYMBOL
+0x56816d94	__task_pid_nr_ns	vmlinux	EXPORT_SYMBOL
+0x9cb64660	target_fabric_configfs_register	drivers/target/target_core_mod	EXPORT_SYMBOL
+0xeecaedfe	sas_port_free	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL
+0x30af5211	iscsi_tcp_task_init	drivers/scsi/libiscsi_tcp	EXPORT_SYMBOL_GPL
+0xdb870b60	pps_lookup_dev	drivers/pps/pps_core	EXPORT_SYMBOL
+0x930cc825	v4l2_try_ext_ctrls	drivers/media/video/videodev	EXPORT_SYMBOL
+0xb492ec3c	ethtool_op_get_link	vmlinux	EXPORT_SYMBOL
+0x5d12e48f	input_event_to_user	vmlinux	EXPORT_SYMBOL_GPL
+0xdf732e9b	input_unregister_device	vmlinux	EXPORT_SYMBOL
+0x560c6a38	acpi_leave_sleep_state_prep	vmlinux	EXPORT_SYMBOL
+0x297e1c21	read_cache_pages	vmlinux	EXPORT_SYMBOL
+0x4aadeb9a	ring_buffer_alloc_read_page	vmlinux	EXPORT_SYMBOL_GPL
+0x460f31aa	rodata_test_data	vmlinux	EXPORT_SYMBOL_GPL
+0xef9aedfc	boot_option_idle_override	vmlinux	EXPORT_SYMBOL
+0x63343b1d	snd_usbmidi_input_stop	sound/usb/snd-usbmidi-lib	EXPORT_SYMBOL
+0x53445f68	nlm_debug	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xaa157485	ieee80211_get_tkip_rx_p1k	net/mac80211/mac80211	EXPORT_SYMBOL
+0x853ff3db	stp_proto_unregister	net/802/stp	EXPORT_SYMBOL_GPL
+0x7d97bffa	fat_add_entries	fs/fat/fat	EXPORT_SYMBOL_GPL
+0x85e88b4a	umc_controller_reset	drivers/uwb/umc	EXPORT_SYMBOL_GPL
+0x523c8565	subdev_8255_init_irq	drivers/staging/comedi/drivers/8255	EXPORT_SYMBOL
+0x6a625c13	sas_port_alloc_num	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL
+0x8d43ece0	mii_nway_restart	drivers/net/mii	EXPORT_SYMBOL
+0x1d5466f2	i2o_status_get	drivers/message/i2o/i2o_core	EXPORT_SYMBOL
+0xbdb60765	dvb_net_release	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0xfbcfa1ff	bitmap_end_sync	drivers/md/md-mod	EXPORT_SYMBOL
+0xae90296d	ip_generic_getfrag	vmlinux	EXPORT_SYMBOL
+0xc940ae63	call_netdevice_notifiers	vmlinux	EXPORT_SYMBOL
+0xdc825d6c	usb_amd_quirk_pll_disable	vmlinux	EXPORT_SYMBOL_GPL
+0xa6b21ef2	dpm_suspend_end	vmlinux	EXPORT_SYMBOL_GPL
+0x6d7e8f3b	crypto_enqueue_request	vmlinux	EXPORT_SYMBOL_GPL
+0xc62fda19	crypto_dequeue_request	vmlinux	EXPORT_SYMBOL_GPL
+0x27c45d85	bio_integrity_alloc	vmlinux	EXPORT_SYMBOL
+0x615bf560	thaw_bdev	vmlinux	EXPORT_SYMBOL
+0x6fe340df	kmem_cache_alloc_trace	vmlinux	EXPORT_SYMBOL
+0x2d3cf2ca	set_pages_array_uc	vmlinux	EXPORT_SYMBOL
+0x110d79ad	current_task	vmlinux	EXPORT_SYMBOL
+0x712f29b4	print_context_stack	vmlinux	EXPORT_SYMBOL_GPL
+0x9ce36280	libipw_wx_set_encode	drivers/net/wireless/ipw2x00/libipw	EXPORT_SYMBOL
+0xbe1623d1	videobuf_poll_stream	drivers/media/video/videobuf-core	EXPORT_SYMBOL_GPL
+0xcce17951	drm_fb_helper_restore_fbdev_mode	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0xd0b7a4ba	ata_sff_data_xfer32	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x1718e209	sk_run_filter	vmlinux	EXPORT_SYMBOL
+0x8d65ad6f	netdev_rx_csum_fault	vmlinux	EXPORT_SYMBOL
+0xdb4973cd	devres_release_group	vmlinux	EXPORT_SYMBOL_GPL
+0x88b0844e	btree_init_mempool	vmlinux	EXPORT_SYMBOL_GPL
+0x9e61bb05	set_freezable	vmlinux	EXPORT_SYMBOL
+0xe56a9336	snd_pcm_format_width	sound/core/snd-pcm	EXPORT_SYMBOL
+0xe100e10a	xdr_decode_array2	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x873291bc	ipt_register_table	net/ipv4/netfilter/ip_tables	EXPORT_SYMBOL
+0xda82d0a0	bt_sock_reclassify_lock	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0xe819435f	tda10023_attach	drivers/media/dvb/frontends/tda10023	EXPORT_SYMBOL
+0x5b6388d3	tda10021_attach	drivers/media/dvb/frontends/tda10021	EXPORT_SYMBOL
+0xc0e855ff	ata_pio_need_iordy	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x2acb2174	ipv6_push_nfrag_opts	vmlinux	EXPORT_SYMBOL
+0x1b005c51	neigh_sysctl_unregister	vmlinux	EXPORT_SYMBOL
+0x81472677	acpi_get_table	vmlinux	EXPORT_SYMBOL
+0xc9561772	fb_destroy_modelist	vmlinux	EXPORT_SYMBOL_GPL
+0xc94b59ff	blk_abort_request	vmlinux	EXPORT_SYMBOL_GPL
+0xc3d45ec1	snd_mixer_oss_notify_callback	sound/core/snd	EXPORT_SYMBOL
+0xd7f487de	ieee802154_nl_disassoc_confirm	net/ieee802154/ieee802154	EXPORT_SYMBOL
+0x7da7b850	sdio_writeb_readb	drivers/mmc/core/mmc_core	EXPORT_SYMBOL_GPL
+0x82611301	drm_crtc_cleanup	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x88015311	__scm_destroy	vmlinux	EXPORT_SYMBOL
+0xca81ea9a	xenbus_transaction_end	vmlinux	EXPORT_SYMBOL_GPL
+0x432dab8d	d_move	vmlinux	EXPORT_SYMBOL
+0x5091b823	ring_buffer_read_start	vmlinux	EXPORT_SYMBOL_GPL
+0x49ad8ec0	snd_hda_codec_amp_stereo	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x2a3e627d	ipcomp_destroy	net/xfrm/xfrm_ipcomp	EXPORT_SYMBOL_GPL
+0x863a6537	rpc_wake_up_first	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x911d8749	fc_lport_set_local_id	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x6cd09f72	rt2x00mac_flush	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x4de6ca5a	ath9k_cmn_get_curchannel	drivers/net/wireless/ath/ath9k/ath9k_common	EXPORT_SYMBOL
+0x1ed73f87	b1_loaded	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0xf5294b3e	rdma_reject	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0x96cbcc81	ipmi_get_version	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0x3dc8dbb3	dev_addr_del_multiple	vmlinux	EXPORT_SYMBOL
+0xf18242e1	atomic64_set_cx8	vmlinux	EXPORT_SYMBOL
+0xf9a0778c	request_key_async	vmlinux	EXPORT_SYMBOL
+0x960d604d	touch_atime	vmlinux	EXPORT_SYMBOL
+0x53614269	get_cpu_idle_time_us	vmlinux	EXPORT_SYMBOL_GPL
+0x2b7e7adb	ieee80211_unregister_hw	net/mac80211/mac80211	EXPORT_SYMBOL
+0xe7e19c1c	pcmcia_enable_device	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0xa4a03127	rtl92c_dm_init	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0xbd17a0df	gf128mul_4k_lle	crypto/gf128mul	EXPORT_SYMBOL
+0x0c2f123f	gf128mul_4k_bbe	crypto/gf128mul	EXPORT_SYMBOL
+0x6050eac6	device_set_wakeup_capable	vmlinux	EXPORT_SYMBOL_GPL
+0x03e96a40	padata_do_serial	vmlinux	EXPORT_SYMBOL
+0xd0d42c42	mod_timer_pending	vmlinux	EXPORT_SYMBOL
+0x30aa9119	phonet_proto_unregister	net/phonet/phonet	EXPORT_SYMBOL
+0x442d5ba8	dibusb_read_eeprom_byte	drivers/media/dvb/dvb-usb/dvb-usb-dibusb-common	EXPORT_SYMBOL
+0x5fa43d74	ib_unregister_device	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x329605e4	ib_modify_cq	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x951c66f0	ttm_tt_init	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x77e8dba2	acpi_processor_notify_smm	drivers/acpi/processor	EXPORT_SYMBOL
+0x68540f4f	cryptd_free_ablkcipher	crypto/cryptd	EXPORT_SYMBOL_GPL
+0xa905f84d	rtnl_configure_link	vmlinux	EXPORT_SYMBOL
+0xde390000	sock_wmalloc	vmlinux	EXPORT_SYMBOL
+0x7f18b194	kacpi_hotplug_wq	vmlinux	EXPORT_SYMBOL
+0x1853653c	btree_alloc	vmlinux	EXPORT_SYMBOL_GPL
+0x349cba85	strchr	vmlinux	EXPORT_SYMBOL
+0xf890fe7f	pm_idle	vmlinux	EXPORT_SYMBOL
+0x1e6d26a8	strstr	vmlinux	EXPORT_SYMBOL
+0xa4ce93aa	snd_sb8dsp_midi	sound/isa/sb/snd-sb8-dsp	EXPORT_SYMBOL
+0xb7358795	dib0090_set_switch	drivers/media/dvb/frontends/dib0090	EXPORT_SYMBOL
+0x316ff703	xenbus_bind_evtchn	vmlinux	EXPORT_SYMBOL_GPL
+0xc2ca6fae	perf_event_disable	vmlinux	EXPORT_SYMBOL_GPL
+0x2dd16564	arch_register_cpu	vmlinux	EXPORT_SYMBOL
+0x1ff1b36f	ieee80211_get_buffered_bc	net/mac80211/mac80211	EXPORT_SYMBOL
+0x1ca6836b	usb_serial_generic_resume	drivers/usb/serial/usbserial	EXPORT_SYMBOL_GPL
+0xeec24d31	usb_wait_anchor_empty_timeout	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x89754228	efuse_read_1byte	drivers/net/wireless/rtlwifi/rtlwifi	EXPORT_SYMBOL
+0x3a51ff34	rtl92c_set_fw_pwrmode_cmd	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0xccaf0a4c	ppp_channel_index	drivers/net/ppp/ppp_generic	EXPORT_SYMBOL
+0x64e04f71	cfi_qry_mode_off	drivers/mtd/chips/cfi_util	EXPORT_SYMBOL_GPL
+0x22163b69	dm_bufio_release_move	drivers/md/dm-bufio	EXPORT_SYMBOL_GPL
+0x47e0a9b8	recv_Echannel	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0x18c49049	ttm_bo_validate	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x2f114c15	inet_csk_listen_stop	vmlinux	EXPORT_SYMBOL_GPL
+0xf2fca922	uart_parse_options	vmlinux	EXPORT_SYMBOL_GPL
+0x460df954	pnp_release_card_device	vmlinux	EXPORT_SYMBOL
+0xb653bcbc	kobject_create_and_add	vmlinux	EXPORT_SYMBOL_GPL
+0xcd451317	setup_new_exec	vmlinux	EXPORT_SYMBOL
+0xdb8a1b3f	usermodehelper_read_trylock	vmlinux	EXPORT_SYMBOL_GPL
+0x428321fa	hashbin_get_next	net/irda/irda	EXPORT_SYMBOL
+0xca5f3da3	macvlan_link_register	drivers/net/macvlan	EXPORT_SYMBOL_GPL
+0x09b901a3	sirdev_set_dongle	drivers/net/irda/sir-dev	EXPORT_SYMBOL
+0x39266513	md_check_recovery	drivers/md/md-mod	EXPORT_SYMBOL
+0x3555349a	drm_noop	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x5a479f03	xfrm_state_lookup_byaddr	vmlinux	EXPORT_SYMBOL
+0x322f24a2	pskb_expand_head	vmlinux	EXPORT_SYMBOL
+0x2c635a22	wakeup_source_prepare	vmlinux	EXPORT_SYMBOL_GPL
+0xb28ed693	snd_msnd_upload_host	sound/isa/msnd/snd-msnd-lib	EXPORT_SYMBOL
+0x61296cd0	lc_create	lib/lru_cache	EXPORT_SYMBOL
+0xbdc60dab	fuse_do_ioctl	fs/fuse/fuse	EXPORT_SYMBOL_GPL
+0x3a87307a	spi_display_xfer_agreement	drivers/scsi/scsi_transport_spi	EXPORT_SYMBOL
+0xe9bea1f1	__iscsi_get_task	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0x26815f5d	__iscsi_put_task	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0xb9a68010	iscsi_boot_create_kset	drivers/scsi/iscsi_boot_sysfs	EXPORT_SYMBOL_GPL
+0x4d640a5d	tms380tr_netdev_ops	drivers/net/tokenring/tms380tr	EXPORT_SYMBOL
+0x555dcdbc	b1ctl_proc_fops	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0x0ba70ca0	sparse_keymap_report_event	drivers/input/sparse-keymap	EXPORT_SYMBOL
+0x1baba78a	i2c_release_client	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x66d5fdbf	take_over_console	vmlinux	EXPORT_SYMBOL
+0x59eac7af	pm_qos_update_request	vmlinux	EXPORT_SYMBOL_GPL
+0x50754510	register_atmdevice_notifier	net/atm/atm	EXPORT_SYMBOL_GPL
+0xb5585ebc	cxgbi_create_conn	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0x80b8db0f	rt2800_init_eeprom	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0xa87edda8	ath9k_hw_setrxabort	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xf19e37f6	tda665x_attach	drivers/media/dvb/frontends/tda665x	EXPORT_SYMBOL
+0xac4ca1b0	intlog2	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0x28c5a819	ata_bmdma_port_intr	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xdba1257c	rtnl_link_register	vmlinux	EXPORT_SYMBOL_GPL
+0x823785e3	dma_buf_export	vmlinux	EXPORT_SYMBOL_GPL
+0x51be5680	dma_mark_declared_memory_occupied	vmlinux	EXPORT_SYMBOL
+0xcf6cfe1f	msrs_free	vmlinux	EXPORT_SYMBOL
+0x50aff291	lock_may_write	vmlinux	EXPORT_SYMBOL
+0x246ec6c5	bh_submit_read	vmlinux	EXPORT_SYMBOL
+0x6f1b199d	xdr_buf_read_netobj	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x24a85795	rpc_localaddr	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xd116a91e	ec100_attach	drivers/media/dvb/frontends/ec100	EXPORT_SYMBOL
+0xccd386c8	eth_header_parse	vmlinux	EXPORT_SYMBOL
+0x1fd6ed44	eth_change_mtu	vmlinux	EXPORT_SYMBOL
+0x42977ad4	__hw_addr_del_multiple	vmlinux	EXPORT_SYMBOL
+0x1430e6e0	unregister_acpi_notifier	vmlinux	EXPORT_SYMBOL
+0x4933846f	bdev_stack_limits	vmlinux	EXPORT_SYMBOL
+0x2f857551	machine_check_poll	vmlinux	EXPORT_SYMBOL_GPL
+0xb9504e43	nf_nat_pptp_hook_exp_gre	net/netfilter/nf_conntrack_pptp	EXPORT_SYMBOL_GPL
+0xbf72bb09	transport_handle_cdb_direct	drivers/target/target_core_mod	EXPORT_SYMBOL
+0xa6af13cf	qlogicfas408_info	drivers/scsi/qlogicfas408	EXPORT_SYMBOL
+0x32b8d75d	rt2x00mac_config	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x75e5808d	ata_bmdma_qc_prep	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x462d6707	sock_wake_async	vmlinux	EXPORT_SYMBOL
+0x68e05d57	getrawmonotonic	vmlinux	EXPORT_SYMBOL
+0xf83003e6	jbd2_complete_transaction	fs/jbd2/jbd2	EXPORT_SYMBOL
+0x2cf95bcf	fat_free_clusters	fs/fat/fat	EXPORT_SYMBOL_GPL
+0x82cd19f3	register_xenstore_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0xe20a264c	crypto_register_algs	vmlinux	EXPORT_SYMBOL_GPL
+0xd15c87c5	__set_page_dirty_buffers	vmlinux	EXPORT_SYMBOL
+0x4c10d14d	__wake_up_locked	vmlinux	EXPORT_SYMBOL_GPL
+0x1c1ce117	snd_gus_interrupt	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0xbe7dc1f4	bt_sock_poll	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0xe3fa3de8	usb_hcd_platform_shutdown	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x12e2c060	mite_sync_input_dma	drivers/staging/comedi/drivers/mite	EXPORT_SYMBOL
+0x45a70a86	sock_prot_inuse_add	vmlinux	EXPORT_SYMBOL_GPL
+0xf9e73082	scnprintf	vmlinux	EXPORT_SYMBOL
+0x626fab6b	aead_geniv_exit	vmlinux	EXPORT_SYMBOL_GPL
+0xdde459f4	mod_zone_page_state	vmlinux	EXPORT_SYMBOL
+0x2b774aba	perf_event_refresh	vmlinux	EXPORT_SYMBOL_GPL
+0xe5cdbb24	libipw_xmit	drivers/net/wireless/ipw2x00/libipw	EXPORT_SYMBOL
+0x21626132	amd_register_ecc_decoder	drivers/edac/edac_mce_amd	EXPORT_SYMBOL_GPL
+0x85675138	tcf_register_action	vmlinux	EXPORT_SYMBOL
+0x990cc3e7	pm_runtime_autosuspend_expiration	vmlinux	EXPORT_SYMBOL_GPL
+0xb123ba7b	blk_add_request_payload	vmlinux	EXPORT_SYMBOL_GPL
+0x36b43383	vma_wants_writenotify	vmlinux	EXPORT_SYMBOL
+0x13b65a01	x86_bios_cpu_apicid	vmlinux	EXPORT_SYMBOL
+0x9fac8ca4	snd_seq_kernel_client_enqueue_blocking	sound/core/seq/snd-seq	EXPORT_SYMBOL
+0x57d5c94d	lapb_connect_request	net/lapb/lapb	EXPORT_SYMBOL
+0x6293b82e	sata_port_ops	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x191aba59	rtnl_link_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x78b07600	copy_strings_kernel	vmlinux	EXPORT_SYMBOL
+0x5ff6a284	mem_cgroup_count_vm_event	vmlinux	EXPORT_SYMBOL
+0xf7e37635	__wait_on_bit	vmlinux	EXPORT_SYMBOL
+0xaf611eac	amd_nb_misc_ids	vmlinux	EXPORT_SYMBOL
+0xdbac69a1	iscsi_recv_pdu	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0xac0fd775	tmsdev_init	drivers/net/tokenring/tms380tr	EXPORT_SYMBOL
+0x04403fcf	unregister_capi_driver	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0xe7237b0b	i915_gpu_turbo_disable	drivers/gpu/drm/i915/i915	EXPORT_SYMBOL_GPL
+0x20645642	drm_debug	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x4cd50d8e	led_trigger_register_simple	vmlinux	EXPORT_SYMBOL_GPL
+0x063ab63a	rdev_get_id	vmlinux	EXPORT_SYMBOL_GPL
+0xe530d757	acpi_clear_gpe	vmlinux	EXPORT_SYMBOL
+0x002de09c	vfsmount_lock_global_unlock_online	vmlinux	EXPORT_SYMBOL
+0x7f9205b4	hrtimer_get_remaining	vmlinux	EXPORT_SYMBOL_GPL
+0xe9587909	usb_unregister_notify	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x9f145788	sas_ioctl	drivers/scsi/libsas/libsas	EXPORT_SYMBOL_GPL
+0x37da19c8	i2400m_dev_reset_handle	drivers/net/wimax/i2400m/i2400m	EXPORT_SYMBOL_GPL
+0xa533b52c	ib_get_cached_gid	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x68830a7d	tcp_enter_memory_pressure	vmlinux	EXPORT_SYMBOL
+0x321ffab3	skb_add_rx_frag	vmlinux	EXPORT_SYMBOL
+0x86dc9b32	acpi_root_dir	vmlinux	EXPORT_SYMBOL
+0xca6d99bb	wrmsr_on_cpus	vmlinux	EXPORT_SYMBOL
+0x4982a57f	probe_kernel_write	vmlinux	EXPORT_SYMBOL_GPL
+0x6e782c23	iomap_create_wc	vmlinux	EXPORT_SYMBOL_GPL
+0xbf929f2d	jbd2_journal_get_create_access	fs/jbd2/jbd2	EXPORT_SYMBOL
+0x3e735539	spi_schedule_dv_device	drivers/scsi/scsi_transport_spi	EXPORT_SYMBOL
+0xa16eb452	rt2800_clear_beacon	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0xa3a2864a	mlx4_multicast_promisc_remove	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xed96de4d	ata_bmdma_post_internal_cmd	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xb934ea43	arp_create	vmlinux	EXPORT_SYMBOL
+0x81cebd65	tty_port_alloc_xmit_buf	vmlinux	EXPORT_SYMBOL
+0xea90bdd3	acpi_attach_data	vmlinux	EXPORT_SYMBOL
+0xa946a482	task_blkio_cgroup	vmlinux	EXPORT_SYMBOL_GPL
+0xb6a2bf13	no_llseek	vmlinux	EXPORT_SYMBOL
+0x2d5209c1	rt_mutex_timed_lock	vmlinux	EXPORT_SYMBOL_GPL
+0xaf7d501c	spk_do_catch_up	drivers/staging/speakup/speakup	EXPORT_SYMBOL_GPL
+0x4b78aa04	cxgb4_free_stid	drivers/net/ethernet/chelsio/cxgb4/cxgb4	EXPORT_SYMBOL
+0x9314fbd1	cxgb4_port_viid	drivers/net/ethernet/chelsio/cxgb4/cxgb4	EXPORT_SYMBOL
+0xee909f17	cxgb3_free_stid	drivers/net/ethernet/chelsio/cxgb3/cxgb3	EXPORT_SYMBOL
+0xe35c815a	flexcop_eeprom_check_mac_addr	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0x9b4b5b29	dm_bm_write_lock	drivers/md/persistent-data/dm-persistent-data	EXPORT_SYMBOL_GPL
+0xcd074900	lrw_init_table	crypto/lrw	EXPORT_SYMBOL_GPL
+0xd2168de5	gfn_to_page	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x0f7781ac	rtc_irq_set_freq	vmlinux	EXPORT_SYMBOL_GPL
+0xc079062f	dma_declare_coherent_memory	vmlinux	EXPORT_SYMBOL
+0xfcfa03ff	fb_videomode_to_modelist	vmlinux	EXPORT_SYMBOL
+0xf0040079	rwsem_down_read_failed	vmlinux	EXPORT_SYMBOL
+0xa350a8f8	set_memory_array_uc	vmlinux	EXPORT_SYMBOL
+0x655f1ab0	set_memory_array_wc	vmlinux	EXPORT_SYMBOL
+0x64eae7ad	set_memory_array_wb	vmlinux	EXPORT_SYMBOL
+0x53c6b0f9	snd_hda_build_controls	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xe367c765	nfc_unregister_device	net/nfc/nfc	EXPORT_SYMBOL
+0xcb32fdb6	lro_receive_frags	net/ipv4/inet_lro	EXPORT_SYMBOL
+0xba8824e9	fc_lport_config	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0xab1e69e6	drm_mode_copy	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x77bdbda7	acpi_pci_check_ejectable	vmlinux	EXPORT_SYMBOL_GPL
+0xc6e61430	register_sysctl_paths	vmlinux	EXPORT_SYMBOL
+0x9f42c37e	generic_show_options	vmlinux	EXPORT_SYMBOL
+0xaa83583c	pagecache_write_begin	vmlinux	EXPORT_SYMBOL
+0x82a00217	snd_util_memhdr_new	sound/synth/snd-util-mem	EXPORT_SYMBOL
+0xdf7b0685	iscsi_segment_init_linear	drivers/scsi/libiscsi_tcp	EXPORT_SYMBOL_GPL
+0xf206e0ce	vmbus_sendpacket	drivers/hv/hv_vmbus	EXPORT_SYMBOL
+0x9a85ed4b	fw_card_initialize	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0x66394ae0	ata_sff_pause	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x662105cf	spi_finalize_current_message	vmlinux	EXPORT_SYMBOL_GPL
+0x4695bb6f	dev_pm_qos_add_request	vmlinux	EXPORT_SYMBOL_GPL
+0x055cf568	padata_set_cpumask	vmlinux	EXPORT_SYMBOL
+0xc6cbbc89	capable	vmlinux	EXPORT_SYMBOL
+0xce46d756	v9fs_unregister_trans	net/9p/9pnet	EXPORT_SYMBOL
+0x364e8f12	lbtf_bcn_sent	drivers/net/wireless/libertas_tf/libertas_tf	EXPORT_SYMBOL_GPL
+0x8cf09213	mmc_can_trim	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0xe97af287	dib8000_get_adc_power	drivers/media/dvb/frontends/dib8000	EXPORT_SYMBOL
+0x5a30c697	gameport_close	drivers/input/gameport/gameport	EXPORT_SYMBOL
+0xfede5432	vmbus_sendpacket_multipagebuffer	drivers/hv/hv_vmbus	EXPORT_SYMBOL_GPL
+0xd85a966b	hid_debug_event	drivers/hid/hid	EXPORT_SYMBOL_GPL
+0xcad45048	drm_mode_create_tv_properties	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xe79ec0e3	nf_afinfo	vmlinux	EXPORT_SYMBOL
+0x94107bf1	input_set_capability	vmlinux	EXPORT_SYMBOL
+0x293041f8	ps2_cmd_aborted	vmlinux	EXPORT_SYMBOL
+0xe651f76e	selinux_is_enabled	vmlinux	EXPORT_SYMBOL_GPL
+0x4ef5bcf4	perf_swevent_get_recursion_context	vmlinux	EXPORT_SYMBOL_GPL
+0x32fd4b62	__wake_up_sync	vmlinux	EXPORT_SYMBOL_GPL
+0xc8b57c27	autoremove_wake_function	vmlinux	EXPORT_SYMBOL
+0xc6bf19ea	nf_ct_port_tuple_to_nlattr	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x51badb7f	fcoe_get_paged_crc_eof	drivers/scsi/fcoe/libfcoe	EXPORT_SYMBOL_GPL
+0xb3e78c9f	_rtl92c_store_pwrIndex_diffrate_offset	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0xda9101f8	il_mac_tx_last_beacon	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL_GPL
+0x196f1ac1	dvb_ringbuffer_flush	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0xfdbac5d3	drm_fb_helper_initial_config	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0xad425fe2	drm_fb_helper_hotplug_event	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0xa70c5698	vlan_vid_del	vmlinux	EXPORT_SYMBOL
+0xb6afe9ee	give_up_console	vmlinux	EXPORT_SYMBOL
+0x7c60d66e	getname	vmlinux	EXPORT_SYMBOL
+0xe7ffe877	pcpu_base_addr	vmlinux	EXPORT_SYMBOL_GPL
+0xba5092ff	snd_tea575x_init	sound/i2c/other/snd-tea575x-tuner	EXPORT_SYMBOL
+0xb576b20b	snd_tea575x_exit	sound/i2c/other/snd-tea575x-tuner	EXPORT_SYMBOL
+0xe5b4541f	snd_seq_root	sound/core/snd	EXPORT_SYMBOL
+0x9872263b	nf_conntrack_helper_register	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xfff6c718	mpt_reset_register	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0x1b5929cc	cx2341x_handler_set_50hz	drivers/media/video/cx2341x	EXPORT_SYMBOL
+0x0d65f715	rdma_resolve_addr	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0x1742365b	drm_mode_find_dmt	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x9a11a0fc	crypto_attr_alg_name	vmlinux	EXPORT_SYMBOL_GPL
+0xa9db4ee2	debugfs_create_regset32	vmlinux	EXPORT_SYMBOL_GPL
+0x06590673	snd_hda_mixer_bind_ctls_info	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x3848125b	snd_akm4xxx_reset	sound/i2c/other/snd-ak4xxx-adda	EXPORT_SYMBOL
+0xeeee9c5b	snd_pcm_sgbuf_get_chunk_size	sound/core/snd-pcm	EXPORT_SYMBOL
+0xd94e94c4	usb_hc_died	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x0ff2b602	slhc_compress	drivers/net/slip/slhc	EXPORT_SYMBOL
+0xa5f8507c	cb710_sg_dwiter_read_next_block	drivers/misc/cb710/cb710	EXPORT_SYMBOL_GPL
+0x3358ab22	ir_raw_handler_register	drivers/media/rc/rc-core	EXPORT_SYMBOL
+0x4206263c	scx200_gpio_ops	drivers/char/scx200_gpio	EXPORT_SYMBOL_GPL
+0x1c852e7c	xfrm_calg_get_byid	vmlinux	EXPORT_SYMBOL_GPL
+0xfaee05f2	uhci_check_and_reset_hc	vmlinux	EXPORT_SYMBOL_GPL
+0xf20dabd8	free_irq	vmlinux	EXPORT_SYMBOL
+0x066c7a3d	ieee80211_get_response_rate	net/wireless/cfg80211	EXPORT_SYMBOL
+0x07187597	l2tp_session_create	net/l2tp/l2tp_core	EXPORT_SYMBOL_GPL
+0xc2066af0	batostr	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x8ffe8a74	jbd2_journal_init_inode	fs/jbd2/jbd2	EXPORT_SYMBOL
+0x19443b48	uwb_pal_register	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0x9a6ef661	usb_serial_probe	drivers/usb/serial/usbserial	EXPORT_SYMBOL_GPL
+0xef92744c	ssb_bus_unregister	drivers/ssb/ssb	EXPORT_SYMBOL
+0x0ab8c69c	osd_req_format	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0x1800427a	deactivate_locked_super	vmlinux	EXPORT_SYMBOL
+0xe691e25d	filemap_fdatawait	vmlinux	EXPORT_SYMBOL
+0xb9fd2205	add_efi_memmap	vmlinux	EXPORT_SYMBOL
+0x5e1ff21d	snd_hda_mixer_amp_switch_get	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x4f816e9b	snd_pcm_format_big_endian	sound/core/snd-pcm	EXPORT_SYMBOL
+0x82ee8950	rpcauth_register	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xad3b66b6	mt2131_attach	drivers/media/common/tuners/mt2131	EXPORT_SYMBOL
+0x8267a16f	xfrm_audit_policy_delete	vmlinux	EXPORT_SYMBOL_GPL
+0xccb3d769	netdev_class_create_file	vmlinux	EXPORT_SYMBOL
+0x95bc9078	btree_free	vmlinux	EXPORT_SYMBOL_GPL
+0x09d44df9	in_lock_functions	vmlinux	EXPORT_SYMBOL
+0x0a7bf2fc	cfg80211_cqm_pktloss_notify	net/wireless/cfg80211	EXPORT_SYMBOL
+0x6b7c0b60	rpc_wake_up	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xfbc934d2	sas_port_add_phy	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL
+0xc5c4d0d0	rtl92c_phy_update_txpower_dbm	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0x684ad7d2	mlx4_assign_eq	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL
+0xd477dfd7	cxgb3_insert_tid	drivers/net/ethernet/chelsio/cxgb3/cxgb3	EXPORT_SYMBOL
+0xeca2c51c	DoCMilPlus_init	drivers/mtd/devices/doc2001plus	EXPORT_SYMBOL_GPL
+0x1b9abc9c	media_entity_graph_walk_start	drivers/media/media	EXPORT_SYMBOL_GPL
+0xd68a099e	timeval_usec_diff	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0x6db19e07	is_error_pfn	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x1773c41d	netpoll_parse_options	vmlinux	EXPORT_SYMBOL
+0x2f772bee	netdev_rx_handler_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0xb43e4999	skb_copy_datagram_const_iovec	vmlinux	EXPORT_SYMBOL
+0x702b7065	kernel_getpeername	vmlinux	EXPORT_SYMBOL
+0x2f198ff0	platform_driver_probe	vmlinux	EXPORT_SYMBOL_GPL
+0xd69c9aa3	serial8250_do_set_termios	vmlinux	EXPORT_SYMBOL
+0xcc6ab305	is_dock_device	vmlinux	EXPORT_SYMBOL_GPL
+0xc66145c1	sysfs_chmod_file	vmlinux	EXPORT_SYMBOL_GPL
+0xbccfd4d8	register_oldmem_pfn_is_ram	vmlinux	EXPORT_SYMBOL_GPL
+0xd80328bb	__kmalloc_track_caller	vmlinux	EXPORT_SYMBOL
+0x093c6892	find_module	vmlinux	EXPORT_SYMBOL_GPL
+0x9fa70bd0	rt_mutex_lock	vmlinux	EXPORT_SYMBOL_GPL
+0xe0c77bb5	mce_notify_irq	vmlinux	EXPORT_SYMBOL_GPL
+0xa4339bd9	__wusb_dev_get_by_usb_dev	drivers/usb/wusbcore/wusbcore	EXPORT_SYMBOL_GPL
+0xf4fc31a6	i2o_driver_unregister	drivers/message/i2o/i2o_core	EXPORT_SYMBOL
+0x8600b18d	dib7000p_i2c_enumeration	drivers/media/dvb/frontends/dib7000p	EXPORT_SYMBOL
+0x844e4063	ib_sa_service_rec_query	drivers/infiniband/core/ib_sa	EXPORT_SYMBOL
+0x7f70f69e	ibnl_put_attr	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xbcee15c7	alloc_fcdev	vmlinux	EXPORT_SYMBOL
+0xe96ad274	skb_complete_wifi_ack	vmlinux	EXPORT_SYMBOL_GPL
+0x4e7eb1ec	input_event	vmlinux	EXPORT_SYMBOL
+0x11f7ed4c	hex_to_bin	vmlinux	EXPORT_SYMBOL
+0x339ac1d5	simple_pin_fs	vmlinux	EXPORT_SYMBOL
+0x5635a60a	vmalloc_user	vmlinux	EXPORT_SYMBOL
+0x69b81b6b	posix_clock_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x77edf722	schedule_delayed_work	vmlinux	EXPORT_SYMBOL
+0x74cc1cbe	unregister_cpu_notifier	vmlinux	EXPORT_SYMBOL
+0x3a35d4de	rxrpc_kernel_end_call	net/rxrpc/af-rxrpc	EXPORT_SYMBOL
+0xe62e1609	lc_element_by_index	lib/lru_cache	EXPORT_SYMBOL
+0xb689e373	thermal_generate_netlink_event	drivers/thermal/thermal_sys	EXPORT_SYMBOL
+0x0ace1391	ath9k_hw_startpcureceive	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x572ad153	ttm_bo_synccpu_write_grab	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x4d45d89e	udp_memory_allocated	vmlinux	EXPORT_SYMBOL
+0xf8b539e8	tc_classify	vmlinux	EXPORT_SYMBOL
+0x63ae5026	sock_no_sendpage	vmlinux	EXPORT_SYMBOL
+0x5ce90eec	snd_gf1_dram_addr	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0x567cb5ae	wusbhc_mmcie_rm	drivers/usb/wusbcore/wusbcore	EXPORT_SYMBOL_GPL
+0x73b0a66d	ni_tio_cmd	drivers/staging/comedi/drivers/ni_tiocmd	EXPORT_SYMBOL_GPL
+0x8679461d	ni_tio_arm	drivers/staging/comedi/drivers/ni_tio	EXPORT_SYMBOL_GPL
+0x28485130	tps65010_config_vregs1	drivers/mfd/tps65010	EXPORT_SYMBOL
+0x184269e5	rdev_set_badblocks	drivers/md/md-mod	EXPORT_SYMBOL_GPL
+0x60721da7	dsp_audio_law_to_s32	drivers/isdn/mISDN/mISDN_dsp	EXPORT_SYMBOL
+0xb840721f	fw_fill_response	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0x1b1f2bda	speedstep_get_freqs	drivers/cpufreq/speedstep-lib	EXPORT_SYMBOL_GPL
+0x71d0803b	get_current_tty	vmlinux	EXPORT_SYMBOL_GPL
+0x4c1182cb	bitmap_scnprintf	vmlinux	EXPORT_SYMBOL
+0x5ff90d4f	proc_create_data	vmlinux	EXPORT_SYMBOL
+0x4d405db8	param_ops_string	vmlinux	EXPORT_SYMBOL
+0xcc798822	snd_hda_build_pcms	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x9b64bb19	snd_ac97_write_cache	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0x3971b4df	snd_ecards_limit	sound/core/snd	EXPORT_SYMBOL
+0x83914b9a	snd_midi_event_no_status	sound/core/seq/snd-seq-midi-event	EXPORT_SYMBOL
+0x9253d55e	sunrpc_cache_register_pipefs	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x0bd662f6	raid6_gfmul	lib/raid6/raid6_pq	EXPORT_SYMBOL
+0xc326c023	cyber2000fb_attach	drivers/video/cyber2000fb	EXPORT_SYMBOL
+0x0cc3ede5	cyber2000fb_detach	drivers/video/cyber2000fb	EXPORT_SYMBOL
+0x8895e9db	macvtap_get_socket	drivers/net/macvtap	EXPORT_SYMBOL_GPL
+0x6761e003	nand_wait_ready	drivers/mtd/nand/nand	EXPORT_SYMBOL_GPL
+0x34e7aaa9	tda18271c2dd_attach	drivers/media/dvb/frontends/tda18271c2dd	EXPORT_SYMBOL_GPL
+0x5d89aa73	edac_device_alloc_ctl_info	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x4d366b8a	btmrvl_send_module_cfg_cmd	drivers/bluetooth/btmrvl	EXPORT_SYMBOL_GPL
+0x8c63d31e	kernel_sendmsg	vmlinux	EXPORT_SYMBOL
+0x5eda38a4	kernel_getsockname	vmlinux	EXPORT_SYMBOL
+0x703f2650	intel_gtt_insert_pages	vmlinux	EXPORT_SYMBOL
+0x81b13504	uart_register_driver	vmlinux	EXPORT_SYMBOL
+0xd77a5aa5	__bitmap_and	vmlinux	EXPORT_SYMBOL
+0x7fee6036	lc_destroy	lib/lru_cache	EXPORT_SYMBOL
+0xd53633bb	dib8000_set_slave_frontend	drivers/media/dvb/frontends/dib8000	EXPORT_SYMBOL
+0x9a19086b	dib8000_get_slave_frontend	drivers/media/dvb/frontends/dib8000	EXPORT_SYMBOL
+0x85f09690	b1_irq_table	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0xc32b59ff	ib_destroy_fmr_pool	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xcb4cb3c0	xfrm_alloc_spi	vmlinux	EXPORT_SYMBOL
+0xc286702b	netdev_set_bond_master	vmlinux	EXPORT_SYMBOL
+0xfaf992f9	pci_enable_sriov	vmlinux	EXPORT_SYMBOL_GPL
+0x6124833d	blk_rq_err_bytes	vmlinux	EXPORT_SYMBOL_GPL
+0x573912a8	crypto_blkcipher_type	vmlinux	EXPORT_SYMBOL_GPL
+0x5618c2c6	crypto_givcipher_type	vmlinux	EXPORT_SYMBOL_GPL
+0xc4fe3352	snd_hda_codec_resume_amp	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xfcc03913	nfc_targets_found	net/nfc/nfc	EXPORT_SYMBOL
+0x4502c65a	asc2ax	net/ax25/ax25	EXPORT_SYMBOL
+0xc5e3dddf	wmi_get_event_data	drivers/platform/x86/wmi	EXPORT_SYMBOL_GPL
+0x826133bc	ds3000_attach	drivers/media/dvb/frontends/ds3000	EXPORT_SYMBOL
+0xedc31dae	dib0070_ctrl_agc_filter	drivers/media/dvb/frontends/dib0070	EXPORT_SYMBOL
+0x945e7cb1	ib_query_gid	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x2137b87e	i2c_bit_algo	drivers/i2c/algos/i2c-algo-bit	EXPORT_SYMBOL
+0x2f72ce5c	ata_eh_freeze_port	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x043e7dd4	kvm_set_dr	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x8c2f09ba	kvm_get_dr	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x9e80c7fa	nf_log_packet	vmlinux	EXPORT_SYMBOL
+0x23b968af	qdisc_tree_decrease_qlen	vmlinux	EXPORT_SYMBOL
+0xdc5a4960	dev_remove_pack	vmlinux	EXPORT_SYMBOL
+0x2c256e1f	input_scancode_to_scalar	vmlinux	EXPORT_SYMBOL
+0x5498ba3e	spi_get_next_queued_message	vmlinux	EXPORT_SYMBOL_GPL
+0xd67f5217	btree_destroy	vmlinux	EXPORT_SYMBOL_GPL
+0x8ec4da81	blkcipher_walk_virt	vmlinux	EXPORT_SYMBOL_GPL
+0xba785eb4	posix_lock_file	vmlinux	EXPORT_SYMBOL
+0x71a672ef	dmam_pool_destroy	vmlinux	EXPORT_SYMBOL
+0x87138e9f	set_page_dirty	vmlinux	EXPORT_SYMBOL
+0xdfa454aa	video_device_alloc	drivers/media/video/videodev	EXPORT_SYMBOL
+0xe6029998	cryptd_alloc_aead	crypto/cryptd	EXPORT_SYMBOL_GPL
+0xde9360ba	totalram_pages	vmlinux	EXPORT_SYMBOL
+0xe698901c	nf_conntrack_l4proto_udp4	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x9c964743	p9stat_free	net/9p/9pnet	EXPORT_SYMBOL
+0xc3679d7b	o2hb_get_all_regions	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0x0c8d6829	nfs4_acl_nfsv4_to_posix	fs/nfsd/nfsd	EXPORT_SYMBOL
+0x53567afd	wusbhc_mmcie_set	drivers/usb/wusbcore/wusbcore	EXPORT_SYMBOL_GPL
+0xe35bf087	usb_free_streams	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xc3cd0988	fcoe_transport_attach	drivers/scsi/fcoe/libfcoe	EXPORT_SYMBOL
+0x4b92ba15	mlx4_INIT_PORT	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x3c857ead	ubi_do_get_device_info	drivers/mtd/ubi/ubi	EXPORT_SYMBOL_GPL
+0x8a47d045	sm501_modify_reg	drivers/mfd/sm501	EXPORT_SYMBOL_GPL
+0x274f2a84	dm_rh_inc_pending	drivers/md/dm-region-hash	EXPORT_SYMBOL_GPL
+0xd8543c83	mISDN_initbchannel	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0x4c377c90	ata_sff_prereset	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x5ef07a5e	async_gen_syndrome	crypto/async_tx/async_pq	EXPORT_SYMBOL_GPL
+0xeea0ddc1	udp_disconnect	vmlinux	EXPORT_SYMBOL
+0xf381673a	dev_uc_unsync	vmlinux	EXPORT_SYMBOL
+0xb30a1b97	dev_mc_unsync	vmlinux	EXPORT_SYMBOL
+0xb43147da	regcache_cache_only	vmlinux	EXPORT_SYMBOL_GPL
+0xd8f6cd96	xen_swiotlb_free_coherent	vmlinux	EXPORT_SYMBOL_GPL
+0x9290750c	dump_seek	vmlinux	EXPORT_SYMBOL
+0xe25ec411	ip_set_get_byname	net/netfilter/ipset/ip_set	EXPORT_SYMBOL_GPL
+0x6773d262	journal_get_write_access	fs/jbd/jbd	EXPORT_SYMBOL
+0xcf82a402	ath9k_hw_gen_timer_stop	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x6004f792	mtd_add_partition	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0x4ed5e0d7	v4l2_chip_match_host	drivers/media/video/v4l2-common	EXPORT_SYMBOL
+0x81135041	drm_ati_pcigart_init	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x831327da	kvm_max_guest_tsc_khz	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xdb36abc9	bus_get_kset	vmlinux	EXPORT_SYMBOL_GPL
+0x6ca15d02	net_dma_find_channel	vmlinux	EXPORT_SYMBOL
+0xfb0443fb	acpi_get_parent	vmlinux	EXPORT_SYMBOL
+0xfd9ff488	fb_show_logo	vmlinux	EXPORT_SYMBOL
+0xf99c4608	fb_pan_display	vmlinux	EXPORT_SYMBOL
+0xdaf35caf	__register_chrdev	vmlinux	EXPORT_SYMBOL
+0xe5919cb1	xdr_encode_opaque	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x9efdc655	ceph_osdc_init	net/ceph/libceph	EXPORT_SYMBOL
+0xb54676fa	ceph_msg_type_name	net/ceph/libceph	EXPORT_SYMBOL
+0xaf1e4347	labpc_1200_ai_gain_bits	drivers/staging/comedi/drivers/ni_labpc	EXPORT_SYMBOL_GPL
+0x64d85307	iscsi_session_recovery_timedout	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0x576fdbac	ib_sa_free_multicast	drivers/infiniband/core/ib_sa	EXPORT_SYMBOL
+0x7b5d4b7a	ib_is_mad_class_rmpp	drivers/infiniband/core/ib_mad	EXPORT_SYMBOL
+0x9145f9c1	rtc_class_close	vmlinux	EXPORT_SYMBOL_GPL
+0x61c2dac6	kstrtoll_from_user	vmlinux	EXPORT_SYMBOL
+0x4c5e7d59	snd_rawmidi_new	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0x26bd572a	svc_max_payload	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x809969c1	ath9k_hw_updatetxtriglevel	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xd8aa4284	dm_rh_region_context	drivers/md/dm-region-hash	EXPORT_SYMBOL_GPL
+0xd0634151	b1_parse_version	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0x9e688000	ib_dereg_mr	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x5a2d2cdb	kvm_rdpmc	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xdc99d372	vlan_vids_add_by_dev	vmlinux	EXPORT_SYMBOL
+0xd9567c2d	devres_alloc	vmlinux	EXPORT_SYMBOL_GPL
+0xdc14eda7	pci_pci_problems	vmlinux	EXPORT_SYMBOL
+0x956a91ba	gpio_get_value_cansleep	vmlinux	EXPORT_SYMBOL_GPL
+0x78f741d6	blk_queue_stack_limits	vmlinux	EXPORT_SYMBOL
+0x65cc8a07	free_vm_area	vmlinux	EXPORT_SYMBOL_GPL
+0xd38cb9d2	nf_conntrack_free	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x9feaf287	sonet_subtract_stats	net/atm/atm	EXPORT_SYMBOL
+0x092cf98e	fscache_object_sleep_till_congested	fs/fscache/fscache	EXPORT_SYMBOL_GPL
+0xf5b673d2	uwb_rsv_modify	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0xfe5090be	sas_ata_schedule_reset	drivers/scsi/libsas/libsas	EXPORT_SYMBOL_GPL
+0xaf2ff82c	ptp_clock_event	drivers/ptp/ptp	EXPORT_SYMBOL
+0xaa41bca0	mdiobus_alloc_size	drivers/net/phy/libphy	EXPORT_SYMBOL
+0xc82bbfac	macvlan_common_newlink	drivers/net/macvlan	EXPORT_SYMBOL_GPL
+0x173760a7	is_fw_load	drivers/media/video/cx231xx/cx231xx	EXPORT_SYMBOL_GPL
+0x4b5fd49e	dm_kcopyd_do_callback	drivers/md/dm-mod	EXPORT_SYMBOL
+0x91afcee3	ata_eh_thaw_port	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x89ba752d	udp_lib_setsockopt	vmlinux	EXPORT_SYMBOL
+0x8a54493e	udp_lib_getsockopt	vmlinux	EXPORT_SYMBOL
+0x96898769	sysfs_format_mac	vmlinux	EXPORT_SYMBOL
+0xe9a3f7aa	sk_send_sigurg	vmlinux	EXPORT_SYMBOL
+0xd6d1c4af	spi_bus_lock	vmlinux	EXPORT_SYMBOL_GPL
+0x592d3a21	pnp_is_active	vmlinux	EXPORT_SYMBOL
+0x9d85a483	snd_vx_dsp_load	sound/drivers/vx/snd-vx-lib	EXPORT_SYMBOL
+0x23953270	cfg80211_sched_scan_stopped	net/wireless/cfg80211	EXPORT_SYMBOL
+0x0bab6037	hashbin_remove	net/irda/irda	EXPORT_SYMBOL
+0xe0ab2af1	atalk_find_dev_addr	net/appletalk/appletalk	EXPORT_SYMBOL
+0x208f036c	drm_gem_object_release	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x45db11be	pm_generic_poweroff_noirq	vmlinux	EXPORT_SYMBOL_GPL
+0x0f6d77e0	dev_crit	vmlinux	EXPORT_SYMBOL
+0xb78886a8	drop_super	vmlinux	EXPORT_SYMBOL
+0x12683904	cgroup_add_file	vmlinux	EXPORT_SYMBOL_GPL
+0x50eedeb8	printk	vmlinux	EXPORT_SYMBOL
+0x55f1a0e6	cfg80211_get_bss	net/wireless/cfg80211	EXPORT_SYMBOL
+0xbe1d863d	comedi_buf_put	drivers/staging/comedi/comedi	EXPORT_SYMBOL
+0x47ab2657	sas_is_tlr_enabled	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL_GPL
+0xf9697ba9	md_run	drivers/md/md-mod	EXPORT_SYMBOL_GPL
+0x843303ba	drm_helper_resume_force_mode	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0x1f072c59	drm_property_add_enum	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xc63cd084	sata_std_hardreset	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xa79c1ef9	ahci_init_controller	drivers/ata/libahci	EXPORT_SYMBOL_GPL
+0xd49baf97	sk_alloc	vmlinux	EXPORT_SYMBOL
+0x6d1f66a3	bus_unregister_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0x1258d9d9	regulator_disable	vmlinux	EXPORT_SYMBOL_GPL
+0x7a9ce2b4	try_to_release_page	vmlinux	EXPORT_SYMBOL
+0x41f26ef2	tracepoint_iter_start	vmlinux	EXPORT_SYMBOL_GPL
+0x338e9659	synchronize_srcu	vmlinux	EXPORT_SYMBOL_GPL
+0xad15ac95	rpcauth_lookup_credcache	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x42d988ea	hci_conn_switch_role	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0xf5a87370	nfs_commitdata_release	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0x8e5c2704	ieee80211_stop_scan_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x9c7fbce0	spi_dv_device	drivers/scsi/scsi_transport_spi	EXPORT_SYMBOL
+0x09c87e77	i2o_driver_notify_controller_remove_all	drivers/message/i2o/i2o_core	EXPORT_SYMBOL
+0x4962ebf0	drm_fb_helper_init	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0x86aa16e6	klist_iter_init	vmlinux	EXPORT_SYMBOL_GPL
+0x70771f51	dma_buf_kmap	vmlinux	EXPORT_SYMBOL_GPL
+0x5df65617	platform_driver_register	vmlinux	EXPORT_SYMBOL_GPL
+0x1bd46bdf	pci_disable_msix	vmlinux	EXPORT_SYMBOL
+0x6f19054a	kobject_add	vmlinux	EXPORT_SYMBOL
+0x10138352	tracing_on	vmlinux	EXPORT_SYMBOL_GPL
+0x2d5ada46	snd_hda_create_spdif_out_ctls	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xb0b1346c	parport_register_device	drivers/parport/parport	EXPORT_SYMBOL
+0x36c48fbe	bnx2_cnic_probe	drivers/net/ethernet/broadcom/bnx2	EXPORT_SYMBOL
+0xcf445d27	xfrm_audit_policy_add	vmlinux	EXPORT_SYMBOL_GPL
+0x2b957231	platform_driver_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x5284f0fd	agp_generic_alloc_user	vmlinux	EXPORT_SYMBOL
+0x9009602a	acpi_bus_get_ejd	vmlinux	EXPORT_SYMBOL_GPL
+0x61634f05	lock_flocks	vmlinux	EXPORT_SYMBOL_GPL
+0x80ec1342	queue_kthread_work	vmlinux	EXPORT_SYMBOL_GPL
+0x735a0bd5	native_io_delay	vmlinux	EXPORT_SYMBOL
+0x9ebff902	start_thread	vmlinux	EXPORT_SYMBOL_GPL
+0xcf753939	br_should_route_hook	net/bridge/bridge	EXPORT_SYMBOL
+0x2d0f89b4	usb_get_urb	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x9fc38320	com20020_netdev_ops	drivers/net/arcnet/com20020	EXPORT_SYMBOL
+0x74a5a698	dvb_filter_pes2ts_init	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0xe7f100fe	iw_handler_get_thrspy	vmlinux	EXPORT_SYMBOL
+0x27544e36	gnet_stats_copy_queue	vmlinux	EXPORT_SYMBOL
+0x3b7145bb	apei_exec_read_register_value	vmlinux	EXPORT_SYMBOL_GPL
+0x2868b669	pci_scan_single_device	vmlinux	EXPORT_SYMBOL
+0x12e85778	kstrtol_from_user	vmlinux	EXPORT_SYMBOL
+0x11e6e5d1	simple_dir_operations	vmlinux	EXPORT_SYMBOL
+0xd0dcca80	cfg80211_gtk_rekey_notify	net/wireless/cfg80211	EXPORT_SYMBOL
+0xe0c87128	p54_read_eeprom	drivers/net/wireless/p54/p54common	EXPORT_SYMBOL_GPL
+0x6403e338	tcp_memory_pressure	vmlinux	EXPORT_SYMBOL
+0x50051403	agp_generic_remove_memory	vmlinux	EXPORT_SYMBOL
+0xcc38c4b2	dqput	vmlinux	EXPORT_SYMBOL
+0x8da40a10	dqget	vmlinux	EXPORT_SYMBOL
+0xc12984f8	setattr_copy	vmlinux	EXPORT_SYMBOL
+0xd4c806f9	snd_register_oss_device	sound/core/snd	EXPORT_SYMBOL
+0x191e88cf	snd_dma_pointer	sound/core/snd	EXPORT_SYMBOL
+0x24a94b26	snd_info_get_line	sound/core/snd	EXPORT_SYMBOL
+0xe331c42d	cfg80211_probe_status	net/wireless/cfg80211	EXPORT_SYMBOL
+0x4c38400c	scsi_queue_work	drivers/scsi/scsi_mod	EXPORT_SYMBOL_GPL
+0xf431051d	rt2x00pci_rxdone	drivers/net/wireless/rt2x00/rt2x00pci	EXPORT_SYMBOL_GPL
+0xec8ed164	nand_release	drivers/mtd/nand/nand	EXPORT_SYMBOL_GPL
+0x1e1e7681	mtd_point	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0xbf7563f9	v4l2_ctrl_auto_cluster	drivers/media/video/videodev	EXPORT_SYMBOL
+0x2e8beed9	v4l2_event_dequeue	drivers/media/video/videodev	EXPORT_SYMBOL_GPL
+0xc7b8603c	em28xx_gpio_set	drivers/media/video/em28xx/em28xx	EXPORT_SYMBOL_GPL
+0x8da01274	kvm_get_pfn	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xd62361dc	inet_frags_fini	vmlinux	EXPORT_SYMBOL
+0xadaa2657	cpufreq_register_notifier	vmlinux	EXPORT_SYMBOL
+0x12687938	elv_dispatch_sort	vmlinux	EXPORT_SYMBOL
+0x5c7b3651	elv_add_request	vmlinux	EXPORT_SYMBOL
+0xa332cdd1	security_tun_dev_attach	vmlinux	EXPORT_SYMBOL
+0xf346231f	seq_list_start_head	vmlinux	EXPORT_SYMBOL
+0x4d414f26	mmu_notifier_register	vmlinux	EXPORT_SYMBOL_GPL
+0xf82e4536	cxgbi_create_session	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0x7e53d45f	unregister_hdlc_device	drivers/net/wan/hdlc	EXPORT_SYMBOL
+0x8029ba0f	sdhci_pltfm_init	drivers/mmc/host/sdhci-pltfm	EXPORT_SYMBOL_GPL
+0xc12ec3a6	dns_query	vmlinux	EXPORT_SYMBOL
+0x24429ed6	netif_device_detach	vmlinux	EXPORT_SYMBOL
+0xcd3d7857	netif_device_attach	vmlinux	EXPORT_SYMBOL
+0xb4c69b76	device_rename	vmlinux	EXPORT_SYMBOL_GPL
+0xe319eb24	acpi_pci_osc_control_set	vmlinux	EXPORT_SYMBOL
+0x109025da	fbcon_rotate_ud	vmlinux	EXPORT_SYMBOL
+0xd60b998e	fbcon_rotate_cw	vmlinux	EXPORT_SYMBOL
+0xf5a267fe	simple_attr_read	vmlinux	EXPORT_SYMBOL_GPL
+0x7ee8bf46	relay_flush	vmlinux	EXPORT_SYMBOL_GPL
+0x4f8789b2	snd_sb16dsp_pcm	sound/isa/sb/snd-sb16-dsp	EXPORT_SYMBOL
+0xc12435e3	rpc_calc_rto	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xd6cf9f23	mite_bytes_in_transit	drivers/staging/comedi/drivers/mite	EXPORT_SYMBOL
+0x136194cc	ei_set_multicast_list	drivers/net/ethernet/8390/8390	EXPORT_SYMBOL
+0x2201af83	dib0090_get_tune_state	drivers/media/dvb/frontends/dib0090	EXPORT_SYMBOL
+0x69ab8c46	dib0090_set_tune_state	drivers/media/dvb/frontends/dib0090	EXPORT_SYMBOL
+0x5d118bf3	saa7146_vv_init	drivers/media/common/saa7146_vv	EXPORT_SYMBOL_GPL
+0xfe5d283e	drm_mode_width	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x4f74f81c	kernel_bind	vmlinux	EXPORT_SYMBOL
+0xdafc20ce	dev_notice	vmlinux	EXPORT_SYMBOL
+0xcc248d26	serial8250_suspend_port	vmlinux	EXPORT_SYMBOL
+0x4e6e8ea7	fg_console	vmlinux	EXPORT_SYMBOL
+0xcd279169	nla_find	vmlinux	EXPORT_SYMBOL
+0x5b3505bb	kernel_read	vmlinux	EXPORT_SYMBOL
+0xe0b1eea5	vfs_read	vmlinux	EXPORT_SYMBOL
+0xc8add232	ring_buffer_record_disable	vmlinux	EXPORT_SYMBOL_GPL
+0x40b0a00c	__devm_release_region	vmlinux	EXPORT_SYMBOL
+0x1fa094a5	snd_opl4_read_memory	sound/drivers/opl4/snd-opl4-lib	EXPORT_SYMBOL
+0x09d3add3	parport_write	drivers/parport/parport	EXPORT_SYMBOL
+0xe462608b	rt2800_efuse_detect	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0xa8813189	__nvram_write_byte	drivers/char/nvram	EXPORT_SYMBOL
+0x9e05f0e7	kvm_is_visible_gfn	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xbba99efb	__inet_hash_nolisten	vmlinux	EXPORT_SYMBOL_GPL
+0x9fb3dd30	memcpy_fromiovec	vmlinux	EXPORT_SYMBOL
+0x36aacb6b	pci_bus_find_capability	vmlinux	EXPORT_SYMBOL
+0xe9183c7d	blk_queue_prep_rq	vmlinux	EXPORT_SYMBOL
+0x262f20a8	local_clock	vmlinux	EXPORT_SYMBOL_GPL
+0xb00ddf0d	oxygen_write8	sound/pci/oxygen/snd-oxygen-lib	EXPORT_SYMBOL
+0xd9b0b802	rxrpc_kernel_send_data	net/rxrpc/af-rxrpc	EXPORT_SYMBOL
+0xfa520fb8	nfs4_delete_deviceid	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0x6e1f06e6	journal_unlock_updates	fs/jbd/jbd	EXPORT_SYMBOL
+0xe26032eb	mxm_wmi_call_mxmx	drivers/platform/x86/mxm-wmi	EXPORT_SYMBOL_GPL
+0x8bda8c33	i2400m_tx_msg_get	drivers/net/wimax/i2400m/i2400m	EXPORT_SYMBOL_GPL
+0xafa4c413	videobuf_dma_map	drivers/media/video/videobuf-dma-sg	EXPORT_SYMBOL_GPL
+0xce5135f5	ata_base_port_ops	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xea886124	vlan_dev_vlan_id	vmlinux	EXPORT_SYMBOL
+0x743b4ae3	atomic64_inc_not_zero_cx8	vmlinux	EXPORT_SYMBOL
+0xd78e6f89	security_skb_classify_flow	vmlinux	EXPORT_SYMBOL
+0xef26cf47	sunrpc_cache_unregister_pipefs	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x6344eaf6	ip_set_alloc	net/netfilter/ipset/ip_set	EXPORT_SYMBOL_GPL
+0x6fcda091	transport_register_session	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x62e06b9f	usbnet_resume_rx	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0x5e8b62c3	pcf50633_reg_clear_bits	drivers/mfd/pcf50633	EXPORT_SYMBOL_GPL
+0xf27ba411	videobuf_streamon	drivers/media/video/videobuf-core	EXPORT_SYMBOL_GPL
+0x3c6fc8ac	drm_ati_pcigart_cleanup	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x64ac98df	__class_register	vmlinux	EXPORT_SYMBOL_GPL
+0x17c813a2	agp_collect_device_status	vmlinux	EXPORT_SYMBOL
+0x5492ed06	xenbus_dev_cancel	vmlinux	EXPORT_SYMBOL_GPL
+0x8d6f81b4	__div64_32	vmlinux	EXPORT_SYMBOL
+0x1bc8585b	idr_remove_all	vmlinux	EXPORT_SYMBOL
+0xb5d66046	bio_alloc	vmlinux	EXPORT_SYMBOL
+0x93fca811	__get_free_pages	vmlinux	EXPORT_SYMBOL
+0xbb189cad	disallow_signal	vmlinux	EXPORT_SYMBOL
+0x14a7983f	usb_free_coherent	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x2eb88f8b	iscsi_pool_init	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0xa541bf15	il_usecs_to_beacons	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xc8f4de4c	rawv6_mh_filter_register	vmlinux	EXPORT_SYMBOL
+0xdbcd416e	sysctl_ip_nonlocal_bind	vmlinux	EXPORT_SYMBOL
+0x826a301d	pciserial_init_ports	vmlinux	EXPORT_SYMBOL_GPL
+0xa675804c	utf8s_to_utf16s	vmlinux	EXPORT_SYMBOL
+0xa39ac0b5	proc_net_fops_create	vmlinux	EXPORT_SYMBOL_GPL
+0x0cdbf0f0	ns_capable	vmlinux	EXPORT_SYMBOL
+0xe28d2a49	svga_set_default_gfx_regs	drivers/video/svgalib	EXPORT_SYMBOL
+0xd22ca511	svga_set_default_atc_regs	drivers/video/svgalib	EXPORT_SYMBOL
+0x17f3f471	svga_set_default_seq_regs	drivers/video/svgalib	EXPORT_SYMBOL
+0x4ab38ef2	svga_set_default_crt_regs	drivers/video/svgalib	EXPORT_SYMBOL
+0x52e684a3	matroxfb_g450_shutdown	drivers/video/matrox/matroxfb_g450	EXPORT_SYMBOL
+0x7624afba	mmc_fixup_device	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x4e489588	stv0297_attach	drivers/media/dvb/frontends/stv0297	EXPORT_SYMBOL
+0x594952bd	dm_bufio_read	drivers/md/dm-bufio	EXPORT_SYMBOL_GPL
+0xe83683b1	mISDN_clear_bchannel	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0x1ebd5af2	rawv6_mh_filter_unregister	vmlinux	EXPORT_SYMBOL
+0x0b2f3269	fb_deferred_io_init	vmlinux	EXPORT_SYMBOL_GPL
+0xc6b3a79d	blkiocg_update_completion_stats	vmlinux	EXPORT_SYMBOL_GPL
+0xde07e009	blk_queue_resize_tags	vmlinux	EXPORT_SYMBOL
+0x6f468e83	nf_ct_l3proto_find_get	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xcbb3ccdb	nf_ct_l4proto_find_get	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x1cbdd487	fuse_conn_kill	fs/fuse/fuse	EXPORT_SYMBOL_GPL
+0xabf6e67a	parport_ieee1284_write_compat	drivers/parport/parport	EXPORT_SYMBOL
+0xae27fa2c	register_mtd_chip_driver	drivers/mtd/chips/chipreg	EXPORT_SYMBOL
+0xfb5c7491	i2c_new_dummy	drivers/i2c/i2c-core	EXPORT_SYMBOL_GPL
+0x8aa97228	ipv4_specific	vmlinux	EXPORT_SYMBOL
+0xb2db6d4b	hippi_type_trans	vmlinux	EXPORT_SYMBOL
+0x8ae7fc37	proto_unregister	vmlinux	EXPORT_SYMBOL
+0x3cac21b9	regulator_sync_voltage	vmlinux	EXPORT_SYMBOL_GPL
+0xd8fa09b4	__fsnotify_inode_delete	vmlinux	EXPORT_SYMBOL_GPL
+0x0676f5ac	snd_hda_get_input_pin_attr	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xacb8d231	jbd2_journal_release_buffer	fs/jbd2/jbd2	EXPORT_SYMBOL
+0x3216850e	gsm_activate_mux	drivers/tty/n_gsm	EXPORT_SYMBOL_GPL
+0xe845ebba	deregister_mtd_parser	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0x00ca53f5	dib8000_pid_filter_ctrl	drivers/media/dvb/frontends/dib8000	EXPORT_SYMBOL
+0x6d109954	dib3000mc_i2c_enumeration	drivers/media/dvb/frontends/dib3000mc	EXPORT_SYMBOL
+0x93254cc7	dm_rh_mark_nosync	drivers/md/dm-region-hash	EXPORT_SYMBOL_GPL
+0xb19fda8d	capi_cmd2str	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x9c711be0	__tracepoint_kvm_invlpga	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x7502a5fb	pci_disable_sriov	vmlinux	EXPORT_SYMBOL_GPL
+0x4cef4af1	lookup_instantiate_filp	vmlinux	EXPORT_SYMBOL_GPL
+0x386790d4	register_ip_vs_app	net/netfilter/ipvs/ip_vs	EXPORT_SYMBOL
+0x9f38571d	l2tp_tunnel_find_nth	net/l2tp/l2tp_core	EXPORT_SYMBOL_GPL
+0x57baf885	ceph_str_hash	net/ceph/libceph	EXPORT_SYMBOL
+0xf2a353ac	v4l2_i2c_tuner_addrs	drivers/media/video/v4l2-common	EXPORT_SYMBOL_GPL
+0x45bd9efd	dm_table_put	drivers/md/dm-mod	EXPORT_SYMBOL
+0x5c045525	rtnl_af_register	vmlinux	EXPORT_SYMBOL_GPL
+0x17f45324	xen_swiotlb_unmap_page	vmlinux	EXPORT_SYMBOL_GPL
+0xfdaf5d7b	fb_sys_write	vmlinux	EXPORT_SYMBOL_GPL
+0x2affd93f	pci_num_vf	vmlinux	EXPORT_SYMBOL_GPL
+0x2ea7d424	gen_pool_free	vmlinux	EXPORT_SYMBOL
+0x3d4f8d19	kunmap_high	vmlinux	EXPORT_SYMBOL
+0x4470a79b	param_ops_long	vmlinux	EXPORT_SYMBOL
+0xfc3fc76f	snd_util_memhdr_free	sound/synth/snd-util-mem	EXPORT_SYMBOL
+0x083a59a7	lapb_data_request	net/lapb/lapb	EXPORT_SYMBOL
+0x564c6740	il_debug_level	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x38e6af4c	ib_send_cm_apr	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0x90863005	fw_high_memory_region	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0x7424c975	sata_scr_write	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x07608604	acpi_get_vendor_resource	vmlinux	EXPORT_SYMBOL
+0xacf4d843	match_strdup	vmlinux	EXPORT_SYMBOL
+0x870bf928	radix_tree_lookup	vmlinux	EXPORT_SYMBOL
+0x4672e88b	__crypto_dequeue_request	vmlinux	EXPORT_SYMBOL_GPL
+0xef4a339f	padata_set_cpumasks	vmlinux	EXPORT_SYMBOL
+0x7b0f1ab3	ring_buffer_free_read_page	vmlinux	EXPORT_SYMBOL_GPL
+0xbf534168	rt_mutex_unlock	vmlinux	EXPORT_SYMBOL_GPL
+0xfcc0ed9c	dvb_ringbuffer_read_user	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0x8c9f4475	sparse_keymap_setup	drivers/input/sparse-keymap	EXPORT_SYMBOL
+0x1adc2c5a	ahci_pmp_retry_srst_ops	drivers/ata/libahci	EXPORT_SYMBOL_GPL
+0xf6a98390	neigh_seq_next	vmlinux	EXPORT_SYMBOL
+0xe724404c	bsg_register_queue	vmlinux	EXPORT_SYMBOL_GPL
+0x39acc838	vfs_rename	vmlinux	EXPORT_SYMBOL
+0xf4624e5e	generic_ro_fops	vmlinux	EXPORT_SYMBOL
+0xb195f47f	nci_register_device	net/nfc/nci/nci	EXPORT_SYMBOL
+0xf36fc7c1	nf_nat_get_offset	net/ipv4/netfilter/nf_nat	EXPORT_SYMBOL_GPL
+0x670df38a	wpan_phy_alloc	net/ieee802154/ieee802154	EXPORT_SYMBOL
+0x02edd8ea	iscsi_free_session	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0x3e09daf1	cxgbi_conn_pdu_ready	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0xbc83c0d8	user_path_create	vmlinux	EXPORT_SYMBOL
+0xd342bbc6	kthread_bind	vmlinux	EXPORT_SYMBOL
+0x833a3e07	snd_midi_channel_set_clear	sound/core/seq/snd-seq-midi-emul	EXPORT_SYMBOL
+0x4445d71f	xprt_disconnect_done	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x36d867a5	usb_serial_port_softint	drivers/usb/serial/usbserial	EXPORT_SYMBOL_GPL
+0xc8e3a5c9	del_mtd_blktrans_dev	drivers/mtd/mtd_blkdevs	EXPORT_SYMBOL_GPL
+0x2b1820b1	dm_kcopyd_zero	drivers/md/dm-mod	EXPORT_SYMBOL
+0x10d6d4f3	drm_property_destroy	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x40d7e2d9	ipv6_setsockopt	vmlinux	EXPORT_SYMBOL
+0x586103be	acpi_setup_gpe_for_wake	vmlinux	EXPORT_SYMBOL
+0xd185f7cf	dccp_getsockopt	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xd808989e	usb_poison_anchored_urbs	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x523cf1c0	inet_frag_find	vmlinux	EXPORT_SYMBOL
+0x129c1e13	inetdev_by_index	vmlinux	EXPORT_SYMBOL
+0xd606eb91	xen_xenbus_fops	vmlinux	EXPORT_SYMBOL_GPL
+0xcef60a85	crypto_lookup_skcipher	vmlinux	EXPORT_SYMBOL_GPL
+0x75b20f59	eventfd_signal	vmlinux	EXPORT_SYMBOL_GPL
+0xa1f61226	clocksource_unregister	vmlinux	EXPORT_SYMBOL
+0xc06251c4	bt_sock_wait_state	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0xa01371ae	ei_tx_timeout	drivers/net/ethernet/8390/8390	EXPORT_SYMBOL
+0xb10bd684	fifo_set_limit	vmlinux	EXPORT_SYMBOL
+0xeaca7779	con_debug_enter	vmlinux	EXPORT_SYMBOL_GPL
+0x525e026f	acpi_os_unmap_generic_address	vmlinux	EXPORT_SYMBOL
+0xc2e180a1	writeback_in_progress	vmlinux	EXPORT_SYMBOL
+0x7ce53d6c	filemap_fdatawrite	vmlinux	EXPORT_SYMBOL
+0x3cfedb3f	register_pm_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0x807d2b2c	xt_recseq	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0xd183ffb6	usb_del_gadget_udc	drivers/usb/gadget/udc-core	EXPORT_SYMBOL_GPL
+0xd02753dc	usbip_header_correct_endian	drivers/staging/usbip/usbip-core	EXPORT_SYMBOL_GPL
+0x2d4335c6	osd_req_write_sg	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0x9085fe77	iscsi_eh_session_reset	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0xadddee62	rt2x00mac_set_key	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x1ae98a6f	mptscsih_event_process	drivers/message/fusion/mptscsih	EXPORT_SYMBOL
+0x2e1e9588	memstick_detect_change	drivers/memstick/core/memstick	EXPORT_SYMBOL
+0x26ba301c	cx22700_attach	drivers/media/dvb/frontends/cx22700	EXPORT_SYMBOL
+0x46d935d9	drm_i2c_encoder_destroy	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x1348760d	ipmi_request_settime	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0xb8fe2062	__ethtool_get_settings	vmlinux	EXPORT_SYMBOL
+0xf32055e7	dev_base_lock	vmlinux	EXPORT_SYMBOL
+0xd25d4f74	console_blank_hook	vmlinux	EXPORT_SYMBOL
+0x21b7503a	css_id	vmlinux	EXPORT_SYMBOL_GPL
+0x1790d76b	_raw_read_lock_irqsave	vmlinux	EXPORT_SYMBOL
+0x4a675707	xt_request_find_target	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0x75379bef	ieee80211_sta_set_buffered	net/mac80211/mac80211	EXPORT_SYMBOL
+0x77692acb	ceph_msg_last_put	net/ceph/libceph	EXPORT_SYMBOL
+0x8492051a	hdlcdrv_register	drivers/net/hamradio/hdlcdrv	EXPORT_SYMBOL
+0x4ef8a617	mptscsih_resume	drivers/message/fusion/mptscsih	EXPORT_SYMBOL
+0xae78d883	vb2_querybuf	drivers/media/video/videobuf2-core	EXPORT_SYMBOL
+0xf0fe4b6e	dm_kill_unmapped_request	drivers/md/dm-mod	EXPORT_SYMBOL_GPL
+0x762add85	atomic64_inc_return_cx8	vmlinux	EXPORT_SYMBOL
+0x44611310	sg_scsi_ioctl	vmlinux	EXPORT_SYMBOL_GPL
+0xc22a3091	vm_unmap_aliases	vmlinux	EXPORT_SYMBOL_GPL
+0x3037658e	sis_malloc	drivers/video/sis/sisfb	EXPORT_SYMBOL
+0x04e2bbe8	scsi_get_device_flags_keyed	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xb152e68b	tifm_free_adapter	drivers/misc/tifm_core	EXPORT_SYMBOL
+0x36a224bf	memstick_new_req	drivers/memstick/core/memstick	EXPORT_SYMBOL
+0xb8845318	dib3000mc_get_tuner_i2c_master	drivers/media/dvb/frontends/dib3000mc	EXPORT_SYMBOL
+0x01ab982c	register_md_personality	drivers/md/md-mod	EXPORT_SYMBOL
+0xb7dac035	dm_rh_delay	drivers/md/dm-region-hash	EXPORT_SYMBOL_GPL
+0xe35cfd4e	gnet_stats_finish_copy	vmlinux	EXPORT_SYMBOL
+0x6add5c9a	dmi_find_device	vmlinux	EXPORT_SYMBOL
+0x4ccb61af	device_show_int	vmlinux	EXPORT_SYMBOL_GPL
+0x58f82cb8	uart_handle_dcd_change	vmlinux	EXPORT_SYMBOL_GPL
+0x465a2162	uart_handle_cts_change	vmlinux	EXPORT_SYMBOL_GPL
+0x8828b592	swiotlb_tbl_unmap_single	vmlinux	EXPORT_SYMBOL_GPL
+0x2822ab24	blk_fetch_request	vmlinux	EXPORT_SYMBOL
+0x9341f6c2	free_inode_nonrcu	vmlinux	EXPORT_SYMBOL
+0x5c89f1cd	dma_pool_create	vmlinux	EXPORT_SYMBOL
+0x4b34fbf5	block_all_signals	vmlinux	EXPORT_SYMBOL
+0x3e79781b	ceph_osdc_start_request	net/ceph/libceph	EXPORT_SYMBOL
+0x70251226	svga_tileblit	drivers/video/svgalib	EXPORT_SYMBOL
+0x07bf162a	usb_hcd_pci_probe	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x470a96c3	sdio_writeb	drivers/mmc/core/mmc_core	EXPORT_SYMBOL_GPL
+0x494c022f	ib_destroy_ah	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xbd20f731	ib_destroy_qp	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xb20213d2	tty_name	vmlinux	EXPORT_SYMBOL
+0x589abf1c	blkio_alloc_blkg_stats	vmlinux	EXPORT_SYMBOL_GPL
+0xb5aa7165	dma_pool_destroy	vmlinux	EXPORT_SYMBOL
+0xa8bc82ab	mite_release_channel	drivers/staging/comedi/drivers/mite	EXPORT_SYMBOL
+0x25b50391	power_supply_register	drivers/power/power_supply	EXPORT_SYMBOL_GPL
+0x3e4332f5	libipw_change_mtu	drivers/net/wireless/ipw2x00/libipw	EXPORT_SYMBOL
+0xf494f618	mmc_regulator_get_ocrmask	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x3d371590	bchannel_senddata	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0x85477881	ttm_base_object_unref	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x112bf714	xen_swiotlb_dma_supported	vmlinux	EXPORT_SYMBOL_GPL
+0x83de599e	sysfs_get_dirent	vmlinux	EXPORT_SYMBOL_GPL
+0x700bd9a0	__tracepoint_kmalloc	vmlinux	EXPORT_SYMBOL
+0x31cc96ef	perf_event_release_kernel	vmlinux	EXPORT_SYMBOL_GPL
+0x8c03d20c	destroy_workqueue	vmlinux	EXPORT_SYMBOL_GPL
+0x442f27cc	fat_get_dotdot_entry	fs/fat/fat	EXPORT_SYMBOL_GPL
+0xfb6e08a8	mptscsih_host_reset	drivers/message/fusion/mptscsih	EXPORT_SYMBOL
+0x7eddfd20	dib0090_pwm_gain_reset	drivers/media/dvb/frontends/dib0090	EXPORT_SYMBOL
+0xafcd538f	ata_ehi_push_desc	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xa5a2f65f	inet6_csk_reqsk_queue_hash_add	vmlinux	EXPORT_SYMBOL_GPL
+0xcc8799a5	inet_twsk_put	vmlinux	EXPORT_SYMBOL_GPL
+0xae84843b	fib_default_rule_add	vmlinux	EXPORT_SYMBOL
+0x688de0c4	pm_generic_runtime_suspend	vmlinux	EXPORT_SYMBOL_GPL
+0xcef2e5dd	do_SAK	vmlinux	EXPORT_SYMBOL
+0x647dbd54	pci_load_and_free_saved_state	vmlinux	EXPORT_SYMBOL_GPL
+0x0df92b69	pci_save_state	vmlinux	EXPORT_SYMBOL
+0x0c3c59f1	check_disk_change	vmlinux	EXPORT_SYMBOL
+0x01bed87a	default_file_splice_read	vmlinux	EXPORT_SYMBOL
+0xd52a2362	writeback_inodes_sb	vmlinux	EXPORT_SYMBOL
+0xf69a6945	tracepoint_iter_stop	vmlinux	EXPORT_SYMBOL_GPL
+0xe200d2d5	param_get_uint	vmlinux	EXPORT_SYMBOL
+0x59b177de	wimax_msg_data	net/wimax/wimax	EXPORT_SYMBOL_GPL
+0xa1002e41	sas_rphy_add	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL
+0x5f6b0adb	elv_register	vmlinux	EXPORT_SYMBOL_GPL
+0xc599a772	security_xfrm_state_delete	vmlinux	EXPORT_SYMBOL
+0x479c9068	page_put_link	vmlinux	EXPORT_SYMBOL
+0x0dd554c0	release_pages	vmlinux	EXPORT_SYMBOL
+0xd66c5d3f	rpc_sleep_on	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x337f2432	l2tp_nl_unregister_ops	net/l2tp/l2tp_netlink	EXPORT_SYMBOL_GPL
+0x72b4eb86	bt_sock_stream_recvmsg	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x484a1a7a	p9_client_mknod_dotl	net/9p/9pnet	EXPORT_SYMBOL
+0xef6e587a	p9_client_mkdir_dotl	net/9p/9pnet	EXPORT_SYMBOL
+0x42eea25f	mwifiex_enable_hs	drivers/net/wireless/mwifiex/mwifiex	EXPORT_SYMBOL_GPL
+0xe3286d03	ath9k_hw_gettxbuf	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xf28a9dc2	sp8870_attach	drivers/media/dvb/frontends/sp8870	EXPORT_SYMBOL
+0x8df09e74	dib0090_dcc_freq	drivers/media/dvb/frontends/dib0090	EXPORT_SYMBOL
+0xb6aeb661	ata_id_c_string	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xb1bed25d	dpm_resume_start	vmlinux	EXPORT_SYMBOL_GPL
+0x10291853	devm_regulator_put	vmlinux	EXPORT_SYMBOL_GPL
+0xdd339aa0	security_xfrm_policy_alloc	vmlinux	EXPORT_SYMBOL
+0x9a226d08	dquot_get_dqinfo	vmlinux	EXPORT_SYMBOL
+0x5a918374	cfg80211_calculate_bitrate	net/wireless/cfg80211	EXPORT_SYMBOL
+0xff05fa13	vring_interrupt	drivers/virtio/virtio_ring	EXPORT_SYMBOL_GPL
+0x6f09ba8a	ubi_register_volume_notifier	drivers/mtd/ubi/ubi	EXPORT_SYMBOL_GPL
+0xb731ecab	drm_property_create	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x60795866	kvm_write_guest_cached	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xe6fb509d	km_state_expired	vmlinux	EXPORT_SYMBOL
+0x6f5107e3	qdisc_list_del	vmlinux	EXPORT_SYMBOL
+0xb0e10781	get_option	vmlinux	EXPORT_SYMBOL
+0xa9f903f4	cgroup_to_blkio_cgroup	vmlinux	EXPORT_SYMBOL_GPL
+0xaf1c5792	unlazy_fpu	vmlinux	EXPORT_SYMBOL
+0x468601c6	amdtp_out_stream_get_max_payload	sound/firewire/snd-firewire-lib	EXPORT_SYMBOL
+0xb0571e79	nf_ct_gre_keymap_destroy	net/netfilter/nf_conntrack_proto_gre	EXPORT_SYMBOL_GPL
+0xf2c4afb0	ceph_con_send	net/ceph/libceph	EXPORT_SYMBOL
+0x01662f67	flexcop_dma_xfer_control	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0xa27084c9	mt2266_attach	drivers/media/common/tuners/mt2266	EXPORT_SYMBOL
+0xf763e451	hidraw_connect	drivers/hid/hid	EXPORT_SYMBOL_GPL
+0xaa8e4542	cryptd_alloc_ablkcipher	crypto/cryptd	EXPORT_SYMBOL_GPL
+0xce19bac5	register_inet6addr_notifier	vmlinux	EXPORT_SYMBOL
+0xdd7e7a9c	inet_accept	vmlinux	EXPORT_SYMBOL
+0x49b07aec	tcp_select_initial_window	vmlinux	EXPORT_SYMBOL
+0xe7c76c38	register_pernet_device	vmlinux	EXPORT_SYMBOL_GPL
+0x83fa3970	class_for_each_device	vmlinux	EXPORT_SYMBOL_GPL
+0x3a411239	unbind_con_driver	vmlinux	EXPORT_SYMBOL
+0x2dedc4c2	acpi_format_exception	vmlinux	EXPORT_SYMBOL
+0xe697d108	__blk_iopoll_complete	vmlinux	EXPORT_SYMBOL
+0x62c6a08c	padata_do_parallel	vmlinux	EXPORT_SYMBOL
+0xa1c76e0a	_cond_resched	vmlinux	EXPORT_SYMBOL
+0x72df2f2a	up_read	vmlinux	EXPORT_SYMBOL
+0x815f2897	empty_zero_page	vmlinux	EXPORT_SYMBOL
+0x398da980	snd_pcm_lib_free_vmalloc_buffer	sound/core/snd-pcm	EXPORT_SYMBOL
+0x5378a23f	nfnetlink_subsys_register	net/netfilter/nfnetlink	EXPORT_SYMBOL_GPL
+0x63758856	ceph_str_hash_name	net/ceph/libceph	EXPORT_SYMBOL
+0x90c018c6	vmlfb_register_subsys	drivers/video/vermilion/vmlfb	EXPORT_SYMBOL_GPL
+0x1075cef7	SendDisassociation_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x9a0a1d27	ath9k_hw_gen_timer_start	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x8c7955eb	mtd_is_partition	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0xa07c4f3d	cs5535_mfgpt_write	drivers/misc/cs5535-mfgpt	EXPORT_SYMBOL_GPL
+0xf47fdb30	__pskb_pull_tail	vmlinux	EXPORT_SYMBOL
+0x3b398aac	cpufreq_frequency_table_verify	vmlinux	EXPORT_SYMBOL_GPL
+0x7be3bf26	dev_alert	vmlinux	EXPORT_SYMBOL
+0xa294fa15	tty_wait_until_sent	vmlinux	EXPORT_SYMBOL
+0xc6d958c6	bioset_free	vmlinux	EXPORT_SYMBOL
+0xd2c4fe44	vfs_fstat	vmlinux	EXPORT_SYMBOL
+0xc5a9ec03	vfs_lstat	vmlinux	EXPORT_SYMBOL
+0x06d2f086	dma_spin_lock	vmlinux	EXPORT_SYMBOL
+0x20bc3470	orderly_poweroff	vmlinux	EXPORT_SYMBOL_GPL
+0x0562c415	ocfs2_cluster_this_node	fs/ocfs2/ocfs2_stackglue	EXPORT_SYMBOL_GPL
+0x0be13004	usb_storage_usb_ids	drivers/usb/storage/usb-storage	EXPORT_SYMBOL_GPL
+0xe50bb2ef	pcmcia_unregister_driver	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0x74e07319	gspca_dev_probe	drivers/media/video/gspca/gspca_main	EXPORT_SYMBOL
+0xb688523c	dib8000_get_i2c_master	drivers/media/dvb/frontends/dib8000	EXPORT_SYMBOL
+0x688d422d	dm_bm_block_size	drivers/md/persistent-data/dm-persistent-data	EXPORT_SYMBOL_GPL
+0x0ad0dc4f	dm_bufio_mark_buffer_dirty	drivers/md/dm-bufio	EXPORT_SYMBOL_GPL
+0xa598e29c	vesa_modes	vmlinux	EXPORT_SYMBOL
+0x7542b945	pn_skb_send	net/phonet/phonet	EXPORT_SYMBOL
+0x7e5b6fe5	dccp_shutdown	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xada20bff	p9_client_destroy	net/9p/9pnet	EXPORT_SYMBOL
+0x37d6f70a	iscsi_target_alloc	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0xf6b3464a	attach_hdlc_protocol	drivers/net/wan/hdlc	EXPORT_SYMBOL
+0xcb940b68	ttpci_budget_irq10_handler	drivers/media/dvb/ttpci/budget-core	EXPORT_SYMBOL_GPL
+0x4258f282	rdma_accept	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0xe0a23217	__netif_schedule	vmlinux	EXPORT_SYMBOL
+0x284a5f77	cpuidle_get_driver	vmlinux	EXPORT_SYMBOL_GPL
+0xc5d9c46c	agp_try_unsupported_boot	vmlinux	EXPORT_SYMBOL
+0xc5534d64	ioread16	vmlinux	EXPORT_SYMBOL
+0x9de16fc3	generic_fh_to_parent	vmlinux	EXPORT_SYMBOL_GPL
+0xdc4e7693	generic_fillattr	vmlinux	EXPORT_SYMBOL
+0x183fa88b	mempool_alloc_slab	vmlinux	EXPORT_SYMBOL
+0x5d0b1892	param_set_invbool	vmlinux	EXPORT_SYMBOL
+0x00bda6ba	ieee802154_nl_beacon_indic	net/ieee802154/ieee802154	EXPORT_SYMBOL
+0xb68975fe	lbs_resume	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0xb14080cc	tps65010_set_low_pwr	drivers/mfd/tps65010	EXPORT_SYMBOL
+0x02d4ad0f	tps65013_set_low_pwr	drivers/mfd/tps65010	EXPORT_SYMBOL
+0x9c0a2131	saa7146_setgpio	drivers/media/common/saa7146	EXPORT_SYMBOL_GPL
+0x98551739	rdma_bind_addr	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0x8854dde1	i2c_register_driver	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x2e7caf39	cpuidle_unregister_driver	vmlinux	EXPORT_SYMBOL_GPL
+0x0de9ea14	xenbus_register_driver_common	vmlinux	EXPORT_SYMBOL_GPL
+0x3a5286f2	pci_bus_alloc_resource	vmlinux	EXPORT_SYMBOL
+0xc44667cb	d_instantiate_unique	vmlinux	EXPORT_SYMBOL
+0xd6b8e852	request_threaded_irq	vmlinux	EXPORT_SYMBOL
+0x5383f34b	_raw_spin_trylock	vmlinux	EXPORT_SYMBOL
+0x46804118	cfg80211_send_unprot_disassoc	net/wireless/cfg80211	EXPORT_SYMBOL
+0x838a1131	svc_drop	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x09e05ce4	jbd2_journal_forget	fs/jbd2/jbd2	EXPORT_SYMBOL
+0x3ff9e5dc	isl6421_attach	drivers/media/dvb/frontends/isl6421	EXPORT_SYMBOL
+0x0aa40804	ad7879_probe	drivers/input/touchscreen/ad7879	EXPORT_SYMBOL
+0x0faeb84a	ib_free_recv_mad	drivers/infiniband/core/ib_mad	EXPORT_SYMBOL
+0x7412c75b	ata_bmdma32_port_ops	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x78e793f6	sata_scr_valid	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x56af0dbd	gf128mul_x_ble	crypto/gf128mul	EXPORT_SYMBOL
+0xf4715810	mutex_lock_interruptible	vmlinux	EXPORT_SYMBOL
+0xf62db5d7	cfg80211_get_mesh	net/wireless/cfg80211	EXPORT_SYMBOL
+0x549a05cb	virtqueue_enable_cb_prepare	drivers/virtio/virtio_ring	EXPORT_SYMBOL_GPL
+0x2f0ad9d3	range_bipolar5	drivers/staging/comedi/comedi	EXPORT_SYMBOL
+0xb80f05ae	edac_mc_alloc	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x2d46a009	skb_clone	vmlinux	EXPORT_SYMBOL
+0xf1b551d9	ibft_addr	vmlinux	EXPORT_SYMBOL_GPL
+0x740fe721	input_get_keycode	vmlinux	EXPORT_SYMBOL
+0x34b31100	wakeup_source_destroy	vmlinux	EXPORT_SYMBOL_GPL
+0x0487f831	fb_find_best_display	vmlinux	EXPORT_SYMBOL
+0xcff444c8	crypto_find_alg	vmlinux	EXPORT_SYMBOL_GPL
+0x25c4e6c9	set_task_ioprio	vmlinux	EXPORT_SYMBOL_GPL
+0x1a812cd2	setup_arg_pages	vmlinux	EXPORT_SYMBOL
+0xedd1ee5c	snd_es1688_mixer	sound/isa/es1688/snd-es1688-lib	EXPORT_SYMBOL
+0xfc3ada19	usb_serial_generic_process_read_urb	drivers/usb/serial/usbserial	EXPORT_SYMBOL_GPL
+0xb9b7cc34	rt2x00mac_rfkill_poll	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x19468f4a	inode_dio_wait	vmlinux	EXPORT_SYMBOL
+0x7b8699eb	snd_seq_event_port_detach	sound/core/seq/snd-seq	EXPORT_SYMBOL
+0x7d6be151	jbd2_journal_start	fs/jbd2/jbd2	EXPORT_SYMBOL
+0x72a05927	uwb_rc_neh_grok	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0xe80cc5cf	ssb_device_enable	drivers/ssb/ssb	EXPORT_SYMBOL
+0x8855e15f	iscsi_session_event	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0x76e377a7	phy_ethtool_sset	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x03e1387c	phy_ethtool_gset	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x2e060f1d	ib_query_ah	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x2111b9d6	drm_encoder_init	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x3f105c0c	handle_mmio_page_fault_common	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xc34efe27	snmp_fold_field	vmlinux	EXPORT_SYMBOL_GPL
+0xde400b6c	tcp_init_xmit_timers	vmlinux	EXPORT_SYMBOL
+0x40121ffc	pci_disable_link_state	vmlinux	EXPORT_SYMBOL
+0x33251104	dquot_quota_on	vmlinux	EXPORT_SYMBOL
+0xd67364f7	eventfd_ctx_fdget	vmlinux	EXPORT_SYMBOL_GPL
+0x79616c85	snd_hda_multi_out_dig_cleanup	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xbc67b176	l2tp_udp_encap_recv	net/l2tp/l2tp_core	EXPORT_SYMBOL_GPL
+0xfaf89cee	garp_unregister_application	net/802/garp	EXPORT_SYMBOL_GPL
+0x1897423c	thermal_zone_device_unregister	drivers/thermal/thermal_sys	EXPORT_SYMBOL
+0x68c88e83	ata_host_alloc_pinfo	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x484998c7	vfs_lock_file	vmlinux	EXPORT_SYMBOL_GPL
+0x9bc95d2b	bio_uncopy_user	vmlinux	EXPORT_SYMBOL
+0x72b7d619	make_bad_inode	vmlinux	EXPORT_SYMBOL
+0x5e1c7510	__d_drop	vmlinux	EXPORT_SYMBOL
+0xce9611d0	__mmdrop	vmlinux	EXPORT_SYMBOL_GPL
+0x862f98a3	xen_create_contiguous_region	vmlinux	EXPORT_SYMBOL_GPL
+0x5f2eb6e3	gss_mech_unregister	net/sunrpc/auth_gss/auth_rpcgss	EXPORT_SYMBOL_GPL
+0xa1e55be2	hci_find_ltk	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x377572c6	jbd2_journal_force_commit_nested	fs/jbd2/jbd2	EXPORT_SYMBOL
+0x4793c7fe	scsi_bus_type	drivers/scsi/scsi_mod	EXPORT_SYMBOL_GPL
+0xfafab1bd	videobuf_dma_init_kernel	drivers/media/video/videobuf-dma-sg	EXPORT_SYMBOL_GPL
+0xacfc6a9d	mxl5007t_attach	drivers/media/common/tuners/mxl5007t	EXPORT_SYMBOL_GPL
+0xfa10fee4	b1_interrupt	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0x7d1e0de7	hid_check_keys_pressed	drivers/hid/hid	EXPORT_SYMBOL_GPL
+0x4aad00bf	btmrvl_interrupt	drivers/bluetooth/btmrvl	EXPORT_SYMBOL_GPL
+0x86aca0f1	ata_sff_qc_fill_rtf	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x33dbfd93	tcp_memory_allocated	vmlinux	EXPORT_SYMBOL
+0xa8232c78	strtobool	vmlinux	EXPORT_SYMBOL
+0xeb2bc428	seq_release_private	vmlinux	EXPORT_SYMBOL
+0x9dcfaf53	perf_trace_buf_prepare	vmlinux	EXPORT_SYMBOL_GPL
+0xb9d47972	snd_ctl_remove	sound/core/snd	EXPORT_SYMBOL
+0x672c9d44	iTCO_vendor_pre_keepalive	drivers/watchdog/iTCO_vendor_support	EXPORT_SYMBOL
+0x553efb91	rc_core_debug	drivers/media/rc/rc-core	EXPORT_SYMBOL_GPL
+0xfdb05ab7	ata_pci_remove_one	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x1742e4c5	uart_console_write	vmlinux	EXPORT_SYMBOL_GPL
+0xa452f2a4	xen_pirq_from_irq	vmlinux	EXPORT_SYMBOL_GPL
+0xcf1d28ab	acpi_error	vmlinux	EXPORT_SYMBOL
+0x4eca8add	writeback_inodes_sb_nr	vmlinux	EXPORT_SYMBOL
+0x844b5fe0	vfs_removexattr	vmlinux	EXPORT_SYMBOL_GPL
+0x525ea902	find_symbol	vmlinux	EXPORT_SYMBOL_GPL
+0xa7f4859a	__mutex_init	vmlinux	EXPORT_SYMBOL
+0x48b3bee6	jbd2_journal_check_used_features	fs/jbd2/jbd2	EXPORT_SYMBOL
+0x3dd6d8a2	sdio_readsb	drivers/mmc/core/mmc_core	EXPORT_SYMBOL_GPL
+0x42d96971	rtc_set_time	vmlinux	EXPORT_SYMBOL_GPL
+0xc2257200	pcix_get_mmrbc	vmlinux	EXPORT_SYMBOL
+0x65cabbb8	auth_domain_lookup	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x434bfd07	cordic_calc_iq	lib/cordic	EXPORT_SYMBOL
+0x4d805702	nfs4_schedule_session_recovery	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0xd6373924	scsi_register_device_handler	drivers/scsi/device_handler/scsi_dh	EXPORT_SYMBOL_GPL
+0xa0d1da0d	pcmcia_get_mac_from_cis	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0x13fdc994	rt2800_write_beacon	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0xc488b283	il_set_bit	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x9eb76d6e	vb2_plane_vaddr	drivers/media/video/videobuf2-core	EXPORT_SYMBOL_GPL
+0x2f25eee2	cx2341x_update	drivers/media/video/cx2341x	EXPORT_SYMBOL
+0xccaeb9ae	dm_sm_checker_create_fresh	drivers/md/persistent-data/dm-persistent-data	EXPORT_SYMBOL_GPL
+0x0b0d888b	icmpv6_err_convert	vmlinux	EXPORT_SYMBOL
+0xc3e50ae3	xfrm_audit_state_delete	vmlinux	EXPORT_SYMBOL_GPL
+0x5e730d5c	serial8250_register_port	vmlinux	EXPORT_SYMBOL
+0xe35a29b5	fb_get_mode	vmlinux	EXPORT_SYMBOL
+0x7ff8ee56	do_sync_write	vmlinux	EXPORT_SYMBOL
+0xc254197c	vfs_readv	vmlinux	EXPORT_SYMBOL
+0xf09561c9	snd_emu10k1_synth_alloc	sound/pci/emu10k1/snd-emu10k1	EXPORT_SYMBOL
+0x1be6dc30	svga_set_textmode_vga_regs	drivers/video/svgalib	EXPORT_SYMBOL
+0xe6ff74c9	ssb_bus_pcibus_register	drivers/ssb/ssb	EXPORT_SYMBOL
+0x59b71ce1	srp_transfer_data	drivers/scsi/libsrp	EXPORT_SYMBOL_GPL
+0xaa689c9a	mmc_detect_change	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0xdfc5e6f2	get_next_dframe	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0xf835c235	get_next_bframe	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0x27604bce	drm_debugfs_remove_files	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x68cd2df4	blkiocg_update_timeslice_used	vmlinux	EXPORT_SYMBOL_GPL
+0x84d8206a	crypto_shash_setkey	vmlinux	EXPORT_SYMBOL_GPL
+0xe753585c	crypto_ahash_setkey	vmlinux	EXPORT_SYMBOL_GPL
+0x3d3ba7a2	search_binary_handler	vmlinux	EXPORT_SYMBOL
+0x056f9816	rt_mutex_trylock	vmlinux	EXPORT_SYMBOL_GPL
+0x3dde0e07	amd_get_nb_id	vmlinux	EXPORT_SYMBOL_GPL
+0x6b662d32	oxygen_write16	sound/pci/oxygen/snd-oxygen-lib	EXPORT_SYMBOL
+0x69ea42c8	oxygen_write32	sound/pci/oxygen/snd-oxygen-lib	EXPORT_SYMBOL
+0x3ed83539	snd_opl4_write	sound/drivers/opl4/snd-opl4-lib	EXPORT_SYMBOL
+0x4be0e944	usb_remove_hcd	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x7046b474	sdio_readb	drivers/mmc/core/mmc_core	EXPORT_SYMBOL_GPL
+0x03e0d8de	sdio_readw	drivers/mmc/core/mmc_core	EXPORT_SYMBOL_GPL
+0xc6b40b3e	sdio_readl	drivers/mmc/core/mmc_core	EXPORT_SYMBOL_GPL
+0x77223f02	rtnl_link_get_net	vmlinux	EXPORT_SYMBOL
+0x750a4cde	cpufreq_freq_attr_scaling_available_freqs	vmlinux	EXPORT_SYMBOL_GPL
+0x8e56ae1c	ahash_attr_alg	vmlinux	EXPORT_SYMBOL_GPL
+0xcfb5871c	irq_work_queue	vmlinux	EXPORT_SYMBOL_GPL
+0x2d9f2ce3	sched_clock_idle_wakeup_event	vmlinux	EXPORT_SYMBOL_GPL
+0x44aaf30f	tsc_khz	vmlinux	EXPORT_SYMBOL
+0xb8e7ce2c	__put_user_8	vmlinux	EXPORT_SYMBOL
+0xfaf4d489	nfs_initiate_write	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0x0c6a781c	uwb_rc_init	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0xcb375a66	hostap_init_data	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x24da24b5	mlx4_CLOSE_PORT	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x684c2f67	videobuf_streamoff	drivers/media/video/videobuf-core	EXPORT_SYMBOL_GPL
+0xcf76ce95	cx2341x_fill_defaults	drivers/media/video/cx2341x	EXPORT_SYMBOL
+0x194eadaa	drm_edid_header_is_valid	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x0bcb47f8	drm_gtf_mode_complex	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x1b6ce842	tcp_disconnect	vmlinux	EXPORT_SYMBOL
+0x13cc7f1a	put_device	vmlinux	EXPORT_SYMBOL_GPL
+0x8125fd33	mark_info_dirty	vmlinux	EXPORT_SYMBOL
+0xdd2da3ac	bio_pair_release	vmlinux	EXPORT_SYMBOL
+0x6fcb87a1	touch_softlockup_watchdog	vmlinux	EXPORT_SYMBOL
+0xdda43044	journal_start	fs/jbd/jbd	EXPORT_SYMBOL
+0xff72b6ba	transport_check_aborted_status	drivers/target/target_core_mod	EXPORT_SYMBOL
+0xa150db65	ppp_input	drivers/net/ppp/ppp_generic	EXPORT_SYMBOL
+0x29d8458c	v4l2_ctrl_subscribe_event	drivers/media/video/videodev	EXPORT_SYMBOL
+0xe356c210	ata_port_wait_eh	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xce758ac2	spi_alloc_device	vmlinux	EXPORT_SYMBOL_GPL
+0x6dbe6636	register_filesystem	vmlinux	EXPORT_SYMBOL
+0xba497f13	loops_per_jiffy	vmlinux	EXPORT_SYMBOL
+0x7ec8ddb7	rds_for_each_conn_info	net/rds/rds	EXPORT_SYMBOL_GPL
+0xbee32dcb	gsm_alloc_mux	drivers/tty/n_gsm	EXPORT_SYMBOL_GPL
+0x9ee96db4	sas_remove_children	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL
+0x2c208607	power_supply_is_system_supplied	drivers/power/power_supply	EXPORT_SYMBOL_GPL
+0x31e1af25	eip_get_stats	drivers/net/ethernet/8390/8390p	EXPORT_SYMBOL
+0x246eb6a0	lirc_dev_fop_ioctl	drivers/media/rc/lirc_dev	EXPORT_SYMBOL
+0xefb2e497	drm_getsarea	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x8ae7d71a	inet_confirm_addr	vmlinux	EXPORT_SYMBOL
+0xfae5b00c	eth_validate_addr	vmlinux	EXPORT_SYMBOL
+0x673f815e	agp_bridges	vmlinux	EXPORT_SYMBOL
+0x7b134ddf	acpi_get_name	vmlinux	EXPORT_SYMBOL
+0x367a4e59	btree_init	vmlinux	EXPORT_SYMBOL_GPL
+0x3cb3931b	sg_copy_to_buffer	vmlinux	EXPORT_SYMBOL
+0x96a22790	vmcore_cleanup	vmlinux	EXPORT_SYMBOL_GPL
+0x7ab88a45	system_freezing_cnt	vmlinux	EXPORT_SYMBOL
+0x7d0db45c	jiffies_to_clock_t	vmlinux	EXPORT_SYMBOL
+0x568ef776	nfc_register_device	net/nfc/nfc	EXPORT_SYMBOL
+0xfffb07d5	usb_debug_root	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xb744fced	core_tmr_alloc_req	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x59099ffb	tmsdev_term	drivers/net/tokenring/tms380tr	EXPORT_SYMBOL
+0x27cb133b	eeprom_93cx6_multiread	drivers/misc/eeprom/eeprom_93cx6	EXPORT_SYMBOL_GPL
+0x0e7fc80f	hidraw_disconnect	drivers/hid/hid	EXPORT_SYMBOL_GPL
+0xf0bcb14c	drm_mode_crtc_set_gamma_size	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xc531ca1f	drm_addbufs_agp	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xd21e0438	drm_addbufs_pci	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xe36fa62b	regulator_get_exclusive	vmlinux	EXPORT_SYMBOL_GPL
+0x9d0ca2a4	btree_merge	vmlinux	EXPORT_SYMBOL_GPL
+0x94ca9de2	generic_make_request	vmlinux	EXPORT_SYMBOL
+0x1b9daba2	generic_file_llseek_size	vmlinux	EXPORT_SYMBOL
+0x47c149ab	queue_delayed_work	vmlinux	EXPORT_SYMBOL_GPL
+0x1c87a811	__round_jiffies_up	vmlinux	EXPORT_SYMBOL_GPL
+0x7957f728	irlmp_update_client	net/irda/irda	EXPORT_SYMBOL
+0x954e727f	garp_uninit_applicant	net/802/garp	EXPORT_SYMBOL_GPL
+0x32ede71c	usb_serial_generic_disconnect	drivers/usb/serial/usbserial	EXPORT_SYMBOL_GPL
+0xa7b9d160	mite_done	drivers/staging/comedi/drivers/mite	EXPORT_SYMBOL
+0x25593a87	cx231xx_uninit_isoc	drivers/media/video/cx231xx/cx231xx	EXPORT_SYMBOL_GPL
+0xe2ba282c	dev_attr_sw_activity	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x60e2689e	kvm_before_handle_nmi	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x02124474	ip_send_check	vmlinux	EXPORT_SYMBOL
+0x431a34a9	__rtnl_register	vmlinux	EXPORT_SYMBOL_GPL
+0x23b9d6e2	mangle_path	vmlinux	EXPORT_SYMBOL
+0x39ac48bd	snd_wss_create	sound/isa/wss/snd-wss-lib	EXPORT_SYMBOL
+0x628c8edf	i2o_sg_tablesize	drivers/message/i2o/i2o_core	EXPORT_SYMBOL_GPL
+0xd2b35933	dm_block_manager_create	drivers/md/persistent-data/dm-persistent-data	EXPORT_SYMBOL_GPL
+0x73bc781f	pci_get_domain_bus_and_slot	vmlinux	EXPORT_SYMBOL
+0x2e6964ad	anon_inode_getfd	vmlinux	EXPORT_SYMBOL_GPL
+0xa8f2431b	filemap_flush	vmlinux	EXPORT_SYMBOL
+0x047ecbac	oxygen_write_ac97	sound/pci/oxygen/snd-oxygen-lib	EXPORT_SYMBOL
+0x1e5995fe	fuse_conn_init	fs/fuse/fuse	EXPORT_SYMBOL_GPL
+0xe8794ce1	slhc_toss	drivers/net/slip/slhc	EXPORT_SYMBOL
+0x5829efa4	mpt_alloc_fw_memory	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0x0447af81	drm_gem_vm_close	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x9bab72fc	cpufreq_get_measured_perf	drivers/cpufreq/mperf	EXPORT_SYMBOL_GPL
+0x28e9276a	__tracepoint_kvm_nested_vmexit_inject	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xa3c40334	pm_generic_freeze_late	vmlinux	EXPORT_SYMBOL_GPL
+0x7b0c84c4	acpi_remove_table_handler	vmlinux	EXPORT_SYMBOL
+0x3aa2eb19	blk_stack_limits	vmlinux	EXPORT_SYMBOL
+0x9a6a83f9	cmos_lock	vmlinux	EXPORT_SYMBOL
+0x7af42ab4	snd_sb8dsp_pcm	sound/isa/sb/snd-sb8-dsp	EXPORT_SYMBOL
+0x075b6433	rpc_mkpipe_data	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x7b77a47e	unix_domain_find	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x7141285e	ieee80211_scan_completed	net/mac80211/mac80211	EXPORT_SYMBOL
+0x9f2bde85	ceph_calc_raw_layout	net/ceph/libceph	EXPORT_SYMBOL
+0x7a1211f8	dlm_setup_eviction_cb	fs/ocfs2/dlm/ocfs2_dlm	EXPORT_SYMBOL_GPL
+0xdc534c46	il_set_rxon_hwcrypto	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x48b1ed48	cs5535_mfgpt_alloc_timer	drivers/misc/cs5535-mfgpt	EXPORT_SYMBOL_GPL
+0x92db5b7b	tda829x_probe	drivers/media/common/tuners/tda8290	EXPORT_SYMBOL_GPL
+0x557b6358	i2c_smbus_read_i2c_block_data	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x04c782e2	drm_kms_helper_poll_disable	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0xb359ac3d	fw_bus_type	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0x9859a6a5	tcp_set_state	vmlinux	EXPORT_SYMBOL_GPL
+0xf1ea35b4	tty_mutex	vmlinux	EXPORT_SYMBOL
+0xbcc308bb	strnlen_user	vmlinux	EXPORT_SYMBOL
+0xec42f204	kunmap	vmlinux	EXPORT_SYMBOL
+0x67c53b9c	snd_hda_suspend	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xb28f5ef1	xt_free_table_info	net/netfilter/x_tables	EXPORT_SYMBOL
+0xc0a6f19e	prism2_update_comms_qual	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x1823aa48	mlx4_db_alloc	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xda8753d4	mpt_print_ioc_summary	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0x58d82a82	ata_bmdma_setup	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xea50dad3	ahci_ignore_sss	drivers/ata/libahci	EXPORT_SYMBOL_GPL
+0xfecdeff6	async_raid6_datap_recov	crypto/async_tx/async_raid6_recov	EXPORT_SYMBOL_GPL
+0xb10d55bc	cn_netlink_send	vmlinux	EXPORT_SYMBOL_GPL
+0x880e99e2	serial8250_modem_status	vmlinux	EXPORT_SYMBOL_GPL
+0x876820d8	mnt_pin	vmlinux	EXPORT_SYMBOL
+0x6b3f3f01	set_create_files_as	vmlinux	EXPORT_SYMBOL
+0x5a33cf31	snd_gf1_mem_free	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0x019cb947	snd_dma_alloc_pages_fallback	sound/core/snd-page-alloc	EXPORT_SYMBOL
+0x17166616	dccp_poll	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xd43ecbf1	null_ax25_address	net/ax25/ax25	EXPORT_SYMBOL
+0xa1b95bf7	power_supply_set_battery_charged	drivers/power/power_supply	EXPORT_SYMBOL_GPL
+0x87a9bbe9	p54_unregister_common	drivers/net/wireless/p54/p54common	EXPORT_SYMBOL_GPL
+0x20ade63f	il_tx_queue_init	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x89149148	libipw_channel_to_index	drivers/net/wireless/ipw2x00/libipw	EXPORT_SYMBOL
+0x59053f4f	drxk_attach	drivers/media/dvb/frontends/drxk	EXPORT_SYMBOL
+0x99116854	drxd_attach	drivers/media/dvb/frontends/drxd	EXPORT_SYMBOL
+0x804f922a	ipmi_addr_length	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0x2ac393fa	dev_get_by_name	vmlinux	EXPORT_SYMBOL
+0xa7fb7365	xenbus_read_otherend_details	vmlinux	EXPORT_SYMBOL_GPL
+0x584738f9	rdmsr_safe_on_cpu	vmlinux	EXPORT_SYMBOL
+0x4eef4473	__page_symlink	vmlinux	EXPORT_SYMBOL
+0x24ced784	install_exec_creds	vmlinux	EXPORT_SYMBOL
+0x9d7724a8	sched_setscheduler	vmlinux	EXPORT_SYMBOL_GPL
+0xfdab6de3	unregister_sound_midi	sound/soundcore	EXPORT_SYMBOL
+0x6b40b641	rxrpc_get_null_key	net/rxrpc/af-rxrpc	EXPORT_SYMBOL
+0x0ab61f74	target_get_session	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x9b54890e	target_put_session	drivers/target/target_core_mod	EXPORT_SYMBOL
+0xda3128c7	iscsi_segment_seek_sg	drivers/scsi/libiscsi_tcp	EXPORT_SYMBOL_GPL
+0x4acdf564	ib_unregister_event_handler	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xe7197773	drm_ht_insert_item	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x6923ce63	irq_work_sync	vmlinux	EXPORT_SYMBOL_GPL
+0xc1d7c2d5	unregister_kretprobes	vmlinux	EXPORT_SYMBOL_GPL
+0x30a80826	__kfifo_from_user	vmlinux	EXPORT_SYMBOL
+0xabb56922	snd_ctl_register_ioctl	sound/core/snd	EXPORT_SYMBOL
+0x5bcb502e	ipcomp_input	net/xfrm/xfrm_ipcomp	EXPORT_SYMBOL_GPL
+0x48a310b4	xdr_skb_read_bits	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x82c2bde4	nat_h245_hook	net/netfilter/nf_conntrack_h323	EXPORT_SYMBOL_GPL
+0xe68e1bea	ax25_hard_header	net/ax25/ax25	EXPORT_SYMBOL
+0x57c8c39b	mmc_card_sleep	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0xcbcf0fec	i2c_adapter_type	drivers/i2c/i2c-core	EXPORT_SYMBOL_GPL
+0x93d74db9	udp_prot	vmlinux	EXPORT_SYMBOL
+0xfaed51ca	inet_putpeer	vmlinux	EXPORT_SYMBOL_GPL
+0x9a2545eb	br_fdb_test_addr_hook	vmlinux	EXPORT_SYMBOL_GPL
+0xea6e56d9	snd_opl3_load_patch	sound/drivers/opl3/snd-opl3-lib	EXPORT_SYMBOL
+0x8d300d51	rds_conn_connect_if_down	net/rds/rds	EXPORT_SYMBOL_GPL
+0xa01a487e	mb_cache_shrink	fs/mbcache	EXPORT_SYMBOL
+0x2c11d5bd	register_hdlc_protocol	drivers/net/wan/hdlc	EXPORT_SYMBOL
+0xbb961ca3	arc_proto_default	drivers/net/arcnet/arcnet	EXPORT_SYMBOL
+0xbdda1106	v4l2_event_queue	drivers/media/video/videodev	EXPORT_SYMBOL_GPL
+0xd764866a	rc_keydown_notimeout	drivers/media/rc/rc-core	EXPORT_SYMBOL_GPL
+0xa4843a59	dib3000mc_set_config	drivers/media/dvb/frontends/dib3000mc	EXPORT_SYMBOL
+0xf9db35fc	inet6_sk_rebuild_header	vmlinux	EXPORT_SYMBOL_GPL
+0x713e4059	device_init_wakeup	vmlinux	EXPORT_SYMBOL_GPL
+0x767b33e0	unregister_quota_format	vmlinux	EXPORT_SYMBOL
+0xf1e98c74	avenrun	vmlinux	EXPORT_SYMBOL
+0x2d3385d3	system_wq	vmlinux	EXPORT_SYMBOL_GPL
+0x61d2e0b5	nf_ct_extend_register	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x874a0b53	tms380tr_open	drivers/net/tokenring/tms380tr	EXPORT_SYMBOL
+0x7180fb33	free_mdio_bitbang	drivers/net/phy/mdio-bitbang	EXPORT_SYMBOL
+0x149d7e19	register_mtd_parser	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0x20a36485	mmc_calc_max_discard	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x123959a1	v4l2_type_names	drivers/media/video/videodev	EXPORT_SYMBOL
+0xf4a7b159	mark_page_accessed	vmlinux	EXPORT_SYMBOL
+0x506c6041	transport_kmap_data_sg	drivers/target/target_core_mod	EXPORT_SYMBOL
+0xb99d174d	sas_parse_pr_out_transport_id	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x9ce9bfa7	scsi_report_bus_reset	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x725c9190	fc_vport_id_lookup	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x3e232106	il_send_cmd	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xfd93482e	dm_rh_recovery_in_flight	drivers/md/dm-region-hash	EXPORT_SYMBOL_GPL
+0x67cb9784	ipmi_poll_interface	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0x9cb8037b	xfrm_count_enc_supported	vmlinux	EXPORT_SYMBOL_GPL
+0x02a18c74	nf_conntrack_destroy	vmlinux	EXPORT_SYMBOL
+0x1622e849	pnpbios_protocol	vmlinux	EXPORT_SYMBOL
+0x3e879a60	__ht_create_irq	vmlinux	EXPORT_SYMBOL
+0xd2badfa4	snd_dma_get_reserved_buf	sound/core/snd-page-alloc	EXPORT_SYMBOL
+0xfea52e1e	ceph_compare_options	net/ceph/libceph	EXPORT_SYMBOL
+0x3eb43659	osd_req_list_collection_objects	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0x19229a4f	fc_fill_reply_hdr	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x555aff0f	rt2x00mac_sta_add	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x394052f2	brcmu_pktq_penq	drivers/net/wireless/brcm80211/brcmutil/brcmutil	EXPORT_SYMBOL
+0x4e381ea7	brcmu_pktq_pdeq	drivers/net/wireless/brcm80211/brcmutil/brcmutil	EXPORT_SYMBOL
+0xb75abe5a	saa7146_i2c_adapter_prepare	drivers/media/common/saa7146	EXPORT_SYMBOL_GPL
+0x405decca	hid_output_report	drivers/hid/hid	EXPORT_SYMBOL_GPL
+0x10c7310a	ip6_sk_dst_lookup_flow	vmlinux	EXPORT_SYMBOL_GPL
+0x5a5e6ca1	cdev_add	vmlinux	EXPORT_SYMBOL
+0x69447467	ring_buffer_write	vmlinux	EXPORT_SYMBOL_GPL
+0xfcd7bc0b	ring_buffer_empty	vmlinux	EXPORT_SYMBOL_GPL
+0x82939ebd	rcu_batches_completed_sched	vmlinux	EXPORT_SYMBOL_GPL
+0x7eb5b41d	snd_msnd_send_dsp_cmd	sound/isa/msnd/snd-msnd-lib	EXPORT_SYMBOL
+0xdc5f1d64	fw_iso_resources_destroy	sound/firewire/snd-firewire-lib	EXPORT_SYMBOL
+0xe9407406	snd_timer_new	sound/core/snd-timer	EXPORT_SYMBOL
+0xeeacab69	rpc_update_rtt	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x7026a2e9	mptscsih_change_queue_depth	drivers/message/fusion/mptscsih	EXPORT_SYMBOL
+0xec139635	ib_modify_srq	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x0649e12b	drm_mode_hsync	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x36fdad82	dev_attr_em_message_type	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x2dfef1b4	xfrm_input	vmlinux	EXPORT_SYMBOL
+0x042374aa	dev_uc_add	vmlinux	EXPORT_SYMBOL
+0x32a2f840	dev_uc_del	vmlinux	EXPORT_SYMBOL
+0xabc4a9a7	dev_mc_add	vmlinux	EXPORT_SYMBOL
+0x9d45254d	dev_mc_del	vmlinux	EXPORT_SYMBOL
+0xffbabb2f	register_pernet_subsys	vmlinux	EXPORT_SYMBOL_GPL
+0x9bc3c43b	rtc_update_irq	vmlinux	EXPORT_SYMBOL_GPL
+0x79068fda	acpi_install_method	vmlinux	EXPORT_SYMBOL
+0x74acb942	fb_blank	vmlinux	EXPORT_SYMBOL
+0x6f1e80d8	blk_queue_update_dma_pad	vmlinux	EXPORT_SYMBOL
+0x13dc8b42	blkdev_get_by_path	vmlinux	EXPORT_SYMBOL
+0xb2ff1808	open_exec	vmlinux	EXPORT_SYMBOL
+0x45d14bdf	hypercall_page	vmlinux	EXPORT_SYMBOL_GPL
+0x5e7394da	nfs4_proc_getdevicelist	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0xcfb309a2	mb_cache_entry_find_next	fs/mbcache	EXPORT_SYMBOL
+0xd8c7371b	iscsi_remove_session	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0xd9c9cfad	pcf50633_register_irq	drivers/mfd/pcf50633	EXPORT_SYMBOL_GPL
+0x755b8b0d	cpu_subsys	vmlinux	EXPORT_SYMBOL_GPL
+0xe95d800d	inode_init_owner	vmlinux	EXPORT_SYMBOL
+0x0b48677a	__kfifo_init	vmlinux	EXPORT_SYMBOL
+0x05513b71	raid6_call	lib/raid6/raid6_pq	EXPORT_SYMBOL_GPL
+0xe7d1139d	journal_forget	fs/jbd/jbd	EXPORT_SYMBOL
+0x8821b4b5	pcmcia_get_tuple	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0x40f2df3f	il_send_rxon_timing	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x11bfb15d	ath9k_hw_numtxpending	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xf7ef6734	NS8390p_init	drivers/net/ethernet/8390/8390p	EXPORT_SYMBOL
+0xd4ed10d9	lirc_dev_fop_write	drivers/media/rc/lirc_dev	EXPORT_SYMBOL
+0x43f56e82	ata_xfer_mode2shift	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x3864eb66	lrw_free_table	crypto/lrw	EXPORT_SYMBOL_GPL
+0x8b7730bd	pnp_activate_dev	vmlinux	EXPORT_SYMBOL
+0x1fcdb87c	pci_find_next_capability	vmlinux	EXPORT_SYMBOL_GPL
+0xfacbbcec	rt_mutex_destroy	vmlinux	EXPORT_SYMBOL_GPL
+0xd4034828	system_freezable_wq	vmlinux	EXPORT_SYMBOL_GPL
+0x2901a718	queue_delayed_work_on	vmlinux	EXPORT_SYMBOL_GPL
+0x7790adc0	aout_dump_debugregs	vmlinux	EXPORT_SYMBOL_GPL
+0xe7a0eb02	ieee80211_report_low_ack	net/mac80211/mac80211	EXPORT_SYMBOL
+0xda320f5b	proc_irda	net/irda/irda	EXPORT_SYMBOL
+0x8ff50a58	iscsi_destroy_endpoint	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0x45d92b69	bitmap_startwrite	drivers/md/md-mod	EXPORT_SYMBOL
+0x697fb41d	ib_unregister_client	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x0c32ff8a	edac_pci_alloc_index	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0xf509dc45	devres_open_group	vmlinux	EXPORT_SYMBOL_GPL
+0xa09b3491	pci_enable_msix	vmlinux	EXPORT_SYMBOL
+0x5b19634d	div_s64_rem	vmlinux	EXPORT_SYMBOL
+0xe03de4dd	__set_page_dirty_nobuffers	vmlinux	EXPORT_SYMBOL
+0xd7d79132	put_online_cpus	vmlinux	EXPORT_SYMBOL_GPL
+0x3f229c4c	oops_begin	vmlinux	EXPORT_SYMBOL_GPL
+0xa21900a2	svc_xprt_copy_addrs	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x8c6d89e3	rxrpc_kernel_reject_call	net/rxrpc/af-rxrpc	EXPORT_SYMBOL
+0xf472ecb1	__nf_ct_kill_acct	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x742f5665	pcmcia_parse_tuple	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0x9f371e0a	usbnet_unlink_rx_urbs	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0xdfc5169b	slhc_init	drivers/net/slip/slhc	EXPORT_SYMBOL
+0x04dca738	lirc_unregister_driver	drivers/media/rc/lirc_dev	EXPORT_SYMBOL
+0x7a8fa398	saa7146_register_extension	drivers/media/common/saa7146	EXPORT_SYMBOL_GPL
+0xb68e3796	kvm_x86_ops	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x8a1615d6	mempool_create_node	vmlinux	EXPORT_SYMBOL
+0xc1d7fcd2	find_get_pid	vmlinux	EXPORT_SYMBOL_GPL
+0xe46ec0b1	ieee802154_nl_disassoc_indic	net/ieee802154/ieee802154	EXPORT_SYMBOL
+0x14193dcb	usb_stor_transparent_scsi_command	drivers/usb/storage/usb-storage	EXPORT_SYMBOL_GPL
+0x118cf5ac	usb_wwan_release	drivers/usb/serial/usb_wwan	EXPORT_SYMBOL
+0x224cf4fa	scsi_bios_ptable	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x1157121e	iscsi_verify_itt	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0x47e8ccf8	cxgb4_port_idx	drivers/net/ethernet/chelsio/cxgb4/cxgb4	EXPORT_SYMBOL
+0x8cab4657	dm_get_rq_mapinfo	drivers/md/dm-mod	EXPORT_SYMBOL_GPL
+0xcb5e0287	vmbus_establish_gpadl	drivers/hv/hv_vmbus	EXPORT_SYMBOL_GPL
+0x3074f033	drm_order	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x168201bd	dev_set_promiscuity	vmlinux	EXPORT_SYMBOL
+0xc247143a	pm_generic_resume	vmlinux	EXPORT_SYMBOL_GPL
+0x06efad02	pci_write_vpd	vmlinux	EXPORT_SYMBOL
+0xc0fec227	snd_mpu401_uart_interrupt	sound/drivers/mpu401/snd-mpu401-uart	EXPORT_SYMBOL
+0xe9f7149c	zlib_deflate_workspacesize	lib/zlib_deflate/zlib_deflate	EXPORT_SYMBOL
+0xf6b6444b	ib_sa_unpack_path	drivers/infiniband/core/ib_sa	EXPORT_SYMBOL
+0xce220409	drm_prime_init_file_private	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x578074a3	drm_plane_init	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x9421a6a6	tosh_smm	drivers/char/toshiba	EXPORT_SYMBOL
+0x522c9780	neigh_connected_output	vmlinux	EXPORT_SYMBOL
+0xdb9e2c22	posix_acl_create	vmlinux	EXPORT_SYMBOL
+0xbe254e92	param_set_ushort	vmlinux	EXPORT_SYMBOL
+0x607b34f1	edd	vmlinux	EXPORT_SYMBOL
+0x274374c6	snd_timer_notify	sound/core/snd-timer	EXPORT_SYMBOL
+0xe2bd63de	svc_recv	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xebe5a6bc	bt_sock_recvmsg	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x6da7f08f	pnfs_generic_pg_writepages	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0x4ee4d62e	ath_key_config	drivers/net/wireless/ath/ath	EXPORT_SYMBOL
+0x8dc04f02	l64781_attach	drivers/media/dvb/frontends/l64781	EXPORT_SYMBOL
+0xbb018b23	bitmap_unplug	drivers/md/md-mod	EXPORT_SYMBOL
+0x132b05be	ttm_round_pot	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x87964ab9	udp_flush_pending_frames	vmlinux	EXPORT_SYMBOL
+0x574ae7c5	netlink_kernel_create	vmlinux	EXPORT_SYMBOL
+0x963e73cd	dev_get_stats	vmlinux	EXPORT_SYMBOL
+0x8c1e1d6d	pm_generic_poweroff	vmlinux	EXPORT_SYMBOL_GPL
+0x5dc7b9d6	vga_switcheroo_register_client	vmlinux	EXPORT_SYMBOL
+0x86fb9b05	bitmap_parse_user	vmlinux	EXPORT_SYMBOL
+0x4292364c	schedule	vmlinux	EXPORT_SYMBOL
+0x342f60fe	apm_info	vmlinux	EXPORT_SYMBOL
+0x4f4dad61	snd_emux_free	sound/synth/emux/snd-emux-synth	EXPORT_SYMBOL
+0x89e0f49a	il_free_txq_mem	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x4cfaf7b8	i2400m_netdev_setup	drivers/net/wimax/i2400m/i2400m	EXPORT_SYMBOL_GPL
+0x26b15192	dvb_usb_nec_rc_key_to_event	drivers/media/dvb/dvb-usb/dvb-usb	EXPORT_SYMBOL
+0x0c1b9ac1	ib_ud_header_unpack	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x34472547	drm_get_connector_name	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x6555bde9	drm_property_create_enum	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xf49318f8	nlmsg_notify	vmlinux	EXPORT_SYMBOL
+0x3c8951d5	watchdog_unregister_device	vmlinux	EXPORT_SYMBOL_GPL
+0xa656a097	mmput	vmlinux	EXPORT_SYMBOL_GPL
+0xcc62a9fb	init_task	vmlinux	EXPORT_SYMBOL
+0x29f25834	oxygen_write_ac97_masked	sound/pci/oxygen/snd-oxygen-lib	EXPORT_SYMBOL
+0x9d4767dc	snd_emu10k1_memblk_map	sound/pci/emu10k1/snd-emu10k1	EXPORT_SYMBOL
+0x1be9be52	snd_gf1_mem_lock	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0x8df08613	snd_rawmidi_transmit_peek	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0x481fab65	rpc_task_reset_client	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x46e8995a	__fscache_wait_on_page_write	fs/fscache/fscache	EXPORT_SYMBOL
+0xd278c0fb	transport_generic_free_cmd	drivers/target/target_core_mod	EXPORT_SYMBOL
+0xddaf5dd6	video_devdata	drivers/media/video/videodev	EXPORT_SYMBOL
+0xbaa2b414	ttm_vt_unlock	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x03b4b0ed	wakeup_source_create	vmlinux	EXPORT_SYMBOL_GPL
+0x9fbc3f71	pcibios_resource_to_bus	vmlinux	EXPORT_SYMBOL
+0x0f04ada6	extract_attr_from_ios	fs/exofs/libore	EXPORT_SYMBOL
+0x4fcb705c	usbatm_usb_disconnect	drivers/usb/atm/usbatm	EXPORT_SYMBOL_GPL
+0xb83b7b6c	target_wait_for_sess_cmds	drivers/target/target_core_mod	EXPORT_SYMBOL
+0xe3c3f08e	ath9k_hw_set_txpowerlimit	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x87debaa7	unregister_sja1000dev	drivers/net/can/sja1000/sja1000	EXPORT_SYMBOL_GPL
+0xe141744a	enclosure_component_register	drivers/misc/enclosure	EXPORT_SYMBOL_GPL
+0x4ff47317	videobuf_queue_core_init	drivers/media/video/videobuf-core	EXPORT_SYMBOL_GPL
+0x79251c0f	i2c_verify_client	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x89d66811	build_ehash_secret	vmlinux	EXPORT_SYMBOL
+0x000507a6	__inet_twsk_hashdance	vmlinux	EXPORT_SYMBOL_GPL
+0x246ee7eb	neigh_table_init_no_netlink	vmlinux	EXPORT_SYMBOL
+0x88a8213d	gnet_stats_copy_app	vmlinux	EXPORT_SYMBOL
+0x5fa95c69	input_allocate_device	vmlinux	EXPORT_SYMBOL
+0x05c72e2c	pm_runtime_barrier	vmlinux	EXPORT_SYMBOL_GPL
+0x12038c35	dev_printk	vmlinux	EXPORT_SYMBOL
+0x6b5ec1d3	gnttab_unmap_refs	vmlinux	EXPORT_SYMBOL_GPL
+0x954ce808	pci_set_pcie_reset_state	vmlinux	EXPORT_SYMBOL_GPL
+0x1b015d25	bitmap_parselist	vmlinux	EXPORT_SYMBOL
+0x95b9447d	__insert_inode_hash	vmlinux	EXPORT_SYMBOL
+0x308b733a	getboottime	vmlinux	EXPORT_SYMBOL_GPL
+0xe85bcd63	revert_creds	vmlinux	EXPORT_SYMBOL
+0xdf929370	fs_overflowgid	vmlinux	EXPORT_SYMBOL
+0x92ee6bb0	snd_midi_event_reset_decode	sound/core/seq/snd-seq-midi-event	EXPORT_SYMBOL
+0x50cbe7b3	rds_stats	net/rds/rds	EXPORT_SYMBOL_GPL
+0xb88ec75b	fb_ddc_read	drivers/video/fb_ddc	EXPORT_SYMBOL_GPL
+0xbb52fc7f	range_bipolar10	drivers/staging/comedi/comedi	EXPORT_SYMBOL
+0xc2a935fb	scsi_dh_set_params	drivers/scsi/device_handler/scsi_dh	EXPORT_SYMBOL_GPL
+0x06b637fb	sungem_phy_probe	drivers/net/sungem_phy	EXPORT_SYMBOL
+0x0dcc579b	i2o_driver_notify_device_remove_all	drivers/message/i2o/i2o_core	EXPORT_SYMBOL
+0x50938d1e	md_do_sync	drivers/md/md-mod	EXPORT_SYMBOL_GPL
+0x0d4f41f8	edac_mc_del_mc	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0xbd0b1a7d	agp_generic_type_to_mask_type	vmlinux	EXPORT_SYMBOL
+0x9c478b27	xenbus_dev_resume	vmlinux	EXPORT_SYMBOL_GPL
+0xd1507e59	erst_clear	vmlinux	EXPORT_SYMBOL_GPL
+0x9c5f81da	cpu_rmap_add	vmlinux	EXPORT_SYMBOL
+0x4578cd51	swiotlb_unmap_sg_attrs	vmlinux	EXPORT_SYMBOL
+0xeab52eed	bio_clone	vmlinux	EXPORT_SYMBOL
+0xf0fdf6cb	__stack_chk_fail	vmlinux	EXPORT_SYMBOL
+0x3da171f9	pci_mem_start	vmlinux	EXPORT_SYMBOL
+0xc6d31159	snd_card_proc_new	sound/core/snd	EXPORT_SYMBOL
+0xfab384a7	spi_bitbang_setup_transfer	drivers/spi/spi-bitbang	EXPORT_SYMBOL_GPL
+0x5769f8d0	hdlc_close	drivers/net/wan/hdlc	EXPORT_SYMBOL
+0xf5d0f73d	xfrm_policy_walk	vmlinux	EXPORT_SYMBOL
+0x27773288	fbcon_set_rotate	vmlinux	EXPORT_SYMBOL
+0x9842f28e	blocking_notifier_call_chain	vmlinux	EXPORT_SYMBOL_GPL
+0x6c746293	nfs_init_commit	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0xfd6999f9	il_chswitch_done	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xebb2af79	regmap_read	vmlinux	EXPORT_SYMBOL_GPL
+0x594bf15b	ioport_map	vmlinux	EXPORT_SYMBOL
+0x3c2f9e07	dquot_quota_off	vmlinux	EXPORT_SYMBOL
+0x1e5bb74c	cfg80211_can_beacon_sec_chan	net/wireless/cfg80211	EXPORT_SYMBOL
+0xb9a20604	__ieee80211_create_tpt_led_trigger	net/mac80211/mac80211	EXPORT_SYMBOL
+0x2efb713c	lbtf_cmd_response_rx	drivers/net/wireless/libertas_tf/libertas_tf	EXPORT_SYMBOL_GPL
+0x7389c3b3	ppp_unregister_channel	drivers/net/ppp/ppp_generic	EXPORT_SYMBOL
+0x815042cb	mptscsih_shutdown	drivers/message/fusion/mptscsih	EXPORT_SYMBOL
+0x101a29b8	dvb_ringbuffer_flush_spinlock_wakeup	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0x397a1fdb	ata_pci_device_do_suspend	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x35a3c008	scx200_gpio_configure	arch/x86/platform/scx200/scx200	EXPORT_SYMBOL
+0x20f2e629	kvm_requeue_exception_e	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x64ef8e62	xfrm_audit_state_add	vmlinux	EXPORT_SYMBOL_GPL
+0xe60e53cb	__skb_checksum_complete	vmlinux	EXPORT_SYMBOL
+0xed302f0f	tty_lock	vmlinux	EXPORT_SYMBOL
+0x54649323	regulator_register	vmlinux	EXPORT_SYMBOL_GPL
+0xb5a459dc	unregister_blkdev	vmlinux	EXPORT_SYMBOL
+0xb4d0d081	key_alloc	vmlinux	EXPORT_SYMBOL
+0x354a7a1b	write_inode_now	vmlinux	EXPORT_SYMBOL
+0x56fd7e02	ieee80211_amsdu_to_8023s	net/wireless/cfg80211	EXPORT_SYMBOL
+0x6ba2e9a3	fat_search_long	fs/fat/fat	EXPORT_SYMBOL_GPL
+0xf4654c3f	wa_urb_enqueue_run	drivers/usb/wusbcore/wusb-wa	EXPORT_SYMBOL_GPL
+0x3db37467	osd_req_flush_collection	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0xaa86e2ca	reset_airo_card	drivers/net/wireless/airo	EXPORT_SYMBOL
+0xf2997713	tty_termios_hw_change	vmlinux	EXPORT_SYMBOL
+0xd5acba00	seq_path	vmlinux	EXPORT_SYMBOL
+0xcc5005fe	msleep_interruptible	vmlinux	EXPORT_SYMBOL
+0xd1f6c5f3	smp_num_siblings	vmlinux	EXPORT_SYMBOL
+0x619ee973	snd_gf1_rawmidi_new	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0xf8b2ff6e	g_verify_token_header	net/sunrpc/auth_gss/auth_rpcgss	EXPORT_SYMBOL_GPL
+0x3be89d3c	usb_register_notify	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xe3765c52	iscsi_session_setup	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0x6710b1c9	cx231xx_uninit_vbi_isoc	drivers/media/video/cx231xx/cx231xx	EXPORT_SYMBOL_GPL
+0xf63feb7a	dev_addr_add	vmlinux	EXPORT_SYMBOL
+0x62849ac7	dev_valid_name	vmlinux	EXPORT_SYMBOL
+0xb89bfdae	netdev_err	vmlinux	EXPORT_SYMBOL
+0x2f48d670	agp_create_memory	vmlinux	EXPORT_SYMBOL
+0xc897c382	sg_init_table	vmlinux	EXPORT_SYMBOL
+0x5642793a	radix_tree_tag_clear	vmlinux	EXPORT_SYMBOL
+0x415fbf95	fsnotify	vmlinux	EXPORT_SYMBOL_GPL
+0x7d2b736d	generic_file_open	vmlinux	EXPORT_SYMBOL
+0xc87c1f84	ktime_get	vmlinux	EXPORT_SYMBOL_GPL
+0x8fee35f9	cfg80211_new_sta	net/wireless/cfg80211	EXPORT_SYMBOL
+0x5e4878bc	ip_set_get_ip_port	net/netfilter/ipset/ip_set	EXPORT_SYMBOL_GPL
+0xecbeef33	genphy_update_link	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x636edfae	drm_get_pci_dev	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x6d9f8044	ata_sff_freeze	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x9426d359	generic_cont_expand_simple	vmlinux	EXPORT_SYMBOL
+0xac79a24d	d_instantiate	vmlinux	EXPORT_SYMBOL
+0x82845cdd	register_sound_special_device	sound/soundcore	EXPORT_SYMBOL
+0x7ef19036	snd_hda_mixer_amp_switch_put	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x4e2bc316	iscsi_ping_comp_event	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0x5863cd14	ath_rxbuf_alloc	drivers/net/wireless/ath/ath	EXPORT_SYMBOL
+0xf893833e	vb2_queue_init	drivers/media/video/videobuf2-core	EXPORT_SYMBOL_GPL
+0x720d32cc	drm_mm_scan_remove_block	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x1dc050a2	agp_generic_create_gatt_table	vmlinux	EXPORT_SYMBOL
+0x4c41959d	blk_queue_rq_timed_out	vmlinux	EXPORT_SYMBOL_GPL
+0x08c473b7	xt_alloc_table_info	net/netfilter/x_tables	EXPORT_SYMBOL
+0xc438d056	__fscache_unregister_netfs	fs/fscache/fscache	EXPORT_SYMBOL
+0x4ae34f36	uwb_rsv_accept	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0x528be18b	lbtf_rx	drivers/net/wireless/libertas_tf/libertas_tf	EXPORT_SYMBOL_GPL
+0x8d489385	mlx4_SET_PORT_qpn_calc	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL
+0xcf6c9fac	cx231xx_enable_i2c_port_3	drivers/media/video/cx231xx/cx231xx	EXPORT_SYMBOL_GPL
+0x609cc658	s5h1420_attach	drivers/media/dvb/frontends/s5h1420	EXPORT_SYMBOL
+0x73013896	xenbus_printf	vmlinux	EXPORT_SYMBOL_GPL
+0xb7b61546	crc32_be	vmlinux	EXPORT_SYMBOL
+0x636a5691	acpi_register_ioapic	vmlinux	EXPORT_SYMBOL
+0x9eed1997	rpc_restart_call	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xde5ba8f3	ieee80211_register_hw	net/mac80211/mac80211	EXPORT_SYMBOL
+0x0384944a	ceph_osdc_new_request	net/ceph/libceph	EXPORT_SYMBOL
+0xd9ec0dc2	ieee80211_wx_set_encode_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0xc70f16b2	ieee80211_wx_get_encode_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x87f56241	wm8400_register_regulator	drivers/regulator/wm8400-regulator	EXPORT_SYMBOL_GPL
+0x1cb4122f	i2c_unregister_device	drivers/i2c/i2c-core	EXPORT_SYMBOL_GPL
+0x552b0942	drm_helper_crtc_in_use	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0xc37226a5	tpm_pcr_extend	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x3a4f6a32	ata_sff_interrupt	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xfe064471	kvm_emulate_hypercall	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x35993dda	xfrm_output_resume	vmlinux	EXPORT_SYMBOL_GPL
+0x9a60f1fd	skb_find_text	vmlinux	EXPORT_SYMBOL
+0x42187aba	regulator_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x2d3d50b3	pci_clear_master	vmlinux	EXPORT_SYMBOL
+0x533bcc50	bio_integrity_add_page	vmlinux	EXPORT_SYMBOL
+0xff28f1ea	current_fs_time	vmlinux	EXPORT_SYMBOL
+0x8a85e327	dvb_ca_en50221_frda_irq	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0xd3ca36e4	tcf_hash_create	vmlinux	EXPORT_SYMBOL
+0xde1ab8eb	skb_queue_tail	vmlinux	EXPORT_SYMBOL
+0x953db383	free_irq_cpu_rmap	vmlinux	EXPORT_SYMBOL
+0x21a19231	crypto_lookup_template	vmlinux	EXPORT_SYMBOL_GPL
+0xb577ee8d	register_sysctl	vmlinux	EXPORT_SYMBOL
+0x88cd8253	vfs_test_lock	vmlinux	EXPORT_SYMBOL_GPL
+0x952664c5	do_exit	vmlinux	EXPORT_SYMBOL_GPL
+0x8008334d	p9_is_proto_dotu	net/9p/9pnet	EXPORT_SYMBOL
+0x026bb122	mb86a20s_attach	drivers/media/dvb/frontends/mb86a20s	EXPORT_SYMBOL
+0xb5b3830b	drm_vblank_cleanup	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x8cc4f7fd	tcf_hash_destroy	vmlinux	EXPORT_SYMBOL
+0x362e4f30	xenbus_probe_devices	vmlinux	EXPORT_SYMBOL_GPL
+0x2d7894cb	mark_buffer_dirty_inode	vmlinux	EXPORT_SYMBOL
+0x3109b751	cpu_clock	vmlinux	EXPORT_SYMBOL_GPL
+0x33007462	snd_cs8427_iec958_active	sound/i2c/snd-cs8427	EXPORT_SYMBOL
+0x613a1e0c	scsi_execute_req	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xbdaf7c15	__get_mtd_device	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0x68ed906d	__put_mtd_device	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0x84134016	tda10086_attach	drivers/media/dvb/frontends/tda10086	EXPORT_SYMBOL
+0xab112089	dvb_usb_generic_write	drivers/media/dvb/dvb-usb/dvb-usb	EXPORT_SYMBOL
+0x7c381a76	dm_bufio_get_block_size	drivers/md/dm-bufio	EXPORT_SYMBOL_GPL
+0xec2b275e	usbhid_submit_report	drivers/hid/usbhid/usbhid	EXPORT_SYMBOL_GPL
+0x95f0fed0	ata_sff_thaw	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xe34f574a	dev_pm_qos_remove_request	vmlinux	EXPORT_SYMBOL_GPL
+0x1cc98cb4	dma_wait_for_async_tx	vmlinux	EXPORT_SYMBOL_GPL
+0xfc562165	acpi_run_osc	vmlinux	EXPORT_SYMBOL
+0x4ebb6b94	backlight_device_register	vmlinux	EXPORT_SYMBOL
+0x33543801	queue_work	vmlinux	EXPORT_SYMBOL_GPL
+0xb1c3a01a	oops_in_progress	vmlinux	EXPORT_SYMBOL
+0xe2af2885	snd_emux_unlock_voice	sound/synth/emux/snd-emux-synth	EXPORT_SYMBOL
+0xc13bc094	rxrpc_kernel_get_abort_code	net/rxrpc/af-rxrpc	EXPORT_SYMBOL
+0x379a5fc9	rt2800_validate_eeprom	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0x33739de7	tps65010_set_vib	drivers/mfd/tps65010	EXPORT_SYMBOL
+0xc039b3b3	gfn_to_pfn_atomic	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x71cbed05	tty_insert_flip_string_fixed_flag	vmlinux	EXPORT_SYMBOL
+0xc8cb7526	tty_register_ldisc	vmlinux	EXPORT_SYMBOL
+0x763b45c3	tty_throttle	vmlinux	EXPORT_SYMBOL
+0xbeb11b50	tty_check_change	vmlinux	EXPORT_SYMBOL
+0x9a9824ef	btree_lookup	vmlinux	EXPORT_SYMBOL_GPL
+0x8baf734e	blk_get_backing_dev_info	vmlinux	EXPORT_SYMBOL
+0xcb8420bb	elevator_init	vmlinux	EXPORT_SYMBOL
+0x1d041e45	kill_fasync	vmlinux	EXPORT_SYMBOL
+0xdd4a5569	param_get_byte	vmlinux	EXPORT_SYMBOL
+0x8ff4079b	pv_irq_ops	vmlinux	EXPORT_SYMBOL
+0xa4241970	ieee80211_sta_ps_transition	net/mac80211/mac80211	EXPORT_SYMBOL
+0xabda1e2e	decode_rs16	lib/reed_solomon/reed_solomon	EXPORT_SYMBOL_GPL
+0x0b8ef590	raid6_2data_recov	lib/raid6/raid6_pq	EXPORT_SYMBOL_GPL
+0x025e2d69	ocfs2_cluster_connect_agnostic	fs/ocfs2/ocfs2_stackglue	EXPORT_SYMBOL_GPL
+0x7f0b7631	wusb_dev_destroy	drivers/usb/wusbcore/wusbcore	EXPORT_SYMBOL_GPL
+0x9cd5b803	ieee80211_softmac_start_protocol_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0xbc32abd0	fc_fill_hdr	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x33d2cc62	il_tx_cmd_protection	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x00fdc85e	b1_send_message	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0x8eff32df	gigaset_dbg_buffer	drivers/isdn/gigaset/gigaset	EXPORT_SYMBOL_GPL
+0xc49cabd1	drm_fb_helper_setcmap	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0xc5742140	drm_put_dev	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x979c1912	drm_gem_vm_open	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x198e4f98	kvm_after_handle_nmi	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xf4efe2b7	dev_disable_lro	vmlinux	EXPORT_SYMBOL
+0xb2be6e92	netdev_stats_to_stats64	vmlinux	EXPORT_SYMBOL
+0x5c63be23	attribute_container_classdev_to_container	vmlinux	EXPORT_SYMBOL_GPL
+0xa82890ea	kblockd_schedule_delayed_work	vmlinux	EXPORT_SYMBOL
+0x3c094da2	debugfs_create_u8	vmlinux	EXPORT_SYMBOL_GPL
+0xfd89d635	cgroup_taskset_first	vmlinux	EXPORT_SYMBOL_GPL
+0x5133899e	ieee80211_find_sta_by_ifaddr	net/mac80211/mac80211	EXPORT_SYMBOL_GPL
+0x2081dc00	i1480_cmd	drivers/uwb/i1480/dfu/i1480-dfu-usb	EXPORT_SYMBOL_GPL
+0x5c098296	mlx4_map_phys_fmr	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xfeaca4a7	arcnet_unregister_proto	drivers/net/arcnet/arcnet	EXPORT_SYMBOL
+0xc9a3422d	dm_bufio_write_dirty_buffers_async	drivers/md/dm-bufio	EXPORT_SYMBOL_GPL
+0xef760201	ib_unregister_mad_agent	drivers/infiniband/core/ib_mad	EXPORT_SYMBOL
+0xccc9219a	drm_core_ioremap	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x6aba167a	regulator_list_voltage	vmlinux	EXPORT_SYMBOL_GPL
+0xd3c08471	gen_pool_create	vmlinux	EXPORT_SYMBOL
+0x051f0d3a	scsi_is_fc_rport	drivers/scsi/scsi_transport_fc	EXPORT_SYMBOL
+0xc9d4d6d1	wmi_has_guid	drivers/platform/x86/wmi	EXPORT_SYMBOL_GPL
+0x0e0d7446	ttpci_budget_debiread	drivers/media/dvb/ttpci/budget-core	EXPORT_SYMBOL_GPL
+0x6c8d5ae8	__gpio_get_value	vmlinux	EXPORT_SYMBOL_GPL
+0x432fd7f6	__gpio_set_value	vmlinux	EXPORT_SYMBOL_GPL
+0x8fe64ba3	gen_pool_destroy	vmlinux	EXPORT_SYMBOL
+0xaca63b31	vma_kernel_pagesize	vmlinux	EXPORT_SYMBOL_GPL
+0x1d3a4534	__tracepoint_kmalloc_node	vmlinux	EXPORT_SYMBOL
+0xd62c833f	schedule_timeout	vmlinux	EXPORT_SYMBOL
+0xbb837d27	machine_real_restart	vmlinux	EXPORT_SYMBOL
+0x9a111578	il_eeprom_query16	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xfa3c72d8	tifm_eject	drivers/misc/tifm_core	EXPORT_SYMBOL
+0x8672eb0b	ata_scsi_port_error_handler	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x65ccb6f0	call_netevent_notifiers	vmlinux	EXPORT_SYMBOL_GPL
+0x54152e04	percpu_counter_compare	vmlinux	EXPORT_SYMBOL
+0x574d512f	crypto_alloc_base	vmlinux	EXPORT_SYMBOL_GPL
+0x9d874548	aio_put_req	vmlinux	EXPORT_SYMBOL
+0xb10f5eb0	rxrpc_kernel_is_data_last	net/rxrpc/af-rxrpc	EXPORT_SYMBOL
+0xc4a80955	ceph_debugfs_cleanup	net/ceph/libceph	EXPORT_SYMBOL
+0x5eb2593f	mmc_wait_for_app_cmd	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x0c67b3a2	v4l2_fh_del	drivers/media/video/videodev	EXPORT_SYMBOL_GPL
+0x698bda9c	rdma_notify	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0x6f23d695	hid_validate_values	drivers/hid/hid	EXPORT_SYMBOL_GPL
+0x7ec1d0cc	ata_pci_device_do_resume	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x8e0b7743	ipv6_ext_hdr	vmlinux	EXPORT_SYMBOL
+0xf9aa2085	neigh_destroy	vmlinux	EXPORT_SYMBOL
+0xe23578d8	netdev_warn	vmlinux	EXPORT_SYMBOL
+0xcefcd99a	serial8250_unregister_port	vmlinux	EXPORT_SYMBOL
+0x2a495e5a	blk_end_request_cur	vmlinux	EXPORT_SYMBOL
+0x37ea921e	vfsmount_lock_local_lock_cpu	vmlinux	EXPORT_SYMBOL
+0x30cf2921	replace_mount_options	vmlinux	EXPORT_SYMBOL
+0xe0b3f690	snd_sb16dsp_interrupt	sound/isa/sb/snd-sb16-dsp	EXPORT_SYMBOL
+0x4683b87e	snd_ctl_rename_id	sound/core/snd	EXPORT_SYMBOL
+0x3fe33075	ax25_rebuild_header	net/ax25/ax25	EXPORT_SYMBOL
+0xbb3fca2a	rt2x00queue_unpause_queue	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x3f98fef4	rt2x00lib_txdone	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x9f9fff68	usbnet_get_link	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0x2433d14d	ata_pci_sff_init_host	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x68f2144f	cryptd_aead_child	crypto/cryptd	EXPORT_SYMBOL_GPL
+0xc98aeb01	kvm_set_cr0	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x08242d56	__xfrm_policy_check	vmlinux	EXPORT_SYMBOL
+0x93c651be	acpi_info	vmlinux	EXPORT_SYMBOL
+0x592b59af	acpi_evaluate_object_typed	vmlinux	EXPORT_SYMBOL
+0x33d169c9	_copy_from_user	vmlinux	EXPORT_SYMBOL
+0xe087971b	blk_sync_queue	vmlinux	EXPORT_SYMBOL
+0x38b8a61c	blk_lld_busy	vmlinux	EXPORT_SYMBOL_GPL
+0x7ad038e9	gre_del_protocol	net/ipv4/gre	EXPORT_SYMBOL_GPL
+0xff4386f6	fat_alloc_new_dir	fs/fat/fat	EXPORT_SYMBOL_GPL
+0x6575650e	scsi_schedule_eh	drivers/scsi/scsi_mod	EXPORT_SYMBOL_GPL
+0xc8d3340b	drm_gem_private_object_init	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x74bfd5d1	bcma_core_dma_translation	drivers/bcma/bcma	EXPORT_SYMBOL
+0xa8867314	pm_runtime_irq_safe	vmlinux	EXPORT_SYMBOL_GPL
+0xbcae6fc6	class_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0xc37c96e3	simple_write_end	vmlinux	EXPORT_SYMBOL
+0xcbee20b2	get_cpu_iowait_time_us	vmlinux	EXPORT_SYMBOL_GPL
+0x74deb10c	used_vectors	vmlinux	EXPORT_SYMBOL_GPL
+0x08c1810b	snd_sbmixer_new	sound/isa/sb/snd-sb-common	EXPORT_SYMBOL
+0xc2f91cb8	wusbhc_rh_control	drivers/usb/wusbcore/wusbcore	EXPORT_SYMBOL_GPL
+0x77fef656	rtl92c_phy_scan_operation_backup	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0xe2a8e831	ata_sff_postreset	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x02a2e0eb	ip_mc_rejoin_groups	vmlinux	EXPORT_SYMBOL
+0x2d723f7c	netdev_update_features	vmlinux	EXPORT_SYMBOL
+0xb31f8615	spi_async	vmlinux	EXPORT_SYMBOL_GPL
+0xaa8cc64c	sys_imageblit	vmlinux	EXPORT_SYMBOL
+0xd75c79df	smp_call_function	vmlinux	EXPORT_SYMBOL
+0xef6c3f70	round_jiffies_up_relative	vmlinux	EXPORT_SYMBOL_GPL
+0xb0c32e2b	w1_touch_block	drivers/w1/wire	EXPORT_SYMBOL_GPL
+0xca5dbc50	scsi_print_sense_hdr	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x36279636	scsi_host_lookup	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x676ed443	cx2341x_ctrl_query	drivers/media/video/cx2341x	EXPORT_SYMBOL
+0x7520e6f5	dibusb_dib3000mc_tuner_attach	drivers/media/dvb/dvb-usb/dvb-usb-dibusb-common	EXPORT_SYMBOL
+0x10ed33a0	i2c_smbus_read_byte_data	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0xa91845be	is_invalid_pfn	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xf5eda621	eth_header_cache	vmlinux	EXPORT_SYMBOL
+0x2957a2be	ps2_command	vmlinux	EXPORT_SYMBOL
+0x3ebebafe	ps2_handle_response	vmlinux	EXPORT_SYMBOL
+0xd6835aea	uart_set_options	vmlinux	EXPORT_SYMBOL_GPL
+0x47ff399f	regulator_is_supported_voltage	vmlinux	EXPORT_SYMBOL_GPL
+0x100c48a2	unregister_dock_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0xac57c9b8	pci_find_capability	vmlinux	EXPORT_SYMBOL
+0xb9d025c9	llist_del_first	vmlinux	EXPORT_SYMBOL_GPL
+0xb678366f	int_sqrt	vmlinux	EXPORT_SYMBOL
+0x1aa590cc	dec_zone_page_state	vmlinux	EXPORT_SYMBOL
+0x0799aca4	local_bh_enable	vmlinux	EXPORT_SYMBOL
+0x68e1943c	snd_pcm_suspend	sound/core/snd-pcm	EXPORT_SYMBOL
+0xf38bcdf3	nf_conntrack_max	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xd7a56db5	journal_dirty_metadata	fs/jbd/jbd	EXPORT_SYMBOL
+0x25675269	config_item_get	fs/configfs/configfs	EXPORT_SYMBOL
+0x1710d5c3	config_item_put	fs/configfs/configfs	EXPORT_SYMBOL
+0x25fc9da8	DAC1064_global_restore	drivers/video/matrox/matroxfb_DAC1064	EXPORT_SYMBOL
+0x698b4e4f	iscsi_get_pr_transport_id_len	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x0cb723e2	srp_rport_del	drivers/scsi/scsi_transport_srp	EXPORT_SYMBOL_GPL
+0xf22fde02	tcp_syn_flood_action	vmlinux	EXPORT_SYMBOL
+0x20409153	llc_mac_hdr_init	vmlinux	EXPORT_SYMBOL
+0x0f09098b	mnt_drop_write_file	vmlinux	EXPORT_SYMBOL
+0xd99ad579	__tracepoint_module_get	vmlinux	EXPORT_SYMBOL
+0x1eb9516e	round_jiffies_relative	vmlinux	EXPORT_SYMBOL_GPL
+0xbead1d55	hci_conn_check_secure	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x897b8660	fc_linkup	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x2dc888c5	rt2x00queue_get_entry	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0xca1c0516	rt2x00mac_get_antenna	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0xf4bbacbd	ath9k_hw_enable_interrupts	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x3c887826	ath9k_hw_write_associd	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x0582c290	video_unregister_device	drivers/media/video/videodev	EXPORT_SYMBOL
+0xc0699aac	v4l2_ctrl_check	drivers/media/video/v4l2-common	EXPORT_SYMBOL
+0x29b794fa	dib7000p_get_i2c_master	drivers/media/dvb/frontends/dib7000p	EXPORT_SYMBOL
+0xc6a7feb0	dib7000m_get_i2c_master	drivers/media/dvb/frontends/dib7000m	EXPORT_SYMBOL
+0xe1b3a267	wm9705_codec	drivers/input/touchscreen/wm97xx-ts	EXPORT_SYMBOL_GPL
+0x2e700b65	ttm_bo_device_release	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x66ac374c	drm_get_minor	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xdfa1fd06	klist_iter_init_node	vmlinux	EXPORT_SYMBOL_GPL
+0x9b7e286a	xenbus_watch_path	vmlinux	EXPORT_SYMBOL_GPL
+0x0634100a	bitmap_parselist_user	vmlinux	EXPORT_SYMBOL
+0x342e32e3	ida_simple_get	vmlinux	EXPORT_SYMBOL
+0x218cfe8c	blkiocg_del_blkio_group	vmlinux	EXPORT_SYMBOL_GPL
+0x670b7f9f	blk_queue_update_dma_alignment	vmlinux	EXPORT_SYMBOL
+0x5876ed7d	blk_start_request	vmlinux	EXPORT_SYMBOL
+0xd35e249a	_raw_read_lock_irq	vmlinux	EXPORT_SYMBOL
+0x6757c5c6	hrtimer_try_to_cancel	vmlinux	EXPORT_SYMBOL_GPL
+0xb6bd7df8	rds_connect_complete	net/rds/rds	EXPORT_SYMBOL_GPL
+0xc6e98779	usb_hcd_map_urb_for_dma	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xb6476b68	comedi_get_device_file_info	drivers/staging/comedi/comedi	EXPORT_SYMBOL_GPL
+0x6770ba3f	rtl_get_tcb_desc	drivers/net/wireless/rtlwifi/rtlwifi	EXPORT_SYMBOL
+0x6e8b8665	mddev_check_plugged	drivers/md/md-mod	EXPORT_SYMBOL_GPL
+0x41fe8795	drm_mm_pre_get	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x8176d340	kvm_is_linear_rip	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xb5730129	nf_register_hook	vmlinux	EXPORT_SYMBOL
+0x114e9ac2	__dev_get_by_name	vmlinux	EXPORT_SYMBOL
+0x1ff2bd2a	skb_copy_and_csum_dev	vmlinux	EXPORT_SYMBOL
+0x851833a5	input_unregister_handle	vmlinux	EXPORT_SYMBOL
+0x88da258c	vga_switcheroo_unregister_client	vmlinux	EXPORT_SYMBOL
+0xfdc7f3ba	idr_replace	vmlinux	EXPORT_SYMBOL
+0x82acfb70	blk_iopoll_sched	vmlinux	EXPORT_SYMBOL
+0x530b1e98	pm_suspend	vmlinux	EXPORT_SYMBOL
+0xae69b1c1	usermodehelper_read_unlock	vmlinux	EXPORT_SYMBOL_GPL
+0xd9d2bb03	snd_usbmidi_disconnect	sound/usb/snd-usbmidi-lib	EXPORT_SYMBOL
+0x7784fbe8	snd_timer_continue	sound/core/snd-timer	EXPORT_SYMBOL
+0xed19b9c6	ib_resize_cq	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x5c165453	drbd_set_st_err_str	drivers/block/drbd/drbd	EXPORT_SYMBOL
+0x13a7b5d8	register_netdev	vmlinux	EXPORT_SYMBOL
+0xa8223905	blk_limits_io_opt	vmlinux	EXPORT_SYMBOL
+0x63961b4c	snd_sb16dsp_configure	sound/isa/sb/snd-sb16-dsp	EXPORT_SYMBOL
+0xc12a08a3	iscsi_create_endpoint	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0x851733ef	t3_l2t_get	drivers/net/ethernet/chelsio/cxgb3/cxgb3	EXPORT_SYMBOL
+0x19e1f61a	dvb_dmx_swfilter_204	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0x67906f65	b1dma_send_message	drivers/isdn/hardware/avm/b1dma	EXPORT_SYMBOL
+0x8114d1d6	inet_twsk_purge	vmlinux	EXPORT_SYMBOL_GPL
+0x37db8f19	dmi_get_date	vmlinux	EXPORT_SYMBOL
+0x9e9f1714	__bitmap_andnot	vmlinux	EXPORT_SYMBOL
+0x737de5e9	radix_tree_tag_get	vmlinux	EXPORT_SYMBOL
+0x669dd28a	posix_acl_from_xattr	vmlinux	EXPORT_SYMBOL
+0xe79a46e5	clear_nlink	vmlinux	EXPORT_SYMBOL
+0x11be7878	config_item_init	fs/configfs/configfs	EXPORT_SYMBOL
+0x62deaea2	scsi_device_lookup	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x392d24c1	ath9k_hw_beaconq_setup	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xb6f8f5d5	mlx4_srq_alloc	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x471bf99a	i2o_parm_field_get	drivers/message/i2o/i2o_core	EXPORT_SYMBOL
+0xf505f74d	mISDNipac_init	drivers/isdn/hardware/mISDN/mISDNipac	EXPORT_SYMBOL
+0xcd631d53	i2c_transfer	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x6e4f5456	kvm_inject_nmi	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x2f636c31	kvm_spurious_fault	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xd2ac2b17	skb_seq_read	vmlinux	EXPORT_SYMBOL
+0x83c8a355	param_set_int	vmlinux	EXPORT_SYMBOL
+0x161a0d86	snd_card_file_add	sound/core/snd	EXPORT_SYMBOL
+0xfe84d62a	xdr_inline_pages	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x6102dc2a	il_apm_init	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xc184ec1e	cx2341x_ctrl_get_menu	drivers/media/video/cx2341x	EXPORT_SYMBOL
+0x139e9727	ttpci_eeprom_parse_mac	drivers/media/dvb/ttpci/ttpci-eeprom	EXPORT_SYMBOL
+0x9b2b253a	dm_bufio_get	drivers/md/dm-bufio	EXPORT_SYMBOL_GPL
+0x9ce3f83f	nvram_write_byte	drivers/char/nvram	EXPORT_SYMBOL
+0x42076835	crypto_drop_spawn	vmlinux	EXPORT_SYMBOL_GPL
+0xa206b621	snd_hda_get_hint	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x5057f2b3	snd_pcm_lib_mmap_iomem	sound/core/snd-pcm	EXPORT_SYMBOL
+0xf2bf1549	snd_midi_event_new	sound/core/seq/snd-seq-midi-event	EXPORT_SYMBOL
+0x46c1c4a2	irlmp_unregister_service	net/irda/irda	EXPORT_SYMBOL
+0x163bdaeb	mptbase_sas_persist_operation	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0xa5ae3aa2	ata_cable_80wire	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x27c2197f	param_set_short	vmlinux	EXPORT_SYMBOL
+0x1bf705a7	snd_hda_multi_out_analog_cleanup	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xb836d954	snd_wss_info_single	sound/isa/wss/snd-wss-lib	EXPORT_SYMBOL
+0x405f243a	nf_nat_tftp_hook	net/netfilter/nf_conntrack_tftp	EXPORT_SYMBOL_GPL
+0xa9a46725	nf_nat_snmp_hook	net/netfilter/nf_conntrack_snmp	EXPORT_SYMBOL_GPL
+0x68cad750	get_h225_addr	net/netfilter/nf_conntrack_h323	EXPORT_SYMBOL_GPL
+0x46521f42	fc_exch_mgr_list_clone	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x574ddc16	ad_dpot_probe	drivers/misc/ad525x_dpot	EXPORT_SYMBOL
+0x276babb6	v4l2_ctrl_handler_free	drivers/media/video/videodev	EXPORT_SYMBOL
+0x96960544	skb_pad	vmlinux	EXPORT_SYMBOL
+0x94853a19	pci_scan_bus	vmlinux	EXPORT_SYMBOL
+0x77bc13a0	strim	vmlinux	EXPORT_SYMBOL
+0x3d795883	shash_register_instance	vmlinux	EXPORT_SYMBOL_GPL
+0x51d816e4	seq_write	vmlinux	EXPORT_SYMBOL
+0x487eb0e2	generic_file_llseek	vmlinux	EXPORT_SYMBOL
+0x51577e14	snd_info_create_module_entry	sound/core/snd	EXPORT_SYMBOL
+0x36e5fbaf	fc_cpu_mask	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x9ffd08d8	pcmcia_disable_device	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0x119721ac	ei_interrupt	drivers/net/ethernet/8390/8390	EXPORT_SYMBOL
+0xe107c6bd	mpt_config	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0x7b786e52	sparse_keymap_report_entry	drivers/input/sparse-keymap	EXPORT_SYMBOL
+0x51a36936	rtc_update_irq_enable	vmlinux	EXPORT_SYMBOL_GPL
+0x999e8297	vfree	vmlinux	EXPORT_SYMBOL
+0x6cb7e68e	wait_on_page_bit	vmlinux	EXPORT_SYMBOL
+0x8b237d95	mutex_lock	vmlinux	EXPORT_SYMBOL
+0x998c2db0	irttp_open_tsap	net/irda/irda	EXPORT_SYMBOL
+0x69651457	irlmp_open_lsap	net/irda/irda	EXPORT_SYMBOL
+0x4e95ad6e	lc_changed	lib/lru_cache	EXPORT_SYMBOL
+0x00ec76ad	pnfs_generic_pg_readpages	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0x1b9ffd31	scsi_get_host_dev	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x0abb6bb3	il_get_free_ucode_key_idx	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xf92783e9	mmc_detect_card_removed	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x946d5d27	ib_response_mad	drivers/infiniband/core/ib_mad	EXPORT_SYMBOL
+0x735e32f3	ata_acpi_cbl_80wire	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x2545c170	unregister_xenbus_watch	vmlinux	EXPORT_SYMBOL_GPL
+0x094de2c6	dma_async_memcpy_pg_to_pg	vmlinux	EXPORT_SYMBOL
+0xb1cfad22	rdmsr_on_cpu	vmlinux	EXPORT_SYMBOL
+0x06ec5b51	swiotlb_sync_sg_for_device	vmlinux	EXPORT_SYMBOL
+0xcd7952fb	elv_rq_merge_ok	vmlinux	EXPORT_SYMBOL
+0x771cf835	dma_pool_alloc	vmlinux	EXPORT_SYMBOL
+0xc59d4543	alloc_candev	drivers/net/can/can-dev	EXPORT_SYMBOL_GPL
+0xe7684e01	ip6_route_lookup	vmlinux	EXPORT_SYMBOL_GPL
+0x8e674a11	tcp_v4_do_rcv	vmlinux	EXPORT_SYMBOL
+0x252230a9	get_device	vmlinux	EXPORT_SYMBOL_GPL
+0xe5e13efa	hvc_alloc	vmlinux	EXPORT_SYMBOL_GPL
+0xf065f629	ioread16be	vmlinux	EXPORT_SYMBOL
+0xb5759160	blk_dump_rq_flags	vmlinux	EXPORT_SYMBOL
+0xccf594ed	exportfs_decode_fh	vmlinux	EXPORT_SYMBOL_GPL
+0xc3db3bfe	sysfs_create_group	vmlinux	EXPORT_SYMBOL_GPL
+0xda543801	xprt_release_rqst_cong	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x00c52ef5	g_make_token_header	net/sunrpc/auth_gss/auth_rpcgss	EXPORT_SYMBOL_GPL
+0x53805cce	scsi_add_device	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xb0872edd	qlogicfas408_queuecommand	drivers/scsi/qlogicfas408	EXPORT_SYMBOL
+0xd5bb106d	tps65010_set_vbus_draw	drivers/mfd/tps65010	EXPORT_SYMBOL
+0xbbdb5c42	smscore_unregister_client	drivers/media/dvb/siano/smsmdtv	EXPORT_SYMBOL_GPL
+0x5bf4fe07	xfrm_unregister_mode	vmlinux	EXPORT_SYMBOL
+0x9f3da0f4	consume_skb	vmlinux	EXPORT_SYMBOL
+0x23f21868	__pm_stay_awake	vmlinux	EXPORT_SYMBOL_GPL
+0x972ad42b	pci_match_id	vmlinux	EXPORT_SYMBOL
+0x4eeb583d	pci_dev_run_wake	vmlinux	EXPORT_SYMBOL_GPL
+0x6e3ee793	snd_hda_mixer_bind_tlv	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xb0b201d6	snd_opl3_hwdep_new	sound/drivers/opl3/snd-opl3-lib	EXPORT_SYMBOL
+0x0079dbd7	snd_pcm_lib_get_vmalloc_page	sound/core/snd-pcm	EXPORT_SYMBOL
+0x8eb2b9a4	rpc_alloc_iostats	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x8d8a8387	matrox_cfbX_init	drivers/video/matrox/matroxfb_accel	EXPORT_SYMBOL
+0x29e38408	usb_unanchor_urb	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x904c2652	target_get_task_cdb	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x070bce35	cxgbi_sock_fail_act_open	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0x813021bd	cxgbi_ep_connect	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0x0465ec0f	rt2x00lib_suspend	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x4d49b505	input_allocate_polled_device	drivers/input/input-polldev	EXPORT_SYMBOL
+0xd05a7d6b	i2c_add_numbered_adapter	drivers/i2c/i2c-core	EXPORT_SYMBOL_GPL
+0x538edb9e	tcf_action_dump_1	vmlinux	EXPORT_SYMBOL
+0x8b1a7a66	pcie_aspm_enabled	vmlinux	EXPORT_SYMBOL
+0x5e40960c	bio_kmalloc	vmlinux	EXPORT_SYMBOL
+0x9a8ee525	poll_schedule_timeout	vmlinux	EXPORT_SYMBOL
+0x5c38e37f	p9_client_open	net/9p/9pnet	EXPORT_SYMBOL
+0x155925ce	fuse_direct_io	fs/fuse/fuse	EXPORT_SYMBOL_GPL
+0x1d9dd72f	vring_transport_features	drivers/virtio/virtio_ring	EXPORT_SYMBOL_GPL
+0x17523ce7	dvb_frontend_sleep_until	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0xb1a312e1	ib_unpack	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x5c360812	tcp_prot	vmlinux	EXPORT_SYMBOL
+0x4a6d6221	root_device_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0xc1e96450	textsearch_prepare	vmlinux	EXPORT_SYMBOL
+0x50ab4c6d	files_lglock_global_lock	vmlinux	EXPORT_SYMBOL
+0x5206459c	proc_dointvec_ms_jiffies	vmlinux	EXPORT_SYMBOL
+0x7148aac9	ceph_con_keepalive	net/ceph/libceph	EXPORT_SYMBOL
+0x41a160e5	synth_buffer_empty	drivers/staging/speakup/speakup	EXPORT_SYMBOL_GPL
+0x1ff29cce	sas_port_alloc	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL
+0x5ba6ae2c	__pcmcia_request_exclusive_irq	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0x5140cbc4	v4l2_fh_release	drivers/media/video/videodev	EXPORT_SYMBOL_GPL
+0x297be43b	bcma_core_pci_irq_ctl	drivers/bcma/bcma	EXPORT_SYMBOL_GPL
+0x17c9a27d	async_memcpy	crypto/async_tx/async_memcpy	EXPORT_SYMBOL_GPL
+0xbd34051b	inet_frag_kill	vmlinux	EXPORT_SYMBOL
+0x97b99b64	pci_iounmap	vmlinux	EXPORT_SYMBOL
+0xef2e51cf	simple_setattr	vmlinux	EXPORT_SYMBOL
+0x57915299	simple_getattr	vmlinux	EXPORT_SYMBOL
+0xfa30957c	mempool_free	vmlinux	EXPORT_SYMBOL
+0x0e096be3	snd_msnd_init_queue	sound/isa/msnd/snd-msnd-lib	EXPORT_SYMBOL
+0x099a2829	snd_tea6330t_update_mixer	sound/i2c/snd-tea6330t	EXPORT_SYMBOL
+0xa2989bd0	nfc_dep_link_is_up	net/nfc/nfc	EXPORT_SYMBOL
+0xc822b68c	journal_init_inode	fs/jbd/jbd	EXPORT_SYMBOL
+0x3b95e6f1	configfs_register_subsystem	fs/configfs/configfs	EXPORT_SYMBOL
+0x69a8ce9a	usb_stor_Bulk_reset	drivers/usb/storage/usb-storage	EXPORT_SYMBOL_GPL
+0x66ace210	target_fabric_configfs_deregister	drivers/target/target_core_mod	EXPORT_SYMBOL
+0xc1efccb6	rt2x00lib_beacondone	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0xad3ad91c	systime	drivers/media/dvb/frontends/dibx000_common	EXPORT_SYMBOL
+0xb4cf6e0b	drm_vblank_put	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xf37d791c	tcf_em_tree_validate	vmlinux	EXPORT_SYMBOL
+0xa704263f	llc_sap_open	vmlinux	EXPORT_SYMBOL
+0x1a2ed9ab	cred_to_ucred	vmlinux	EXPORT_SYMBOL_GPL
+0x05468caa	sock_tx_timestamp	vmlinux	EXPORT_SYMBOL
+0x1d18bd84	attribute_container_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x94452a72	driver_for_each_device	vmlinux	EXPORT_SYMBOL_GPL
+0x2ac36de7	btree_last	vmlinux	EXPORT_SYMBOL_GPL
+0xebcc281c	bdget_disk	vmlinux	EXPORT_SYMBOL
+0xf1b31314	delayacct_on	vmlinux	EXPORT_SYMBOL_GPL
+0x28cccd8d	nlmsvc_unlock_all_by_sb	fs/lockd/lockd	EXPORT_SYMBOL_GPL
+0x77e35ccc	nlmsvc_unlock_all_by_ip	fs/lockd/lockd	EXPORT_SYMBOL_GPL
+0xedf996b1	ni_tio_set_mite_channel	drivers/staging/comedi/drivers/ni_tiocmd	EXPORT_SYMBOL_GPL
+0xe0da01f4	rt2x00mac_set_antenna	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x3a5187ff	pasic3_write_register	drivers/mfd/htc-pasic3	EXPORT_SYMBOL
+0x90d3a130	v4l2_g_ctrl	drivers/media/video/videodev	EXPORT_SYMBOL
+0x891f9535	tcp_v4_get_peer	vmlinux	EXPORT_SYMBOL
+0x4e6d1f88	tcp_rcv_state_process	vmlinux	EXPORT_SYMBOL
+0x90ba3e61	skb_to_sgvec	vmlinux	EXPORT_SYMBOL_GPL
+0x9bc69d4e	agp_alloc_bridge	vmlinux	EXPORT_SYMBOL
+0xf536d22e	acpi_set_gpe_wake_mask	vmlinux	EXPORT_SYMBOL
+0x20c55ae0	sscanf	vmlinux	EXPORT_SYMBOL
+0xa988ce13	__breadahead	vmlinux	EXPORT_SYMBOL
+0x97cf19ca	snd_cs4236_ext_in	sound/isa/wss/snd-wss-lib	EXPORT_SYMBOL
+0x9bc4daeb	snd_pcm_hw_constraint_integer	sound/core/snd-pcm	EXPORT_SYMBOL
+0x5585623a	rpc_bind_new_program	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x9f543c39	journal_stop	fs/jbd/jbd	EXPORT_SYMBOL
+0x03aa9c5d	iscsi_destroy_iface	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0x1f55cd70	qlogicfas408_ihandl	drivers/scsi/qlogicfas408	EXPORT_SYMBOL
+0x708324f8	iscsi_boot_create_initiator	drivers/scsi/iscsi_boot_sysfs	EXPORT_SYMBOL_GPL
+0x71db3963	iscsi_boot_destroy_kset	drivers/scsi/iscsi_boot_sysfs	EXPORT_SYMBOL_GPL
+0x73e6f813	sirdev_raw_read	drivers/net/irda/sir-dev	EXPORT_SYMBOL
+0x48193639	acpi_lid_open	drivers/acpi/button	EXPORT_SYMBOL
+0x7a9ff2ff	pfifo_fast_ops	vmlinux	EXPORT_SYMBOL
+0x77519570	led_classdev_suspend	vmlinux	EXPORT_SYMBOL_GPL
+0xda9660d3	platform_device_register_full	vmlinux	EXPORT_SYMBOL_GPL
+0x6c1251fd	apei_exec_read_register	vmlinux	EXPORT_SYMBOL_GPL
+0x05b4ff7d	devm_gpio_free	vmlinux	EXPORT_SYMBOL
+0x3fa58ef8	wait_for_completion	vmlinux	EXPORT_SYMBOL
+0xd5f0963b	csum_partial_copy_to_xdr	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xa7f94ca1	usb_unlink_urb	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xd3a7686a	ath_hw_cycle_counters_update	drivers/net/wireless/ath/ath	EXPORT_SYMBOL
+0x860ebd6e	i2c_smbus_write_byte_data	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0xee259428	dev_get_by_name_rcu	vmlinux	EXPORT_SYMBOL
+0x4564d7d5	agp_add_bridge	vmlinux	EXPORT_SYMBOL_GPL
+0x1d18eb91	__alloc_tty_driver	vmlinux	EXPORT_SYMBOL
+0x30a4f4ca	bstr_printf	vmlinux	EXPORT_SYMBOL_GPL
+0xb0207ecf	___ratelimit	vmlinux	EXPORT_SYMBOL
+0xb34f77a7	snd_hda_jack_add_kctl	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xf4d6b745	snd_dma_alloc_pages	sound/core/snd-page-alloc	EXPORT_SYMBOL
+0xc89a3893	__nf_nat_mangle_tcp_packet	net/ipv4/netfilter/nf_nat	EXPORT_SYMBOL
+0x6565d33f	scsi_kmap_atomic_sg	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xb20d2b91	hostap_remove_proc	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x49ebd0d2	sja1000_interrupt	drivers/net/can/sja1000/sja1000	EXPORT_SYMBOL_GPL
+0xf6222fcf	platform_device_add_data	vmlinux	EXPORT_SYMBOL_GPL
+0x6739a503	balloon_set_new_target	vmlinux	EXPORT_SYMBOL_GPL
+0x9d9b5284	padata_alloc	vmlinux	EXPORT_SYMBOL
+0xefef0909	register_kprobes	vmlinux	EXPORT_SYMBOL_GPL
+0x49db8db4	register_jprobes	vmlinux	EXPORT_SYMBOL_GPL
+0x3a26ed11	sched_clock	vmlinux	EXPORT_SYMBOL_GPL
+0xa79fb97c	snd_sb_csp_new	sound/isa/sb/snd-sb16-csp	EXPORT_SYMBOL
+0x57fecba9	rpcauth_init_cred	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x78084dc6	put_rpccred	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x6d747e09	rxrpc_kernel_abort_call	net/rxrpc/af-rxrpc	EXPORT_SYMBOL
+0xb9e1f407	lapb_getparms	net/lapb/lapb	EXPORT_SYMBOL
+0x91fc045c	mmc_hw_reset_check	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x6576e55e	drm_gem_create_mmap_offset	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x3cce04ed	edac_mc_handle_ce_no_info	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0xa1db4c75	ata_std_qc_defer	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x56927619	xfrm_audit_state_replay_overflow	vmlinux	EXPORT_SYMBOL_GPL
+0x1fcece42	inet_twdr_twcal_tick	vmlinux	EXPORT_SYMBOL_GPL
+0xa3737e8c	sock_create_lite	vmlinux	EXPORT_SYMBOL
+0xc0248ae6	snd_seq_event_port_attach	sound/core/seq/snd-seq	EXPORT_SYMBOL
+0x3d26bb63	nfc_proto_register	net/nfc/nfc	EXPORT_SYMBOL
+0xcad2cd01	_fc_frame_alloc	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0xf93040f1	fcoe_clean_pending_queue	drivers/scsi/fcoe/libfcoe	EXPORT_SYMBOL_GPL
+0x5853acd2	rt2x00usb_vendor_req_buff_lock	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0xbc969154	mlx4_register_mac	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x32da492d	tifm_free_device	drivers/misc/tifm_core	EXPORT_SYMBOL
+0xbd29c5c8	v4l2_g_ext_ctrls	drivers/media/video/videodev	EXPORT_SYMBOL
+0x7204f1de	cdrom_release	drivers/cdrom/cdrom	EXPORT_SYMBOL
+0x5153f308	cpufreq_unregister_governor	vmlinux	EXPORT_SYMBOL_GPL
+0xfc7bb265	swiotlb_dma_mapping_error	vmlinux	EXPORT_SYMBOL
+0x30b44551	d_obtain_alias	vmlinux	EXPORT_SYMBOL
+0xaa4576b9	mmu_notifier_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x172e72d4	vdso_enabled	vmlinux	EXPORT_SYMBOL_GPL
+0xe373446e	snd_hda_spdif_out_of_nid	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x46db8d67	snd_gf1_lvol_to_gvol_raw	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0xf35e3f19	nf_conntrack_helper_try_module_get	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x5f3efdbe	ieee802154_nl_assoc_confirm	net/ieee802154/ieee802154	EXPORT_SYMBOL
+0x10807646	uwb_rc_alloc	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0x7c596e7b	spk_synth_is_alive_nop	drivers/staging/speakup/speakup	EXPORT_SYMBOL_GPL
+0xc5deb0e4	il_read_targ_mem	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xddc84389	fw_core_handle_response	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0xa6527798	ata_pci_sff_init_one	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xde482b3b	ip4_datagram_connect	vmlinux	EXPORT_SYMBOL
+0x2a142bcd	tcp_timewait_state_process	vmlinux	EXPORT_SYMBOL
+0x062fc169	xen_hvm_resume_frames	vmlinux	EXPORT_SYMBOL_GPL
+0x39e82003	pnp_start_dev	vmlinux	EXPORT_SYMBOL
+0x75bdea12	iommu_area_alloc	vmlinux	EXPORT_SYMBOL
+0xc72fb97f	security_inode_init_security	vmlinux	EXPORT_SYMBOL
+0xd705b4c7	schedule_hrtimeout	vmlinux	EXPORT_SYMBOL_GPL
+0x8101d452	oxygen_pci_resume	sound/pci/oxygen/snd-oxygen-lib	EXPORT_SYMBOL
+0x6f2271f4	irttp_dup	net/irda/irda	EXPORT_SYMBOL
+0xbabf11c0	ceph_osdc_put_event	net/ceph/libceph	EXPORT_SYMBOL
+0xc54d962d	starget_for_each_device	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x907d07c5	parport_wait_event	drivers/parport/parport	EXPORT_SYMBOL
+0xa5ea0794	il_hdl_pm_sleep	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x651ae7b5	v4l2_ctrl_poll	drivers/media/video/videodev	EXPORT_SYMBOL
+0xd8e3ccc1	dib8096p_tuner_sleep	drivers/media/dvb/frontends/dib8000	EXPORT_SYMBOL
+0x898fd017	drm_unbind_agp	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x5ccf7c5b	subsys_interface_register	vmlinux	EXPORT_SYMBOL_GPL
+0xf3916987	global_cursor_default	vmlinux	EXPORT_SYMBOL
+0x292093f4	native_rdmsr_safe_regs	vmlinux	EXPORT_SYMBOL
+0xfd6f4850	native_wrmsr_safe_regs	vmlinux	EXPORT_SYMBOL
+0xf37a4212	nobh_writepage	vmlinux	EXPORT_SYMBOL
+0x31652ce3	clear_page_dirty_for_io	vmlinux	EXPORT_SYMBOL
+0xa92db578	srcu_init_notifier_head	vmlinux	EXPORT_SYMBOL_GPL
+0x9a1fc4b4	jiffies_to_timeval	vmlinux	EXPORT_SYMBOL
+0xd18b6eb2	acpi_unmap_lsapic	vmlinux	EXPORT_SYMBOL
+0x9e6f8c29	snd_kctl_jack_report	sound/core/snd	EXPORT_SYMBOL_GPL
+0xd600d89a	snd_rawmidi_kernel_write	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0x94ca9332	wimax_dev_rm	net/wimax/wimax	EXPORT_SYMBOL_GPL
+0x8c0eb41a	ceph_osdc_wait_event	net/ceph/libceph	EXPORT_SYMBOL
+0x96877ac4	locks_start_grace	fs/lockd/lockd	EXPORT_SYMBOL_GPL
+0x5a1ef552	DAC1064_global_init	drivers/video/matrox/matroxfb_DAC1064	EXPORT_SYMBOL
+0xf5132100	ftdi_elan_gone_away	drivers/usb/misc/ftdi-elan	EXPORT_SYMBOL_GPL
+0xaf6b4cec	spi_bitbang_stop	drivers/spi/spi-bitbang	EXPORT_SYMBOL_GPL
+0xc2fdc7d4	gspca_disconnect	drivers/media/video/gspca/gspca_main	EXPORT_SYMBOL
+0x4a6cb11c	tcp_reno_min_cwnd	vmlinux	EXPORT_SYMBOL_GPL
+0xb3d4e655	tty_schedule_flip	vmlinux	EXPORT_SYMBOL
+0xcbac9b85	tty_get_baud_rate	vmlinux	EXPORT_SYMBOL
+0x09b53477	vfs_follow_link	vmlinux	EXPORT_SYMBOL
+0xc11bd00f	tracepoint_probe_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x16ebbc74	snd_ac97_pcm_double_rate_rules	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0x1c64f384	svc_create_xprt	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x212db8d2	pcmcia_socket_list	drivers/pcmcia/pcmcia_core	EXPORT_SYMBOL
+0x0cb4b189	tuners	drivers/media/common/tuners/tuner-types	EXPORT_SYMBOL
+0xa9a0f727	tty_shutdown	vmlinux	EXPORT_SYMBOL
+0x2f568175	tty_devnum	vmlinux	EXPORT_SYMBOL
+0xb949d6c6	sysfs_rename_link	vmlinux	EXPORT_SYMBOL_GPL
+0xccea4e34	perf_get_x86_pmu_capability	vmlinux	EXPORT_SYMBOL_GPL
+0xae7c5411	ms_hyperv	vmlinux	EXPORT_SYMBOL_GPL
+0xe17d9b19	uwb_rc_ie_rm	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0x93b52f9c	ieee80211_start_scan_syncro_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0xd13c95aa	rtl92c_phy_set_io_cmd	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0x0912df67	ib_post_send_mad	drivers/infiniband/core/ib_mad	EXPORT_SYMBOL
+0xb718a44e	tpm_release	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x4f391d0e	nla_parse	vmlinux	EXPORT_SYMBOL
+0x602f8fcf	write_dirty_buffer	vmlinux	EXPORT_SYMBOL
+0x61fe4aa9	noop_llseek	vmlinux	EXPORT_SYMBOL
+0xc65d3eed	ring_buffer_entries_cpu	vmlinux	EXPORT_SYMBOL_GPL
+0xb05cd22f	nfc_proto_unregister	net/nfc/nfc	EXPORT_SYMBOL
+0x785d71cf	umc_device_create	drivers/uwb/umc	EXPORT_SYMBOL_GPL
+0x9c2a6fa1	usbip_pad_iso	drivers/staging/usbip/usbip-core	EXPORT_SYMBOL_GPL
+0x331817d3	ata_host_init	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xf4584337	llc_sap_find	vmlinux	EXPORT_SYMBOL
+0x1648cc0c	input_free_device	vmlinux	EXPORT_SYMBOL
+0x303cfd1c	regulator_notifier_call_chain	vmlinux	EXPORT_SYMBOL_GPL
+0xfc968c8b	apei_exec_write_register_value	vmlinux	EXPORT_SYMBOL_GPL
+0x0838b7d8	amdtp_out_stream_start	sound/firewire/snd-firewire-lib	EXPORT_SYMBOL
+0x6bb2a9e3	xprt_set_retrans_timeout_rtt	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x577f9669	alloc_ltalkdev	net/appletalk/appletalk	EXPORT_SYMBOL
+0x3a81aecc	_rtl92c_phy_rf_serial_write	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0x3d5d44af	rt2800_sta_remove	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0xd1241ef8	pppox_unbind_sock	drivers/net/ppp/pppox	EXPORT_SYMBOL
+0x62f0efe0	tifm_unmap_sg	drivers/misc/tifm_core	EXPORT_SYMBOL
+0x7deff673	dm_consume_args	drivers/md/dm-mod	EXPORT_SYMBOL
+0x72177f82	async_trigger_callback	crypto/async_tx/async_tx	EXPORT_SYMBOL_GPL
+0x3e9110fa	__hw_addr_unsync	vmlinux	EXPORT_SYMBOL
+0x7d11c268	jiffies	vmlinux	EXPORT_SYMBOL
+0xe417d940	ocfs2_dlm_lvb	fs/ocfs2/ocfs2_stackglue	EXPORT_SYMBOL_GPL
+0x5293faf5	osd_req_remove_object	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0x288e296e	cxgb4_l2t_get	drivers/net/ethernet/chelsio/cxgb4/cxgb4	EXPORT_SYMBOL
+0x814b7369	do_map_probe	drivers/mtd/chips/chipreg	EXPORT_SYMBOL
+0x69bef073	avmcard_dma_alloc	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0xe5d2b8fd	bcma_core_is_enabled	drivers/bcma/bcma	EXPORT_SYMBOL_GPL
+0x3718fd9c	dev_queue_xmit	vmlinux	EXPORT_SYMBOL
+0xe06141e9	security_sk_clone	vmlinux	EXPORT_SYMBOL
+0xe12d4c50	proc_mkdir	vmlinux	EXPORT_SYMBOL
+0x13d0adf7	__kfifo_out	vmlinux	EXPORT_SYMBOL
+0x3efb35c9	get_online_cpus	vmlinux	EXPORT_SYMBOL_GPL
+0xfd4ca9b1	sis_malloc_new	drivers/video/sis/sisfb	EXPORT_SYMBOL_GPL
+0x0317b31a	phone_unregister_device	drivers/staging/telephony/phonedev	EXPORT_SYMBOL
+0x888bf0c6	labpc_common_attach	drivers/staging/comedi/drivers/ni_labpc	EXPORT_SYMBOL_GPL
+0x57cec17b	labpc_common_detach	drivers/staging/comedi/drivers/ni_labpc	EXPORT_SYMBOL_GPL
+0x374c1e1c	fcoe_wwn_from_mac	drivers/scsi/fcoe/libfcoe	EXPORT_SYMBOL_GPL
+0x6f318843	parport_find_base	drivers/parport/parport	EXPORT_SYMBOL
+0x0a469d23	mfd_clone_cell	drivers/mfd/mfd-core	EXPORT_SYMBOL
+0x9ffa1a16	gigaset_if_receive	drivers/isdn/gigaset/gigaset	EXPORT_SYMBOL_GPL
+0x77b39cb4	__serpent_setkey	crypto/serpent_generic	EXPORT_SYMBOL_GPL
+0x053d1bb3	dmam_free_noncoherent	vmlinux	EXPORT_SYMBOL
+0x35290aa3	blk_integrity_merge_bio	vmlinux	EXPORT_SYMBOL
+0x69f9f91e	blk_rq_map_sg	vmlinux	EXPORT_SYMBOL
+0xf0ce7d50	proc_dointvec_jiffies	vmlinux	EXPORT_SYMBOL
+0x07d9b576	fscache_wait_bit_interruptible	fs/fscache/fscache	EXPORT_SYMBOL
+0x4486c999	usb_set_interface	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x9d4dc5e3	dib8000_get_tune_state	drivers/media/dvb/frontends/dib8000	EXPORT_SYMBOL
+0xdecc52d9	dib8000_set_tune_state	drivers/media/dvb/frontends/dib8000	EXPORT_SYMBOL
+0xcb13369c	__napi_schedule	vmlinux	EXPORT_SYMBOL
+0xb167315b	sk_stream_wait_memory	vmlinux	EXPORT_SYMBOL
+0x8384a2c5	tty_unlock	vmlinux	EXPORT_SYMBOL
+0x0d3cb182	kstrtos16_from_user	vmlinux	EXPORT_SYMBOL
+0x9f2bdaac	__bitmap_or	vmlinux	EXPORT_SYMBOL
+0xae729e59	security_req_classify_flow	vmlinux	EXPORT_SYMBOL
+0x7fcb077e	get_dcookie	vmlinux	EXPORT_SYMBOL_GPL
+0x884f4e96	trace_event_raw_init	vmlinux	EXPORT_SYMBOL_GPL
+0x0fa138de	xen_hvm_need_lapic	vmlinux	EXPORT_SYMBOL_GPL
+0x09c3bfd0	snd_ak4117_reg_write	sound/i2c/other/snd-ak4117	EXPORT_SYMBOL
+0x2cbb8a60	snd_ak4114_reg_write	sound/i2c/other/snd-ak4114	EXPORT_SYMBOL
+0x2d1acebe	snd_ak4113_reg_write	sound/i2c/other/snd-ak4113	EXPORT_SYMBOL_GPL
+0x240ed52d	__fscache_alloc_page	fs/fscache/fscache	EXPORT_SYMBOL
+0x2f5dabb9	osd_req_flush_object	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0xf4b0ce66	il_tx_cmd_complete	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x137caf29	z8530_sync_dma_open	drivers/net/wan/z85230	EXPORT_SYMBOL
+0xb6479bc7	mmc_cd_gpio_free	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x14878009	amd_report_gart_errors	drivers/edac/edac_mce_amd	EXPORT_SYMBOL_GPL
+0x9dc2a710	netlink_broadcast_filtered	vmlinux	EXPORT_SYMBOL
+0x5dd67618	register_netevent_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0x4ebcea48	pm_generic_runtime_idle	vmlinux	EXPORT_SYMBOL_GPL
+0x0727c4f3	iowrite8	vmlinux	EXPORT_SYMBOL
+0xd0d8621b	strlen	vmlinux	EXPORT_SYMBOL
+0xc7ec6c27	strspn	vmlinux	EXPORT_SYMBOL
+0xbb56f013	snd_hda_ch_mode_put	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xdb68bbad	rfkill_destroy	net/rfkill/rfkill	EXPORT_SYMBOL
+0x90109e05	hci_recv_frame	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0xb48956f8	synth_buffer_peek	drivers/staging/speakup/speakup	EXPORT_SYMBOL_GPL
+0x8319e2b4	scsi_allocate_command	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xd2981357	ath9k_cmn_count_streams	drivers/net/wireless/ath/ath9k/ath9k_common	EXPORT_SYMBOL
+0xedbaee5e	nla_strcmp	vmlinux	EXPORT_SYMBOL
+0x17f78860	gen_pool_size	vmlinux	EXPORT_SYMBOL_GPL
+0x0cb8fa12	crypto_ahash_type	vmlinux	EXPORT_SYMBOL_GPL
+0x26bb950b	__kfifo_from_user_r	vmlinux	EXPORT_SYMBOL
+0x0287918a	snd_ac97_mixer	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0xbb394c2c	dccp_hashinfo	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xa73c9ee3	usb_enable_autosuspend	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xb1777e58	transport_subsystem_register	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x04c2f2ff	parport_announce_port	drivers/parport/parport	EXPORT_SYMBOL
+0xf036bb0f	vb2_common_vm_ops	drivers/media/video/videobuf2-memops	EXPORT_SYMBOL_GPL
+0x030df88e	dibusb_streaming_ctrl	drivers/media/dvb/dvb-usb/dvb-usb-dibusb-common	EXPORT_SYMBOL
+0x6d99bf51	skb_trim	vmlinux	EXPORT_SYMBOL
+0x4097fa45	acpi_read_bit_register	vmlinux	EXPORT_SYMBOL
+0x403f9529	gpio_request_one	vmlinux	EXPORT_SYMBOL_GPL
+0x95da94ca	perf_tp_event	vmlinux	EXPORT_SYMBOL_GPL
+0xd85df7d4	boot_cpu_data	vmlinux	EXPORT_SYMBOL
+0xd66d48eb	snd_emu8000_poke_dw	sound/isa/sb/snd-sbawe	EXPORT_SYMBOL
+0x6bb71038	snd_seq_delete_kernel_client	sound/core/seq/snd-seq	EXPORT_SYMBOL
+0x516ee569	svc_proc_register	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x9b5711f8	power_supply_changed	drivers/power/power_supply	EXPORT_SYMBOL_GPL
+0x05081619	rt2x00lib_resume	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x046ed707	xfrm_policy_delete	vmlinux	EXPORT_SYMBOL
+0x885c7d52	inet_frags_init	vmlinux	EXPORT_SYMBOL
+0xbb343353	rtc_irq_register	vmlinux	EXPORT_SYMBOL_GPL
+0x4e3567f7	match_int	vmlinux	EXPORT_SYMBOL
+0x054434d6	radix_tree_tag_set	vmlinux	EXPORT_SYMBOL
+0x8ec4f382	blk_queue_lld_busy	vmlinux	EXPORT_SYMBOL_GPL
+0xda572feb	shash_free_instance	vmlinux	EXPORT_SYMBOL_GPL
+0x1375d683	debugfs_create_x64	vmlinux	EXPORT_SYMBOL_GPL
+0xebe2f258	bdi_setup_and_register	vmlinux	EXPORT_SYMBOL
+0x2cf76371	snd_pcm_kernel_ioctl	sound/core/snd-pcm	EXPORT_SYMBOL
+0x3f4aa1bd	rpcauth_generic_bind_cred	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x42a11193	mlx4_test_interrupts	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL
+0xf8ac5692	i2o_exec_lct_get	drivers/message/i2o/i2o_core	EXPORT_SYMBOL
+0x2c112836	dm_block_location	drivers/md/persistent-data/dm-persistent-data	EXPORT_SYMBOL_GPL
+0x6d1c2840	skb_cow_data	vmlinux	EXPORT_SYMBOL_GPL
+0xf5560743	pci_fixup_cardbus	vmlinux	EXPORT_SYMBOL
+0x04d8c750	release_perfctr_nmi	vmlinux	EXPORT_SYMBOL
+0x15c5f25a	snd_card_free_when_closed	sound/core/snd	EXPORT_SYMBOL
+0x1879fcbd	bridge_tunnel_header	net/wireless/cfg80211	EXPORT_SYMBOL
+0xc1b2b82e	z8530_sync_dma_close	drivers/net/wan/z85230	EXPORT_SYMBOL
+0x49b6035b	mtd_erase	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0xd4bddf5c	dm_bufio_issue_flush	drivers/md/dm-bufio	EXPORT_SYMBOL_GPL
+0x8cecd499	rdma_connect	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0x6a47b159	i2c_get_adapter	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0xe3553657	drm_edid_block_valid	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x868acba5	get_options	vmlinux	EXPORT_SYMBOL
+0x37b5498f	setup_irq	vmlinux	EXPORT_SYMBOL_GPL
+0x07a62642	xdr_partial_copy_from_skb	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xdfc561c5	hci_connect	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0xa12f13fa	input_unregister_handler	vmlinux	EXPORT_SYMBOL
+0xa4ec2924	agp_generic_alloc_by_type	vmlinux	EXPORT_SYMBOL
+0xb3c1c4a8	xenbus_map_ring	vmlinux	EXPORT_SYMBOL_GPL
+0xbbd5ec6e	acpi_get_pci_dev	vmlinux	EXPORT_SYMBOL_GPL
+0xbf3dae44	bh_uptodate_or_lock	vmlinux	EXPORT_SYMBOL
+0x2ec524ad	__kfifo_in_r	vmlinux	EXPORT_SYMBOL
+0x8754fda6	ieee80211_chswitch_done	net/mac80211/mac80211	EXPORT_SYMBOL
+0xf4979f27	fat_fill_super	fs/fat/fat	EXPORT_SYMBOL_GPL
+0x7fc8c368	spk_synth_flush	drivers/staging/speakup/speakup	EXPORT_SYMBOL_GPL
+0xe6a5a63f	rt2x00usb_disconnect	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0x1f29c715	usbnet_get_settings	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0xfd833be8	usbnet_set_settings	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0x068678d5	rc_register_device	drivers/media/rc/rc-core	EXPORT_SYMBOL_GPL
+0x51dce73b	xfrm_state_walk_init	vmlinux	EXPORT_SYMBOL
+0xeae1c304	rtc_read_alarm	vmlinux	EXPORT_SYMBOL_GPL
+0x3c9d1211	string_get_size	vmlinux	EXPORT_SYMBOL
+0x121b6692	security_path_mknod	vmlinux	EXPORT_SYMBOL
+0xcc494943	dquot_initialize	vmlinux	EXPORT_SYMBOL
+0xc1afa457	register_exec_domain	vmlinux	EXPORT_SYMBOL
+0x7b82378d	snd_pt2258_build_controls	sound/i2c/other/snd-pt2258	EXPORT_SYMBOL
+0x969588c4	cmp_connection_establish	sound/firewire/snd-firewire-lib	EXPORT_SYMBOL
+0x0dd7a929	snd_pci_quirk_lookup	sound/core/snd	EXPORT_SYMBOL
+0xaa2a629b	DOT11D_ScanComplete	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x54a9c2a5	fl6_sock_lookup	vmlinux	EXPORT_SYMBOL_GPL
+0x08b17ee7	fddi_change_mtu	vmlinux	EXPORT_SYMBOL
+0x5d2997d5	pci_bus_write_config_word	vmlinux	EXPORT_SYMBOL
+0x9c491f60	sg_alloc_table	vmlinux	EXPORT_SYMBOL
+0x8037c951	handle_simple_irq	vmlinux	EXPORT_SYMBOL_GPL
+0xda1be8e1	async_synchronize_cookie_domain	vmlinux	EXPORT_SYMBOL_GPL
+0x4bfbb164	call_usermodehelper_exec	vmlinux	EXPORT_SYMBOL
+0x1c2aa9fc	snd_ak4117_create	sound/i2c/other/snd-ak4117	EXPORT_SYMBOL
+0x302ac876	snd_ak4114_create	sound/i2c/other/snd-ak4114	EXPORT_SYMBOL
+0xf35c7ca3	snd_ak4113_create	sound/i2c/other/snd-ak4113	EXPORT_SYMBOL_GPL
+0x6c6ed3c2	snd_info_free_entry	sound/core/snd	EXPORT_SYMBOL
+0xd1c76a0e	ceph_open_session	net/ceph/libceph	EXPORT_SYMBOL
+0xd5e57b33	uwb_dev_try_get	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0x81c07a4d	transport_send_check_condition_and_sense	drivers/target/target_core_mod	EXPORT_SYMBOL
+0xeb3d7e0a	fc_set_mfs	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x95ef37c2	fc_disc_init	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x35e9af09	pcmcia_dev_present	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0xa4797939	ath9k_hw_reset_calvalid	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xefbcb801	tifm_register_driver	drivers/misc/tifm_core	EXPORT_SYMBOL
+0x59472eec	cb710_pci_update_config_reg	drivers/misc/cb710/cb710	EXPORT_SYMBOL_GPL
+0x76222253	sms_get_board	drivers/media/dvb/siano/smsmdtv	EXPORT_SYMBOL_GPL
+0x499421d2	drm_gem_prime_fd_to_handle	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xe7a664c4	nf_hooks	vmlinux	EXPORT_SYMBOL
+0x870744c4	pci_release_region	vmlinux	EXPORT_SYMBOL
+0xd7474566	__copy_to_user_ll	vmlinux	EXPORT_SYMBOL
+0xc10ffcf2	get_nth_bit	vmlinux	EXPORT_SYMBOL
+0xae0c87ee	pm_qos_remove_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0xe6dbcd88	snd_hda_codec_write_cache	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x25cbe310	ieee80211_connection_loss	net/mac80211/mac80211	EXPORT_SYMBOL
+0x59abc69f	ieee80211_get_tkip_p2k	net/mac80211/mac80211	EXPORT_SYMBOL
+0x74530ecd	fscache_op_debug_id	fs/fscache/fscache	EXPORT_SYMBOL
+0x39f4bec1	fc_elsct_init	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x7f8e7e72	power_supply_unregister	drivers/power/power_supply	EXPORT_SYMBOL_GPL
+0x2b1621a6	drm_release	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xe4f4665b	ipmi_validate_addr	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0xff1e9dd8	seq_list_start	vmlinux	EXPORT_SYMBOL
+0x037458bc	snd_pcm_set_ops	sound/core/snd-pcm	EXPORT_SYMBOL
+0x3f5b1415	nf_ct_port_nlattr_to_tuple	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x4f34d475	register_ip_vs_scheduler	net/netfilter/ipvs/ip_vs	EXPORT_SYMBOL
+0xa1eabd87	drm_mode_list_concat	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x123b7f12	drm_mm_get_block_generic	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x6e69acf8	kvm_resched	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xaeea3073	xfrm_aead_get_byname	vmlinux	EXPORT_SYMBOL_GPL
+0xec9992e5	km_state_notify	vmlinux	EXPORT_SYMBOL
+0xe23370c4	cpuidle_enable_device	vmlinux	EXPORT_SYMBOL_GPL
+0xb433521b	dma_run_dependencies	vmlinux	EXPORT_SYMBOL_GPL
+0x735b1cd6	btree_grim_visitor	vmlinux	EXPORT_SYMBOL_GPL
+0x7f658e80	_raw_write_lock	vmlinux	EXPORT_SYMBOL
+0x84be886f	completion_done	vmlinux	EXPORT_SYMBOL
+0x775a6ef5	kvm_read_and_reset_pf_reason	vmlinux	EXPORT_SYMBOL_GPL
+0xb30409d2	pnfs_set_layoutcommit	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0xfe656afe	osd_req_decode_get_attr_list	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0xfd2734db	rt2800_config	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0x4be15b25	mlx4_alloc_cmd_mailbox	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xd9d0c421	mptscsih_dev_reset	drivers/message/fusion/mptscsih	EXPORT_SYMBOL
+0x43b1ce38	mpt_detach	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0x71914cee	drm_connector_cleanup	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x357c90d2	qdisc_put_stab	vmlinux	EXPORT_SYMBOL
+0xb1cf44df	fb_find_best_mode	vmlinux	EXPORT_SYMBOL
+0x96c7e43b	seq_printf	vmlinux	EXPORT_SYMBOL
+0x10fd0f0c	follow_page	vmlinux	EXPORT_SYMBOL
+0x5eaa1e83	call_usermodehelper_setfns	vmlinux	EXPORT_SYMBOL
+0x86ff576c	ax25_linkfail_release	net/ax25/ax25	EXPORT_SYMBOL
+0x9ae4478f	mmc_free_host	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x20f79d65	mptscsih_raid_id_to_num	drivers/message/fusion/mptscsih	EXPORT_SYMBOL
+0x7d1a2758	drm_mode_validate_size	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x8f0b87fd	kvm_lapic_set_eoi	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xc44715da	kvm_get_apic_base	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x62450905	kvm_set_apic_base	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x60667393	pci_dev_driver	vmlinux	EXPORT_SYMBOL
+0x0b742fd7	simple_strtol	vmlinux	EXPORT_SYMBOL
+0xba8ea6ad	rwsem_downgrade_wake	vmlinux	EXPORT_SYMBOL
+0x82df671f	ilookup5_nowait	vmlinux	EXPORT_SYMBOL
+0x01848a8e	local_apic_timer_c2_ok	vmlinux	EXPORT_SYMBOL_GPL
+0x30844ac3	fcp_avc_transaction	sound/firewire/snd-firewire-lib	EXPORT_SYMBOL
+0x55f1dafd	fuse_dev_operations	fs/fuse/fuse	EXPORT_SYMBOL_GPL
+0x5fdf38b8	lbs_disablemesh	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0xd1d2cb68	unregister_hdlc_protocol	drivers/net/wan/hdlc	EXPORT_SYMBOL
+0x7b68c659	ib_send_cm_lap	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0x4dfb923b	drm_mm_init	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xac6855b0	gen_kill_estimator	vmlinux	EXPORT_SYMBOL
+0xef782b88	gnttab_grant_foreign_access_subpage	vmlinux	EXPORT_SYMBOL_GPL
+0xdc57f532	acpi_install_gpe_handler	vmlinux	EXPORT_SYMBOL
+0x1ac617d2	fbcon_set_tileops	vmlinux	EXPORT_SYMBOL
+0x97fdda68	pci_set_power_state	vmlinux	EXPORT_SYMBOL
+0xbabcd0a2	rdmsr_on_cpus	vmlinux	EXPORT_SYMBOL
+0x3eb044a9	blk_queue_alignment_offset	vmlinux	EXPORT_SYMBOL
+0xfbe16eca	dquot_alloc	vmlinux	EXPORT_SYMBOL
+0x993ab4ee	unlock_super	vmlinux	EXPORT_SYMBOL
+0x8cb8123e	snd_i2c_sendbytes	sound/i2c/snd-i2c	EXPORT_SYMBOL
+0x796fc5ce	scsi_get_sense_info_fld	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x6ebb14d8	fc_lport_logo_resp	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0xcf6048fd	dibusb_pid_filter_ctrl	drivers/media/dvb/dvb-usb/dvb-usb-dibusb-common	EXPORT_SYMBOL
+0x80bc367f	attach_capi_ctr	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x65c9438b	fw_csr_iterator_init	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0xb3e0590d	acpi_set_current_resources	vmlinux	EXPORT_SYMBOL
+0x7803594c	pci_bus_size_bridges	vmlinux	EXPORT_SYMBOL
+0xf17ea106	__bio_clone	vmlinux	EXPORT_SYMBOL
+0xe03fc928	vfs_stat	vmlinux	EXPORT_SYMBOL
+0xa0fbac79	wake_up_bit	vmlinux	EXPORT_SYMBOL
+0x4fec3469	snd_pcm_lib_malloc_pages	sound/core/snd-pcm	EXPORT_SYMBOL
+0x23940b83	nf_conntrack_flush_report	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x6503ef71	ieee80211_sta_eosp_irqsafe	net/mac80211/mac80211	EXPORT_SYMBOL
+0x48034724	zlib_deflateReset	lib/zlib_deflate/zlib_deflate	EXPORT_SYMBOL
+0x48a488a0	sysctl_tcp_cookie_size	vmlinux	EXPORT_SYMBOL_GPL
+0x942dcf30	__hvc_resize	vmlinux	EXPORT_SYMBOL_GPL
+0xcdca3691	nr_irqs	vmlinux	EXPORT_SYMBOL_GPL
+0x6e51ac2e	_raw_spin_trylock_bh	vmlinux	EXPORT_SYMBOL
+0x763e54a4	irlmp_unregister_client	net/irda/irda	EXPORT_SYMBOL
+0xa65ee42d	jbd2_journal_set_triggers	fs/jbd2/jbd2	EXPORT_SYMBOL
+0xa78bd894	iTCO_vendor_pre_set_heartbeat	drivers/watchdog/iTCO_vendor_support	EXPORT_SYMBOL
+0x56c8799d	scsi_kunmap_atomic_sg	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xc80feb99	scsi_block_when_processing_errors	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x333c260c	pcf50633_mbc_usb_curlim_set	drivers/power/pcf50633-charger	EXPORT_SYMBOL_GPL
+0x144e8ae6	ib_cancel_mad	drivers/infiniband/core/ib_mad	EXPORT_SYMBOL
+0xa75079d6	dcdbas_smi_request	drivers/firmware/dcdbas	EXPORT_SYMBOL
+0xde9b17ed	agp3_generic_fetch_size	vmlinux	EXPORT_SYMBOL
+0xe5b474c2	wait_for_key_construction	vmlinux	EXPORT_SYMBOL
+0x15fb804b	f_setown	vmlinux	EXPORT_SYMBOL
+0x17b7ad24	fcp_bus_reset	sound/firewire/snd-firewire-lib	EXPORT_SYMBOL
+0x05e807a9	xdr_encode_string	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x977a0030	p9_nr_pages	net/9p/9pnet	EXPORT_SYMBOL
+0x0551c379	usb_clear_halt	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x45ddf24d	fc_linkdown	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x7d4d492e	ath9k_hw_setuprxdesc	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x9f6c04c5	eip_start_xmit	drivers/net/ethernet/8390/8390p	EXPORT_SYMBOL
+0x42801d20	ubi_sync	drivers/mtd/ubi/ubi	EXPORT_SYMBOL_GPL
+0x1fb8065d	mmc_can_sanitize	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x04c542fb	dib7090_slave_reset	drivers/media/dvb/frontends/dib7000p	EXPORT_SYMBOL
+0x34d2354a	dvb_generic_release	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0x37259d5c	edac_device_free_ctl_info	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0xa2a3aa88	ip6_dst_hoplimit	vmlinux	EXPORT_SYMBOL
+0xeb24d38e	arp_invalidate	vmlinux	EXPORT_SYMBOL
+0xce4904a4	acpi_leave_sleep_state	vmlinux	EXPORT_SYMBOL
+0x03323c19	swiotlb_map_sg_attrs	vmlinux	EXPORT_SYMBOL
+0x6d27ef64	__bitmap_empty	vmlinux	EXPORT_SYMBOL
+0x1c2a6a98	elv_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x99055d9d	sched_autogroup_detach	vmlinux	EXPORT_SYMBOL
+0xf2d2f35f	snd_emu8000_peek_dw	sound/isa/sb/snd-sbawe	EXPORT_SYMBOL
+0x4cee7885	submit_bh	vmlinux	EXPORT_SYMBOL
+0x2163d25f	mnt_clone_write	vmlinux	EXPORT_SYMBOL_GPL
+0xcbb0db96	page_mkclean	vmlinux	EXPORT_SYMBOL_GPL
+0x405c1144	get_seconds	vmlinux	EXPORT_SYMBOL
+0x153a0c91	usb_anchor_empty	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x78763e45	ieee80211_wake_queue_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x35f9a65c	lbtf_cmd_copyback	drivers/net/wireless/libertas_tf/libertas_tf	EXPORT_SYMBOL_GPL
+0xd4a21864	hostap_set_word	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x2a235ec9	pi_do_claimed	drivers/block/paride/paride	EXPORT_SYMBOL
+0xcdee36d6	__tracepoint_kvm_nested_vmexit	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x59edb463	unregister_8022_client	vmlinux	EXPORT_SYMBOL
+0x3ea5196d	apei_osc_setup	vmlinux	EXPORT_SYMBOL_GPL
+0xeb9e9e82	sys_fillrect	vmlinux	EXPORT_SYMBOL
+0xf0f1246c	kvasprintf	vmlinux	EXPORT_SYMBOL
+0xa6dcc773	rb_insert_color	vmlinux	EXPORT_SYMBOL
+0xd919806a	amd_cache_northbridges	vmlinux	EXPORT_SYMBOL_GPL
+0x15aa75f8	svcauth_unix_set_client	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x56f2d661	hid_dump_field	drivers/hid/hid	EXPORT_SYMBOL_GPL
+0x1e1dcf19	drm_helper_probe_single_connector_modes	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0x097b303a	ata_sff_dma_pause	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x8b752ac1	ata_tf_to_fis	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xdfb5f1f0	__xfrm_init_state	vmlinux	EXPORT_SYMBOL
+0x66d87d38	symbol_put_addr	vmlinux	EXPORT_SYMBOL_GPL
+0x471e7687	__module_text_address	vmlinux	EXPORT_SYMBOL_GPL
+0x860cbb18	hrtimer_start_range_ns	vmlinux	EXPORT_SYMBOL_GPL
+0x657349c3	cpu_possible_mask	vmlinux	EXPORT_SYMBOL
+0x9f891588	snd_ctl_add_vmaster_hook	sound/core/snd	EXPORT_SYMBOL_GPL
+0x2b1d2e53	irttp_close_tsap	net/irda/irda	EXPORT_SYMBOL
+0x23a2eee7	hashbin_remove_this	net/irda/irda	EXPORT_SYMBOL
+0xbaa5f199	irlmp_close_lsap	net/irda/irda	EXPORT_SYMBOL
+0x23a1b0da	ib_create_qp	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x3e063910	i2c_smbus_read_word_data	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x404ad19a	tcf_hash_search	vmlinux	EXPORT_SYMBOL
+0x189b7b12	llc_set_station_handler	vmlinux	EXPORT_SYMBOL
+0x899505f6	tty_buffer_request_room	vmlinux	EXPORT_SYMBOL_GPL
+0x8be6af39	xenbus_switch_state	vmlinux	EXPORT_SYMBOL_GPL
+0xe59f2616	d_alloc	vmlinux	EXPORT_SYMBOL
+0x6e7f8593	unuse_mm	vmlinux	EXPORT_SYMBOL_GPL
+0x02fd27ea	__alloc_pages_nodemask	vmlinux	EXPORT_SYMBOL
+0xc04ce880	journal_extend	fs/jbd/jbd	EXPORT_SYMBOL
+0x785bdd41	fc_host_post_event	drivers/scsi/scsi_transport_fc	EXPORT_SYMBOL
+0xd7c48be2	b1_load_t4file	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0x73c092c3	elv_abort_queue	vmlinux	EXPORT_SYMBOL
+0x918ad429	ring_buffer_lock_reserve	vmlinux	EXPORT_SYMBOL_GPL
+0xa0fa1742	irq_set_affinity_hint	vmlinux	EXPORT_SYMBOL_GPL
+0xb42802ea	snd_emu8000_dma_chan	sound/isa/sb/snd-sbawe	EXPORT_SYMBOL
+0xa47f9fbd	wiphy_unregister	net/wireless/cfg80211	EXPORT_SYMBOL
+0xc4a621e4	fscache_object_lookup_negative	fs/fscache/fscache	EXPORT_SYMBOL
+0xc56de6f1	matroxfb_register_driver	drivers/video/matrox/matroxfb_base	EXPORT_SYMBOL
+0x23407bd3	cxgbi_get_conn_stats	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0xfcb5f25b	dvb_ca_en50221_camchange_irq	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0xeb6d14bc	drm_gem_object_handle_free	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xa841b0cc	dev_err	vmlinux	EXPORT_SYMBOL
+0x81e792f1	blk_execute_rq_nowait	vmlinux	EXPORT_SYMBOL_GPL
+0xb91043d7	blk_set_stacking_limits	vmlinux	EXPORT_SYMBOL
+0x0f3b41c1	security_inode_mkdir	vmlinux	EXPORT_SYMBOL_GPL
+0x9f534f4d	ceph_buffer_release	net/ceph/libceph	EXPORT_SYMBOL
+0x3c488098	Dot11d_Reset	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x34c269a1	ttm_suspend_unlock	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x5b9e3305	edac_pci_release_generic_ctl	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x8c8ee770	ipmi_destroy_user	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0xf939539c	ata_print_version	drivers/ata/libata	EXPORT_SYMBOL
+0x92d426c7	udp_proc_register	vmlinux	EXPORT_SYMBOL
+0xe90ace25	kernel_sendpage	vmlinux	EXPORT_SYMBOL
+0x18e2c347	dev_pm_qos_remove_global_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0x5e2100eb	pci_choose_state	vmlinux	EXPORT_SYMBOL
+0x7b286802	delete_from_page_cache	vmlinux	EXPORT_SYMBOL
+0x03b580eb	wait_for_completion_killable	vmlinux	EXPORT_SYMBOL
+0xa51cdfe8	__FIXADDR_TOP	vmlinux	EXPORT_SYMBOL
+0x444b8f31	cfg80211_send_assoc_timeout	net/wireless/cfg80211	EXPORT_SYMBOL
+0xe7a2620e	save_vga	drivers/video/vgastate	EXPORT_SYMBOL
+0x5043fadd	__wa_destroy	drivers/usb/wusbcore/wusb-wa	EXPORT_SYMBOL_GPL
+0x44b63837	iscsi_complete_scsi_task	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0xbb69f54c	pcf50633_reg_read	drivers/mfd/pcf50633	EXPORT_SYMBOL_GPL
+0xcf8b77a4	cx2341x_mpeg_ctrls	drivers/media/video/cx2341x	EXPORT_SYMBOL
+0x41613acb	ttpci_budget_init_hooks	drivers/media/dvb/ttpci/budget-core	EXPORT_SYMBOL_GPL
+0x39b1e200	uart_insert_char	vmlinux	EXPORT_SYMBOL_GPL
+0x7da99cdd	clear_user	vmlinux	EXPORT_SYMBOL
+0x50c89f23	__alloc_percpu	vmlinux	EXPORT_SYMBOL_GPL
+0xd94096de	kfree_call_rcu	vmlinux	EXPORT_SYMBOL_GPL
+0x7083dbd5	ocfs2_dlm_dump_lksb	fs/ocfs2/ocfs2_stackglue	EXPORT_SYMBOL_GPL
+0xc8ea371e	ore_write	fs/exofs/libore	EXPORT_SYMBOL
+0xebe35bad	ieee80211_ps_tx_ack_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x97c1506a	scsi_cmd_get_serial	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x5c296c58	memstick_next_req	drivers/memstick/core/memstick	EXPORT_SYMBOL
+0x16000a3c	dm_device_name	drivers/md/dm-mod	EXPORT_SYMBOL_GPL
+0x54451388	mISDN_FsmRestartTimer	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0x9f823278	register_capi_driver	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0xdb0da986	rdma_leave_multicast	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0x65336967	drm_helper_hpd_irq_event	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0x69c08205	tpm_get_timeouts	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x621000b5	ata_eh_qc_retry	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xdf240b10	fib_lookup	vmlinux	EXPORT_SYMBOL_GPL
+0x074c3df9	led_trigger_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x40c1e0fe	xen_swiotlb_alloc_coherent	vmlinux	EXPORT_SYMBOL_GPL
+0xce468b4a	svc_close_xprt	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x74daee66	ceph_calc_pg_primary	net/ceph/libceph	EXPORT_SYMBOL
+0x38312907	usb_hcd_link_urb_to_ep	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x9ddd5672	__mlx4_cmd	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x0b94800b	mmc_card_awake	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x1c5aa664	smscore_onresponse	drivers/media/dvb/siano/smsmdtv	EXPORT_SYMBOL_GPL
+0xecb99b7c	free_dca_provider	drivers/dca/dca	EXPORT_SYMBOL_GPL
+0x07509fbf	neigh_parms_release	vmlinux	EXPORT_SYMBOL
+0x5099e020	dmam_release_declared_memory	vmlinux	EXPORT_SYMBOL
+0xb61922a5	device_release_driver	vmlinux	EXPORT_SYMBOL_GPL
+0x12ddbdb9	swiotlb_alloc_coherent	vmlinux	EXPORT_SYMBOL
+0x572e85d4	blk_lookup_devt	vmlinux	EXPORT_SYMBOL
+0x1b565a2c	crypto_grab_skcipher	vmlinux	EXPORT_SYMBOL_GPL
+0x3c9d2219	security_path_rename	vmlinux	EXPORT_SYMBOL
+0xe953b21f	get_next_ino	vmlinux	EXPORT_SYMBOL
+0xaba72580	snd_trident_start_voice	sound/pci/trident/snd-trident	EXPORT_SYMBOL
+0x80dc9b5f	snd_sbdsp_reset	sound/isa/sb/snd-sb-common	EXPORT_SYMBOL
+0x12abd609	snd_msnd_DAPQ	sound/isa/msnd/snd-msnd-lib	EXPORT_SYMBOL
+0xce3ca308	copy_from_user_toio	sound/core/snd	EXPORT_SYMBOL
+0x8572271d	usb_stor_bulk_srb	drivers/usb/storage/usb-storage	EXPORT_SYMBOL_GPL
+0xbadecd31	usb_serial_handle_dcd_change	drivers/usb/serial/usbserial	EXPORT_SYMBOL_GPL
+0x3e8c3e18	usb_alloc_streams	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xd3cf145c	scsi_register_interface	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xdedd3445	iscsi_suspend_queue	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0xc66c5913	cxgbi_sock_select_mss	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0xb168e948	dib7000p_pid_filter_ctrl	drivers/media/dvb/frontends/dib7000p	EXPORT_SYMBOL
+0xb7308c6d	dib7000m_pid_filter_ctrl	drivers/media/dvb/frontends/dib7000m	EXPORT_SYMBOL
+0x98d1171b	dm_kcopyd_copy	drivers/md/dm-mod	EXPORT_SYMBOL
+0x0c7787b8	kvm_inject_realmode_interrupt	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x48c3c99c	vfs_setlease	vmlinux	EXPORT_SYMBOL_GPL
+0x40d04664	console_trylock	vmlinux	EXPORT_SYMBOL
+0x50e1aeb6	oxygen_read_ac97	sound/pci/oxygen/snd-oxygen-lib	EXPORT_SYMBOL
+0x410fa655	usb_put_intf	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x726872ef	pps_event	drivers/pps/pps_core	EXPORT_SYMBOL
+0x5133adec	mlx4_fmr_unmap	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xa2ce5b2f	v4l2_ctrl_add_handler	drivers/media/video/videodev	EXPORT_SYMBOL
+0x85ec9516	i2c_smbus_read_block_data	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x43d13f7b	ata_sff_queue_pio_task	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x94c23948	blk_queue_dma_pad	vmlinux	EXPORT_SYMBOL
+0xb1d9523e	wait_for_completion_timeout	vmlinux	EXPORT_SYMBOL
+0x0521b2ee	set_current_groups	vmlinux	EXPORT_SYMBOL
+0xb9c01f77	snd_hda_codec_cleanup	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xa1af7740	snd_hda_check_board_config	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x88b7d5f6	snd_cs8427_iec958_build	sound/i2c/snd-cs8427	EXPORT_SYMBOL
+0x762d5c93	pnfs_generic_pg_test	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0x0f8cdb74	usb_stor_probe1	drivers/usb/storage/usb-storage	EXPORT_SYMBOL_GPL
+0x91500327	usb_stor_probe2	drivers/usb/storage/usb-storage	EXPORT_SYMBOL_GPL
+0x3baf468f	core_tpg_register	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x5e425205	rt2800_write_tx_data	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0x0b913caa	ar9003_hw_bb_watchdog_dbg_info	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xf7f08678	mlx4_cq_alloc	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xa9428d58	tda8083_attach	drivers/media/dvb/frontends/tda8083	EXPORT_SYMBOL
+0xbcbe9d80	drm_get_platform_dev	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x03a156f3	acpi_processor_unregister_performance	drivers/acpi/processor	EXPORT_SYMBOL
+0x88873763	dcb_ieee_getapp_mask	vmlinux	EXPORT_SYMBOL
+0xa2585ba6	xfrm6_input_addr	vmlinux	EXPORT_SYMBOL
+0x706195a6	update_region	vmlinux	EXPORT_SYMBOL
+0x81db6ebb	xz_dec_reset	vmlinux	EXPORT_SYMBOL
+0x661601de	sprint_symbol	vmlinux	EXPORT_SYMBOL_GPL
+0xc49ca7a9	hci_get_route	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0xed0f4223	mmc_card_can_sleep	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x3612e494	tifm_remove_adapter	drivers/misc/tifm_core	EXPORT_SYMBOL
+0x26112606	rc_g_keycode_from_table	drivers/media/rc/rc-core	EXPORT_SYMBOL_GPL
+0x6694612d	capi20_release	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x0ebdde86	blowfish_setkey	crypto/blowfish_common	EXPORT_SYMBOL_GPL
+0x553ddd11	tcf_em_unregister	vmlinux	EXPORT_SYMBOL
+0xeb80e0c5	scm_fp_dup	vmlinux	EXPORT_SYMBOL
+0x2280b982	devres_remove	vmlinux	EXPORT_SYMBOL_GPL
+0x7d3caded	tty_vhangup	vmlinux	EXPORT_SYMBOL
+0x2ce98559	kcrypto_wq	vmlinux	EXPORT_SYMBOL_GPL
+0xdfcc9c43	shrink_dcache_parent	vmlinux	EXPORT_SYMBOL
+0x1ad83009	trace_seq_vprintf	vmlinux	EXPORT_SYMBOL_GPL
+0x26350adf	preempt_notifier_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x24f4a98e	ac97_bus_type	sound/ac97_bus	EXPORT_SYMBOL
+0x7131f7e2	fc_lport_iterate	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0xa2ab7459	_rtl92c_phy_init_bb_rf_register_definition	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0x6d49ef21	rt2x00usb_regbusy_read	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0xb77b0159	v4l2_prio_init	drivers/media/video/videodev	EXPORT_SYMBOL
+0x859fbbde	ib_close_qp	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x2a3c97eb	suni_init	drivers/atm/suni	EXPORT_SYMBOL
+0x75c8a11c	inet_twdr_twkill_work	vmlinux	EXPORT_SYMBOL_GPL
+0x609f1c7e	synchronize_net	vmlinux	EXPORT_SYMBOL
+0x4f1ccf7d	dev_pm_qos_add_global_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0x2011c092	bus_for_each_dev	vmlinux	EXPORT_SYMBOL_GPL
+0x4c100270	bus_for_each_drv	vmlinux	EXPORT_SYMBOL_GPL
+0xb5a0de75	bsg_job_done	vmlinux	EXPORT_SYMBOL_GPL
+0x42825ce2	rcu_scheduler_active	vmlinux	EXPORT_SYMBOL_GPL
+0xe523ad75	synchronize_irq	vmlinux	EXPORT_SYMBOL
+0xa64a4cea	usb_nop_xceiv_unregister	drivers/usb/otg/nop-usb-xceiv	EXPORT_SYMBOL
+0x1e5a6017	parport_negotiate	drivers/parport/parport	EXPORT_SYMBOL
+0x9114a075	onenand_addr	drivers/mtd/onenand/onenand	EXPORT_SYMBOL
+0x74dcd98c	dm_bufio_get_aux_data	drivers/md/dm-bufio	EXPORT_SYMBOL_GPL
+0x72ddc817	pneigh_lookup	vmlinux	EXPORT_SYMBOL
+0x9e7d6bd0	__udelay	vmlinux	EXPORT_SYMBOL
+0xdf8c695a	__ndelay	vmlinux	EXPORT_SYMBOL
+0x7022d84a	kern_path_create	vmlinux	EXPORT_SYMBOL
+0x32eeaded	_raw_write_lock_bh	vmlinux	EXPORT_SYMBOL
+0x17d3e930	snd_timer_close	sound/core/snd-timer	EXPORT_SYMBOL
+0xf9a3dd17	xdr_terminate_string	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x994970f6	rpc_net_ns	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x9a64ceec	transport_generic_allocate_tasks	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x8baae377	comedi_open	drivers/staging/comedi/kcomedilib/kcomedilib	EXPORT_SYMBOL
+0x77a27261	il_rx_queue_alloc	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xebf461e8	drm_mode_create_scaling_mode_property	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x43384bd9	drm_buffer_alloc	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x5ddb33e9	__serpent_encrypt	crypto/serpent_generic	EXPORT_SYMBOL_GPL
+0x00aaf935	kvm_disable_tdp	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x65a295bb	atomic64_xchg_cx8	vmlinux	EXPORT_SYMBOL
+0x37905751	blk_queue_find_tag	vmlinux	EXPORT_SYMBOL
+0x1e3a88fb	trace_seq_printf	vmlinux	EXPORT_SYMBOL_GPL
+0x4bc62a81	audit_enabled	vmlinux	EXPORT_SYMBOL_GPL
+0xd8a2ab95	in_egroup_p	vmlinux	EXPORT_SYMBOL
+0xe6ac1afb	comedi_close	drivers/staging/comedi/kcomedilib/kcomedilib	EXPORT_SYMBOL
+0x7f9fef78	mISDNisar_init	drivers/isdn/hardware/mISDN/mISDNisar	EXPORT_SYMBOL
+0x7bb645f6	mISDNisac_init	drivers/isdn/hardware/mISDN/mISDNipac	EXPORT_SYMBOL
+0x47847336	edac_mc_handle_ue_no_info	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x713c304f	af_alg_release	crypto/af_alg	EXPORT_SYMBOL_GPL
+0x8ce4f3ab	kvm_enable_tdp	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x409873e3	tty_termios_baud_rate	vmlinux	EXPORT_SYMBOL
+0x07a890c8	fb_alloc_cmap	vmlinux	EXPORT_SYMBOL
+0x184e6c85	radix_tree_gang_lookup_slot	vmlinux	EXPORT_SYMBOL
+0xb7b94dc2	nf_conntrack_broadcast_help	net/netfilter/nf_conntrack_broadcast	EXPORT_SYMBOL_GPL
+0x13ee91ce	dccp_check_req	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x3a443d59	i2400m_init	drivers/net/wimax/i2400m/i2400m	EXPORT_SYMBOL_GPL
+0xb3ed00e3	dib0090_get_wbd_target	drivers/media/dvb/frontends/dib0090	EXPORT_SYMBOL
+0x7f7a5102	skb_append_datato_frags	vmlinux	EXPORT_SYMBOL
+0x08c0926f	release_firmware	vmlinux	EXPORT_SYMBOL
+0x8c183cbe	iowrite16	vmlinux	EXPORT_SYMBOL
+0x436c2179	iowrite32	vmlinux	EXPORT_SYMBOL
+0xb0aa812e	fips_enabled	vmlinux	EXPORT_SYMBOL_GPL
+0x9e0c711d	vzalloc_node	vmlinux	EXPORT_SYMBOL
+0x37befc70	jiffies_to_msecs	vmlinux	EXPORT_SYMBOL
+0x7f24de73	jiffies_to_usecs	vmlinux	EXPORT_SYMBOL
+0xb6896671	crc_t10dif	lib/crc-t10dif	EXPORT_SYMBOL
+0xf1098a3b	pcmcia_socket_class	drivers/pcmcia/pcmcia_core	EXPORT_SYMBOL
+0xeccc9f7d	drm_detect_hdmi_monitor	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x0c8fe79f	tcp_child_process	vmlinux	EXPORT_SYMBOL
+0xaefc9309	__pm_runtime_suspend	vmlinux	EXPORT_SYMBOL_GPL
+0xa250c838	param_get_charp	vmlinux	EXPORT_SYMBOL
+0xb2a3c7f1	uwb_rc_get_by_dev	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0x7ed94d1d	rt2800_config_filter	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0x3dac5d6c	mdiobus_write	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x3fce152c	cxgb4_ofld_send	drivers/net/ethernet/chelsio/cxgb4/cxgb4	EXPORT_SYMBOL
+0xf247770f	cxgb3_ofld_send	drivers/net/ethernet/chelsio/cxgb3/cxgb3	EXPORT_SYMBOL
+0x80c5b7ef	mtd_unpoint	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0x122797e5	lgs8gxx_attach	drivers/media/dvb/frontends/lgs8gxx	EXPORT_SYMBOL
+0x93f8fe67	cs5535_gpio_set_irq	drivers/gpio/gpio-cs5535	EXPORT_SYMBOL_GPL
+0xcb44a594	bsg_unregister_queue	vmlinux	EXPORT_SYMBOL_GPL
+0xcc986865	dquot_claim_space_nodirty	vmlinux	EXPORT_SYMBOL
+0x8a42b1e1	prepare_binprm	vmlinux	EXPORT_SYMBOL
+0x42c989ff	iomap_atomic_prot_pfn	vmlinux	EXPORT_SYMBOL_GPL
+0x648c7478	hashbin_get_first	net/irda/irda	EXPORT_SYMBOL
+0x02e704bb	atm_dev_deregister	net/atm/atm	EXPORT_SYMBOL
+0xfa5bfc85	ahci_port_resume	drivers/ata/libahci	EXPORT_SYMBOL_GPL
+0x2e1ec57d	kvm_fast_pio_out	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xd30632e6	tcp_v4_destroy_sock	vmlinux	EXPORT_SYMBOL
+0xb0da6ab7	acpi_debugfs_dir	vmlinux	EXPORT_SYMBOL_GPL
+0x6d6cbadc	rb_last	vmlinux	EXPORT_SYMBOL
+0x7ab3ca18	eventfd_ctx_read	vmlinux	EXPORT_SYMBOL_GPL
+0x91a9363c	mount_bdev	vmlinux	EXPORT_SYMBOL
+0xe6fbe430	can_do_mlock	vmlinux	EXPORT_SYMBOL
+0x60a13e90	rcu_barrier	vmlinux	EXPORT_SYMBOL_GPL
+0xdf60cc27	__print_symbol	vmlinux	EXPORT_SYMBOL
+0x2c7fb4ba	snd_hda_attach_beep_device	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x56640cf0	snd_hda_detach_beep_device	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xb05330b7	nf_ct_helper_expectfn_find_by_symbol	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xf052e6db	v4l2_ctrl_query_menu	drivers/media/video/v4l2-common	EXPORT_SYMBOL
+0x859c9c2b	b1_load_firmware	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0xb506f044	ttm_dma_unpopulate	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL_GPL
+0xb9a141b0	acpi_smbus_read	drivers/acpi/sbshc	EXPORT_SYMBOL_GPL
+0xb3a6aae1	ndisc_mc_map	vmlinux	EXPORT_SYMBOL
+0xfb80c7a0	acpi_walk_namespace	vmlinux	EXPORT_SYMBOL
+0x56030412	pci_enable_msi_block	vmlinux	EXPORT_SYMBOL
+0x91715312	sprintf	vmlinux	EXPORT_SYMBOL
+0x93c9f7a0	simple_unlink	vmlinux	EXPORT_SYMBOL
+0x228de629	simple_attr_write	vmlinux	EXPORT_SYMBOL_GPL
+0xc64d23fd	generic_listxattr	vmlinux	EXPORT_SYMBOL
+0x3ee3707f	wimax_state_change	net/wimax/wimax	EXPORT_SYMBOL_GPL
+0x5379cea3	ceph_caps_for_mode	net/ceph/libceph	EXPORT_SYMBOL
+0xa678c243	uwb_rc_pre_reset	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0xb0f570f9	sas_eh_bus_reset_handler	drivers/scsi/libsas/libsas	EXPORT_SYMBOL_GPL
+0x8798f302	rtl_cam_add_one_entry	drivers/net/wireless/rtlwifi/rtlwifi	EXPORT_SYMBOL
+0xb7bd33ff	il_isr	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x1447be30	mptscsih_io_done	drivers/message/fusion/mptscsih	EXPORT_SYMBOL
+0x9b35e30b	media_device_register_entity	drivers/media/media	EXPORT_SYMBOL_GPL
+0xc0bf4edc	rdma_addr_register_client	drivers/infiniband/core/ib_addr	EXPORT_SYMBOL
+0xfa763dc9	ttm_mem_global_free	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0xf6ebc03b	net_ratelimit	vmlinux	EXPORT_SYMBOL
+0x6dde957a	dev_addr_init	vmlinux	EXPORT_SYMBOL
+0x1ebf6c2a	pci_power_names	vmlinux	EXPORT_SYMBOL_GPL
+0x439bc11b	pci_set_ltr	vmlinux	EXPORT_SYMBOL
+0x741a6e22	gen_pool_alloc	vmlinux	EXPORT_SYMBOL
+0xf6f9d714	shash_ahash_update	vmlinux	EXPORT_SYMBOL_GPL
+0x1ef1f75f	posix_acl_valid	vmlinux	EXPORT_SYMBOL
+0x729006a5	invalidate_inode_buffers	vmlinux	EXPORT_SYMBOL
+0x11f1472d	cgroup_add_files	vmlinux	EXPORT_SYMBOL_GPL
+0xd411d643	journal_dirty_data	fs/jbd/jbd	EXPORT_SYMBOL
+0x79ab16e3	matroxfb_enable_irq	drivers/video/matrox/matroxfb_base	EXPORT_SYMBOL
+0xe2063578	usb_autopm_get_interface_async	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x7ee85c3c	scsi_register	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x4bdfc765	raid_class_release	drivers/scsi/raid_class	EXPORT_SYMBOL
+0xa6279614	cxgbi_parse_pdu_itt	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0x9b63362f	gfn_to_page_many_atomic	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xc13ae0ba	unix_socket_table	vmlinux	EXPORT_SYMBOL_GPL
+0xaa852c93	regulator_register_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0x423bc712	crypto_shash_update	vmlinux	EXPORT_SYMBOL_GPL
+0xa78dec32	find_vma	vmlinux	EXPORT_SYMBOL
+0x08d2c711	svc_print_addr	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x24db544b	nf_ct_extend_unregister	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x5ba93f9d	raid6_gfinv	lib/raid6/raid6_pq	EXPORT_SYMBOL
+0xe76b3b20	qlogicfas408_get_chip_type	drivers/scsi/qlogicfas408	EXPORT_SYMBOL
+0xb9217d95	sas_request_addr	drivers/scsi/libsas/libsas	EXPORT_SYMBOL_GPL
+0xeb595c10	hdlcdrv_transmitter	drivers/net/hamradio/hdlcdrv	EXPORT_SYMBOL
+0xc12e6074	mlx4_multicast_promisc_add	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xd1db0a3a	can_get_echo_skb	drivers/net/can/can-dev	EXPORT_SYMBOL_GPL
+0x3786761e	kernel_connect	vmlinux	EXPORT_SYMBOL
+0x8c38074a	unregister_xenstore_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0x5779d445	xenbus_exists	vmlinux	EXPORT_SYMBOL_GPL
+0xfd7d7713	acpi_exception	vmlinux	EXPORT_SYMBOL
+0x7405237a	dquot_destroy	vmlinux	EXPORT_SYMBOL
+0x5f41c474	dma_ops	vmlinux	EXPORT_SYMBOL
+0xbc25df5a	snd_gf1_i_look8	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0x1772a42d	virtqueue_notify	drivers/virtio/virtio_ring	EXPORT_SYMBOL_GPL
+0xa89e638e	subdev_700_init_irq	drivers/staging/comedi/drivers/ni_daq_700	EXPORT_SYMBOL
+0xce958de3	comedi_buf_read_n_available	drivers/staging/comedi/comedi	EXPORT_SYMBOL
+0x7ae9fbf4	fcoe_ctlr_recv_flogi	drivers/scsi/fcoe/libfcoe	EXPORT_SYMBOL
+0x514d21e0	nxt200x_attach	drivers/media/dvb/frontends/nxt200x	EXPORT_SYMBOL
+0xb7fba42c	fw_run_transaction	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0x4848983f	inet_stream_connect	vmlinux	EXPORT_SYMBOL
+0x1136011d	dma_buf_end_cpu_access	vmlinux	EXPORT_SYMBOL_GPL
+0xa05c03df	mempool_kmalloc	vmlinux	EXPORT_SYMBOL
+0x93448c57	screen_info	vmlinux	EXPORT_SYMBOL
+0x54631800	rpc_mkpipe_dentry	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x0ebe0397	ath9k_hw_ani_monitor	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xb7ee9540	gigaset_initdriver	drivers/isdn/gigaset/gigaset	EXPORT_SYMBOL_GPL
+0xbd6684a7	ata_eh_qc_complete	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x98e3f70c	ahci_stop_engine	drivers/ata/libahci	EXPORT_SYMBOL_GPL
+0x5c1d1079	qdisc_warn_nonwc	vmlinux	EXPORT_SYMBOL
+0x4788f154	pci_release_regions	vmlinux	EXPORT_SYMBOL
+0x99f2ab44	splice_from_pipe_begin	vmlinux	EXPORT_SYMBOL
+0xfd6293c2	boot_tvec_bases	vmlinux	EXPORT_SYMBOL
+0x25396c19	snd_util_mem_free	sound/synth/snd-util-mem	EXPORT_SYMBOL
+0x9a687ada	nlmclnt_done	fs/lockd/lockd	EXPORT_SYMBOL_GPL
+0xa79cae7b	rtl_usb_resume	drivers/net/wireless/rtlwifi/rtlwifi	EXPORT_SYMBOL
+0x0e1dcd6d	rt2800_load_firmware	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0x3fa2e7ca	tms380tr_close	drivers/net/tokenring/tms380tr	EXPORT_SYMBOL
+0xa1cc7b26	mpt_device_driver_register	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0xb7fd7645	v4l2_queryctrl	drivers/media/video/videodev	EXPORT_SYMBOL
+0x97efd9e4	videobuf_reqbufs	drivers/media/video/videobuf-core	EXPORT_SYMBOL_GPL
+0x2492bb80	drm_prime_lookup_imported_buf_handle	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x770cf981	tpm_send	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0xca757493	netdev_class_remove_file	vmlinux	EXPORT_SYMBOL
+0xdf48a0eb	flex_array_put	vmlinux	EXPORT_SYMBOL
+0xb13cf2c6	blk_queue_physical_block_size	vmlinux	EXPORT_SYMBOL
+0x2bc34508	dio_end_io	vmlinux	EXPORT_SYMBOL_GPL
+0xac922b7c	relay_subbufs_consumed	vmlinux	EXPORT_SYMBOL_GPL
+0xc0bf6ead	timecounter_cyc2time	vmlinux	EXPORT_SYMBOL_GPL
+0x741701a3	ieee80211_wake_queue	net/mac80211/mac80211	EXPORT_SYMBOL
+0xe8316c99	dccp_feat_signal_nn_change	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xca14053d	journal_ack_err	fs/jbd/jbd	EXPORT_SYMBOL
+0xafb4d49e	w1_ds2760_store_eeprom	drivers/w1/slaves/w1_ds2760	EXPORT_SYMBOL
+0x46868bf8	v4l2_ctrl_handler_log_status	drivers/media/video/videodev	EXPORT_SYMBOL
+0x506691f1	sock_diag_check_cookie	vmlinux	EXPORT_SYMBOL_GPL
+0xb7f77027	rtc_tm_to_ktime	vmlinux	EXPORT_SYMBOL_GPL
+0x051ded66	ht_create_irq	vmlinux	EXPORT_SYMBOL
+0x307c2fd0	generic_check_addressable	vmlinux	EXPORT_SYMBOL
+0x2df9e0fd	perf_event_read_value	vmlinux	EXPORT_SYMBOL_GPL
+0x04482cdb	__refrigerator	vmlinux	EXPORT_SYMBOL
+0x7cb1ae69	cpu_down	vmlinux	EXPORT_SYMBOL
+0xa8f654ef	snd_hda_create_spdif_share_sw	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x02acaa04	libipw_wx_get_scan	drivers/net/wireless/ipw2x00/libipw	EXPORT_SYMBOL
+0x46502e41	ath_gen_timer_alloc	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x56867ec1	gspca_suspend	drivers/media/video/gspca/gspca_main	EXPORT_SYMBOL
+0xad82cf25	drm_mode_parse_command_line_for_connector	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x12c6276a	drm_buffer_read_object	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xbf05e9a7	ata_link_printk	drivers/ata/libata	EXPORT_SYMBOL
+0x700212ec	inet6_csk_addr2sockaddr	vmlinux	EXPORT_SYMBOL_GPL
+0x05397426	netdev_refcnt_read	vmlinux	EXPORT_SYMBOL
+0x1878f62b	edac_err_assert	vmlinux	EXPORT_SYMBOL_GPL
+0x481f71c9	input_mt_init_slots	vmlinux	EXPORT_SYMBOL
+0x23a3cf44	__pm_wakeup_event	vmlinux	EXPORT_SYMBOL_GPL
+0x02e45521	devres_close_group	vmlinux	EXPORT_SYMBOL_GPL
+0x67a283ba	__blk_end_request	vmlinux	EXPORT_SYMBOL
+0x7ae58351	xt_unregister_targets	net/netfilter/x_tables	EXPORT_SYMBOL
+0x5ed2774f	nfs_initiate_commit	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0xc448da4e	scsi_prep_fn	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x921f8af4	cxgb4_l2t_send	drivers/net/ethernet/chelsio/cxgb4/cxgb4	EXPORT_SYMBOL
+0x49b9aa5f	register_candev	drivers/net/can/can-dev	EXPORT_SYMBOL_GPL
+0x50e5868e	arcnet_send_packet	drivers/net/arcnet/arcnet	EXPORT_SYMBOL
+0xb6c2a8eb	sm_register_device	drivers/mtd/nand/sm_common	EXPORT_SYMBOL_GPL
+0xfd96d65f	drm_connector_property_set_value	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x69962134	drm_connector_property_get_value	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x2672c74d	ahci_set_em_messages	drivers/ata/libahci	EXPORT_SYMBOL_GPL
+0xb86bcceb	klist_next	vmlinux	EXPORT_SYMBOL_GPL
+0xf14b9247	tcp_rcv_established	vmlinux	EXPORT_SYMBOL
+0x52d7ab60	inet_getpeer	vmlinux	EXPORT_SYMBOL_GPL
+0xce28e687	spi_alloc_master	vmlinux	EXPORT_SYMBOL_GPL
+0x7b90d1a9	bind_virq_to_irqhandler	vmlinux	EXPORT_SYMBOL_GPL
+0x2c1e559d	acpi_ec_remove_query_handler	vmlinux	EXPORT_SYMBOL_GPL
+0x20000329	simple_strtoul	vmlinux	EXPORT_SYMBOL
+0xd7e56a4e	simple_strtoll	vmlinux	EXPORT_SYMBOL
+0xabbe1119	ieee80211_napi_complete	net/mac80211/mac80211	EXPORT_SYMBOL
+0xd60f2c6c	o2hb_check_local_node_heartbeating	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0xb839d621	uwb_rsv_terminate	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0xfc3eefb9	mraid_mm_register_adp	drivers/scsi/megaraid/megaraid_mm	EXPORT_SYMBOL
+0x7d54ee58	tda826x_attach	drivers/media/dvb/frontends/tda826x	EXPORT_SYMBOL
+0x09ce8295	ib_send_cm_dreq	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0xdcca53e4	ib_send_cm_drep	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0x97351c8f	drm_addmap	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x8aa04108	nf_register_afinfo	vmlinux	EXPORT_SYMBOL_GPL
+0x264a09e1	net_ns_type_operations	vmlinux	EXPORT_SYMBOL_GPL
+0x73458640	proc_symlink	vmlinux	EXPORT_SYMBOL
+0xa37cc02e	dump_trace	vmlinux	EXPORT_SYMBOL
+0xab5bb8d0	snd_hda_mixer_amp_switch_put_beep	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x2ffc0b56	ceph_copy_user_to_page_vector	net/ceph/libceph	EXPORT_SYMBOL
+0xbe6d2db1	usb_hcd_pci_pm_ops	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xea2f3148	osd_dev_fini	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0x2a0a6bc7	parport_ieee1284_ecp_write_data	drivers/parport/parport	EXPORT_SYMBOL
+0x290c72a7	parport_ieee1284_epp_write_data	drivers/parport/parport	EXPORT_SYMBOL
+0x89e7c560	ad_dpot_remove	drivers/misc/ad525x_dpot	EXPORT_SYMBOL
+0xa67d5b0e	videobuf_qbuf	drivers/media/video/videobuf-core	EXPORT_SYMBOL_GPL
+0xc2882ab4	__rtnl_link_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0xc003e93c	blk_integrity_compare	vmlinux	EXPORT_SYMBOL
+0x7d598edd	blk_queue_dma_alignment	vmlinux	EXPORT_SYMBOL
+0x944b2770	security_path_unlink	vmlinux	EXPORT_SYMBOL
+0x8dc8957a	remap_vmalloc_range	vmlinux	EXPORT_SYMBOL
+0x65395abb	noop_backing_dev_info	vmlinux	EXPORT_SYMBOL_GPL
+0xd985dc99	mempool_free_pages	vmlinux	EXPORT_SYMBOL
+0xfcec0987	enable_irq	vmlinux	EXPORT_SYMBOL
+0x1e7bbcb3	kernel_restart	vmlinux	EXPORT_SYMBOL_GPL
+0x5f05119d	iscsi_set_param	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0xac5f5e16	pcmcia_register_socket	drivers/pcmcia/pcmcia_core	EXPORT_SYMBOL
+0x95908b8b	b1_getrevision	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0x222ba790	ib_modify_mad	drivers/infiniband/core/ib_mad	EXPORT_SYMBOL
+0xee702d47	ib_query_device	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xf2906d7b	vmbus_teardown_gpadl	drivers/hv/hv_vmbus	EXPORT_SYMBOL_GPL
+0x6fe4a752	ata_port_printk	drivers/ata/libata	EXPORT_SYMBOL
+0xc42842ee	agp_unbind_memory	vmlinux	EXPORT_SYMBOL
+0xce9dc208	snd_vx_free_firmware	sound/drivers/vx/snd-vx-lib	EXPORT_SYMBOL
+0x9b848e85	__ieee80211_get_rx_led_name	net/mac80211/mac80211	EXPORT_SYMBOL
+0xcbf620f3	raid_class_attach	drivers/scsi/raid_class	EXPORT_SYMBOL
+0x7425edf5	fc_rport_terminate_io	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x6954c2e9	orinoco_up	drivers/net/wireless/orinoco/orinoco	EXPORT_SYMBOL
+0xc0da05b3	i2o_dma_free	drivers/message/i2o/i2o_core	EXPORT_SYMBOL_GPL
+0x90bc755e	i2o_event_register	drivers/message/i2o/i2o_core	EXPORT_SYMBOL
+0x643b157b	md_ack_all_badblocks	drivers/md/md-mod	EXPORT_SYMBOL_GPL
+0x79093959	drm_mode_create	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x4ffcc8ad	fw_core_add_address_handler	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0x4ca3ff1e	dev_alloc_skb	vmlinux	EXPORT_SYMBOL
+0xc3fa6a59	memchr	vmlinux	EXPORT_SYMBOL
+0xc18ac88d	nf_ct_expect_hsize	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xe6175d22	nfs_request_add_commit_list	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0xdfedd320	drm_mode_destroy	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x1414b2a7	fw_iso_context_destroy	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0x8b97d966	inet6_release	vmlinux	EXPORT_SYMBOL
+0x9adf85e5	pci_destroy_slot	vmlinux	EXPORT_SYMBOL_GPL
+0xcb148ea7	vfs_kern_mount	vmlinux	EXPORT_SYMBOL_GPL
+0xd5bd7dac	ring_buffer_record_enable_cpu	vmlinux	EXPORT_SYMBOL_GPL
+0xedf3f1f1	do_machine_check	vmlinux	EXPORT_SYMBOL_GPL
+0x36bc9a29	gss_mech_list_pseudoflavors	net/sunrpc/auth_gss/auth_rpcgss	EXPORT_SYMBOL_GPL
+0xa3e7b5e6	nfc_set_remote_general_bytes	net/nfc/nfc	EXPORT_SYMBOL
+0x315c65fd	zlib_deflateInit2	lib/zlib_deflate/zlib_deflate	EXPORT_SYMBOL
+0xa73f9d7a	il_dealloc_bcast_stations	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL_GPL
+0xb80a8af4	dib7000pc_detection	drivers/media/dvb/frontends/dib7000p	EXPORT_SYMBOL
+0x5edf7992	b1dma_register_appl	drivers/isdn/hardware/avm/b1dma	EXPORT_SYMBOL
+0xce4ce817	sock_diag_register	vmlinux	EXPORT_SYMBOL_GPL
+0xfa3c1fd3	spi_bus_type	vmlinux	EXPORT_SYMBOL_GPL
+0x853c88c6	anon_transport_class_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x2c7d9c64	xen_store_interface	vmlinux	EXPORT_SYMBOL_GPL
+0x602ed00d	acpi_current_gpe_count	vmlinux	EXPORT_SYMBOL
+0xf983673a	submit_bio	vmlinux	EXPORT_SYMBOL
+0xbe2ccd6b	alloc_page_buffers	vmlinux	EXPORT_SYMBOL_GPL
+0xfbf9be5d	register_oom_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0xcfc68341	synchronize_rcu_bh	vmlinux	EXPORT_SYMBOL_GPL
+0x549525ef	handle_nested_irq	vmlinux	EXPORT_SYMBOL_GPL
+0x35ca6c21	on_each_cpu_mask	vmlinux	EXPORT_SYMBOL
+0x3e318da9	ceph_msg_dump	net/ceph/libceph	EXPORT_SYMBOL
+0xe40cffce	ocfs2_stack_glue_set_max_proto_version	fs/ocfs2/ocfs2_stackglue	EXPORT_SYMBOL_GPL
+0x1e5bf7d2	usb_put_hcd	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x2ef63ad6	scsi_dev_info_list_del_keyed	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xeabb5cef	mmc_remove_host	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0xf4b9a0b5	ata_host_resume	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xd8525ea7	fl6_update_dst	vmlinux	EXPORT_SYMBOL_GPL
+0xd75f22f0	tcp_valid_rtt_meas	vmlinux	EXPORT_SYMBOL
+0xb259e2a8	neigh_lookup	vmlinux	EXPORT_SYMBOL
+0x7a60b0fa	uwb_dev_for_each	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0x0c17edb1	osd_sec_init_nosec_doall_caps	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0x0776b5ab	mpt_HardResetHandler	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0x00c4787a	lirc_dev_fop_open	drivers/media/rc/lirc_dev	EXPORT_SYMBOL
+0xba8015fc	tcp_mtup_init	vmlinux	EXPORT_SYMBOL
+0x973d0f9e	kstrtoul_from_user	vmlinux	EXPORT_SYMBOL
+0x0ea07ec7	kstrtou8_from_user	vmlinux	EXPORT_SYMBOL
+0x3a08475f	platform_thermal_notify	vmlinux	EXPORT_SYMBOL
+0x01009373	snd_hda_check_amp_list_power	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x60e0d7e6	cache_purge	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x19522534	l2tp_tunnel_create	net/l2tp/l2tp_core	EXPORT_SYMBOL_GPL
+0x5681f57e	simple_map_init	drivers/mtd/maps/map_funcs	EXPORT_SYMBOL
+0x813f3de4	v4l2_find_nearest_format	drivers/media/video/v4l2-common	EXPORT_SYMBOL_GPL
+0xd163cade	dm_tm_commit	drivers/md/persistent-data/dm-persistent-data	EXPORT_SYMBOL_GPL
+0x8ed679ff	rdma_addr_unregister_client	drivers/infiniband/core/ib_addr	EXPORT_SYMBOL
+0x222e7ce2	sysfs_streq	vmlinux	EXPORT_SYMBOL
+0x4fd9fab4	alloc_buffer_head	vmlinux	EXPORT_SYMBOL
+0x26795e2a	xdr_write_pages	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x4cf9f2f2	pcf50633_mbc_get_status	drivers/power/pcf50633-charger	EXPORT_SYMBOL_GPL
+0x3018713c	ath9k_hw_set_tsfadjust	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xeca0b72f	usbnet_get_endpoints	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0xe71cad77	cx231xx_disable656	drivers/media/video/cx231xx/cx231xx	EXPORT_SYMBOL_GPL
+0x315047ec	gameport_unregister_port	drivers/input/gameport/gameport	EXPORT_SYMBOL
+0x984509da	pci_bus_read_dev_vendor_id	vmlinux	EXPORT_SYMBOL
+0xccd0a2cd	swiotlb_tbl_map_single	vmlinux	EXPORT_SYMBOL_GPL
+0xc994758d	hci_le_conn_update	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0xb4bd060c	ocfs2_dlm_lock_status	fs/ocfs2/ocfs2_stackglue	EXPORT_SYMBOL_GPL
+0xbaf86b6d	iscsi_conn_teardown	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0xe34bf0dc	il_mac_change_interface	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x91d5b1fc	device_remove_file	vmlinux	EXPORT_SYMBOL_GPL
+0x60506751	unmap_kernel_range_noflush	vmlinux	EXPORT_SYMBOL_GPL
+0xafdb6aaf	vma_link	vmlinux	EXPORT_SYMBOL
+0x289c3714	nf_ct_alloc_hashtable	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x615ca87e	spk_serial_synth_probe	drivers/staging/speakup/speakup	EXPORT_SYMBOL_GPL
+0x740663eb	ipv6_skip_exthdr	vmlinux	EXPORT_SYMBOL
+0xf95099c2	tcp_md5_hash_skb_data	vmlinux	EXPORT_SYMBOL
+0x39258aeb	ip_options_compile	vmlinux	EXPORT_SYMBOL
+0x88434e8e	sock_diag_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x18f83fab	gnttab_grant_foreign_access_ref	vmlinux	EXPORT_SYMBOL_GPL
+0x65125138	acpi_check_address_range	vmlinux	EXPORT_SYMBOL
+0xb3299b47	pcibios_bus_to_resource	vmlinux	EXPORT_SYMBOL
+0xa86f62b7	aio_complete	vmlinux	EXPORT_SYMBOL
+0x03bd889d	param_get_ulong	vmlinux	EXPORT_SYMBOL
+0x9f234135	kill_pid	vmlinux	EXPORT_SYMBOL
+0x822e3e05	ceph_get_direct_page_vector	net/ceph/libceph	EXPORT_SYMBOL
+0x53b673a0	spi_bitbang_cleanup	drivers/spi/spi-bitbang	EXPORT_SYMBOL_GPL
+0xb5ca1c46	slhc_free	drivers/net/slip/slhc	EXPORT_SYMBOL
+0x011bd931	memstick_add_host	drivers/memstick/core/memstick	EXPORT_SYMBOL
+0x96f4bc02	drm_gem_mmap	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xf6e548a6	rt6_lookup	vmlinux	EXPORT_SYMBOL
+0x7cb684c5	unix_outq_len	vmlinux	EXPORT_SYMBOL_GPL
+0x12f99022	inet_frags_init_net	vmlinux	EXPORT_SYMBOL
+0xdd007924	device_store_int	vmlinux	EXPORT_SYMBOL_GPL
+0x64999478	congestion_wait	vmlinux	EXPORT_SYMBOL
+0x59eae699	ring_buffer_read_prepare	vmlinux	EXPORT_SYMBOL_GPL
+0xc3eab47b	dccp_v4_connect	net/dccp/dccp_ipv4	EXPORT_SYMBOL_GPL
+0x06d83b6f	hci_recv_fragment	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x339fe67a	config_item_set_name	fs/configfs/configfs	EXPORT_SYMBOL
+0x016e6c20	vmlfb_unregister_subsys	drivers/video/vermilion/vmlfb	EXPORT_SYMBOL_GPL
+0xb470871f	pcf50633_irq_unmask	drivers/mfd/pcf50633	EXPORT_SYMBOL_GPL
+0x3ccb7872	i2c_del_driver	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0xc407ba98	hva_to_pfn_atomic	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x61de59e2	blk_queue_dma_drain	vmlinux	EXPORT_SYMBOL_GPL
+0x9c477288	dquot_release	vmlinux	EXPORT_SYMBOL
+0x9d8331c0	ring_buffer_read_page	vmlinux	EXPORT_SYMBOL_GPL
+0x168f1082	_raw_write_unlock_irqrestore	vmlinux	EXPORT_SYMBOL
+0x0b98b7f5	__atomic_notifier_call_chain	vmlinux	EXPORT_SYMBOL_GPL
+0xbec30d05	x86_match_cpu	vmlinux	EXPORT_SYMBOL
+0x82a84408	ieee80211_beacon_loss	net/mac80211/mac80211	EXPORT_SYMBOL
+0xc6731032	sas_slave_configure	drivers/scsi/libsas/libsas	EXPORT_SYMBOL_GPL
+0x319e2a8d	__dma_request_channel	vmlinux	EXPORT_SYMBOL_GPL
+0x057ce975	hex_dump_to_buffer	vmlinux	EXPORT_SYMBOL
+0x2ae31de1	inode_add_rsv_space	vmlinux	EXPORT_SYMBOL
+0x936b7ded	file_ra_state_init	vmlinux	EXPORT_SYMBOL_GPL
+0xb4f863e6	viafb_pm_register	drivers/video/via/viafb	EXPORT_SYMBOL_GPL
+0x31f19cc2	usb_alloc_coherent	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xb3dc93f4	osd_req_list_partition_objects	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0x2bdf6e87	mlx4_unicast_promisc_remove	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x2364951d	vb2_prepare_buf	drivers/media/video/videobuf2-core	EXPORT_SYMBOL_GPL
+0xfe03325c	media_entity_cleanup	drivers/media/media	EXPORT_SYMBOL_GPL
+0x6f99b94f	crypto_larval_kill	vmlinux	EXPORT_SYMBOL_GPL
+0x78e5329a	snd_rawmidi_kernel_release	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0xab8f2f66	sas_tlr_supported	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL_GPL
+0xa1b16c90	sas_change_queue_type	drivers/scsi/libsas/libsas	EXPORT_SYMBOL_GPL
+0xa124c733	mmc_flush_cache	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x06c82fcf	mult_to_ib_rate	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x9e2dfe4b	i2c_clients_command	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0xef126d09	xfrm_register_mode	vmlinux	EXPORT_SYMBOL
+0x342893ad	inet_csk_get_port	vmlinux	EXPORT_SYMBOL_GPL
+0x3841ab01	unregister_kprobe	vmlinux	EXPORT_SYMBOL_GPL
+0xfdca2264	amdtp_out_stream_set_pcm_format	sound/firewire/snd-firewire-lib	EXPORT_SYMBOL
+0x2470bd40	usb_get_status	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x2d53722b	hostap_init_ap_proc	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x60171bd0	mptscsih_ioc_reset	drivers/message/fusion/mptscsih	EXPORT_SYMBOL
+0x376c6969	videobuf_dma_init	drivers/media/video/videobuf-dma-sg	EXPORT_SYMBOL_GPL
+0xd5145151	mISDN_FsmEvent	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0xe19a11ac	capi20_get_profile	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0xd77c0bc8	klist_remove	vmlinux	EXPORT_SYMBOL_GPL
+0xbc05e044	dev_get_flags	vmlinux	EXPORT_SYMBOL
+0x7ec22f9a	apei_estatus_check	vmlinux	EXPORT_SYMBOL_GPL
+0x5a2aa62e	__wait_on_bit_lock	vmlinux	EXPORT_SYMBOL
+0xb3253ed9	hpet_rtc_timer_init	vmlinux	EXPORT_SYMBOL_GPL
+0x50bd4736	svc_auth_register	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x269f60e0	matroxfb_unregister_driver	drivers/video/matrox/matroxfb_base	EXPORT_SYMBOL
+0xdd7d0871	wusbhc_rh_suspend	drivers/usb/wusbcore/wusbcore	EXPORT_SYMBOL_GPL
+0x5d003278	DoC2k_init	drivers/mtd/devices/doc2000	EXPORT_SYMBOL_GPL
+0xb4c00dcf	i2o_controllers	drivers/message/i2o/i2o_core	EXPORT_SYMBOL
+0x5ed5a149	qt1010_attach	drivers/media/common/tuners/qt1010	EXPORT_SYMBOL
+0x520b2638	ib_pack	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xe5122890	flow_cache_genid	vmlinux	EXPORT_SYMBOL
+0x73f11212	gen_new_estimator	vmlinux	EXPORT_SYMBOL
+0xb1725457	input_class	vmlinux	EXPORT_SYMBOL_GPL
+0xccdbf0a1	agp_backend_release	vmlinux	EXPORT_SYMBOL
+0xfc3b4246	acpi_bus_update_power	vmlinux	EXPORT_SYMBOL_GPL
+0x9722734d	pci_set_master	vmlinux	EXPORT_SYMBOL
+0x4838563c	crypto_alg_mod_lookup	vmlinux	EXPORT_SYMBOL_GPL
+0x52109e64	freeze_super	vmlinux	EXPORT_SYMBOL
+0xe0ee2265	__devm_request_region	vmlinux	EXPORT_SYMBOL
+0x7c8a9152	snd_hda_multi_out_dig_prepare	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xf28799ab	__cfg80211_send_disassoc	net/wireless/cfg80211	EXPORT_SYMBOL
+0xf668ba9a	usb_set_device_state	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x96c3fe03	scsi_autopm_get_device	drivers/scsi/scsi_mod	EXPORT_SYMBOL_GPL
+0x1d97e375	scsi_autopm_put_device	drivers/scsi/scsi_mod	EXPORT_SYMBOL_GPL
+0x7d58f8f8	scsi_eh_finish_cmd	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x23f248a9	alloc_orinocodev	drivers/net/wireless/orinoco/orinoco	EXPORT_SYMBOL
+0xe506121d	mmc_set_data_timeout	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0xf5ef842e	v4l_bound_align_image	drivers/media/video/v4l2-common	EXPORT_SYMBOL_GPL
+0xfc07c81e	cx231xx_unmute_audio	drivers/media/video/cx231xx/cx231xx	EXPORT_SYMBOL_GPL
+0x0b285559	flexcop_pass_dmx_data	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0xc9e97524	iw_cm_accept	drivers/infiniband/core/iw_cm	EXPORT_SYMBOL
+0xc14cb7b7	hid_connect	drivers/hid/hid	EXPORT_SYMBOL_GPL
+0x2939d812	intel_gmch_probe	vmlinux	EXPORT_SYMBOL
+0x60fe2555	vc_cons	vmlinux	EXPORT_SYMBOL
+0x2ade4945	dma_async_device_unregister	vmlinux	EXPORT_SYMBOL
+0x97282812	transport_free_session	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x207b79c6	ath9k_hw_bstuck_nfcal	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xc1906d1d	mmc_can_reset	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0xb641d0cb	v4l2_ctrl_new_std_menu	drivers/media/video/videodev	EXPORT_SYMBOL
+0x3c82d07d	drm_add_edid_modes	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x4f2a2b7a	ata_common_sdev_attrs	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x325e677c	gnttab_grant_foreign_transfer_ref	vmlinux	EXPORT_SYMBOL_GPL
+0xfca46cd0	acpi_kobj	vmlinux	EXPORT_SYMBOL_GPL
+0xd0295267	cpu_rmap_update	vmlinux	EXPORT_SYMBOL
+0x70d1f8f3	strncat	vmlinux	EXPORT_SYMBOL
+0xdd0a2ba2	strlcat	vmlinux	EXPORT_SYMBOL
+0xcfeb0be9	rb_augment_erase_begin	vmlinux	EXPORT_SYMBOL
+0x8d26d5e9	blk_queue_max_discard_sectors	vmlinux	EXPORT_SYMBOL
+0x73ab6264	inode_claim_rsv_space	vmlinux	EXPORT_SYMBOL
+0xd2965f6f	kthread_should_stop	vmlinux	EXPORT_SYMBOL
+0xcf47a4ea	snd_ac97_bus	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0xbc73691c	nfnetlink_set_err	net/netfilter/nfnetlink	EXPORT_SYMBOL_GPL
+0xea8005fd	mtd_lock_user_prot_reg	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0x744262ff	mantis_get_mac	drivers/media/dvb/mantis/mantis_core	EXPORT_SYMBOL_GPL
+0x660a1522	mddev_init	drivers/md/md-mod	EXPORT_SYMBOL_GPL
+0x160b40da	ata_pci_device_suspend	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xcf233507	netdev_notice	vmlinux	EXPORT_SYMBOL
+0xccb942a6	pm_generic_freeze_noirq	vmlinux	EXPORT_SYMBOL_GPL
+0x50b59548	blk_rq_map_kern	vmlinux	EXPORT_SYMBOL
+0x3320cfa8	sync_mapping_buffers	vmlinux	EXPORT_SYMBOL
+0x01dbeb0e	irias_delete_object	net/irda/irda	EXPORT_SYMBOL
+0xf7e9a346	ceph_auth_is_authenticated	net/ceph/libceph	EXPORT_SYMBOL
+0x8be8566d	bt_sock_register	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x3b6bf895	fat_scan	fs/fat/fat	EXPORT_SYMBOL_GPL
+0x22b1852b	wusbhc_create	drivers/usb/wusbcore/wusbcore	EXPORT_SYMBOL_GPL
+0x2461e2cb	usb_serial_handle_break	drivers/usb/serial/usbserial	EXPORT_SYMBOL_GPL
+0xdce3b90f	__scsi_add_device	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xa7bf2afc	mwifiex_disable_auto_ds	drivers/net/wireless/mwifiex/mwifiex	EXPORT_SYMBOL_GPL
+0x8481731e	mpt_raid_phys_disk_get_num_paths	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0xc01f4bf3	wm97xx_get_gpio	drivers/input/touchscreen/wm97xx-ts	EXPORT_SYMBOL_GPL
+0x941fb678	wm97xx_set_gpio	drivers/input/touchscreen/wm97xx-ts	EXPORT_SYMBOL_GPL
+0x17ff2c1d	__nvram_read_byte	drivers/char/nvram	EXPORT_SYMBOL
+0x7854aad9	inode_change_ok	vmlinux	EXPORT_SYMBOL
+0x6cde2e14	snd_hda_multi_out_dig_close	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xc9f0aaf5	snd_pcm_hw_constraint_minmax	sound/core/snd-pcm	EXPORT_SYMBOL
+0xbcd3ef13	irias_object_change_attribute	net/irda/irda	EXPORT_SYMBOL
+0x69d38ed9	__scsi_print_sense	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xa2d6516f	rt2x00queue_flush_queue	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x8006c614	dca_unregister_notify	drivers/dca/dca	EXPORT_SYMBOL_GPL
+0x0d6572c5	datagram_poll	vmlinux	EXPORT_SYMBOL
+0x2b975938	blk_queue_end_tag	vmlinux	EXPORT_SYMBOL
+0x1e9edfb7	seq_hlist_start_head_rcu	vmlinux	EXPORT_SYMBOL
+0x2b51b084	snd_midi_event_free	sound/core/seq/snd-seq-midi-event	EXPORT_SYMBOL
+0x0241ea29	jbd2_journal_check_available_features	fs/jbd2/jbd2	EXPORT_SYMBOL
+0xf4aa4aed	usb_stor_Bulk_transport	drivers/usb/storage/usb-storage	EXPORT_SYMBOL_GPL
+0xc85e6899	lbtf_debug	drivers/net/wireless/libertas_tf/libertas_tf	EXPORT_SYMBOL_GPL
+0xb00b793c	i2400m_bm_cmd_prepare	drivers/net/wimax/i2400m/i2400m	EXPORT_SYMBOL_GPL
+0xae0eca89	media_device_register	drivers/media/media	EXPORT_SYMBOL_GPL
+0x2b58dee2	drm_gem_object_alloc	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x1458ecd8	__tcf_em_tree_match	vmlinux	EXPORT_SYMBOL
+0x8c41b2df	dev_uc_flush	vmlinux	EXPORT_SYMBOL
+0x71e81f14	dev_mc_flush	vmlinux	EXPORT_SYMBOL
+0x0fe2d570	xenbus_directory	vmlinux	EXPORT_SYMBOL_GPL
+0x067d8d35	security_release_secctx	vmlinux	EXPORT_SYMBOL
+0x887d70eb	flush_old_exec	vmlinux	EXPORT_SYMBOL
+0x00c4dc87	timecounter_init	vmlinux	EXPORT_SYMBOL_GPL
+0x21410b3a	snd_hda_codec_amp_read	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x23190263	snd_ctl_sync_vmaster_hook	sound/core/snd	EXPORT_SYMBOL_GPL
+0xd88aae1d	ieee80211_free_txskb	net/mac80211/mac80211	EXPORT_SYMBOL
+0x4ea63985	garp_request_leave	net/802/garp	EXPORT_SYMBOL_GPL
+0x5fc48609	osduld_unregister_test	drivers/scsi/osd/osd	EXPORT_SYMBOL
+0x85123dd7	mdiobus_unregister	drivers/net/phy/libphy	EXPORT_SYMBOL
+0xa825c75b	videobuf_sg_alloc	drivers/media/video/videobuf-dma-sg	EXPORT_SYMBOL_GPL
+0xe43c0eb4	flexcop_dma_control_timer_irq	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0x6622655d	ttm_vt_lock	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0xdea1251f	ata_bmdma_port_start32	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xedc19860	inet_addr_type	vmlinux	EXPORT_SYMBOL
+0x0fdf06c2	inet_recvmsg	vmlinux	EXPORT_SYMBOL
+0x8dd4c412	llc_sap_close	vmlinux	EXPORT_SYMBOL
+0x8d6b604e	__tracepoint_rpm_suspend	vmlinux	EXPORT_SYMBOL_GPL
+0xa4701e9e	timekeeping_inject_offset	vmlinux	EXPORT_SYMBOL
+0xc7734221	do_trace_rcu_torture_read	vmlinux	EXPORT_SYMBOL_GPL
+0x5d7d6851	ceph_auth_update_authorizer	net/ceph/libceph	EXPORT_SYMBOL
+0x0945b9bd	p9_payload_gup	net/9p/9pnet	EXPORT_SYMBOL
+0x6a37c7bc	nfs_commitdata_alloc	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0x0f1ff9e0	phy_detach	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x829c55f6	mii_link_ok	drivers/net/mii	EXPORT_SYMBOL
+0x6e58ddf0	gnttab_end_foreign_transfer_ref	vmlinux	EXPORT_SYMBOL_GPL
+0x04ea5cdf	__tracepoint_rpm_idle	vmlinux	EXPORT_SYMBOL_GPL
+0x1d09fe08	snd_hda_jack_tbl_get	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xe3d682c5	snd_hda_jack_tbl_new	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xbcb77473	cfg80211_inform_bss_frame	net/wireless/cfg80211	EXPORT_SYMBOL
+0x26693a6c	wimax_msg_data_len	net/wimax/wimax	EXPORT_SYMBOL_GPL
+0xd4aef29e	nf_conntrack_l4proto_udp6	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x6d48d0dc	pnfs_unregister_layoutdriver	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0x8a0fff49	fscache_fsdef_index	fs/fscache/fscache	EXPORT_SYMBOL
+0x34d9b922	transport_deregister_session	drivers/target/target_core_mod	EXPORT_SYMBOL
+0xa06898bd	cxgbi_get_ep_param	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0xe571a4da	il_send_lq_cmd	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x413188e6	il_get_lowest_plcp	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x21e36bf2	smscore_registry_getmode	drivers/media/dvb/siano/smsmdtv	EXPORT_SYMBOL_GPL
+0xf58b63fe	tcp_proc_register	vmlinux	EXPORT_SYMBOL
+0x77c290f0	wakeup_source_remove	vmlinux	EXPORT_SYMBOL_GPL
+0xede91ecb	stop_tty	vmlinux	EXPORT_SYMBOL
+0x078c0137	btree_visitor	vmlinux	EXPORT_SYMBOL_GPL
+0xe9e214f5	dquot_get_dqblk	vmlinux	EXPORT_SYMBOL
+0x5574cf5a	generic_write_sync	vmlinux	EXPORT_SYMBOL
+0x99ee9642	snd_wss_info_double	sound/isa/wss/snd-wss-lib	EXPORT_SYMBOL
+0x505cc5fc	snd_sb8dsp_midi_interrupt	sound/isa/sb/snd-sb8-dsp	EXPORT_SYMBOL
+0xd050d72c	nfs_pageio_reset_write_mds	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0xfe1c219d	wl1251_alloc_hw	drivers/net/wireless/wl1251/wl1251	EXPORT_SYMBOL_GPL
+0x91ff697b	rtl_cam_get_free_entry	drivers/net/wireless/rtlwifi/rtlwifi	EXPORT_SYMBOL
+0xa7d47e22	rt2x00mac_tx	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x7c707a70	sdio_writel	drivers/mmc/core/mmc_core	EXPORT_SYMBOL_GPL
+0xc5397da6	xenbus_mkdir	vmlinux	EXPORT_SYMBOL_GPL
+0x25b87da3	xenbus_watch_pathfmt	vmlinux	EXPORT_SYMBOL_GPL
+0x0d3dda14	acpi_get_type	vmlinux	EXPORT_SYMBOL
+0x230722d7	snd_msnd_pcm	sound/isa/msnd/snd-msnd-lib	EXPORT_SYMBOL
+0xf66fea1d	jbd2_journal_stop	fs/jbd2/jbd2	EXPORT_SYMBOL
+0xd5f285e5	sdhci_pltfm_register	drivers/mmc/host/sdhci-pltfm	EXPORT_SYMBOL_GPL
+0x7981f1fb	sdio_memcpy_toio	drivers/mmc/core/mmc_core	EXPORT_SYMBOL_GPL
+0x7730f22d	drbd_conn_str	drivers/block/drbd/drbd	EXPORT_SYMBOL
+0xf5378cf4	xfrm_policy_destroy	vmlinux	EXPORT_SYMBOL
+0x5688b836	__trace_note_message	vmlinux	EXPORT_SYMBOL_GPL
+0xd8250a5c	iounmap_atomic	vmlinux	EXPORT_SYMBOL_GPL
+0x16c2b2da	snd_ctl_replace	sound/core/snd	EXPORT_SYMBOL
+0x691debba	snd_pcm_hw_constraint_ratnums	sound/core/snd-pcm	EXPORT_SYMBOL
+0x197effcb	ceph_osdc_release_request	net/ceph/libceph	EXPORT_SYMBOL
+0xb2caec48	p9_client_unlinkat	net/9p/9pnet	EXPORT_SYMBOL
+0x2c67222e	cfi_fixup	drivers/mtd/chips/cfi_util	EXPORT_SYMBOL
+0xed061606	capi20_manufacturer	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x5fcdcc05	ipmi_get_my_LUN	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0xc57aeaec	twofish_setkey	crypto/twofish_common	EXPORT_SYMBOL_GPL
+0x23db2282	neigh_ifdown	vmlinux	EXPORT_SYMBOL
+0x6c1ce5ce	strcspn	vmlinux	EXPORT_SYMBOL
+0xee459434	jbd2_journal_extend	fs/jbd2/jbd2	EXPORT_SYMBOL
+0xe43e6a09	thermal_zone_unbind_cooling_device	drivers/thermal/thermal_sys	EXPORT_SYMBOL
+0xfcbfd74d	md_allow_write	drivers/md/md-mod	EXPORT_SYMBOL_GPL
+0xebef51e6	ata_cable_ignore	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x38620e38	gnttab_grant_foreign_access_trans_ref	vmlinux	EXPORT_SYMBOL_GPL
+0x21b14f61	pci_scan_bridge	vmlinux	EXPORT_SYMBOL
+0xfc417859	bio_integrity_clone	vmlinux	EXPORT_SYMBOL
+0x4fe09e5f	xen_remap_domain_mfn_range	vmlinux	EXPORT_SYMBOL_GPL
+0x49769ecc	nf_conntrack_l3proto_register	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xdf94157b	nf_conntrack_l4proto_register	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xb61e739b	usb_serial_resume	drivers/usb/serial/usbserial	EXPORT_SYMBOL
+0x3f9139aa	comedi_get_subdevice_runflags	drivers/staging/comedi/comedi	EXPORT_SYMBOL
+0xf08de5a9	il_tx_queue_unmap	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xda9d9212	sirdev_write_complete	drivers/net/irda/sir-dev	EXPORT_SYMBOL
+0x1414457b	hid_parse_report	drivers/hid/hid	EXPORT_SYMBOL_GPL
+0x0b5ca13a	blkdev_aio_write	vmlinux	EXPORT_SYMBOL_GPL
+0x3c2caead	seq_bitmap_list	vmlinux	EXPORT_SYMBOL
+0xaec655c7	alloc_pages_exact	vmlinux	EXPORT_SYMBOL
+0xb2438104	nf_nat_sdp_media_hook	net/netfilter/nf_conntrack_sip	EXPORT_SYMBOL_GPL
+0xf6efd533	ieee80211_rx	net/mac80211/mac80211	EXPORT_SYMBOL
+0x4691c29a	ieee80211_rx_irqsafe	net/mac80211/mac80211	EXPORT_SYMBOL
+0xb95f27f5	ceph_msg_new	net/ceph/libceph	EXPORT_SYMBOL
+0xf2b95199	qlogicfas408_setup	drivers/scsi/qlogicfas408	EXPORT_SYMBOL
+0x9bc87a7f	sirdev_receive	drivers/net/irda/sir-dev	EXPORT_SYMBOL
+0x498dcb5e	drm_ut_debug_printk	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x38fab15b	drm_rmmap	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xa9de17bb	fw_iso_context_queue_flush	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0x40a6f627	nsc_gpio_read	drivers/char/nsc_gpio	EXPORT_SYMBOL
+0x3b0edac1	ata_timing_compute	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x924bc739	devm_regulator_bulk_get	vmlinux	EXPORT_SYMBOL_GPL
+0x04bf26af	ioremap_page_range	vmlinux	EXPORT_SYMBOL_GPL
+0xdb2343fa	register_sound_special	sound/soundcore	EXPORT_SYMBOL
+0x3a3d0a81	svc_find_xprt	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xb85e4b96	svc_process	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xf317ea6a	rpc_force_rebind	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x8ae50ce9	gss_svc_to_pseudoflavor	net/sunrpc/auth_gss/auth_rpcgss	EXPORT_SYMBOL_GPL
+0xff0a3265	dccp_rcv_established	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x8b937ecb	parport_unregister_device	drivers/parport/parport	EXPORT_SYMBOL
+0x34aae60b	init_atmel_card	drivers/net/wireless/atmel	EXPORT_SYMBOL
+0x27f38509	usbnet_skb_return	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0x55b6e211	ttm_bo_swapout_all	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0xe194d426	__nla_reserve	vmlinux	EXPORT_SYMBOL
+0x29537c9e	alloc_chrdev_region	vmlinux	EXPORT_SYMBOL
+0x07266221	inc_zone_page_state	vmlinux	EXPORT_SYMBOL
+0x8a3c5abe	rpc_killall_tasks	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x0db8ea5b	rxrpc_kernel_data_delivered	net/rxrpc/af-rxrpc	EXPORT_SYMBOL
+0x7186d3ac	nf_ct_iterate_cleanup	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x8e7f313a	lbs_suspend	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0xc61026f4	deregister_mtd_blktrans	drivers/mtd/mtd_blkdevs	EXPORT_SYMBOL_GPL
+0x7f2b35ee	mpt_clear_taskmgmt_in_progress_flag	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0xf9d94ca1	tpm_show_caps	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x4d9b5437	arp_find	vmlinux	EXPORT_SYMBOL
+0x4dcb808f	skb_checksum	vmlinux	EXPORT_SYMBOL
+0xe6f698b5	pci_pme_capable	vmlinux	EXPORT_SYMBOL
+0xbdf5c25c	rb_next	vmlinux	EXPORT_SYMBOL
+0x4856d366	inode_permission	vmlinux	EXPORT_SYMBOL
+0x7f282f61	buffer_migrate_page	vmlinux	EXPORT_SYMBOL
+0xbdf4c434	detach_vmas_to_be_unmapped	vmlinux	EXPORT_SYMBOL
+0x75bb675a	finish_wait	vmlinux	EXPORT_SYMBOL
+0xa9b635ce	svc_xprt_init	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x07579055	put_lseg	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0xcba06445	ieee80211_wx_get_essid_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x29497cd7	ieee80211_wx_set_essid_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0xd190ac20	scsi_print_result	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x7442de64	phy_start_aneg	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x2d53d71f	dvb_unregister_adapter	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0x0a5d7019	saa7146_set_hps_source_and_sync	drivers/media/common/saa7146_vv	EXPORT_SYMBOL_GPL
+0x564f1dca	klist_add_after	vmlinux	EXPORT_SYMBOL_GPL
+0x52d7b2fd	llc_sap_list	vmlinux	EXPORT_SYMBOL
+0xb219d56c	wbinvd_on_cpu	vmlinux	EXPORT_SYMBOL
+0x4cbbd171	__bitmap_weight	vmlinux	EXPORT_SYMBOL
+0x61b7b126	simple_strtoull	vmlinux	EXPORT_SYMBOL
+0x528c709d	simple_read_from_buffer	vmlinux	EXPORT_SYMBOL
+0x3d1d8d39	clockevent_delta2ns	vmlinux	EXPORT_SYMBOL_GPL
+0x6eb85693	nf_defrag_ipv6_enable	net/ipv6/netfilter/nf_defrag_ipv6	EXPORT_SYMBOL_GPL
+0x6b6c3d10	nf_defrag_ipv4_enable	net/ipv4/netfilter/nf_defrag_ipv4	EXPORT_SYMBOL_GPL
+0x96966d23	lc_index_of	lib/lru_cache	EXPORT_SYMBOL
+0x3cbb989d	ieee80211_is_54g_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0xadd8d6be	osd_dev_init	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0x0ee6d7bc	vmbus_driver_unregister	drivers/hv/hv_vmbus	EXPORT_SYMBOL_GPL
+0xd3e6528f	hypervisor_kobj	vmlinux	EXPORT_SYMBOL_GPL
+0xa681fe88	generate_random_uuid	vmlinux	EXPORT_SYMBOL
+0x3147857d	default_red	vmlinux	EXPORT_SYMBOL
+0xff9ca065	fb_edid_to_monspecs	vmlinux	EXPORT_SYMBOL
+0xae9a996a	rxrpc_kernel_accept_call	net/rxrpc/af-rxrpc	EXPORT_SYMBOL
+0xad1bb027	nf_ct_free_hashtable	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x4ec35231	dccp_ackvec_parsed_add	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x35eed7ed	t3_l2t_send_slow	drivers/net/ethernet/chelsio/cxgb3/cxgb3	EXPORT_SYMBOL
+0xae56032e	bnx2x_cnic_probe	drivers/net/ethernet/broadcom/bnx2x/bnx2x	EXPORT_SYMBOL
+0x311239d1	mmc_power_save_host	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x01ca3a40	kvm_queue_exception_e	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x77b8e604	get_net_ns_by_pid	vmlinux	EXPORT_SYMBOL_GPL
+0x59bc9609	acpi_write_bit_register	vmlinux	EXPORT_SYMBOL
+0x81946bd5	fb_deferred_io_cleanup	vmlinux	EXPORT_SYMBOL_GPL
+0x40c6423b	vfs_statfs	vmlinux	EXPORT_SYMBOL
+0x61f45ac1	snd_gus_dram_write	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0x5e5bc20a	target_submit_cmd	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x2f2c1b13	orinoco_tx_timeout	drivers/net/wireless/orinoco/orinoco	EXPORT_SYMBOL
+0x0b2b1d3f	t3_l2e_free	drivers/net/ethernet/chelsio/cxgb3/cxgb3	EXPORT_SYMBOL
+0xab0ea625	saa7146_devices_lock	drivers/media/common/saa7146	EXPORT_SYMBOL_GPL
+0x2dc77f88	af_alg_register_type	crypto/af_alg	EXPORT_SYMBOL_GPL
+0xec0d877e	ieee80211_iterate_active_interfaces_atomic	net/mac80211/mac80211	EXPORT_SYMBOL_GPL
+0x732e2269	ath9k_hw_init	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xe92612bd	cfi_cmdset_0020	drivers/mtd/chips/cfi_cmdset_0020	EXPORT_SYMBOL_GPL
+0x0d96ab11	cfi_cmdset_0002	drivers/mtd/chips/cfi_cmdset_0002	EXPORT_SYMBOL_GPL
+0xb25e9e7b	cfi_cmdset_0006	drivers/mtd/chips/cfi_cmdset_0002	EXPORT_SYMBOL_GPL
+0xe299c66a	cfi_cmdset_0701	drivers/mtd/chips/cfi_cmdset_0002	EXPORT_SYMBOL_GPL
+0x90383fde	cfi_cmdset_0001	drivers/mtd/chips/cfi_cmdset_0001	EXPORT_SYMBOL_GPL
+0xcfdc256b	cfi_cmdset_0003	drivers/mtd/chips/cfi_cmdset_0001	EXPORT_SYMBOL_GPL
+0x36a24dc7	cfi_cmdset_0200	drivers/mtd/chips/cfi_cmdset_0001	EXPORT_SYMBOL_GPL
+0x4d301474	i2c_new_probed_device	drivers/i2c/i2c-core	EXPORT_SYMBOL_GPL
+0x84c67d25	drm_agp_free	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x1c1c359c	async_xor_val	crypto/async_tx/async_xor	EXPORT_SYMBOL_GPL
+0xf99e6e91	udp_ioctl	vmlinux	EXPORT_SYMBOL
+0xdddb2787	__pci_complete_power_transition	vmlinux	EXPORT_SYMBOL_GPL
+0xd52b559a	__nla_reserve_nohdr	vmlinux	EXPORT_SYMBOL
+0xbd7ba09e	__get_page_tail	vmlinux	EXPORT_SYMBOL
+0x22c4491f	wusbhc_rh_resume	drivers/usb/wusbcore/wusbcore	EXPORT_SYMBOL_GPL
+0xea10212a	int_to_scsilun	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xa5126802	v4l2_ctrl_handler_setup	drivers/media/video/videodev	EXPORT_SYMBOL
+0x00bb3790	v4l2_spi_new_subdev	drivers/media/video/v4l2-common	EXPORT_SYMBOL_GPL
+0xbc5fe7c1	dm_sm_disk_create	drivers/md/persistent-data/dm-persistent-data	EXPORT_SYMBOL_GPL
+0x240935ed	ttm_agp_tt_create	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x3ecadca3	rtnetlink_put_metrics	vmlinux	EXPORT_SYMBOL
+0xa3b9a7f1	may_umount	vmlinux	EXPORT_SYMBOL
+0x63300ef4	iscsi_tcp_r2tpool_alloc	drivers/scsi/libiscsi_tcp	EXPORT_SYMBOL_GPL
+0x27576942	md_integrity_add_rdev	drivers/md/md-mod	EXPORT_SYMBOL
+0x27b4d6de	ib_query_mr	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x2eeb4428	kvm_emulate_cpuid	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x219d91b2	pcix_get_max_mmrbc	vmlinux	EXPORT_SYMBOL
+0xb7f55ecc	atomic64_add_return_cx8	vmlinux	EXPORT_SYMBOL
+0x4a3ec422	block_read_full_page	vmlinux	EXPORT_SYMBOL
+0x174b9453	console_drivers	vmlinux	EXPORT_SYMBOL_GPL
+0x9a687c3c	__scsi_alloc_queue	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x793e85fd	rt2800_get_tkip_seq	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0x644d2642	mmc_hw_reset	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x75271716	save_processor_state	vmlinux	EXPORT_SYMBOL
+0x1b765b5c	bus_sort_breadthfirst	vmlinux	EXPORT_SYMBOL_GPL
+0x8dd8373b	ct_sip_get_header	net/netfilter/nf_conntrack_sip	EXPORT_SYMBOL_GPL
+0xa370c681	hashbin_find	net/irda/irda	EXPORT_SYMBOL
+0x1705f0ba	ipt_alloc_initial_table	net/ipv4/netfilter/ip_tables	EXPORT_SYMBOL_GPL
+0x9845a791	jbd2_journal_ack_err	fs/jbd2/jbd2	EXPORT_SYMBOL
+0x653da4ef	sas_port_delete	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL
+0xeb364f8d	rc_free_device	drivers/media/rc/rc-core	EXPORT_SYMBOL_GPL
+0x69d922d4	dvb_net_init	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0xde702573	edac_pci_del_device	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x9cee51bb	tcp_v4_connect	vmlinux	EXPORT_SYMBOL
+0xe0c89546	tcp_sync_mss	vmlinux	EXPORT_SYMBOL
+0xe102997f	regmap_raw_write	vmlinux	EXPORT_SYMBOL_GPL
+0xada38534	regulator_bulk_disable	vmlinux	EXPORT_SYMBOL_GPL
+0xd0c05159	emergency_restart	vmlinux	EXPORT_SYMBOL_GPL
+0x3ff62317	local_bh_disable	vmlinux	EXPORT_SYMBOL
+0xeb1b8fef	snd_rawmidi_input_params	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0x3d73a797	p9_errstr2errno	net/9p/9pnet	EXPORT_SYMBOL
+0xd59de994	ulist_next	fs/btrfs/btrfs	EXPORT_SYMBOL
+0xbd4f18f3	cxgb4_remove_tid	drivers/net/ethernet/chelsio/cxgb4/cxgb4	EXPORT_SYMBOL
+0x4a64d9ab	cxgb3_remove_tid	drivers/net/ethernet/chelsio/cxgb3/cxgb3	EXPORT_SYMBOL
+0x1e3f728d	dm_block_data	drivers/md/persistent-data/dm-persistent-data	EXPORT_SYMBOL_GPL
+0x3e54abb2	md_error	drivers/md/md-mod	EXPORT_SYMBOL
+0x7e23926c	tcp_death_row	vmlinux	EXPORT_SYMBOL_GPL
+0x5c53d353	serio_rescan	vmlinux	EXPORT_SYMBOL
+0x77d3c22a	framebuffer_alloc	vmlinux	EXPORT_SYMBOL
+0xe187693c	kstrtouint_from_user	vmlinux	EXPORT_SYMBOL
+0xc536ec22	bio_get_nr_vecs	vmlinux	EXPORT_SYMBOL
+0xe0d611b2	rds_trans_register	net/rds/rds	EXPORT_SYMBOL_GPL
+0x86be7924	dccp_packet_name	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x8f007727	ni_gpct_device_construct	drivers/staging/comedi/drivers/ni_tio	EXPORT_SYMBOL_GPL
+0x60f1a907	mtd_panic_write	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0x38efaf5a	dm_region_hash_destroy	drivers/md/dm-region-hash	EXPORT_SYMBOL_GPL
+0x39d8d5ac	xfrm_policy_byid	vmlinux	EXPORT_SYMBOL
+0x4b56cd2e	net_prio_subsys_id	vmlinux	EXPORT_SYMBOL_GPL
+0x35c2e795	cpufreq_driver_target	vmlinux	EXPORT_SYMBOL_GPL
+0x264f8b76	pci_prepare_to_sleep	vmlinux	EXPORT_SYMBOL
+0x94957ad0	ahash_register_instance	vmlinux	EXPORT_SYMBOL_GPL
+0x731731d3	load_nls_default	vmlinux	EXPORT_SYMBOL
+0xe9395291	nonseekable_open	vmlinux	EXPORT_SYMBOL
+0xed45e854	kmem_cache_create	vmlinux	EXPORT_SYMBOL
+0xf3b93a97	cgroup_lock_is_held	vmlinux	EXPORT_SYMBOL_GPL
+0x5fdfa2c1	amd_pmu_enable_virt	vmlinux	EXPORT_SYMBOL_GPL
+0x8c0dad23	ore_remove	fs/exofs/libore	EXPORT_SYMBOL
+0x59803966	rtl92ce_phy_set_rf_on	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0xcc5d23db	_il_apm_stop	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x5276d22e	ath9k_hw_txstart	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xa783f29c	ath9k_cmn_get_hw_crypto_keytype	drivers/net/wireless/ath/ath9k/ath9k_common	EXPORT_SYMBOL
+0x7e20165a	mlx4_mr_free	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xcab63c3d	dm_rh_get_state	drivers/md/dm-region-hash	EXPORT_SYMBOL_GPL
+0x7060bf0a	crypto_aes_encrypt_x86	arch/x86/crypto/aes-i586	EXPORT_SYMBOL_GPL
+0x475100c2	inet_get_local_port_range	vmlinux	EXPORT_SYMBOL
+0x357b187b	gen_pool_avail	vmlinux	EXPORT_SYMBOL_GPL
+0x06f4bf00	seq_escape	vmlinux	EXPORT_SYMBOL
+0xf34d1e83	__seq_open_private	vmlinux	EXPORT_SYMBOL
+0x0791928a	snd_i2c_probeaddr	sound/i2c/snd-i2c	EXPORT_SYMBOL
+0x0fe1b213	usb_stor_resume	drivers/usb/storage/usb-storage	EXPORT_SYMBOL_GPL
+0xa3f1bd90	rtl92c_set_fw_joinbss_report_cmd	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0x6b996967	open_candev	drivers/net/can/can-dev	EXPORT_SYMBOL_GPL
+0xacf3b7de	ubi_open_volume	drivers/mtd/ubi/ubi	EXPORT_SYMBOL_GPL
+0x5eb24829	dm_shift_arg	drivers/md/dm-mod	EXPORT_SYMBOL
+0xf2adc42e	gigaset_blockdriver	drivers/isdn/gigaset/gigaset	EXPORT_SYMBOL_GPL
+0x3108ea46	xfrm_ealg_get_byname	vmlinux	EXPORT_SYMBOL_GPL
+0x284276ec	page_address	vmlinux	EXPORT_SYMBOL
+0x6475a675	snd_hda_mixer_amp_volume_info	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x45e4646a	osd_req_create_partition	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0x96ce63cc	fc_exch_mgr_add	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x22b90986	fc_exch_mgr_del	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x6c1f2eb8	ath_reg_notifier_apply	drivers/net/wireless/ath/ath	EXPORT_SYMBOL
+0x1072ffe4	mlx4_pd_free	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x822222db	eeprom_93cx6_write	drivers/misc/eeprom/eeprom_93cx6	EXPORT_SYMBOL_GPL
+0x5643ae94	ata_sas_scsi_ioctl	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x1793d3b5	xfrm_lookup	vmlinux	EXPORT_SYMBOL
+0xc8939b1a	skb_store_bits	vmlinux	EXPORT_SYMBOL
+0xb720cdda	page_cache_sync_readahead	vmlinux	EXPORT_SYMBOL_GPL
+0x6892088c	unregister_pm_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0xd55a8574	unregister_ip_vs_pe	net/netfilter/ipvs/ip_vs	EXPORT_SYMBOL_GPL
+0x43deecd5	ieee80211_enable_rssi_reports	net/mac80211/mac80211	EXPORT_SYMBOL
+0x850c322a	mb_cache_entry_free	fs/mbcache	EXPORT_SYMBOL
+0x43435cdc	usb_wwan_resume	drivers/usb/serial/usb_wwan	EXPORT_SYMBOL
+0x570bdeef	fc_get_pr_transport_id	drivers/target/target_core_mod	EXPORT_SYMBOL
+0xabc7817b	iscsi_scan_finished	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0xa28ca271	il_txq_update_write_ptr	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x59230453	dibx000_reset_i2c_master	drivers/media/dvb/frontends/dibx000_common	EXPORT_SYMBOL
+0xe004ee92	dm_bufio_new	drivers/md/dm-bufio	EXPORT_SYMBOL_GPL
+0x41e524f8	i2c_probe_func_quick_read	drivers/i2c/i2c-core	EXPORT_SYMBOL_GPL
+0x02e7ccf0	i2c_smbus_read_byte	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x3bd2f922	inet_unregister_protosw	vmlinux	EXPORT_SYMBOL
+0x9c04e185	platform_create_bundle	vmlinux	EXPORT_SYMBOL_GPL
+0x541630a9	_dev_info	vmlinux	EXPORT_SYMBOL
+0xb0f70705	icq_get_changed	vmlinux	EXPORT_SYMBOL
+0xe295c0ff	is_hpet_enabled	vmlinux	EXPORT_SYMBOL_GPL
+0xaa3c991b	snd_sbdsp_create	sound/isa/sb/snd-sb-common	EXPORT_SYMBOL
+0x1b13133a	svc_xprt_put	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x7658dbf0	ei_close	drivers/net/ethernet/8390/8390	EXPORT_SYMBOL
+0xe81cbff6	blkcipher_walk_phys	vmlinux	EXPORT_SYMBOL_GPL
+0x3dfc897c	seq_hlist_start_head	vmlinux	EXPORT_SYMBOL
+0xa4c7d6f0	clocksource_change_rating	vmlinux	EXPORT_SYMBOL
+0x3cab1c2f	snd_hda_create_spdif_in_ctls	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x961685f8	__ieee80211_get_channel	net/wireless/cfg80211	EXPORT_SYMBOL
+0xcafbe4ad	rds_trans_unregister	net/rds/rds	EXPORT_SYMBOL_GPL
+0x4da72d75	dccp_v4_send_check	net/dccp/dccp_ipv4	EXPORT_SYMBOL_GPL
+0x05aa4691	hci_conn_check_link_mode	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x1f6df6d5	usb_stor_post_reset	drivers/usb/storage/usb-storage	EXPORT_SYMBOL_GPL
+0x9924c496	__usb_get_extra_descriptor	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xaafbb818	cxgbi_bind_conn	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0xf501278b	il_bcast_addr	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x3c3719fd	cxgb4_free_atid	drivers/net/ethernet/chelsio/cxgb4/cxgb4	EXPORT_SYMBOL
+0x3e5d7f90	cxgb3_free_atid	drivers/net/ethernet/chelsio/cxgb3/cxgb3	EXPORT_SYMBOL
+0xa56d4d1f	sdio_set_block_size	drivers/mmc/core/mmc_core	EXPORT_SYMBOL_GPL
+0xdd9fbec3	confirm_Bsend	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0x35acf84d	rdma_create_id	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0x9851bc3f	rdma_create_qp	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0xfcc33b7f	xen_swiotlb_unmap_sg_attrs	vmlinux	EXPORT_SYMBOL_GPL
+0x7c20f8c1	pci_bus_assign_resources	vmlinux	EXPORT_SYMBOL
+0xa0eac04b	pci_hp_create_module_link	vmlinux	EXPORT_SYMBOL_GPL
+0x9159b9d6	profile_event_register	vmlinux	EXPORT_SYMBOL_GPL
+0x0b11d20b	snd_hda_query_pin_caps	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x6505e58e	__nf_conntrack_helper_find	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xbbc4ef97	ocfs2_stack_supports_plocks	fs/ocfs2/ocfs2_stackglue	EXPORT_SYMBOL_GPL
+0x782a7192	nfs_generic_pg_test	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0x86f8894f	fscache_object_states	fs/fscache/fscache	EXPORT_SYMBOL
+0x43c88240	lbs_notify_command_response	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0xacf7e50a	ppp_unit_number	drivers/net/ppp/ppp_generic	EXPORT_SYMBOL
+0xbdbf7f78	ppp_input_error	drivers/net/ppp/ppp_generic	EXPORT_SYMBOL
+0xad466018	quota_send_warning	vmlinux	EXPORT_SYMBOL
+0x1d4d6185	__dquot_transfer	vmlinux	EXPORT_SYMBOL
+0x5460c8d8	fsnotify_get_cookie	vmlinux	EXPORT_SYMBOL_GPL
+0x171b577b	unregister_kprobes	vmlinux	EXPORT_SYMBOL_GPL
+0xe159e1df	m2p_add_override	vmlinux	EXPORT_SYMBOL_GPL
+0x1becf870	__snd_hda_add_vmaster	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x48cee851	p9_client_link	net/9p/9pnet	EXPORT_SYMBOL
+0xe04aac2e	usb_serial_generic_open	drivers/usb/serial/usbserial	EXPORT_SYMBOL_GPL
+0xc370a43e	ieee80211_wlan_frequencies_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x8a259003	ieee80211_start_send_beacons_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x40076b8a	scsi_finish_command	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x79e98a2a	fc_exch_init	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0xe8edd50a	il_mac_remove_interface	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x3d89e2e0	v4l2_device_disconnect	drivers/media/video/videodev	EXPORT_SYMBOL_GPL
+0x80e3832d	dvb_filter_get_ac3info	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0x37289d64	ahci_reset_em	drivers/ata/libahci	EXPORT_SYMBOL_GPL
+0x1d2b0e8e	dcb_getapp	vmlinux	EXPORT_SYMBOL
+0x972466e2	dcb_setapp	vmlinux	EXPORT_SYMBOL
+0xea319749	register_netdevice	vmlinux	EXPORT_SYMBOL
+0x8a743689	ps2_init	vmlinux	EXPORT_SYMBOL
+0x3a32839e	intel_gtt_chipset_flush	vmlinux	EXPORT_SYMBOL
+0x11f447ce	__gpio_to_irq	vmlinux	EXPORT_SYMBOL_GPL
+0x1d21d158	gen_pool_add_virt	vmlinux	EXPORT_SYMBOL
+0x5436edf7	user_describe	vmlinux	EXPORT_SYMBOL_GPL
+0x12c696c1	blkdev_get	vmlinux	EXPORT_SYMBOL
+0xa22c4b0c	blkdev_put	vmlinux	EXPORT_SYMBOL
+0xabd63f09	count_vma_pages_range	vmlinux	EXPORT_SYMBOL
+0xebac3efe	unregister_ftrace_event	vmlinux	EXPORT_SYMBOL_GPL
+0x73f369bc	ip_set_type_unregister	net/netfilter/ipset/ip_set	EXPORT_SYMBOL_GPL
+0x458f983c	ebt_do_table	net/bridge/netfilter/ebtables	EXPORT_SYMBOL
+0xe36a71d8	hci_unregister_cb	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x418fd0e7	fscache_enqueue_operation	fs/fscache/fscache	EXPORT_SYMBOL
+0x2b16d7f9	md_wait_for_blocked_rdev	drivers/md/md-mod	EXPORT_SYMBOL
+0xbd4eebb5	build_skb	vmlinux	EXPORT_SYMBOL
+0x58af54b1	snd_virmidi_new	sound/core/seq/snd-seq-virmidi	EXPORT_SYMBOL
+0xb90fc0a0	jbd2_journal_begin_ordered_truncate	fs/jbd2/jbd2	EXPORT_SYMBOL
+0xb6856718	jbd2_trans_will_send_data_barrier	fs/jbd2/jbd2	EXPORT_SYMBOL
+0x38a995eb	ata_sff_tf_load	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x23d61410	tcp_get_info	vmlinux	EXPORT_SYMBOL_GPL
+0x418da725	__alloc_skb	vmlinux	EXPORT_SYMBOL
+0x103f22ec	regmap_get_val_bytes	vmlinux	EXPORT_SYMBOL_GPL
+0x4bba0933	xen_biovec_phys_mergeable	vmlinux	EXPORT_SYMBOL
+0x8226642f	__gpio_cansleep	vmlinux	EXPORT_SYMBOL_GPL
+0xa6adb6be	mutex_trylock	vmlinux	EXPORT_SYMBOL
+0xe24d3a97	jiffies_64	vmlinux	EXPORT_SYMBOL
+0xeda3a721	snd_print_pcm_bits	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x6ca0d947	svc_create	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xe40b1ea3	rpc_lookup_machine_cred	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x0ed9664f	p9_client_setattr	net/9p/9pnet	EXPORT_SYMBOL
+0xdc823ea4	ocfs2_cluster_disconnect	fs/ocfs2/ocfs2_stackglue	EXPORT_SYMBOL_GPL
+0x9117bcd9	iscsi_tcp_segment_done	drivers/scsi/libiscsi_tcp	EXPORT_SYMBOL_GPL
+0x68bbff9d	mptscsih_abort	drivers/message/fusion/mptscsih	EXPORT_SYMBOL
+0xb47add84	pi_disconnect	drivers/block/paride/paride	EXPORT_SYMBOL
+0xd4436f6f	kvm_inject_pending_timer_irqs	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x310a12cf	svga_tilecursor	drivers/video/svgalib	EXPORT_SYMBOL
+0x04b6d933	umc_device_register	drivers/uwb/umc	EXPORT_SYMBOL_GPL
+0xdac3e021	videobuf_dma_init_user	drivers/media/video/videobuf-dma-sg	EXPORT_SYMBOL_GPL
+0x2a5e7d77	videobuf_queue_is_busy	drivers/media/video/videobuf-core	EXPORT_SYMBOL_GPL
+0x7af08e10	mantis_dvb_exit	drivers/media/dvb/mantis/mantis_core	EXPORT_SYMBOL_GPL
+0x72bed425	mantis_i2c_exit	drivers/media/dvb/mantis/mantis_core	EXPORT_SYMBOL_GPL
+0xd09c789f	mantis_pci_exit	drivers/media/dvb/mantis/mantis_core	EXPORT_SYMBOL_GPL
+0x7ba5b768	mantis_dma_exit	drivers/media/dvb/mantis/mantis_core	EXPORT_SYMBOL_GPL
+0x27639be5	saa7146_register_device	drivers/media/common/saa7146_vv	EXPORT_SYMBOL_GPL
+0x96d3ce0b	xfrm_state_migrate	vmlinux	EXPORT_SYMBOL
+0x1dc9d7c1	pci_cleanup_aer_uncorrect_error_status	vmlinux	EXPORT_SYMBOL_GPL
+0x6def2db2	half_md4_transform	vmlinux	EXPORT_SYMBOL
+0xb835b3e4	radix_tree_prev_hole	vmlinux	EXPORT_SYMBOL
+0xcd08c0ba	dcache_readdir	vmlinux	EXPORT_SYMBOL
+0x2575c4f7	inode_add_bytes	vmlinux	EXPORT_SYMBOL
+0x734b2e1d	thaw_super	vmlinux	EXPORT_SYMBOL
+0x6074bbbc	generic_file_mmap	vmlinux	EXPORT_SYMBOL
+0xa25a75f3	abort_creds	vmlinux	EXPORT_SYMBOL
+0x242fa537	ieee80211_alloc_hw	net/mac80211/mac80211	EXPORT_SYMBOL
+0x07f49e3f	ieee80211_stop_send_beacons_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x3635fd85	parport_pc_probe_port	drivers/parport/parport_pc	EXPORT_SYMBOL
+0xaeee1950	mptscsih_slave_configure	drivers/message/fusion/mptscsih	EXPORT_SYMBOL
+0x9adeab8c	dchannel_senddata	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0x24c1914e	drm_mode_create_dvi_i_properties	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x3eb37b9d	drm_ht_create	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x1d3fef27	tcp_alloc_md5sig_pool	vmlinux	EXPORT_SYMBOL
+0x38b92846	llc_remove_pack	vmlinux	EXPORT_SYMBOL
+0x4188d439	neigh_rand_reach_time	vmlinux	EXPORT_SYMBOL
+0x040521ce	dev_forward_skb	vmlinux	EXPORT_SYMBOL_GPL
+0x47688c17	sock_common_getsockopt	vmlinux	EXPORT_SYMBOL
+0xba8dfc9d	sock_common_setsockopt	vmlinux	EXPORT_SYMBOL
+0x8dc6e564	restore_processor_state	vmlinux	EXPORT_SYMBOL
+0x340a6d31	n_tty_inherit_ops	vmlinux	EXPORT_SYMBOL_GPL
+0x17614bf3	apei_resources_sub	vmlinux	EXPORT_SYMBOL_GPL
+0x65d6d0f0	gpio_direction_input	vmlinux	EXPORT_SYMBOL_GPL
+0x87aaddf8	wrmsr_safe_regs_on_cpu	vmlinux	EXPORT_SYMBOL
+0x65408378	zlib_inflate_blob	vmlinux	EXPORT_SYMBOL
+0xf12a5c83	idr_find	vmlinux	EXPORT_SYMBOL
+0xab148cba	vfs_mknod	vmlinux	EXPORT_SYMBOL
+0x8b859d87	add_node_tpd	vmlinux	EXPORT_SYMBOL
+0xd4efe018	cfg80211_disconnected	net/wireless/cfg80211	EXPORT_SYMBOL
+0x16528e3b	cfg80211_send_rx_auth	net/wireless/cfg80211	EXPORT_SYMBOL
+0x708e41c7	rt2x00queue_flush_queues	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0xc693f516	vsc824x_add_skew	drivers/net/phy/vitesse	EXPORT_SYMBOL
+0x439c504b	mlx4_multicast_attach	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x72fb5b8b	dvb_register_adapter	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0x5f2eaded	ib_get_rmpp_segment	drivers/infiniband/core/ib_mad	EXPORT_SYMBOL
+0x4ef94a12	tpm_read	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0xfb040b50	skb_dequeue	vmlinux	EXPORT_SYMBOL
+0xffa19009	acpi_gbl_FADT	vmlinux	EXPORT_SYMBOL
+0xd0fb69c5	filemap_write_and_wait	vmlinux	EXPORT_SYMBOL
+0x27bbf221	disable_irq_nosync	vmlinux	EXPORT_SYMBOL
+0x55a9e808	call_usermodehelper_freeinfo	vmlinux	EXPORT_SYMBOL
+0x00000000	softirq_work_list	vmlinux	EXPORT_SYMBOL
+0x782b9725	irda_notify_init	net/irda/irda	EXPORT_SYMBOL
+0x477ce7ac	dccp_create_openreq_child	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xbe99a6a3	fc_get_pr_transport_id_len	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x1c36e3dd	osduld_info_lookup	drivers/scsi/osd/osd	EXPORT_SYMBOL
+0x9c6c04a2	rt2800_config_ant	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0x59900b54	il_alloc_txq_mem	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xc38224be	mlx4_srq_query	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x6c702003	register_dca_provider	drivers/dca/dca	EXPORT_SYMBOL_GPL
+0xf79a7c14	dma_buf_kunmap_atomic	vmlinux	EXPORT_SYMBOL_GPL
+0x2c4441bc	__pm_relax	vmlinux	EXPORT_SYMBOL_GPL
+0xf7584a9c	find_font	vmlinux	EXPORT_SYMBOL
+0x14e7ca7c	alloc_cpu_rmap	vmlinux	EXPORT_SYMBOL
+0xa7f92105	add_uevent_var	vmlinux	EXPORT_SYMBOL_GPL
+0xae491eb7	dccp_child_process	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x0c65fd79	p9_client_read	net/9p/9pnet	EXPORT_SYMBOL
+0xfb3ba025	mite_list_devices	drivers/staging/comedi/drivers/mite	EXPORT_SYMBOL
+0xfce58d49	ipmi_smi_watcher_unregister	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0x4c00eace	netdev_features_change	vmlinux	EXPORT_SYMBOL
+0xf75ba370	platform_get_resource_byname	vmlinux	EXPORT_SYMBOL_GPL
+0xda1ce447	cpu_online_mask	vmlinux	EXPORT_SYMBOL
+0x892b26a0	set_memory_nx	vmlinux	EXPORT_SYMBOL
+0x566690d9	smp_ops	vmlinux	EXPORT_SYMBOL_GPL
+0x62813e5c	nf_ct_port_nlattr_tuple_size	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x8ed2f651	p9_client_write	net/9p/9pnet	EXPORT_SYMBOL
+0x97299332	notify_wx_assoc_event_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0xaa83bd8a	phy_start	drivers/net/phy/libphy	EXPORT_SYMBOL
+0xab042089	mpt_register	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0x4646d73d	drm_mode_probed_add	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x88954ca3	kvm_init	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xfd60295f	devres_find	vmlinux	EXPORT_SYMBOL_GPL
+0xc57ab7bc	proc_dostring	vmlinux	EXPORT_SYMBOL
+0xb54533f7	usecs_to_jiffies	vmlinux	EXPORT_SYMBOL
+0x8e4c6826	snd_hda_calc_stream_format	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x1bc6b833	xt_hook_link	net/netfilter/x_tables	EXPORT_SYMBOL_GPL
+0x46e9d1f1	fc_fc4_register_provider	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x63e66e92	rtl92c_phy_sw_chnl	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0x0e7fb43a	ib_query_pkey	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x40fedc1b	__kvm_set_memory_region	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x07ec8534	genlmsg_put	vmlinux	EXPORT_SYMBOL
+0x883a1f6c	xen_swiotlb_unmap_sg	vmlinux	EXPORT_SYMBOL_GPL
+0x9c67bfd2	pci_bus_write_config_byte	vmlinux	EXPORT_SYMBOL
+0x96b43170	sysfs_schedule_callback	vmlinux	EXPORT_SYMBOL_GPL
+0xabcaa577	free_anon_bdev	vmlinux	EXPORT_SYMBOL
+0xfb7d26f4	files_lglock_lock_init	vmlinux	EXPORT_SYMBOL
+0x0fee91b7	ircomm_connect_request	net/irda/ircomm/ircomm	EXPORT_SYMBOL
+0xad0b843f	journal_force_commit_nested	fs/jbd/jbd	EXPORT_SYMBOL
+0x5ee67d94	w1_reset_bus	drivers/w1/wire	EXPORT_SYMBOL_GPL
+0xaecdabdd	usb_stor_control_msg	drivers/usb/storage/usb-storage	EXPORT_SYMBOL_GPL
+0x2147d198	orinoco_down	drivers/net/wireless/orinoco/orinoco	EXPORT_SYMBOL
+0xb4b77c8b	hostap_80211_get_hdrlen	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x9184ceac	ath9k_hw_reset	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x913d957f	raw_hash_sk	vmlinux	EXPORT_SYMBOL_GPL
+0xa2ef34d7	rps_sock_flow_table	vmlinux	EXPORT_SYMBOL
+0x07da4d95	skb_insert	vmlinux	EXPORT_SYMBOL
+0xbd4e5a02	dev_emerg	vmlinux	EXPORT_SYMBOL
+0x770a0036	isapnp_cfg_begin	vmlinux	EXPORT_SYMBOL
+0x5372dede	unregister_acpi_bus_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0x1c132024	request_any_context_irq	vmlinux	EXPORT_SYMBOL_GPL
+0xd646a747	uio_unregister_device	drivers/uio/uio	EXPORT_SYMBOL_GPL
+0x616ea55a	hostap_set_auth_algs	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x740d5753	i2o_dma_realloc	drivers/message/i2o/i2o_core	EXPORT_SYMBOL_GPL
+0x500858b9	i915_read_mch_val	drivers/gpu/drm/i915/i915	EXPORT_SYMBOL_GPL
+0x7a9bf88d	udplite_table	vmlinux	EXPORT_SYMBOL
+0x7b73ef5d	tc_classify_compat	vmlinux	EXPORT_SYMBOL
+0xdd0b1347	blkiocg_lookup_group	vmlinux	EXPORT_SYMBOL_GPL
+0xd9d37c7c	blk_queue_max_segment_size	vmlinux	EXPORT_SYMBOL
+0x28624143	snd_hda_add_vmaster_hook	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x148c86c1	jbd2_journal_file_inode	fs/jbd2/jbd2	EXPORT_SYMBOL
+0xe61f79f7	log_wait_commit	fs/jbd/jbd	EXPORT_SYMBOL
+0x28da5b24	usb_gadget_unmap_request	drivers/usb/gadget/udc-core	EXPORT_SYMBOL_GPL
+0x86f61215	kill_mtd_super	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0x40a2d1dd	dm_table_get_size	drivers/md/dm-mod	EXPORT_SYMBOL
+0x8dfb019d	drm_buffer_free	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x6c302ee8	ahci_shost_attrs	drivers/ata/libahci	EXPORT_SYMBOL_GPL
+0xef23d470	klist_add_tail	vmlinux	EXPORT_SYMBOL_GPL
+0x42b1eec8	dev_kfree_skb_irq	vmlinux	EXPORT_SYMBOL
+0xd2a75ee0	dmi_first_match	vmlinux	EXPORT_SYMBOL
+0x600683d3	do_unblank_screen	vmlinux	EXPORT_SYMBOL
+0xd0458ccb	xenbus_strstate	vmlinux	EXPORT_SYMBOL_GPL
+0x28a1c857	pci_find_ext_capability	vmlinux	EXPORT_SYMBOL_GPL
+0x6e9dd606	__symbol_put	vmlinux	EXPORT_SYMBOL
+0x2b333d51	snd_ac97_get_short_name	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0x288b7c5a	ssb_dma_translation	drivers/ssb/ssb	EXPORT_SYMBOL
+0x831e624b	lbs_cmd_copyback	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0x5d9c2ac4	genphy_restart_aneg	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x48f26fa2	vb2_streamon	drivers/media/video/videobuf2-core	EXPORT_SYMBOL_GPL
+0xb415253c	cx231xx_init_isoc	drivers/media/video/cx231xx/cx231xx	EXPORT_SYMBOL_GPL
+0x71d9ee73	netpoll_send_udp	vmlinux	EXPORT_SYMBOL
+0xa5da0abd	acpi_enter_sleep_state_s4bios	vmlinux	EXPORT_SYMBOL
+0x28208d70	pci_claim_resource	vmlinux	EXPORT_SYMBOL
+0x9b388444	get_zeroed_page	vmlinux	EXPORT_SYMBOL
+0x1a010f31	snd_pcm_lib_read	sound/core/snd-pcm	EXPORT_SYMBOL
+0x4d3af7fa	ocfs2_cluster_hangup	fs/ocfs2/ocfs2_stackglue	EXPORT_SYMBOL_GPL
+0x1bd99bda	lbs_host_to_card_done	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0xfa53ffcb	mpt_raid_phys_disk_pg0	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0x552c8cf8	input_close_device	vmlinux	EXPORT_SYMBOL
+0xa0338c7e	key_validate	vmlinux	EXPORT_SYMBOL
+0x650f8603	snd_pcm_format_silence_64	sound/core/snd-pcm	EXPORT_SYMBOL
+0x6e6a16fc	tcp_vegas_init	net/ipv4/tcp_vegas	EXPORT_SYMBOL_GPL
+0x3fd8cd71	qlogicfas408_detect	drivers/scsi/qlogicfas408	EXPORT_SYMBOL
+0xfd381376	iscsi_eh_recover_target	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0x22cc1651	phy_connect_direct	drivers/net/phy/libphy	EXPORT_SYMBOL
+0xa1958c58	v4l2_device_unregister	drivers/media/video/videodev	EXPORT_SYMBOL_GPL
+0x4b46325a	md_stop	drivers/md/md-mod	EXPORT_SYMBOL_GPL
+0x50b33ca4	capi_cmsg2message	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0xcb0c8bf5	drm_mode_connector_update_edid_property	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x1db790ab	ata_std_error_handler	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x802419fc	rtnl_create_link	vmlinux	EXPORT_SYMBOL
+0x09e95d1d	tty_insert_flip_string_flags	vmlinux	EXPORT_SYMBOL
+0x8d57be40	__copy_from_user_ll_nocache_nozero	vmlinux	EXPORT_SYMBOL
+0x8b2564f2	address_space_init_once	vmlinux	EXPORT_SYMBOL
+0xfda0dbe8	ftrace_print_hex_seq	vmlinux	EXPORT_SYMBOL
+0xc63cc125	prepare_to_wait_exclusive	vmlinux	EXPORT_SYMBOL
+0xfe7f0d4f	bt_sock_ioctl	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0xfff2dfd2	viafb_gpio_lookup	drivers/video/via/viafb	EXPORT_SYMBOL_GPL
+0xe1716f06	uwb_est_register	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0xa35315b9	ubi_open_volume_nm	drivers/mtd/ubi/ubi	EXPORT_SYMBOL_GPL
+0xfd6f0ef9	ubi_unregister_volume_notifier	drivers/mtd/ubi/ubi	EXPORT_SYMBOL_GPL
+0x70d1f3c9	b1_release_appl	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0x6a78f79d	ttm_bo_mmap	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x654a246b	ttm_bo_kmap	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x45504103	drm_mode_height	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x4d5d4eca	fw_core_remove_descriptor	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0x8f4b8c58	xfrm_audit_state_replay	vmlinux	EXPORT_SYMBOL_GPL
+0x89c9132a	inet_dev_addr_type	vmlinux	EXPORT_SYMBOL
+0x4b341edf	tcf_action_exec	vmlinux	EXPORT_SYMBOL
+0x5291ef3d	platform_device_add	vmlinux	EXPORT_SYMBOL_GPL
+0x03472412	debugfs_create_size_t	vmlinux	EXPORT_SYMBOL_GPL
+0x29a82e1c	remove_proc_entry	vmlinux	EXPORT_SYMBOL
+0xafd330e1	arpt_register_table	net/ipv4/netfilter/arp_tables	EXPORT_SYMBOL
+0x3158173e	ceph_pagelist_release	net/ceph/libceph	EXPORT_SYMBOL
+0x8daa4210	ulist_add	fs/btrfs/btrfs	EXPORT_SYMBOL
+0x49d87e10	ssb_bus_powerup	drivers/ssb/ssb	EXPORT_SYMBOL
+0x2fe57427	rtl_usb_disconnect	drivers/net/wireless/rtlwifi/rtlwifi	EXPORT_SYMBOL
+0x2e8e6f51	ttm_bo_lock_delayed_workqueue	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x5cb8137a	drm_connector_unplug_all	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x7ab6927b	ipv6_opt_accepted	vmlinux	EXPORT_SYMBOL_GPL
+0xa6111e3d	xfrm_spd_getinfo	vmlinux	EXPORT_SYMBOL
+0x21dcd50e	dm_kobject_release	vmlinux	EXPORT_SYMBOL
+0xb7f9f1be	pci_walk_bus	vmlinux	EXPORT_SYMBOL_GPL
+0x3a282b2d	block_is_partially_uptodate	vmlinux	EXPORT_SYMBOL
+0xd9ecb670	ring_buffer_overruns	vmlinux	EXPORT_SYMBOL_GPL
+0x8831f8b1	kmap_atomic_pfn	vmlinux	EXPORT_SYMBOL_GPL
+0x8edfb574	injectm	vmlinux	EXPORT_SYMBOL_GPL
+0x39bf9301	_snd_pcm_hw_param_setempty	sound/core/snd-pcm	EXPORT_SYMBOL
+0xcee467f3	xprt_load_transport	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x20346da9	atm_alloc_charge	net/atm/atm	EXPORT_SYMBOL
+0xfe4787c3	il_scan_cancel_timeout	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xf9b6f1d8	alloc_etherdev_mqs	vmlinux	EXPORT_SYMBOL
+0xfda48c58	uart_resume_port	vmlinux	EXPORT_SYMBOL
+0x6872e514	snd_vx_dsp_boot	sound/drivers/vx/snd-vx-lib	EXPORT_SYMBOL
+0xcc8c1107	rds_cong_map_updated	net/rds/rds	EXPORT_SYMBOL_GPL
+0x8ede9e26	ax25_protocol_release	net/ax25/ax25	EXPORT_SYMBOL
+0xfe9a24da	jbd2_journal_errno	fs/jbd2/jbd2	EXPORT_SYMBOL
+0x330054ee	parport_ieee1284_ecp_read_data	drivers/parport/parport	EXPORT_SYMBOL
+0x083dc381	parport_ieee1284_epp_read_data	drivers/parport/parport	EXPORT_SYMBOL
+0x923ae079	rt2800_sta_add	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0x2b8eab1f	capilib_free_ncci	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x7f922a3e	ttm_bo_mem_put	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0xbbe76c29	kvm_clear_guest	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x77985136	ps2_handle_ack	vmlinux	EXPORT_SYMBOL
+0xf168ec36	pm_relax	vmlinux	EXPORT_SYMBOL_GPL
+0xca4be59b	ahash_free_instance	vmlinux	EXPORT_SYMBOL_GPL
+0xbc8bf58f	dquot_transfer	vmlinux	EXPORT_SYMBOL
+0x4bb6098c	bdi_register_dev	vmlinux	EXPORT_SYMBOL
+0xf7b03908	xt_rateest_lookup	net/netfilter/xt_RATEEST	EXPORT_SYMBOL_GPL
+0x2f0be01a	lapb_register	net/lapb/lapb	EXPORT_SYMBOL
+0xc9e99810	nfs_commit_clear_lock	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0x46b5a80e	fc_elsct_send	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x1d9bc3d7	md_wakeup_thread	drivers/md/md-mod	EXPORT_SYMBOL
+0x3e0c6ca0	drm_agp_release	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x2a15d62b	drm_clflush_pages	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x0d73eeca	ata_std_bios_param	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xbd506a46	unregister_hotplug_dock_device	vmlinux	EXPORT_SYMBOL_GPL
+0xf9b57926	pagecache_write_end	vmlinux	EXPORT_SYMBOL
+0x2a694e1c	tracepoint_iter_reset	vmlinux	EXPORT_SYMBOL_GPL
+0x76675ff4	rpc_clone_client	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xa8082b60	irda_device_set_media_busy	net/irda/irda	EXPORT_SYMBOL
+0x2c4770ff	rndis_tx_fixup	drivers/net/usb/rndis_host	EXPORT_SYMBOL_GPL
+0x7577f992	mdio_set_flag	drivers/net/mdio	EXPORT_SYMBOL
+0xad4893ca	sdio_f0_readb	drivers/mmc/core/mmc_core	EXPORT_SYMBOL_GPL
+0x50d75225	v4l2_subdev_try_ext_ctrls	drivers/media/video/videodev	EXPORT_SYMBOL
+0x78bb2011	dm_ratelimit_state	drivers/md/dm-mod	EXPORT_SYMBOL
+0x08a349d6	hidinput_get_led_field	drivers/hid/hid	EXPORT_SYMBOL_GPL
+0x510b6890	hid_resolv_usage	drivers/hid/hid	EXPORT_SYMBOL_GPL
+0xe5ac4909	drm_read	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xc6913cc2	xfrm_audit_state_icvfail	vmlinux	EXPORT_SYMBOL_GPL
+0xb9da2997	snmp_fold_field64	vmlinux	EXPORT_SYMBOL_GPL
+0xfff80bd5	spi_register_master	vmlinux	EXPORT_SYMBOL_GPL
+0xd72feba2	xenbus_read_driver_state	vmlinux	EXPORT_SYMBOL_GPL
+0xcc36f32e	fb_unregister_client	vmlinux	EXPORT_SYMBOL
+0x87925ca6	kstrtoint_from_user	vmlinux	EXPORT_SYMBOL
+0xfde0b92c	crypto_larval_error	vmlinux	EXPORT_SYMBOL_GPL
+0x3a4dc6c6	__nf_ct_l4proto_find	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x14d35e0e	ip_vs_conn_out_get	net/netfilter/ipvs/ip_vs	EXPORT_SYMBOL
+0x93136f41	vcc_sklist_lock	net/atm/atm	EXPORT_SYMBOL
+0xff670f74	fcoe_transport_detach	drivers/scsi/fcoe/libfcoe	EXPORT_SYMBOL
+0xc80ed7e8	drm_fb_helper_debug_enter	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0x424e8618	xfrm_inner_extract_output	vmlinux	EXPORT_SYMBOL_GPL
+0x64bb604f	inet_csk_init_xmit_timers	vmlinux	EXPORT_SYMBOL
+0x1b52db1c	probe_kernel_read	vmlinux	EXPORT_SYMBOL_GPL
+0x1a8c41cc	kmap_atomic_prot	vmlinux	EXPORT_SYMBOL
+0x15010e1f	arbitrary_virt_to_machine	vmlinux	EXPORT_SYMBOL_GPL
+0xdcc119e1	ceph_con_open	net/ceph/libceph	EXPORT_SYMBOL
+0x40506802	p9_release_pages	net/9p/9pnet	EXPORT_SYMBOL
+0x5ad81a9e	rpipe_ep_disable	drivers/usb/wusbcore/wusb-wa	EXPORT_SYMBOL_GPL
+0xc1d3bfc0	dvb_ca_en50221_camready_irq	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0xbf3867ba	drm_mode_prune_invalid	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x579a169c	dev_pm_get_subsys_data	vmlinux	EXPORT_SYMBOL_GPL
+0x6352a53f	dev_pm_put_subsys_data	vmlinux	EXPORT_SYMBOL_GPL
+0x6b2fe5ee	transport_add_device	vmlinux	EXPORT_SYMBOL_GPL
+0x4e57723d	apei_read	vmlinux	EXPORT_SYMBOL_GPL
+0xa62fbf69	vfs_readlink	vmlinux	EXPORT_SYMBOL
+0x307f7776	timecompare_offset	vmlinux	EXPORT_SYMBOL_GPL
+0x5dce6b75	complete_and_exit	vmlinux	EXPORT_SYMBOL
+0xb44db776	snd_hda_add_new_ctls	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x060e6c5e	scsi_nl_sock	drivers/scsi/scsi_mod	EXPORT_SYMBOL_GPL
+0xac7885ee	mlx4_buf_write_mtt	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xbabf8a20	arcnet_timeout	drivers/net/arcnet/arcnet	EXPORT_SYMBOL
+0x1486a9ca	em28xx_unregister_extension	drivers/media/video/em28xx/em28xx	EXPORT_SYMBOL
+0x3599e0e5	xc2028_attach	drivers/media/common/tuners/tuner-xc2028	EXPORT_SYMBOL
+0x4d0a8988	capi_ctr_ready	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x5158cbcd	inet6_lookup	vmlinux	EXPORT_SYMBOL_GPL
+0x870e16b7	xen_test_irq_shared	vmlinux	EXPORT_SYMBOL_GPL
+0xff6878cf	fb_default_cmap	vmlinux	EXPORT_SYMBOL
+0xbf0a1514	sysfs_remove_group	vmlinux	EXPORT_SYMBOL_GPL
+0xfb4b40a7	sysfs_remove_file_from_group	vmlinux	EXPORT_SYMBOL_GPL
+0x9aca444b	get_monotonic_boottime	vmlinux	EXPORT_SYMBOL_GPL
+0x24f169fc	down_read_trylock	vmlinux	EXPORT_SYMBOL
+0x75026b24	snd_msndmidi_input_read	sound/isa/msnd/snd-msnd-lib	EXPORT_SYMBOL
+0xc3b062db	ip_set_nfnl_get_byindex	net/netfilter/ipset/ip_set	EXPORT_SYMBOL_GPL
+0xd36735c1	wpan_phy_register	net/ieee802154/ieee802154	EXPORT_SYMBOL
+0xecec4133	rt2x00lib_rxdone	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x93f2c465	dcbnl_cee_notify	vmlinux	EXPORT_SYMBOL
+0x7ae5cdfc	cpufreq_register_driver	vmlinux	EXPORT_SYMBOL_GPL
+0xf2caee1e	serial8250_handle_irq	vmlinux	EXPORT_SYMBOL_GPL
+0x9833bc0c	hvc_kick	vmlinux	EXPORT_SYMBOL_GPL
+0x769027a7	nf_nat_set_seq_adjust	net/ipv4/netfilter/nf_nat	EXPORT_SYMBOL_GPL
+0xcbb738be	nfs4_acl_posix_to_nfsv4	fs/nfsd/nfsd	EXPORT_SYMBOL
+0x34dc1fb9	uwb_radio_stop	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0x0cb32255	mlx4_wol_write	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xe0f663b3	ib_register_client	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x52c45063	i2c_smbus_xfer	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0xfbc2c5ec	ttm_object_file_release	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x69259f22	edac_mem_types	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x1982c713	nf_setsockopt	vmlinux	EXPORT_SYMBOL
+0xe2624715	nf_getsockopt	vmlinux	EXPORT_SYMBOL
+0x579e0bf5	rtnl_unregister_all	vmlinux	EXPORT_SYMBOL_GPL
+0x6d2de93a	netif_rx_ni	vmlinux	EXPORT_SYMBOL
+0x8109d591	ps2_begin_command	vmlinux	EXPORT_SYMBOL
+0xaf1a29ee	dev_pm_qos_remove_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0xe642f009	device_attach	vmlinux	EXPORT_SYMBOL_GPL
+0x13c58e04	tty_port_open	vmlinux	EXPORT_SYMBOL
+0x3682c5df	alloc_disk	vmlinux	EXPORT_SYMBOL
+0x7ba1c442	blk_rq_map_user_iov	vmlinux	EXPORT_SYMBOL
+0xbd6e8994	ioc_lookup_icq	vmlinux	EXPORT_SYMBOL
+0xba1b7992	dquot_commit_info	vmlinux	EXPORT_SYMBOL
+0xb863e8df	seq_putc	vmlinux	EXPORT_SYMBOL
+0x96a592f6	seq_puts	vmlinux	EXPORT_SYMBOL
+0xa452c297	hpet_mask_rtc_irq_bit	vmlinux	EXPORT_SYMBOL_GPL
+0x5e0fb2cf	snd_pcm_hw_param_last	sound/core/snd-pcm	EXPORT_SYMBOL
+0xb90668b2	snd_seq_autoload_lock	sound/core/seq/snd-seq-device	EXPORT_SYMBOL
+0x033ba2e3	usb_create_shared_hcd	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x1bebdb98	comedi_dio_config	drivers/staging/comedi/kcomedilib/kcomedilib	EXPORT_SYMBOL
+0x46809fa9	ips_link_to_i915_driver	drivers/platform/x86/intel_ips	EXPORT_SYMBOL_GPL
+0x841f8739	ath9k_hw_cfg_gpio_input	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xaae72487	ata_dev_disable	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xd4dcade1	uart_update_timeout	vmlinux	EXPORT_SYMBOL
+0x23ff4359	part_round_stats	vmlinux	EXPORT_SYMBOL_GPL
+0xe2702114	d_genocide	vmlinux	EXPORT_SYMBOL
+0x1ae0e135	tracing_generic_entry_update	vmlinux	EXPORT_SYMBOL_GPL
+0xf201f1ed	__module_put_and_exit	vmlinux	EXPORT_SYMBOL
+0x43a53735	__alloc_workqueue_key	vmlinux	EXPORT_SYMBOL_GPL
+0x3fe92d0a	mce_register_decode_chain	vmlinux	EXPORT_SYMBOL_GPL
+0x2acab0e5	cfg80211_report_obss_beacon	net/wireless/cfg80211	EXPORT_SYMBOL
+0x8b0dfc0d	ceph_monc_stop	net/ceph/libceph	EXPORT_SYMBOL
+0xcffa2aff	spi_populate_width_msg	drivers/scsi/scsi_transport_spi	EXPORT_SYMBOL_GPL
+0x47a83d60	i2400m_cmd_enter_powersave	drivers/net/wimax/i2400m/i2400m	EXPORT_SYMBOL_GPL
+0x81b69e41	snd_ctl_enum_info	sound/core/snd	EXPORT_SYMBOL
+0xff805f04	tcp_vegas_cwnd_event	net/ipv4/tcp_vegas	EXPORT_SYMBOL_GPL
+0x56947347	dmi_walk	vmlinux	EXPORT_SYMBOL_GPL
+0xb2b94674	__crc32c_le	vmlinux	EXPORT_SYMBOL
+0xaaf5edb4	elv_dispatch_add_tail	vmlinux	EXPORT_SYMBOL
+0x980f2259	end_buffer_write_sync	vmlinux	EXPORT_SYMBOL
+0x0a730451	d_drop	vmlinux	EXPORT_SYMBOL
+0xf2bad62f	d_rehash	vmlinux	EXPORT_SYMBOL
+0xd35f37e1	file_open_root	vmlinux	EXPORT_SYMBOL
+0x42ef6bbf	flush_kthread_work	vmlinux	EXPORT_SYMBOL_GPL
+0x40a56ff9	fw_iso_resources_update	sound/firewire/snd-firewire-lib	EXPORT_SYMBOL
+0x1b376294	wusbhc_reset_all	drivers/usb/wusbcore/wusbcore	EXPORT_SYMBOL_GPL
+0x5c2b6c0a	usb_poison_urb	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x3035a52f	__mmc_claim_host	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0xde04fd2a	b1_alloc_card	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0x0720ff45	pci_get_class	vmlinux	EXPORT_SYMBOL
+0x6b1b67d3	__bdevname	vmlinux	EXPORT_SYMBOL
+0x580a806e	vfs_write	vmlinux	EXPORT_SYMBOL
+0x1be266b8	set_pages_nx	vmlinux	EXPORT_SYMBOL
+0xdc8d46c1	snd_kctl_jack_new	sound/core/snd	EXPORT_SYMBOL_GPL
+0x671f7fcc	snd_pcm_hw_refine	sound/core/snd-pcm	EXPORT_SYMBOL
+0x512c956d	mraid_mm_unregister_adp	drivers/scsi/megaraid/megaraid_mm	EXPORT_SYMBOL
+0xca2bde4d	dm_tm_open_with_sm	drivers/md/persistent-data/dm-persistent-data	EXPORT_SYMBOL_GPL
+0x0e34df58	dm_set_device_limits	drivers/md/dm-mod	EXPORT_SYMBOL_GPL
+0xa79d71c2	netif_rx	vmlinux	EXPORT_SYMBOL
+0xa7cf6c2f	atomic64_dec_return_cx8	vmlinux	EXPORT_SYMBOL
+0xd35bfc3e	swiotlb_sync_sg_for_cpu	vmlinux	EXPORT_SYMBOL
+0x955b0e2e	kthread_worker_fn	vmlinux	EXPORT_SYMBOL_GPL
+0x112556c6	snd_hda_power_up	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xfd7f5a18	unregister_ip_vs_app	net/netfilter/ipvs/ip_vs	EXPORT_SYMBOL
+0x639fe90c	usb_create_hcd	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x9e00127c	comedi_find_subdevice_by_type	drivers/staging/comedi/kcomedilib/kcomedilib	EXPORT_SYMBOL
+0x72ea7b2d	scsi_device_type	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x0ba1481d	rt2x00lib_probe_dev	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x54755fa6	dib0090_fw_register	drivers/media/dvb/frontends/dib0090	EXPORT_SYMBOL
+0x23c179ff	kvm_mmu_unload	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x16388c63	iw_handler_set_spy	vmlinux	EXPORT_SYMBOL
+0x23d6e4cd	xfrm_stateonly_find	vmlinux	EXPORT_SYMBOL
+0x5d12a9c6	blk_integrity_is_initialized	vmlinux	EXPORT_SYMBOL
+0x2c479ebf	rpc_get_sb_net	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xa3d2a634	g_attr_logical_length	fs/exofs/libore	EXPORT_SYMBOL
+0x3b36796c	usb_autopm_get_interface_no_resume	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x67c03d15	transport_generic_handle_data	drivers/target/target_core_mod	EXPORT_SYMBOL
+0xa9d67abd	can_bus_off	drivers/net/can/can-dev	EXPORT_SYMBOL_GPL
+0x6918f315	ib_dealloc_mw	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x318cadb1	reciprocal_value	vmlinux	EXPORT_SYMBOL
+0xd6a57e22	unregister_binfmt	vmlinux	EXPORT_SYMBOL
+0x0f987d24	alloc_vm_area	vmlinux	EXPORT_SYMBOL_GPL
+0x9b75cb81	_raw_read_trylock	vmlinux	EXPORT_SYMBOL
+0x0e1e0075	xdr_init_encode	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xb7a976ff	usb_serial_register_drivers	drivers/usb/serial/usbserial	EXPORT_SYMBOL_GPL
+0xadfa6556	pcmcia_request_io	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0x264e1678	rt2x00pci_flush_queue	drivers/net/wireless/rt2x00/rt2x00pci	EXPORT_SYMBOL_GPL
+0x9a8b3d66	ata_sff_check_status	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x29f20321	cryptd_ahash_child	crypto/cryptd	EXPORT_SYMBOL_GPL
+0x907665bd	scx200_cb_base	arch/x86/platform/scx200/scx200	EXPORT_SYMBOL
+0xd7f2d7ef	netdev_bonding_change	vmlinux	EXPORT_SYMBOL
+0x88586063	sk_reset_txq	vmlinux	EXPORT_SYMBOL
+0xe52f5f85	sock_no_accept	vmlinux	EXPORT_SYMBOL
+0x160ea4c8	sfi_disabled	vmlinux	EXPORT_SYMBOL
+0xf4b754fd	acpi_resources_are_enforced	vmlinux	EXPORT_SYMBOL
+0x7416dc9b	set_groups	vmlinux	EXPORT_SYMBOL
+0x3659a251	mmc_unregister_driver	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x0a5cd2a6	dvb_dmxdev_release	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0xec25f967	klist_del	vmlinux	EXPORT_SYMBOL_GPL
+0xd9617a29	tcf_generic_walker	vmlinux	EXPORT_SYMBOL
+0x12ff16ca	sock_diag_register_inet_compat	vmlinux	EXPORT_SYMBOL_GPL
+0x559c29bf	skb_dst_set_noref	vmlinux	EXPORT_SYMBOL
+0xb5da5fa5	elevator_exit	vmlinux	EXPORT_SYMBOL
+0x3cdd9c62	__lock_buffer	vmlinux	EXPORT_SYMBOL
+0x6c4c58a7	snd_ac97_write	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0x5812c87d	osd_req_get_attributes	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0x518aae58	osd_req_set_attributes	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0xcfa4ccb5	alloc_libipw	drivers/net/wireless/ipw2x00/libipw	EXPORT_SYMBOL
+0x5a8a5952	brcmu_pktq_pflush	drivers/net/wireless/brcm80211/brcmutil/brcmutil	EXPORT_SYMBOL
+0xd0dae981	ar9003_paprd_populate_single_table	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x0fd00a68	acpi_clear_event	vmlinux	EXPORT_SYMBOL
+0xbb0ab47b	debug_locks	vmlinux	EXPORT_SYMBOL_GPL
+0x942dff44	ablkcipher_walk_done	vmlinux	EXPORT_SYMBOL_GPL
+0xeec93f82	ablkcipher_walk_phys	vmlinux	EXPORT_SYMBOL_GPL
+0x3027a74f	aead_geniv_alloc	vmlinux	EXPORT_SYMBOL_GPL
+0x60cd73ed	pv_apic_ops	vmlinux	EXPORT_SYMBOL_GPL
+0x7924b6de	ip_set_hostmask_map	net/netfilter/ipset/ip_set	EXPORT_SYMBOL_GPL
+0xff62bbf8	tua6100_attach	drivers/media/dvb/frontends/tua6100	EXPORT_SYMBOL
+0xd0459e67	kvm_has_tsc_control	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x79d6d87f	dma_release_declared_memory	vmlinux	EXPORT_SYMBOL
+0x7538b132	agp_off	vmlinux	EXPORT_SYMBOL
+0x20a789ac	irq_set_chip_data	vmlinux	EXPORT_SYMBOL
+0x89c6f1d2	cfg80211_scan_done	net/wireless/cfg80211	EXPORT_SYMBOL
+0x59f06663	register_ip_vs_pe	net/netfilter/ipvs/ip_vs	EXPORT_SYMBOL_GPL
+0x11b04f74	cxgbi_sock_act_open_req_arp_failure	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0xc39cf12c	il_bg_watchdog	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x365ea10a	sirdev_set_dtr_rts	drivers/net/irda/sir-dev	EXPORT_SYMBOL
+0xf50edae5	videobuf_alloc_vb	drivers/media/video/videobuf-core	EXPORT_SYMBOL_GPL
+0xadb0968c	dm_unregister_path_selector	drivers/md/dm-multipath	EXPORT_SYMBOL_GPL
+0x898362c0	ata_eh_analyze_ncq_error	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x57d565d2	inet6_csk_xmit	vmlinux	EXPORT_SYMBOL_GPL
+0xfc9ad0b0	tcp_ioctl	vmlinux	EXPORT_SYMBOL
+0xaa3f13f7	register_acpi_hed_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0xea2a7a9a	registered_fb	vmlinux	EXPORT_SYMBOL
+0x2785e23f	vfs_symlink	vmlinux	EXPORT_SYMBOL
+0x38d54ec8	find_vpid	vmlinux	EXPORT_SYMBOL_GPL
+0xd273b1b1	__round_jiffies_up_relative	vmlinux	EXPORT_SYMBOL_GPL
+0xa0c71dac	spi_populate_sync_msg	drivers/scsi/scsi_transport_spi	EXPORT_SYMBOL_GPL
+0xe8b0749c	ttm_tt_set_placement_caching	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x1640566e	btree_insert	vmlinux	EXPORT_SYMBOL_GPL
+0x078b2f39	may_expand_vm	vmlinux	EXPORT_SYMBOL
+0x7f765f7c	unmap_mapping_range	vmlinux	EXPORT_SYMBOL
+0x8b618d08	overflowuid	vmlinux	EXPORT_SYMBOL
+0x7171121c	overflowgid	vmlinux	EXPORT_SYMBOL
+0xe230c3ac	fc_change_queue_depth	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x6cf695ba	free_libipw	drivers/net/wireless/ipw2x00/libipw	EXPORT_SYMBOL
+0xca4f70b0	mlx4_unregister_vlan	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xca644def	tpm_show_caps_1_2	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x558408e4	inet_select_addr	vmlinux	EXPORT_SYMBOL
+0x17e4ed89	dev_getbyhwaddr_rcu	vmlinux	EXPORT_SYMBOL
+0x0d7a4536	skb_flow_dissect	vmlinux	EXPORT_SYMBOL
+0x47a123af	dma_async_tx_descriptor_init	vmlinux	EXPORT_SYMBOL
+0x4243b4b8	pci_enable_device	vmlinux	EXPORT_SYMBOL
+0xb5c5a4fc	cpu_present_mask	vmlinux	EXPORT_SYMBOL
+0x4da574cf	xprt_release_xprt_cong	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xda461c01	ieee80211_proberesp_get	net/mac80211/mac80211	EXPORT_SYMBOL
+0x537a3680	_rtl92c_phy_fw_rf_serial_write	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0x4a52df3c	v4l2_subdev_g_ctrl	drivers/media/video/videodev	EXPORT_SYMBOL
+0x18c73e7b	v4l2_subdev_s_ctrl	drivers/media/video/videodev	EXPORT_SYMBOL
+0x5ff893ac	mISDN_register_device	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0x3bdd2c1e	__tracepoint_kvm_cr	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x3cfb3734	wireless_send_event	vmlinux	EXPORT_SYMBOL
+0xece07403	get_task_io_context	vmlinux	EXPORT_SYMBOL
+0x65432b5b	dcache_dir_close	vmlinux	EXPORT_SYMBOL
+0x6c2a57e9	display_list_tpd	vmlinux	EXPORT_SYMBOL
+0x3ef78d80	vm_get_page_prot	vmlinux	EXPORT_SYMBOL
+0x5e7cdd7f	rpc_wake_up_queued_task	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x10810cfe	scsi_dma_unmap	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x161dba5d	phy_driver_register	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x03ced457	dm_btree_lookup	drivers/md/persistent-data/dm-persistent-data	EXPORT_SYMBOL_GPL
+0x9173de97	ttm_bo_move_accel_cleanup	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x0b99f44d	unregister_snap_client	vmlinux	EXPORT_SYMBOL
+0x208becbe	sock_diag_nlsk	vmlinux	EXPORT_SYMBOL_GPL
+0x53f9810e	rtc_irq_set_state	vmlinux	EXPORT_SYMBOL_GPL
+0xcc61d863	vga_set_legacy_decoding	vmlinux	EXPORT_SYMBOL
+0x9bd72b78	apei_write	vmlinux	EXPORT_SYMBOL_GPL
+0xe868c554	relay_reset	vmlinux	EXPORT_SYMBOL_GPL
+0x849f08ca	snd_akm4xxx_write	sound/i2c/other/snd-ak4xxx-adda	EXPORT_SYMBOL
+0x44f07838	nf_conntrack_register_notifier	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xa560e6f7	fscache_withdraw_cache	fs/fscache/fscache	EXPORT_SYMBOL
+0x4096e2f5	rt2800_config_intf	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0x936df7f5	phy_print_status	drivers/net/phy/libphy	EXPORT_SYMBOL
+0xd0d8fb9d	dm_exception_store_type_register	drivers/md/dm-snapshot	EXPORT_SYMBOL
+0x18dfbb6f	inet_put_port	vmlinux	EXPORT_SYMBOL
+0x32fab567	sock_no_connect	vmlinux	EXPORT_SYMBOL
+0x0e59dfa1	pci_remove_bus	vmlinux	EXPORT_SYMBOL
+0xcf86be58	dquot_mark_dquot_dirty	vmlinux	EXPORT_SYMBOL
+0xd2329de3	wait_for_completion_killable_timeout	vmlinux	EXPORT_SYMBOL
+0xb3305d52	send_remote_softirq	vmlinux	EXPORT_SYMBOL
+0x9cedf03b	snd_ice1712_akm4xxx_build_controls	sound/pci/ice1712/snd-ice17xx-ak4xxx	EXPORT_SYMBOL
+0x6777d14b	w1_write_block	drivers/w1/wire	EXPORT_SYMBOL_GPL
+0xe4e9052e	iscsi_boot_create_target	drivers/scsi/iscsi_boot_sysfs	EXPORT_SYMBOL_GPL
+0xfb3959db	mpt_attach	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0x83e742bb	itd1000_attach	drivers/media/dvb/frontends/itd1000	EXPORT_SYMBOL
+0x8c1c6b99	pi_init	drivers/block/paride/paride	EXPORT_SYMBOL
+0xe609e422	kvm_mmu_get_spte_hierarchy	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x10ecc52c	usb_amd_quirk_pll_enable	vmlinux	EXPORT_SYMBOL_GPL
+0x70d8ab82	acpi_acquire_global_lock	vmlinux	EXPORT_SYMBOL
+0x95e4d415	skcipher_geniv_alloc	vmlinux	EXPORT_SYMBOL_GPL
+0x6e224a7a	need_conntrack	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x56d47ecf	o2nm_node_put	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0x566d42c5	tm6000_unregister_extension	drivers/media/video/tm6000/tm6000	EXPORT_SYMBOL
+0x0983e94e	flexcop_device_kmalloc	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0x67bd3925	rdma_port_get_link_layer	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x4a358252	__bitmap_subset	vmlinux	EXPORT_SYMBOL
+0x0e6da44a	set_normalized_timespec	vmlinux	EXPORT_SYMBOL
+0x6f707417	hda_get_autocfg_input_label	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x81d86cc2	mb_cache_entry_get	fs/mbcache	EXPORT_SYMBOL
+0xbe7cdf1d	ei_get_stats	drivers/net/ethernet/8390/8390	EXPORT_SYMBOL
+0xf826deb0	dvb_filter_pes2ts	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0x905df896	ttm_tt_bind	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x5a4f826c	eth_type_trans	vmlinux	EXPORT_SYMBOL
+0x7e839751	debugfs_create_blob	vmlinux	EXPORT_SYMBOL_GPL
+0xc863e0b3	bioset_integrity_free	vmlinux	EXPORT_SYMBOL
+0xf97d5ddd	vm_insert_mixed	vmlinux	EXPORT_SYMBOL
+0xf9897e5f	send_sig	vmlinux	EXPORT_SYMBOL
+0x602c96f0	copy_to_user_fromio	sound/core/snd	EXPORT_SYMBOL
+0x2036ad06	irda_param_insert	net/irda/irda	EXPORT_SYMBOL
+0x8a872a3b	usb_stor_set_xfer_buf	drivers/usb/storage/usb-storage	EXPORT_SYMBOL_GPL
+0x100ced99	scsi_nonblockable_ioctl	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xf96ae0a3	libipw_get_channel	drivers/net/wireless/ipw2x00/libipw	EXPORT_SYMBOL
+0x491f17da	usbnet_change_mtu	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0x9fe9b274	wm8400_reg_read	drivers/mfd/wm8400-core	EXPORT_SYMBOL_GPL
+0xe9b9c893	wm8400_set_bits	drivers/mfd/wm8400-core	EXPORT_SYMBOL_GPL
+0xff0701c6	drm_vblank_count	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xf6b6e5e7	bcma_core_enable	drivers/bcma/bcma	EXPORT_SYMBOL_GPL
+0xaaf45875	acpi_lid_notifier_unregister	drivers/acpi/button	EXPORT_SYMBOL
+0x6d1b57c0	tcp_shutdown	vmlinux	EXPORT_SYMBOL
+0xfbea0279	tracepoint_iter_next	vmlinux	EXPORT_SYMBOL_GPL
+0xb2744b36	down_write_trylock	vmlinux	EXPORT_SYMBOL
+0x8bfe8c57	param_set_uint	vmlinux	EXPORT_SYMBOL
+0xf74f743b	rpc_init_wait_queue	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xf2df1f1e	usb_stor_ctrl_transfer	drivers/usb/storage/usb-storage	EXPORT_SYMBOL_GPL
+0x9d980852	cxgb4_pktgl_to_skb	drivers/net/ethernet/chelsio/cxgb4/cxgb4	EXPORT_SYMBOL
+0xd88620a3	sdio_set_host_pm_flags	drivers/mmc/core/mmc_core	EXPORT_SYMBOL_GPL
+0x127e892d	enclosure_for_each_device	drivers/misc/enclosure	EXPORT_SYMBOL_GPL
+0x77e6eb21	cdrom_open	drivers/cdrom/cdrom	EXPORT_SYMBOL
+0xf389fe60	__hw_addr_init	vmlinux	EXPORT_SYMBOL
+0x199ed0cd	net_disable_timestamp	vmlinux	EXPORT_SYMBOL
+0x9d3850e1	gnttab_alloc_grant_references	vmlinux	EXPORT_SYMBOL_GPL
+0x777539b7	cpu_info	vmlinux	EXPORT_SYMBOL
+0x2c63e051	apple_bl_register	drivers/video/backlight/apple_bl	EXPORT_SYMBOL_GPL
+0x4afe9a77	scsi_partsize	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xf4b73a9a	osd_req_list_partition_collections	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0x7d675e79	mpt_put_msg_frame	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0x69e9a2cb	ata_scsi_slave_config	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xc32cd851	ata_pci_device_resume	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x834df967	dquot_set_dqinfo	vmlinux	EXPORT_SYMBOL
+0x068c7263	ioremap_cache	vmlinux	EXPORT_SYMBOL
+0xd16c2081	iscsi_conn_error_event	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0x6245e575	cxgbi_sock_rcv_abort_rpl	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0x1265ab5d	vb2_streamoff	drivers/media/video/videobuf2-core	EXPORT_SYMBOL_GPL
+0x9731bff1	drm_pci_alloc	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xe499a1ed	ata_port_pbar_desc	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xd54db897	cryptd_alloc_ahash	crypto/cryptd	EXPORT_SYMBOL_GPL
+0x4aaab2b1	groups_alloc	vmlinux	EXPORT_SYMBOL
+0xf9e9fb3e	p9_client_stat	net/9p/9pnet	EXPORT_SYMBOL
+0x571868dc	mite_setup2	drivers/staging/comedi/drivers/mite	EXPORT_SYMBOL
+0xc7016feb	cxgbi_ep_poll	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0x762ebfb4	pcf50633_write_block	drivers/mfd/pcf50633	EXPORT_SYMBOL_GPL
+0x445050b9	ib_create_cm_id	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0x48cb45af	__tracepoint_kvm_exit	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xf338d4c3	netlink_unregister_notifier	vmlinux	EXPORT_SYMBOL
+0x138aff76	gnttab_init	vmlinux	EXPORT_SYMBOL_GPL
+0x532ff1d0	simple_release_fs	vmlinux	EXPORT_SYMBOL
+0xdd1a2871	down	vmlinux	EXPORT_SYMBOL
+0x117c3ea5	iscsi_change_queue_depth	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0xbc3bc385	drm_sysfs_connector_add	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x423b776a	ipmi_create_user	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0xafda2660	xts_crypt	crypto/xts	EXPORT_SYMBOL_GPL
+0xa445e962	blk_end_request	vmlinux	EXPORT_SYMBOL
+0x4d9d6b94	inet_diag_dump_icsk	net/ipv4/inet_diag	EXPORT_SYMBOL_GPL
+0x4c4be419	ieee80211_softmac_xmit_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x8bc22ea2	scsi_host_put	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x60b30415	cxgbi_sock_rcv_close_conn_rpl	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0xb53e9381	ath9k_hw_name	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xac844493	arcnet_open	drivers/net/arcnet/arcnet	EXPORT_SYMBOL
+0x9b3f08fb	ubi_leb_write	drivers/mtd/ubi/ubi	EXPORT_SYMBOL_GPL
+0xcd652dbf	mtd_concat_create	drivers/mtd/mtd	EXPORT_SYMBOL
+0xfa508a23	videobuf_dvb_find_frontend	drivers/media/video/videobuf-dvb	EXPORT_SYMBOL
+0x01087af0	mISDN_dsp_element_unregister	drivers/isdn/mISDN/mISDN_dsp	EXPORT_SYMBOL
+0x422cbdfc	kvm_queue_exception	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x4e3e4b06	kvm_gfn_to_hva_cache_init	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x2e1ae47a	skb_put	vmlinux	EXPORT_SYMBOL
+0x3895cd7a	nfnl_unlock	net/netfilter/nfnetlink	EXPORT_SYMBOL_GPL
+0x37386cac	nf_conntrack_hash_rnd	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x3de64dee	nf_nat_proto_in_range	net/ipv4/netfilter/nf_nat	EXPORT_SYMBOL_GPL
+0x7dd2895d	configfs_depend_item	fs/configfs/configfs	EXPORT_SYMBOL
+0xd42253a8	w1_next_pullup	drivers/w1/wire	EXPORT_SYMBOL_GPL
+0xe726cf63	usb_ftdi_elan_read_pcimem	drivers/usb/misc/ftdi-elan	EXPORT_SYMBOL_GPL
+0x50463ce2	core_tpg_set_initiator_node_queue_depth	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x898cfcdd	sas_domain_release_transport	drivers/scsi/libsas/libsas	EXPORT_SYMBOL_GPL
+0x38ccc6dc	arcnet_close	drivers/net/arcnet/arcnet	EXPORT_SYMBOL
+0x62e32d43	capilib_data_b3_conf	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x886dae31	generic_block_fiemap	vmlinux	EXPORT_SYMBOL
+0xd7bd3af2	add_wait_queue	vmlinux	EXPORT_SYMBOL
+0x046c1f16	param_ops_invbool	vmlinux	EXPORT_SYMBOL
+0xb39f68d1	cyber2000fb_enable_extregs	drivers/video/cyber2000fb	EXPORT_SYMBOL
+0xe5f83d97	usb_hub_clear_tt_buffer	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xc2a343a0	brcmu_pktq_flush	drivers/net/wireless/brcm80211/brcmutil/brcmutil	EXPORT_SYMBOL
+0x28eca473	z8530_sync_close	drivers/net/wan/z85230	EXPORT_SYMBOL
+0xc14f6c91	vb2_poll	drivers/media/video/videobuf2-core	EXPORT_SYMBOL_GPL
+0x8cd6d108	ttm_bo_move_memcpy	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0xb94b024b	drm_helper_connector_dpms	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0x47ddd286	tpm_open	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x0388b1fd	ahci_sdev_attrs	drivers/ata/libahci	EXPORT_SYMBOL_GPL
+0x7a383b0e	kvm_vcpu_init	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x23120f02	dev_add_pack	vmlinux	EXPORT_SYMBOL
+0x9f984513	strrchr	vmlinux	EXPORT_SYMBOL
+0x0a3131f6	strnchr	vmlinux	EXPORT_SYMBOL
+0xd20bf6ba	dcookie_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0xee1ab273	balance_dirty_pages_ratelimited_nr	vmlinux	EXPORT_SYMBOL
+0x6339b6d0	snd_seq_device_load_drivers	sound/core/seq/snd-seq-device	EXPORT_SYMBOL
+0x9a5013b0	journal_clear_err	fs/jbd/jbd	EXPORT_SYMBOL
+0x0e99ce47	__fscache_uncache_page	fs/fscache/fscache	EXPORT_SYMBOL
+0x6e212032	usbip_event_happened	drivers/staging/usbip/usbip-core	EXPORT_SYMBOL_GPL
+0x0257008d	rtl92c_firmware_selfreset	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0x289b86d7	i2400m_pre_reset	drivers/net/wimax/i2400m/i2400m	EXPORT_SYMBOL_GPL
+0x2db5f7e7	bio_alloc_mddev	drivers/md/md-mod	EXPORT_SYMBOL_GPL
+0x758f7375	edac_pci_handle_pe	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x7afa89fc	vsnprintf	vmlinux	EXPORT_SYMBOL
+0x44b911c3	rb_replace_node	vmlinux	EXPORT_SYMBOL
+0x6ff607b6	crypto_get_default_rng	vmlinux	EXPORT_SYMBOL_GPL
+0x668402aa	crypto_put_default_rng	vmlinux	EXPORT_SYMBOL_GPL
+0x36f17688	crypto_mod_put	vmlinux	EXPORT_SYMBOL_GPL
+0xc17b37ee	mount_pseudo	vmlinux	EXPORT_SYMBOL
+0x1ae14ef5	_raw_write_trylock	vmlinux	EXPORT_SYMBOL
+0x4205ad24	cancel_work_sync	vmlinux	EXPORT_SYMBOL_GPL
+0x671b19d1	snd_pcm_hw_constraint_pow2	sound/core/snd-pcm	EXPORT_SYMBOL
+0xf1f26fde	nf_ct_gre_keymap_flush	net/netfilter/nf_conntrack_proto_gre	EXPORT_SYMBOL
+0xf96dcb33	dlm_register_eviction_cb	fs/ocfs2/dlm/ocfs2_dlm	EXPORT_SYMBOL_GPL
+0x7bf63348	ssb_set_devtypedata	drivers/ssb/ssb	EXPORT_SYMBOL
+0xf82ad3cc	dib0090_register	drivers/media/dvb/frontends/dib0090	EXPORT_SYMBOL
+0x75d4c1db	drm_gem_free_mmap_offset	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xd45ee461	kvm_read_guest_page_mmu	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x99cdc86b	sysctl_tcp_reordering	vmlinux	EXPORT_SYMBOL
+0xb93c3230	input_set_keycode	vmlinux	EXPORT_SYMBOL
+0x79e9eca0	alloc_pci_dev	vmlinux	EXPORT_SYMBOL
+0x9754ec10	radix_tree_preload	vmlinux	EXPORT_SYMBOL
+0xd56f742c	blkdev_ioctl	vmlinux	EXPORT_SYMBOL_GPL
+0xfe70b2bb	__quota_error	vmlinux	EXPORT_SYMBOL
+0xd11c0dc1	__kernel_param_unlock	vmlinux	EXPORT_SYMBOL
+0x5e3a3912	parport_irq_handler	drivers/parport/parport	EXPORT_SYMBOL
+0xbcca5e0e	rt2800_get_survey	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0x4181d1c2	lbtf_add_card	drivers/net/wireless/libertas_tf/libertas_tf	EXPORT_SYMBOL_GPL
+0xff5f2b0e	__i2c_board_lock	vmlinux	EXPORT_SYMBOL_GPL
+0x2133efd5	tty_ldisc_flush	vmlinux	EXPORT_SYMBOL_GPL
+0x7c557500	crypto_register_instance	vmlinux	EXPORT_SYMBOL_GPL
+0x8552c3cd	crypto_alloc_tfm	vmlinux	EXPORT_SYMBOL_GPL
+0xb9f0e470	bdi_destroy	vmlinux	EXPORT_SYMBOL
+0xc9c3f176	hpet_register_irq_handler	vmlinux	EXPORT_SYMBOL_GPL
+0x73a28632	snd_sb16dsp_get_pcm_ops	sound/isa/sb/snd-sb16-dsp	EXPORT_SYMBOL
+0x7bd06b0f	subdev_8255_cleanup	drivers/staging/comedi/drivers/8255	EXPORT_SYMBOL
+0xdb03f209	rt2800_vco_calibration	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0xd26a1109	ath_hw_keyreset	drivers/net/wireless/ath/ath	EXPORT_SYMBOL
+0x0bc8846a	__videobuf_mmap_setup	drivers/media/video/videobuf-core	EXPORT_SYMBOL_GPL
+0xdbd943fe	skb_tstamp_tx	vmlinux	EXPORT_SYMBOL_GPL
+0x431b96a0	tty_set_operations	vmlinux	EXPORT_SYMBOL
+0x8daf8c42	dql_init	vmlinux	EXPORT_SYMBOL
+0x69e27c7a	bitmap_copy_le	vmlinux	EXPORT_SYMBOL
+0xb45578b8	memscan	vmlinux	EXPORT_SYMBOL
+0xf1b001c1	mark_buffer_dirty	vmlinux	EXPORT_SYMBOL
+0x58eb1cd4	get_super	vmlinux	EXPORT_SYMBOL
+0x00801678	flush_scheduled_work	vmlinux	EXPORT_SYMBOL
+0xa1c90e70	write_bytes_to_xdr_buf	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xcb55ad58	rpipe_destroy	drivers/usb/wusbcore/wusb-wa	EXPORT_SYMBOL_GPL
+0x50117c66	usb_wwan_dtr_rts	drivers/usb/serial/usb_wwan	EXPORT_SYMBOL
+0x309aada5	das08_common_attach	drivers/staging/comedi/drivers/das08	EXPORT_SYMBOL_GPL
+0xad08bcfa	das08_common_detach	drivers/staging/comedi/drivers/das08	EXPORT_SYMBOL_GPL
+0xd3b1f2d3	srp_attach_transport	drivers/scsi/scsi_transport_srp	EXPORT_SYMBOL_GPL
+0xd2328794	tms380tr_wait	drivers/net/tokenring/tms380tr	EXPORT_SYMBOL
+0xb86ae04e	ib_create_ah_from_wc	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xaf27bebf	drbd_disk_str	drivers/block/drbd/drbd	EXPORT_SYMBOL
+0x950af0fe	ahci_check_ready	drivers/ata/libahci	EXPORT_SYMBOL_GPL
+0x770ad866	xfrm_state_sort	vmlinux	EXPORT_SYMBOL
+0xc8ae9626	skb_copy_and_csum_bits	vmlinux	EXPORT_SYMBOL
+0x5231d31f	block_write_begin	vmlinux	EXPORT_SYMBOL
+0x440fc40a	ll_rw_block	vmlinux	EXPORT_SYMBOL
+0xb7d7c12e	hpet_set_alarm_time	vmlinux	EXPORT_SYMBOL_GPL
+0xc17f577f	snd_hda_get_pin_label	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xfb44adc3	sas_rphy_free	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL
+0x55f5cac1	fc_release_transport	drivers/scsi/scsi_transport_fc	EXPORT_SYMBOL
+0x3f500952	mlx4_release_eq	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL
+0xa5987a36	memstick_init_req	drivers/memstick/core/memstick	EXPORT_SYMBOL
+0x95fa7b18	v4l2_ctrl_handler_init	drivers/media/video/videodev	EXPORT_SYMBOL
+0xbe1887e4	ata_unpack_xfermask	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x62047e19	ps2_sendbyte	vmlinux	EXPORT_SYMBOL
+0xeb128173	fb_deferred_io_fsync	vmlinux	EXPORT_SYMBOL_GPL
+0xe1761617	security_inet_conn_request	vmlinux	EXPORT_SYMBOL
+0x1268f357	resume_device_irqs	vmlinux	EXPORT_SYMBOL_GPL
+0x43e458f6	ceph_file_part	net/ceph/libceph	EXPORT_SYMBOL
+0x35b85807	rts5139_usb_ids	drivers/staging/rts5139/rts5139	EXPORT_SYMBOL_GPL
+0xb76d328b	fc_lport_flogi_resp	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0xd50fef48	acpi_detach_data	vmlinux	EXPORT_SYMBOL
+0xbe2e3b75	kstrtos8	vmlinux	EXPORT_SYMBOL
+0x124f2056	crypto_get_attr_type	vmlinux	EXPORT_SYMBOL_GPL
+0xe716baed	acpi_unregister_ioapic	vmlinux	EXPORT_SYMBOL
+0xd7b8f3f5	fw_iso_resources_allocate	sound/firewire/snd-firewire-lib	EXPORT_SYMBOL
+0xe1c4965e	svc_proc_unregister	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x0debd076	nfnetlink_send	net/netfilter/nfnetlink	EXPORT_SYMBOL_GPL
+0xafb071a8	pnfs_generic_pg_init_write	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0xb14f2cdf	uwb_radio_start	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0x26c90ea4	scsi_eh_get_sense	drivers/scsi/scsi_mod	EXPORT_SYMBOL_GPL
+0x530d2981	ib_umem_release	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x7d3cd224	ib_fmr_pool_unmap	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x034db6fd	vmbus_recvpacket	drivers/hv/hv_vmbus	EXPORT_SYMBOL
+0x769c110c	pi_write_block	drivers/block/paride/paride	EXPORT_SYMBOL
+0xcdda0f99	device_create_bin_file	vmlinux	EXPORT_SYMBOL_GPL
+0x8d772956	pci_intx	vmlinux	EXPORT_SYMBOL_GPL
+0xdf9a0a3e	crypto_alloc_aead	vmlinux	EXPORT_SYMBOL_GPL
+0x41615f7d	crypto_spawn_tfm2	vmlinux	EXPORT_SYMBOL_GPL
+0xce6a9d9a	trace_current_buffer_discard_commit	vmlinux	EXPORT_SYMBOL_GPL
+0x50fad434	round_jiffies_up	vmlinux	EXPORT_SYMBOL_GPL
+0x6309139a	mlx4_mtt_cleanup	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x26b368c0	cx24113_attach	drivers/media/dvb/frontends/cx24113	EXPORT_SYMBOL
+0xa53387c7	dm_rh_flush	drivers/md/dm-region-hash	EXPORT_SYMBOL_GPL
+0xb17b7c77	register_capictr_notifier	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL_GPL
+0x0aa9d15c	vmbus_prep_negotiate_resp	drivers/hv/hv_vmbus	EXPORT_SYMBOL_GPL
+0x56eb931f	bcma_chipco_pll_write	drivers/bcma/bcma	EXPORT_SYMBOL_GPL
+0xe0846da6	dev_set_mac_address	vmlinux	EXPORT_SYMBOL
+0xf7f404cb	sk_receive_skb	vmlinux	EXPORT_SYMBOL
+0xe6b32ff4	serio_open	vmlinux	EXPORT_SYMBOL
+0x14616e74	spi_master_suspend	vmlinux	EXPORT_SYMBOL_GPL
+0xf0c9b116	agp_generic_free_by_type	vmlinux	EXPORT_SYMBOL
+0x22b325d5	kd_mksound	vmlinux	EXPORT_SYMBOL
+0xe4c331b6	acpi_os_unmap_memory	vmlinux	EXPORT_SYMBOL_GPL
+0xf5c05914	generic_segment_checks	vmlinux	EXPORT_SYMBOL
+0xd0f36f0d	audit_log_format	vmlinux	EXPORT_SYMBOL
+0xbf9cd39e	ceph_osdc_build_request	net/ceph/libceph	EXPORT_SYMBOL
+0x408d8d76	iscsi_get_pr_transport_id	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x0304abb1	rt2x00pci_initialize	drivers/net/wireless/rt2x00/rt2x00pci	EXPORT_SYMBOL_GPL
+0xc70057e6	il_set_rate	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x1546bfad	loop_register_transfer	drivers/block/loop	EXPORT_SYMBOL
+0x3f1586fc	ata_link_next	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xec15f00a	tcp_cookie_generator	vmlinux	EXPORT_SYMBOL
+0x6d2fc5a6	net_namespace_list	vmlinux	EXPORT_SYMBOL_GPL
+0x26221ba0	sock_register	vmlinux	EXPORT_SYMBOL
+0x71e2c819	serio_close	vmlinux	EXPORT_SYMBOL
+0x00d4af04	device_set_wakeup_enable	vmlinux	EXPORT_SYMBOL_GPL
+0x580aa261	pci_find_bus	vmlinux	EXPORT_SYMBOL
+0xf4a5c213	avail_to_resrv_perfctr_nmi_bit	vmlinux	EXPORT_SYMBOL
+0x40e9074e	__snd_util_mem_alloc	sound/synth/snd-util-mem	EXPORT_SYMBOL
+0x4b1d2741	snd_hda_sync_vmaster_hook	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x08c3c5bc	__cfg80211_send_deauth	net/wireless/cfg80211	EXPORT_SYMBOL
+0x1f58e71b	nfnl_lock	net/netfilter/nfnetlink	EXPORT_SYMBOL_GPL
+0xb4709322	scsi_dev_info_add_list	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x67e19ea1	rtl92c_dm_rf_saving	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0x6695ac9f	rt2x00usb_suspend	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0xf5f99c94	hdlc_open	drivers/net/wan/hdlc	EXPORT_SYMBOL
+0xf82b9f19	phy_register_fixup_for_uid	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x7313f01a	register_mtd_blktrans	drivers/mtd/mtd_blkdevs	EXPORT_SYMBOL_GPL
+0xa1f63065	v4l2_ctrl_add_event	drivers/media/video/videodev	EXPORT_SYMBOL
+0x9259dcdd	md_is_badblock	drivers/md/md-mod	EXPORT_SYMBOL_GPL
+0xaa6d323f	drm_mm_insert_node_in_range	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xe0079700	inet6_register_protosw	vmlinux	EXPORT_SYMBOL
+0x419ebebe	netif_set_real_num_tx_queues	vmlinux	EXPORT_SYMBOL
+0xee2457a3	netif_set_real_num_rx_queues	vmlinux	EXPORT_SYMBOL
+0xb5e1405a	dev_set_group	vmlinux	EXPORT_SYMBOL
+0x63e1d3ff	end_buffer_async_write	vmlinux	EXPORT_SYMBOL
+0x896f596b	__snd_hda_codec_cleanup_stream	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x7f62d029	snd_midi_event_encode	sound/core/seq/snd-seq-midi-event	EXPORT_SYMBOL
+0x69b18f43	rfc1042_header	net/wireless/cfg80211	EXPORT_SYMBOL
+0xe2426710	wmi_evaluate_method	drivers/platform/x86/wmi	EXPORT_SYMBOL_GPL
+0x8d7e5d58	sdio_get_host_pm_caps	drivers/mmc/core/mmc_core	EXPORT_SYMBOL_GPL
+0x1a5e36d7	ib_get_dma_mr	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x6d532789	ip_nat_decode_session	vmlinux	EXPORT_SYMBOL
+0x3a86c4e1	vfs_writev	vmlinux	EXPORT_SYMBOL
+0x119525bd	svc_rpcb_cleanup	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xdcf0b868	iscsi_tcp_conn_get_stats	drivers/scsi/libiscsi_tcp	EXPORT_SYMBOL_GPL
+0x71ac7943	videobuf_next_field	drivers/media/video/videobuf-core	EXPORT_SYMBOL_GPL
+0x4b8fca51	af9005_rc_decode	drivers/media/dvb/dvb-usb/dvb-usb-af9005-remote	EXPORT_SYMBOL
+0xc164642e	xenbus_otherend_changed	vmlinux	EXPORT_SYMBOL_GPL
+0x9062c322	ring_buffer_consume	vmlinux	EXPORT_SYMBOL_GPL
+0x1c5b1f28	irq_free_descs	vmlinux	EXPORT_SYMBOL_GPL
+0x3ac2fe47	cgroup_unload_subsys	vmlinux	EXPORT_SYMBOL_GPL
+0x78db38d3	proc_dointvec	vmlinux	EXPORT_SYMBOL
+0x687f6251	mlog_and_bits	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0x5f40db3e	scsi_host_put_command	drivers/scsi/scsi_tgt	EXPORT_SYMBOL_GPL
+0x24ca6c17	hostap_set_hostapd_sta	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0xa2a5fd77	inet_ehash_secret	vmlinux	EXPORT_SYMBOL
+0xb9765e5f	__inet_lookup_established	vmlinux	EXPORT_SYMBOL_GPL
+0xeecae566	netdev_alert	vmlinux	EXPORT_SYMBOL
+0xfae82419	__pci_remove_bus_device	vmlinux	EXPORT_SYMBOL
+0x33b73c4c	rpc_print_iostats	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x0c29479c	svc_rpcb_setup	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xb43472fd	atm_dev_lookup	net/atm/atm	EXPORT_SYMBOL
+0x678d19dd	p9_client_fcreate	net/9p/9pnet	EXPORT_SYMBOL
+0x1df34d1c	srp_target_alloc	drivers/scsi/libsrp	EXPORT_SYMBOL_GPL
+0x05495392	hid_debug	drivers/hid/hid	EXPORT_SYMBOL_GPL
+0x9627762f	udp_lib_unhash	vmlinux	EXPORT_SYMBOL
+0x5abb7cf0	udp_lib_rehash	vmlinux	EXPORT_SYMBOL
+0x4143f553	pm_stay_awake	vmlinux	EXPORT_SYMBOL_GPL
+0x1de3172e	device_show_ulong	vmlinux	EXPORT_SYMBOL_GPL
+0x9eb29f50	acpi_bus_register_driver	vmlinux	EXPORT_SYMBOL
+0x34729698	cpumask_next_and	vmlinux	EXPORT_SYMBOL
+0x8aa73a8e	set_ras_addr_hook	net/netfilter/nf_conntrack_h323	EXPORT_SYMBOL_GPL
+0xb6054e97	v4l2_chip_ident_i2c_client	drivers/media/video/v4l2-common	EXPORT_SYMBOL
+0x39de3609	lirc_register_driver	drivers/media/rc/lirc_dev	EXPORT_SYMBOL
+0x50aa0c80	drm_open	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x7aa64803	kvm_release_pfn_clean	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xd2bf3317	nf_hook_slow	vmlinux	EXPORT_SYMBOL
+0xce5ac24f	zlib_inflate_workspacesize	vmlinux	EXPORT_SYMBOL
+0x87874363	snd_wss_mce_up	sound/isa/wss/snd-wss-lib	EXPORT_SYMBOL
+0xa15bade5	snd_pcm_limit_hw_rates	sound/core/snd-pcm	EXPORT_SYMBOL
+0xcfd3cede	wimax_report_rfkill_hw	net/wimax/wimax	EXPORT_SYMBOL_GPL
+0x27bb338e	ceph_osdc_sync	net/ceph/libceph	EXPORT_SYMBOL
+0x36418553	o2net_send_message	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0xace5c0fc	usb_bus_list	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xc5cc7b4e	usb_cypress_load_firmware	drivers/media/dvb/dvb-usb/dvb-usb	EXPORT_SYMBOL
+0x2b7cfd54	dm_dirty_log_type_register	drivers/md/dm-log	EXPORT_SYMBOL
+0x2e471f01	dca_register_notify	drivers/dca/dca	EXPORT_SYMBOL_GPL
+0x6b620afe	tcp_recvmsg	vmlinux	EXPORT_SYMBOL
+0xb02836fa	vga_client_register	vmlinux	EXPORT_SYMBOL
+0x6ce04727	bio_integrity_split	vmlinux	EXPORT_SYMBOL
+0x325d29a1	irq_alloc_generic_chip	vmlinux	EXPORT_SYMBOL_GPL
+0x48682db9	perf_guest_get_msrs	vmlinux	EXPORT_SYMBOL_GPL
+0x8bec9c85	ieee80211_napi_schedule	net/mac80211/mac80211	EXPORT_SYMBOL
+0x30760e07	v9fs_get_default_trans	net/9p/9pnet	EXPORT_SYMBOL
+0x8cb80085	fcoe_ctlr_init	drivers/scsi/fcoe/libfcoe	EXPORT_SYMBOL
+0x987dcfde	dvb_ringbuffer_avail	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0x7f4cfa5d	drm_detect_monitor_audio	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x0a9edbba	pi_connect	drivers/block/paride/paride	EXPORT_SYMBOL
+0xc904b3d3	ata_pci_sff_activate_host	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xca9bbf27	ata_scsi_queuecmd	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x03e3686c	ata_timing_cycle2mode	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xf3cc1499	xfrm_audit_state_notfound_simple	vmlinux	EXPORT_SYMBOL_GPL
+0xe8b63ace	radix_tree_range_tag_if_tagged	vmlinux	EXPORT_SYMBOL
+0xe59a0119	proc_dointvec_userhz_jiffies	vmlinux	EXPORT_SYMBOL
+0x8326c38c	console_start	vmlinux	EXPORT_SYMBOL
+0x7f0a92d6	xt_register_match	net/netfilter/x_tables	EXPORT_SYMBOL
+0x4bc32106	mite_bytes_written_to_memory_ub	drivers/staging/comedi/drivers/mite	EXPORT_SYMBOL
+0xcee8f4e3	parport_unregister_driver	drivers/parport/parport	EXPORT_SYMBOL
+0x4c07c29e	tcp_simple_retransmit	vmlinux	EXPORT_SYMBOL
+0x18a574f4	inet_csk_bind_conflict	vmlinux	EXPORT_SYMBOL_GPL
+0x23bad24b	pci_check_and_mask_intx	vmlinux	EXPORT_SYMBOL_GPL
+0x65922e7e	anon_inode_getfile	vmlinux	EXPORT_SYMBOL_GPL
+0x15316039	simple_dir_inode_operations	vmlinux	EXPORT_SYMBOL
+0xaefb635c	can_ioctl	net/can/can	EXPORT_SYMBOL
+0x30b629cc	sas_get_local_phy	drivers/scsi/libsas/libsas	EXPORT_SYMBOL_GPL
+0x33ddd149	vb2_mmap	drivers/media/video/videobuf2-core	EXPORT_SYMBOL_GPL
+0xaab1a9cf	ahci_do_softreset	drivers/ata/libahci	EXPORT_SYMBOL_GPL
+0x8f7bc6cd	dmam_pool_create	vmlinux	EXPORT_SYMBOL
+0xb1863850	register_kretprobe	vmlinux	EXPORT_SYMBOL_GPL
+0xccab1e14	snd_emu10k1_synth_free	sound/pci/emu10k1/snd-emu10k1	EXPORT_SYMBOL
+0x404d28b9	iscsi_host_alloc	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0x81d1bcac	libipw_networks_age	drivers/net/wireless/ipw2x00/libipw	EXPORT_SYMBOL
+0x691cfb7d	genphy_suspend	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x832d317c	__alloc_eip_netdev	drivers/net/ethernet/8390/8390p	EXPORT_SYMBOL
+0xd5dea3c8	subsys_system_register	vmlinux	EXPORT_SYMBOL_GPL
+0xde2c601a	cpci_hp_register_bus	vmlinux	EXPORT_SYMBOL_GPL
+0x7fa8e0ce	__find_get_block	vmlinux	EXPORT_SYMBOL
+0x34f150a9	dcache_dir_open	vmlinux	EXPORT_SYMBOL
+0x3f4547a7	put_unused_fd	vmlinux	EXPORT_SYMBOL
+0xd2555f19	jiffies_64_to_clock_t	vmlinux	EXPORT_SYMBOL
+0x06f81d98	lc_set	lib/lru_cache	EXPORT_SYMBOL
+0x4d071fd3	lc_get	lib/lru_cache	EXPORT_SYMBOL
+0x3eae7fbd	lc_put	lib/lru_cache	EXPORT_SYMBOL
+0x3ca31f35	nfs_net_id	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0x252fa760	mlx4_counter_free	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x3f2823b9	cxgb4_get_tcp_stats	drivers/net/ethernet/chelsio/cxgb4/cxgb4	EXPORT_SYMBOL
+0x502f3c1e	inet6_lookup_listener	vmlinux	EXPORT_SYMBOL_GPL
+0x5676afca	dev_pm_qos_expose_latency_limit	vmlinux	EXPORT_SYMBOL_GPL
+0xfbe27a1c	rb_first	vmlinux	EXPORT_SYMBOL
+0xc72e1233	__trace_bprintk	vmlinux	EXPORT_SYMBOL_GPL
+0x7c904ded	unregister_module_notifier	vmlinux	EXPORT_SYMBOL
+0xe49775f9	flush_delayed_work	vmlinux	EXPORT_SYMBOL
+0xabc06f51	nf_conntrack_hash_check_insert	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xd2c107bb	ceph_flags_to_mode	net/ceph/libceph	EXPORT_SYMBOL
+0xde6fd26d	mite_dma_arm	drivers/staging/comedi/drivers/mite	EXPORT_SYMBOL
+0x357742de	scsi_cmd_print_sense_hdr	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xcbdbc322	sas_change_queue_depth	drivers/scsi/libsas/libsas	EXPORT_SYMBOL_GPL
+0x4af5ce0b	cxgbi_sock_purge_wr_queue	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0x3c5b0ab2	mmc_switch	drivers/mmc/core/mmc_core	EXPORT_SYMBOL_GPL
+0xfbd927ec	ata_dummy_port_ops	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x7ac80dd8	__tracepoint_kvm_msr	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xfd7243c7	erst_disable	vmlinux	EXPORT_SYMBOL_GPL
+0x9e363b6b	acpi_disable_gpe	vmlinux	EXPORT_SYMBOL
+0xbdea034c	zero_fill_bio	vmlinux	EXPORT_SYMBOL
+0xb628f715	files_lglock_local_lock	vmlinux	EXPORT_SYMBOL
+0x18b746a9	snd_hda_parse_generic_codec	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL
+0xed6c9e1d	ath9k_hw_cfg_output	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xfa4d39e7	mmc_resume_host	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x33a9d4c6	cs5535_mfgpt_read	drivers/misc/cs5535-mfgpt	EXPORT_SYMBOL_GPL
+0x20c29fe2	videobuf_dvb_register_bus	drivers/media/video/videobuf-dvb	EXPORT_SYMBOL
+0x4917517f	v4l2_spi_subdev_init	drivers/media/video/v4l2-common	EXPORT_SYMBOL_GPL
+0x71885dfe	create_l1	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0x6cbee484	is_error_page	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x6ed5abcf	unix_peer_get	vmlinux	EXPORT_SYMBOL_GPL
+0x082c3213	pci_root_buses	vmlinux	EXPORT_SYMBOL
+0x8241f1ef	scsi_eh_ready_devs	drivers/scsi/scsi_mod	EXPORT_SYMBOL_GPL
+0x9920afd3	mmc_alloc_host	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x7c52e832	videobuf_iolock	drivers/media/video/videobuf-core	EXPORT_SYMBOL_GPL
+0xfdbb3c0f	ib_find_cached_gid	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x2b450e82	dca_add_requester	drivers/dca/dca	EXPORT_SYMBOL_GPL
+0xab461088	bcma_chipco_regctl_maskset	drivers/bcma/bcma	EXPORT_SYMBOL_GPL
+0xd8325a4e	tcp_syn_ack_timeout	vmlinux	EXPORT_SYMBOL
+0x542f0119	nf_log_unregister	vmlinux	EXPORT_SYMBOL
+0x0e13cb4d	apei_resources_release	vmlinux	EXPORT_SYMBOL_GPL
+0x986e6135	fb_pad_unaligned_buffer	vmlinux	EXPORT_SYMBOL
+0xd18bec09	generic_file_buffered_write	vmlinux	EXPORT_SYMBOL
+0x13f42152	system_entering_hibernation	vmlinux	EXPORT_SYMBOL
+0x70c15ac1	snd_dma_disable	sound/core/snd	EXPORT_SYMBOL
+0x83cebde6	snd_register_device_for_dev	sound/core/snd	EXPORT_SYMBOL
+0xd58a785d	snd_rawmidi_drain_input	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0x6c9fec35	lapb_data_received	net/lapb/lapb	EXPORT_SYMBOL
+0xc2ce8550	dccp_death_row	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x5005107d	thermal_cooling_device_register	drivers/thermal/thermal_sys	EXPORT_SYMBOL
+0xf61f43ad	rtl_ps_disable_nic	drivers/net/wireless/rtlwifi/rtlwifi	EXPORT_SYMBOL
+0x9114cd35	ttpci_budget_set_video_port	drivers/media/dvb/ttpci/budget-core	EXPORT_SYMBOL_GPL
+0xaf5e9ad9	mantis_stream_control	drivers/media/dvb/mantis/mantis_core	EXPORT_SYMBOL_GPL
+0x9bda627e	drm_fb_helper_single_add_all_connectors	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0xc1c2dd09	__hw_addr_flush	vmlinux	EXPORT_SYMBOL
+0x62ee8363	input_open_device	vmlinux	EXPORT_SYMBOL
+0xfe990052	gpio_free	vmlinux	EXPORT_SYMBOL_GPL
+0xea054b22	nla_policy_len	vmlinux	EXPORT_SYMBOL
+0xd92afabe	bitmap_clear	vmlinux	EXPORT_SYMBOL
+0x87070f69	fsync_bdev	vmlinux	EXPORT_SYMBOL
+0xb195a847	snd_ak4117_external_rate	sound/i2c/other/snd-ak4117	EXPORT_SYMBOL
+0xb7ba3fd5	snd_ak4114_external_rate	sound/i2c/other/snd-ak4114	EXPORT_SYMBOL
+0xb0a3512a	snd_ak4113_external_rate	sound/i2c/other/snd-ak4113	EXPORT_SYMBOL_GPL
+0xf4cb9c66	cfg80211_wext_giwrange	net/wireless/cfg80211	EXPORT_SYMBOL_GPL
+0x666ac0e3	xprt_set_retrans_timeout_def	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x04754aa6	ni_tio_set_gate_src	drivers/staging/comedi/drivers/ni_tio	EXPORT_SYMBOL_GPL
+0x0e2195ec	ssb_pcihost_register	drivers/ssb/ssb	EXPORT_SYMBOL
+0x4ea9b40f	osduld_path_lookup	drivers/scsi/osd/osd	EXPORT_SYMBOL
+0xf64277de	lbs_debug	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0x10e7787d	i2c_new_device	drivers/i2c/i2c-core	EXPORT_SYMBOL_GPL
+0xe5417038	ttm_read_lock	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0xe6589341	drm_mode_set_name	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xa9f065fe	ip6_dst_lookup	vmlinux	EXPORT_SYMBOL_GPL
+0xa01c993a	device_for_each_child	vmlinux	EXPORT_SYMBOL_GPL
+0x40a9b349	vzalloc	vmlinux	EXPORT_SYMBOL
+0xc2f9c045	timespec_to_jiffies	vmlinux	EXPORT_SYMBOL
+0x1cf9a10b	set_pages_uc	vmlinux	EXPORT_SYMBOL
+0xb9948d2c	snd_midi_channel_free_set	sound/core/seq/snd-seq-midi-emul	EXPORT_SYMBOL
+0x8d764815	ieee80211_free_hw	net/mac80211/mac80211	EXPORT_SYMBOL
+0xfdb76dc1	dccp_close	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x9f123c63	hci_resume_dev	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x69fc474e	gsm_cleanup_mux	drivers/tty/n_gsm	EXPORT_SYMBOL_GPL
+0x07d9b783	scsi_nl_send_vendor_msg	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xd182b9f2	mwifiex_remove_card	drivers/net/wireless/mwifiex/mwifiex	EXPORT_SYMBOL_GPL
+0x9c66d9bb	mlx4_find_cached_vlan	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xb916a3a3	media_device_unregister	drivers/media/media	EXPORT_SYMBOL_GPL
+0x12bcfbad	pm_generic_poweroff_late	vmlinux	EXPORT_SYMBOL_GPL
+0x6ad85887	acpi_enable_gpe	vmlinux	EXPORT_SYMBOL
+0x10ae377b	unregister_key_type	vmlinux	EXPORT_SYMBOL
+0x518c2fc6	hpet_rtc_dropped_irq	vmlinux	EXPORT_SYMBOL_GPL
+0xaf64b3ef	rpc_shutdown_client	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x00de07fa	nci_allocate_device	net/nfc/nci/nci	EXPORT_SYMBOL
+0x0fea5f56	dlmunlock	fs/ocfs2/dlm/ocfs2_dlm	EXPORT_SYMBOL_GPL
+0x9633318a	usb_add_gadget_udc	drivers/usb/gadget/udc-core	EXPORT_SYMBOL_GPL
+0x980df5a3	transport_generic_new_cmd	drivers/target/target_core_mod	EXPORT_SYMBOL
+0xe3d80064	z8530_hdlc_kilostream_85230	drivers/net/wan/z85230	EXPORT_SYMBOL
+0xa66b9b87	pppox_ioctl	drivers/net/ppp/pppox	EXPORT_SYMBOL
+0x1064634a	i2c_dp_aux_add_bus	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0xa62e6e4f	acpi_get_table_with_size	vmlinux	EXPORT_SYMBOL
+0x11089ac7	_ctype	vmlinux	EXPORT_SYMBOL
+0xc05dc525	blk_get_queue	vmlinux	EXPORT_SYMBOL
+0x803c748f	bd_set_size	vmlinux	EXPORT_SYMBOL
+0xca7d8764	kthread_freezable_should_stop	vmlinux	EXPORT_SYMBOL_GPL
+0x79a71c48	kernel_stack_pointer	vmlinux	EXPORT_SYMBOL_GPL
+0x7811386e	power_supply_get_by_name	drivers/power/power_supply	EXPORT_SYMBOL_GPL
+0x14b565d4	mtd_device_unregister	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0x68d320b9	udp_proc_unregister	vmlinux	EXPORT_SYMBOL
+0x37f614b7	__kfifo_len_r	vmlinux	EXPORT_SYMBOL
+0x06ded08c	task_xstate_cachep	vmlinux	EXPORT_SYMBOL_GPL
+0x8690b748	snd_emu8000_load_reverb_fx	sound/isa/sb/snd-sbawe	EXPORT_SYMBOL
+0x8c27938e	snd_pcm_stop	sound/core/snd-pcm	EXPORT_SYMBOL
+0x870e4835	svc_xprt_names	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x1e09839f	close_candev	drivers/net/can/can-dev	EXPORT_SYMBOL_GPL
+0x1c315a3f	ib_alloc_fmr	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x459a4e2b	inet_sk_rebuild_header	vmlinux	EXPORT_SYMBOL
+0x78281396	skb_copy	vmlinux	EXPORT_SYMBOL
+0x75aed302	input_inject_event	vmlinux	EXPORT_SYMBOL
+0x77b00c56	pci_bus_read_config_dword	vmlinux	EXPORT_SYMBOL
+0x7593d385	div64_s64	vmlinux	EXPORT_SYMBOL
+0x27864d57	memparse	vmlinux	EXPORT_SYMBOL
+0x22c2dab3	block_truncate_page	vmlinux	EXPORT_SYMBOL
+0xccc1cab3	generic_write_checks	vmlinux	EXPORT_SYMBOL
+0xe7232e0f	user_return_notifier_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x4f68e5c9	do_gettimeofday	vmlinux	EXPORT_SYMBOL
+0xa6715115	do_settimeofday	vmlinux	EXPORT_SYMBOL
+0x93c1c4b8	sas_rphy_unlink	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL
+0x90acd0e4	iscsi_session_get_param	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0xb184d7e9	il_free_channel_map	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x1cc54f96	mptscsih_host_attrs	drivers/message/fusion/mptscsih	EXPORT_SYMBOL
+0x3ff9ed71	em28xx_write_ac97	drivers/media/video/em28xx/em28xx	EXPORT_SYMBOL_GPL
+0x0c58a8cd	netdev_increment_features	vmlinux	EXPORT_SYMBOL
+0x57851e8c	uart_match_port	vmlinux	EXPORT_SYMBOL
+0x62511f0b	snd_wss_in	sound/isa/wss/snd-wss-lib	EXPORT_SYMBOL
+0x02df256d	cfg80211_pmksa_candidate_notify	net/wireless/cfg80211	EXPORT_SYMBOL
+0x68272fdc	svc_shutdown_net	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xc7a67f40	destroy_8023_client	net/802/p8023	EXPORT_SYMBOL
+0x71ac1425	comedi_driver_register	drivers/staging/comedi/comedi	EXPORT_SYMBOL
+0x00382ac5	iscsi_host_get_param	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0xe5ae8707	intlog10	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0x86a4066d	ttm_eu_backoff_reservation	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x31a2c8df	dca_get_tag	drivers/dca/dca	EXPORT_SYMBOL_GPL
+0xf01b6cbb	kvm_mmu_invlpg	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x3bef03b9	flow_cache_lookup	vmlinux	EXPORT_SYMBOL
+0xf29362e6	intel_gtt_map_memory	vmlinux	EXPORT_SYMBOL
+0xe20dc83c	pcie_port_service_register	vmlinux	EXPORT_SYMBOL
+0x01961b04	pci_request_selected_regions	vmlinux	EXPORT_SYMBOL
+0x0169c4c7	__splice_from_pipe	vmlinux	EXPORT_SYMBOL
+0xa197b1ff	ieee80211_get_mesh_hdrlen	net/wireless/cfg80211	EXPORT_SYMBOL
+0x222af586	__nf_ct_ext_destroy	net/netfilter/nf_conntrack	EXPORT_SYMBOL
+0x166b0cff	uwb_rc_post_reset	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0x148e538b	ieee80211_wpa_supplicant_ioctl_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0xf24f5b86	scsi_is_sas_phy	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL
+0x6eff505f	cxgbi_ep_disconnect	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0xa3222108	rt2x00usb_resume	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0xd42e8375	stop_atmel_card	drivers/net/wireless/atmel	EXPORT_SYMBOL
+0x0eea61b5	sdio_align_size	drivers/mmc/core/mmc_core	EXPORT_SYMBOL_GPL
+0xf9ca3160	ata_id_xfermask	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x524205cc	acpi_processor_register_performance	drivers/acpi/processor	EXPORT_SYMBOL
+0x5c0d3673	unregister_net_sysctl_table	vmlinux	EXPORT_SYMBOL_GPL
+0x85ac9574	cpufreq_register_governor	vmlinux	EXPORT_SYMBOL_GPL
+0x57f4136a	tty_write_room	vmlinux	EXPORT_SYMBOL
+0xc1c8e8da	xenbus_unregister_driver	vmlinux	EXPORT_SYMBOL_GPL
+0xfe0cf156	sysfs_add_file_to_group	vmlinux	EXPORT_SYMBOL_GPL
+0x487d9343	param_ops_ushort	vmlinux	EXPORT_SYMBOL
+0xf17a57fa	lib80211_get_crypto_ops	net/wireless/lib80211	EXPORT_SYMBOL
+0x479eefc7	ieee80211_pspoll_get	net/mac80211/mac80211	EXPORT_SYMBOL
+0xbfd7d7a2	o2hb_global_heartbeat_active	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL
+0xac8b3d75	usbip_start_eh	drivers/staging/usbip/usbip-core	EXPORT_SYMBOL_GPL
+0xfbd09105	ni_tio_handle_interrupt	drivers/staging/comedi/drivers/ni_tiocmd	EXPORT_SYMBOL_GPL
+0x65f79ead	_il_poll_bit	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x2ec5c72f	z8530_sync_open	drivers/net/wan/z85230	EXPORT_SYMBOL
+0x62affe88	stv0900_attach	drivers/media/dvb/frontends/stv0900	EXPORT_SYMBOL
+0x3a491bc7	stb6100_attach	drivers/media/dvb/frontends/stb6100	EXPORT_SYMBOL
+0xb7aeaa3d	stb6000_attach	drivers/media/dvb/frontends/stb6000	EXPORT_SYMBOL
+0x0d638b2a	lnbp21_attach	drivers/media/dvb/frontends/lnbp21	EXPORT_SYMBOL
+0xf14bf8b1	b1pcmcia_addcard_b1	drivers/isdn/hardware/avm/b1pcmcia	EXPORT_SYMBOL
+0xaec3240e	b1pcmcia_addcard_m1	drivers/isdn/hardware/avm/b1pcmcia	EXPORT_SYMBOL
+0xea620116	b1pcmcia_addcard_m2	drivers/isdn/hardware/avm/b1pcmcia	EXPORT_SYMBOL
+0xecaf4714	dev_trans_start	vmlinux	EXPORT_SYMBOL
+0x10ee20bb	default_blu	vmlinux	EXPORT_SYMBOL
+0x8b04668e	bind_interdomain_evtchn_to_irqhandler	vmlinux	EXPORT_SYMBOL_GPL
+0x57575f08	dmaengine_put	vmlinux	EXPORT_SYMBOL
+0xaae8ab0e	acpi_bus_power_manageable	vmlinux	EXPORT_SYMBOL
+0x4ea25709	dql_reset	vmlinux	EXPORT_SYMBOL
+0xef4b6b06	blk_register_region	vmlinux	EXPORT_SYMBOL
+0x138fdf5b	bio_put	vmlinux	EXPORT_SYMBOL
+0xa4e6c292	task_tgid_nr_ns	vmlinux	EXPORT_SYMBOL
+0xd861f4aa	ieee80211_rts_get	net/mac80211/mac80211	EXPORT_SYMBOL
+0x47f72afb	journal_force_commit	fs/jbd/jbd	EXPORT_SYMBOL
+0xbc6b3cfc	w1_read_block	drivers/w1/wire	EXPORT_SYMBOL_GPL
+0xd0ac63e9	scsi_is_target_device	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x00d098e8	video_ioctl2	drivers/media/video/videodev	EXPORT_SYMBOL
+0x79b85697	smscore_get_device_mode	drivers/media/dvb/siano/smsmdtv	EXPORT_SYMBOL_GPL
+0x44c252bf	dib0090_update_tuning_table_7090	drivers/media/dvb/frontends/dib0090	EXPORT_SYMBOL
+0xd285995f	mISDN_clock_get	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0xa2eb2a5a	tpm_store_cancel	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x1b83a6e6	input_alloc_absinfo	vmlinux	EXPORT_SYMBOL
+0x1ba0bdc6	each_symbol_section	vmlinux	EXPORT_SYMBOL_GPL
+0x2c5c5514	rds_message_add_rdma_dest_extension	net/rds/rds	EXPORT_SYMBOL_GPL
+0xac93ae05	ax25_bcast	net/ax25/ax25	EXPORT_SYMBOL_GPL
+0x50766d69	v4l2_ctrl_query_menu_valid_items	drivers/media/video/v4l2-common	EXPORT_SYMBOL
+0x7b57c5bf	cx231xx_set_mode	drivers/media/video/cx231xx/cx231xx	EXPORT_SYMBOL_GPL
+0x1180fb86	ib_modify_qp_is_ok	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x6c97a590	sk_dst_check	vmlinux	EXPORT_SYMBOL
+0x453c8403	pci_msi_enabled	vmlinux	EXPORT_SYMBOL
+0x6a76f3ac	blk_iopoll_enable	vmlinux	EXPORT_SYMBOL
+0x534aeb83	inode_needs_sync	vmlinux	EXPORT_SYMBOL
+0x7ce7e848	grab_cache_page_nowait	vmlinux	EXPORT_SYMBOL
+0xe7a81967	audit_log_secctx	vmlinux	EXPORT_SYMBOL
+0x3e7f0dfc	__wake_up_sync_key	vmlinux	EXPORT_SYMBOL_GPL
+0xa67d3874	snd_rawmidi_receive	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0x40b31af7	irttp_connect_request	net/irda/irda	EXPORT_SYMBOL
+0xab9c12a9	irlmp_connect_request	net/irda/irda	EXPORT_SYMBOL
+0xbe3d90e8	ssb_pmu_set_ldo_voltage	drivers/ssb/ssb	EXPORT_SYMBOL
+0xb3603156	scsi_internal_device_block	drivers/scsi/scsi_mod	EXPORT_SYMBOL_GPL
+0xe823af44	ahci_print_info	drivers/ata/libahci	EXPORT_SYMBOL_GPL
+0x8826c13b	acpi_video_register	drivers/acpi/video	EXPORT_SYMBOL
+0x9e9875d5	dev_getfirstbyhwtype	vmlinux	EXPORT_SYMBOL
+0x80a73853	wake_up_process	vmlinux	EXPORT_SYMBOL
+0x25820c64	fs_overflowuid	vmlinux	EXPORT_SYMBOL
+0xcac0a3be	snd_seq_kernel_client_enqueue	sound/core/seq/snd-seq	EXPORT_SYMBOL
+0xca44d18a	__nf_ct_refresh_acct	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x53dea1ff	ax2asc	net/ax25/ax25	EXPORT_SYMBOL
+0x9b7de224	nfs_initiate_read	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0xc355371c	scsi_is_sas_port	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL
+0x4aed7078	scsi_target_resume	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x70fe4f8a	flexcop_device_exit	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0x9763ab72	hidinput_count_leds	drivers/hid/hid	EXPORT_SYMBOL_GPL
+0x4f476e96	init_cdrom_command	drivers/cdrom/cdrom	EXPORT_SYMBOL
+0x1eba928f	ata_sff_queue_delayed_work	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xea418e0f	atapi_cmd_type	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x0940bd69	skb_dequeue_tail	vmlinux	EXPORT_SYMBOL
+0xa4a7f0db	input_ff_erase	vmlinux	EXPORT_SYMBOL_GPL
+0x3a7397d4	__get_user_pages	vmlinux	EXPORT_SYMBOL
+0x9b044ba3	free_css_id	vmlinux	EXPORT_SYMBOL_GPL
+0xa6961a30	__module_address	vmlinux	EXPORT_SYMBOL_GPL
+0x2085a938	arch_debugfs_dir	vmlinux	EXPORT_SYMBOL
+0x3b02e45d	srp_cmd_queue	drivers/scsi/libsrp	EXPORT_SYMBOL_GPL
+0x85e3ba66	videobuf_dma_unmap	drivers/media/video/videobuf-dma-sg	EXPORT_SYMBOL_GPL
+0xe38822eb	gigaset_handle_modem_response	drivers/isdn/gigaset/gigaset	EXPORT_SYMBOL_GPL
+0x47d3fc51	capi_info2str	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x2d0616e5	wm97xx_reg_read	drivers/input/touchscreen/wm97xx-ts	EXPORT_SYMBOL_GPL
+0x7dd0f746	ttm_mem_global_release	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x275d159d	inet_stream_ops	vmlinux	EXPORT_SYMBOL
+0x278d31af	qdisc_reset	vmlinux	EXPORT_SYMBOL
+0x63ecad53	register_netdevice_notifier	vmlinux	EXPORT_SYMBOL
+0x47ae9b2b	pci_get_device	vmlinux	EXPORT_SYMBOL
+0x4e1a819e	blk_complete_request	vmlinux	EXPORT_SYMBOL
+0x808ec1a3	crypto_alg_tested	vmlinux	EXPORT_SYMBOL_GPL
+0x1eb3221d	bio_unmap_user	vmlinux	EXPORT_SYMBOL
+0x50de3b3a	nci_free_device	net/nfc/nci/nci	EXPORT_SYMBOL
+0xd1c3fd1f	em28xx_audio_setup	drivers/media/video/em28xx/em28xx	EXPORT_SYMBOL_GPL
+0x24f72340	dm_rh_bio_to_region	drivers/md/dm-region-hash	EXPORT_SYMBOL_GPL
+0x10362223	edac_mc_free	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0xb40a276f	ata_sff_drain_fifo	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xcb3e0c03	udp_seq_open	vmlinux	EXPORT_SYMBOL
+0x8cda8029	xen_clear_irq_pending	vmlinux	EXPORT_SYMBOL
+0x264d3c3d	idr_get_next	vmlinux	EXPORT_SYMBOL
+0xf5400a56	fail_migrate_page	vmlinux	EXPORT_SYMBOL
+0x4cdb3178	ns_to_timeval	vmlinux	EXPORT_SYMBOL
+0xa189eecb	nf_ct_expect_register_notifier	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xeec928d7	dccp_connect	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xd80c3603	crc7_syndrome_table	lib/crc7	EXPORT_SYMBOL
+0x5cf14e43	rtl92c_dm_init_edca_turbo	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0x466c14a7	__delay	vmlinux	EXPORT_SYMBOL
+0x721b1851	skip_spaces	vmlinux	EXPORT_SYMBOL
+0x0c0c015e	ring_buffer_swap_cpu	vmlinux	EXPORT_SYMBOL_GPL
+0xdc2adb35	add_taint	vmlinux	EXPORT_SYMBOL
+0x60a32ea9	pm_power_off	vmlinux	EXPORT_SYMBOL
+0x89ae79f5	snd_wss_mce_down	sound/isa/wss/snd-wss-lib	EXPORT_SYMBOL
+0x456da6f7	osd_req_add_get_attr_page	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0x66415769	__neigh_for_each_release	vmlinux	EXPORT_SYMBOL
+0x81e35657	spi_busnum_to_master	vmlinux	EXPORT_SYMBOL_GPL
+0xe862c4b7	dpm_suspend_start	vmlinux	EXPORT_SYMBOL_GPL
+0x01cf55ed	device_initialize	vmlinux	EXPORT_SYMBOL_GPL
+0x6746f1c9	blk_queue_init_tags	vmlinux	EXPORT_SYMBOL
+0x208afcca	user_destroy	vmlinux	EXPORT_SYMBOL_GPL
+0xc9e4c32c	dquot_alloc_inode	vmlinux	EXPORT_SYMBOL
+0xb135610e	bdget	vmlinux	EXPORT_SYMBOL
+0x302223a4	bdput	vmlinux	EXPORT_SYMBOL
+0xf6aa72b9	fsstack_copy_inode_size	vmlinux	EXPORT_SYMBOL_GPL
+0x5c0a2dcd	nf_conntrack_untracked	net/netfilter/nf_conntrack	EXPORT_SYMBOL
+0x87143713	usb_usual_ignore_device	drivers/usb/storage/usb-storage	EXPORT_SYMBOL_GPL
+0x846bcc01	dm_table_get	drivers/md/dm-mod	EXPORT_SYMBOL
+0x6f81d2df	ata_pci_bmdma_prepare_host	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xed9f8e6d	kstrtos16	vmlinux	EXPORT_SYMBOL
+0xfb32b30f	ring_buffer_read_prepare_sync	vmlinux	EXPORT_SYMBOL_GPL
+0xa81fb87a	ieee80211_request_smps	net/mac80211/mac80211	EXPORT_SYMBOL_GPL
+0x1dcfc4a5	scsi_tgt_cmd_to_host	drivers/scsi/scsi_tgt	EXPORT_SYMBOL_GPL
+0xc2eb2714	memstick_register_driver	drivers/memstick/core/memstick	EXPORT_SYMBOL
+0x796c2d48	dm_get_md	drivers/md/dm-mod	EXPORT_SYMBOL_GPL
+0x27046576	kvm_exit	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x23783e94	tcf_em_register	vmlinux	EXPORT_SYMBOL
+0xb99d5837	xenbus_read	vmlinux	EXPORT_SYMBOL_GPL
+0xcd211b96	fs_kobj	vmlinux	EXPORT_SYMBOL_GPL
+0xadcac4a3	vfsmount_lock_local_unlock_cpu	vmlinux	EXPORT_SYMBOL
+0x8fa78556	rt2800_set_rts_threshold	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0xcf5665c2	lirc_dev_fop_close	drivers/media/rc/lirc_dev	EXPORT_SYMBOL
+0x69e97209	drm_mode_debug_printmodeline	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x98f26b13	cdrom_ioctl	drivers/cdrom/cdrom	EXPORT_SYMBOL
+0x0ce06877	sata_link_scr_lpm	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x6263e02d	strncpy_from_user	vmlinux	EXPORT_SYMBOL
+0x64b26447	crypto_alloc_ablkcipher	vmlinux	EXPORT_SYMBOL_GPL
+0x7abb65da	bio_init	vmlinux	EXPORT_SYMBOL
+0x7278d328	all_vm_events	vmlinux	EXPORT_SYMBOL_GPL
+0x41814cb8	dirty_writeback_interval	vmlinux	EXPORT_SYMBOL_GPL
+0xa8f1c8d3	rpc_max_payload	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x24c3892b	gss_mech_put	net/sunrpc/auth_gss/auth_rpcgss	EXPORT_SYMBOL_GPL
+0x92de38b8	sdio_enable_func	drivers/mmc/core/mmc_core	EXPORT_SYMBOL_GPL
+0x04a0d5b6	pi_write_regr	drivers/block/paride/paride	EXPORT_SYMBOL
+0xa28688aa	inet6_hash_connect	vmlinux	EXPORT_SYMBOL_GPL
+0xaa0e308c	gnet_stats_copy_rate_est	vmlinux	EXPORT_SYMBOL
+0xd46d63c1	skb_partial_csum_set	vmlinux	EXPORT_SYMBOL_GPL
+0x465b24c0	pm_runtime_no_callbacks	vmlinux	EXPORT_SYMBOL_GPL
+0x7de43022	subsys_dev_iter_next	vmlinux	EXPORT_SYMBOL_GPL
+0x8c342a74	pci_scan_root_bus	vmlinux	EXPORT_SYMBOL
+0x9f7bd2f9	create_empty_buffers	vmlinux	EXPORT_SYMBOL
+0xce8b4bd4	init_special_inode	vmlinux	EXPORT_SYMBOL
+0xd0720a17	on_each_cpu_cond	vmlinux	EXPORT_SYMBOL
+0x8f595b11	snd_major	sound/core/snd	EXPORT_SYMBOL
+0x8a64ff7c	cfg80211_mgmt_tx_status	net/wireless/cfg80211	EXPORT_SYMBOL
+0xc6d8912b	srp_release_transport	drivers/scsi/scsi_transport_srp	EXPORT_SYMBOL_GPL
+0x4aa39103	il_get_cmd_string	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x451b3f86	cfi_qry_present	drivers/mtd/chips/cfi_util	EXPORT_SYMBOL_GPL
+0x70181190	videobuf_read_stop	drivers/media/video/videobuf-core	EXPORT_SYMBOL_GPL
+0xc79bcd36	dm_vcalloc	drivers/md/dm-mod	EXPORT_SYMBOL
+0x6037a1ca	inet_frag_destroy	vmlinux	EXPORT_SYMBOL
+0xc27c53b2	skb_make_writable	vmlinux	EXPORT_SYMBOL
+0x2eeceb42	sk_chk_filter	vmlinux	EXPORT_SYMBOL
+0x332784ff	pipe_to_file	vmlinux	EXPORT_SYMBOL
+0xd7cbf234	__mod_zone_page_state	vmlinux	EXPORT_SYMBOL
+0x883e7801	__inc_zone_page_state	vmlinux	EXPORT_SYMBOL
+0x95bd8aec	__dec_zone_page_state	vmlinux	EXPORT_SYMBOL
+0xab6babaf	pm_qos_request	vmlinux	EXPORT_SYMBOL_GPL
+0x3ab32171	flush_kthread_worker	vmlinux	EXPORT_SYMBOL_GPL
+0x4acd93d3	release_resource	vmlinux	EXPORT_SYMBOL
+0x85160fc4	z8530_nop	drivers/net/wan/z85230	EXPORT_SYMBOL
+0x380f62a2	ppp_register_compressor	drivers/net/ppp/ppp_generic	EXPORT_SYMBOL
+0x52f2ad41	register_sja1000dev	drivers/net/can/sja1000/sja1000	EXPORT_SYMBOL_GPL
+0x810291c1	videobuf_waiton	drivers/media/video/videobuf-core	EXPORT_SYMBOL_GPL
+0xb6a467b1	drm_edid_is_valid	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xe6facb63	brioctl_set	vmlinux	EXPORT_SYMBOL
+0xd2058443	input_set_abs_params	vmlinux	EXPORT_SYMBOL
+0x8e16e1aa	spi_bus_unlock	vmlinux	EXPORT_SYMBOL_GPL
+0x0bce5673	device_schedule_callback_owner	vmlinux	EXPORT_SYMBOL_GPL
+0xb1133733	vm_insert_pfn	vmlinux	EXPORT_SYMBOL
+0xfcaa04a0	out_of_line_wait_on_bit_lock	vmlinux	EXPORT_SYMBOL
+0x3939f8f0	rfkill_pause_polling	net/rfkill/rfkill	EXPORT_SYMBOL
+0x969dcbcb	hci_le_start_enc	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x8fa59ee7	fat_remove_entries	fs/fat/fat	EXPORT_SYMBOL_GPL
+0x57dee5a8	atbm8830_attach	drivers/media/dvb/frontends/atbm8830	EXPORT_SYMBOL
+0x614ede30	mISDN_FsmAddTimer	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0x4c3d5edb	register_net_sysctl_table	vmlinux	EXPORT_SYMBOL_GPL
+0xc116ad30	xfrm_state_alloc	vmlinux	EXPORT_SYMBOL
+0x85670f1d	rtnl_is_locked	vmlinux	EXPORT_SYMBOL
+0x22819be1	page_symlink	vmlinux	EXPORT_SYMBOL
+0xbc6f931b	workqueue_congested	vmlinux	EXPORT_SYMBOL_GPL
+0x7f7c1d59	freq_reg_info	net/wireless/cfg80211	EXPORT_SYMBOL
+0xfe078f19	o2hb_register_callback	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0x79c8afa9	nfsacl_encode	fs/nfs_common/nfs_acl	EXPORT_SYMBOL_GPL
+0xa3c667f0	nfsacl_decode	fs/nfs_common/nfs_acl	EXPORT_SYMBOL_GPL
+0x4e709eed	rtl_usb_suspend	drivers/net/wireless/rtlwifi/rtlwifi	EXPORT_SYMBOL
+0x2ed3da5b	tda10045_attach	drivers/media/dvb/frontends/tda1004x	EXPORT_SYMBOL
+0x4eea93d4	tda10046_attach	drivers/media/dvb/frontends/tda1004x	EXPORT_SYMBOL
+0x64afaa4e	tda10048_attach	drivers/media/dvb/frontends/tda10048	EXPORT_SYMBOL
+0x3bf22974	__xfrm_route_forward	vmlinux	EXPORT_SYMBOL
+0xb6f091ae	skb_gso_transport_seglen	vmlinux	EXPORT_SYMBOL_GPL
+0xe276d549	p9_client_getattr_dotl	net/9p/9pnet	EXPORT_SYMBOL
+0x3d1d43a6	spi_bitbang_setup	drivers/spi/spi-bitbang	EXPORT_SYMBOL_GPL
+0x68a50926	scsi_target_unblock	drivers/scsi/scsi_mod	EXPORT_SYMBOL_GPL
+0x97eb5d60	fc_get_host_port_state	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x99aa65cb	il_send_bt_config	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xad07f027	gen_replace_estimator	vmlinux	EXPORT_SYMBOL
+0x2f03fc4b	security_secmark_refcount_inc	vmlinux	EXPORT_SYMBOL
+0x19bd383b	security_secmark_refcount_dec	vmlinux	EXPORT_SYMBOL
+0x3eae292f	param_set_byte	vmlinux	EXPORT_SYMBOL
+0x21315700	param_get_bool	vmlinux	EXPORT_SYMBOL
+0xc22b50ad	param_set_bint	vmlinux	EXPORT_SYMBOL
+0x0abbad24	rpc_call_null	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xb16e40f6	fc_exch_mgr_alloc	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x42cf9438	sm501_misc_control	drivers/mfd/sm501	EXPORT_SYMBOL_GPL
+0x91607441	drm_platform_init	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x79f1e63f	drm_platform_exit	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x9c655a77	tpm_do_selftest	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x9fdecc31	unregister_netdevice_many	vmlinux	EXPORT_SYMBOL
+0x8d546fdb	rtc_device_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0xdf0da3cc	acpi_get_devices	vmlinux	EXPORT_SYMBOL
+0x438f78b6	blk_abort_queue	vmlinux	EXPORT_SYMBOL_GPL
+0x1d29200e	blk_queue_logical_block_size	vmlinux	EXPORT_SYMBOL
+0x7798eb38	init_srcu_struct	vmlinux	EXPORT_SYMBOL_GPL
+0x740a1b95	reserve_evntsel_nmi	vmlinux	EXPORT_SYMBOL
+0xc99bc236	snd_opl3_init	sound/drivers/opl3/snd-opl3-lib	EXPORT_SYMBOL
+0xfd1a1d49	sunrpc_cache_lookup	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x4d2a941b	parport_ieee1284_interrupt	drivers/parport/parport	EXPORT_SYMBOL
+0x3f2d9561	phy_attach	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x6c348dc8	v4l2_ctrl_add_ctrl	drivers/media/video/videodev	EXPORT_SYMBOL
+0xa9b3981f	af9013_attach	drivers/media/dvb/frontends/af9013	EXPORT_SYMBOL
+0xf22d08c2	arp_tbl	vmlinux	EXPORT_SYMBOL
+0xc33ab9d2	__skb_recv_datagram	vmlinux	EXPORT_SYMBOL
+0x6237f6b5	acpi_enable_event	vmlinux	EXPORT_SYMBOL
+0xfe7c4287	nr_cpu_ids	vmlinux	EXPORT_SYMBOL
+0x065994f1	xdr_encode_opaque_fixed	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x80a9be54	xt_unregister_match	net/netfilter/x_tables	EXPORT_SYMBOL
+0x0a965b31	net_vs_ctl_path	net/netfilter/ipvs/ip_vs	EXPORT_SYMBOL_GPL
+0xda091d7d	p9_client_create_dotl	net/9p/9pnet	EXPORT_SYMBOL
+0x7bc9371b	zs_map_object	drivers/staging/zsmalloc/zsmalloc	EXPORT_SYMBOL_GPL
+0x54109bda	recv_Bchannel	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0x37838b44	rdma_translate_ip	drivers/infiniband/core/ib_addr	EXPORT_SYMBOL
+0xf2b185ee	pi_read_block	drivers/block/paride/paride	EXPORT_SYMBOL
+0xe18572dc	tcp_splice_read	vmlinux	EXPORT_SYMBOL
+0xebc1a887	acpiphp_unregister_attention	vmlinux	EXPORT_SYMBOL_GPL
+0x430b2c66	irq_setup_generic_chip	vmlinux	EXPORT_SYMBOL_GPL
+0x22f758d2	ip_vs_conn_in_get_proto	net/netfilter/ipvs/ip_vs	EXPORT_SYMBOL_GPL
+0x97fa3b26	matrox_millennium	drivers/video/matrox/matroxfb_Ti3026	EXPORT_SYMBOL
+0x769caa8c	iscsi_prep_data_out_pdu	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0x7fc8652c	em28xx_tuner_callback	drivers/media/video/em28xx/em28xx	EXPORT_SYMBOL_GPL
+0xa8b74843	drm_master_get	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x651c334b	devm_regmap_init_i2c	drivers/base/regmap/regmap-i2c	EXPORT_SYMBOL_GPL
+0x5187ac4b	xen_store_evtchn	vmlinux	EXPORT_SYMBOL_GPL
+0xad13c689	acpi_os_execute	vmlinux	EXPORT_SYMBOL
+0xc4316adf	css_depth	vmlinux	EXPORT_SYMBOL_GPL
+0x8b1959b7	ceph_osdc_cancel_event	net/ceph/libceph	EXPORT_SYMBOL
+0xb9583e44	rtl_usb_probe	drivers/net/wireless/rtlwifi/rtlwifi	EXPORT_SYMBOL
+0x15ef78a5	mptscsih_suspend	drivers/message/fusion/mptscsih	EXPORT_SYMBOL
+0x2b7fe2d3	lirc_dev_fop_read	drivers/media/rc/lirc_dev	EXPORT_SYMBOL
+0x6859ae70	gigaset_freecs	drivers/isdn/gigaset/gigaset	EXPORT_SYMBOL_GPL
+0x4915fb8c	ttm_read_unlock	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x00704096	drm_agp_acquire	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x35131b36	drbd_role_str	drivers/block/drbd/drbd	EXPORT_SYMBOL
+0x6e399f63	lrw_crypt	crypto/lrw	EXPORT_SYMBOL_GPL
+0x36e360e3	__hw_addr_add_multiple	vmlinux	EXPORT_SYMBOL
+0xcbc9557f	unregister_sysrq_key	vmlinux	EXPORT_SYMBOL
+0xd85ac634	regulator_put	vmlinux	EXPORT_SYMBOL_GPL
+0x28b715a6	isapnp_cfg_end	vmlinux	EXPORT_SYMBOL
+0x94c318be	apei_exec_collect_resources	vmlinux	EXPORT_SYMBOL_GPL
+0x7107e85d	crypto_unregister_algs	vmlinux	EXPORT_SYMBOL_GPL
+0xafc8c9b6	simple_transaction_set	vmlinux	EXPORT_SYMBOL
+0xb57304cb	simple_transaction_get	vmlinux	EXPORT_SYMBOL
+0x06791732	register_kretprobes	vmlinux	EXPORT_SYMBOL_GPL
+0x37ae4ef4	find_pid_ns	vmlinux	EXPORT_SYMBOL_GPL
+0xed591559	rfkill_alloc	net/rfkill/rfkill	EXPORT_SYMBOL
+0x82fd05f9	__nf_conntrack_find	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xab094f00	scsi_free_command	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xfe26b143	usbnet_cdc_bind	drivers/net/usb/cdc_ether	EXPORT_SYMBOL_GPL
+0xdeeee117	sdio_disable_func	drivers/mmc/core/mmc_core	EXPORT_SYMBOL_GPL
+0x217118e6	hid_add_device	drivers/hid/hid	EXPORT_SYMBOL_GPL
+0x56e75d47	klist_node_attached	vmlinux	EXPORT_SYMBOL_GPL
+0xd425e1ce	__nlmsg_put	vmlinux	EXPORT_SYMBOL
+0x694945cc	lock_sock_nested	vmlinux	EXPORT_SYMBOL
+0x6f67c843	platform_add_devices	vmlinux	EXPORT_SYMBOL_GPL
+0x92b57248	flush_work	vmlinux	EXPORT_SYMBOL_GPL
+0x6b17b412	usb_deregister	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x2fe0b7a4	il_rd_prph	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xc634efc1	il_wr_prph	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xf2755284	mlx4_db_free	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x680d264f	cxgb4_alloc_atid	drivers/net/ethernet/chelsio/cxgb4/cxgb4	EXPORT_SYMBOL
+0xeb28c104	cxgb4_alloc_stid	drivers/net/ethernet/chelsio/cxgb4/cxgb4	EXPORT_SYMBOL
+0x915599e9	cxgb3_alloc_atid	drivers/net/ethernet/chelsio/cxgb3/cxgb3	EXPORT_SYMBOL
+0x6f5592d0	cxgb3_alloc_stid	drivers/net/ethernet/chelsio/cxgb3/cxgb3	EXPORT_SYMBOL
+0xb967690a	dm_btree_remove	drivers/md/persistent-data/dm-persistent-data	EXPORT_SYMBOL_GPL
+0x9d655919	bitmap_close_sync	drivers/md/md-mod	EXPORT_SYMBOL
+0xea33be2a	drm_mm_dump_table	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x60d0b10e	ata_sff_port_ops	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x1068004b	gf128mul_bbe	crypto/gf128mul	EXPORT_SYMBOL
+0x04cda566	snd_interval_refine	sound/core/snd-pcm	EXPORT_SYMBOL
+0x9af7b3b8	p54_parse_firmware	drivers/net/wireless/p54/p54common	EXPORT_SYMBOL_GPL
+0x500dad56	hostap_master_start_xmit	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x87c35dc3	videobuf_dvb_dealloc_frontends	drivers/media/video/videobuf-dvb	EXPORT_SYMBOL
+0x41469c24	drm_mm_remove_node	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x4b3982f1	rdev_get_drvdata	vmlinux	EXPORT_SYMBOL_GPL
+0xa8144a91	acpi_bus_unregister_driver	vmlinux	EXPORT_SYMBOL
+0xc1f7e3be	crypto_alloc_instance	vmlinux	EXPORT_SYMBOL_GPL
+0x0036bb83	mpage_writepage	vmlinux	EXPORT_SYMBOL
+0xd942d353	ring_buffer_record_off	vmlinux	EXPORT_SYMBOL_GPL
+0x09f47833	set_security_override	vmlinux	EXPORT_SYMBOL
+0x6b2dc060	dump_stack	vmlinux	EXPORT_SYMBOL
+0x84ae9cab	nfc_allocate_device	net/nfc/nfc	EXPORT_SYMBOL
+0xe7dc6c50	nfnetlink_subsys_unregister	net/netfilter/nfnetlink	EXPORT_SYMBOL_GPL
+0x74ba765d	scsi_dh_activate	drivers/scsi/device_handler/scsi_dh	EXPORT_SYMBOL_GPL
+0xeeb24cff	hdlc_change_mtu	drivers/net/wan/hdlc	EXPORT_SYMBOL
+0x4be48e0a	mlx4_qp_to_ready	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x636af174	cnic_unregister_driver	drivers/net/ethernet/broadcom/cnic	EXPORT_SYMBOL
+0xad221c97	ir_raw_event_store_with_filter	drivers/media/rc/rc-core	EXPORT_SYMBOL_GPL
+0x61d7d012	ata_dev_pair	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x1173f1f7	raw_seq_start	vmlinux	EXPORT_SYMBOL_GPL
+0x82c221b5	dst_cow_metrics_generic	vmlinux	EXPORT_SYMBOL
+0x9fb39472	rtc_read_time	vmlinux	EXPORT_SYMBOL_GPL
+0x5e8dd440	swiotlb_map_page	vmlinux	EXPORT_SYMBOL_GPL
+0x883cc86f	mount_ns	vmlinux	EXPORT_SYMBOL
+0x3761eece	p9_client_create	net/9p/9pnet	EXPORT_SYMBOL
+0x63d2ff63	eeprom_93cx6_wren	drivers/misc/eeprom/eeprom_93cx6	EXPORT_SYMBOL_GPL
+0x724eb867	flexcop_dma_config	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0x6697d24e	drm_core_reclaim_buffers	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x82c41ff1	kvm_set_cr3	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xf557ca5c	kobject_del	vmlinux	EXPORT_SYMBOL
+0x0e7a8a1d	crypto_unregister_shash	vmlinux	EXPORT_SYMBOL_GPL
+0xf71a6716	crypto_unregister_ahash	vmlinux	EXPORT_SYMBOL_GPL
+0x4e2c5426	snd_ctl_find_numid	sound/core/snd	EXPORT_SYMBOL
+0x3b939a0f	nat_callforwarding_hook	net/netfilter/nf_conntrack_h323	EXPORT_SYMBOL_GPL
+0x54fbf816	usb_reset_endpoint	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x1a22f3f1	mite_setup	drivers/staging/comedi/drivers/mite	EXPORT_SYMBOL
+0xf8906fe4	qlogicfas408_biosparam	drivers/scsi/qlogicfas408	EXPORT_SYMBOL
+0x7604a137	wl1271_set_partition	drivers/net/wireless/wl12xx/wl12xx	EXPORT_SYMBOL_GPL
+0x80fce79a	vb2_get_vma	drivers/media/video/videobuf2-memops	EXPORT_SYMBOL_GPL
+0x38a4f7ae	drm_format_num_planes	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0xc414c422	drm_vblank_offdelay	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x13b2a946	register_keyboard_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0xb6a68816	find_last_bit	vmlinux	EXPORT_SYMBOL
+0x5dddb4ee	inode_dio_done	vmlinux	EXPORT_SYMBOL
+0x84b29f2a	poll_initwait	vmlinux	EXPORT_SYMBOL
+0x193d48e0	trace_current_buffer_unlock_commit	vmlinux	EXPORT_SYMBOL_GPL
+0xfa4a6c1a	unregister_console	vmlinux	EXPORT_SYMBOL
+0x3dd4b757	snd_hda_sequence_write_cache	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xec6e59b4	nf_ct_helper_ext_add	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x4900035b	o2hb_stop_all_regions	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0x35d34def	usb_stor_reset_resume	drivers/usb/storage/usb-storage	EXPORT_SYMBOL_GPL
+0x362a5e61	il_init_scan_params	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x32f13d7f	phy_disconnect	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x98f696c8	edac_device_handle_ce	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x7af3760e	edac_device_handle_ue	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x79cf5f56	led_trigger_unregister_simple	vmlinux	EXPORT_SYMBOL_GPL
+0xb9dec796	regmap_update_bits	vmlinux	EXPORT_SYMBOL_GPL
+0xb58df052	aead_geniv_free	vmlinux	EXPORT_SYMBOL_GPL
+0xd8e484f0	register_chrdev_region	vmlinux	EXPORT_SYMBOL
+0x7ac8e5b0	acpi_gsi_to_irq	vmlinux	EXPORT_SYMBOL_GPL
+0xdc495450	snd_gf1_i_look16	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0xc63f1b81	ieee80211_radiotap_iterator_next	net/wireless/cfg80211	EXPORT_SYMBOL
+0x40a274ca	rate_control_send_low	net/mac80211/mac80211	EXPORT_SYMBOL
+0xc83116f3	nfs4_reset_read	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0xacc20ddd	mlx4_unregister_interface	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x1126afaf	bio_clone_mddev	drivers/md/md-mod	EXPORT_SYMBOL_GPL
+0x5cd4121c	inet_csk_reqsk_queue_prune	vmlinux	EXPORT_SYMBOL_GPL
+0x4c5dae84	netdev_state_change	vmlinux	EXPORT_SYMBOL
+0x310917fe	sort	vmlinux	EXPORT_SYMBOL
+0xa8fef7bb	security_unix_may_send	vmlinux	EXPORT_SYMBOL
+0x541bd60a	irq_work_run	vmlinux	EXPORT_SYMBOL_GPL
+0x6c49c4f2	clockevents_notify	vmlinux	EXPORT_SYMBOL_GPL
+0x8f6494ca	snd_rawmidi_kernel_read	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0x271dd86f	hci_recv_stream_fragment	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x11797aee	fscache_io_error	fs/fscache/fscache	EXPORT_SYMBOL
+0x8d943e24	usb_sg_cancel	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x49442950	iscsi_host_remove	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0x9ef8fee2	cxgbi_conn_xmit_pdu	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0x94783e7a	mlx4_SET_PORT_general	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL
+0x02c76c44	ib_register_mad_snoop	drivers/infiniband/core/ib_mad	EXPORT_SYMBOL
+0x7c9b19a5	is_noslot_pfn	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x4e069249	security_tun_dev_post_create	vmlinux	EXPORT_SYMBOL
+0xbc60ed4c	kern_path	vmlinux	EXPORT_SYMBOL
+0xc2b79170	snd_emux_new	sound/synth/emux/snd-emux-synth	EXPORT_SYMBOL
+0x58c98818	iscsi_destroy_conn	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0xaa303fba	il_get_active_dwell_time	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x3797f173	sm501_find_clock	drivers/mfd/sm501	EXPORT_SYMBOL_GPL
+0x7a0d92ec	ib_register_device	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x864f0816	nf_register_queue_handler	vmlinux	EXPORT_SYMBOL
+0x5ca3d664	netpoll_print_options	vmlinux	EXPORT_SYMBOL
+0x0b9dfcfa	dma_alloc_from_coherent	vmlinux	EXPORT_SYMBOL
+0xe4309905	syscore_resume	vmlinux	EXPORT_SYMBOL_GPL
+0x2685c3d7	__sg_alloc_table	vmlinux	EXPORT_SYMBOL
+0xd2df5380	shrink_dcache_sb	vmlinux	EXPORT_SYMBOL
+0x15692c87	param_ops_int	vmlinux	EXPORT_SYMBOL
+0x5d9ed049	il_set_flags_for_band	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xb3f3e40b	ib_register_event_handler	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x5e80f37c	ipmi_unregister_for_cmd	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0x011cf028	regulator_suspend_finish	vmlinux	EXPORT_SYMBOL_GPL
+0x02b151ec	__pci_hp_register	vmlinux	EXPORT_SYMBOL_GPL
+0xb680d685	blkdev_issue_flush	vmlinux	EXPORT_SYMBOL
+0x499043d3	crypto_init_queue	vmlinux	EXPORT_SYMBOL_GPL
+0x39033cb5	default_backing_dev_info	vmlinux	EXPORT_SYMBOL_GPL
+0x771d39c5	ni_tio_cancel	drivers/staging/comedi/drivers/ni_tiocmd	EXPORT_SYMBOL_GPL
+0x8f5c5e52	drm_gem_object_init	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xbdbe7378	cookie_check_timestamp	vmlinux	EXPORT_SYMBOL
+0xfdcbc79e	find_inode_number	vmlinux	EXPORT_SYMBOL
+0xb2d307de	param_ops_short	vmlinux	EXPORT_SYMBOL
+0x21f9038a	x86_hyper_ms_hyperv	vmlinux	EXPORT_SYMBOL
+0x4b97abd2	oxygen_write16_masked	sound/pci/oxygen/snd-oxygen-lib	EXPORT_SYMBOL
+0x9a6781bb	oxygen_write32_masked	sound/pci/oxygen/snd-oxygen-lib	EXPORT_SYMBOL
+0x01f226f1	rpcb_getport_async	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xaad6d92f	rfkill_init_sw_state	net/rfkill/rfkill	EXPORT_SYMBOL
+0x741a60b6	dccp_v4_request_recv_sock	net/dccp/dccp_ipv4	EXPORT_SYMBOL_GPL
+0x215611f1	hci_unregister_dev	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x23c8f257	slhc_uncompress	drivers/net/slip/slhc	EXPORT_SYMBOL
+0x9bb2b336	cs5535_mfgpt_free_timer	drivers/misc/cs5535-mfgpt	EXPORT_SYMBOL_GPL
+0x51f5ac7d	mpt_findImVolumes	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0x14d25816	mantis_frontend_power	drivers/media/dvb/mantis/mantis_core	EXPORT_SYMBOL_GPL
+0x76768a8c	kvm_cpu_get_interrupt	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x510ca5b5	ip_route_input_common	vmlinux	EXPORT_SYMBOL
+0x184e5250	get_agp_version	vmlinux	EXPORT_SYMBOL
+0x2c1c984b	unregister_con_driver	vmlinux	EXPORT_SYMBOL
+0xa6970398	__kfifo_to_user_r	vmlinux	EXPORT_SYMBOL
+0x31469540	viafb_pm_unregister	drivers/video/via/viafb	EXPORT_SYMBOL_GPL
+0xd18eb985	cxgbi_conn_alloc_pdu	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0xe4fc7c78	rt2x00mac_configure_filter	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x0c74ce2a	libipw_rx_any	drivers/net/wireless/ipw2x00/libipw	EXPORT_SYMBOL_GPL
+0x63b2ff62	dm_btree_insert	drivers/md/persistent-data/dm-persistent-data	EXPORT_SYMBOL_GPL
+0x108cf30e	softnet_data	vmlinux	EXPORT_SYMBOL
+0x6acad21f	acpi_get_cpuid	vmlinux	EXPORT_SYMBOL_GPL
+0x00f42699	files_lglock_global_unlock	vmlinux	EXPORT_SYMBOL
+0x24e1307e	flush_work_sync	vmlinux	EXPORT_SYMBOL_GPL
+0xfe5d4bb2	sys_tz	vmlinux	EXPORT_SYMBOL
+0xfc3291a0	snd_hda_jack_detect	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xe6051a3e	comedi_get_n_channels	drivers/staging/comedi/kcomedilib/kcomedilib	EXPORT_SYMBOL
+0x0fb51275	fcoe_queue_timer	drivers/scsi/fcoe/libfcoe	EXPORT_SYMBOL_GPL
+0x4ae14a73	cx231xx_set_alt_setting	drivers/media/video/cx231xx/cx231xx	EXPORT_SYMBOL_GPL
+0xa6aae3ea	dm_btree_find_highest_key	drivers/md/persistent-data/dm-persistent-data	EXPORT_SYMBOL_GPL
+0x613440f6	acpi_processor_preregister_performance	drivers/acpi/processor	EXPORT_SYMBOL
+0x99488227	__skb_tx_hash	vmlinux	EXPORT_SYMBOL
+0xd6ed3a8e	cper_next_record_id	vmlinux	EXPORT_SYMBOL_GPL
+0x21e0ea22	acpi_get_id	vmlinux	EXPORT_SYMBOL
+0x9c273e0d	lock_fb_info	vmlinux	EXPORT_SYMBOL
+0xf1f3d73f	blk_integrity_register	vmlinux	EXPORT_SYMBOL
+0x187b04b2	blk_init_queue	vmlinux	EXPORT_SYMBOL
+0x1336f389	unlock_page	vmlinux	EXPORT_SYMBOL
+0x181f0b9f	rpc_pipefs_notifier_register	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x8bd54f64	sdio_memcpy_fromio	drivers/mmc/core/mmc_core	EXPORT_SYMBOL_GPL
+0xd2887582	cx24116_attach	drivers/media/dvb/frontends/cx24116	EXPORT_SYMBOL
+0x265248c3	i2c_pca_add_numbered_bus	drivers/i2c/algos/i2c-algo-pca	EXPORT_SYMBOL
+0x6d0fa4ef	drm_sysfs_hotplug_event	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x11e2ec12	flex_array_free_parts	vmlinux	EXPORT_SYMBOL
+0x41313254	snd_info_register	sound/core/snd	EXPORT_SYMBOL
+0x0f668ba9	svc_auth_unregister	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x9de3eb53	jbd2_log_wait_commit	fs/jbd2/jbd2	EXPORT_SYMBOL
+0x8b7f33f1	tpm_show_pubek	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x4e39b7d9	kvm_vcpu_uninit	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x1a8701f7	xfrm_unregister_type	vmlinux	EXPORT_SYMBOL
+0x5a6fb11e	nf_ip_checksum	vmlinux	EXPORT_SYMBOL
+0xd14bc4d9	sock_diag_save_cookie	vmlinux	EXPORT_SYMBOL_GPL
+0x55526907	xen_features	vmlinux	EXPORT_SYMBOL_GPL
+0xa5eeccd4	pci_request_regions_exclusive	vmlinux	EXPORT_SYMBOL
+0x773a9c94	blk_iopoll_enabled	vmlinux	EXPORT_SYMBOL
+0x93918d14	hrtimer_init_sleeper	vmlinux	EXPORT_SYMBOL_GPL
+0x11277187	snd_hda_load_patch	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x0283dfe3	_snd_pcm_hw_params_any	sound/core/snd-pcm	EXPORT_SYMBOL
+0x832db59c	memstick_free_host	drivers/memstick/core/memstick	EXPORT_SYMBOL
+0xa1b28253	wm97xx_config_gpio	drivers/input/touchscreen/wm97xx-ts	EXPORT_SYMBOL_GPL
+0x3a841dba	eth_rebuild_header	vmlinux	EXPORT_SYMBOL
+0xb5a35f64	neigh_compat_output	vmlinux	EXPORT_SYMBOL
+0xb4e14553	gnttab_query_foreign_access	vmlinux	EXPORT_SYMBOL_GPL
+0x95c31ff5	__copy_from_user_ll_nozero	vmlinux	EXPORT_SYMBOL
+0x477dd4e0	dquot_disable	vmlinux	EXPORT_SYMBOL
+0x52cc8887	user_path_at	vmlinux	EXPORT_SYMBOL
+0xf7854b39	module_put	vmlinux	EXPORT_SYMBOL
+0x2459bbcc	console_set_on_cmdline	vmlinux	EXPORT_SYMBOL
+0xb0b62eff	uwb_rc_vcmd	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0xf0420453	usb_get_from_anchor	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x27948701	osd_req_write_sg_kern	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0xa1632efa	fc_change_queue_type	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0xc394f1f5	rt2x00mac_stop	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0xf603db07	libipw_freq_to_channel	drivers/net/wireless/ipw2x00/libipw	EXPORT_SYMBOL
+0xfdd2e556	genphy_resume	drivers/net/phy/libphy	EXPORT_SYMBOL
+0xe44d01c1	videobuf_dqbuf	drivers/media/video/videobuf-core	EXPORT_SYMBOL_GPL
+0xa8813ad6	dm_rh_region_to_sector	drivers/md/dm-region-hash	EXPORT_SYMBOL_GPL
+0x63ba5f95	drm_mm_debug_table	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xd3bd9300	cs5535_gpio_isset	drivers/gpio/gpio-cs5535	EXPORT_SYMBOL_GPL
+0xe0fa83f2	ipmi_register_for_cmd	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0xad69dd2f	sata_link_hardreset	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xd94b737e	erst_read	vmlinux	EXPORT_SYMBOL_GPL
+0xef1d35b7	acpi_install_address_space_handler	vmlinux	EXPORT_SYMBOL
+0x070e9ed5	inode_get_bytes	vmlinux	EXPORT_SYMBOL
+0xe45f60d8	__wake_up	vmlinux	EXPORT_SYMBOL
+0xb0376fbf	nf_conntrack_helper_unregister	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x7d54adaf	irias_new_object	net/irda/irda	EXPORT_SYMBOL
+0xe03a4a43	umc_bus_type	drivers/uwb/umc	EXPORT_SYMBOL_GPL
+0xbe903120	srp_iu_get	drivers/scsi/libsrp	EXPORT_SYMBOL_GPL
+0xb92952bc	srp_iu_put	drivers/scsi/libsrp	EXPORT_SYMBOL_GPL
+0xa5ecdc68	mpt_put_msg_frame_hi_pri	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0xf1ecd46d	mpt_free_msg_frame	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0xdff8e89d	tm6000_tuner_callback	drivers/media/video/tm6000/tm6000	EXPORT_SYMBOL_GPL
+0xedd21fc2	i2c_for_each_dev	drivers/i2c/i2c-core	EXPORT_SYMBOL_GPL
+0x4dafbd74	edac_device_add_device	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x621770eb	edac_device_del_device	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x5b86b673	dev_driver_string	vmlinux	EXPORT_SYMBOL
+0x30295972	pcie_get_readrq	vmlinux	EXPORT_SYMBOL
+0xc7a1840e	llist_add_batch	vmlinux	EXPORT_SYMBOL_GPL
+0x2787db00	vbin_printf	vmlinux	EXPORT_SYMBOL_GPL
+0x6b407801	security_d_instantiate	vmlinux	EXPORT_SYMBOL
+0xdefe36ac	vfs_mkdir	vmlinux	EXPORT_SYMBOL
+0xd44315c8	usb_driver_claim_interface	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x9cfd56c5	scsi_print_status	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xc47d3881	osd_start_request	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0x81aae57f	rtl92c_download_fw	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0x917fed34	mmc_cd_gpio_request	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x5ce8b3b9	drm_gem_prime_handle_to_fd	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x3824fc82	drm_sysfs_connector_remove	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x4ae398fe	cryptd_free_ahash	crypto/cryptd	EXPORT_SYMBOL_GPL
+0xbffcb3b7	acpi_os_get_iomem	vmlinux	EXPORT_SYMBOL_GPL
+0x77054549	eventfd_ctx_fileget	vmlinux	EXPORT_SYMBOL_GPL
+0x01139ffc	max_mapnr	vmlinux	EXPORT_SYMBOL
+0x0ec210b8	xen_start_info	vmlinux	EXPORT_SYMBOL_GPL
+0x9e9ab936	snd_opl3_reset	sound/drivers/opl3/snd-opl3-lib	EXPORT_SYMBOL
+0x4dacaa50	rpc_pipe_generic_upcall	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xe4b14525	xprt_unregister_transport	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xa803d4e0	iscsi_conn_failure	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0xe87943cf	mISDN_FsmInitTimer	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0xf3f038d8	drm_mm_search_free_in_range	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x35edab88	__ata_change_queue_depth	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xbddd4f74	led_trigger_set	vmlinux	EXPORT_SYMBOL_GPL
+0x63187451	pcie_aspm_support_enabled	vmlinux	EXPORT_SYMBOL
+0x975dedee	eventfd_fget	vmlinux	EXPORT_SYMBOL_GPL
+0x676e02a4	dget_parent	vmlinux	EXPORT_SYMBOL
+0xa66de5cc	snd_hda_query_supported_pcm	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xdf485fd8	snd_pcm_mmap_data	sound/core/snd-pcm	EXPORT_SYMBOL
+0x330fa569	wiphy_new	net/wireless/cfg80211	EXPORT_SYMBOL
+0x08e60b08	dccp_insert_option	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x8ca0f565	mb_cache_create	fs/mbcache	EXPORT_SYMBOL
+0x98d7fa12	wusbhc_rh_start_port_reset	drivers/usb/wusbcore/wusbcore	EXPORT_SYMBOL_GPL
+0x250a6cbe	usb_disable_autosuspend	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x18b7cad5	usb_get_dev	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x89ad3f11	ieee80211_reset_queue_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0x8ba01dad	wl1251_init_ieee80211	drivers/net/wireless/wl1251/wl1251	EXPORT_SYMBOL_GPL
+0x3e653f29	v4l2_int_ioctl_1	drivers/media/video/v4l2-int-device	EXPORT_SYMBOL_GPL
+0x0b86c1d4	dm_requeue_unmapped_request	drivers/md/dm-mod	EXPORT_SYMBOL_GPL
+0xb509d7bd	gigaset_m10x_send_skb	drivers/isdn/gigaset/gigaset	EXPORT_SYMBOL_GPL
+0xa620c32a	hid_dump_input	drivers/hid/hid	EXPORT_SYMBOL_GPL
+0x47049f63	securityfs_create_dir	vmlinux	EXPORT_SYMBOL_GPL
+0x3f5e71da	iunique	vmlinux	EXPORT_SYMBOL
+0x01a4ea6d	unregister_die_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0x28adfb16	snd_ac97_tune_hardware	sound/pci/ac97/snd-ac97-codec	EXPORT_SYMBOL
+0x75fa51e9	nfs4_schedule_stateid_recovery	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0xfd1a7f3b	mb_cache_destroy	fs/mbcache	EXPORT_SYMBOL
+0x4ef31fa7	w1_write_8	drivers/w1/wire	EXPORT_SYMBOL_GPL
+0x686de290	restore_vga	drivers/video/vgastate	EXPORT_SYMBOL
+0xa268adf2	scsi_put_command	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x66d0ef3c	rt2x00queue_start_queue	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x6c30ac0c	ata_dev_next	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x5614b010	xfrm_policy_walk_done	vmlinux	EXPORT_SYMBOL
+0x6673e3bd	inet_dgram_ops	vmlinux	EXPORT_SYMBOL
+0x355bfe57	input_release_device	vmlinux	EXPORT_SYMBOL
+0x7531e3dc	acpi_get_event_resources	vmlinux	EXPORT_SYMBOL
+0x616c5170	blk_alloc_queue	vmlinux	EXPORT_SYMBOL
+0x80ee118c	ip_set_nfnl_get	net/netfilter/ipset/ip_set	EXPORT_SYMBOL_GPL
+0x7762965e	ip_set_nfnl_put	net/netfilter/ipset/ip_set	EXPORT_SYMBOL_GPL
+0x46630d1e	tda8261_attach	drivers/media/dvb/frontends/tda8261	EXPORT_SYMBOL
+0x85144953	dm_bufio_client_create	drivers/md/dm-bufio	EXPORT_SYMBOL_GPL
+0x02226e81	proc_net_eicon	drivers/isdn/hardware/eicon/divadidd	EXPORT_SYMBOL
+0x0903c239	vid_from_reg	drivers/hwmon/hwmon-vid	EXPORT_SYMBOL
+0x3f418eae	fw_iso_context_flush_completions	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0xdd65ce4a	xenbus_register_frontend	vmlinux	EXPORT_SYMBOL_GPL
+0x65220759	gen_pool_for_each_chunk	vmlinux	EXPORT_SYMBOL
+0x266de537	get_gendisk	vmlinux	EXPORT_SYMBOL
+0x99bfbe39	get_unused_fd	vmlinux	EXPORT_SYMBOL
+0x7a50a315	files_lglock_global_unlock_online	vmlinux	EXPORT_SYMBOL
+0xfef8a166	trace_current_buffer_lock_reserve	vmlinux	EXPORT_SYMBOL_GPL
+0x9141ec9e	proc_doulongvec_minmax	vmlinux	EXPORT_SYMBOL
+0x93382fa6	ieee80211_bss_get_ie	net/wireless/cfg80211	EXPORT_SYMBOL
+0x5e2a1092	pnfs_generic_pg_init_read	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0xb4d8c7ad	usb_store_new_id	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x6588af31	comedi_error	drivers/staging/comedi/comedi	EXPORT_SYMBOL
+0x589d8b6d	sdev_evt_send_simple	drivers/scsi/scsi_mod	EXPORT_SYMBOL_GPL
+0xf002756d	rt2x00mac_set_tim	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0xe435493a	il_queue_space	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x8616761d	ath9k_hw_set_txq_props	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x4d16b203	ath9k_hw_get_txq_props	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xe8727c16	ttm_tt_fini	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0xd9726c04	drm_fb_helper_blank	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0xa748cf02	drm_connector_attach_property	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x291208d0	drm_vblank_post_modeset	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x659b0503	tcp_proc_unregister	vmlinux	EXPORT_SYMBOL
+0xb0df1bb2	hwmon_device_register	vmlinux	EXPORT_SYMBOL_GPL
+0x57160452	pci_renumber_slot	vmlinux	EXPORT_SYMBOL_GPL
+0xdefd0078	simple_attr_open	vmlinux	EXPORT_SYMBOL_GPL
+0x29059b53	__wake_up_locked_key	vmlinux	EXPORT_SYMBOL_GPL
+0x2d1b02d2	usermodehelper_read_lock_wait	vmlinux	EXPORT_SYMBOL_GPL
+0xe38f328d	usb_root_hub_lost_power	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x7afc4e95	sas_ssp_task_response	drivers/scsi/libsas/libsas	EXPORT_SYMBOL_GPL
+0x2ae9d38f	dvb_usb_generic_rw	drivers/media/dvb/dvb-usb/dvb-usb	EXPORT_SYMBOL
+0xa8f3c50e	ata_pci_bmdma_clear_simplex	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x3d105a72	hvc_remove	vmlinux	EXPORT_SYMBOL_GPL
+0x975ae6d5	pci_stop_and_remove_bus_device	vmlinux	EXPORT_SYMBOL
+0x85c10896	rcu_batches_completed_bh	vmlinux	EXPORT_SYMBOL_GPL
+0x5739210e	cgroup_path	vmlinux	EXPORT_SYMBOL_GPL
+0x4578f528	__kfifo_to_user	vmlinux	EXPORT_SYMBOL
+0xcc7fa952	local_bh_enable_ip	vmlinux	EXPORT_SYMBOL
+0x780aeeb6	ceph_con_close	net/ceph/libceph	EXPORT_SYMBOL
+0x75832469	dibusb_pid_filter	drivers/media/dvb/dvb-usb/dvb-usb-dibusb-common	EXPORT_SYMBOL
+0xaeeba16b	tt_msgs	drivers/edac/edac_mce_amd	EXPORT_SYMBOL_GPL
+0xc5398781	xfrm4_rcv_encap	vmlinux	EXPORT_SYMBOL
+0x11fef2a1	udp_poll	vmlinux	EXPORT_SYMBOL
+0x4a332e5c	skb_copy_ubufs	vmlinux	EXPORT_SYMBOL_GPL
+0x3a83f0ec	pci_hp_deregister	vmlinux	EXPORT_SYMBOL_GPL
+0xfd6b3d0c	posix_acl_from_mode	vmlinux	EXPORT_SYMBOL
+0x51ef33b8	kstrndup	vmlinux	EXPORT_SYMBOL
+0x610e101c	irq_set_chip	vmlinux	EXPORT_SYMBOL
+0xc521766b	console_stop	vmlinux	EXPORT_SYMBOL
+0x868dbfbf	snd_device_register	sound/core/snd	EXPORT_SYMBOL
+0x1341a583	nf_conntrack_tuple_taken	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x89a6fcba	mfd_add_devices	drivers/mfd/mfd-core	EXPORT_SYMBOL
+0x26f9f6d0	i2o_msg_post_wait_mem	drivers/message/i2o/i2o_core	EXPORT_SYMBOL
+0x949e741e	b1_load_config	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0xd764d8b5	ib_find_cached_pkey	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xb6dfd571	rdma_copy_addr	drivers/infiniband/core/ib_addr	EXPORT_SYMBOL
+0xb895690f	sata_pmp_port_ops	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x8a1a99ad	__serpent_decrypt	crypto/serpent_generic	EXPORT_SYMBOL_GPL
+0x9866c8db	inet6_getname	vmlinux	EXPORT_SYMBOL
+0xbadfb38a	sunrpc_init_cache_detail	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xcd4113eb	xdr_encode_word	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x89f56ca1	auth_domain_find	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xd321aa32	rds_message_put	net/rds/rds	EXPORT_SYMBOL_GPL
+0xa2d623f3	ip_set_range_to_cidr	net/netfilter/ipset/ip_set	EXPORT_SYMBOL_GPL
+0x6c2aebf2	usb_wwan_ioctl	drivers/usb/serial/usb_wwan	EXPORT_SYMBOL
+0x0a973a7c	ieee80211_wx_set_encode_ext_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0xfe874b3d	ieee80211_wx_get_encode_ext_rsl	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0xd93d22c2	eip_set_multicast_list	drivers/net/ethernet/8390/8390p	EXPORT_SYMBOL
+0xe5fefc2a	register_mtd_user	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0xebd80cce	drm_mode_config_reset	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x4fdc945d	sata_deb_timing_normal	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x87bd07bd	acpi_smbus_register_callback	drivers/acpi/sbshc	EXPORT_SYMBOL_GPL
+0x7483f69b	debugfs_create_file	vmlinux	EXPORT_SYMBOL_GPL
+0xba91415d	new_inode	vmlinux	EXPORT_SYMBOL
+0xd5783e1a	snd_ctl_find_id	sound/core/snd	EXPORT_SYMBOL
+0xb15b0ad0	rpc_restart_call_prepare	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x36ed7d8a	rds_send_get_message	net/rds/rds	EXPORT_SYMBOL_GPL
+0x777fe741	jbd2_journal_clear_err	fs/jbd2/jbd2	EXPORT_SYMBOL
+0xd87a2e89	__uio_register_device	drivers/uio/uio	EXPORT_SYMBOL_GPL
+0x28a2ed02	scsi_build_sense_buffer	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xaf428007	il_hdl_pm_debug_stats	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xf714033c	tty_port_close	vmlinux	EXPORT_SYMBOL
+0xf9348cbc	xz_dec_run	vmlinux	EXPORT_SYMBOL
+0x65dccf13	xz_dec_end	vmlinux	EXPORT_SYMBOL
+0x92a05f3d	idr_get_new	vmlinux	EXPORT_SYMBOL
+0xdec778f6	ida_get_new	vmlinux	EXPORT_SYMBOL
+0xe0b13336	argv_free	vmlinux	EXPORT_SYMBOL
+0x3240c65b	files_lglock_global_lock_online	vmlinux	EXPORT_SYMBOL
+0xc5db54a9	p9_idpool_destroy	net/9p/9pnet	EXPORT_SYMBOL
+0x04e133fc	iTCO_vendor_check_noreboot_on	drivers/watchdog/iTCO_vendor_support	EXPORT_SYMBOL
+0xaa0bd0dc	il_hdl_csa	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x2b7eebd9	mmc_suspend_host	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0xbcba301b	memstick_remove_host	drivers/memstick/core/memstick	EXPORT_SYMBOL
+0xc67f14a5	ibnl_remove_client	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x94737709	ttm_bo_clean_mm	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0xa2a98b91	ipmi_get_maintenance_mode	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0xd0636001	kvm_mmu_page_fault	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x41f1bd0e	genl_unregister_family	vmlinux	EXPORT_SYMBOL
+0xfe769456	unregister_netdevice_notifier	vmlinux	EXPORT_SYMBOL
+0x3cf9729c	tty_register_driver	vmlinux	EXPORT_SYMBOL
+0xc2e6c380	slab_buffer_size	vmlinux	EXPORT_SYMBOL
+0xccc22942	padata_stop	vmlinux	EXPORT_SYMBOL
+0xdeeab4e6	ceph_auth_destroy_authorizer	net/ceph/libceph	EXPORT_SYMBOL
+0x98c3fda8	z8530_shutdown	drivers/net/wan/z85230	EXPORT_SYMBOL
+0x95d2c56d	sdio_release_host	drivers/mmc/core/mmc_core	EXPORT_SYMBOL_GPL
+0xf3552673	memstick_unregister_driver	drivers/memstick/core/memstick	EXPORT_SYMBOL
+0x4fc76649	v4l2_fh_init	drivers/media/video/videodev	EXPORT_SYMBOL_GPL
+0x4777f30f	v4l2_fh_exit	drivers/media/video/videodev	EXPORT_SYMBOL_GPL
+0xfd86496c	driver_remove_file	vmlinux	EXPORT_SYMBOL_GPL
+0x6a8441be	cpci_hp_start	vmlinux	EXPORT_SYMBOL_GPL
+0xcc4d1bfb	atomic64_read_cx8	vmlinux	EXPORT_SYMBOL
+0x8386d474	swiotlb_free_coherent	vmlinux	EXPORT_SYMBOL
+0xfd142da1	kset_unregister	vmlinux	EXPORT_SYMBOL
+0x8f8be406	debugfs_create_u32	vmlinux	EXPORT_SYMBOL_GPL
+0xd6deeaae	irda_setup_dma	net/irda/irda	EXPORT_SYMBOL
+0x95aa568d	jbd2_journal_release_jbd_inode	fs/jbd2/jbd2	EXPORT_SYMBOL
+0x22933c51	core_tpg_del_initiator_node_acl	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x0ef06974	spi_populate_ppr_msg	drivers/scsi/scsi_transport_spi	EXPORT_SYMBOL_GPL
+0x1442f750	hostap_remove_interface	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0xb4348506	eip_netdev_ops	drivers/net/ethernet/8390/8390p	EXPORT_SYMBOL
+0xf7ea5c37	pcf50633_adc_async_read	drivers/mfd/pcf50633-adc	EXPORT_SYMBOL_GPL
+0x999c3dec	register_net_sysctl_rotable	vmlinux	EXPORT_SYMBOL_GPL
+0x3a7a7957	llc_build_and_send_ui_pkt	vmlinux	EXPORT_SYMBOL
+0x153c7e69	netdev_rx_handler_register	vmlinux	EXPORT_SYMBOL_GPL
+0xe64ad8ea	unregister_nmi_handler	vmlinux	EXPORT_SYMBOL_GPL
+0xbdf80511	rt2800_get_tsf	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0xbdcb39ea	__alloc_ei_netdev	drivers/net/ethernet/8390/8390	EXPORT_SYMBOL
+0x0df34676	wm8400_reset_codec_reg_cache	drivers/mfd/wm8400-core	EXPORT_SYMBOL_GPL
+0x61513837	videobuf_queue_sg_init	drivers/media/video/videobuf-dma-sg	EXPORT_SYMBOL_GPL
+0xb910e886	ttpci_budget_debiwrite	drivers/media/dvb/ttpci/budget-core	EXPORT_SYMBOL_GPL
+0xb18e21e4	inet_csk_reset_keepalive_timer	vmlinux	EXPORT_SYMBOL
+0x49603fb8	security_sb_copy_data	vmlinux	EXPORT_SYMBOL
+0x6edce803	user_read	vmlinux	EXPORT_SYMBOL_GPL
+0x53326531	mempool_alloc_pages	vmlinux	EXPORT_SYMBOL
+0xade27aaa	trace_define_field	vmlinux	EXPORT_SYMBOL_GPL
+0x47939e0d	__tasklet_hi_schedule	vmlinux	EXPORT_SYMBOL
+0xeaf8fe19	read_bytes_from_xdr_buf	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x7f0a90c1	xt_register_matches	net/netfilter/x_tables	EXPORT_SYMBOL
+0x4dc49490	matroxfb_wait_for_sync	drivers/video/matrox/matroxfb_base	EXPORT_SYMBOL
+0x9ee36547	comedi_pci_auto_config	drivers/staging/comedi/comedi	EXPORT_SYMBOL_GPL
+0x5e6c6cd6	comedi_usb_auto_config	drivers/staging/comedi/comedi	EXPORT_SYMBOL_GPL
+0x968b85b6	fcoe_fc_crc	drivers/scsi/fcoe/libfcoe	EXPORT_SYMBOL_GPL
+0xb9f8a549	cx24123_get_tuner_i2c_adapter	drivers/media/dvb/frontends/cx24123	EXPORT_SYMBOL
+0x8c4181ec	roccat_report_event	drivers/hid/hid-roccat	EXPORT_SYMBOL_GPL
+0xedd5e206	ttm_bo_unlock_delayed_workqueue	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0xfed6baef	sata_sff_hardreset	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xc72d5071	arp_send	vmlinux	EXPORT_SYMBOL
+0x873fbaea	edac_atomic_assert_error	vmlinux	EXPORT_SYMBOL_GPL
+0x3ed63055	zlib_inflateReset	vmlinux	EXPORT_SYMBOL
+0xb19760c3	bitmap_onto	vmlinux	EXPORT_SYMBOL
+0x6079d4db	blkio_root_cgroup	vmlinux	EXPORT_SYMBOL_GPL
+0x959c2dd8	cdev_del	vmlinux	EXPORT_SYMBOL
+0x281823c5	__kfifo_out_peek	vmlinux	EXPORT_SYMBOL
+0xbd36ba1e	dccp_parse_options	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xb98dc15c	ssb_driver_unregister	drivers/ssb/ssb	EXPORT_SYMBOL
+0x98bb3fe7	raid_component_add	drivers/scsi/raid_class	EXPORT_SYMBOL
+0x3ecf6cfc	wmi_install_notify_handler	drivers/platform/x86/wmi	EXPORT_SYMBOL_GPL
+0x83562b3f	ar9003_paprd_setup_gain_table	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x07cf5a51	ib_copy_ah_attr_to_user	drivers/infiniband/core/ib_uverbs	EXPORT_SYMBOL
+0x184f3575	ib_copy_qp_attr_to_user	drivers/infiniband/core/ib_uverbs	EXPORT_SYMBOL
+0x25cece55	async_xor	crypto/async_tx/async_xor	EXPORT_SYMBOL_GPL
+0x26a3d166	tcp_seq_open	vmlinux	EXPORT_SYMBOL
+0x1d08d697	pneigh_enqueue	vmlinux	EXPORT_SYMBOL
+0x71a8bcd1	dev_alloc_name	vmlinux	EXPORT_SYMBOL
+0xec6fc2bd	soft_cursor	vmlinux	EXPORT_SYMBOL
+0xa3504378	rwsem_wake	vmlinux	EXPORT_SYMBOL
+0xcf77d701	iov_iter_copy_from_user	vmlinux	EXPORT_SYMBOL
+0x8139ef80	snd_ice1712_akm4xxx_free	sound/pci/ice1712/snd-ice17xx-ak4xxx	EXPORT_SYMBOL
+0x801148d9	usbip_recv	drivers/staging/usbip/usbip-core	EXPORT_SYMBOL_GPL
+0x87a15882	ni_tio_init_counter	drivers/staging/comedi/drivers/ni_tio	EXPORT_SYMBOL_GPL
+0x90b8f8fa	pcmcia_release_window	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0x934469e4	i2400m_release	drivers/net/wimax/i2400m/i2400m	EXPORT_SYMBOL_GPL
+0xb9a6ecf8	dm_tm_dec	drivers/md/persistent-data/dm-persistent-data	EXPORT_SYMBOL_GPL
+0x09472122	dm_rh_dec	drivers/md/dm-region-hash	EXPORT_SYMBOL_GPL
+0x4b6a8a21	kvm_emulate_halt	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xe22df402	vga_get	vmlinux	EXPORT_SYMBOL
+0x905bebec	pnp_find_card	vmlinux	EXPORT_SYMBOL
+0x82dbec19	erst_write	vmlinux	EXPORT_SYMBOL_GPL
+0x3d8717fa	generic_fh_to_dentry	vmlinux	EXPORT_SYMBOL_GPL
+0x70d053fd	try_to_del_timer_sync	vmlinux	EXPORT_SYMBOL
+0x97a08cb0	snd_hda_ch_mode_get	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xf57f883d	ipcomp_output	net/xfrm/xfrm_ipcomp	EXPORT_SYMBOL_GPL
+0x23c9e24c	svc_addsock	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xe3dc331f	nf_ct_expect_related_report	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x4cdd391d	dccp_feat_list_purge	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x77411bce	usb_stor_bulk_transfer_buf	drivers/usb/storage/usb-storage	EXPORT_SYMBOL_GPL
+0x68608186	ni_tio_rinsn	drivers/staging/comedi/drivers/ni_tio	EXPORT_SYMBOL_GPL
+0x7e501fc3	ni_tio_winsn	drivers/staging/comedi/drivers/ni_tio	EXPORT_SYMBOL_GPL
+0xb4b94377	__nand_correct_data	drivers/mtd/nand/nand_ecc	EXPORT_SYMBOL
+0x9ab67fae	dm_unregister_target	drivers/md/dm-mod	EXPORT_SYMBOL
+0x29562993	b1pcmcia_delcard	drivers/isdn/hardware/avm/b1pcmcia	EXPORT_SYMBOL
+0x05bc8984	__pskb_copy	vmlinux	EXPORT_SYMBOL
+0x82eb69be	isa_register_driver	vmlinux	EXPORT_SYMBOL_GPL
+0x053cb1b2	tty_init_termios	vmlinux	EXPORT_SYMBOL_GPL
+0xde95fc6d	xenbus_map_ring_valloc	vmlinux	EXPORT_SYMBOL_GPL
+0x0c511ee5	dma_async_memcpy_buf_to_pg	vmlinux	EXPORT_SYMBOL
+0x9851c346	pci_enable_device_io	vmlinux	EXPORT_SYMBOL
+0xd3dcab0b	flex_array_alloc	vmlinux	EXPORT_SYMBOL
+0xeb2fc889	blk_queue_bounce	vmlinux	EXPORT_SYMBOL
+0x6f998eee	__clocksource_register_scale	vmlinux	EXPORT_SYMBOL_GPL
+0xc65d04dc	snd_seq_device_register_driver	sound/core/seq/snd-seq-device	EXPORT_SYMBOL
+0x5fc98b06	jbd2_journal_revoke	fs/jbd2/jbd2	EXPORT_SYMBOL
+0x993dfc37	config_group_find_item	fs/configfs/configfs	EXPORT_SYMBOL
+0x937b216e	cxgbi_cleanup_task	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0x370dbbfc	orinoco_change_mtu	drivers/net/wireless/orinoco/orinoco	EXPORT_SYMBOL
+0x2935ad31	mtd_read	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0xa8f76375	dvb_dmx_release	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0x3e992d4c	ata_sas_port_destroy	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x880676ff	tcp_get_md5sig_pool	vmlinux	EXPORT_SYMBOL
+0x3145216f	pci_dev_present	vmlinux	EXPORT_SYMBOL
+0x72dca0f6	pci_dev_get	vmlinux	EXPORT_SYMBOL
+0x930b1217	pci_dev_put	vmlinux	EXPORT_SYMBOL
+0xd5f5b32d	read_dev_sector	vmlinux	EXPORT_SYMBOL
+0x8ebdf1c3	scsi_cmd_blk_ioctl	vmlinux	EXPORT_SYMBOL
+0x212b3d58	crypto_alloc_instance2	vmlinux	EXPORT_SYMBOL_GPL
+0xbe7dd7dc	snd_array_new	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x1357ac28	ceph_monc_do_statfs	net/ceph/libceph	EXPORT_SYMBOL
+0x411b0f13	journal_create	fs/jbd/jbd	EXPORT_SYMBOL
+0x5a739de0	usb_ifnum_to_if	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xa57112c7	srp_target_free	drivers/scsi/libsrp	EXPORT_SYMBOL_GPL
+0xde1f0886	brcmu_pkt_buf_free_skb	drivers/net/wireless/brcm80211/brcmutil/brcmutil	EXPORT_SYMBOL
+0xed275a95	lpddr_cmdset	drivers/mtd/lpddr/lpddr_cmds	EXPORT_SYMBOL
+0xdb699296	sms_board_power	drivers/media/dvb/siano/smsmdtv	EXPORT_SYMBOL_GPL
+0x929c467f	btree_get_prev	vmlinux	EXPORT_SYMBOL_GPL
+0x61c7d7f6	security_old_inode_init_security	vmlinux	EXPORT_SYMBOL
+0x8ff65403	debugfs_create_x16	vmlinux	EXPORT_SYMBOL_GPL
+0x926a4088	__tracepoint_kmem_cache_alloc_node	vmlinux	EXPORT_SYMBOL
+0xd81de62c	ring_buffer_record_enable	vmlinux	EXPORT_SYMBOL_GPL
+0x5d48a650	m2p_find_override_pfn	vmlinux	EXPORT_SYMBOL_GPL
+0xa0854b17	snd_rawmidi_transmit	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0x7ff509a2	hashbin_lock_find	net/irda/irda	EXPORT_SYMBOL
+0xfa66b201	qtree_delete_dquot	fs/quota/quota_tree	EXPORT_SYMBOL
+0x3b88936a	mb_cache_entry_release	fs/mbcache	EXPORT_SYMBOL
+0x16f0380d	iscsi_tcp_cleanup_task	drivers/scsi/libiscsi_tcp	EXPORT_SYMBOL_GPL
+0x10c78988	z8530_dead_port	drivers/net/wan/z85230	EXPORT_SYMBOL
+0xbbe876a6	enclosure_find	drivers/misc/enclosure	EXPORT_SYMBOL_GPL
+0xa0cbe093	fw_cancel_transaction	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0x8fa5108b	cdrom_mode_sense	drivers/cdrom/cdrom	EXPORT_SYMBOL
+0xc195b489	paride_unregister	drivers/block/paride/paride	EXPORT_SYMBOL
+0xa014e937	af_alg_unregister_type	crypto/af_alg	EXPORT_SYMBOL_GPL
+0xb35fca68	inet6_destroy_sock	vmlinux	EXPORT_SYMBOL_GPL
+0xd2c58ab2	apei_exec_noop	vmlinux	EXPORT_SYMBOL_GPL
+0x061651be	strcat	vmlinux	EXPORT_SYMBOL
+0x486d2f29	dqstats	vmlinux	EXPORT_SYMBOL
+0x09fc57dc	bio_integrity_set_tag	vmlinux	EXPORT_SYMBOL
+0x3158356e	bio_integrity_get_tag	vmlinux	EXPORT_SYMBOL
+0xf97456ea	_raw_spin_unlock_irqrestore	vmlinux	EXPORT_SYMBOL
+0x2fe95948	jbd2_journal_get_write_access	fs/jbd2/jbd2	EXPORT_SYMBOL
+0x55bb2ebd	jbd2_journal_invalidatepage	fs/jbd2/jbd2	EXPORT_SYMBOL
+0xcba5b651	usb_gadget_unregister_driver	drivers/usb/gadget/udc-core	EXPORT_SYMBOL_GPL
+0x6de96d91	iscsi_conn_send_pdu	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0xe575422e	v4l2_ctrl_log_status	drivers/media/video/videodev	EXPORT_SYMBOL
+0xe8ad9bd1	capi_cmsg2str	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL
+0x83108973	ib_query_qp	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x43de7d46	dma_buf_kunmap	vmlinux	EXPORT_SYMBOL_GPL
+0x264fa2ef	xenbus_free_evtchn	vmlinux	EXPORT_SYMBOL_GPL
+0x6b77c8f7	crypto_register_shash	vmlinux	EXPORT_SYMBOL_GPL
+0x729c1e51	rds_conn_drop	net/rds/rds	EXPORT_SYMBOL_GPL
+0xa1dbc2d8	ip_vs_proto_name	net/netfilter/ipvs/ip_vs	EXPORT_SYMBOL
+0x86478f31	gre_add_protocol	net/ipv4/gre	EXPORT_SYMBOL_GPL
+0x40cc45df	fc_fabric_login	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x7880c781	dm_kcopyd_prepare_callback	drivers/md/dm-mod	EXPORT_SYMBOL
+0x043e3e9d	inet6_unregister_protosw	vmlinux	EXPORT_SYMBOL
+0x71cba7a6	nf_register_hooks	vmlinux	EXPORT_SYMBOL
+0x7a9dfb50	pfifo_qdisc_ops	vmlinux	EXPORT_SYMBOL
+0xf202c5cb	radix_tree_insert	vmlinux	EXPORT_SYMBOL
+0xc3cf4672	vfs_listxattr	vmlinux	EXPORT_SYMBOL_GPL
+0x52428cc8	parent_mem_cgroup	vmlinux	EXPORT_SYMBOL
+0x60a0508d	find_get_pages_contig	vmlinux	EXPORT_SYMBOL
+0x80f3268f	__trace_printk	vmlinux	EXPORT_SYMBOL_GPL
+0xdf7cd935	snd_wss_chip_id	sound/isa/wss/snd-wss-lib	EXPORT_SYMBOL
+0xb8e448a0	snd_seq_set_queue_tempo	sound/core/seq/snd-seq	EXPORT_SYMBOL
+0xabeccfe6	ieee80211_tx_status	net/mac80211/mac80211	EXPORT_SYMBOL
+0x118ef701	dccp_v4_do_rcv	net/dccp/dccp_ipv4	EXPORT_SYMBOL_GPL
+0x5c3de376	rt2800_probe_hw_mode	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0x14bc705b	usbnet_defer_kevent	drivers/net/usb/usbnet	EXPORT_SYMBOL_GPL
+0xd35f7eba	cxgb4_create_server	drivers/net/ethernet/chelsio/cxgb4/cxgb4	EXPORT_SYMBOL
+0xae45401b	mtd_write_user_prot_reg	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0xe2b92059	v4l2_video_std_construct	drivers/media/video/videodev	EXPORT_SYMBOL
+0x22bb2e05	ib_dispatch_event	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x9e15100e	ttm_bo_unreserve	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x15d03189	drm_agp_info	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x388f9128	xfrm_state_walk_done	vmlinux	EXPORT_SYMBOL
+0x6703afb9	qdisc_create_dflt	vmlinux	EXPORT_SYMBOL
+0xfb55b348	uart_add_one_port	vmlinux	EXPORT_SYMBOL
+0x7a27c184	ewma_init	vmlinux	EXPORT_SYMBOL
+0x7ae878c5	key_put	vmlinux	EXPORT_SYMBOL
+0x6d277691	bmap	vmlinux	EXPORT_SYMBOL
+0xe2fae716	kmemdup	vmlinux	EXPORT_SYMBOL
+0x6592c5e7	__blocking_notifier_call_chain	vmlinux	EXPORT_SYMBOL_GPL
+0xcebbf267	_copy_from_pages	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x23e76eea	dccp_sync_mss	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xae069fe4	osd_req_read_sg_kern	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0x458aa25d	hostap_get_porttype	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0xfa4315a9	drm_mode_vrefresh	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x90e3da26	drm_mode_set_crtcinfo	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x66981d7f	fx_init	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xeef037a8	snd_wss_overrange	sound/isa/wss/snd-wss-lib	EXPORT_SYMBOL
+0x28611ab0	nf_conntrack_alloc	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x5525d6ad	uwb_notifs_register	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0x3bcaa33c	__umc_driver_register	drivers/uwb/umc	EXPORT_SYMBOL_GPL
+0x31abd27a	__ssb_driver_register	drivers/ssb/ssb	EXPORT_SYMBOL
+0x96a102ed	iscsi_host_free	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0x9d865461	mlx4_bf_alloc	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0xe32d4d0a	media_entity_setup_link	drivers/media/media	EXPORT_SYMBOL_GPL
+0x9232bbfd	dib7000p_set_wbd_ref	drivers/media/dvb/frontends/dib7000p	EXPORT_SYMBOL
+0xa4ffbfde	tda827x_attach	drivers/media/common/tuners/tda827x	EXPORT_SYMBOL_GPL
+0xffb69cc6	tcp_register_congestion_control	vmlinux	EXPORT_SYMBOL_GPL
+0xe3332b07	tcp_gro_complete	vmlinux	EXPORT_SYMBOL
+0xfbf787f8	dma_buf_fd	vmlinux	EXPORT_SYMBOL_GPL
+0x4d974b9c	register_sysrq_key	vmlinux	EXPORT_SYMBOL
+0xd0f2894f	timerqueue_add	vmlinux	EXPORT_SYMBOL_GPL
+0xf1126f8a	sync_filesystem	vmlinux	EXPORT_SYMBOL_GPL
+0xda5d4102	thermal_zone_bind_cooling_device	drivers/thermal/thermal_sys	EXPORT_SYMBOL
+0x83855141	stv0299_attach	drivers/media/dvb/frontends/stv0299	EXPORT_SYMBOL
+0xba511041	stb0899_attach	drivers/media/dvb/frontends/stb0899	EXPORT_SYMBOL
+0xfe1a521d	drxd_config_i2c	drivers/media/dvb/frontends/drxd	EXPORT_SYMBOL
+0x7ea1be4a	tcp_connect	vmlinux	EXPORT_SYMBOL
+0x654e0d3f	neigh_table_clear	vmlinux	EXPORT_SYMBOL
+0x05d8aa80	led_trigger_event	vmlinux	EXPORT_SYMBOL_GPL
+0x03446918	do_munmap	vmlinux	EXPORT_SYMBOL
+0x8687d657	snd_aci_get_aci	sound/isa/opti9xx/snd-miro	EXPORT_SYMBOL
+0x94098ff8	snd_interval_list	sound/core/snd-pcm	EXPORT_SYMBOL
+0xb2547e65	wpan_phy_for_each	net/ieee802154/ieee802154	EXPORT_SYMBOL
+0x0a946e62	fuse_put_request	fs/fuse/fuse	EXPORT_SYMBOL_GPL
+0x3c14b318	fat_flush_inodes	fs/fat/fat	EXPORT_SYMBOL_GPL
+0xab411247	mmc_align_data_size	drivers/mmc/core/mmc_core	EXPORT_SYMBOL
+0x847633ec	ib_dealloc_pd	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x9a17f8fe	drm_fb_helper_fill_var	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0xd05dc2a3	xfrm_aalg_get_byname	vmlinux	EXPORT_SYMBOL_GPL
+0xa726305f	xfrm_state_flush	vmlinux	EXPORT_SYMBOL
+0xa69074b6	pci_fixup_device	vmlinux	EXPORT_SYMBOL
+0x714f1527	__dquot_alloc_space	vmlinux	EXPORT_SYMBOL
+0xdedb7ffc	PageHeadHuge	vmlinux	EXPORT_SYMBOL_GPL
+0x24663864	snd_trident_write_voice_regs	sound/pci/trident/snd-trident	EXPORT_SYMBOL
+0x5779c903	snd_vx_load_boot_image	sound/drivers/vx/snd-vx-lib	EXPORT_SYMBOL
+0xf030737a	sm501_unit_power	drivers/mfd/sm501	EXPORT_SYMBOL_GPL
+0x279812bd	xfrm_find_acq_byseq	vmlinux	EXPORT_SYMBOL
+0x781216bc	xfrm_policy_unregister_afinfo	vmlinux	EXPORT_SYMBOL
+0x8b949928	__rtnl_af_register	vmlinux	EXPORT_SYMBOL_GPL
+0xcd4f60d1	i8042_check_port_owner	vmlinux	EXPORT_SYMBOL
+0x09c55cec	schedule_timeout_interruptible	vmlinux	EXPORT_SYMBOL
+0x361e2bcc	save_stack_trace	vmlinux	EXPORT_SYMBOL_GPL
+0x8adbeb7c	snd_ctl_make_virtual_master	sound/core/snd	EXPORT_SYMBOL
+0x5e0fe35f	hdlc_ioctl	drivers/net/wan/hdlc	EXPORT_SYMBOL
+0x145e6a73	ttm_base_object_lookup	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0xf0f0cadd	dma_buf_attach	vmlinux	EXPORT_SYMBOL_GPL
+0xb7a746bb	dma_buf_detach	vmlinux	EXPORT_SYMBOL_GPL
+0x1ace138d	bitmap_allocate_region	vmlinux	EXPORT_SYMBOL
+0x250113b4	memory_read_from_buffer	vmlinux	EXPORT_SYMBOL
+0x41c93154	set_nth_bit	vmlinux	EXPORT_SYMBOL
+0xc8f842a7	snd_hda_parse_pin_defcfg	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x9a450b84	ieee80211_probereq_get	net/mac80211/mac80211	EXPORT_SYMBOL
+0x7804eba4	ieee80211_send_bar	net/mac80211/mac80211	EXPORT_SYMBOL
+0xd4ded57c	hci_alloc_dev	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0xc7d2bd6a	__scsi_iterate_devices	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xc0890567	hdlcdrv_arbitrate	drivers/net/hamradio/hdlcdrv	EXPORT_SYMBOL
+0xc7a73ae8	ib_send_cm_req	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0x0bdf6908	ib_send_cm_rep	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0xb9456644	ib_send_cm_rtu	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0xb1563219	ib_send_cm_rej	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0x6b6d7375	drm_timestamp_precision	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xbb5d343d	xfrm_get_acqseq	vmlinux	EXPORT_SYMBOL
+0x01230cd3	svc_reserve	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x796edf3d	bitmap_cond_end_sync	drivers/md/md-mod	EXPORT_SYMBOL
+0xa0ec684f	fw_device_enable_phys_dma	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0x7b66b4a3	spi_register_driver	vmlinux	EXPORT_SYMBOL_GPL
+0x44da5e41	platform_bus	vmlinux	EXPORT_SYMBOL_GPL
+0xc8f9367a	blk_queue_bounce_limit	vmlinux	EXPORT_SYMBOL
+0x87a789de	snd_ice1712_akm4xxx_init	sound/pci/ice1712/snd-ice17xx-ak4xxx	EXPORT_SYMBOL
+0xb8052659	journal_restart	fs/jbd/jbd	EXPORT_SYMBOL
+0x355ba3e0	journal_destroy	fs/jbd/jbd	EXPORT_SYMBOL
+0xb6fe3dfa	iscsi_host_for_each_session	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0x2b0ba2b0	scsi_sense_desc_find	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x00012ade	nand_scan_ident	drivers/mtd/nand/nand	EXPORT_SYMBOL
+0xe055c4ad	netpoll_setup	vmlinux	EXPORT_SYMBOL
+0xfe8748c6	skb_abort_seq_read	vmlinux	EXPORT_SYMBOL
+0x06fe3b14	default_grn	vmlinux	EXPORT_SYMBOL
+0x5857b225	ioread16_rep	vmlinux	EXPORT_SYMBOL
+0xf7b1a057	ioc_cgroup_changed	vmlinux	EXPORT_SYMBOL
+0x6ef8fcd8	snd_pcm_format_linear	sound/core/snd-pcm	EXPORT_SYMBOL
+0xee3aa8f5	ieee80211_rate_control_unregister	net/mac80211/mac80211	EXPORT_SYMBOL
+0x6c8a3400	fuse_get_req	fs/fuse/fuse	EXPORT_SYMBOL_GPL
+0x20ca107b	osd_req_add_set_attr_list	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0xbe67b8f1	osd_req_add_get_attr_list	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0x2302ad80	rt2x00usb_watchdog	drivers/net/wireless/rt2x00/rt2x00usb	EXPORT_SYMBOL_GPL
+0x8b3b09e0	hostap_setup_dev	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x45937659	doc_decode_ecc	drivers/mtd/devices/docecc	EXPORT_SYMBOL_GPL
+0x763713d8	ves1820_attach	drivers/media/dvb/frontends/ves1820	EXPORT_SYMBOL
+0x7814a80c	drm_property_create_range	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x8f05fd57	inet6_ioctl	vmlinux	EXPORT_SYMBOL
+0x195a2d39	tcp_setsockopt	vmlinux	EXPORT_SYMBOL
+0x93e48471	tcp_getsockopt	vmlinux	EXPORT_SYMBOL
+0xdaf78341	rtnl_unicast	vmlinux	EXPORT_SYMBOL
+0xede6cf51	pnpacpi_protocol	vmlinux	EXPORT_SYMBOL
+0xac1e9f60	alloc_disk_node	vmlinux	EXPORT_SYMBOL
+0x8949858b	schedule_work	vmlinux	EXPORT_SYMBOL
+0x5b3765d3	dequeue_signal	vmlinux	EXPORT_SYMBOL_GPL
+0x5bc4a903	rt2x00mac_start	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x904ac035	__rtnl_af_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x420a2faf	skb_gro_reset_offset	vmlinux	EXPORT_SYMBOL
+0x947c62d6	agp_generic_destroy_page	vmlinux	EXPORT_SYMBOL
+0xcd8f5f93	acpi_get_hp_hw_control_from_firmware	vmlinux	EXPORT_SYMBOL
+0xa560ba9d	crypto_ablkcipher_type	vmlinux	EXPORT_SYMBOL_GPL
+0x1478a42a	ieee80211_iter_keys	net/mac80211/mac80211	EXPORT_SYMBOL
+0x957049c5	ip6t_register_table	net/ipv6/netfilter/ip6_tables	EXPORT_SYMBOL
+0x8f441820	pnfs_set_lo_fail	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0x8a87e724	try_test_sas_gpio_gp_bit	drivers/scsi/libsas/libsas	EXPORT_SYMBOL
+0xa36da2f1	mlx4_qp_alloc	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x4da51598	tveeprom_hauppauge_analog	drivers/media/video/tveeprom	EXPORT_SYMBOL
+0xfc150956	ib_ud_header_init	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x0067df75	ata_tf_from_fis	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xbc2b937d	is_hwpoison_pfn	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x6478134c	ec_burst_enable	vmlinux	EXPORT_SYMBOL
+0x0cccf6f5	crypto_tfm_in_queue	vmlinux	EXPORT_SYMBOL_GPL
+0x363afa21	fget_raw	vmlinux	EXPORT_SYMBOL
+0xabc47f60	atomic_notifier_call_chain	vmlinux	EXPORT_SYMBOL_GPL
+0xd85c0177	cfg80211_send_unprot_deauth	net/wireless/cfg80211	EXPORT_SYMBOL
+0xdd24470d	lbs_process_rxed_packet	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0x93371ddb	mlx4_replace_mac	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x930d61fd	tda10071_attach	drivers/media/dvb/frontends/tda10071	EXPORT_SYMBOL
+0x9f12f30a	cx22702_attach	drivers/media/dvb/frontends/cx22702	EXPORT_SYMBOL
+0xb6d4c4b6	nsc_gpio_dump	drivers/char/nsc_gpio	EXPORT_SYMBOL
+0x6ddfbcb8	spi_add_device	vmlinux	EXPORT_SYMBOL_GPL
+0x780ee626	backlight_device_unregister	vmlinux	EXPORT_SYMBOL
+0xc0763484	rfkill_blocked	net/rfkill/rfkill	EXPORT_SYMBOL
+0x495c5b20	dccp_recvmsg	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xa4dddf24	unregister_mtd_user	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0x524f6f51	ipmi_get_my_address	drivers/char/ipmi/ipmi_msghandler	EXPORT_SYMBOL
+0xfc02b7ad	sysctl_tcp_wmem	vmlinux	EXPORT_SYMBOL
+0x1980c1b7	nf_unregister_hook	vmlinux	EXPORT_SYMBOL
+0xc8236ed9	napi_frags_skb	vmlinux	EXPORT_SYMBOL
+0xc5786d75	dev_change_net_namespace	vmlinux	EXPORT_SYMBOL_GPL
+0x4663f1e3	usb_get_transceiver	vmlinux	EXPORT_SYMBOL
+0x202c23a8	usb_set_transceiver	vmlinux	EXPORT_SYMBOL
+0x86781b83	gnttab_map_refs	vmlinux	EXPORT_SYMBOL_GPL
+0x2e4a0352	pci_rescan_bus	vmlinux	EXPORT_SYMBOL_GPL
+0x78c08c3f	blk_queue_rq_timeout	vmlinux	EXPORT_SYMBOL_GPL
+0xad0d020f	blk_queue_flush_queueable	vmlinux	EXPORT_SYMBOL_GPL
+0x6ab636c9	xdr_init_decode_pages	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x1e12097b	usb_stor_pre_reset	drivers/usb/storage/usb-storage	EXPORT_SYMBOL_GPL
+0xf28f2725	mwifiex_init_shutdown_fw	drivers/net/wireless/mwifiex/mwifiex	EXPORT_SYMBOL_GPL
+0xa0b7c1ff	lbs_queue_event	drivers/net/wireless/libertas/libertas	EXPORT_SYMBOL_GPL
+0x3da7b24e	il_setup_rx_scan_handlers	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xdc08bfa1	hostap_set_antsel	drivers/net/wireless/hostap/hostap	EXPORT_SYMBOL
+0x5d820a02	memstick_init_req_sg	drivers/memstick/core/memstick	EXPORT_SYMBOL
+0x66d1b4b6	media_entity_create_link	drivers/media/media	EXPORT_SYMBOL_GPL
+0xfc821ee3	md_write_end	drivers/md/md-mod	EXPORT_SYMBOL
+0x744176f8	tcp_twsk_destructor	vmlinux	EXPORT_SYMBOL_GPL
+0x58475e52	scm_detach_fds	vmlinux	EXPORT_SYMBOL
+0x1172ce54	rtc_ktime_to_tm	vmlinux	EXPORT_SYMBOL_GPL
+0x390d0bdd	put_pid	vmlinux	EXPORT_SYMBOL_GPL
+0x102c56de	irq_regs	vmlinux	EXPORT_SYMBOL
+0x634fb321	snd_hda_multi_out_dig_open	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xa286a234	snd_pcm_format_name	sound/core/snd-pcm	EXPORT_SYMBOL_GPL
+0xbe0a053c	rt2x00queue_start_queues	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x5973dd3c	edac_mc_handle_ce	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0xfda807b9	regmap_bulk_read	vmlinux	EXPORT_SYMBOL_GPL
+0x4dca3565	driver_find_device	vmlinux	EXPORT_SYMBOL_GPL
+0x943fc708	xen_setup_shutdown_event	vmlinux	EXPORT_SYMBOL_GPL
+0xab770678	rdmsr_safe_regs_on_cpu	vmlinux	EXPORT_SYMBOL
+0xf85b273a	posix_clock_register	vmlinux	EXPORT_SYMBOL_GPL
+0x273aab74	xen_have_vector_callback	vmlinux	EXPORT_SYMBOL_GPL
+0x31f74248	tifm_has_ms_pif	drivers/misc/tifm_core	EXPORT_SYMBOL
+0xd629316a	llc_sap_list_lock	vmlinux	EXPORT_SYMBOL
+0xbb99125c	get_default_font	vmlinux	EXPORT_SYMBOL
+0xa503d86e	blk_get_request	vmlinux	EXPORT_SYMBOL
+0x9cae654a	cfg80211_inform_bss	net/wireless/cfg80211	EXPORT_SYMBOL
+0xfcb0b659	ath9k_hw_set_rx_bufsize	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x4ad930aa	sms_board_lna_control	drivers/media/dvb/siano/smsmdtv	EXPORT_SYMBOL_GPL
+0x6bd0c2bf	ttm_bo_device_init	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x40d46b21	crypto_ft_tab	crypto/aes_generic	EXPORT_SYMBOL_GPL
+0x3dc916b6	crypto_fl_tab	crypto/aes_generic	EXPORT_SYMBOL_GPL
+0x0cc1e40f	crypto_it_tab	crypto/aes_generic	EXPORT_SYMBOL_GPL
+0x71dc9998	crypto_il_tab	crypto/aes_generic	EXPORT_SYMBOL_GPL
+0x6e7474fc	xfrm_ealg_get_byid	vmlinux	EXPORT_SYMBOL_GPL
+0x79045af1	__cpufreq_driver_getavg	vmlinux	EXPORT_SYMBOL_GPL
+0x7419d85f	device_pm_wait_for_dev	vmlinux	EXPORT_SYMBOL_GPL
+0x2005e68a	acpi_remove_fixed_event_handler	vmlinux	EXPORT_SYMBOL
+0xb326f2e4	down_timeout	vmlinux	EXPORT_SYMBOL
+0x4b828399	nfnetlink_has_listeners	net/netfilter/nfnetlink	EXPORT_SYMBOL_GPL
+0xd4301355	__fscache_attr_changed	fs/fscache/fscache	EXPORT_SYMBOL
+0xe7429dd3	ata_wait_after_reset	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xeeb1c225	ahci_ops	drivers/ata/libahci	EXPORT_SYMBOL_GPL
+0xca2cd377	cpufreq_frequency_table_target	vmlinux	EXPORT_SYMBOL_GPL
+0xe2e75a80	blkiocg_update_io_remove_stats	vmlinux	EXPORT_SYMBOL_GPL
+0x3bd1b1f6	msecs_to_jiffies	vmlinux	EXPORT_SYMBOL
+0x4362944c	snd_pcm_suspend_all	sound/core/snd-pcm	EXPORT_SYMBOL
+0xb2cf44a9	ax25_header_ops	net/ax25/ax25	EXPORT_SYMBOL
+0x5ec9bac4	rtl92c_phy_sw_chnl_callback	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0x165d82da	i2o_driver_notify_device_add_all	drivers/message/i2o/i2o_core	EXPORT_SYMBOL
+0x702ec1eb	misc_deregister	vmlinux	EXPORT_SYMBOL
+0x240580a9	xenbus_probe	vmlinux	EXPORT_SYMBOL_GPL
+0x74457e56	apei_resources_fini	vmlinux	EXPORT_SYMBOL_GPL
+0xc3214ed8	acpi_match_device_ids	vmlinux	EXPORT_SYMBOL
+0x08fe2010	blkdev_fsync	vmlinux	EXPORT_SYMBOL
+0xb665237d	lookup_one_len	vmlinux	EXPORT_SYMBOL
+0x94970f3d	relay_buf_full	vmlinux	EXPORT_SYMBOL_GPL
+0x217c53d2	set_pages_x	vmlinux	EXPORT_SYMBOL
+0x782adb74	hpet_rtc_interrupt	vmlinux	EXPORT_SYMBOL_GPL
+0xa722a819	cpu_has_amd_erratum	vmlinux	EXPORT_SYMBOL_GPL
+0x7afc9d8a	unregister_sound_mixer	sound/soundcore	EXPORT_SYMBOL
+0x43f5adfc	sas_port_get_phy	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL
+0xecb528d3	gigaset_isdn_rcv_err	drivers/isdn/gigaset/gigaset	EXPORT_SYMBOL_GPL
+0x9803b3ef	edac_pci_create_generic_ctl	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x4b5f4bd1	inet6_bind	vmlinux	EXPORT_SYMBOL
+0x3e45e9ff	register_inetaddr_notifier	vmlinux	EXPORT_SYMBOL
+0x4351577a	fb_parse_edid	vmlinux	EXPORT_SYMBOL
+0xfdbd86fd	atomic_dec_and_mutex_lock	vmlinux	EXPORT_SYMBOL
+0x82941efb	snd_pcm_lib_write	sound/core/snd-pcm	EXPORT_SYMBOL
+0x219878ec	ieee80211_ap_probereq_get	net/mac80211/mac80211	EXPORT_SYMBOL
+0x9d68257d	journal_wipe	fs/jbd/jbd	EXPORT_SYMBOL
+0x1df039eb	parport_pc_unregister_port	drivers/parport/parport_pc	EXPORT_SYMBOL
+0x6b3bcefc	devres_add	vmlinux	EXPORT_SYMBOL_GPL
+0x0151e40b	devres_get	vmlinux	EXPORT_SYMBOL_GPL
+0xd8a7dfa8	ieee80211_data_to_8023	net/wireless/cfg80211	EXPORT_SYMBOL
+0xc2006155	nf_nat_sdp_session_hook	net/netfilter/nf_conntrack_sip	EXPORT_SYMBOL_GPL
+0x86b04750	ieee80211_resume_disconnect	net/mac80211/mac80211	EXPORT_SYMBOL_GPL
+0xd21b00ca	bt_accept_enqueue	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x6e9f8cf5	usb_wwan_startup	drivers/usb/serial/usb_wwan	EXPORT_SYMBOL
+0x70bb49c7	fc_host_post_vendor_event	drivers/scsi/scsi_transport_fc	EXPORT_SYMBOL
+0x506e19ce	pcmcia_parse_events	drivers/pcmcia/pcmcia_core	EXPORT_SYMBOL
+0x09e9f41d	orinoco_if_add	drivers/net/wireless/orinoco/orinoco	EXPORT_SYMBOL
+0xaebed90d	onenand_scan	drivers/mtd/onenand/onenand	EXPORT_SYMBOL_GPL
+0xd8b7fd23	v4l2_device_register_subdev	drivers/media/video/videodev	EXPORT_SYMBOL_GPL
+0x99a44162	sms_board_led_feedback	drivers/media/dvb/siano/smsmdtv	EXPORT_SYMBOL_GPL
+0x5ead9462	lgdt330x_attach	drivers/media/dvb/frontends/lgdt330x	EXPORT_SYMBOL
+0xa904b5c8	lgdt3305_attach	drivers/media/dvb/frontends/lgdt3305	EXPORT_SYMBOL
+0x5235a787	pci_set_mwi	vmlinux	EXPORT_SYMBOL
+0x9401af28	sync_inodes_sb	vmlinux	EXPORT_SYMBOL
+0x7485e15e	unregister_chrdev_region	vmlinux	EXPORT_SYMBOL
+0x926274b4	generic_writepages	vmlinux	EXPORT_SYMBOL
+0x3bd86045	rpc_protocol	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x2edc62e7	ceph_monc_validate_auth	net/ceph/libceph	EXPORT_SYMBOL
+0x5eaff208	sms_board_event	drivers/media/dvb/siano/smsmdtv	EXPORT_SYMBOL_GPL
+0x9b1e25c9	bcm3510_attach	drivers/media/dvb/frontends/bcm3510	EXPORT_SYMBOL
+0x7b047bd9	dm_tm_create_non_blocking_clone	drivers/md/persistent-data/dm-persistent-data	EXPORT_SYMBOL_GPL
+0xa031ca14	kvm_read_guest_page	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x2bcdd07b	register_8022_client	vmlinux	EXPORT_SYMBOL
+0x271cba95	acpi_bus_private_data_handler	vmlinux	EXPORT_SYMBOL
+0x3daf888b	gpiochip_is_requested	vmlinux	EXPORT_SYMBOL_GPL
+0xf1cf3036	blk_set_default_limits	vmlinux	EXPORT_SYMBOL
+0x4ab6fe88	blk_init_allocated_queue	vmlinux	EXPORT_SYMBOL
+0xcb99edb0	posix_acl_equiv_mode	vmlinux	EXPORT_SYMBOL
+0x7628f3c7	this_cpu_off	vmlinux	EXPORT_SYMBOL
+0xba95d3cb	ceph_pg_poolid_by_name	net/ceph/libceph	EXPORT_SYMBOL
+0x5e4bc088	__uwb_addr_print	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0xfe2e17d7	wusb_et_name	drivers/usb/wusbcore/wusbcore	EXPORT_SYMBOL_GPL
+0x0fab3aec	_rtl92c_phy_fw_rf_serial_read	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0x4de7b2d0	unregister_capictr_notifier	drivers/isdn/capi/kernelcapi	EXPORT_SYMBOL_GPL
+0x8cfb3e1c	rtnl_register	vmlinux	EXPORT_SYMBOL_GPL
+0xe484e35f	ioread32	vmlinux	EXPORT_SYMBOL
+0x36557742	lookup_bdev	vmlinux	EXPORT_SYMBOL
+0x749f4165	irq_stat	vmlinux	EXPORT_SYMBOL
+0x625b71c9	snd_hda_add_nid	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0xc98d2d0f	ceph_destroy_client	net/ceph/libceph	EXPORT_SYMBOL
+0xd12ac264	osd_req_read_kern	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0xdd0916ab	il_mac_bss_info_changed	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x7bad5950	videobuf_dvb_alloc_frontend	drivers/media/video/videobuf-dvb	EXPORT_SYMBOL
+0x04dd92ce	fw_core_add_descriptor	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0x94978d39	btmrvl_remove_card	drivers/bluetooth/btmrvl	EXPORT_SYMBOL_GPL
+0x942ad79d	raw_seq_stop	vmlinux	EXPORT_SYMBOL_GPL
+0xf2da0160	gnet_stats_copy_basic	vmlinux	EXPORT_SYMBOL
+0x0762403c	edac_put_sysfs_subsys	vmlinux	EXPORT_SYMBOL_GPL
+0x6a48e16b	percpu_counter_destroy	vmlinux	EXPORT_SYMBOL
+0xbc1dfa82	vm_map_ram	vmlinux	EXPORT_SYMBOL
+0x9e1dac7e	filemap_fdatawrite_range	vmlinux	EXPORT_SYMBOL
+0x3c86670e	oxygen_read8	sound/pci/oxygen/snd-oxygen-lib	EXPORT_SYMBOL
+0xb1285833	zs_get_total_size_bytes	drivers/staging/zsmalloc/zsmalloc	EXPORT_SYMBOL_GPL
+0xc0cb02f4	iscsi_conn_get_addr_param	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0x749c116c	rt2x00mac_get_ringparam	drivers/net/wireless/rt2x00/rt2x00lib	EXPORT_SYMBOL_GPL
+0x637e325f	tveeprom_read	drivers/media/video/tveeprom	EXPORT_SYMBOL
+0x1ca0c084	cx2341x_log_status	drivers/media/video/cx2341x	EXPORT_SYMBOL
+0x7d684c44	isl6423_attach	drivers/media/dvb/frontends/isl6423	EXPORT_SYMBOL
+0x8a3ca882	hidinput_report_event	drivers/hid/hid	EXPORT_SYMBOL_GPL
+0x42abefad	ttm_bo_acc_size	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x24dd2e45	inet_sendmsg	vmlinux	EXPORT_SYMBOL
+0x6f87c8d6	ip_cmsg_recv	vmlinux	EXPORT_SYMBOL
+0x435e6c6e	crypto_alg_sem	vmlinux	EXPORT_SYMBOL_GPL
+0x1207442b	bio_sector_offset	vmlinux	EXPORT_SYMBOL
+0xd4225636	snd_hda_codec_new	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x7fe214f3	rpc_call_async	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xe553a63d	t1pci_detect	drivers/isdn/hardware/avm/b1dma	EXPORT_SYMBOL
+0xa27e934b	alloc_fddidev	vmlinux	EXPORT_SYMBOL
+0xe413be4a	memcg_socket_limit_enabled	vmlinux	EXPORT_SYMBOL
+0xc2ba4a60	inverse_translate	vmlinux	EXPORT_SYMBOL_GPL
+0x54935666	acpi_os_read_port	vmlinux	EXPORT_SYMBOL
+0x2429ba3f	find_vma_prepare	vmlinux	EXPORT_SYMBOL
+0xa9126bff	hpet_set_rtc_irq_bit	vmlinux	EXPORT_SYMBOL_GPL
+0x87f35133	cpu_sibling_map	vmlinux	EXPORT_SYMBOL
+0xb53ae573	cpu_idle_wait	vmlinux	EXPORT_SYMBOL_GPL
+0x0ebb5baa	snd_hda_get_conn_index	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x86d7fe3a	__uwb_rc_try_get	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0xdc090f2a	ath9k_cmn_update_txpow	drivers/net/wireless/ath/ath9k/ath9k_common	EXPORT_SYMBOL
+0x99d0e797	ata_sff_exec_command	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xe0704f1d	af_alg_make_sg	crypto/af_alg	EXPORT_SYMBOL_GPL
+0x0a16e6f7	af_alg_free_sg	crypto/af_alg	EXPORT_SYMBOL_GPL
+0x056ee730	ipv6_hash_secret	vmlinux	EXPORT_SYMBOL
+0x760b437a	unregister_inetaddr_notifier	vmlinux	EXPORT_SYMBOL
+0xeeb364d8	hvc_instantiate	vmlinux	EXPORT_SYMBOL_GPL
+0x89d5538d	fb_pad_aligned_buffer	vmlinux	EXPORT_SYMBOL
+0xb7ca31cb	perf_event_enable	vmlinux	EXPORT_SYMBOL_GPL
+0x90a88db1	unregister_exec_domain	vmlinux	EXPORT_SYMBOL
+0x4fe634f3	range_bipolar2_5	drivers/staging/comedi/comedi	EXPORT_SYMBOL
+0x2320e934	rtl_cam_mark_invalid	drivers/net/wireless/rtlwifi/rtlwifi	EXPORT_SYMBOL
+0xa89877d4	dib0090_get_wbd_offset	drivers/media/dvb/frontends/dib0090	EXPORT_SYMBOL
+0x17017927	agp_generic_mask_memory	vmlinux	EXPORT_SYMBOL
+0xfc86707c	nobh_write_begin	vmlinux	EXPORT_SYMBOL
+0xe6b3fe21	interruptible_sleep_on_timeout	vmlinux	EXPORT_SYMBOL
+0x8b5f4a2e	IO_APIC_get_PCI_irq_vector	vmlinux	EXPORT_SYMBOL
+0xb8fdfdf2	snd_cs4236_ext_out	sound/isa/wss/snd-wss-lib	EXPORT_SYMBOL
+0x5b44556e	iscsi_register_transport	drivers/scsi/scsi_transport_iscsi	EXPORT_SYMBOL_GPL
+0x34bca012	pcmcia_read_config_byte	drivers/pcmcia/pcmcia	EXPORT_SYMBOL
+0x04d54a25	rt2800_gain_calibration	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0x918c5161	ath9k_hw_disable	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x9cb50e9c	ath_printk	drivers/net/wireless/ath/ath	EXPORT_SYMBOL
+0x124b114b	eip_tx_timeout	drivers/net/ethernet/8390/8390p	EXPORT_SYMBOL
+0xd342b2ba	eip_poll	drivers/net/ethernet/8390/8390p	EXPORT_SYMBOL
+0x9ab05795	netlink_ack	vmlinux	EXPORT_SYMBOL
+0x51ea0472	sock_no_bind	vmlinux	EXPORT_SYMBOL
+0x716cc9e2	sock_get_timestamp	vmlinux	EXPORT_SYMBOL
+0xcc5b27b5	acpi_extract_package	vmlinux	EXPORT_SYMBOL
+0x4211c3c1	zlib_inflateInit2	vmlinux	EXPORT_SYMBOL
+0x62fd6207	param_set_charp	vmlinux	EXPORT_SYMBOL
+0xff2d234e	snd_wss_get_pcm_ops	sound/isa/wss/snd-wss-lib	EXPORT_SYMBOL
+0x3dabdc6d	snd_gf1_ctrl_stop	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0x3ab155f3	iscsi_session_failure	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0x8487bc9b	orinoco_set_multicast_list	drivers/net/wireless/orinoco/orinoco	EXPORT_SYMBOL
+0x2f530688	ath9k_hw_resettxqueue	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x118d4f99	mlx4_put_eth_qp	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x421d4347	v4l2_event_unsubscribe_all	drivers/media/video/videodev	EXPORT_SYMBOL_GPL
+0x61c7c085	dm_tm_create_with_sm	drivers/md/persistent-data/dm-persistent-data	EXPORT_SYMBOL_GPL
+0xeb370805	__apei_exec_run	vmlinux	EXPORT_SYMBOL_GPL
+0xd6b9e74f	bio_free	vmlinux	EXPORT_SYMBOL
+0x52b6a5e2	__mmu_notifier_register	vmlinux	EXPORT_SYMBOL_GPL
+0x586dd980	uwb_rsv_create	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0xb314fe57	libipw_rx	drivers/net/wireless/ipw2x00/libipw	EXPORT_SYMBOL
+0x8db54f3e	v4l2_event_queue_fh	drivers/media/video/videodev	EXPORT_SYMBOL_GPL
+0xef1c781c	vid_which_vrm	drivers/hwmon/hwmon-vid	EXPORT_SYMBOL
+0x42e16176	ata_sas_sync_probe	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xf1481d6a	fb_sys_read	vmlinux	EXPORT_SYMBOL_GPL
+0xa9c63b69	security_xfrm_policy_free	vmlinux	EXPORT_SYMBOL
+0x8df3789f	snd_oss_info_register	sound/core/snd	EXPORT_SYMBOL
+0xd600e9db	ircomm_connect_response	net/irda/ircomm/ircomm	EXPORT_SYMBOL
+0x3b268f21	wpan_phy_unregister	net/ieee802154/ieee802154	EXPORT_SYMBOL
+0xf55f2965	fuse_request_alloc	fs/fuse/fuse	EXPORT_SYMBOL_GPL
+0xb3b72dee	comedi_buf_write_free	drivers/staging/comedi/comedi	EXPORT_SYMBOL
+0x0cf0d51f	fc_lport_bsg_request	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x4d8680e9	cxgbi_sock_closed	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0xffe27bca	orinoco_interrupt	drivers/net/wireless/orinoco/orinoco	EXPORT_SYMBOL
+0x2342f1ae	v4l2_prio_open	drivers/media/video/videodev	EXPORT_SYMBOL
+0x5f6cbc33	drm_find_cea_extension	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x6bdcfd99	qdisc_class_hash_remove	vmlinux	EXPORT_SYMBOL
+0x9f7a20e5	__put_net	vmlinux	EXPORT_SYMBOL_GPL
+0x7594fcfc	dmam_alloc_noncoherent	vmlinux	EXPORT_SYMBOL
+0x80c6bdfd	transport_destroy_device	vmlinux	EXPORT_SYMBOL_GPL
+0x8fa94d35	serial8250_tx_chars	vmlinux	EXPORT_SYMBOL_GPL
+0xb4083034	ip_set_add	net/netfilter/ipset/ip_set	EXPORT_SYMBOL_GPL
+0x368dc2ec	ip_set_del	net/netfilter/ipset/ip_set	EXPORT_SYMBOL_GPL
+0x9cd5a5db	lro_flush_pkt	net/ipv4/inet_lro	EXPORT_SYMBOL
+0xe0bd49ba	ttm_bo_move_ttm	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x501c18e8	tty_unregister_device	vmlinux	EXPORT_SYMBOL
+0x66355efc	vprintk	vmlinux	EXPORT_SYMBOL
+0x26afb13e	__udp4_lib_lookup	vmlinux	EXPORT_SYMBOL_GPL
+0x2e2ce9e0	sysctl_tcp_syncookies	vmlinux	EXPORT_SYMBOL
+0x399c2143	tcp_poll	vmlinux	EXPORT_SYMBOL
+0x2482e688	vsprintf	vmlinux	EXPORT_SYMBOL
+0xbe609f68	generic_splice_sendpage	vmlinux	EXPORT_SYMBOL
+0xecb730b0	arcnet_interrupt	drivers/net/arcnet/arcnet	EXPORT_SYMBOL
+0x7ec27b4b	pcf50633_read_block	drivers/mfd/pcf50633	EXPORT_SYMBOL_GPL
+0x950282f5	videobuf_dvb_get_frontend	drivers/media/video/videobuf-dvb	EXPORT_SYMBOL
+0x9d406104	gspca_resume	drivers/media/video/gspca/gspca_main	EXPORT_SYMBOL
+0xece5af3d	em28xx_read_ac97	drivers/media/video/em28xx/em28xx	EXPORT_SYMBOL_GPL
+0x67b1d568	ttm_bo_global_release	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0xb045a9e5	attribute_container_find_class_device	vmlinux	EXPORT_SYMBOL_GPL
+0xaf38274a	xen_swiotlb_sync_single_for_cpu	vmlinux	EXPORT_SYMBOL_GPL
+0x1242e7ca	register_key_type	vmlinux	EXPORT_SYMBOL
+0xf7e43d15	grab_cache_page_write_begin	vmlinux	EXPORT_SYMBOL
+0x4d7945e5	rt_mutex_lock_interruptible	vmlinux	EXPORT_SYMBOL_GPL
+0x8d131501	init_fpu	vmlinux	EXPORT_SYMBOL_GPL
+0x167e7f9d	__get_user_1	vmlinux	EXPORT_SYMBOL
+0xc3aaf0a9	__put_user_1	vmlinux	EXPORT_SYMBOL
+0xa0995b2b	ssb_chipco_gpio_control	drivers/ssb/ssb	EXPORT_SYMBOL
+0xf2c3419b	__mtd_next_device	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0xe25efaf3	ttm_page_alloc_debugfs	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x77d54a5e	class_create_file	vmlinux	EXPORT_SYMBOL_GPL
+0x4a3e0a1e	pci_disable_link_state_locked	vmlinux	EXPORT_SYMBOL
+0x0cae232b	utf16s_to_utf8s	vmlinux	EXPORT_SYMBOL
+0x4bc4d5a5	__cond_resched_lock	vmlinux	EXPORT_SYMBOL
+0xd08c548a	__put_task_struct	vmlinux	EXPORT_SYMBOL_GPL
+0x092d29ff	snd_rawmidi_output_params	sound/core/snd-rawmidi	EXPORT_SYMBOL
+0xf1a77fa9	mite_bytes_written_to_memory_lb	drivers/staging/comedi/drivers/mite	EXPORT_SYMBOL
+0xfcb58dcf	unregister_pernet_subsys	vmlinux	EXPORT_SYMBOL_GPL
+0x015600ff	pnp_unregister_driver	vmlinux	EXPORT_SYMBOL
+0xe8ac661a	wait_on_sync_kiocb	vmlinux	EXPORT_SYMBOL
+0x5be0c4f6	simple_write_begin	vmlinux	EXPORT_SYMBOL
+0x57423ed7	bdi_set_max_ratio	vmlinux	EXPORT_SYMBOL
+0x91ff6e5d	redirty_page_for_writepage	vmlinux	EXPORT_SYMBOL
+0x4dab1f60	snd_hda_add_imux_item	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x8ffe7e89	nf_conntrack_htable_size	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x09d8df9d	ieee80211_ctstoself_get	net/mac80211/mac80211	EXPORT_SYMBOL
+0x558b742f	il_set_rxon_channel	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x7874bb96	cxgb3_queue_tid_release	drivers/net/ethernet/chelsio/cxgb3/cxgb3	EXPORT_SYMBOL
+0xa336feb7	nand_manuf_ids	drivers/mtd/nand/nand_ids	EXPORT_SYMBOL
+0x2309a6d6	tm6000_xc5000_callback	drivers/media/video/tm6000/tm6000	EXPORT_SYMBOL_GPL
+0xcdd36df4	em28xx_register_extension	drivers/media/video/em28xx/em28xx	EXPORT_SYMBOL
+0x1c4065c1	ata_port_desc	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xc0c34ed8	kvm_read_guest_virt	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x36546898	netdev_emerg	vmlinux	EXPORT_SYMBOL
+0xd975c8ed	sk_stream_kill_queues	vmlinux	EXPORT_SYMBOL
+0x0fa94ab8	dev_set_name	vmlinux	EXPORT_SYMBOL_GPL
+0xeb37101c	audit_log_end	vmlinux	EXPORT_SYMBOL
+0x6d40a921	need_ipv4_conntrack	net/ipv4/netfilter/nf_conntrack_ipv4	EXPORT_SYMBOL_GPL
+0x15a5e1c5	usb_queue_reset_device	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xebc900d5	subdev_700_cleanup	drivers/staging/comedi/drivers/ni_daq_700	EXPORT_SYMBOL
+0x47d76c03	cfi_varsize_frob	drivers/mtd/chips/cfi_util	EXPORT_SYMBOL
+0x841c47b9	drm_mm_scan_add_block	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x14704caa	__sk_dst_check	vmlinux	EXPORT_SYMBOL
+0x904409c6	acpi_set_firmware_waking_vector	vmlinux	EXPORT_SYMBOL
+0xa712355b	elv_register_queue	vmlinux	EXPORT_SYMBOL
+0x716265c7	debugfs_initialized	vmlinux	EXPORT_SYMBOL_GPL
+0x36875389	__timecompare_update	vmlinux	EXPORT_SYMBOL_GPL
+0x89afe34e	__kfifo_dma_in_prepare	vmlinux	EXPORT_SYMBOL
+0x206347e5	cpu_core_map	vmlinux	EXPORT_SYMBOL
+0xdd74bc7a	rcode_string	sound/firewire/snd-firewire-lib	EXPORT_SYMBOL
+0x2bc0a16b	snd_opl3_find_patch	sound/drivers/opl3/snd-opl3-lib	EXPORT_SYMBOL
+0x86c488de	snd_pcm_lib_preallocate_pages	sound/core/snd-pcm	EXPORT_SYMBOL
+0x359de411	irias_insert_object	net/irda/irda	EXPORT_SYMBOL
+0xa7522a64	ax25_register_pid	net/ax25/ax25	EXPORT_SYMBOL_GPL
+0xa251b061	usb_interrupt_msg	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x098a3f18	rt2800_conf_tx	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0x89b611dd	tm6000_debug	drivers/media/video/tm6000/tm6000	EXPORT_SYMBOL_GPL
+0x638d5acb	pm_generic_runtime_resume	vmlinux	EXPORT_SYMBOL_GPL
+0xe2b48810	bus_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0x4c759827	byte_rev_table	vmlinux	EXPORT_SYMBOL_GPL
+0xddc0081e	__elv_add_request	vmlinux	EXPORT_SYMBOL
+0x755052ca	skcipher_geniv_init	vmlinux	EXPORT_SYMBOL_GPL
+0x0abaa088	set_bh_page	vmlinux	EXPORT_SYMBOL
+0xec4e50df	free_user_ns	vmlinux	EXPORT_SYMBOL
+0x6e33d3d8	ceph_osdc_stop	net/ceph/libceph	EXPORT_SYMBOL
+0xe03e748c	ax25_linkfail_register	net/ax25/ax25	EXPORT_SYMBOL
+0x6befdea3	wusbhc_destroy	drivers/usb/wusbcore/wusbcore	EXPORT_SYMBOL_GPL
+0x11eab9fe	dm_bm_read_lock	drivers/md/persistent-data/dm-persistent-data	EXPORT_SYMBOL_GPL
+0x3282c3a0	mISDN_register_Bprotocol	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0xe914e41e	strcpy	vmlinux	EXPORT_SYMBOL
+0x604e247f	crypto_destroy_tfm	vmlinux	EXPORT_SYMBOL_GPL
+0xf8639cd1	filemap_fault	vmlinux	EXPORT_SYMBOL
+0xfc872fd1	get_ibs_caps	vmlinux	EXPORT_SYMBOL
+0x5469ce31	ocfs2_dlm_lvb_valid	fs/ocfs2/ocfs2_stackglue	EXPORT_SYMBOL_GPL
+0x1bc3edc2	usb_stor_sense_invalidCDB	drivers/usb/storage/usb-storage	EXPORT_SYMBOL_GPL
+0x0ad6e83f	parport_ieee1284_read_byte	drivers/parport/parport	EXPORT_SYMBOL
+0x95623c5b	parport_claim_or_block	drivers/parport/parport	EXPORT_SYMBOL
+0x1744a47b	_rtl92c_phy_dbm_to_txpwr_Idx	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0xc947473c	tm6000_set_reg	drivers/media/video/tm6000/tm6000	EXPORT_SYMBOL_GPL
+0x2c737762	tm6000_get_reg	drivers/media/video/tm6000/tm6000	EXPORT_SYMBOL_GPL
+0x951f27f2	tty_pair_get_tty	vmlinux	EXPORT_SYMBOL
+0x93c8d386	tty_pair_get_pty	vmlinux	EXPORT_SYMBOL
+0x7c971ebc	fb_get_buffer_offset	vmlinux	EXPORT_SYMBOL
+0xe2b004aa	key_payload_reserve	vmlinux	EXPORT_SYMBOL
+0x4ed6e906	blocking_notifier_chain_register	vmlinux	EXPORT_SYMBOL_GPL
+0xdc3e3166	nf_ct_insert_dying_list	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xc7e9782e	ieee80211_get_key_tx_seq	net/mac80211/mac80211	EXPORT_SYMBOL
+0xddb47d52	ieee80211_get_key_rx_seq	net/mac80211/mac80211	EXPORT_SYMBOL
+0x42c1c472	ceph_monc_got_mdsmap	net/ceph/libceph	EXPORT_SYMBOL
+0x1d599f41	fuse_abort_conn	fs/fuse/fuse	EXPORT_SYMBOL_GPL
+0xdd63ab43	recv_Bchannel_skb	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0x08f98291	skb_unlink	vmlinux	EXPORT_SYMBOL
+0xe640f238	xenbus_grant_ring	vmlinux	EXPORT_SYMBOL_GPL
+0x6ec941ed	crypto_register_template	vmlinux	EXPORT_SYMBOL_GPL
+0x5dc92bcc	vm_iomap_memory	vmlinux	EXPORT_SYMBOL
+0xaab9f7e7	node_states	vmlinux	EXPORT_SYMBOL
+0x6a5fb566	rcu_sched_force_quiescent_state	vmlinux	EXPORT_SYMBOL_GPL
+0x4e4dd4c5	irq_setup_alt_chip	vmlinux	EXPORT_SYMBOL_GPL
+0xb2e5ae4a	snd_lookup_minor_data	sound/core/snd	EXPORT_SYMBOL
+0x59f0e3ed	dccp_send_sync	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x5b8d040f	ceph_auth_create_authorizer	net/ceph/libceph	EXPORT_SYMBOL
+0x8bc2d6c4	uwb_rsv_destroy	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0xf5c3bffc	il_apm_stop	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xed1b3c59	make_EII_client	vmlinux	EXPORT_SYMBOL
+0x5641485b	tty_termios_encode_baud_rate	vmlinux	EXPORT_SYMBOL_GPL
+0x42d57ce9	ulist_reinit	fs/btrfs/btrfs	EXPORT_SYMBOL
+0x914da22c	usb_hcd_pci_shutdown	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x756bd661	rtl92c_bt_rssi_state_change	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0xa42bfb0f	i2400m_reset	drivers/net/wimax/i2400m/i2400m	EXPORT_SYMBOL_GPL
+0x9723f7cd	ttpci_budget_deinit	drivers/media/dvb/ttpci/budget-core	EXPORT_SYMBOL_GPL
+0x645502e6	saa7146_stop_preview	drivers/media/common/saa7146_vv	EXPORT_SYMBOL_GPL
+0x22296427	drm_fb_helper_set_par	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0xb2bc520f	ata_cable_40wire	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x301c6442	inet_csk_delete_keepalive_timer	vmlinux	EXPORT_SYMBOL
+0xd6ece794	dev_pm_qos_add_ancestor_request	vmlinux	EXPORT_SYMBOL_GPL
+0xa5bdc912	pci_bus_set_ops	vmlinux	EXPORT_SYMBOL
+0x69dfd1ef	amdtp_out_stream_init	sound/firewire/snd-firewire-lib	EXPORT_SYMBOL
+0x2084804a	cfg80211_wext_giwname	net/wireless/cfg80211	EXPORT_SYMBOL_GPL
+0xc47ff269	cfg80211_wext_siwmode	net/wireless/cfg80211	EXPORT_SYMBOL_GPL
+0x5735ec4a	cfg80211_wext_giwmode	net/wireless/cfg80211	EXPORT_SYMBOL_GPL
+0xb8951557	cfg80211_send_auth_timeout	net/wireless/cfg80211	EXPORT_SYMBOL
+0x29e6973f	ieee80211_get_operstate	net/mac80211/mac80211	EXPORT_SYMBOL
+0xc2bd2646	usb_register_device_driver	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x4f19ce72	spk_synth_immediate	drivers/staging/speakup/speakup	EXPORT_SYMBOL_GPL
+0x8566c457	ata_cable_unknown	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x93ec02b4	xfrm_state_register_afinfo	vmlinux	EXPORT_SYMBOL
+0x4fdee897	i8042_command	vmlinux	EXPORT_SYMBOL
+0xa91fe181	subsys_interface_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0xd3abc761	xen_swiotlb_dma_mapping_error	vmlinux	EXPORT_SYMBOL_GPL
+0x87806579	kmem_cache_size	vmlinux	EXPORT_SYMBOL
+0x6b94c408	enable_kprobe	vmlinux	EXPORT_SYMBOL_GPL
+0xbff86761	regulatory_hint	net/wireless/cfg80211	EXPORT_SYMBOL
+0xe4f4dcc8	wiphy_rfkill_start_polling	net/wireless/cfg80211	EXPORT_SYMBOL
+0x0c8c9e99	scsi_show_extd_sense	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xf245d67f	osd_req_read	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0xfa259261	videobuf_vmalloc_free	drivers/media/video/videobuf-vmalloc	EXPORT_SYMBOL_GPL
+0xb6be0cf2	gspca_auto_gain_n_exposure	drivers/media/video/gspca/gspca_main	EXPORT_SYMBOL
+0x753cd01e	ib_cm_init_qp_attr	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0x6a8c3049	inet_ioctl	vmlinux	EXPORT_SYMBOL
+0xe0ac8bd2	acpi_bus_generate_netlink_event	vmlinux	EXPORT_SYMBOL
+0xc9d7fd55	__pci_reset_function	vmlinux	EXPORT_SYMBOL_GPL
+0x8f2703b7	wbinvd_on_all_cpus	vmlinux	EXPORT_SYMBOL
+0x280e4516	kobject_get_path	vmlinux	EXPORT_SYMBOL_GPL
+0xecb3a5e1	clocksource_register	vmlinux	EXPORT_SYMBOL
+0x9c2ef419	xt_register_target	net/netfilter/x_tables	EXPORT_SYMBOL
+0x29db9843	bt_sock_link	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0x4a3fb42c	ata_sas_async_probe	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x9b9f3648	pcibios_scan_specific_bus	vmlinux	EXPORT_SYMBOL_GPL
+0x37ff4c06	copy_from_user_overflow	vmlinux	EXPORT_SYMBOL
+0x6f20960a	full_name_hash	vmlinux	EXPORT_SYMBOL
+0x3b46ef93	ip_vs_proto_data_get	net/netfilter/ipvs/ip_vs	EXPORT_SYMBOL
+0xd51250e4	g450_mnp2f	drivers/video/matrox/g450_pll	EXPORT_SYMBOL
+0x587a9eb4	rndis_command	drivers/net/usb/rndis_host	EXPORT_SYMBOL_GPL
+0xec47922f	videobuf_to_dma	drivers/media/video/videobuf-dma-sg	EXPORT_SYMBOL_GPL
+0x142c39da	dvb_unregister_device	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0xcde0cfb9	ib_get_cached_pkey	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xc9cab293	ping_prot	vmlinux	EXPORT_SYMBOL
+0xf33ca7c4	nf_unregister_hooks	vmlinux	EXPORT_SYMBOL
+0x814e7730	nf_ct_destroy	vmlinux	EXPORT_SYMBOL
+0xaa410c31	pm_generic_freeze	vmlinux	EXPORT_SYMBOL_GPL
+0xc51c4644	device_create_vargs	vmlinux	EXPORT_SYMBOL_GPL
+0xb208a01c	tty_port_hangup	vmlinux	EXPORT_SYMBOL
+0x1bd32003	pnp_disable_dev	vmlinux	EXPORT_SYMBOL
+0x1507998a	framebuffer_release	vmlinux	EXPORT_SYMBOL
+0x45bf1ff3	crypto_inc	vmlinux	EXPORT_SYMBOL_GPL
+0x8810ad5e	crypto_xor	vmlinux	EXPORT_SYMBOL_GPL
+0x161e5180	cpu_bit_bitmap	vmlinux	EXPORT_SYMBOL_GPL
+0x4d3d7c07	rpc_free_iostats	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xbe9479dc	rpc_destroy_wait_queue	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xfa54a290	i2400m_post_reset	drivers/net/wimax/i2400m/i2400m	EXPORT_SYMBOL_GPL
+0xd6f7198b	saa7146_start_preview	drivers/media/common/saa7146_vv	EXPORT_SYMBOL_GPL
+0xc6ef3a96	btmrvl_process_event	drivers/bluetooth/btmrvl	EXPORT_SYMBOL_GPL
+0x6df98dff	kvm_set_cr8	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xa58e1848	kvm_get_cr8	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x1b8b95ad	i8042_unlock_chip	vmlinux	EXPORT_SYMBOL
+0xe439815c	erst_get_record_count	vmlinux	EXPORT_SYMBOL_GPL
+0x38a71b7e	pci_free_resource_list	vmlinux	EXPORT_SYMBOL
+0xdc7024c2	wiphy_apply_custom_regulatory	net/wireless/cfg80211	EXPORT_SYMBOL
+0x6eea229d	svcauth_unix_purge	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xe615b6f5	fat_getattr	fs/fat/fat	EXPORT_SYMBOL_GPL
+0x207b66bc	fat_setattr	fs/fat/fat	EXPORT_SYMBOL_GPL
+0xd9545aab	usb_hcd_poll_rh_status	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0x3341e3e6	rtl92c_fill_h2c_cmd	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0xdf34fe5b	brcmu_pktq_init	drivers/net/wireless/brcm80211/brcmutil/brcmutil	EXPORT_SYMBOL
+0x4526289b	mpt_event_deregister	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0x34998d84	cx24113_agc_callback	drivers/media/dvb/frontends/cx24113	EXPORT_SYMBOL
+0x43f23311	dm_table_get_md	drivers/md/dm-mod	EXPORT_SYMBOL
+0x5f41f3d5	device_find_child	vmlinux	EXPORT_SYMBOL_GPL
+0x3e18a4c7	generic_read_dir	vmlinux	EXPORT_SYMBOL
+0xa76a06af	dentry_unhash	vmlinux	EXPORT_SYMBOL
+0xe007de41	kallsyms_lookup_name	vmlinux	EXPORT_SYMBOL_GPL
+0x8cd9f935	setup_APIC_eilvt	vmlinux	EXPORT_SYMBOL_GPL
+0x54e40976	xprt_lookup_rqst	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x9cc92339	ct_sip_parse_header_uri	net/netfilter/nf_conntrack_sip	EXPORT_SYMBOL_GPL
+0x616e54b4	mite_prep_dma	drivers/staging/comedi/drivers/mite	EXPORT_SYMBOL
+0xe2090ab8	gameport_set_phys	drivers/input/gameport/gameport	EXPORT_SYMBOL
+0xc66cbb14	tpm_pm_suspend	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0x19475b61	bsg_remove_queue	vmlinux	EXPORT_SYMBOL_GPL
+0xcc37797c	writeback_inodes_sb_if_idle	vmlinux	EXPORT_SYMBOL
+0x74aff70d	truncate_pagecache	vmlinux	EXPORT_SYMBOL
+0x26b71fb4	ring_buffer_time_stamp	vmlinux	EXPORT_SYMBOL_GPL
+0xb34a7575	mdio45_ethtool_spauseparam_an	drivers/net/mdio	EXPORT_SYMBOL
+0xea6e52ab	NS8390_init	drivers/net/ethernet/8390/8390	EXPORT_SYMBOL
+0x16244fe5	v4l2_prio_check	drivers/media/video/videodev	EXPORT_SYMBOL
+0x6c9260a4	gfn_to_memslot	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0x5fcdec5d	xfrm_ealg_get_byidx	vmlinux	EXPORT_SYMBOL_GPL
+0x9a2844e9	sock_no_shutdown	vmlinux	EXPORT_SYMBOL
+0xd2a89400	watchdog_register_device	vmlinux	EXPORT_SYMBOL_GPL
+0xc0c1cb02	vc_resize	vmlinux	EXPORT_SYMBOL
+0x0b52e502	apei_resources_add	vmlinux	EXPORT_SYMBOL_GPL
+0x94ef4d05	cpci_hp_stop	vmlinux	EXPORT_SYMBOL_GPL
+0x27a889c6	__generic_block_fiemap	vmlinux	EXPORT_SYMBOL
+0xb1acbcce	rcu_barrier_sched	vmlinux	EXPORT_SYMBOL_GPL
+0xecb721f1	try_wait_for_completion	vmlinux	EXPORT_SYMBOL
+0x8f7014a1	param_set_ulong	vmlinux	EXPORT_SYMBOL
+0xee2d0fc7	_local_bh_enable	vmlinux	EXPORT_SYMBOL
+0xdac2a1ac	nf_ct_expect_alloc	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x7042bc54	irlmp_register_client	net/irda/irda	EXPORT_SYMBOL
+0xb9210e47	ath9k_hw_intrpend	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0x82357de7	ttm_dma_page_alloc_debugfs	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL_GPL
+0x08ba5434	drm_kms_helper_poll_init	drivers/gpu/drm/drm_kms_helper	EXPORT_SYMBOL
+0xbadeab85	sysfs_unmerge_group	vmlinux	EXPORT_SYMBOL_GPL
+0xdb04cacc	tracepoint_probe_unregister_noupdate	vmlinux	EXPORT_SYMBOL_GPL
+0x639e91dc	cpu_active_mask	vmlinux	EXPORT_SYMBOL
+0x6226b9fa	machine_to_phys_mapping	vmlinux	EXPORT_SYMBOL
+0xbec2f23b	hpi_send_recv	sound/pci/asihpi/snd-asihpi	EXPORT_SYMBOL
+0xb462c0ce	ceph_copy_to_page_vector	net/ceph/libceph	EXPORT_SYMBOL
+0x16b2e575	ocfs2_dlm_unlock	fs/ocfs2/ocfs2_stackglue	EXPORT_SYMBOL_GPL
+0x1b89c6ee	o2hb_fill_node_map	fs/ocfs2/cluster/ocfs2_nodemanager	EXPORT_SYMBOL_GPL
+0x7843b4a7	ore_create	fs/exofs/libore	EXPORT_SYMBOL
+0x7f4b2c9d	p54_init_common	drivers/net/wireless/p54/p54common	EXPORT_SYMBOL_GPL
+0x3f62b516	ib_modify_qp	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xd78635ac	ttm_bo_kunmap	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x0e424eaa	drm_put_minor	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x36c07859	drm_calc_timestamping_constants	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x7e349617	bus_find_device_by_name	vmlinux	EXPORT_SYMBOL_GPL
+0x62827bec	security_secctx_to_secid	vmlinux	EXPORT_SYMBOL
+0x4541fe0d	mtrr_state	vmlinux	EXPORT_SYMBOL_GPL
+0xb00cce54	snd_timer_global_free	sound/core/snd-timer	EXPORT_SYMBOL
+0xdab0f892	apple_bl_unregister	drivers/video/backlight/apple_bl	EXPORT_SYMBOL_GPL
+0x0fcfdecb	usb_ftdi_elan_edset_flush	drivers/usb/misc/ftdi-elan	EXPORT_SYMBOL_GPL
+0xa3830f18	cxgbi_hbas_remove	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0xecb3cded	smscore_register_client	drivers/media/dvb/siano/smsmdtv	EXPORT_SYMBOL_GPL
+0x83c4cf86	flexcop_dma_allocate	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0xe818b32b	ata_bmdma_interrupt	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x1cfe78d1	kvm_release_pfn_dirty	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xbf9e6885	inet_peer_xrlim_allow	vmlinux	EXPORT_SYMBOL
+0xce239fb1	nf_ct_attach	vmlinux	EXPORT_SYMBOL
+0x5e2d11cc	register_user_hw_breakpoint	vmlinux	EXPORT_SYMBOL_GPL
+0x094e612e	snd_sb8dsp_interrupt	sound/isa/sb/snd-sb8-dsp	EXPORT_SYMBOL
+0x412f503b	snd_pcm_lib_writev	sound/core/snd-pcm	EXPORT_SYMBOL
+0xf8ba7850	usbip_alloc_iso_desc_pdu	drivers/staging/usbip/usbip-core	EXPORT_SYMBOL_GPL
+0xbe28ee96	sas_target_destroy	drivers/scsi/libsas/libsas	EXPORT_SYMBOL_GPL
+0x938ce44a	saa7146_unregister_device	drivers/media/common/saa7146_vv	EXPORT_SYMBOL_GPL
+0x50c2230c	mISDN_FsmChangeState	drivers/isdn/mISDN/mISDN_core	EXPORT_SYMBOL
+0xb97f52af	drm_mode_connector_list_update	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xe5ed5467	xfrm_policy_walk_init	vmlinux	EXPORT_SYMBOL
+0x9d3d1a51	driver_attach	vmlinux	EXPORT_SYMBOL_GPL
+0x475f010b	acpi_purge_cached_objects	vmlinux	EXPORT_SYMBOL
+0xca8acc78	acpi_dbg_level	vmlinux	EXPORT_SYMBOL
+0x285a50b9	textsearch_register	vmlinux	EXPORT_SYMBOL
+0x74baf17a	tracing_is_on	vmlinux	EXPORT_SYMBOL_GPL
+0x381a798a	setup_max_cpus	vmlinux	EXPORT_SYMBOL
+0xf06e2a2c	commit_creds	vmlinux	EXPORT_SYMBOL
+0x5703882e	__nf_ct_expect_find	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0xedd521c2	irlmp_get_discoveries	net/irda/irda	EXPORT_SYMBOL
+0x4216535d	dccp_rcv_state_process	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0x3241aa2e	garp_init_applicant	net/802/garp	EXPORT_SYMBOL_GPL
+0x1a4850e3	usbnet_generic_cdc_bind	drivers/net/usb/cdc_ether	EXPORT_SYMBOL_GPL
+0x48e53e66	platform_device_register	vmlinux	EXPORT_SYMBOL_GPL
+0x5934392b	fb_register_client	vmlinux	EXPORT_SYMBOL
+0xad0413d4	match_hex	vmlinux	EXPORT_SYMBOL
+0x25abb8f7	snd_vx_suspend	sound/drivers/vx/snd-vx-lib	EXPORT_SYMBOL
+0xc1a740b5	IsLegalChannel	drivers/staging/rtl8192u/r8192u_usb	EXPORT_SYMBOL
+0xae94a851	tm6000_register_extension	drivers/media/video/tm6000/tm6000	EXPORT_SYMBOL
+0xfb9cc938	media_entity_find_link	drivers/media/media	EXPORT_SYMBOL_GPL
+0xfee340e4	dev_attr_em_message	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xfd2d844d	__inet_lookup_listener	vmlinux	EXPORT_SYMBOL_GPL
+0x1c16366f	nf_unregister_sockopt	vmlinux	EXPORT_SYMBOL
+0xb7bbf96f	__skb_get_rxhash	vmlinux	EXPORT_SYMBOL
+0x5b1c78f1	skb_realloc_headroom	vmlinux	EXPORT_SYMBOL
+0x1c6d518d	platform_device_unregister	vmlinux	EXPORT_SYMBOL_GPL
+0xd10f5bb5	serial8250_set_isa_configurator	vmlinux	EXPORT_SYMBOL
+0xa3a04602	btree_geo64	vmlinux	EXPORT_SYMBOL_GPL
+0x2eb2f4b5	generic_pipe_buf_map	vmlinux	EXPORT_SYMBOL
+0xc28cef70	generic_pipe_buf_get	vmlinux	EXPORT_SYMBOL
+0x5cd29328	ipv6_find_hdr	net/ipv6/netfilter/ip6_tables	EXPORT_SYMBOL
+0x12a0d660	jbd2_journal_dirty_metadata	fs/jbd2/jbd2	EXPORT_SYMBOL
+0x987c2ccc	uPD98402_init	drivers/atm/uPD98402	EXPORT_SYMBOL
+0x6299b0e5	uhci_reset_hc	vmlinux	EXPORT_SYMBOL_GPL
+0x65ba370a	tty_port_close_end	vmlinux	EXPORT_SYMBOL
+0x77df0847	__set_personality	vmlinux	EXPORT_SYMBOL
+0xc0bee29c	hashbin_new	net/irda/irda	EXPORT_SYMBOL
+0x31dff1d7	sas_attach_transport	drivers/scsi/scsi_transport_sas	EXPORT_SYMBOL
+0x18d0f834	sas_bios_param	drivers/scsi/libsas/libsas	EXPORT_SYMBOL_GPL
+0xf3fa1776	mlx4_cq_free	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x1538dab9	ioc4_unregister_submodule	drivers/misc/ioc4	EXPORT_SYMBOL
+0x237f7910	dvb_ringbuffer_free	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0x240f784f	dvb_dmxdev_init	drivers/media/dvb/dvb-core/dvb-core	EXPORT_SYMBOL
+0x86bb1b71	flexcop_dma_control_size_irq	drivers/media/dvb/b2c2/b2c2-flexcop	EXPORT_SYMBOL
+0x2466ee3a	md_flush_request	drivers/md/md-mod	EXPORT_SYMBOL
+0xc1d93be1	ib_get_client_data	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x628b213d	ib_set_client_data	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x3cdd0ef1	drm_core_ioremap_wc	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0x13317f00	register_con_driver	vmlinux	EXPORT_SYMBOL
+0x79f24b5b	blkcipher_walk_done	vmlinux	EXPORT_SYMBOL_GPL
+0x1ebf6af5	page_readlink	vmlinux	EXPORT_SYMBOL
+0x3882ae91	reset_nth_bit	vmlinux	EXPORT_SYMBOL
+0xa32928f5	account_page_writeback	vmlinux	EXPORT_SYMBOL
+0x550e00be	virtqueue_kick	drivers/virtio/virtio_ring	EXPORT_SYMBOL_GPL
+0x98413234	uwb_rsv_state_str	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0xe475cf61	osd_req_flush_partition	drivers/scsi/osd/libosd	EXPORT_SYMBOL
+0xd0bed427	ubi_is_mapped	drivers/mtd/ubi/ubi	EXPORT_SYMBOL_GPL
+0x769434dd	edac_mc_handle_ue	drivers/edac/edac_core	EXPORT_SYMBOL_GPL
+0x2fe9fe5b	nf_unregister_afinfo	vmlinux	EXPORT_SYMBOL_GPL
+0x1dd571e6	fb_copy_cmap	vmlinux	EXPORT_SYMBOL
+0xf5eb86ea	blk_verify_command	vmlinux	EXPORT_SYMBOL
+0xc499ae1e	kstrdup	vmlinux	EXPORT_SYMBOL
+0x95f89a33	_raw_write_lock_irq	vmlinux	EXPORT_SYMBOL
+0xcdc5e025	freezing_slow_path	vmlinux	EXPORT_SYMBOL
+0xb16c68fb	snd_opl3_interrupt	sound/drivers/opl3/snd-opl3-lib	EXPORT_SYMBOL
+0x448b8aaa	irda_qos_bits_to_value	net/irda/irda	EXPORT_SYMBOL
+0xed46d211	fcoe_libfc_config	drivers/scsi/fcoe/libfcoe	EXPORT_SYMBOL_GPL
+0x8c9afc52	ata_bmdma_port_ops	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xdb68b94e	ata_host_alloc	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x4578661a	_atomic_dec_and_lock	vmlinux	EXPORT_SYMBOL
+0xea7987f1	key_update	vmlinux	EXPORT_SYMBOL
+0xc1444946	ax25cmp	net/ax25/ax25	EXPORT_SYMBOL
+0xdd53179b	virtqueue_get_vring_size	drivers/virtio/virtio_ring	EXPORT_SYMBOL_GPL
+0xc365baa4	iscsi_conn_bind	drivers/scsi/libiscsi	EXPORT_SYMBOL_GPL
+0x100367cc	rt2800_mcu_request	drivers/net/wireless/rt2x00/rt2800lib	EXPORT_SYMBOL_GPL
+0xf1542b4b	pcf50633_gpio_invert_set	drivers/mfd/pcf50633-gpio	EXPORT_SYMBOL_GPL
+0xaae57f31	pcf50633_gpio_invert_get	drivers/mfd/pcf50633-gpio	EXPORT_SYMBOL_GPL
+0x1db2178c	xfrm_register_km	vmlinux	EXPORT_SYMBOL
+0x97b8e1c3	ip_mc_dec_group	vmlinux	EXPORT_SYMBOL
+0xcb7131fb	fb_get_options	vmlinux	EXPORT_SYMBOL
+0x733c3b54	kasprintf	vmlinux	EXPORT_SYMBOL
+0xb257e9db	simple_rename	vmlinux	EXPORT_SYMBOL
+0x701bb5de	vfs_setxattr	vmlinux	EXPORT_SYMBOL_GPL
+0xd8d7664d	vfs_getxattr	vmlinux	EXPORT_SYMBOL_GPL
+0xed4d36ed	snd_ctl_free_one	sound/core/snd	EXPORT_SYMBOL
+0x7edbd07f	iw_cm_reject	drivers/infiniband/core/iw_cm	EXPORT_SYMBOL
+0x254e5667	scx200_gpio_base	arch/x86/platform/scx200/scx200	EXPORT_SYMBOL
+0x5dfe9bd3	sock_init_data	vmlinux	EXPORT_SYMBOL
+0xc2424641	agp3_generic_cleanup	vmlinux	EXPORT_SYMBOL
+0xcf0e4667	tty_set_termios	vmlinux	EXPORT_SYMBOL_GPL
+0xc11b4470	balloon_stats	vmlinux	EXPORT_SYMBOL_GPL
+0xac58ea5e	acpi_unload_table_id	vmlinux	EXPORT_SYMBOL
+0x8d8d96c6	acpi_get_sleep_type_data	vmlinux	EXPORT_SYMBOL
+0xe02eb6d0	ring_buffer_commit_overrun_cpu	vmlinux	EXPORT_SYMBOL_GPL
+0x3a536bd7	ring_buffer_read_finish	vmlinux	EXPORT_SYMBOL_GPL
+0x67f7403e	_raw_spin_lock	vmlinux	EXPORT_SYMBOL
+0xc3f2dd0a	oxygen_write_uart	sound/pci/oxygen/snd-oxygen-lib	EXPORT_SYMBOL
+0x5bd4cefd	dlm_print_one_lock	fs/ocfs2/dlm/ocfs2_dlm	EXPORT_SYMBOL_GPL
+0xd1b551a2	spk_get_var	drivers/staging/speakup/speakup	EXPORT_SYMBOL_GPL
+0x768516ad	cxgbi_iscsi_cleanup	drivers/scsi/cxgbi/libcxgbi	EXPORT_SYMBOL_GPL
+0xfdc73e45	unregister_candev	drivers/net/can/can-dev	EXPORT_SYMBOL_GPL
+0xa0fa1216	v4l2_fh_open	drivers/media/video/videodev	EXPORT_SYMBOL_GPL
+0x2110cd02	ip_queue_xmit	vmlinux	EXPORT_SYMBOL
+0x1a59f599	class_dev_iter_init	vmlinux	EXPORT_SYMBOL_GPL
+0xca2d4027	pci_get_slot	vmlinux	EXPORT_SYMBOL
+0x69a0ca7d	iowrite16be	vmlinux	EXPORT_SYMBOL
+0x6acb973d	iowrite32be	vmlinux	EXPORT_SYMBOL
+0x56886b19	scatterwalk_map	vmlinux	EXPORT_SYMBOL_GPL
+0x23532c4d	ftrace_print_flags_seq	vmlinux	EXPORT_SYMBOL
+0xf1f5eb20	register_nmi_handler	vmlinux	EXPORT_SYMBOL_GPL
+0x5f3a72f4	nf_ct_helper_expectfn_register	net/netfilter/nf_conntrack	EXPORT_SYMBOL_GPL
+0x9556caed	jbd2_journal_force_commit	fs/jbd2/jbd2	EXPORT_SYMBOL
+0xacd55985	_rtl92c_phy_bb8192c_config_parafile	drivers/net/wireless/rtlwifi/rtl8192c/rtl8192c-common	EXPORT_SYMBOL
+0x0f1ea530	mpt_resume	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0xa9d2fa79	videobuf_stop	drivers/media/video/videobuf-core	EXPORT_SYMBOL_GPL
+0xc436ecb7	ib_find_pkey	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x4126673e	alloc_dca_provider	drivers/dca/dca	EXPORT_SYMBOL_GPL
+0x62e4aa1f	km_query	vmlinux	EXPORT_SYMBOL
+0xd5fb5b1c	inet_release	vmlinux	EXPORT_SYMBOL
+0xa8effe33	blk_queue_start_tag	vmlinux	EXPORT_SYMBOL
+0xb30e6c26	xprt_alloc	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x804d2d02	log_start_commit	fs/jbd/jbd	EXPORT_SYMBOL
+0xc24f1b64	usb_stor_CB_transport	drivers/usb/storage/usb-storage	EXPORT_SYMBOL_GPL
+0x25e55b95	labpc_1200_is_unipolar	drivers/staging/comedi/drivers/ni_labpc	EXPORT_SYMBOL_GPL
+0xb63c9c89	il_restore_stations	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xa83588eb	dm_rh_recovery_end	drivers/md/dm-region-hash	EXPORT_SYMBOL_GPL
+0x9d1f522d	rdma_addr_cancel	drivers/infiniband/core/ib_addr	EXPORT_SYMBOL
+0x963002d1	drm_connector_init	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xbbb739ed	neigh_create	vmlinux	EXPORT_SYMBOL
+0x9fce80db	fb_notifier_call_chain	vmlinux	EXPORT_SYMBOL_GPL
+0x373db350	kstrtoint	vmlinux	EXPORT_SYMBOL
+0x473b064f	ieee802154_nl_start_confirm	net/ieee802154/ieee802154	EXPORT_SYMBOL
+0xc21ee24f	rt2x00pci_probe	drivers/net/wireless/rt2x00/rt2x00pci	EXPORT_SYMBOL_GPL
+0xa1a29548	mdio45_probe	drivers/net/mdio	EXPORT_SYMBOL
+0x06eaf517	sirdev_raw_write	drivers/net/irda/sir-dev	EXPORT_SYMBOL
+0x16b8e99a	i2o_driver_notify_controller_add_all	drivers/message/i2o/i2o_core	EXPORT_SYMBOL
+0xdd805159	ioc_list	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0x68c6dc1f	v4l2_device_put	drivers/media/video/videodev	EXPORT_SYMBOL_GPL
+0xa49fa53c	cx231xx_send_usb_command	drivers/media/video/cx231xx/cx231xx	EXPORT_SYMBOL_GPL
+0x530935c4	cpufreq_get_policy	vmlinux	EXPORT_SYMBOL
+0x9ff4d649	vga_switcheroo_client_fb_set	vmlinux	EXPORT_SYMBOL
+0x02a03aed	dquot_set_dqblk	vmlinux	EXPORT_SYMBOL
+0x5099d1d7	__tracepoint_rpm_return_int	vmlinux	EXPORT_SYMBOL_GPL
+0x8f6cee77	__round_jiffies_relative	vmlinux	EXPORT_SYMBOL_GPL
+0x5f2da8c4	check_tsc_unstable	vmlinux	EXPORT_SYMBOL_GPL
+0x14b687a5	snd_hda_get_conn_list	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x08778fc2	svc_pool_stats_open	net/sunrpc/sunrpc	EXPORT_SYMBOL
+0xe297b08c	target_splice_sess_cmd_list	drivers/target/target_core_mod	EXPORT_SYMBOL
+0x66bde4ee	comedi_dio_bitfield	drivers/staging/comedi/kcomedilib/kcomedilib	EXPORT_SYMBOL
+0x2719a7ce	ath_gen_timer_isr	drivers/net/wireless/ath/ath9k/ath9k_hw	EXPORT_SYMBOL
+0xaea47333	inet_frag_maybe_warn_overflow	vmlinux	EXPORT_SYMBOL
+0xe721fbf8	inet_twsk_alloc	vmlinux	EXPORT_SYMBOL_GPL
+0x238499f2	__serio_register_driver	vmlinux	EXPORT_SYMBOL
+0xb3828b78	tty_put_char	vmlinux	EXPORT_SYMBOL_GPL
+0x037a0cba	kfree	vmlinux	EXPORT_SYMBOL
+0x0702e636	__rt_mutex_init	vmlinux	EXPORT_SYMBOL_GPL
+0xf1e2993d	kill_pid_info_as_cred	vmlinux	EXPORT_SYMBOL_GPL
+0xb9638db4	snd_pcm_rate_to_rate_bit	sound/core/snd-pcm	EXPORT_SYMBOL
+0x5a725a6a	sas_target_alloc	drivers/scsi/libsas/libsas	EXPORT_SYMBOL_GPL
+0xf700a01c	ib_modify_device	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0xeb336ae0	vlan_dev_real_dev	vmlinux	EXPORT_SYMBOL
+0xd6320596	xfrm_state_delete	vmlinux	EXPORT_SYMBOL
+0x9bd424d5	nf_register_sockopt	vmlinux	EXPORT_SYMBOL
+0x815b9afd	sock_kmalloc	vmlinux	EXPORT_SYMBOL
+0xa04a0cb1	cgroup_load_subsys	vmlinux	EXPORT_SYMBOL_GPL
+0xb894926d	schedule_work_on	vmlinux	EXPORT_SYMBOL
+0x1f129ef7	snd_hda_set_vmaster_tlv	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x2e798544	snd_wss_mixer	sound/isa/wss/snd-wss-lib	EXPORT_SYMBOL
+0x89f4ca51	xprt_destroy_backchannel	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xb570e441	ceph_calc_file_object_mapping	net/ceph/libceph	EXPORT_SYMBOL
+0x445914ff	z8530_queue_xmit	drivers/net/wan/z85230	EXPORT_SYMBOL
+0xb73d1d7d	rndis_unbind	drivers/net/usb/rndis_host	EXPORT_SYMBOL_GPL
+0xff961ead	mlx4_buf_free	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x5cfdd22d	ubi_get_device_info	drivers/mtd/ubi/ubi	EXPORT_SYMBOL_GPL
+0x8dd52588	pci_lost_interrupt	vmlinux	EXPORT_SYMBOL
+0xe7d4daac	seq_list_next	vmlinux	EXPORT_SYMBOL
+0xc17ffd08	snd_hda_jack_report_sync	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x912b0bf2	target_fabric_configfs_init	drivers/target/target_core_mod	EXPORT_SYMBOL
+0xeddd4644	vb2_queue_release	drivers/media/video/videobuf2-core	EXPORT_SYMBOL_GPL
+0x42666cef	dib7000p_set_gpio	drivers/media/dvb/frontends/dib7000p	EXPORT_SYMBOL
+0x8a11e067	ttm_bo_evict_mm	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0x538383c0	unregister_inet6addr_notifier	vmlinux	EXPORT_SYMBOL
+0xa06df9e1	__kfifo_dma_out_finish_r	vmlinux	EXPORT_SYMBOL
+0x5a441ebd	efi_query_variable_store	vmlinux	EXPORT_SYMBOL_GPL
+0x474396d6	set_pages_array_wc	vmlinux	EXPORT_SYMBOL
+0xcd5962fe	set_pages_array_wb	vmlinux	EXPORT_SYMBOL
+0xd6aad284	cfg80211_rx_unexpected_4addr_frame	net/wireless/cfg80211	EXPORT_SYMBOL
+0x155464f0	vb2_vmalloc_memops	drivers/media/video/videobuf2-vmalloc	EXPORT_SYMBOL_GPL
+0x8832162b	ttm_base_object_init	drivers/gpu/drm/ttm/ttm	EXPORT_SYMBOL
+0xf7f3bc7e	ipv6_chk_addr	vmlinux	EXPORT_SYMBOL
+0xf67976b8	uart_suspend_port	vmlinux	EXPORT_SYMBOL
+0xdd1690a0	__blkdev_driver_ioctl	vmlinux	EXPORT_SYMBOL_GPL
+0xe39d10b5	blk_alloc_queue_node	vmlinux	EXPORT_SYMBOL
+0x9598d24d	dccp_ackvec_parsed_cleanup	net/dccp/dccp	EXPORT_SYMBOL_GPL
+0xc55de604	ceph_parse_options	net/ceph/libceph	EXPORT_SYMBOL
+0x4527e170	ore_calc_stripe_info	fs/exofs/libore	EXPORT_SYMBOL
+0x215ab4c8	scsi_device_resume	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x79f52af2	mtd_read_fact_prot_reg	drivers/mtd/mtd	EXPORT_SYMBOL_GPL
+0x686742d3	lis3lv02d_remove_fs	drivers/misc/lis3lv02d/lis3lv02d	EXPORT_SYMBOL_GPL
+0x0618671b	dib7000p_pid_filter	drivers/media/dvb/frontends/dib7000p	EXPORT_SYMBOL
+0x0a9f505c	dib7000m_pid_filter	drivers/media/dvb/frontends/dib7000m	EXPORT_SYMBOL
+0xc66ce277	dm_rh_get_region_size	drivers/md/dm-region-hash	EXPORT_SYMBOL_GPL
+0x297bd769	ata_bmdma_qc_issue	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0xa353fffc	xenbus_rm	vmlinux	EXPORT_SYMBOL_GPL
+0xe7722171	flex_array_free	vmlinux	EXPORT_SYMBOL
+0xa1b4354c	bsg_goose_queue	vmlinux	EXPORT_SYMBOL_GPL
+0xcd498012	blk_queue_flush	vmlinux	EXPORT_SYMBOL_GPL
+0x60b373b2	bio_phys_segments	vmlinux	EXPORT_SYMBOL
+0xdaa57ec3	totalhigh_pages	vmlinux	EXPORT_SYMBOL
+0x0ee08af8	snd_emux_register	sound/synth/emux/snd-emux-synth	EXPORT_SYMBOL
+0x6b2c8458	b1_register_appl	drivers/isdn/hardware/avm/b1	EXPORT_SYMBOL
+0xd0a7deeb	ib_dealloc_xrcd	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x5e8a5999	ipv6_find_tlv	vmlinux	EXPORT_SYMBOL_GPL
+0x606191a3	neigh_changeaddr	vmlinux	EXPORT_SYMBOL
+0x86ed6d9d	skb_recycle_check	vmlinux	EXPORT_SYMBOL
+0xc0347329	do_unregister_con_driver	vmlinux	EXPORT_SYMBOL_GPL
+0xa120d33c	tty_unregister_ldisc	vmlinux	EXPORT_SYMBOL
+0x0c1e0ff8	tty_standard_install	vmlinux	EXPORT_SYMBOL_GPL
+0x7dc5d0b6	crypto_unregister_notifier	vmlinux	EXPORT_SYMBOL_GPL
+0x75b2d269	invalidate_inode_pages2	vmlinux	EXPORT_SYMBOL_GPL
+0x72741f25	trace_vbprintk	vmlinux	EXPORT_SYMBOL_GPL
+0xef812e5e	_snd_ctl_add_slave	sound/core/snd	EXPORT_SYMBOL
+0xe934da1d	snd_seq_dump_var_event	sound/core/seq/snd-seq	EXPORT_SYMBOL
+0xdf82dba1	cfg80211_michael_mic_failure	net/wireless/cfg80211	EXPORT_SYMBOL
+0x24784e53	ipt_do_table	net/ipv4/netfilter/ip_tables	EXPORT_SYMBOL
+0x4cc49d62	ceph_copy_page_vector_to_user	net/ceph/libceph	EXPORT_SYMBOL
+0x0d0dd7d4	scsi_calculate_bounce_limit	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0x144d14d9	ib_create_ah	drivers/infiniband/core/ib_core	EXPORT_SYMBOL
+0x03945e18	led_classdev_register	vmlinux	EXPORT_SYMBOL_GPL
+0x5fadf217	pnp_possible_config	vmlinux	EXPORT_SYMBOL
+0x6a5e1c85	kmem_cache_destroy	vmlinux	EXPORT_SYMBOL
+0x157883cb	add_to_page_cache_locked	vmlinux	EXPORT_SYMBOL
+0x4e109192	ring_buffer_entries	vmlinux	EXPORT_SYMBOL_GPL
+0xf28ed6e2	machine_to_phys_nr	vmlinux	EXPORT_SYMBOL
+0x252ce758	snd_opl4_write_memory	sound/drivers/opl4/snd-opl4-lib	EXPORT_SYMBOL
+0xfd1f209f	xt_find_target	net/netfilter/x_tables	EXPORT_SYMBOL
+0x79222b47	nfs_request_remove_commit_list	fs/nfs/nfs	EXPORT_SYMBOL_GPL
+0x5f322977	usb_serial_disconnect	drivers/usb/serial/usbserial	EXPORT_SYMBOL_GPL
+0xfa5d6744	drm_mode_object_find	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xd7ab2c0c	speedstep_detect_processor	drivers/cpufreq/speedstep-lib	EXPORT_SYMBOL_GPL
+0x06a1b7bb	xfrm_prepare_input	vmlinux	EXPORT_SYMBOL
+0xa1ba2fdb	vfsmount_lock_global_lock	vmlinux	EXPORT_SYMBOL
+0xc1b2a8d9	snd_hda_sequence_write	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x739c3fea	rpc_proc_register	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x27508eaa	rpc_queue_empty	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x04390b8c	vring_new_virtqueue	drivers/virtio/virtio_ring	EXPORT_SYMBOL_GPL
+0x84b3d915	fcoe_wwn_to_str	drivers/scsi/fcoe/libfcoe	EXPORT_SYMBOL_GPL
+0x7de94697	phy_mii_ioctl	drivers/net/phy/libphy	EXPORT_SYMBOL
+0x1e843c3d	c2port_device_register	drivers/misc/c2port/core	EXPORT_SYMBOL
+0x67d71a44	vm_event_states	vmlinux	EXPORT_SYMBOL
+0x8d9a0145	__module_get	vmlinux	EXPORT_SYMBOL
+0x128a5cf9	complete_all	vmlinux	EXPORT_SYMBOL
+0x7c61340c	__release_region	vmlinux	EXPORT_SYMBOL
+0x809a4d6d	snd_hda_bind_sw	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x4375dc69	snd_emu10k1_ptr_write	sound/pci/emu10k1/snd-emu10k1	EXPORT_SYMBOL
+0x19447168	nfc_alloc_recv_skb	net/nfc/nfc	EXPORT_SYMBOL
+0x7dcfcd23	uwb_ie_next	drivers/uwb/uwb	EXPORT_SYMBOL_GPL
+0xe91e5a3e	il_init_channel_map	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0x5ed040b0	pm_set_vt_switch	vmlinux	EXPORT_SYMBOL
+0xdb40f6f5	tty_free_termios	vmlinux	EXPORT_SYMBOL
+0x347013de	nla_validate	vmlinux	EXPORT_SYMBOL
+0x67a66631	search_list_tpd	vmlinux	EXPORT_SYMBOL
+0x26b0a0c5	bdi_register	vmlinux	EXPORT_SYMBOL
+0x52e3e4a5	snd_pcm_hw_param_value	sound/core/snd-pcm	EXPORT_SYMBOL
+0xe2f7abc8	xprt_alloc_slot	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x72f892ac	fat_time_unix2fat	fs/fat/fat	EXPORT_SYMBOL_GPL
+0xcc190341	rdma_destroy_qp	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0xfa93954e	rdma_destroy_id	drivers/infiniband/core/rdma_cm	EXPORT_SYMBOL
+0x93ebca19	inet_csk_clear_xmit_timers	vmlinux	EXPORT_SYMBOL
+0xe10cd6ad	erst_get_record_id_begin	vmlinux	EXPORT_SYMBOL_GPL
+0x7129e5f8	hex_asc	vmlinux	EXPORT_SYMBOL
+0x52061c7b	nf_nat_follow_master	net/ipv4/netfilter/nf_nat	EXPORT_SYMBOL
+0xd898ec54	ocfs2_stack_glue_register	fs/ocfs2/ocfs2_stackglue	EXPORT_SYMBOL_GPL
+0x5b38424f	fuse_dev_release	fs/fuse/fuse	EXPORT_SYMBOL_GPL
+0x8fe29ac7	srp_rport_add	drivers/scsi/scsi_transport_srp	EXPORT_SYMBOL_GPL
+0x3246fd8b	fc_remote_port_rolechg	drivers/scsi/scsi_transport_fc	EXPORT_SYMBOL
+0x6024cc9e	fw_iso_buffer_init	drivers/firewire/firewire-core	EXPORT_SYMBOL
+0xf8f3a0fb	ata_ratelimit	drivers/ata/libata	EXPORT_SYMBOL_GPL
+0x0cf3f0c4	agp_free_memory	vmlinux	EXPORT_SYMBOL
+0xb7c0225e	agp_copy_info	vmlinux	EXPORT_SYMBOL
+0xe15d9f95	tty_get_pgrp	vmlinux	EXPORT_SYMBOL_GPL
+0x2aa0e4fc	strncasecmp	vmlinux	EXPORT_SYMBOL
+0x809d698d	default_llseek	vmlinux	EXPORT_SYMBOL
+0x5e0120a8	ring_buffer_oldest_event_ts	vmlinux	EXPORT_SYMBOL_GPL
+0xf67f7806	snd_jack_new	sound/core/snd	EXPORT_SYMBOL
+0x3061c52d	snd_use_lock_sync_helper	sound/core/seq/snd-seq	EXPORT_SYMBOL
+0xab40f797	svc_bind	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0xfd40c79d	p9_idpool_check	net/9p/9pnet	EXPORT_SYMBOL
+0x60de72ae	p9_client_symlink	net/9p/9pnet	EXPORT_SYMBOL
+0xef7d294a	comedi_buf_memcpy_to	drivers/staging/comedi/comedi	EXPORT_SYMBOL
+0xab3047b3	sdhci_pltfm_free	drivers/mmc/host/sdhci-pltfm	EXPORT_SYMBOL_GPL
+0x5e10ff41	dib8090p_get_dc_power	drivers/media/dvb/frontends/dib8000	EXPORT_SYMBOL
+0x16cbc114	cm_class	drivers/infiniband/core/ib_cm	EXPORT_SYMBOL
+0x6ef84cad	kvm_mmu_load	arch/x86/kvm/kvm	EXPORT_SYMBOL_GPL
+0xb4b3ece3	tcp_read_sock	vmlinux	EXPORT_SYMBOL
+0x49a3a3a0	lib80211_crypt_delayed_deinit	net/wireless/lib80211	EXPORT_SYMBOL
+0xd7010042	rpc_peeraddr	net/sunrpc/sunrpc	EXPORT_SYMBOL_GPL
+0x292da7a2	viafb_irq_enable	drivers/video/via/viafb	EXPORT_SYMBOL_GPL
+0x6bfbf822	scsi_eh_prep_cmnd	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xee88b4c0	il_clear_ucode_stations	drivers/net/wireless/iwlegacy/iwlegacy	EXPORT_SYMBOL
+0xc3a0a1ea	sirdev_get_instance	drivers/net/irda/sir-dev	EXPORT_SYMBOL
+0x4bf73463	sirdev_put_instance	drivers/net/irda/sir-dev	EXPORT_SYMBOL
+0x508f7c2b	md_trim_bio	drivers/md/md-mod	EXPORT_SYMBOL_GPL
+0x6e0da5b4	rdev_clear_badblocks	drivers/md/md-mod	EXPORT_SYMBOL_GPL
+0x7a4853bc	tpm_dev_vendor_release	drivers/char/tpm/tpm	EXPORT_SYMBOL_GPL
+0xa36f5c09	ip_fragment	vmlinux	EXPORT_SYMBOL
+0x1f18cc61	cpuidle_register_driver	vmlinux	EXPORT_SYMBOL_GPL
+0xc001ff60	xenbus_dev_changed	vmlinux	EXPORT_SYMBOL_GPL
+0x03abd5d5	pci_set_cacheline_size	vmlinux	EXPORT_SYMBOL_GPL
+0x815b5dd4	match_octal	vmlinux	EXPORT_SYMBOL
+0x67c94ed0	bio_map_kern	vmlinux	EXPORT_SYMBOL
+0x92897e3d	default_idle	vmlinux	EXPORT_SYMBOL
+0xc1fcb7d7	snd_gus_create	sound/isa/gus/snd-gus-lib	EXPORT_SYMBOL
+0x14b89f09	xt_register_targets	net/netfilter/x_tables	EXPORT_SYMBOL
+0x27000b29	crc32c	lib/libcrc32c	EXPORT_SYMBOL
+0xf161a4ea	unregister_virtio_driver	drivers/virtio/virtio	EXPORT_SYMBOL_GPL
+0x0916398a	scsi_register_driver	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xfc0dbf3d	wm9712_codec	drivers/input/touchscreen/wm97xx-ts	EXPORT_SYMBOL_GPL
+0x184d7c42	i2c_smbus_write_byte	drivers/i2c/i2c-core	EXPORT_SYMBOL
+0x92b804cc	vfs_fsync	vmlinux	EXPORT_SYMBOL
+0x75db0561	poll_freewait	vmlinux	EXPORT_SYMBOL
+0x40c7247c	si_meminfo	vmlinux	EXPORT_SYMBOL
+0xa8d12f74	kthread_create_on_node	vmlinux	EXPORT_SYMBOL
+0x9e64fbfe	rtc_cmos_read	vmlinux	EXPORT_SYMBOL
+0xb30d0e5e	snd_timer_pause	sound/core/snd-timer	EXPORT_SYMBOL
+0xbdd94e71	ni_gpct_device_destroy	drivers/staging/comedi/drivers/ni_tio	EXPORT_SYMBOL_GPL
+0x635f8a0b	dib8000_attach	drivers/media/dvb/frontends/dib8000	EXPORT_SYMBOL
+0x5b6c00e6	xor_blocks	crypto/xor	EXPORT_SYMBOL
+0x5e95b1cd	current_umask	vmlinux	EXPORT_SYMBOL
+0x8d7ccdd8	get_fs_type	vmlinux	EXPORT_SYMBOL
+0xad96ff52	ref_module	vmlinux	EXPORT_SYMBOL_GPL
+0xb40abe2d	snd_trident_free_voice	sound/pci/trident/snd-trident	EXPORT_SYMBOL
+0xf226be5f	snd_hda_jack_detect_enable	sound/pci/hda/snd-hda-codec	EXPORT_SYMBOL_GPL
+0x1151b2ae	nf_nat_pptp_hook_outbound	net/netfilter/nf_conntrack_pptp	EXPORT_SYMBOL_GPL
+0xa44193e6	ieee80211_iterate_active_interfaces	net/mac80211/mac80211	EXPORT_SYMBOL_GPL
+0x5cd66b10	qlogicfas408_disable_ints	drivers/scsi/qlogicfas408	EXPORT_SYMBOL
+0xef0f9827	macvlan_start_xmit	drivers/net/macvlan	EXPORT_SYMBOL_GPL
+0x226af9b6	mlx4_alloc_hwq_res	drivers/net/ethernet/mellanox/mlx4/mlx4_core	EXPORT_SYMBOL_GPL
+0x6ae32f62	free_candev	drivers/net/can/can-dev	EXPORT_SYMBOL_GPL
+0x3ac1fef9	drm_mode_legacy_fb_format	drivers/gpu/drm/drm	EXPORT_SYMBOL
+0xa24c1c76	tty_driver_kref_put	vmlinux	EXPORT_SYMBOL
+0x24fc46b6	regulator_bulk_free	vmlinux	EXPORT_SYMBOL_GPL
+0x6c389761	acpi_bus_get_private_data	vmlinux	EXPORT_SYMBOL
+0xc09ef250	dquot_acquire	vmlinux	EXPORT_SYMBOL
+0x59ef49b0	usb_wakeup_notification	drivers/usb/core/usbcore	EXPORT_SYMBOL_GPL
+0xa8568123	scsi_host_set_state	drivers/scsi/scsi_mod	EXPORT_SYMBOL
+0xbc6c3c67	fc_exch_recv	drivers/scsi/libfc/libfc	EXPORT_SYMBOL
+0x35b58b2f	mpt_send_handshake_request	drivers/message/fusion/mptbase	EXPORT_SYMBOL
+0xfa83b5e9	sock_prot_inuse_get	vmlinux	EXPORT_SYMBOL_GPL
+0x43be94e7	aead_geniv_init	vmlinux	EXPORT_SYMBOL_GPL
+0x0183a1b5	dquot_quotactl_ops	vmlinux	EXPORT_SYMBOL
+0xdd0868d8	generic_write_end	vmlinux	EXPORT_SYMBOL
+0x362e23ec	call_rcu_bh	vmlinux	EXPORT_SYMBOL_GPL
+0x6d0eff41	devm_request_threaded_irq	vmlinux	EXPORT_SYMBOL
+0x67955ce6	profile_hits	vmlinux	EXPORT_SYMBOL_GPL
+0xcd083b10	unregister_sound_dsp	sound/soundcore	EXPORT_SYMBOL
+0xfaf1c2a0	nat_t120_hook	net/netfilter/nf_conntrack_h323	EXPORT_SYMBOL_GPL
+0xf779b5fd	journal_check_used_features	fs/jbd/jbd	EXPORT_SYMBOL
+0xe7cd4558	spk_serial_release	drivers/staging/speakup/speakup	EXPORT_SYMBOL_GPL
+0x4adf2ffe	genphy_config_aneg	drivers/net/phy/libphy	EXPORT_SYMBOL
+0xa56b101a	__vlan_find_dev_deep	vmlinux	EXPORT_SYMBOL
+0x8872a62f	blk_start_queue	vmlinux	EXPORT_SYMBOL
+0x1690e26d	bio_copy_user	vmlinux	EXPORT_SYMBOL
+0x7a4497db	kzfree	vmlinux	EXPORT_SYMBOL
+0xb4c3feb5	alloc_irdadev	net/irda/irda	EXPORT_SYMBOL
+0x832cd83d	arpt_unregister_table	net/ipv4/netfilter/arp_tables	EXPORT_SYMBOL
+0xaaa83b0a	inet_sk_diag_fill	net/ipv4/inet_diag	EXPORT_SYMBOL_GPL
+0x951e82b1	hci_send_acl	net/bluetooth/bluetooth	EXPORT_SYMBOL
+0xd4e288db	rc_map_af9005_table_size	drivers/media/dvb/dvb-usb/dvb-usb-af9005-remote	EXPORT_SYMBOL
+0xed5af123	sk_filter	vmlinux	EXPORT_SYMBOL
+0xa8f59416	gpio_direction_output	vmlinux	EXPORT_SYMBOL_GPL
+0xb520da62	generic_removexattr	vmlinux	EXPORT_SYMBOL
+0xecd92dbb	deactivate_super	vmlinux	EXPORT_SYMBOL
+0xbab9d4ac	vmap	vmlinux	EXPORT_SYMBOL
+0x31f0bb78	__kmap_atomic_idx	vmlinux	EXPORT_SYMBOL
diff -uprN ../linux-3.4.104-vanilla/arch/x86/include/asm/pgtable.h linux-3.4.104-syssec_hw2_app2/arch/x86/include/asm/pgtable.h
--- ../linux-3.4.104-vanilla/arch/x86/include/asm/pgtable.h	2014-09-24 23:49:19.000000000 -0400
+++ linux-3.4.104-syssec_hw2_app2/arch/x86/include/asm/pgtable.h	2014-11-09 05:15:00.000000000 -0500
@@ -87,6 +87,7 @@ extern struct mm_struct *pgd_page_get_mm
  * The following only work if pte_present() is true.
  * Undefined behaviour if not..
  */
+
 static inline int pte_dirty(pte_t pte)
 {
 	return pte_flags(pte) & _PAGE_DIRTY;
diff -uprN ../linux-3.4.104-vanilla/arch/x86/include/generated/asm/syscalls_32.h linux-3.4.104-syssec_hw2_app2/arch/x86/include/generated/asm/syscalls_32.h
--- ../linux-3.4.104-vanilla/arch/x86/include/generated/asm/syscalls_32.h	1969-12-31 19:00:00.000000000 -0500
+++ linux-3.4.104-syssec_hw2_app2/arch/x86/include/generated/asm/syscalls_32.h	2014-11-05 21:52:53.000000000 -0500
@@ -0,0 +1,328 @@
+__SYSCALL_I386(0, sys_restart_syscall, sys_restart_syscall)
+__SYSCALL_I386(1, sys_exit, sys_exit)
+__SYSCALL_I386(2, ptregs_fork, stub32_fork)
+__SYSCALL_I386(3, sys_read, sys_read)
+__SYSCALL_I386(4, sys_write, sys_write)
+__SYSCALL_I386(5, sys_open, compat_sys_open)
+__SYSCALL_I386(6, sys_close, sys_close)
+__SYSCALL_I386(7, sys_waitpid, sys32_waitpid)
+__SYSCALL_I386(8, sys_creat, sys_creat)
+__SYSCALL_I386(9, sys_link, sys_link)
+__SYSCALL_I386(10, sys_unlink, sys_unlink)
+__SYSCALL_I386(11, ptregs_execve, stub32_execve)
+__SYSCALL_I386(12, sys_chdir, sys_chdir)
+__SYSCALL_I386(13, sys_time, compat_sys_time)
+__SYSCALL_I386(14, sys_mknod, sys_mknod)
+__SYSCALL_I386(15, sys_chmod, sys_chmod)
+__SYSCALL_I386(16, sys_lchown16, sys_lchown16)
+__SYSCALL_I386(18, sys_stat, sys_stat)
+__SYSCALL_I386(19, sys_lseek, sys32_lseek)
+__SYSCALL_I386(20, sys_getpid, sys_getpid)
+__SYSCALL_I386(21, sys_mount, compat_sys_mount)
+__SYSCALL_I386(22, sys_oldumount, sys_oldumount)
+__SYSCALL_I386(23, sys_setuid16, sys_setuid16)
+__SYSCALL_I386(24, sys_getuid16, sys_getuid16)
+__SYSCALL_I386(25, sys_stime, compat_sys_stime)
+__SYSCALL_I386(26, sys_ptrace, compat_sys_ptrace)
+__SYSCALL_I386(27, sys_alarm, sys_alarm)
+__SYSCALL_I386(28, sys_fstat, sys_fstat)
+__SYSCALL_I386(29, sys_pause, sys_pause)
+__SYSCALL_I386(30, sys_utime, compat_sys_utime)
+__SYSCALL_I386(33, sys_access, sys_access)
+__SYSCALL_I386(34, sys_nice, sys_nice)
+__SYSCALL_I386(36, sys_sync, sys_sync)
+__SYSCALL_I386(37, sys_kill, sys32_kill)
+__SYSCALL_I386(38, sys_rename, sys_rename)
+__SYSCALL_I386(39, sys_mkdir, sys_mkdir)
+__SYSCALL_I386(40, sys_rmdir, sys_rmdir)
+__SYSCALL_I386(41, sys_dup, sys_dup)
+__SYSCALL_I386(42, sys_pipe, sys_pipe)
+__SYSCALL_I386(43, sys_times, compat_sys_times)
+__SYSCALL_I386(45, sys_brk, sys_brk)
+__SYSCALL_I386(46, sys_setgid16, sys_setgid16)
+__SYSCALL_I386(47, sys_getgid16, sys_getgid16)
+__SYSCALL_I386(48, sys_signal, sys_signal)
+__SYSCALL_I386(49, sys_geteuid16, sys_geteuid16)
+__SYSCALL_I386(50, sys_getegid16, sys_getegid16)
+__SYSCALL_I386(51, sys_acct, sys_acct)
+__SYSCALL_I386(52, sys_umount, sys_umount)
+__SYSCALL_I386(54, sys_ioctl, compat_sys_ioctl)
+__SYSCALL_I386(55, sys_fcntl, compat_sys_fcntl64)
+__SYSCALL_I386(57, sys_setpgid, sys_setpgid)
+__SYSCALL_I386(59, sys_olduname, sys_olduname)
+__SYSCALL_I386(60, sys_umask, sys_umask)
+__SYSCALL_I386(61, sys_chroot, sys_chroot)
+__SYSCALL_I386(62, sys_ustat, compat_sys_ustat)
+__SYSCALL_I386(63, sys_dup2, sys_dup2)
+__SYSCALL_I386(64, sys_getppid, sys_getppid)
+__SYSCALL_I386(65, sys_getpgrp, sys_getpgrp)
+__SYSCALL_I386(66, sys_setsid, sys_setsid)
+__SYSCALL_I386(67, sys_sigaction, sys32_sigaction)
+__SYSCALL_I386(68, sys_sgetmask, sys_sgetmask)
+__SYSCALL_I386(69, sys_ssetmask, sys_ssetmask)
+__SYSCALL_I386(70, sys_setreuid16, sys_setreuid16)
+__SYSCALL_I386(71, sys_setregid16, sys_setregid16)
+__SYSCALL_I386(72, sys_sigsuspend, sys32_sigsuspend)
+__SYSCALL_I386(73, sys_sigpending, compat_sys_sigpending)
+__SYSCALL_I386(74, sys_sethostname, sys_sethostname)
+__SYSCALL_I386(75, sys_setrlimit, compat_sys_setrlimit)
+__SYSCALL_I386(76, sys_old_getrlimit, compat_sys_old_getrlimit)
+__SYSCALL_I386(77, sys_getrusage, compat_sys_getrusage)
+__SYSCALL_I386(78, sys_gettimeofday, compat_sys_gettimeofday)
+__SYSCALL_I386(79, sys_settimeofday, compat_sys_settimeofday)
+__SYSCALL_I386(80, sys_getgroups16, sys_getgroups16)
+__SYSCALL_I386(81, sys_setgroups16, sys_setgroups16)
+__SYSCALL_I386(82, sys_old_select, compat_sys_old_select)
+__SYSCALL_I386(83, sys_symlink, sys_symlink)
+__SYSCALL_I386(84, sys_lstat, sys_lstat)
+__SYSCALL_I386(85, sys_readlink, sys_readlink)
+__SYSCALL_I386(86, sys_uselib, sys_uselib)
+__SYSCALL_I386(87, sys_swapon, sys_swapon)
+__SYSCALL_I386(88, sys_reboot, sys_reboot)
+__SYSCALL_I386(89, sys_old_readdir, compat_sys_old_readdir)
+__SYSCALL_I386(90, sys_old_mmap, sys32_mmap)
+__SYSCALL_I386(91, sys_munmap, sys_munmap)
+__SYSCALL_I386(92, sys_truncate, sys_truncate)
+__SYSCALL_I386(93, sys_ftruncate, sys_ftruncate)
+__SYSCALL_I386(94, sys_fchmod, sys_fchmod)
+__SYSCALL_I386(95, sys_fchown16, sys_fchown16)
+__SYSCALL_I386(96, sys_getpriority, sys_getpriority)
+__SYSCALL_I386(97, sys_setpriority, sys_setpriority)
+__SYSCALL_I386(99, sys_statfs, compat_sys_statfs)
+__SYSCALL_I386(100, sys_fstatfs, compat_sys_fstatfs)
+__SYSCALL_I386(101, sys_ioperm, sys_ioperm)
+__SYSCALL_I386(102, sys_socketcall, compat_sys_socketcall)
+__SYSCALL_I386(103, sys_syslog, sys_syslog)
+__SYSCALL_I386(104, sys_setitimer, compat_sys_setitimer)
+__SYSCALL_I386(105, sys_getitimer, compat_sys_getitimer)
+__SYSCALL_I386(106, sys_newstat, compat_sys_newstat)
+__SYSCALL_I386(107, sys_newlstat, compat_sys_newlstat)
+__SYSCALL_I386(108, sys_newfstat, compat_sys_newfstat)
+__SYSCALL_I386(109, sys_uname, sys_uname)
+__SYSCALL_I386(110, ptregs_iopl, stub32_iopl)
+__SYSCALL_I386(111, sys_vhangup, sys_vhangup)
+__SYSCALL_I386(113, ptregs_vm86old, sys32_vm86_warning)
+__SYSCALL_I386(114, sys_wait4, compat_sys_wait4)
+__SYSCALL_I386(115, sys_swapoff, sys_swapoff)
+__SYSCALL_I386(116, sys_sysinfo, compat_sys_sysinfo)
+__SYSCALL_I386(117, sys_ipc, sys32_ipc)
+__SYSCALL_I386(118, sys_fsync, sys_fsync)
+__SYSCALL_I386(119, ptregs_sigreturn, stub32_sigreturn)
+__SYSCALL_I386(120, ptregs_clone, stub32_clone)
+__SYSCALL_I386(121, sys_setdomainname, sys_setdomainname)
+__SYSCALL_I386(122, sys_newuname, sys_newuname)
+__SYSCALL_I386(123, sys_modify_ldt, sys_modify_ldt)
+__SYSCALL_I386(124, sys_adjtimex, compat_sys_adjtimex)
+__SYSCALL_I386(125, sys_mprotect, sys32_mprotect)
+__SYSCALL_I386(126, sys_sigprocmask, compat_sys_sigprocmask)
+__SYSCALL_I386(128, sys_init_module, sys_init_module)
+__SYSCALL_I386(129, sys_delete_module, sys_delete_module)
+__SYSCALL_I386(131, sys_quotactl, sys32_quotactl)
+__SYSCALL_I386(132, sys_getpgid, sys_getpgid)
+__SYSCALL_I386(133, sys_fchdir, sys_fchdir)
+__SYSCALL_I386(134, sys_bdflush, sys_bdflush)
+__SYSCALL_I386(135, sys_sysfs, sys_sysfs)
+__SYSCALL_I386(136, sys_personality, sys_personality)
+__SYSCALL_I386(138, sys_setfsuid16, sys_setfsuid16)
+__SYSCALL_I386(139, sys_setfsgid16, sys_setfsgid16)
+__SYSCALL_I386(140, sys_llseek, sys_llseek)
+__SYSCALL_I386(141, sys_getdents, compat_sys_getdents)
+__SYSCALL_I386(142, sys_select, compat_sys_select)
+__SYSCALL_I386(143, sys_flock, sys_flock)
+__SYSCALL_I386(144, sys_msync, sys_msync)
+__SYSCALL_I386(145, sys_readv, compat_sys_readv)
+__SYSCALL_I386(146, sys_writev, compat_sys_writev)
+__SYSCALL_I386(147, sys_getsid, sys_getsid)
+__SYSCALL_I386(148, sys_fdatasync, sys_fdatasync)
+__SYSCALL_I386(149, sys_sysctl, compat_sys_sysctl)
+__SYSCALL_I386(150, sys_mlock, sys_mlock)
+__SYSCALL_I386(151, sys_munlock, sys_munlock)
+__SYSCALL_I386(152, sys_mlockall, sys_mlockall)
+__SYSCALL_I386(153, sys_munlockall, sys_munlockall)
+__SYSCALL_I386(154, sys_sched_setparam, sys_sched_setparam)
+__SYSCALL_I386(155, sys_sched_getparam, sys_sched_getparam)
+__SYSCALL_I386(156, sys_sched_setscheduler, sys_sched_setscheduler)
+__SYSCALL_I386(157, sys_sched_getscheduler, sys_sched_getscheduler)
+__SYSCALL_I386(158, sys_sched_yield, sys_sched_yield)
+__SYSCALL_I386(159, sys_sched_get_priority_max, sys_sched_get_priority_max)
+__SYSCALL_I386(160, sys_sched_get_priority_min, sys_sched_get_priority_min)
+__SYSCALL_I386(161, sys_sched_rr_get_interval, sys32_sched_rr_get_interval)
+__SYSCALL_I386(162, sys_nanosleep, compat_sys_nanosleep)
+__SYSCALL_I386(163, sys_mremap, sys_mremap)
+__SYSCALL_I386(164, sys_setresuid16, sys_setresuid16)
+__SYSCALL_I386(165, sys_getresuid16, sys_getresuid16)
+__SYSCALL_I386(166, ptregs_vm86, sys32_vm86_warning)
+__SYSCALL_I386(168, sys_poll, sys_poll)
+__SYSCALL_I386(170, sys_setresgid16, sys_setresgid16)
+__SYSCALL_I386(171, sys_getresgid16, sys_getresgid16)
+__SYSCALL_I386(172, sys_prctl, sys_prctl)
+__SYSCALL_I386(173, ptregs_rt_sigreturn, stub32_rt_sigreturn)
+__SYSCALL_I386(174, sys_rt_sigaction, sys32_rt_sigaction)
+__SYSCALL_I386(175, sys_rt_sigprocmask, sys_rt_sigprocmask)
+__SYSCALL_I386(176, sys_rt_sigpending, sys32_rt_sigpending)
+__SYSCALL_I386(177, sys_rt_sigtimedwait, compat_sys_rt_sigtimedwait)
+__SYSCALL_I386(178, sys_rt_sigqueueinfo, sys32_rt_sigqueueinfo)
+__SYSCALL_I386(179, sys_rt_sigsuspend, sys_rt_sigsuspend)
+__SYSCALL_I386(180, sys_pread64, sys32_pread)
+__SYSCALL_I386(181, sys_pwrite64, sys32_pwrite)
+__SYSCALL_I386(182, sys_chown16, sys_chown16)
+__SYSCALL_I386(183, sys_getcwd, sys_getcwd)
+__SYSCALL_I386(184, sys_capget, sys_capget)
+__SYSCALL_I386(185, sys_capset, sys_capset)
+__SYSCALL_I386(186, ptregs_sigaltstack, stub32_sigaltstack)
+__SYSCALL_I386(187, sys_sendfile, sys32_sendfile)
+__SYSCALL_I386(190, ptregs_vfork, stub32_vfork)
+__SYSCALL_I386(191, sys_getrlimit, compat_sys_getrlimit)
+__SYSCALL_I386(192, sys_mmap_pgoff, sys_mmap_pgoff)
+__SYSCALL_I386(193, sys_truncate64, sys32_truncate64)
+__SYSCALL_I386(194, sys_ftruncate64, sys32_ftruncate64)
+__SYSCALL_I386(195, sys_stat64, sys32_stat64)
+__SYSCALL_I386(196, sys_lstat64, sys32_lstat64)
+__SYSCALL_I386(197, sys_fstat64, sys32_fstat64)
+__SYSCALL_I386(198, sys_lchown, sys_lchown)
+__SYSCALL_I386(199, sys_getuid, sys_getuid)
+__SYSCALL_I386(200, sys_getgid, sys_getgid)
+__SYSCALL_I386(201, sys_geteuid, sys_geteuid)
+__SYSCALL_I386(202, sys_getegid, sys_getegid)
+__SYSCALL_I386(203, sys_setreuid, sys_setreuid)
+__SYSCALL_I386(204, sys_setregid, sys_setregid)
+__SYSCALL_I386(205, sys_getgroups, sys_getgroups)
+__SYSCALL_I386(206, sys_setgroups, sys_setgroups)
+__SYSCALL_I386(207, sys_fchown, sys_fchown)
+__SYSCALL_I386(208, sys_setresuid, sys_setresuid)
+__SYSCALL_I386(209, sys_getresuid, sys_getresuid)
+__SYSCALL_I386(210, sys_setresgid, sys_setresgid)
+__SYSCALL_I386(211, sys_getresgid, sys_getresgid)
+__SYSCALL_I386(212, sys_chown, sys_chown)
+__SYSCALL_I386(213, sys_setuid, sys_setuid)
+__SYSCALL_I386(214, sys_setgid, sys_setgid)
+__SYSCALL_I386(215, sys_setfsuid, sys_setfsuid)
+__SYSCALL_I386(216, sys_setfsgid, sys_setfsgid)
+__SYSCALL_I386(217, sys_pivot_root, sys_pivot_root)
+__SYSCALL_I386(218, sys_mincore, sys_mincore)
+__SYSCALL_I386(219, sys_madvise, sys_madvise)
+__SYSCALL_I386(220, sys_getdents64, compat_sys_getdents64)
+__SYSCALL_I386(221, sys_fcntl64, compat_sys_fcntl64)
+__SYSCALL_I386(224, sys_gettid, sys_gettid)
+__SYSCALL_I386(225, sys_readahead, sys32_readahead)
+__SYSCALL_I386(226, sys_setxattr, sys_setxattr)
+__SYSCALL_I386(227, sys_lsetxattr, sys_lsetxattr)
+__SYSCALL_I386(228, sys_fsetxattr, sys_fsetxattr)
+__SYSCALL_I386(229, sys_getxattr, sys_getxattr)
+__SYSCALL_I386(230, sys_lgetxattr, sys_lgetxattr)
+__SYSCALL_I386(231, sys_fgetxattr, sys_fgetxattr)
+__SYSCALL_I386(232, sys_listxattr, sys_listxattr)
+__SYSCALL_I386(233, sys_llistxattr, sys_llistxattr)
+__SYSCALL_I386(234, sys_flistxattr, sys_flistxattr)
+__SYSCALL_I386(235, sys_removexattr, sys_removexattr)
+__SYSCALL_I386(236, sys_lremovexattr, sys_lremovexattr)
+__SYSCALL_I386(237, sys_fremovexattr, sys_fremovexattr)
+__SYSCALL_I386(238, sys_tkill, sys_tkill)
+__SYSCALL_I386(239, sys_sendfile64, sys_sendfile64)
+__SYSCALL_I386(240, sys_futex, compat_sys_futex)
+__SYSCALL_I386(241, sys_sched_setaffinity, compat_sys_sched_setaffinity)
+__SYSCALL_I386(242, sys_sched_getaffinity, compat_sys_sched_getaffinity)
+__SYSCALL_I386(243, sys_set_thread_area, sys_set_thread_area)
+__SYSCALL_I386(244, sys_get_thread_area, sys_get_thread_area)
+__SYSCALL_I386(245, sys_io_setup, compat_sys_io_setup)
+__SYSCALL_I386(246, sys_io_destroy, sys_io_destroy)
+__SYSCALL_I386(247, sys_io_getevents, compat_sys_io_getevents)
+__SYSCALL_I386(248, sys_io_submit, compat_sys_io_submit)
+__SYSCALL_I386(249, sys_io_cancel, sys_io_cancel)
+__SYSCALL_I386(250, sys_fadvise64, sys32_fadvise64)
+__SYSCALL_I386(252, sys_exit_group, sys_exit_group)
+__SYSCALL_I386(253, sys_lookup_dcookie, sys32_lookup_dcookie)
+__SYSCALL_I386(254, sys_epoll_create, sys_epoll_create)
+__SYSCALL_I386(255, sys_epoll_ctl, sys_epoll_ctl)
+__SYSCALL_I386(256, sys_epoll_wait, sys_epoll_wait)
+__SYSCALL_I386(257, sys_remap_file_pages, sys_remap_file_pages)
+__SYSCALL_I386(258, sys_set_tid_address, sys_set_tid_address)
+__SYSCALL_I386(259, sys_timer_create, compat_sys_timer_create)
+__SYSCALL_I386(260, sys_timer_settime, compat_sys_timer_settime)
+__SYSCALL_I386(261, sys_timer_gettime, compat_sys_timer_gettime)
+__SYSCALL_I386(262, sys_timer_getoverrun, sys_timer_getoverrun)
+__SYSCALL_I386(263, sys_timer_delete, sys_timer_delete)
+__SYSCALL_I386(264, sys_clock_settime, compat_sys_clock_settime)
+__SYSCALL_I386(265, sys_clock_gettime, compat_sys_clock_gettime)
+__SYSCALL_I386(266, sys_clock_getres, compat_sys_clock_getres)
+__SYSCALL_I386(267, sys_clock_nanosleep, compat_sys_clock_nanosleep)
+__SYSCALL_I386(268, sys_statfs64, compat_sys_statfs64)
+__SYSCALL_I386(269, sys_fstatfs64, compat_sys_fstatfs64)
+__SYSCALL_I386(270, sys_tgkill, sys_tgkill)
+__SYSCALL_I386(271, sys_utimes, compat_sys_utimes)
+__SYSCALL_I386(272, sys_fadvise64_64, sys32_fadvise64_64)
+__SYSCALL_I386(274, sys_mbind, sys_mbind)
+__SYSCALL_I386(275, sys_get_mempolicy, compat_sys_get_mempolicy)
+__SYSCALL_I386(276, sys_set_mempolicy, sys_set_mempolicy)
+__SYSCALL_I386(277, sys_mq_open, compat_sys_mq_open)
+__SYSCALL_I386(278, sys_mq_unlink, sys_mq_unlink)
+__SYSCALL_I386(279, sys_mq_timedsend, compat_sys_mq_timedsend)
+__SYSCALL_I386(280, sys_mq_timedreceive, compat_sys_mq_timedreceive)
+__SYSCALL_I386(281, sys_mq_notify, compat_sys_mq_notify)
+__SYSCALL_I386(282, sys_mq_getsetattr, compat_sys_mq_getsetattr)
+__SYSCALL_I386(283, sys_kexec_load, compat_sys_kexec_load)
+__SYSCALL_I386(284, sys_waitid, compat_sys_waitid)
+__SYSCALL_I386(286, sys_add_key, sys_add_key)
+__SYSCALL_I386(287, sys_request_key, sys_request_key)
+__SYSCALL_I386(288, sys_keyctl, sys_keyctl)
+__SYSCALL_I386(289, sys_ioprio_set, sys_ioprio_set)
+__SYSCALL_I386(290, sys_ioprio_get, sys_ioprio_get)
+__SYSCALL_I386(291, sys_inotify_init, sys_inotify_init)
+__SYSCALL_I386(292, sys_inotify_add_watch, sys_inotify_add_watch)
+__SYSCALL_I386(293, sys_inotify_rm_watch, sys_inotify_rm_watch)
+__SYSCALL_I386(294, sys_migrate_pages, sys_migrate_pages)
+__SYSCALL_I386(295, sys_openat, compat_sys_openat)
+__SYSCALL_I386(296, sys_mkdirat, sys_mkdirat)
+__SYSCALL_I386(297, sys_mknodat, sys_mknodat)
+__SYSCALL_I386(298, sys_fchownat, sys_fchownat)
+__SYSCALL_I386(299, sys_futimesat, compat_sys_futimesat)
+__SYSCALL_I386(300, sys_fstatat64, sys32_fstatat)
+__SYSCALL_I386(301, sys_unlinkat, sys_unlinkat)
+__SYSCALL_I386(302, sys_renameat, sys_renameat)
+__SYSCALL_I386(303, sys_linkat, sys_linkat)
+__SYSCALL_I386(304, sys_symlinkat, sys_symlinkat)
+__SYSCALL_I386(305, sys_readlinkat, sys_readlinkat)
+__SYSCALL_I386(306, sys_fchmodat, sys_fchmodat)
+__SYSCALL_I386(307, sys_faccessat, sys_faccessat)
+__SYSCALL_I386(308, sys_pselect6, compat_sys_pselect6)
+__SYSCALL_I386(309, sys_ppoll, compat_sys_ppoll)
+__SYSCALL_I386(310, sys_unshare, sys_unshare)
+__SYSCALL_I386(311, sys_set_robust_list, compat_sys_set_robust_list)
+__SYSCALL_I386(312, sys_get_robust_list, compat_sys_get_robust_list)
+__SYSCALL_I386(313, sys_splice, sys_splice)
+__SYSCALL_I386(314, sys_sync_file_range, sys32_sync_file_range)
+__SYSCALL_I386(315, sys_tee, sys_tee)
+__SYSCALL_I386(316, sys_vmsplice, compat_sys_vmsplice)
+__SYSCALL_I386(317, sys_move_pages, compat_sys_move_pages)
+__SYSCALL_I386(318, sys_getcpu, sys_getcpu)
+__SYSCALL_I386(319, sys_epoll_pwait, sys_epoll_pwait)
+__SYSCALL_I386(320, sys_utimensat, compat_sys_utimensat)
+__SYSCALL_I386(321, sys_signalfd, compat_sys_signalfd)
+__SYSCALL_I386(322, sys_timerfd_create, sys_timerfd_create)
+__SYSCALL_I386(323, sys_eventfd, sys_eventfd)
+__SYSCALL_I386(324, sys_fallocate, sys32_fallocate)
+__SYSCALL_I386(325, sys_timerfd_settime, compat_sys_timerfd_settime)
+__SYSCALL_I386(326, sys_timerfd_gettime, compat_sys_timerfd_gettime)
+__SYSCALL_I386(327, sys_signalfd4, compat_sys_signalfd4)
+__SYSCALL_I386(328, sys_eventfd2, sys_eventfd2)
+__SYSCALL_I386(329, sys_epoll_create1, sys_epoll_create1)
+__SYSCALL_I386(330, sys_dup3, sys_dup3)
+__SYSCALL_I386(331, sys_pipe2, sys_pipe2)
+__SYSCALL_I386(332, sys_inotify_init1, sys_inotify_init1)
+__SYSCALL_I386(333, sys_preadv, compat_sys_preadv)
+__SYSCALL_I386(334, sys_pwritev, compat_sys_pwritev)
+__SYSCALL_I386(335, sys_rt_tgsigqueueinfo, compat_sys_rt_tgsigqueueinfo)
+__SYSCALL_I386(336, sys_perf_event_open, sys_perf_event_open)
+__SYSCALL_I386(337, sys_recvmmsg, compat_sys_recvmmsg)
+__SYSCALL_I386(338, sys_fanotify_init, sys_fanotify_init)
+__SYSCALL_I386(339, sys_fanotify_mark, sys32_fanotify_mark)
+__SYSCALL_I386(340, sys_prlimit64, sys_prlimit64)
+__SYSCALL_I386(341, sys_name_to_handle_at, sys_name_to_handle_at)
+__SYSCALL_I386(342, sys_open_by_handle_at, compat_sys_open_by_handle_at)
+__SYSCALL_I386(343, sys_clock_adjtime, compat_sys_clock_adjtime)
+__SYSCALL_I386(344, sys_syncfs, sys_syncfs)
+__SYSCALL_I386(345, sys_sendmmsg, compat_sys_sendmmsg)
+__SYSCALL_I386(346, sys_setns, sys_setns)
+__SYSCALL_I386(347, sys_process_vm_readv, compat_sys_process_vm_readv)
+__SYSCALL_I386(348, sys_process_vm_writev, compat_sys_process_vm_writev)
+__SYSCALL_I386(349, sys_tpd, compat_sys_tpd)
diff -uprN ../linux-3.4.104-vanilla/arch/x86/include/generated/asm/unistd_32.h linux-3.4.104-syssec_hw2_app2/arch/x86/include/generated/asm/unistd_32.h
--- ../linux-3.4.104-vanilla/arch/x86/include/generated/asm/unistd_32.h	1969-12-31 19:00:00.000000000 -0500
+++ linux-3.4.104-syssec_hw2_app2/arch/x86/include/generated/asm/unistd_32.h	2014-11-05 21:52:52.000000000 -0500
@@ -0,0 +1,351 @@
+#ifndef _ASM_X86_UNISTD_32_H
+#define _ASM_X86_UNISTD_32_H 1
+
+#define __NR_restart_syscall 0
+#define __NR_exit 1
+#define __NR_fork 2
+#define __NR_read 3
+#define __NR_write 4
+#define __NR_open 5
+#define __NR_close 6
+#define __NR_waitpid 7
+#define __NR_creat 8
+#define __NR_link 9
+#define __NR_unlink 10
+#define __NR_execve 11
+#define __NR_chdir 12
+#define __NR_time 13
+#define __NR_mknod 14
+#define __NR_chmod 15
+#define __NR_lchown 16
+#define __NR_break 17
+#define __NR_oldstat 18
+#define __NR_lseek 19
+#define __NR_getpid 20
+#define __NR_mount 21
+#define __NR_umount 22
+#define __NR_setuid 23
+#define __NR_getuid 24
+#define __NR_stime 25
+#define __NR_ptrace 26
+#define __NR_alarm 27
+#define __NR_oldfstat 28
+#define __NR_pause 29
+#define __NR_utime 30
+#define __NR_stty 31
+#define __NR_gtty 32
+#define __NR_access 33
+#define __NR_nice 34
+#define __NR_ftime 35
+#define __NR_sync 36
+#define __NR_kill 37
+#define __NR_rename 38
+#define __NR_mkdir 39
+#define __NR_rmdir 40
+#define __NR_dup 41
+#define __NR_pipe 42
+#define __NR_times 43
+#define __NR_prof 44
+#define __NR_brk 45
+#define __NR_setgid 46
+#define __NR_getgid 47
+#define __NR_signal 48
+#define __NR_geteuid 49
+#define __NR_getegid 50
+#define __NR_acct 51
+#define __NR_umount2 52
+#define __NR_lock 53
+#define __NR_ioctl 54
+#define __NR_fcntl 55
+#define __NR_mpx 56
+#define __NR_setpgid 57
+#define __NR_ulimit 58
+#define __NR_oldolduname 59
+#define __NR_umask 60
+#define __NR_chroot 61
+#define __NR_ustat 62
+#define __NR_dup2 63
+#define __NR_getppid 64
+#define __NR_getpgrp 65
+#define __NR_setsid 66
+#define __NR_sigaction 67
+#define __NR_sgetmask 68
+#define __NR_ssetmask 69
+#define __NR_setreuid 70
+#define __NR_setregid 71
+#define __NR_sigsuspend 72
+#define __NR_sigpending 73
+#define __NR_sethostname 74
+#define __NR_setrlimit 75
+#define __NR_getrlimit 76
+#define __NR_getrusage 77
+#define __NR_gettimeofday 78
+#define __NR_settimeofday 79
+#define __NR_getgroups 80
+#define __NR_setgroups 81
+#define __NR_select 82
+#define __NR_symlink 83
+#define __NR_oldlstat 84
+#define __NR_readlink 85
+#define __NR_uselib 86
+#define __NR_swapon 87
+#define __NR_reboot 88
+#define __NR_readdir 89
+#define __NR_mmap 90
+#define __NR_munmap 91
+#define __NR_truncate 92
+#define __NR_ftruncate 93
+#define __NR_fchmod 94
+#define __NR_fchown 95
+#define __NR_getpriority 96
+#define __NR_setpriority 97
+#define __NR_profil 98
+#define __NR_statfs 99
+#define __NR_fstatfs 100
+#define __NR_ioperm 101
+#define __NR_socketcall 102
+#define __NR_syslog 103
+#define __NR_setitimer 104
+#define __NR_getitimer 105
+#define __NR_stat 106
+#define __NR_lstat 107
+#define __NR_fstat 108
+#define __NR_olduname 109
+#define __NR_iopl 110
+#define __NR_vhangup 111
+#define __NR_idle 112
+#define __NR_vm86old 113
+#define __NR_wait4 114
+#define __NR_swapoff 115
+#define __NR_sysinfo 116
+#define __NR_ipc 117
+#define __NR_fsync 118
+#define __NR_sigreturn 119
+#define __NR_clone 120
+#define __NR_setdomainname 121
+#define __NR_uname 122
+#define __NR_modify_ldt 123
+#define __NR_adjtimex 124
+#define __NR_mprotect 125
+#define __NR_sigprocmask 126
+#define __NR_create_module 127
+#define __NR_init_module 128
+#define __NR_delete_module 129
+#define __NR_get_kernel_syms 130
+#define __NR_quotactl 131
+#define __NR_getpgid 132
+#define __NR_fchdir 133
+#define __NR_bdflush 134
+#define __NR_sysfs 135
+#define __NR_personality 136
+#define __NR_afs_syscall 137
+#define __NR_setfsuid 138
+#define __NR_setfsgid 139
+#define __NR__llseek 140
+#define __NR_getdents 141
+#define __NR__newselect 142
+#define __NR_flock 143
+#define __NR_msync 144
+#define __NR_readv 145
+#define __NR_writev 146
+#define __NR_getsid 147
+#define __NR_fdatasync 148
+#define __NR__sysctl 149
+#define __NR_mlock 150
+#define __NR_munlock 151
+#define __NR_mlockall 152
+#define __NR_munlockall 153
+#define __NR_sched_setparam 154
+#define __NR_sched_getparam 155
+#define __NR_sched_setscheduler 156
+#define __NR_sched_getscheduler 157
+#define __NR_sched_yield 158
+#define __NR_sched_get_priority_max 159
+#define __NR_sched_get_priority_min 160
+#define __NR_sched_rr_get_interval 161
+#define __NR_nanosleep 162
+#define __NR_mremap 163
+#define __NR_setresuid 164
+#define __NR_getresuid 165
+#define __NR_vm86 166
+#define __NR_query_module 167
+#define __NR_poll 168
+#define __NR_nfsservctl 169
+#define __NR_setresgid 170
+#define __NR_getresgid 171
+#define __NR_prctl 172
+#define __NR_rt_sigreturn 173
+#define __NR_rt_sigaction 174
+#define __NR_rt_sigprocmask 175
+#define __NR_rt_sigpending 176
+#define __NR_rt_sigtimedwait 177
+#define __NR_rt_sigqueueinfo 178
+#define __NR_rt_sigsuspend 179
+#define __NR_pread64 180
+#define __NR_pwrite64 181
+#define __NR_chown 182
+#define __NR_getcwd 183
+#define __NR_capget 184
+#define __NR_capset 185
+#define __NR_sigaltstack 186
+#define __NR_sendfile 187
+#define __NR_getpmsg 188
+#define __NR_putpmsg 189
+#define __NR_vfork 190
+#define __NR_ugetrlimit 191
+#define __NR_mmap2 192
+#define __NR_truncate64 193
+#define __NR_ftruncate64 194
+#define __NR_stat64 195
+#define __NR_lstat64 196
+#define __NR_fstat64 197
+#define __NR_lchown32 198
+#define __NR_getuid32 199
+#define __NR_getgid32 200
+#define __NR_geteuid32 201
+#define __NR_getegid32 202
+#define __NR_setreuid32 203
+#define __NR_setregid32 204
+#define __NR_getgroups32 205
+#define __NR_setgroups32 206
+#define __NR_fchown32 207
+#define __NR_setresuid32 208
+#define __NR_getresuid32 209
+#define __NR_setresgid32 210
+#define __NR_getresgid32 211
+#define __NR_chown32 212
+#define __NR_setuid32 213
+#define __NR_setgid32 214
+#define __NR_setfsuid32 215
+#define __NR_setfsgid32 216
+#define __NR_pivot_root 217
+#define __NR_mincore 218
+#define __NR_madvise 219
+#define __NR_getdents64 220
+#define __NR_fcntl64 221
+#define __NR_gettid 224
+#define __NR_readahead 225
+#define __NR_setxattr 226
+#define __NR_lsetxattr 227
+#define __NR_fsetxattr 228
+#define __NR_getxattr 229
+#define __NR_lgetxattr 230
+#define __NR_fgetxattr 231
+#define __NR_listxattr 232
+#define __NR_llistxattr 233
+#define __NR_flistxattr 234
+#define __NR_removexattr 235
+#define __NR_lremovexattr 236
+#define __NR_fremovexattr 237
+#define __NR_tkill 238
+#define __NR_sendfile64 239
+#define __NR_futex 240
+#define __NR_sched_setaffinity 241
+#define __NR_sched_getaffinity 242
+#define __NR_set_thread_area 243
+#define __NR_get_thread_area 244
+#define __NR_io_setup 245
+#define __NR_io_destroy 246
+#define __NR_io_getevents 247
+#define __NR_io_submit 248
+#define __NR_io_cancel 249
+#define __NR_fadvise64 250
+#define __NR_exit_group 252
+#define __NR_lookup_dcookie 253
+#define __NR_epoll_create 254
+#define __NR_epoll_ctl 255
+#define __NR_epoll_wait 256
+#define __NR_remap_file_pages 257
+#define __NR_set_tid_address 258
+#define __NR_timer_create 259
+#define __NR_timer_settime 260
+#define __NR_timer_gettime 261
+#define __NR_timer_getoverrun 262
+#define __NR_timer_delete 263
+#define __NR_clock_settime 264
+#define __NR_clock_gettime 265
+#define __NR_clock_getres 266
+#define __NR_clock_nanosleep 267
+#define __NR_statfs64 268
+#define __NR_fstatfs64 269
+#define __NR_tgkill 270
+#define __NR_utimes 271
+#define __NR_fadvise64_64 272
+#define __NR_vserver 273
+#define __NR_mbind 274
+#define __NR_get_mempolicy 275
+#define __NR_set_mempolicy 276
+#define __NR_mq_open 277
+#define __NR_mq_unlink 278
+#define __NR_mq_timedsend 279
+#define __NR_mq_timedreceive 280
+#define __NR_mq_notify 281
+#define __NR_mq_getsetattr 282
+#define __NR_kexec_load 283
+#define __NR_waitid 284
+#define __NR_add_key 286
+#define __NR_request_key 287
+#define __NR_keyctl 288
+#define __NR_ioprio_set 289
+#define __NR_ioprio_get 290
+#define __NR_inotify_init 291
+#define __NR_inotify_add_watch 292
+#define __NR_inotify_rm_watch 293
+#define __NR_migrate_pages 294
+#define __NR_openat 295
+#define __NR_mkdirat 296
+#define __NR_mknodat 297
+#define __NR_fchownat 298
+#define __NR_futimesat 299
+#define __NR_fstatat64 300
+#define __NR_unlinkat 301
+#define __NR_renameat 302
+#define __NR_linkat 303
+#define __NR_symlinkat 304
+#define __NR_readlinkat 305
+#define __NR_fchmodat 306
+#define __NR_faccessat 307
+#define __NR_pselect6 308
+#define __NR_ppoll 309
+#define __NR_unshare 310
+#define __NR_set_robust_list 311
+#define __NR_get_robust_list 312
+#define __NR_splice 313
+#define __NR_sync_file_range 314
+#define __NR_tee 315
+#define __NR_vmsplice 316
+#define __NR_move_pages 317
+#define __NR_getcpu 318
+#define __NR_epoll_pwait 319
+#define __NR_utimensat 320
+#define __NR_signalfd 321
+#define __NR_timerfd_create 322
+#define __NR_eventfd 323
+#define __NR_fallocate 324
+#define __NR_timerfd_settime 325
+#define __NR_timerfd_gettime 326
+#define __NR_signalfd4 327
+#define __NR_eventfd2 328
+#define __NR_epoll_create1 329
+#define __NR_dup3 330
+#define __NR_pipe2 331
+#define __NR_inotify_init1 332
+#define __NR_preadv 333
+#define __NR_pwritev 334
+#define __NR_rt_tgsigqueueinfo 335
+#define __NR_perf_event_open 336
+#define __NR_recvmmsg 337
+#define __NR_fanotify_init 338
+#define __NR_fanotify_mark 339
+#define __NR_prlimit64 340
+#define __NR_name_to_handle_at 341
+#define __NR_open_by_handle_at 342
+#define __NR_clock_adjtime 343
+#define __NR_syncfs 344
+#define __NR_sendmmsg 345
+#define __NR_setns 346
+#define __NR_process_vm_readv 347
+#define __NR_process_vm_writev 348
+#define __NR_tpd 349
+
+#endif /* _ASM_X86_UNISTD_32_H */
diff -uprN ../linux-3.4.104-vanilla/arch/x86/include/generated/asm/unistd_64.h linux-3.4.104-syssec_hw2_app2/arch/x86/include/generated/asm/unistd_64.h
--- ../linux-3.4.104-vanilla/arch/x86/include/generated/asm/unistd_64.h	1969-12-31 19:00:00.000000000 -0500
+++ linux-3.4.104-syssec_hw2_app2/arch/x86/include/generated/asm/unistd_64.h	2014-11-05 20:53:31.000000000 -0500
@@ -0,0 +1,317 @@
+#ifndef _ASM_X86_UNISTD_64_H
+#define _ASM_X86_UNISTD_64_H 1
+
+#define __NR_read 0
+#define __NR_write 1
+#define __NR_open 2
+#define __NR_close 3
+#define __NR_stat 4
+#define __NR_fstat 5
+#define __NR_lstat 6
+#define __NR_poll 7
+#define __NR_lseek 8
+#define __NR_mmap 9
+#define __NR_mprotect 10
+#define __NR_munmap 11
+#define __NR_brk 12
+#define __NR_rt_sigaction 13
+#define __NR_rt_sigprocmask 14
+#define __NR_rt_sigreturn 15
+#define __NR_ioctl 16
+#define __NR_pread64 17
+#define __NR_pwrite64 18
+#define __NR_readv 19
+#define __NR_writev 20
+#define __NR_access 21
+#define __NR_pipe 22
+#define __NR_select 23
+#define __NR_sched_yield 24
+#define __NR_mremap 25
+#define __NR_msync 26
+#define __NR_mincore 27
+#define __NR_madvise 28
+#define __NR_shmget 29
+#define __NR_shmat 30
+#define __NR_shmctl 31
+#define __NR_dup 32
+#define __NR_dup2 33
+#define __NR_pause 34
+#define __NR_nanosleep 35
+#define __NR_getitimer 36
+#define __NR_alarm 37
+#define __NR_setitimer 38
+#define __NR_getpid 39
+#define __NR_sendfile 40
+#define __NR_socket 41
+#define __NR_connect 42
+#define __NR_accept 43
+#define __NR_sendto 44
+#define __NR_recvfrom 45
+#define __NR_sendmsg 46
+#define __NR_recvmsg 47
+#define __NR_shutdown 48
+#define __NR_bind 49
+#define __NR_listen 50
+#define __NR_getsockname 51
+#define __NR_getpeername 52
+#define __NR_socketpair 53
+#define __NR_setsockopt 54
+#define __NR_getsockopt 55
+#define __NR_clone 56
+#define __NR_fork 57
+#define __NR_vfork 58
+#define __NR_execve 59
+#define __NR_exit 60
+#define __NR_wait4 61
+#define __NR_kill 62
+#define __NR_uname 63
+#define __NR_semget 64
+#define __NR_semop 65
+#define __NR_semctl 66
+#define __NR_shmdt 67
+#define __NR_msgget 68
+#define __NR_msgsnd 69
+#define __NR_msgrcv 70
+#define __NR_msgctl 71
+#define __NR_fcntl 72
+#define __NR_flock 73
+#define __NR_fsync 74
+#define __NR_fdatasync 75
+#define __NR_truncate 76
+#define __NR_ftruncate 77
+#define __NR_getdents 78
+#define __NR_getcwd 79
+#define __NR_chdir 80
+#define __NR_fchdir 81
+#define __NR_rename 82
+#define __NR_mkdir 83
+#define __NR_rmdir 84
+#define __NR_creat 85
+#define __NR_link 86
+#define __NR_unlink 87
+#define __NR_symlink 88
+#define __NR_readlink 89
+#define __NR_chmod 90
+#define __NR_fchmod 91
+#define __NR_chown 92
+#define __NR_fchown 93
+#define __NR_lchown 94
+#define __NR_umask 95
+#define __NR_gettimeofday 96
+#define __NR_getrlimit 97
+#define __NR_getrusage 98
+#define __NR_sysinfo 99
+#define __NR_times 100
+#define __NR_ptrace 101
+#define __NR_getuid 102
+#define __NR_syslog 103
+#define __NR_getgid 104
+#define __NR_setuid 105
+#define __NR_setgid 106
+#define __NR_geteuid 107
+#define __NR_getegid 108
+#define __NR_setpgid 109
+#define __NR_getppid 110
+#define __NR_getpgrp 111
+#define __NR_setsid 112
+#define __NR_setreuid 113
+#define __NR_setregid 114
+#define __NR_getgroups 115
+#define __NR_setgroups 116
+#define __NR_setresuid 117
+#define __NR_getresuid 118
+#define __NR_setresgid 119
+#define __NR_getresgid 120
+#define __NR_getpgid 121
+#define __NR_setfsuid 122
+#define __NR_setfsgid 123
+#define __NR_getsid 124
+#define __NR_capget 125
+#define __NR_capset 126
+#define __NR_rt_sigpending 127
+#define __NR_rt_sigtimedwait 128
+#define __NR_rt_sigqueueinfo 129
+#define __NR_rt_sigsuspend 130
+#define __NR_sigaltstack 131
+#define __NR_utime 132
+#define __NR_mknod 133
+#define __NR_uselib 134
+#define __NR_personality 135
+#define __NR_ustat 136
+#define __NR_statfs 137
+#define __NR_fstatfs 138
+#define __NR_sysfs 139
+#define __NR_getpriority 140
+#define __NR_setpriority 141
+#define __NR_sched_setparam 142
+#define __NR_sched_getparam 143
+#define __NR_sched_setscheduler 144
+#define __NR_sched_getscheduler 145
+#define __NR_sched_get_priority_max 146
+#define __NR_sched_get_priority_min 147
+#define __NR_sched_rr_get_interval 148
+#define __NR_mlock 149
+#define __NR_munlock 150
+#define __NR_mlockall 151
+#define __NR_munlockall 152
+#define __NR_vhangup 153
+#define __NR_modify_ldt 154
+#define __NR_pivot_root 155
+#define __NR__sysctl 156
+#define __NR_prctl 157
+#define __NR_arch_prctl 158
+#define __NR_adjtimex 159
+#define __NR_setrlimit 160
+#define __NR_chroot 161
+#define __NR_sync 162
+#define __NR_acct 163
+#define __NR_settimeofday 164
+#define __NR_mount 165
+#define __NR_umount2 166
+#define __NR_swapon 167
+#define __NR_swapoff 168
+#define __NR_reboot 169
+#define __NR_sethostname 170
+#define __NR_setdomainname 171
+#define __NR_iopl 172
+#define __NR_ioperm 173
+#define __NR_create_module 174
+#define __NR_init_module 175
+#define __NR_delete_module 176
+#define __NR_get_kernel_syms 177
+#define __NR_query_module 178
+#define __NR_quotactl 179
+#define __NR_nfsservctl 180
+#define __NR_getpmsg 181
+#define __NR_putpmsg 182
+#define __NR_afs_syscall 183
+#define __NR_tuxcall 184
+#define __NR_security 185
+#define __NR_gettid 186
+#define __NR_readahead 187
+#define __NR_setxattr 188
+#define __NR_lsetxattr 189
+#define __NR_fsetxattr 190
+#define __NR_getxattr 191
+#define __NR_lgetxattr 192
+#define __NR_fgetxattr 193
+#define __NR_listxattr 194
+#define __NR_llistxattr 195
+#define __NR_flistxattr 196
+#define __NR_removexattr 197
+#define __NR_lremovexattr 198
+#define __NR_fremovexattr 199
+#define __NR_tkill 200
+#define __NR_time 201
+#define __NR_futex 202
+#define __NR_sched_setaffinity 203
+#define __NR_sched_getaffinity 204
+#define __NR_set_thread_area 205
+#define __NR_io_setup 206
+#define __NR_io_destroy 207
+#define __NR_io_getevents 208
+#define __NR_io_submit 209
+#define __NR_io_cancel 210
+#define __NR_get_thread_area 211
+#define __NR_lookup_dcookie 212
+#define __NR_epoll_create 213
+#define __NR_epoll_ctl_old 214
+#define __NR_epoll_wait_old 215
+#define __NR_remap_file_pages 216
+#define __NR_getdents64 217
+#define __NR_set_tid_address 218
+#define __NR_restart_syscall 219
+#define __NR_semtimedop 220
+#define __NR_fadvise64 221
+#define __NR_timer_create 222
+#define __NR_timer_settime 223
+#define __NR_timer_gettime 224
+#define __NR_timer_getoverrun 225
+#define __NR_timer_delete 226
+#define __NR_clock_settime 227
+#define __NR_clock_gettime 228
+#define __NR_clock_getres 229
+#define __NR_clock_nanosleep 230
+#define __NR_exit_group 231
+#define __NR_epoll_wait 232
+#define __NR_epoll_ctl 233
+#define __NR_tgkill 234
+#define __NR_utimes 235
+#define __NR_vserver 236
+#define __NR_mbind 237
+#define __NR_set_mempolicy 238
+#define __NR_get_mempolicy 239
+#define __NR_mq_open 240
+#define __NR_mq_unlink 241
+#define __NR_mq_timedsend 242
+#define __NR_mq_timedreceive 243
+#define __NR_mq_notify 244
+#define __NR_mq_getsetattr 245
+#define __NR_kexec_load 246
+#define __NR_waitid 247
+#define __NR_add_key 248
+#define __NR_request_key 249
+#define __NR_keyctl 250
+#define __NR_ioprio_set 251
+#define __NR_ioprio_get 252
+#define __NR_inotify_init 253
+#define __NR_inotify_add_watch 254
+#define __NR_inotify_rm_watch 255
+#define __NR_migrate_pages 256
+#define __NR_openat 257
+#define __NR_mkdirat 258
+#define __NR_mknodat 259
+#define __NR_fchownat 260
+#define __NR_futimesat 261
+#define __NR_newfstatat 262
+#define __NR_unlinkat 263
+#define __NR_renameat 264
+#define __NR_linkat 265
+#define __NR_symlinkat 266
+#define __NR_readlinkat 267
+#define __NR_fchmodat 268
+#define __NR_faccessat 269
+#define __NR_pselect6 270
+#define __NR_ppoll 271
+#define __NR_unshare 272
+#define __NR_set_robust_list 273
+#define __NR_get_robust_list 274
+#define __NR_splice 275
+#define __NR_tee 276
+#define __NR_sync_file_range 277
+#define __NR_vmsplice 278
+#define __NR_move_pages 279
+#define __NR_utimensat 280
+#define __NR_epoll_pwait 281
+#define __NR_signalfd 282
+#define __NR_timerfd_create 283
+#define __NR_eventfd 284
+#define __NR_fallocate 285
+#define __NR_timerfd_settime 286
+#define __NR_timerfd_gettime 287
+#define __NR_accept4 288
+#define __NR_signalfd4 289
+#define __NR_eventfd2 290
+#define __NR_epoll_create1 291
+#define __NR_dup3 292
+#define __NR_pipe2 293
+#define __NR_inotify_init1 294
+#define __NR_preadv 295
+#define __NR_pwritev 296
+#define __NR_rt_tgsigqueueinfo 297
+#define __NR_perf_event_open 298
+#define __NR_recvmmsg 299
+#define __NR_fanotify_init 300
+#define __NR_fanotify_mark 301
+#define __NR_prlimit64 302
+#define __NR_name_to_handle_at 303
+#define __NR_open_by_handle_at 304
+#define __NR_clock_adjtime 305
+#define __NR_syncfs 306
+#define __NR_sendmmsg 307
+#define __NR_setns 308
+#define __NR_getcpu 309
+#define __NR_process_vm_readv 310
+#define __NR_process_vm_writev 311
+
+#endif /* _ASM_X86_UNISTD_64_H */
diff -uprN ../linux-3.4.104-vanilla/arch/x86/include/generated/asm/unistd_x32.h linux-3.4.104-syssec_hw2_app2/arch/x86/include/generated/asm/unistd_x32.h
--- ../linux-3.4.104-vanilla/arch/x86/include/generated/asm/unistd_x32.h	1969-12-31 19:00:00.000000000 -0500
+++ linux-3.4.104-syssec_hw2_app2/arch/x86/include/generated/asm/unistd_x32.h	2014-11-05 20:53:31.000000000 -0500
@@ -0,0 +1,306 @@
+#ifndef _ASM_X86_UNISTD_X32_H
+#define _ASM_X86_UNISTD_X32_H 1
+
+#define __NR_read (__X32_SYSCALL_BIT + 0)
+#define __NR_write (__X32_SYSCALL_BIT + 1)
+#define __NR_open (__X32_SYSCALL_BIT + 2)
+#define __NR_close (__X32_SYSCALL_BIT + 3)
+#define __NR_stat (__X32_SYSCALL_BIT + 4)
+#define __NR_fstat (__X32_SYSCALL_BIT + 5)
+#define __NR_lstat (__X32_SYSCALL_BIT + 6)
+#define __NR_poll (__X32_SYSCALL_BIT + 7)
+#define __NR_lseek (__X32_SYSCALL_BIT + 8)
+#define __NR_mmap (__X32_SYSCALL_BIT + 9)
+#define __NR_mprotect (__X32_SYSCALL_BIT + 10)
+#define __NR_munmap (__X32_SYSCALL_BIT + 11)
+#define __NR_brk (__X32_SYSCALL_BIT + 12)
+#define __NR_rt_sigprocmask (__X32_SYSCALL_BIT + 14)
+#define __NR_pread64 (__X32_SYSCALL_BIT + 17)
+#define __NR_pwrite64 (__X32_SYSCALL_BIT + 18)
+#define __NR_access (__X32_SYSCALL_BIT + 21)
+#define __NR_pipe (__X32_SYSCALL_BIT + 22)
+#define __NR_select (__X32_SYSCALL_BIT + 23)
+#define __NR_sched_yield (__X32_SYSCALL_BIT + 24)
+#define __NR_mremap (__X32_SYSCALL_BIT + 25)
+#define __NR_msync (__X32_SYSCALL_BIT + 26)
+#define __NR_mincore (__X32_SYSCALL_BIT + 27)
+#define __NR_madvise (__X32_SYSCALL_BIT + 28)
+#define __NR_shmget (__X32_SYSCALL_BIT + 29)
+#define __NR_shmat (__X32_SYSCALL_BIT + 30)
+#define __NR_shmctl (__X32_SYSCALL_BIT + 31)
+#define __NR_dup (__X32_SYSCALL_BIT + 32)
+#define __NR_dup2 (__X32_SYSCALL_BIT + 33)
+#define __NR_pause (__X32_SYSCALL_BIT + 34)
+#define __NR_nanosleep (__X32_SYSCALL_BIT + 35)
+#define __NR_getitimer (__X32_SYSCALL_BIT + 36)
+#define __NR_alarm (__X32_SYSCALL_BIT + 37)
+#define __NR_setitimer (__X32_SYSCALL_BIT + 38)
+#define __NR_getpid (__X32_SYSCALL_BIT + 39)
+#define __NR_sendfile (__X32_SYSCALL_BIT + 40)
+#define __NR_socket (__X32_SYSCALL_BIT + 41)
+#define __NR_connect (__X32_SYSCALL_BIT + 42)
+#define __NR_accept (__X32_SYSCALL_BIT + 43)
+#define __NR_sendto (__X32_SYSCALL_BIT + 44)
+#define __NR_shutdown (__X32_SYSCALL_BIT + 48)
+#define __NR_bind (__X32_SYSCALL_BIT + 49)
+#define __NR_listen (__X32_SYSCALL_BIT + 50)
+#define __NR_getsockname (__X32_SYSCALL_BIT + 51)
+#define __NR_getpeername (__X32_SYSCALL_BIT + 52)
+#define __NR_socketpair (__X32_SYSCALL_BIT + 53)
+#define __NR_clone (__X32_SYSCALL_BIT + 56)
+#define __NR_fork (__X32_SYSCALL_BIT + 57)
+#define __NR_vfork (__X32_SYSCALL_BIT + 58)
+#define __NR_exit (__X32_SYSCALL_BIT + 60)
+#define __NR_wait4 (__X32_SYSCALL_BIT + 61)
+#define __NR_kill (__X32_SYSCALL_BIT + 62)
+#define __NR_uname (__X32_SYSCALL_BIT + 63)
+#define __NR_semget (__X32_SYSCALL_BIT + 64)
+#define __NR_semop (__X32_SYSCALL_BIT + 65)
+#define __NR_semctl (__X32_SYSCALL_BIT + 66)
+#define __NR_shmdt (__X32_SYSCALL_BIT + 67)
+#define __NR_msgget (__X32_SYSCALL_BIT + 68)
+#define __NR_msgsnd (__X32_SYSCALL_BIT + 69)
+#define __NR_msgrcv (__X32_SYSCALL_BIT + 70)
+#define __NR_msgctl (__X32_SYSCALL_BIT + 71)
+#define __NR_fcntl (__X32_SYSCALL_BIT + 72)
+#define __NR_flock (__X32_SYSCALL_BIT + 73)
+#define __NR_fsync (__X32_SYSCALL_BIT + 74)
+#define __NR_fdatasync (__X32_SYSCALL_BIT + 75)
+#define __NR_truncate (__X32_SYSCALL_BIT + 76)
+#define __NR_ftruncate (__X32_SYSCALL_BIT + 77)
+#define __NR_getdents (__X32_SYSCALL_BIT + 78)
+#define __NR_getcwd (__X32_SYSCALL_BIT + 79)
+#define __NR_chdir (__X32_SYSCALL_BIT + 80)
+#define __NR_fchdir (__X32_SYSCALL_BIT + 81)
+#define __NR_rename (__X32_SYSCALL_BIT + 82)
+#define __NR_mkdir (__X32_SYSCALL_BIT + 83)
+#define __NR_rmdir (__X32_SYSCALL_BIT + 84)
+#define __NR_creat (__X32_SYSCALL_BIT + 85)
+#define __NR_link (__X32_SYSCALL_BIT + 86)
+#define __NR_unlink (__X32_SYSCALL_BIT + 87)
+#define __NR_symlink (__X32_SYSCALL_BIT + 88)
+#define __NR_readlink (__X32_SYSCALL_BIT + 89)
+#define __NR_chmod (__X32_SYSCALL_BIT + 90)
+#define __NR_fchmod (__X32_SYSCALL_BIT + 91)
+#define __NR_chown (__X32_SYSCALL_BIT + 92)
+#define __NR_fchown (__X32_SYSCALL_BIT + 93)
+#define __NR_lchown (__X32_SYSCALL_BIT + 94)
+#define __NR_umask (__X32_SYSCALL_BIT + 95)
+#define __NR_gettimeofday (__X32_SYSCALL_BIT + 96)
+#define __NR_getrlimit (__X32_SYSCALL_BIT + 97)
+#define __NR_getrusage (__X32_SYSCALL_BIT + 98)
+#define __NR_sysinfo (__X32_SYSCALL_BIT + 99)
+#define __NR_times (__X32_SYSCALL_BIT + 100)
+#define __NR_getuid (__X32_SYSCALL_BIT + 102)
+#define __NR_syslog (__X32_SYSCALL_BIT + 103)
+#define __NR_getgid (__X32_SYSCALL_BIT + 104)
+#define __NR_setuid (__X32_SYSCALL_BIT + 105)
+#define __NR_setgid (__X32_SYSCALL_BIT + 106)
+#define __NR_geteuid (__X32_SYSCALL_BIT + 107)
+#define __NR_getegid (__X32_SYSCALL_BIT + 108)
+#define __NR_setpgid (__X32_SYSCALL_BIT + 109)
+#define __NR_getppid (__X32_SYSCALL_BIT + 110)
+#define __NR_getpgrp (__X32_SYSCALL_BIT + 111)
+#define __NR_setsid (__X32_SYSCALL_BIT + 112)
+#define __NR_setreuid (__X32_SYSCALL_BIT + 113)
+#define __NR_setregid (__X32_SYSCALL_BIT + 114)
+#define __NR_getgroups (__X32_SYSCALL_BIT + 115)
+#define __NR_setgroups (__X32_SYSCALL_BIT + 116)
+#define __NR_setresuid (__X32_SYSCALL_BIT + 117)
+#define __NR_getresuid (__X32_SYSCALL_BIT + 118)
+#define __NR_setresgid (__X32_SYSCALL_BIT + 119)
+#define __NR_getresgid (__X32_SYSCALL_BIT + 120)
+#define __NR_getpgid (__X32_SYSCALL_BIT + 121)
+#define __NR_setfsuid (__X32_SYSCALL_BIT + 122)
+#define __NR_setfsgid (__X32_SYSCALL_BIT + 123)
+#define __NR_getsid (__X32_SYSCALL_BIT + 124)
+#define __NR_capget (__X32_SYSCALL_BIT + 125)
+#define __NR_capset (__X32_SYSCALL_BIT + 126)
+#define __NR_rt_sigsuspend (__X32_SYSCALL_BIT + 130)
+#define __NR_utime (__X32_SYSCALL_BIT + 132)
+#define __NR_mknod (__X32_SYSCALL_BIT + 133)
+#define __NR_personality (__X32_SYSCALL_BIT + 135)
+#define __NR_ustat (__X32_SYSCALL_BIT + 136)
+#define __NR_statfs (__X32_SYSCALL_BIT + 137)
+#define __NR_fstatfs (__X32_SYSCALL_BIT + 138)
+#define __NR_sysfs (__X32_SYSCALL_BIT + 139)
+#define __NR_getpriority (__X32_SYSCALL_BIT + 140)
+#define __NR_setpriority (__X32_SYSCALL_BIT + 141)
+#define __NR_sched_setparam (__X32_SYSCALL_BIT + 142)
+#define __NR_sched_getparam (__X32_SYSCALL_BIT + 143)
+#define __NR_sched_setscheduler (__X32_SYSCALL_BIT + 144)
+#define __NR_sched_getscheduler (__X32_SYSCALL_BIT + 145)
+#define __NR_sched_get_priority_max (__X32_SYSCALL_BIT + 146)
+#define __NR_sched_get_priority_min (__X32_SYSCALL_BIT + 147)
+#define __NR_sched_rr_get_interval (__X32_SYSCALL_BIT + 148)
+#define __NR_mlock (__X32_SYSCALL_BIT + 149)
+#define __NR_munlock (__X32_SYSCALL_BIT + 150)
+#define __NR_mlockall (__X32_SYSCALL_BIT + 151)
+#define __NR_munlockall (__X32_SYSCALL_BIT + 152)
+#define __NR_vhangup (__X32_SYSCALL_BIT + 153)
+#define __NR_modify_ldt (__X32_SYSCALL_BIT + 154)
+#define __NR_pivot_root (__X32_SYSCALL_BIT + 155)
+#define __NR_prctl (__X32_SYSCALL_BIT + 157)
+#define __NR_arch_prctl (__X32_SYSCALL_BIT + 158)
+#define __NR_adjtimex (__X32_SYSCALL_BIT + 159)
+#define __NR_setrlimit (__X32_SYSCALL_BIT + 160)
+#define __NR_chroot (__X32_SYSCALL_BIT + 161)
+#define __NR_sync (__X32_SYSCALL_BIT + 162)
+#define __NR_acct (__X32_SYSCALL_BIT + 163)
+#define __NR_settimeofday (__X32_SYSCALL_BIT + 164)
+#define __NR_mount (__X32_SYSCALL_BIT + 165)
+#define __NR_umount2 (__X32_SYSCALL_BIT + 166)
+#define __NR_swapon (__X32_SYSCALL_BIT + 167)
+#define __NR_swapoff (__X32_SYSCALL_BIT + 168)
+#define __NR_reboot (__X32_SYSCALL_BIT + 169)
+#define __NR_sethostname (__X32_SYSCALL_BIT + 170)
+#define __NR_setdomainname (__X32_SYSCALL_BIT + 171)
+#define __NR_iopl (__X32_SYSCALL_BIT + 172)
+#define __NR_ioperm (__X32_SYSCALL_BIT + 173)
+#define __NR_init_module (__X32_SYSCALL_BIT + 175)
+#define __NR_delete_module (__X32_SYSCALL_BIT + 176)
+#define __NR_quotactl (__X32_SYSCALL_BIT + 179)
+#define __NR_getpmsg (__X32_SYSCALL_BIT + 181)
+#define __NR_putpmsg (__X32_SYSCALL_BIT + 182)
+#define __NR_afs_syscall (__X32_SYSCALL_BIT + 183)
+#define __NR_tuxcall (__X32_SYSCALL_BIT + 184)
+#define __NR_security (__X32_SYSCALL_BIT + 185)
+#define __NR_gettid (__X32_SYSCALL_BIT + 186)
+#define __NR_readahead (__X32_SYSCALL_BIT + 187)
+#define __NR_setxattr (__X32_SYSCALL_BIT + 188)
+#define __NR_lsetxattr (__X32_SYSCALL_BIT + 189)
+#define __NR_fsetxattr (__X32_SYSCALL_BIT + 190)
+#define __NR_getxattr (__X32_SYSCALL_BIT + 191)
+#define __NR_lgetxattr (__X32_SYSCALL_BIT + 192)
+#define __NR_fgetxattr (__X32_SYSCALL_BIT + 193)
+#define __NR_listxattr (__X32_SYSCALL_BIT + 194)
+#define __NR_llistxattr (__X32_SYSCALL_BIT + 195)
+#define __NR_flistxattr (__X32_SYSCALL_BIT + 196)
+#define __NR_removexattr (__X32_SYSCALL_BIT + 197)
+#define __NR_lremovexattr (__X32_SYSCALL_BIT + 198)
+#define __NR_fremovexattr (__X32_SYSCALL_BIT + 199)
+#define __NR_tkill (__X32_SYSCALL_BIT + 200)
+#define __NR_time (__X32_SYSCALL_BIT + 201)
+#define __NR_futex (__X32_SYSCALL_BIT + 202)
+#define __NR_sched_setaffinity (__X32_SYSCALL_BIT + 203)
+#define __NR_sched_getaffinity (__X32_SYSCALL_BIT + 204)
+#define __NR_io_destroy (__X32_SYSCALL_BIT + 207)
+#define __NR_io_getevents (__X32_SYSCALL_BIT + 208)
+#define __NR_io_cancel (__X32_SYSCALL_BIT + 210)
+#define __NR_lookup_dcookie (__X32_SYSCALL_BIT + 212)
+#define __NR_epoll_create (__X32_SYSCALL_BIT + 213)
+#define __NR_remap_file_pages (__X32_SYSCALL_BIT + 216)
+#define __NR_getdents64 (__X32_SYSCALL_BIT + 217)
+#define __NR_set_tid_address (__X32_SYSCALL_BIT + 218)
+#define __NR_restart_syscall (__X32_SYSCALL_BIT + 219)
+#define __NR_semtimedop (__X32_SYSCALL_BIT + 220)
+#define __NR_fadvise64 (__X32_SYSCALL_BIT + 221)
+#define __NR_timer_settime (__X32_SYSCALL_BIT + 223)
+#define __NR_timer_gettime (__X32_SYSCALL_BIT + 224)
+#define __NR_timer_getoverrun (__X32_SYSCALL_BIT + 225)
+#define __NR_timer_delete (__X32_SYSCALL_BIT + 226)
+#define __NR_clock_settime (__X32_SYSCALL_BIT + 227)
+#define __NR_clock_gettime (__X32_SYSCALL_BIT + 228)
+#define __NR_clock_getres (__X32_SYSCALL_BIT + 229)
+#define __NR_clock_nanosleep (__X32_SYSCALL_BIT + 230)
+#define __NR_exit_group (__X32_SYSCALL_BIT + 231)
+#define __NR_epoll_wait (__X32_SYSCALL_BIT + 232)
+#define __NR_epoll_ctl (__X32_SYSCALL_BIT + 233)
+#define __NR_tgkill (__X32_SYSCALL_BIT + 234)
+#define __NR_utimes (__X32_SYSCALL_BIT + 235)
+#define __NR_mbind (__X32_SYSCALL_BIT + 237)
+#define __NR_set_mempolicy (__X32_SYSCALL_BIT + 238)
+#define __NR_get_mempolicy (__X32_SYSCALL_BIT + 239)
+#define __NR_mq_open (__X32_SYSCALL_BIT + 240)
+#define __NR_mq_unlink (__X32_SYSCALL_BIT + 241)
+#define __NR_mq_timedsend (__X32_SYSCALL_BIT + 242)
+#define __NR_mq_timedreceive (__X32_SYSCALL_BIT + 243)
+#define __NR_mq_getsetattr (__X32_SYSCALL_BIT + 245)
+#define __NR_add_key (__X32_SYSCALL_BIT + 248)
+#define __NR_request_key (__X32_SYSCALL_BIT + 249)
+#define __NR_keyctl (__X32_SYSCALL_BIT + 250)
+#define __NR_ioprio_set (__X32_SYSCALL_BIT + 251)
+#define __NR_ioprio_get (__X32_SYSCALL_BIT + 252)
+#define __NR_inotify_init (__X32_SYSCALL_BIT + 253)
+#define __NR_inotify_add_watch (__X32_SYSCALL_BIT + 254)
+#define __NR_inotify_rm_watch (__X32_SYSCALL_BIT + 255)
+#define __NR_migrate_pages (__X32_SYSCALL_BIT + 256)
+#define __NR_openat (__X32_SYSCALL_BIT + 257)
+#define __NR_mkdirat (__X32_SYSCALL_BIT + 258)
+#define __NR_mknodat (__X32_SYSCALL_BIT + 259)
+#define __NR_fchownat (__X32_SYSCALL_BIT + 260)
+#define __NR_futimesat (__X32_SYSCALL_BIT + 261)
+#define __NR_newfstatat (__X32_SYSCALL_BIT + 262)
+#define __NR_unlinkat (__X32_SYSCALL_BIT + 263)
+#define __NR_renameat (__X32_SYSCALL_BIT + 264)
+#define __NR_linkat (__X32_SYSCALL_BIT + 265)
+#define __NR_symlinkat (__X32_SYSCALL_BIT + 266)
+#define __NR_readlinkat (__X32_SYSCALL_BIT + 267)
+#define __NR_fchmodat (__X32_SYSCALL_BIT + 268)
+#define __NR_faccessat (__X32_SYSCALL_BIT + 269)
+#define __NR_pselect6 (__X32_SYSCALL_BIT + 270)
+#define __NR_ppoll (__X32_SYSCALL_BIT + 271)
+#define __NR_unshare (__X32_SYSCALL_BIT + 272)
+#define __NR_splice (__X32_SYSCALL_BIT + 275)
+#define __NR_tee (__X32_SYSCALL_BIT + 276)
+#define __NR_sync_file_range (__X32_SYSCALL_BIT + 277)
+#define __NR_utimensat (__X32_SYSCALL_BIT + 280)
+#define __NR_epoll_pwait (__X32_SYSCALL_BIT + 281)
+#define __NR_signalfd (__X32_SYSCALL_BIT + 282)
+#define __NR_timerfd_create (__X32_SYSCALL_BIT + 283)
+#define __NR_eventfd (__X32_SYSCALL_BIT + 284)
+#define __NR_fallocate (__X32_SYSCALL_BIT + 285)
+#define __NR_timerfd_settime (__X32_SYSCALL_BIT + 286)
+#define __NR_timerfd_gettime (__X32_SYSCALL_BIT + 287)
+#define __NR_accept4 (__X32_SYSCALL_BIT + 288)
+#define __NR_signalfd4 (__X32_SYSCALL_BIT + 289)
+#define __NR_eventfd2 (__X32_SYSCALL_BIT + 290)
+#define __NR_epoll_create1 (__X32_SYSCALL_BIT + 291)
+#define __NR_dup3 (__X32_SYSCALL_BIT + 292)
+#define __NR_pipe2 (__X32_SYSCALL_BIT + 293)
+#define __NR_inotify_init1 (__X32_SYSCALL_BIT + 294)
+#define __NR_perf_event_open (__X32_SYSCALL_BIT + 298)
+#define __NR_fanotify_init (__X32_SYSCALL_BIT + 300)
+#define __NR_fanotify_mark (__X32_SYSCALL_BIT + 301)
+#define __NR_prlimit64 (__X32_SYSCALL_BIT + 302)
+#define __NR_name_to_handle_at (__X32_SYSCALL_BIT + 303)
+#define __NR_open_by_handle_at (__X32_SYSCALL_BIT + 304)
+#define __NR_clock_adjtime (__X32_SYSCALL_BIT + 305)
+#define __NR_syncfs (__X32_SYSCALL_BIT + 306)
+#define __NR_setns (__X32_SYSCALL_BIT + 308)
+#define __NR_getcpu (__X32_SYSCALL_BIT + 309)
+#define __NR_rt_sigaction (__X32_SYSCALL_BIT + 512)
+#define __NR_rt_sigreturn (__X32_SYSCALL_BIT + 513)
+#define __NR_ioctl (__X32_SYSCALL_BIT + 514)
+#define __NR_readv (__X32_SYSCALL_BIT + 515)
+#define __NR_writev (__X32_SYSCALL_BIT + 516)
+#define __NR_recvfrom (__X32_SYSCALL_BIT + 517)
+#define __NR_sendmsg (__X32_SYSCALL_BIT + 518)
+#define __NR_recvmsg (__X32_SYSCALL_BIT + 519)
+#define __NR_execve (__X32_SYSCALL_BIT + 520)
+#define __NR_ptrace (__X32_SYSCALL_BIT + 521)
+#define __NR_rt_sigpending (__X32_SYSCALL_BIT + 522)
+#define __NR_rt_sigtimedwait (__X32_SYSCALL_BIT + 523)
+#define __NR_rt_sigqueueinfo (__X32_SYSCALL_BIT + 524)
+#define __NR_sigaltstack (__X32_SYSCALL_BIT + 525)
+#define __NR_timer_create (__X32_SYSCALL_BIT + 526)
+#define __NR_mq_notify (__X32_SYSCALL_BIT + 527)
+#define __NR_kexec_load (__X32_SYSCALL_BIT + 528)
+#define __NR_waitid (__X32_SYSCALL_BIT + 529)
+#define __NR_set_robust_list (__X32_SYSCALL_BIT + 530)
+#define __NR_get_robust_list (__X32_SYSCALL_BIT + 531)
+#define __NR_vmsplice (__X32_SYSCALL_BIT + 532)
+#define __NR_move_pages (__X32_SYSCALL_BIT + 533)
+#define __NR_preadv (__X32_SYSCALL_BIT + 534)
+#define __NR_pwritev (__X32_SYSCALL_BIT + 535)
+#define __NR_rt_tgsigqueueinfo (__X32_SYSCALL_BIT + 536)
+#define __NR_recvmmsg (__X32_SYSCALL_BIT + 537)
+#define __NR_sendmmsg (__X32_SYSCALL_BIT + 538)
+#define __NR_process_vm_readv (__X32_SYSCALL_BIT + 539)
+#define __NR_process_vm_writev (__X32_SYSCALL_BIT + 540)
+#define __NR_setsockopt (__X32_SYSCALL_BIT + 541)
+#define __NR_getsockopt (__X32_SYSCALL_BIT + 542)
+#define __NR_io_setup (__X32_SYSCALL_BIT + 543)
+#define __NR_io_submit (__X32_SYSCALL_BIT + 544)
+
+#endif /* _ASM_X86_UNISTD_X32_H */
diff -uprN ../linux-3.4.104-vanilla/arch/x86/mm/fault.c linux-3.4.104-syssec_hw2_app2/arch/x86/mm/fault.c
--- ../linux-3.4.104-vanilla/arch/x86/mm/fault.c	2014-09-24 23:49:19.000000000 -0400
+++ linux-3.4.104-syssec_hw2_app2/arch/x86/mm/fault.c	2014-11-12 22:36:17.000000000 -0500
@@ -3,38 +3,39 @@
  *  Copyright (C) 2001, 2002 Andi Kleen, SuSE Labs.
  *  Copyright (C) 2008-2009, Red Hat Inc., Ingo Molnar
  */
-#include <linux/magic.h>		/* STACK_END_MAGIC		*/
-#include <linux/sched.h>		/* test_thread_flag(), ...	*/
-#include <linux/kdebug.h>		/* oops_begin/end, ...		*/
-#include <linux/module.h>		/* search_exception_table	*/
-#include <linux/bootmem.h>		/* max_low_pfn			*/
-#include <linux/kprobes.h>		/* __kprobes, ...		*/
-#include <linux/mmiotrace.h>		/* kmmio_handler, ...		*/
-#include <linux/perf_event.h>		/* perf_sw_event		*/
-#include <linux/hugetlb.h>		/* hstate_index_to_shift	*/
-#include <linux/prefetch.h>		/* prefetchw			*/
-
-#include <asm/traps.h>			/* dotraplinkage, ...		*/
-#include <asm/pgalloc.h>		/* pgd_*(), ...			*/
-#include <asm/kmemcheck.h>		/* kmemcheck_*(), ...		*/
-#include <asm/fixmap.h>			/* VSYSCALL_START		*/
+#include <linux/magic.h>        /* STACK_END_MAGIC        */
+#include <linux/sched.h>        /* test_thread_flag(), ...    */
+#include <linux/kdebug.h>        /* oops_begin/end, ...        */
+#include <linux/module.h>        /* search_exception_table    */
+#include <linux/bootmem.h>        /* max_low_pfn            */
+#include <linux/kprobes.h>        /* __kprobes, ...        */
+#include <linux/mmiotrace.h>        /* kmmio_handler, ...        */
+#include <linux/perf_event.h>        /* perf_sw_event        */
+#include <linux/hugetlb.h>        /* hstate_index_to_shift    */
+#include <linux/prefetch.h>        /* prefetchw            */
+
+#include <asm/traps.h>            /* dotraplinkage, ...        */
+#include <asm/pgalloc.h>        /* pgd_*(), ...            */
+#include <asm/kmemcheck.h>        /* kmemcheck_*(), ...        */
+#include <asm/fixmap.h>            /* VSYSCALL_START        */
+#include <asm/page_types.h>
 
 /*
  * Page fault error code bits:
  *
- *   bit 0 ==	 0: no page found	1: protection fault
- *   bit 1 ==	 0: read access		1: write access
- *   bit 2 ==	 0: kernel-mode access	1: user-mode access
- *   bit 3 ==				1: use of reserved bit detected
- *   bit 4 ==				1: fault was an instruction fetch
+ *   bit 0 ==     0: no page found    1: protection fault
+ *   bit 1 ==     0: read access        1: write access
+ *   bit 2 ==     0: kernel-mode access    1: user-mode access
+ *   bit 3 ==                1: use of reserved bit detected
+ *   bit 4 ==                1: fault was an instruction fetch
  */
 enum x86_pf_error_code {
 
-	PF_PROT		=		1 << 0,
-	PF_WRITE	=		1 << 1,
-	PF_USER		=		1 << 2,
-	PF_RSVD		=		1 << 3,
-	PF_INSTR	=		1 << 4,
+    PF_PROT        =        1 << 0,
+    PF_WRITE    =        1 << 1,
+    PF_USER        =        1 << 2,
+    PF_RSVD        =        1 << 3,
+    PF_INSTR    =        1 << 4,
 };
 
 /*
@@ -44,25 +45,25 @@ enum x86_pf_error_code {
 static inline int __kprobes
 kmmio_fault(struct pt_regs *regs, unsigned long addr)
 {
-	if (unlikely(is_kmmio_active()))
-		if (kmmio_handler(regs, addr) == 1)
-			return -1;
-	return 0;
+    if (unlikely(is_kmmio_active()))
+        if (kmmio_handler(regs, addr) == 1)
+            return -1;
+    return 0;
 }
 
 static inline int __kprobes notify_page_fault(struct pt_regs *regs)
 {
-	int ret = 0;
+    int ret = 0;
 
-	/* kprobe_running() needs smp_processor_id() */
-	if (kprobes_built_in() && !user_mode_vm(regs)) {
-		preempt_disable();
-		if (kprobe_running() && kprobe_fault_handler(regs, 14))
-			ret = 1;
-		preempt_enable();
-	}
+    /* kprobe_running() needs smp_processor_id() */
+    if (kprobes_built_in() && !user_mode_vm(regs)) {
+        preempt_disable();
+        if (kprobe_running() && kprobe_fault_handler(regs, 14))
+            ret = 1;
+        preempt_enable();
+    }
 
-	return ret;
+    return ret;
 }
 
 /*
@@ -82,103 +83,103 @@ static inline int __kprobes notify_page_
  */
 static inline int
 check_prefetch_opcode(struct pt_regs *regs, unsigned char *instr,
-		      unsigned char opcode, int *prefetch)
+              unsigned char opcode, int *prefetch)
 {
-	unsigned char instr_hi = opcode & 0xf0;
-	unsigned char instr_lo = opcode & 0x0f;
+    unsigned char instr_hi = opcode & 0xf0;
+    unsigned char instr_lo = opcode & 0x0f;
 
-	switch (instr_hi) {
-	case 0x20:
-	case 0x30:
-		/*
-		 * Values 0x26,0x2E,0x36,0x3E are valid x86 prefixes.
-		 * In X86_64 long mode, the CPU will signal invalid
-		 * opcode if some of these prefixes are present so
-		 * X86_64 will never get here anyway
-		 */
-		return ((instr_lo & 7) == 0x6);
+    switch (instr_hi) {
+    case 0x20:
+    case 0x30:
+        /*
+         * Values 0x26,0x2E,0x36,0x3E are valid x86 prefixes.
+         * In X86_64 long mode, the CPU will signal invalid
+         * opcode if some of these prefixes are present so
+         * X86_64 will never get here anyway
+         */
+        return ((instr_lo & 7) == 0x6);
 #ifdef CONFIG_X86_64
-	case 0x40:
-		/*
-		 * In AMD64 long mode 0x40..0x4F are valid REX prefixes
-		 * Need to figure out under what instruction mode the
-		 * instruction was issued. Could check the LDT for lm,
-		 * but for now it's good enough to assume that long
-		 * mode only uses well known segments or kernel.
-		 */
-		return (!user_mode(regs) || user_64bit_mode(regs));
+    case 0x40:
+        /*
+         * In AMD64 long mode 0x40..0x4F are valid REX prefixes
+         * Need to figure out under what instruction mode the
+         * instruction was issued. Could check the LDT for lm,
+         * but for now it's good enough to assume that long
+         * mode only uses well known segments or kernel.
+         */
+        return (!user_mode(regs) || user_64bit_mode(regs));
 #endif
-	case 0x60:
-		/* 0x64 thru 0x67 are valid prefixes in all modes. */
-		return (instr_lo & 0xC) == 0x4;
-	case 0xF0:
-		/* 0xF0, 0xF2, 0xF3 are valid prefixes in all modes. */
-		return !instr_lo || (instr_lo>>1) == 1;
-	case 0x00:
-		/* Prefetch instruction is 0x0F0D or 0x0F18 */
-		if (probe_kernel_address(instr, opcode))
-			return 0;
-
-		*prefetch = (instr_lo == 0xF) &&
-			(opcode == 0x0D || opcode == 0x18);
-		return 0;
-	default:
-		return 0;
-	}
+    case 0x60:
+        /* 0x64 thru 0x67 are valid prefixes in all modes. */
+        return (instr_lo & 0xC) == 0x4;
+    case 0xF0:
+        /* 0xF0, 0xF2, 0xF3 are valid prefixes in all modes. */
+        return !instr_lo || (instr_lo>>1) == 1;
+    case 0x00:
+        /* Prefetch instruction is 0x0F0D or 0x0F18 */
+        if (probe_kernel_address(instr, opcode))
+            return 0;
+
+        *prefetch = (instr_lo == 0xF) &&
+            (opcode == 0x0D || opcode == 0x18);
+        return 0;
+    default:
+        return 0;
+    }
 }
 
 static int
 is_prefetch(struct pt_regs *regs, unsigned long error_code, unsigned long addr)
 {
-	unsigned char *max_instr;
-	unsigned char *instr;
-	int prefetch = 0;
-
-	/*
-	 * If it was a exec (instruction fetch) fault on NX page, then
-	 * do not ignore the fault:
-	 */
-	if (error_code & PF_INSTR)
-		return 0;
-
-	instr = (void *)convert_ip_to_linear(current, regs);
-	max_instr = instr + 15;
-
-	if (user_mode(regs) && instr >= (unsigned char *)TASK_SIZE)
-		return 0;
-
-	while (instr < max_instr) {
-		unsigned char opcode;
-
-		if (probe_kernel_address(instr, opcode))
-			break;
-
-		instr++;
-
-		if (!check_prefetch_opcode(regs, instr, opcode, &prefetch))
-			break;
-	}
-	return prefetch;
+    unsigned char *max_instr;
+    unsigned char *instr;
+    int prefetch = 0;
+
+    /*
+     * If it was a exec (instruction fetch) fault on NX page, then
+     * do not ignore the fault:
+     */
+    if (error_code & PF_INSTR)
+        return 0;
+
+    instr = (void *)convert_ip_to_linear(current, regs);
+    max_instr = instr + 15;
+
+    if (user_mode(regs) && instr >= (unsigned char *)TASK_SIZE)
+        return 0;
+
+    while (instr < max_instr) {
+        unsigned char opcode;
+
+        if (probe_kernel_address(instr, opcode))
+            break;
+
+        instr++;
+
+        if (!check_prefetch_opcode(regs, instr, opcode, &prefetch))
+            break;
+    }
+    return prefetch;
 }
 
 static void
 force_sig_info_fault(int si_signo, int si_code, unsigned long address,
-		     struct task_struct *tsk, int fault)
+             struct task_struct *tsk, int fault)
 {
-	unsigned lsb = 0;
-	siginfo_t info;
+    unsigned lsb = 0;
+    siginfo_t info;
 
-	info.si_signo	= si_signo;
-	info.si_errno	= 0;
-	info.si_code	= si_code;
-	info.si_addr	= (void __user *)address;
-	if (fault & VM_FAULT_HWPOISON_LARGE)
-		lsb = hstate_index_to_shift(VM_FAULT_GET_HINDEX(fault)); 
-	if (fault & VM_FAULT_HWPOISON)
-		lsb = PAGE_SHIFT;
-	info.si_addr_lsb = lsb;
+    info.si_signo    = si_signo;
+    info.si_errno    = 0;
+    info.si_code    = si_code;
+    info.si_addr    = (void __user *)address;
+    if (fault & VM_FAULT_HWPOISON_LARGE)
+        lsb = hstate_index_to_shift(VM_FAULT_GET_HINDEX(fault)); 
+    if (fault & VM_FAULT_HWPOISON)
+        lsb = PAGE_SHIFT;
+    info.si_addr_lsb = lsb;
 
-	force_sig_info(si_signo, &info, tsk);
+    force_sig_info(si_signo, &info, tsk);
 }
 
 DEFINE_SPINLOCK(pgd_lock);
@@ -187,69 +188,69 @@ LIST_HEAD(pgd_list);
 #ifdef CONFIG_X86_32
 static inline pmd_t *vmalloc_sync_one(pgd_t *pgd, unsigned long address)
 {
-	unsigned index = pgd_index(address);
-	pgd_t *pgd_k;
-	pud_t *pud, *pud_k;
-	pmd_t *pmd, *pmd_k;
-
-	pgd += index;
-	pgd_k = init_mm.pgd + index;
-
-	if (!pgd_present(*pgd_k))
-		return NULL;
-
-	/*
-	 * set_pgd(pgd, *pgd_k); here would be useless on PAE
-	 * and redundant with the set_pmd() on non-PAE. As would
-	 * set_pud.
-	 */
-	pud = pud_offset(pgd, address);
-	pud_k = pud_offset(pgd_k, address);
-	if (!pud_present(*pud_k))
-		return NULL;
-
-	pmd = pmd_offset(pud, address);
-	pmd_k = pmd_offset(pud_k, address);
-	if (!pmd_present(*pmd_k))
-		return NULL;
-
-	if (!pmd_present(*pmd))
-		set_pmd(pmd, *pmd_k);
-	else
-		BUG_ON(pmd_page(*pmd) != pmd_page(*pmd_k));
+    unsigned index = pgd_index(address);
+    pgd_t *pgd_k;
+    pud_t *pud, *pud_k;
+    pmd_t *pmd, *pmd_k;
+
+    pgd += index;
+    pgd_k = init_mm.pgd + index;
+
+    if (!pgd_present(*pgd_k))
+        return NULL;
+
+    /*
+     * set_pgd(pgd, *pgd_k); here would be useless on PAE
+     * and redundant with the set_pmd() on non-PAE. As would
+     * set_pud.
+     */
+    pud = pud_offset(pgd, address);
+    pud_k = pud_offset(pgd_k, address);
+    if (!pud_present(*pud_k))
+        return NULL;
+
+    pmd = pmd_offset(pud, address);
+    pmd_k = pmd_offset(pud_k, address);
+    if (!pmd_present(*pmd_k))
+        return NULL;
+
+    if (!pmd_present(*pmd))
+        set_pmd(pmd, *pmd_k);
+    else
+        BUG_ON(pmd_page(*pmd) != pmd_page(*pmd_k));
 
-	return pmd_k;
+    return pmd_k;
 }
 
 void vmalloc_sync_all(void)
 {
-	unsigned long address;
+    unsigned long address;
 
-	if (SHARED_KERNEL_PMD)
-		return;
+    if (SHARED_KERNEL_PMD)
+        return;
 
-	for (address = VMALLOC_START & PMD_MASK;
-	     address >= TASK_SIZE && address < FIXADDR_TOP;
-	     address += PMD_SIZE) {
-		struct page *page;
-
-		spin_lock(&pgd_lock);
-		list_for_each_entry(page, &pgd_list, lru) {
-			spinlock_t *pgt_lock;
-			pmd_t *ret;
-
-			/* the pgt_lock only for Xen */
-			pgt_lock = &pgd_page_get_mm(page)->page_table_lock;
-
-			spin_lock(pgt_lock);
-			ret = vmalloc_sync_one(page_address(page), address);
-			spin_unlock(pgt_lock);
-
-			if (!ret)
-				break;
-		}
-		spin_unlock(&pgd_lock);
-	}
+    for (address = VMALLOC_START & PMD_MASK;
+         address >= TASK_SIZE && address < FIXADDR_TOP;
+         address += PMD_SIZE) {
+        struct page *page;
+
+        spin_lock(&pgd_lock);
+        list_for_each_entry(page, &pgd_list, lru) {
+            spinlock_t *pgt_lock;
+            pmd_t *ret;
+
+            /* the pgt_lock only for Xen */
+            pgt_lock = &pgd_page_get_mm(page)->page_table_lock;
+
+            spin_lock(pgt_lock);
+            ret = vmalloc_sync_one(page_address(page), address);
+            spin_unlock(pgt_lock);
+
+            if (!ret)
+                break;
+        }
+        spin_unlock(&pgd_lock);
+    }
 }
 
 /*
@@ -259,33 +260,33 @@ void vmalloc_sync_all(void)
  */
 static noinline __kprobes int vmalloc_fault(unsigned long address)
 {
-	unsigned long pgd_paddr;
-	pmd_t *pmd_k;
-	pte_t *pte_k;
-
-	/* Make sure we are in vmalloc area: */
-	if (!(address >= VMALLOC_START && address < VMALLOC_END))
-		return -1;
-
-	WARN_ON_ONCE(in_nmi());
-
-	/*
-	 * Synchronize this task's top level page-table
-	 * with the 'reference' page table.
-	 *
-	 * Do _not_ use "current" here. We might be inside
-	 * an interrupt in the middle of a task switch..
-	 */
-	pgd_paddr = read_cr3();
-	pmd_k = vmalloc_sync_one(__va(pgd_paddr), address);
-	if (!pmd_k)
-		return -1;
-
-	pte_k = pte_offset_kernel(pmd_k, address);
-	if (!pte_present(*pte_k))
-		return -1;
+    unsigned long pgd_paddr;
+    pmd_t *pmd_k;
+    pte_t *pte_k;
+
+    /* Make sure we are in vmalloc area: */
+    if (!(address >= VMALLOC_START && address < VMALLOC_END))
+        return -1;
+
+    WARN_ON_ONCE(in_nmi());
+
+    /*
+     * Synchronize this task's top level page-table
+     * with the 'reference' page table.
+     *
+     * Do _not_ use "current" here. We might be inside
+     * an interrupt in the middle of a task switch..
+     */
+    pgd_paddr = read_cr3();
+    pmd_k = vmalloc_sync_one(__va(pgd_paddr), address);
+    if (!pmd_k)
+        return -1;
+
+    pte_k = pte_offset_kernel(pmd_k, address);
+    if (!pte_present(*pte_k))
+        return -1;
 
-	return 0;
+    return 0;
 }
 
 /*
@@ -293,58 +294,58 @@ static noinline __kprobes int vmalloc_fa
  */
 static inline void
 check_v8086_mode(struct pt_regs *regs, unsigned long address,
-		 struct task_struct *tsk)
+         struct task_struct *tsk)
 {
-	unsigned long bit;
+    unsigned long bit;
 
-	if (!v8086_mode(regs))
-		return;
+    if (!v8086_mode(regs))
+        return;
 
-	bit = (address - 0xA0000) >> PAGE_SHIFT;
-	if (bit < 32)
-		tsk->thread.screen_bitmap |= 1 << bit;
+    bit = (address - 0xA0000) >> PAGE_SHIFT;
+    if (bit < 32)
+        tsk->thread.screen_bitmap |= 1 << bit;
 }
 
 static bool low_pfn(unsigned long pfn)
 {
-	return pfn < max_low_pfn;
+    return pfn < max_low_pfn;
 }
 
 static void dump_pagetable(unsigned long address)
 {
-	pgd_t *base = __va(read_cr3());
-	pgd_t *pgd = &base[pgd_index(address)];
-	pmd_t *pmd;
-	pte_t *pte;
+    pgd_t *base = __va(read_cr3());
+    pgd_t *pgd = &base[pgd_index(address)];
+    pmd_t *pmd;
+    pte_t *pte;
 
 #ifdef CONFIG_X86_PAE
-	printk("*pdpt = %016Lx ", pgd_val(*pgd));
-	if (!low_pfn(pgd_val(*pgd) >> PAGE_SHIFT) || !pgd_present(*pgd))
-		goto out;
+    printk("*pdpt = %016Lx ", pgd_val(*pgd));
+    if (!low_pfn(pgd_val(*pgd) >> PAGE_SHIFT) || !pgd_present(*pgd))
+        goto out;
 #endif
-	pmd = pmd_offset(pud_offset(pgd, address), address);
-	printk(KERN_CONT "*pde = %0*Lx ", sizeof(*pmd) * 2, (u64)pmd_val(*pmd));
+    pmd = pmd_offset(pud_offset(pgd, address), address);
+    printk(KERN_CONT "*pde = %0*Lx ", sizeof(*pmd) * 2, (u64)pmd_val(*pmd));
 
-	/*
-	 * We must not directly access the pte in the highpte
-	 * case if the page table is located in highmem.
-	 * And let's rather not kmap-atomic the pte, just in case
-	 * it's allocated already:
-	 */
-	if (!low_pfn(pmd_pfn(*pmd)) || !pmd_present(*pmd) || pmd_large(*pmd))
-		goto out;
+    /*
+     * We must not directly access the pte in the highpte
+     * case if the page table is located in highmem.
+     * And let's rather not kmap-atomic the pte, just in case
+     * it's allocated already:
+     */
+    if (!low_pfn(pmd_pfn(*pmd)) || !pmd_present(*pmd) || pmd_large(*pmd))
+        goto out;
 
-	pte = pte_offset_kernel(pmd, address);
-	printk("*pte = %0*Lx ", sizeof(*pte) * 2, (u64)pte_val(*pte));
+    pte = pte_offset_kernel(pmd, address);
+    printk("*pte = %0*Lx ", sizeof(*pte) * 2, (u64)pte_val(*pte));
 out:
-	printk("\n");
+    printk("\n");
 }
 
 #else /* CONFIG_X86_64: */
 
 void vmalloc_sync_all(void)
 {
-	sync_global_pgds(VMALLOC_START & PGDIR_MASK, VMALLOC_END);
+    sync_global_pgds(VMALLOC_START & PGDIR_MASK, VMALLOC_END);
 }
 
 /*
@@ -356,70 +357,70 @@ void vmalloc_sync_all(void)
  */
 static noinline __kprobes int vmalloc_fault(unsigned long address)
 {
-	pgd_t *pgd, *pgd_ref;
-	pud_t *pud, *pud_ref;
-	pmd_t *pmd, *pmd_ref;
-	pte_t *pte, *pte_ref;
-
-	/* Make sure we are in vmalloc area: */
-	if (!(address >= VMALLOC_START && address < VMALLOC_END))
-		return -1;
-
-	WARN_ON_ONCE(in_nmi());
-
-	/*
-	 * Copy kernel mappings over when needed. This can also
-	 * happen within a race in page table update. In the later
-	 * case just flush:
-	 */
-	pgd = pgd_offset(current->active_mm, address);
-	pgd_ref = pgd_offset_k(address);
-	if (pgd_none(*pgd_ref))
-		return -1;
-
-	if (pgd_none(*pgd)) {
-		set_pgd(pgd, *pgd_ref);
-		arch_flush_lazy_mmu_mode();
-	} else {
-		BUG_ON(pgd_page_vaddr(*pgd) != pgd_page_vaddr(*pgd_ref));
-	}
-
-	/*
-	 * Below here mismatches are bugs because these lower tables
-	 * are shared:
-	 */
-
-	pud = pud_offset(pgd, address);
-	pud_ref = pud_offset(pgd_ref, address);
-	if (pud_none(*pud_ref))
-		return -1;
-
-	if (pud_none(*pud) || pud_page_vaddr(*pud) != pud_page_vaddr(*pud_ref))
-		BUG();
-
-	pmd = pmd_offset(pud, address);
-	pmd_ref = pmd_offset(pud_ref, address);
-	if (pmd_none(*pmd_ref))
-		return -1;
-
-	if (pmd_none(*pmd) || pmd_page(*pmd) != pmd_page(*pmd_ref))
-		BUG();
-
-	pte_ref = pte_offset_kernel(pmd_ref, address);
-	if (!pte_present(*pte_ref))
-		return -1;
-
-	pte = pte_offset_kernel(pmd, address);
-
-	/*
-	 * Don't use pte_page here, because the mappings can point
-	 * outside mem_map, and the NUMA hash lookup cannot handle
-	 * that:
-	 */
-	if (!pte_present(*pte) || pte_pfn(*pte) != pte_pfn(*pte_ref))
-		BUG();
+    pgd_t *pgd, *pgd_ref;
+    pud_t *pud, *pud_ref;
+    pmd_t *pmd, *pmd_ref;
+    pte_t *pte, *pte_ref;
+
+    /* Make sure we are in vmalloc area: */
+    if (!(address >= VMALLOC_START && address < VMALLOC_END))
+        return -1;
+
+    WARN_ON_ONCE(in_nmi());
+
+    /*
+     * Copy kernel mappings over when needed. This can also
+     * happen within a race in page table update. In the later
+     * case just flush:
+     */
+    pgd = pgd_offset(current->active_mm, address);
+    pgd_ref = pgd_offset_k(address);
+    if (pgd_none(*pgd_ref))
+        return -1;
+
+    if (pgd_none(*pgd)) {
+        set_pgd(pgd, *pgd_ref);
+        arch_flush_lazy_mmu_mode();
+    } else {
+        BUG_ON(pgd_page_vaddr(*pgd) != pgd_page_vaddr(*pgd_ref));
+    }
+
+    /*
+     * Below here mismatches are bugs because these lower tables
+     * are shared:
+     */
+
+    pud = pud_offset(pgd, address);
+    pud_ref = pud_offset(pgd_ref, address);
+    if (pud_none(*pud_ref))
+        return -1;
+
+    if (pud_none(*pud) || pud_page_vaddr(*pud) != pud_page_vaddr(*pud_ref))
+        BUG();
+
+    pmd = pmd_offset(pud, address);
+    pmd_ref = pmd_offset(pud_ref, address);
+    if (pmd_none(*pmd_ref))
+        return -1;
+
+    if (pmd_none(*pmd) || pmd_page(*pmd) != pmd_page(*pmd_ref))
+        BUG();
+
+    pte_ref = pte_offset_kernel(pmd_ref, address);
+    if (!pte_present(*pte_ref))
+        return -1;
+
+    pte = pte_offset_kernel(pmd, address);
+
+    /*
+     * Don't use pte_page here, because the mappings can point
+     * outside mem_map, and the NUMA hash lookup cannot handle
+     * that:
+     */
+    if (!pte_present(*pte) || pte_pfn(*pte) != pte_pfn(*pte_ref))
+        BUG();
 
-	return 0;
+    return 0;
 }
 
 #ifdef CONFIG_CPU_SUP_AMD
@@ -436,59 +437,59 @@ KERN_ERR 
  */
 static inline void
 check_v8086_mode(struct pt_regs *regs, unsigned long address,
-		 struct task_struct *tsk)
+         struct task_struct *tsk)
 {
 }
 
 static int bad_address(void *p)
 {
-	unsigned long dummy;
+    unsigned long dummy;
 
-	return probe_kernel_address((unsigned long *)p, dummy);
+    return probe_kernel_address((unsigned long *)p, dummy);
 }
 
 static void dump_pagetable(unsigned long address)
 {
-	pgd_t *base = __va(read_cr3() & PHYSICAL_PAGE_MASK);
-	pgd_t *pgd = base + pgd_index(address);
-	pud_t *pud;
-	pmd_t *pmd;
-	pte_t *pte;
+    pgd_t *base = __va(read_cr3() & PHYSICAL_PAGE_MASK);
+    pgd_t *pgd = base + pgd_index(address);
+    pud_t *pud;
+    pmd_t *pmd;
+    pte_t *pte;
 
-	if (bad_address(pgd))
-		goto bad;
+    if (bad_address(pgd))
+        goto bad;
 
-	printk("PGD %lx ", pgd_val(*pgd));
+    printk("PGD %lx ", pgd_val(*pgd));
 
-	if (!pgd_present(*pgd))
-		goto out;
+    if (!pgd_present(*pgd))
+        goto out;
 
-	pud = pud_offset(pgd, address);
-	if (bad_address(pud))
-		goto bad;
+    pud = pud_offset(pgd, address);
+    if (bad_address(pud))
+        goto bad;
 
-	printk("PUD %lx ", pud_val(*pud));
-	if (!pud_present(*pud) || pud_large(*pud))
-		goto out;
+    printk("PUD %lx ", pud_val(*pud));
+    if (!pud_present(*pud) || pud_large(*pud))
+        goto out;
 
-	pmd = pmd_offset(pud, address);
-	if (bad_address(pmd))
-		goto bad;
+    pmd = pmd_offset(pud, address);
+    if (bad_address(pmd))
+        goto bad;
 
-	printk("PMD %lx ", pmd_val(*pmd));
-	if (!pmd_present(*pmd) || pmd_large(*pmd))
-		goto out;
+    printk("PMD %lx ", pmd_val(*pmd));
+    if (!pmd_present(*pmd) || pmd_large(*pmd))
+        goto out;
 
-	pte = pte_offset_kernel(pmd, address);
-	if (bad_address(pte))
-		goto bad;
+    pte = pte_offset_kernel(pmd, address);
+    if (bad_address(pte))
+        goto bad;
 
-	printk("PTE %lx", pte_val(*pte));
+    printk("PTE %lx", pte_val(*pte));
 out:
-	printk("\n");
-	return;
+    printk("\n");
+    return;
 bad:
-	printk("BAD\n");
+    printk("BAD\n");
 }
 
 #endif /* CONFIG_X86_64 */
@@ -510,25 +511,25 @@ bad:
 static int is_errata93(struct pt_regs *regs, unsigned long address)
 {
 #if defined(CONFIG_X86_64) && defined(CONFIG_CPU_SUP_AMD)
-	if (boot_cpu_data.x86_vendor != X86_VENDOR_AMD
-	    || boot_cpu_data.x86 != 0xf)
-		return 0;
-
-	if (address != regs->ip)
-		return 0;
-
-	if ((address >> 32) != 0)
-		return 0;
-
-	address |= 0xffffffffUL << 32;
-	if ((address >= (u64)_stext && address <= (u64)_etext) ||
-	    (address >= MODULES_VADDR && address <= MODULES_END)) {
-		printk_once(errata93_warning);
-		regs->ip = address;
-		return 1;
-	}
+    if (boot_cpu_data.x86_vendor != X86_VENDOR_AMD
+        || boot_cpu_data.x86 != 0xf)
+        return 0;
+
+    if (address != regs->ip)
+        return 0;
+
+    if ((address >> 32) != 0)
+        return 0;
+
+    address |= 0xffffffffUL << 32;
+    if ((address >= (u64)_stext && address <= (u64)_etext) ||
+        (address >= MODULES_VADDR && address <= MODULES_END)) {
+        printk_once(errata93_warning);
+        regs->ip = address;
+        return 1;
+    }
 #endif
-	return 0;
+    return 0;
 }
 
 /*
@@ -542,30 +543,30 @@ static int is_errata93(struct pt_regs *r
 static int is_errata100(struct pt_regs *regs, unsigned long address)
 {
 #ifdef CONFIG_X86_64
-	if ((regs->cs == __USER32_CS || (regs->cs & (1<<2))) && (address >> 32))
-		return 1;
+    if ((regs->cs == __USER32_CS || (regs->cs & (1<<2))) && (address >> 32))
+        return 1;
 #endif
-	return 0;
+    return 0;
 }
 
 static int is_f00f_bug(struct pt_regs *regs, unsigned long address)
 {
 #ifdef CONFIG_X86_F00F_BUG
-	unsigned long nr;
+    unsigned long nr;
 
-	/*
-	 * Pentium F0 0F C7 C8 bug workaround:
-	 */
-	if (boot_cpu_data.f00f_bug) {
-		nr = (address - idt_descr.address) >> 3;
-
-		if (nr == 6) {
-			do_invalid_op(regs, 0);
-			return 1;
-		}
-	}
+    /*
+     * Pentium F0 0F C7 C8 bug workaround:
+     */
+    if (boot_cpu_data.f00f_bug) {
+        nr = (address - idt_descr.address) >> 3;
+
+        if (nr == 6) {
+            do_invalid_op(regs, 0);
+            return 1;
+        }
+    }
 #endif
-	return 0;
+    return 0;
 }
 
 static const char nx_warning[] = KERN_CRIT
@@ -573,122 +574,122 @@ static const char nx_warning[] = KERN_CR
 
 static void
 show_fault_oops(struct pt_regs *regs, unsigned long error_code,
-		unsigned long address)
+        unsigned long address)
 {
-	if (!oops_may_print())
-		return;
+    if (!oops_may_print())
+        return;
 
-	if (error_code & PF_INSTR) {
-		unsigned int level;
+    if (error_code & PF_INSTR) {
+        unsigned int level;
 
-		pte_t *pte = lookup_address(address, &level);
+        pte_t *pte = lookup_address(address, &level);
 
-		if (pte && pte_present(*pte) && !pte_exec(*pte))
-			printk(nx_warning, current_uid());
-	}
+        if (pte && pte_present(*pte) && !pte_exec(*pte))
+            printk(nx_warning, current_uid());
+    }
 
-	printk(KERN_ALERT "BUG: unable to handle kernel ");
-	if (address < PAGE_SIZE)
-		printk(KERN_CONT "NULL pointer dereference");
-	else
-		printk(KERN_CONT "paging request");
+    printk(KERN_ALERT "BUG: unable to handle kernel ");
+    if (address < PAGE_SIZE)
+        printk(KERN_CONT "NULL pointer dereference");
+    else
+        printk(KERN_CONT "paging request");
 
-	printk(KERN_CONT " at %p\n", (void *) address);
-	printk(KERN_ALERT "IP:");
-	printk_address(regs->ip, 1);
+    printk(KERN_CONT " at %p\n", (void *) address);
+    printk(KERN_ALERT "IP:");
+    printk_address(regs->ip, 1);
 
-	dump_pagetable(address);
+    dump_pagetable(address);
 }
 
 static noinline void
 pgtable_bad(struct pt_regs *regs, unsigned long error_code,
-	    unsigned long address)
+        unsigned long address)
 {
-	struct task_struct *tsk;
-	unsigned long flags;
-	int sig;
+    struct task_struct *tsk;
+    unsigned long flags;
+    int sig;
 
-	flags = oops_begin();
-	tsk = current;
-	sig = SIGKILL;
+    flags = oops_begin();
+    tsk = current;
+    sig = SIGKILL;
 
-	printk(KERN_ALERT "%s: Corrupted page table at address %lx\n",
-	       tsk->comm, address);
-	dump_pagetable(address);
+    printk(KERN_ALERT "%s: Corrupted page table at address %lx\n",
+           tsk->comm, address);
+    dump_pagetable(address);
 
-	tsk->thread.cr2		= address;
-	tsk->thread.trap_nr	= X86_TRAP_PF;
-	tsk->thread.error_code	= error_code;
+    tsk->thread.cr2        = address;
+    tsk->thread.trap_nr    = X86_TRAP_PF;
+    tsk->thread.error_code    = error_code;
 
-	if (__die("Bad pagetable", regs, error_code))
-		sig = 0;
+    if (__die("Bad pagetable", regs, error_code))
+        sig = 0;
 
-	oops_end(flags, regs, sig);
+    oops_end(flags, regs, sig);
 }
 
 static noinline void
 no_context(struct pt_regs *regs, unsigned long error_code,
-	   unsigned long address, int signal, int si_code)
+       unsigned long address, int signal, int si_code)
 {
-	struct task_struct *tsk = current;
-	unsigned long *stackend;
-	unsigned long flags;
-	int sig;
-
-	/* Are we prepared to handle this kernel fault? */
-	if (fixup_exception(regs)) {
-		if (current_thread_info()->sig_on_uaccess_error && signal) {
-			tsk->thread.trap_nr = X86_TRAP_PF;
-			tsk->thread.error_code = error_code | PF_USER;
-			tsk->thread.cr2 = address;
-
-			/* XXX: hwpoison faults will set the wrong code. */
-			force_sig_info_fault(signal, si_code, address, tsk, 0);
-		}
-		return;
-	}
-
-	/*
-	 * 32-bit:
-	 *
-	 *   Valid to do another page fault here, because if this fault
-	 *   had been triggered by is_prefetch fixup_exception would have
-	 *   handled it.
-	 *
-	 * 64-bit:
-	 *
-	 *   Hall of shame of CPU/BIOS bugs.
-	 */
-	if (is_prefetch(regs, error_code, address))
-		return;
-
-	if (is_errata93(regs, address))
-		return;
-
-	/*
-	 * Oops. The kernel tried to access some bad page. We'll have to
-	 * terminate things with extreme prejudice:
-	 */
-	flags = oops_begin();
-
-	show_fault_oops(regs, error_code, address);
-
-	stackend = end_of_stack(tsk);
-	if (tsk != &init_task && *stackend != STACK_END_MAGIC)
-		printk(KERN_EMERG "Thread overran stack, or stack corrupted\n");
-
-	tsk->thread.cr2		= address;
-	tsk->thread.trap_nr	= X86_TRAP_PF;
-	tsk->thread.error_code	= error_code;
-
-	sig = SIGKILL;
-	if (__die("Oops", regs, error_code))
-		sig = 0;
+    struct task_struct *tsk = current;
+    unsigned long *stackend;
+    unsigned long flags;
+    int sig;
+
+    /* Are we prepared to handle this kernel fault? */
+    if (fixup_exception(regs)) {
+        if (current_thread_info()->sig_on_uaccess_error && signal) {
+            tsk->thread.trap_nr = X86_TRAP_PF;
+            tsk->thread.error_code = error_code | PF_USER;
+            tsk->thread.cr2 = address;
+
+            /* XXX: hwpoison faults will set the wrong code. */
+            force_sig_info_fault(signal, si_code, address, tsk, 0);
+        }
+        return;
+    }
+
+    /*
+     * 32-bit:
+     *
+     *   Valid to do another page fault here, because if this fault
+     *   had been triggered by is_prefetch fixup_exception would have
+     *   handled it.
+     *
+     * 64-bit:
+     *
+     *   Hall of shame of CPU/BIOS bugs.
+     */
+    if (is_prefetch(regs, error_code, address))
+        return;
+
+    if (is_errata93(regs, address))
+        return;
+
+    /*
+     * Oops. The kernel tried to access some bad page. We'll have to
+     * terminate things with extreme prejudice:
+     */
+    flags = oops_begin();
+
+    show_fault_oops(regs, error_code, address);
+
+    stackend = end_of_stack(tsk);
+    if (tsk != &init_task && *stackend != STACK_END_MAGIC)
+        printk(KERN_EMERG "Thread overran stack, or stack corrupted\n");
+
+    tsk->thread.cr2        = address;
+    tsk->thread.trap_nr    = X86_TRAP_PF;
+    tsk->thread.error_code    = error_code;
+
+    sig = SIGKILL;
+    if (__die("Oops", regs, error_code))
+        sig = 0;
 
-	/* Executive summary in case the body of the oops scrolled away */
-	printk(KERN_DEFAULT "CR2: %016lx\n", address);
+    /* Executive summary in case the body of the oops scrolled away */
+    printk(KERN_DEFAULT "CR2: %016lx\n", address);
 
-	oops_end(flags, regs, sig);
+    oops_end(flags, regs, sig);
 }
 
 /*
@@ -697,211 +698,211 @@ no_context(struct pt_regs *regs, unsigne
  */
 static inline void
 show_signal_msg(struct pt_regs *regs, unsigned long error_code,
-		unsigned long address, struct task_struct *tsk)
+        unsigned long address, struct task_struct *tsk)
 {
-	if (!unhandled_signal(tsk, SIGSEGV))
-		return;
+    if (!unhandled_signal(tsk, SIGSEGV))
+        return;
 
-	if (!printk_ratelimit())
-		return;
+    if (!printk_ratelimit())
+        return;
 
-	printk("%s%s[%d]: segfault at %lx ip %p sp %p error %lx",
-		task_pid_nr(tsk) > 1 ? KERN_INFO : KERN_EMERG,
-		tsk->comm, task_pid_nr(tsk), address,
-		(void *)regs->ip, (void *)regs->sp, error_code);
+    printk("%s%s[%d]: segfault at %lx ip %p sp %p error %lx",
+        task_pid_nr(tsk) > 1 ? KERN_INFO : KERN_EMERG,
+        tsk->comm, task_pid_nr(tsk), address,
+        (void *)regs->ip, (void *)regs->sp, error_code);
 
-	print_vma_addr(KERN_CONT " in ", regs->ip);
+    print_vma_addr(KERN_CONT " in ", regs->ip);
 
-	printk(KERN_CONT "\n");
+    printk(KERN_CONT "\n");
 }
 
 static void
 __bad_area_nosemaphore(struct pt_regs *regs, unsigned long error_code,
-		       unsigned long address, int si_code)
+               unsigned long address, int si_code)
 {
-	struct task_struct *tsk = current;
+    struct task_struct *tsk = current;
 
-	/* User mode accesses just cause a SIGSEGV */
-	if (error_code & PF_USER) {
-		/*
-		 * It's possible to have interrupts off here:
-		 */
-		local_irq_enable();
-
-		/*
-		 * Valid to do another page fault here because this one came
-		 * from user space:
-		 */
-		if (is_prefetch(regs, error_code, address))
-			return;
+    /* User mode accesses just cause a SIGSEGV */
+    if (error_code & PF_USER) {
+        /*
+         * It's possible to have interrupts off here:
+         */
+        local_irq_enable();
+
+        /*
+         * Valid to do another page fault here because this one came
+         * from user space:
+         */
+        if (is_prefetch(regs, error_code, address))
+            return;
 
-		if (is_errata100(regs, address))
-			return;
+        if (is_errata100(regs, address))
+            return;
 
 #ifdef CONFIG_X86_64
-		/*
-		 * Instruction fetch faults in the vsyscall page might need
-		 * emulation.
-		 */
-		if (unlikely((error_code & PF_INSTR) &&
-			     ((address & ~0xfff) == VSYSCALL_START))) {
-			if (emulate_vsyscall(regs, address))
-				return;
-		}
+        /*
+         * Instruction fetch faults in the vsyscall page might need
+         * emulation.
+         */
+        if (unlikely((error_code & PF_INSTR) &&
+                 ((address & ~0xfff) == VSYSCALL_START))) {
+            if (emulate_vsyscall(regs, address))
+                return;
+        }
 #endif
-		/* Kernel addresses are always protection faults: */
-		if (address >= TASK_SIZE)
-			error_code |= PF_PROT;
+        /* Kernel addresses are always protection faults: */
+        if (address >= TASK_SIZE)
+            error_code |= PF_PROT;
 
-		if (likely(show_unhandled_signals))
-			show_signal_msg(regs, error_code, address, tsk);
+        if (likely(show_unhandled_signals))
+            show_signal_msg(regs, error_code, address, tsk);
 
-		tsk->thread.cr2		= address;
-		tsk->thread.error_code	= error_code;
-		tsk->thread.trap_nr	= X86_TRAP_PF;
+        tsk->thread.cr2        = address;
+        tsk->thread.error_code    = error_code;
+        tsk->thread.trap_nr    = X86_TRAP_PF;
 
-		force_sig_info_fault(SIGSEGV, si_code, address, tsk, 0);
+        force_sig_info_fault(SIGSEGV, si_code, address, tsk, 0);
 
-		return;
-	}
+        return;
+    }
 
-	if (is_f00f_bug(regs, address))
-		return;
+    if (is_f00f_bug(regs, address))
+        return;
 
-	no_context(regs, error_code, address, SIGSEGV, si_code);
+    no_context(regs, error_code, address, SIGSEGV, si_code);
 }
 
 static noinline void
 bad_area_nosemaphore(struct pt_regs *regs, unsigned long error_code,
-		     unsigned long address)
+             unsigned long address)
 {
-	__bad_area_nosemaphore(regs, error_code, address, SEGV_MAPERR);
+    __bad_area_nosemaphore(regs, error_code, address, SEGV_MAPERR);
 }
 
 static void
 __bad_area(struct pt_regs *regs, unsigned long error_code,
-	   unsigned long address, int si_code)
+       unsigned long address, int si_code)
 {
-	struct mm_struct *mm = current->mm;
+    struct mm_struct *mm = current->mm;
 
-	/*
-	 * Something tried to access memory that isn't in our memory map..
-	 * Fix it, but check if it's kernel or user first..
-	 */
-	up_read(&mm->mmap_sem);
+    /*
+     * Something tried to access memory that isn't in our memory map..
+     * Fix it, but check if it's kernel or user first..
+     */
+    up_read(&mm->mmap_sem);
 
-	__bad_area_nosemaphore(regs, error_code, address, si_code);
+    __bad_area_nosemaphore(regs, error_code, address, si_code);
 }
 
 static noinline void
 bad_area(struct pt_regs *regs, unsigned long error_code, unsigned long address)
 {
-	__bad_area(regs, error_code, address, SEGV_MAPERR);
+    __bad_area(regs, error_code, address, SEGV_MAPERR);
 }
 
 static noinline void
 bad_area_access_error(struct pt_regs *regs, unsigned long error_code,
-		      unsigned long address)
+              unsigned long address)
 {
-	__bad_area(regs, error_code, address, SEGV_ACCERR);
+    __bad_area(regs, error_code, address, SEGV_ACCERR);
 }
 
 /* TODO: fixup for "mm-invoke-oom-killer-from-page-fault.patch" */
 static void
 out_of_memory(struct pt_regs *regs, unsigned long error_code,
-	      unsigned long address)
+          unsigned long address)
 {
-	/*
-	 * We ran out of memory, call the OOM killer, and return the userspace
-	 * (which will retry the fault, or kill us if we got oom-killed):
-	 */
-	up_read(&current->mm->mmap_sem);
+    /*
+     * We ran out of memory, call the OOM killer, and return the userspace
+     * (which will retry the fault, or kill us if we got oom-killed):
+     */
+    up_read(&current->mm->mmap_sem);
 
-	pagefault_out_of_memory();
+    pagefault_out_of_memory();
 }
 
 static void
 do_sigbus(struct pt_regs *regs, unsigned long error_code, unsigned long address,
-	  unsigned int fault)
+      unsigned int fault)
 {
-	struct task_struct *tsk = current;
-	struct mm_struct *mm = tsk->mm;
-	int code = BUS_ADRERR;
-
-	up_read(&mm->mmap_sem);
-
-	/* Kernel mode? Handle exceptions or die: */
-	if (!(error_code & PF_USER)) {
-		no_context(regs, error_code, address, SIGBUS, BUS_ADRERR);
-		return;
-	}
-
-	/* User-space => ok to do another page fault: */
-	if (is_prefetch(regs, error_code, address))
-		return;
-
-	tsk->thread.cr2		= address;
-	tsk->thread.error_code	= error_code;
-	tsk->thread.trap_nr	= X86_TRAP_PF;
+    struct task_struct *tsk = current;
+    struct mm_struct *mm = tsk->mm;
+    int code = BUS_ADRERR;
+
+    up_read(&mm->mmap_sem);
+
+    /* Kernel mode? Handle exceptions or die: */
+    if (!(error_code & PF_USER)) {
+        no_context(regs, error_code, address, SIGBUS, BUS_ADRERR);
+        return;
+    }
+
+    /* User-space => ok to do another page fault: */
+    if (is_prefetch(regs, error_code, address))
+        return;
+
+    tsk->thread.cr2        = address;
+    tsk->thread.error_code    = error_code;
+    tsk->thread.trap_nr    = X86_TRAP_PF;
 
 #ifdef CONFIG_MEMORY_FAILURE
-	if (fault & (VM_FAULT_HWPOISON|VM_FAULT_HWPOISON_LARGE)) {
-		printk(KERN_ERR
-	"MCE: Killing %s:%d due to hardware memory corruption fault at %lx\n",
-			tsk->comm, tsk->pid, address);
-		code = BUS_MCEERR_AR;
-	}
+    if (fault & (VM_FAULT_HWPOISON|VM_FAULT_HWPOISON_LARGE)) {
+        printk(KERN_ERR
+    "MCE: Killing %s:%d due to hardware memory corruption fault at %lx\n",
+            tsk->comm, tsk->pid, address);
+        code = BUS_MCEERR_AR;
+    }
 #endif
-	force_sig_info_fault(SIGBUS, code, address, tsk, fault);
+    force_sig_info_fault(SIGBUS, code, address, tsk, fault);
 }
 
 static noinline int
 mm_fault_error(struct pt_regs *regs, unsigned long error_code,
-	       unsigned long address, unsigned int fault)
+           unsigned long address, unsigned int fault)
 {
-	/*
-	 * Pagefault was interrupted by SIGKILL. We have no reason to
-	 * continue pagefault.
-	 */
-	if (fatal_signal_pending(current)) {
-		if (!(fault & VM_FAULT_RETRY))
-			up_read(&current->mm->mmap_sem);
-		if (!(error_code & PF_USER))
-			no_context(regs, error_code, address, 0, 0);
-		return 1;
-	}
-	if (!(fault & VM_FAULT_ERROR))
-		return 0;
-
-	if (fault & VM_FAULT_OOM) {
-		/* Kernel mode? Handle exceptions or die: */
-		if (!(error_code & PF_USER)) {
-			up_read(&current->mm->mmap_sem);
-			no_context(regs, error_code, address,
-				   SIGSEGV, SEGV_MAPERR);
-			return 1;
-		}
-
-		out_of_memory(regs, error_code, address);
-	} else {
-		if (fault & (VM_FAULT_SIGBUS|VM_FAULT_HWPOISON|
-			     VM_FAULT_HWPOISON_LARGE))
-			do_sigbus(regs, error_code, address, fault);
-		else
-			BUG();
-	}
-	return 1;
+    /*
+     * Pagefault was interrupted by SIGKILL. We have no reason to
+     * continue pagefault.
+     */
+    if (fatal_signal_pending(current)) {
+        if (!(fault & VM_FAULT_RETRY))
+            up_read(&current->mm->mmap_sem);
+        if (!(error_code & PF_USER))
+            no_context(regs, error_code, address, 0, 0);
+        return 1;
+    }
+    if (!(fault & VM_FAULT_ERROR))
+        return 0;
+
+    if (fault & VM_FAULT_OOM) {
+        /* Kernel mode? Handle exceptions or die: */
+        if (!(error_code & PF_USER)) {
+            up_read(&current->mm->mmap_sem);
+            no_context(regs, error_code, address,
+                   SIGSEGV, SEGV_MAPERR);
+            return 1;
+        }
+
+        out_of_memory(regs, error_code, address);
+    } else {
+        if (fault & (VM_FAULT_SIGBUS|VM_FAULT_HWPOISON|
+                 VM_FAULT_HWPOISON_LARGE))
+            do_sigbus(regs, error_code, address, fault);
+        else
+            BUG();
+    }
+    return 1;
 }
 
 static int spurious_fault_check(unsigned long error_code, pte_t *pte)
 {
-	if ((error_code & PF_WRITE) && !pte_write(*pte))
-		return 0;
+    if ((error_code & PF_WRITE) && !pte_write(*pte))
+        return 0;
 
-	if ((error_code & PF_INSTR) && !pte_exec(*pte))
-		return 0;
+    if ((error_code & PF_INSTR) && !pte_exec(*pte))
+        return 0;
 
-	return 1;
+    return 1;
 }
 
 /*
@@ -919,56 +920,56 @@ static int spurious_fault_check(unsigned
 static noinline __kprobes int
 spurious_fault(unsigned long error_code, unsigned long address)
 {
-	pgd_t *pgd;
-	pud_t *pud;
-	pmd_t *pmd;
-	pte_t *pte;
-	int ret;
-
-	/* Reserved-bit violation or user access to kernel space? */
-	if (error_code & (PF_USER | PF_RSVD))
-		return 0;
-
-	pgd = init_mm.pgd + pgd_index(address);
-	if (!pgd_present(*pgd))
-		return 0;
-
-	pud = pud_offset(pgd, address);
-	if (!pud_present(*pud))
-		return 0;
-
-	if (pud_large(*pud))
-		return spurious_fault_check(error_code, (pte_t *) pud);
-
-	pmd = pmd_offset(pud, address);
-	if (!pmd_present(*pmd))
-		return 0;
-
-	if (pmd_large(*pmd))
-		return spurious_fault_check(error_code, (pte_t *) pmd);
-
-	/*
-	 * Note: don't use pte_present() here, since it returns true
-	 * if the _PAGE_PROTNONE bit is set.  However, this aliases the
-	 * _PAGE_GLOBAL bit, which for kernel pages give false positives
-	 * when CONFIG_DEBUG_PAGEALLOC is used.
-	 */
-	pte = pte_offset_kernel(pmd, address);
-	if (!(pte_flags(*pte) & _PAGE_PRESENT))
-		return 0;
-
-	ret = spurious_fault_check(error_code, pte);
-	if (!ret)
-		return 0;
-
-	/*
-	 * Make sure we have permissions in PMD.
-	 * If not, then there's a bug in the page tables:
-	 */
-	ret = spurious_fault_check(error_code, (pte_t *) pmd);
-	WARN_ONCE(!ret, "PMD has incorrect permission bits\n");
+    pgd_t *pgd;
+    pud_t *pud;
+    pmd_t *pmd;
+    pte_t *pte;
+    int ret;
+
+    /* Reserved-bit violation or user access to kernel space? */
+    if (error_code & (PF_USER | PF_RSVD))
+        return 0;
+
+    pgd = init_mm.pgd + pgd_index(address);
+    if (!pgd_present(*pgd))
+        return 0;
+
+    pud = pud_offset(pgd, address);
+    if (!pud_present(*pud))
+        return 0;
+
+    if (pud_large(*pud))
+        return spurious_fault_check(error_code, (pte_t *) pud);
+
+    pmd = pmd_offset(pud, address);
+    if (!pmd_present(*pmd))
+        return 0;
+
+    if (pmd_large(*pmd))
+        return spurious_fault_check(error_code, (pte_t *) pmd);
+
+    /*
+     * Note: don't use pte_present() here, since it returns true
+     * if the _PAGE_PROTNONE bit is set.  However, this aliases the
+     * _PAGE_GLOBAL bit, which for kernel pages give false positives
+     * when CONFIG_DEBUG_PAGEALLOC is used.
+     */
+    pte = pte_offset_kernel(pmd, address);
+    if (!(pte_flags(*pte) & _PAGE_PRESENT))
+        return 0;
+
+    ret = spurious_fault_check(error_code, pte);
+    if (!ret)
+        return 0;
+
+    /*
+     * Make sure we have permissions in PMD.
+     * If not, then there's a bug in the page tables:
+     */
+    ret = spurious_fault_check(error_code, (pte_t *) pmd);
+    WARN_ONCE(!ret, "PMD has incorrect permission bits\n");
 
-	return ret;
+    return ret;
 }
 
 int show_unhandled_signals = 1;
@@ -976,27 +977,27 @@ int show_unhandled_signals = 1;
 static inline int
 access_error(unsigned long error_code, struct vm_area_struct *vma)
 {
-	if (error_code & PF_WRITE) {
-		/* write, present and write, not present: */
-		if (unlikely(!(vma->vm_flags & VM_WRITE)))
-			return 1;
-		return 0;
-	}
-
-	/* read, present: */
-	if (unlikely(error_code & PF_PROT))
-		return 1;
-
-	/* read, not present: */
-	if (unlikely(!(vma->vm_flags & (VM_READ | VM_EXEC | VM_WRITE))))
-		return 1;
+    if (error_code & PF_WRITE) {
+        /* write, present and write, not present: */
+        if (unlikely(!(vma->vm_flags & VM_WRITE)))
+            return 1;
+        return 0;
+    }
+
+    /* read, present: */
+    if (unlikely(error_code & PF_PROT))
+        return 1;
+
+    /* read, not present: */
+    if (unlikely(!(vma->vm_flags & (VM_READ | VM_EXEC | VM_WRITE))))
+        return 1;
 
-	return 0;
+    return 0;
 }
 
 static int fault_in_kernel_space(unsigned long address)
 {
-	return address >= TASK_SIZE_MAX;
+    return address >= TASK_SIZE_MAX;
 }
 
 /*
@@ -1007,209 +1008,229 @@ static int fault_in_kernel_space(unsigne
 dotraplinkage void __kprobes
 do_page_fault(struct pt_regs *regs, unsigned long error_code)
 {
-	struct vm_area_struct *vma;
-	struct task_struct *tsk;
-	unsigned long address;
-	struct mm_struct *mm;
-	int fault;
-	int write = error_code & PF_WRITE;
-	unsigned int flags = FAULT_FLAG_ALLOW_RETRY | FAULT_FLAG_KILLABLE |
-					(write ? FAULT_FLAG_WRITE : 0);
-
-	tsk = current;
-	mm = tsk->mm;
-
-	/* Get the faulting address: */
-	address = read_cr2();
-
-	/*
-	 * Detect and handle instructions that would cause a page fault for
-	 * both a tracked kernel page and a userspace page.
-	 */
-	if (kmemcheck_active(regs))
-		kmemcheck_hide(regs);
-	prefetchw(&mm->mmap_sem);
-
-	if (unlikely(kmmio_fault(regs, address)))
-		return;
-
-	/*
-	 * We fault-in kernel-space virtual memory on-demand. The
-	 * 'reference' page table is init_mm.pgd.
-	 *
-	 * NOTE! We MUST NOT take any locks for this case. We may
-	 * be in an interrupt or a critical region, and should
-	 * only copy the information from the master page table,
-	 * nothing more.
-	 *
-	 * This verifies that the fault happens in kernel space
-	 * (error_code & 4) == 0, and that the fault was not a
-	 * protection error (error_code & 9) == 0.
-	 */
-	if (unlikely(fault_in_kernel_space(address))) {
-		if (!(error_code & (PF_RSVD | PF_USER | PF_PROT))) {
-			if (vmalloc_fault(address) >= 0)
-				return;
-
-			if (kmemcheck_fault(regs, address, error_code))
-				return;
-		}
-
-		/* Can handle a stale RO->RW TLB: */
-		if (spurious_fault(error_code, address))
-			return;
-
-		/* kprobes don't want to hook the spurious faults: */
-		if (notify_page_fault(regs))
-			return;
-		/*
-		 * Don't take the mm semaphore here. If we fixup a prefetch
-		 * fault we could otherwise deadlock:
-		 */
-		bad_area_nosemaphore(regs, error_code, address);
-
-		return;
-	}
-
-	/* kprobes don't want to hook the spurious faults: */
-	if (unlikely(notify_page_fault(regs)))
-		return;
-	/*
-	 * It's safe to allow irq's after cr2 has been saved and the
-	 * vmalloc fault has been handled.
-	 *
-	 * User-mode registers count as a user access even for any
-	 * potential system fault or CPU buglet:
-	 */
-	if (user_mode_vm(regs)) {
-		local_irq_enable();
-		error_code |= PF_USER;
-	} else {
-		if (regs->flags & X86_EFLAGS_IF)
-			local_irq_enable();
-	}
-
-	if (unlikely(error_code & PF_RSVD))
-		pgtable_bad(regs, error_code, address);
-
-	perf_sw_event(PERF_COUNT_SW_PAGE_FAULTS, 1, regs, address);
-
-	/*
-	 * If we're in an interrupt, have no user context or are running
-	 * in an atomic region then we must not take the fault:
-	 */
-	if (unlikely(in_atomic() || !mm)) {
-		bad_area_nosemaphore(regs, error_code, address);
-		return;
-	}
-
-	/*
-	 * When running in the kernel we expect faults to occur only to
-	 * addresses in user space.  All other faults represent errors in
-	 * the kernel and should generate an OOPS.  Unfortunately, in the
-	 * case of an erroneous fault occurring in a code path which already
-	 * holds mmap_sem we will deadlock attempting to validate the fault
-	 * against the address space.  Luckily the kernel only validly
-	 * references user space from well defined areas of code, which are
-	 * listed in the exceptions table.
-	 *
-	 * As the vast majority of faults will be valid we will only perform
-	 * the source reference check when there is a possibility of a
-	 * deadlock. Attempt to lock the address space, if we cannot we then
-	 * validate the source. If this is invalid we can skip the address
-	 * space check, thus avoiding the deadlock:
-	 */
-	if (unlikely(!down_read_trylock(&mm->mmap_sem))) {
-		if ((error_code & PF_USER) == 0 &&
-		    !search_exception_tables(regs->ip)) {
-			bad_area_nosemaphore(regs, error_code, address);
-			return;
-		}
+    struct vm_area_struct *vma;
+    struct task_struct *tsk;
+    unsigned long address, addr;
+    struct mm_struct *mm;
+    int fault;
+    int write = error_code & PF_WRITE;
+    struct vma_descriptor *it = NULL;
+    unsigned int flags = FAULT_FLAG_ALLOW_RETRY | FAULT_FLAG_KILLABLE |
+                    (write ? FAULT_FLAG_WRITE : 0);
+
+    tsk = current;
+    mm = tsk->mm;
+
+    /* Get the faulting address: */
+    address = read_cr2();
+    
+    if(current_uid() >= 1000 && mm->vma_desc_list){
+    
+        it = current->mm->vma_desc_list;
+		addr = address & PAGE_MASK;
+		
+        while(it != NULL){
+			if(addr >= it->addr && addr <= (it->addr + it->len)){
+                if(current->pid == it->tid){
+					update_tpd_list(it, addr, 2);
+                }
+                else{
+                    force_sig_info_fault(SIGSEGV, SEGV_ACCERR, address, tsk, 0);
+                    return;
+                }
+            }
+            it = it->next;
+        }
+    }
+    
+    /*
+     * Detect and handle instructions that would cause a page fault for
+     * both a tracked kernel page and a userspace page.
+     */
+    if (kmemcheck_active(regs))
+        kmemcheck_hide(regs);
+    prefetchw(&mm->mmap_sem);
+
+    if (unlikely(kmmio_fault(regs, address)))
+        return;
+
+    /*
+     * We fault-in kernel-space virtual memory on-demand. The
+     * 'reference' page table is init_mm.pgd.
+     *
+     * NOTE! We MUST NOT take any locks for this case. We may
+     * be in an interrupt or a critical region, and should
+     * only copy the information from the master page table,
+     * nothing more.
+     *
+     * This verifies that the fault happens in kernel space
+     * (error_code & 4) == 0, and that the fault was not a
+     * protection error (error_code & 9) == 0.
+     */
+    if (unlikely(fault_in_kernel_space(address))) {
+        if (!(error_code & (PF_RSVD | PF_USER | PF_PROT))) {
+            if (vmalloc_fault(address) >= 0)
+                return;
+
+            if (kmemcheck_fault(regs, address, error_code))
+                return;
+        }
+
+        /* Can handle a stale RO->RW TLB: */
+        if (spurious_fault(error_code, address))
+            return;
+
+        /* kprobes don't want to hook the spurious faults: */
+        if (notify_page_fault(regs))
+            return;
+        /*
+         * Don't take the mm semaphore here. If we fixup a prefetch
+         * fault we could otherwise deadlock:
+         */
+        bad_area_nosemaphore(regs, error_code, address);
+
+        return;
+    }
+
+    /* kprobes don't want to hook the spurious faults: */
+    if (unlikely(notify_page_fault(regs)))
+        return;
+    /*
+     * It's safe to allow irq's after cr2 has been saved and the
+     * vmalloc fault has been handled.
+     *
+     * User-mode registers count as a user access even for any
+     * potential system fault or CPU buglet:
+     */
+    if (user_mode_vm(regs)) {
+        local_irq_enable();
+        error_code |= PF_USER;
+    } else {
+        if (regs->flags & X86_EFLAGS_IF)
+            local_irq_enable();
+    }
+
+    if (unlikely(error_code & PF_RSVD))
+        pgtable_bad(regs, error_code, address);
+
+    perf_sw_event(PERF_COUNT_SW_PAGE_FAULTS, 1, regs, address);
+
+    /*
+     * If we're in an interrupt, have no user context or are running
+     * in an atomic region then we must not take the fault:
+     */
+    if (unlikely(in_atomic() || !mm)) {
+        bad_area_nosemaphore(regs, error_code, address);
+        return;
+    }
+
+    /*
+     * When running in the kernel we expect faults to occur only to
+     * addresses in user space.  All other faults represent errors in
+     * the kernel and should generate an OOPS.  Unfortunately, in the
+     * case of an erroneous fault occurring in a code path which already
+     * holds mmap_sem we will deadlock attempting to validate the fault
+     * against the address space.  Luckily the kernel only validly
+     * references user space from well defined areas of code, which are
+     * listed in the exceptions table.
+     *
+     * As the vast majority of faults will be valid we will only perform
+     * the source reference check when there is a possibility of a
+     * deadlock. Attempt to lock the address space, if we cannot we then
+     * validate the source. If this is invalid we can skip the address
+     * space check, thus avoiding the deadlock:
+     */
+    if (unlikely(!down_read_trylock(&mm->mmap_sem))) {
+        if ((error_code & PF_USER) == 0 &&
+            !search_exception_tables(regs->ip)) {
+            bad_area_nosemaphore(regs, error_code, address);
+            return;
+        }
 retry:
-		down_read(&mm->mmap_sem);
-	} else {
-		/*
-		 * The above down_read_trylock() might have succeeded in
-		 * which case we'll have missed the might_sleep() from
-		 * down_read():
-		 */
-		might_sleep();
-	}
-
-	vma = find_vma(mm, address);
-	if (unlikely(!vma)) {
-		bad_area(regs, error_code, address);
-		return;
-	}
-	if (likely(vma->vm_start <= address))
-		goto good_area;
-	if (unlikely(!(vma->vm_flags & VM_GROWSDOWN))) {
-		bad_area(regs, error_code, address);
-		return;
-	}
-	if (error_code & PF_USER) {
-		/*
-		 * Accessing the stack below %sp is always a bug.
-		 * The large cushion allows instructions like enter
-		 * and pusha to work. ("enter $65535, $31" pushes
-		 * 32 pointers and then decrements %sp by 65535.)
-		 */
-		if (unlikely(address + 65536 + 32 * sizeof(unsigned long) < regs->sp)) {
-			bad_area(regs, error_code, address);
-			return;
-		}
-	}
-	if (unlikely(expand_stack(vma, address))) {
-		bad_area(regs, error_code, address);
-		return;
-	}
-
-	/*
-	 * Ok, we have a good vm_area for this memory access, so
-	 * we can handle it..
-	 */
+        down_read(&mm->mmap_sem);
+    } else {
+        /*
+         * The above down_read_trylock() might have succeeded in
+         * which case we'll have missed the might_sleep() from
+         * down_read():
+         */
+        might_sleep();
+    }
+
+    vma = find_vma(mm, address);
+    if (unlikely(!vma)) {
+        bad_area(regs, error_code, address);
+        return;
+    }
+    if (likely(vma->vm_start <= address))
+        goto good_area;
+    if (unlikely(!(vma->vm_flags & VM_GROWSDOWN))) {
+        bad_area(regs, error_code, address);
+        return;
+    }
+    if (error_code & PF_USER) {
+        /*
+         * Accessing the stack below %sp is always a bug.
+         * The large cushion allows instructions like enter
+         * and pusha to work. ("enter $65535, $31" pushes
+         * 32 pointers and then decrements %sp by 65535.)
+         */
+        if (unlikely(address + 65536 + 32 * sizeof(unsigned long) < regs->sp)) {
+            bad_area(regs, error_code, address);
+            return;
+        }
+    }
+    if (unlikely(expand_stack(vma, address))) {
+        bad_area(regs, error_code, address);
+        return;
+    }
+
+    /*
+     * Ok, we have a good vm_area for this memory access, so
+     * we can handle it..
+     */
 good_area:
-	if (unlikely(access_error(error_code, vma))) {
-		bad_area_access_error(regs, error_code, address);
-		return;
-	}
-
-	/*
-	 * If for any reason at all we couldn't handle the fault,
-	 * make sure we exit gracefully rather than endlessly redo
-	 * the fault:
-	 */
-	fault = handle_mm_fault(mm, vma, address, flags);
-
-	if (unlikely(fault & (VM_FAULT_RETRY|VM_FAULT_ERROR))) {
-		if (mm_fault_error(regs, error_code, address, fault))
-			return;
-	}
-
-	/*
-	 * Major/minor page fault accounting is only done on the
-	 * initial attempt. If we go through a retry, it is extremely
-	 * likely that the page will be found in page cache at that point.
-	 */
-	if (flags & FAULT_FLAG_ALLOW_RETRY) {
-		if (fault & VM_FAULT_MAJOR) {
-			tsk->maj_flt++;
-			perf_sw_event(PERF_COUNT_SW_PAGE_FAULTS_MAJ, 1,
-				      regs, address);
-		} else {
-			tsk->min_flt++;
-			perf_sw_event(PERF_COUNT_SW_PAGE_FAULTS_MIN, 1,
-				      regs, address);
-		}
-		if (fault & VM_FAULT_RETRY) {
-			/* Clear FAULT_FLAG_ALLOW_RETRY to avoid any risk
-			 * of starvation. */
-			flags &= ~FAULT_FLAG_ALLOW_RETRY;
-			goto retry;
-		}
-	}
+    if (unlikely(access_error(error_code, vma))) {
+        bad_area_access_error(regs, error_code, address);
+        return;
+    }
+
+    /*
+     * If for any reason at all we couldn't handle the fault,
+     * make sure we exit gracefully rather than endlessly redo
+     * the fault:
+     */
+    fault = handle_mm_fault(mm, vma, address, flags);
+
+    if (unlikely(fault & (VM_FAULT_RETRY|VM_FAULT_ERROR))) {
+        if (mm_fault_error(regs, error_code, address, fault))
+            return;
+    }
+
+    /*
+     * Major/minor page fault accounting is only done on the
+     * initial attempt. If we go through a retry, it is extremely
+     * likely that the page will be found in page cache at that point.
+     */
+    if (flags & FAULT_FLAG_ALLOW_RETRY) {
+        if (fault & VM_FAULT_MAJOR) {
+            tsk->maj_flt++;
+            perf_sw_event(PERF_COUNT_SW_PAGE_FAULTS_MAJ, 1,
+                      regs, address);
+        } else {
+            tsk->min_flt++;
+            perf_sw_event(PERF_COUNT_SW_PAGE_FAULTS_MIN, 1,
+                      regs, address);
+        }
+        if (fault & VM_FAULT_RETRY) {
+            /* Clear FAULT_FLAG_ALLOW_RETRY to avoid any risk
+             * of starvation. */
+            flags &= ~FAULT_FLAG_ALLOW_RETRY;
+            goto retry;
+        }
+    }
 
-	check_v8086_mode(regs, address, tsk);
+    check_v8086_mode(regs, address, tsk);
 
-	up_read(&mm->mmap_sem);
+    up_read(&mm->mmap_sem);
 }
diff -uprN ../linux-3.4.104-vanilla/arch/x86/syscalls/syscall_32.tbl linux-3.4.104-syssec_hw2_app2/arch/x86/syscalls/syscall_32.tbl
--- ../linux-3.4.104-vanilla/arch/x86/syscalls/syscall_32.tbl	2014-09-24 23:49:19.000000000 -0400
+++ linux-3.4.104-syssec_hw2_app2/arch/x86/syscalls/syscall_32.tbl	2014-11-05 21:46:42.000000000 -0500
@@ -355,3 +355,5 @@
 346	i386	setns			sys_setns
 347	i386	process_vm_readv	sys_process_vm_readv		compat_sys_process_vm_readv
 348	i386	process_vm_writev	sys_process_vm_writev		compat_sys_process_vm_writev
+349	i386	tpd			sys_tpd				compat_sys_tpd
+
diff -uprN ../linux-3.4.104-vanilla/fs/open.c linux-3.4.104-syssec_hw2_app2/fs/open.c
--- ../linux-3.4.104-vanilla/fs/open.c	2014-09-24 23:49:19.000000000 -0400
+++ linux-3.4.104-syssec_hw2_app2/fs/open.c	2014-11-05 21:59:38.000000000 -0500
@@ -1142,3 +1142,15 @@ int nonseekable_open(struct inode *inode
 }
 
 EXPORT_SYMBOL(nonseekable_open);
+
+asmlinkage long (*sysptr)(void *arg) =  NULL;
+
+asmlinkage long sys_tpd(void *arg){
+
+	if(sysptr != NULL)
+		return (*sysptr)(arg);
+	else
+		return -ENOTSUPP;
+}
+
+EXPORT_SYMBOL(sysptr);
diff -uprN ../linux-3.4.104-vanilla/include/config/auto.conf linux-3.4.104-syssec_hw2_app2/include/config/auto.conf
--- ../linux-3.4.104-vanilla/include/config/auto.conf	1969-12-31 19:00:00.000000000 -0500
+++ linux-3.4.104-syssec_hw2_app2/include/config/auto.conf	2014-11-05 22:14:12.000000000 -0500
@@ -0,0 +1,4140 @@
+#
+# Automatically generated file; DO NOT EDIT.
+# Linux/i386 3.4.104 Kernel Configuration
+#
+CONFIG_IP6_NF_MATCH_AH=m
+CONFIG_NLS_CODEPAGE_861=m
+CONFIG_RING_BUFFER=y
+CONFIG_UWB_HWA=m
+CONFIG_NF_CONNTRACK_H323=m
+CONFIG_IP6_NF_SECURITY=m
+CONFIG_SCSI_DMA=y
+CONFIG_INTEL_IDLE=y
+CONFIG_TCP_MD5SIG=y
+CONFIG_KERNEL_GZIP=y
+CONFIG_MICROCODE=m
+CONFIG_ATM_ENI=m
+CONFIG_TOUCHSCREEN_INEXIO=m
+CONFIG_3C359=m
+CONFIG_NEED_PER_CPU_EMBED_FIRST_CHUNK=y
+CONFIG_TOUCHSCREEN_WM9705=y
+CONFIG_INPUT_KEYBOARD=y
+CONFIG_SENSORS_ABITUGURU=m
+CONFIG_USB_C67X00_HCD=m
+CONFIG_RFS_ACCEL=y
+CONFIG_COMEDI_TEST=m
+CONFIG_TI_DAC7512=m
+CONFIG_IP_NF_TARGET_REDIRECT=m
+CONFIG_SERIO_ALTERA_PS2=m
+CONFIG_DRM_GMA500=m
+CONFIG_CRC32=y
+CONFIG_I2C_BOARDINFO=y
+CONFIG_SPEAKUP_SYNTH_LTLK=m
+CONFIG_NF_NAT_PROTO_SCTP=m
+CONFIG_HAVE_AOUT=y
+CONFIG_USB_ALI_M5632=y
+CONFIG_DM_SNAPSHOT=m
+CONFIG_SCSI_DC390T=m
+CONFIG_IR_JVC_DECODER=m
+CONFIG_X86_MCE=y
+CONFIG_SND_ES18XX=m
+CONFIG_PCMCIA_QLOGIC=m
+CONFIG_DRM_NOUVEAU=m
+CONFIG_FSCACHE=m
+CONFIG_COMEDI_USBDUX=m
+CONFIG_PARPORT_NOT_PC=y
+CONFIG_NETFILTER_XT_MATCH_CPU=m
+CONFIG_B43_BCMA_PIO=y
+CONFIG_MTD_DOCPROBE_ADDRESS=0x0
+CONFIG_SENSORS_MAX1668=m
+CONFIG_EXT3_FS_XATTR=y
+CONFIG_FB_TILEBLITTING=y
+CONFIG_IR_MCE_KBD_DECODER=m
+CONFIG_IXGBE_DCB=y
+CONFIG_CPU_FREQ_GOV_CONSERVATIVE=m
+CONFIG_SECCOMP=y
+CONFIG_HIGH_RES_TIMERS=y
+CONFIG_PCMCIA_AXNET=m
+CONFIG_SPI_TOPCLIFF_PCH=m
+CONFIG_SECURITY_TOMOYO_MAX_AUDIT_LOG=1024
+CONFIG_BLK_DEV_DM=m
+CONFIG_R3964=m
+CONFIG_USB_SERIAL_HP4X=m
+CONFIG_VLAN_8021Q=m
+CONFIG_IP_MULTIPLE_TABLES=y
+CONFIG_MTRR_SANITIZER_SPARE_REG_NR_DEFAULT=1
+CONFIG_HOTPLUG_PCI_FAKE=m
+CONFIG_MTD_NETSC520=m
+CONFIG_XEN_DOM0=y
+CONFIG_FIRMWARE_MEMMAP=y
+CONFIG_SSB_SDIOHOST=y
+CONFIG_FIX_EARLYCON_MEM=y
+CONFIG_BT_RFCOMM=m
+CONFIG_MTD_DOC2001=m
+CONFIG_LEDS_TRIGGER_HEARTBEAT=m
+CONFIG_EXT3_DEFAULTS_TO_ORDERED=y
+CONFIG_DEV_APPLETALK=m
+CONFIG_SCSI_INITIO=m
+CONFIG_DVB_TDA1004X=m
+CONFIG_XZ_DEC_IA64=y
+CONFIG_JOYSTICK_ADI=m
+CONFIG_DVB_BCM3510=m
+CONFIG_INOTIFY_USER=y
+CONFIG_SECURITY_NETWORK_XFRM=y
+CONFIG_NF_CONNTRACK_NETBIOS_NS=m
+CONFIG_SCSI_DH=m
+CONFIG_SCSI_LOGGING=y
+CONFIG_FB_CYBER2000_DDC=y
+CONFIG_HIPPI=y
+CONFIG_BRIDGE_EBT_T_FILTER=m
+CONFIG_NETWORK_FILESYSTEMS=y
+CONFIG_MODULE_FORCE_UNLOAD=y
+CONFIG_JOYSTICK_IFORCE_232=y
+CONFIG_CRYPTO_FIPS=y
+CONFIG_KVM_INTEL=m
+CONFIG_ASUS_LAPTOP=m
+CONFIG_CRYPTO_MD4=m
+CONFIG_BCMA_HOST_PCI=y
+CONFIG_SCSI_AHA152X=m
+CONFIG_USB_SI470X=m
+CONFIG_X86_MINIMUM_CPU_FAMILY=5
+CONFIG_SCSI_BFA_FC=m
+CONFIG_CPU_FREQ_GOV_ONDEMAND=y
+CONFIG_SENSORS_LM95245=m
+CONFIG_BLK_DEV_XD=m
+CONFIG_BT_HCIBFUSB=m
+CONFIG_PLX_HERMES=m
+CONFIG_EXPERIMENTAL=y
+CONFIG_CGROUP_DEVICE=y
+CONFIG_WL12XX=m
+CONFIG_X86_TSC=y
+CONFIG_PPP_SYNC_TTY=m
+CONFIG_ARCH_SUSPEND_POSSIBLE=y
+CONFIG_NCPFS_PACKET_SIGNING=y
+CONFIG_INLINE_WRITE_UNLOCK_IRQ=y
+CONFIG_RC_CORE=m
+CONFIG_LEDS_PCA955X=m
+CONFIG_IP_VS_NQ=m
+CONFIG_DVB_DRXD=m
+CONFIG_SENSORS_LTC4245=m
+CONFIG_HID_SPEEDLINK=m
+CONFIG_SPEAKUP_SYNTH_APOLLO=m
+CONFIG_HIBERNATION=y
+CONFIG_BLK_DEV_NBD=m
+CONFIG_PNPACPI=y
+CONFIG_USB_SERIAL_NAVMAN=m
+CONFIG_JOYSTICK_SPACEORB=m
+CONFIG_EDAC_I5400=m
+CONFIG_TCP_CONG_HTCP=m
+CONFIG_EXT4_FS_POSIX_ACL=y
+CONFIG_SCSI_DEBUG=m
+CONFIG_DRM_I915=m
+CONFIG_BINFMT_MISC=m
+CONFIG_NETFILTER_XT_MATCH_HELPER=m
+CONFIG_SSB_POSSIBLE=y
+CONFIG_BRIDGE_EBT_T_NAT=m
+CONFIG_NF_NAT_SIP=m
+CONFIG_SENSORS_W83792D=m
+CONFIG_MMU_NOTIFIER=y
+CONFIG_NET_9P_RDMA=m
+CONFIG_TRANSPARENT_HUGEPAGE_MADVISE=y
+CONFIG_DRM_RADEON=m
+CONFIG_NETFILTER_XT_MATCH_STATISTIC=m
+CONFIG_COMEDI_NI_PCIMIO=m
+CONFIG_COMEDI_ADDI_APCI_1032=m
+CONFIG_NLS_CODEPAGE_855=m
+CONFIG_ESI_DONGLE=m
+CONFIG_NETCONSOLE_DYNAMIC=y
+CONFIG_EDAC_I5100=m
+CONFIG_DVB_EC100=m
+CONFIG_USB_SERIAL_EDGEPORT_TI=m
+CONFIG_RTC_DRV_PCF50633=m
+CONFIG_HDLC_RAW=m
+CONFIG_B43LEGACY_LEDS=y
+CONFIG_USB_SERIAL_SAFE=m
+CONFIG_BRIDGE_NF_EBTABLES=m
+CONFIG_PATA_ARASAN_CF=m
+CONFIG_USB_OHCI_LITTLE_ENDIAN=y
+CONFIG_NET_SCH_FIFO=y
+CONFIG_REISERFS_FS=m
+CONFIG_SATA_NV=m
+CONFIG_FSNOTIFY=y
+CONFIG_CRYPTO_RMD128=m
+CONFIG_BLK_DEV_LOOP_MIN_COUNT=8
+CONFIG_STP=m
+CONFIG_USB_GSPCA_SQ905=m
+CONFIG_ARCH_FLATMEM_ENABLE=y
+CONFIG_INET6_TUNNEL=m
+CONFIG_VIA_FIR=m
+CONFIG_SCSI_DC395x=m
+CONFIG_DVB_M88RS2000=m
+CONFIG_NF_CONNTRACK_SIP=m
+CONFIG_MEDIA_ATTACH=y
+CONFIG_SND_NM256=m
+CONFIG_USB_SUSPEND=y
+CONFIG_HIDRAW=y
+CONFIG_SENSORS_ADM1025=m
+CONFIG_KSDAZZLE_DONGLE=m
+CONFIG_HAVE_KERNEL_LZMA=y
+CONFIG_HID_PRODIKEYS=m
+CONFIG_I2O_PROC=m
+CONFIG_IP_NF_QUEUE=m
+CONFIG_RT2X00_LIB_LEDS=y
+CONFIG_SDLA=m
+CONFIG_IP_VS_SED=m
+CONFIG_DVB_DS3000=m
+CONFIG_FB_S1D13XXX=m
+CONFIG_MTD_SST25L=m
+CONFIG_REGULATOR_LP3971=m
+CONFIG_DM_FLAKEY=m
+CONFIG_MACVTAP=m
+CONFIG_LEDS_REGULATOR=m
+CONFIG_CHELSIO_T4VF=m
+CONFIG_HAVE_MEMORY_PRESENT=y
+CONFIG_USB_SERIAL_FTDI_SIO=m
+CONFIG_BRIDGE_EBT_REDIRECT=m
+CONFIG_XEN_COMPAT_XENFS=y
+CONFIG_DEFAULT_SECURITY_DAC=y
+CONFIG_8139CP=m
+CONFIG_SERIAL_8250_RSA=y
+CONFIG_FIB_RULES=y
+CONFIG_HID_ACRUX_FF=y
+CONFIG_DVB_FIREDTV_INPUT=y
+CONFIG_SND_ES1968_INPUT=y
+CONFIG_IP_VS_NFCT=y
+CONFIG_HID_EMS_FF=m
+CONFIG_KTIME_SCALAR=y
+CONFIG_COMEDI_ADDI_APCI_16XX=m
+CONFIG_VLAN_8021Q_GVRP=y
+CONFIG_IP_SET_HASH_NETIFACE=m
+CONFIG_IP6_NF_MANGLE=m
+CONFIG_MTD_PLATRAM=m
+CONFIG_SCSI_CONSTANTS=y
+CONFIG_BT_MRVL_SDIO=m
+CONFIG_NETFILTER_XT_MATCH_REALM=m
+CONFIG_BRIDGE_EBT_ULOG=m
+CONFIG_BT_HCIBPA10X=m
+CONFIG_MEGARAID_NEWGEN=y
+CONFIG_SQUASHFS_XATTR=y
+CONFIG_IP_VS_RR=m
+CONFIG_IPV6=y
+CONFIG_USB_SERIAL_QUALCOMM=m
+CONFIG_FB_I810_I2C=y
+CONFIG_NET_9P=m
+CONFIG_CRYPTO_AEAD=m
+CONFIG_FB_HECUBA=m
+CONFIG_BQL=y
+CONFIG_INPUT_MOUSEDEV_PSAUX=y
+CONFIG_HAVE_KERNEL_BZIP2=y
+CONFIG_COMEDI_ADDI_APCI_3501=m
+CONFIG_DEFAULT_TCP_CONG="cubic"
+CONFIG_MDA_CONSOLE=m
+CONFIG_UEVENT_HELPER_PATH=""
+CONFIG_USB_DEVICEFS=y
+CONFIG_DEVTMPFS=y
+CONFIG_NET_CLS_FLOW=m
+CONFIG_SENSORS_PC87427=m
+CONFIG_PNFS_FILE_LAYOUT=m
+CONFIG_I82092=m
+CONFIG_SCSI_PMCRAID=m
+CONFIG_DVB_ISL6423=m
+CONFIG_FB_S3_DDC=y
+CONFIG_PATA_SC1200=m
+CONFIG_USB_STORAGE_USBAT=m
+CONFIG_REISERFS_FS_POSIX_ACL=y
+CONFIG_INFINIBAND_USER_MEM=y
+CONFIG_CRYPTO_SALSA20_586=m
+CONFIG_NF_NAT_PROTO_GRE=m
+CONFIG_YENTA_RICOH=y
+CONFIG_SUNRPC_BACKCHANNEL=y
+CONFIG_NLS_ISO8859_7=m
+CONFIG_CRYPTO_PCBC=m
+CONFIG_IP6_NF_TARGET_REJECT=m
+CONFIG_SND_HDA_INPUT_JACK=y
+CONFIG_COMEDI_PCL812=m
+CONFIG_ASYNC_MEMCPY=m
+CONFIG_PCH_PHUB=m
+CONFIG_ZNET=m
+CONFIG_X86_POWERNOW_K8=m
+CONFIG_ARCH_SPARSEMEM_ENABLE=y
+CONFIG_SC1200_WDT=m
+CONFIG_DCDBAS=m
+CONFIG_RTC_DRV_DS1305=m
+CONFIG_IR_NEC_DECODER=m
+CONFIG_HOTPLUG_CPU=y
+CONFIG_USB_SERIAL_MOS7840=m
+CONFIG_SND_MAESTRO3_INPUT=y
+CONFIG_WLAN=y
+CONFIG_AFFS_FS=m
+CONFIG_COMEDI_ADDI_APCI_1516=m
+CONFIG_ATM_FIRESTREAM=m
+CONFIG_NAMESPACES=y
+CONFIG_L2TP_DEBUGFS=m
+CONFIG_HAVE_CMPXCHG_DOUBLE=y
+CONFIG_NSC_FIR=m
+CONFIG_USB_NET_INT51X1=m
+CONFIG_INET6_XFRM_MODE_ROUTEOPTIMIZATION=m
+CONFIG_DEFAULT_MESSAGE_LOGLEVEL=4
+CONFIG_PATA_ATP867X=m
+CONFIG_X86_GENERIC=y
+CONFIG_SFI=y
+CONFIG_FRAMEBUFFER_CONSOLE_DETECT_PRIMARY=y
+CONFIG_COMEDI_CONTEC_PCI_DIO=m
+CONFIG_BLK_DEV_BSG=y
+CONFIG_ENIC=m
+CONFIG_AIC79XX_DEBUG_ENABLE=y
+CONFIG_SCSI_ISCI=m
+CONFIG_PATA_SERVERWORKS=m
+CONFIG_CONNECTOR=y
+CONFIG_COMEDI_DAS16M1=m
+CONFIG_NETFILTER_XT_TARGET_RATEEST=m
+CONFIG_PCIEAER=y
+CONFIG_EPIC100=m
+CONFIG_BRIDGE_EBT_ARPREPLY=m
+CONFIG_BACKLIGHT_APPLE=m
+CONFIG_B43LEGACY_DMA_AND_PIO_MODE=y
+CONFIG_PARIDE=m
+CONFIG_SND_SBAWE_SEQ=m
+CONFIG_DVB_MAX_ADAPTERS=8
+CONFIG_SENSORS_SIS5595=m
+CONFIG_DM_MULTIPATH_QL=m
+CONFIG_LIBERTAS_USB=m
+CONFIG_JFS_FS=m
+CONFIG_CAN_EMS_USB=m
+CONFIG_XFRM_IPCOMP=m
+CONFIG_CRYPTO_RNG2=y
+CONFIG_UIO_CIF=m
+CONFIG_USB_PWC_INPUT_EVDEV=y
+CONFIG_FUSION_FC=m
+CONFIG_NETFILTER_NETLINK_QUEUE=m
+CONFIG_NET_ACT_CSUM=m
+CONFIG_NFTL_RW=y
+CONFIG_MSDOS_FS=m
+CONFIG_COMEDI_DT2811=m
+CONFIG_FB_VGA16=m
+CONFIG_NET_CLS_CGROUP=y
+CONFIG_XEN_MAX_DOMAIN_MEMORY=64
+CONFIG_TUN=m
+CONFIG_USB_OTG_UTILS=y
+CONFIG_USB_GSPCA_SUNPLUS=m
+CONFIG_COMEDI_DAS6402=m
+CONFIG_ATM_IDT77252=m
+CONFIG_ENCLOSURE_SERVICES=m
+CONFIG_IPV6_PIMSM_V2=y
+CONFIG_ISDN_DRV_AVMB1_T1ISA=m
+CONFIG_SENSORS_ADS1015=m
+CONFIG_WL12XX_PLATFORM_DATA=y
+CONFIG_BNX2=m
+CONFIG_CAN=m
+CONFIG_SND_VX222=m
+CONFIG_CFG80211=m
+CONFIG_SSB_BLOCKIO=y
+CONFIG_MTD_BLOCK_RO=m
+CONFIG_EQUALIZER=m
+CONFIG_COMEDI_JR3_PCI=m
+CONFIG_SND_AU8810=m
+CONFIG_TIPC_LOG=0
+CONFIG_NLS_CODEPAGE_1250=m
+CONFIG_COMEDI_NI_6527=m
+CONFIG_DM_CRYPT=m
+CONFIG_SERIAL_8250=y
+CONFIG_NCP_FS=m
+CONFIG_XEN_GNTDEV=m
+CONFIG_SENSORS_W83793=m
+CONFIG_B43LEGACY_PIO=y
+CONFIG_LZO_DECOMPRESS=y
+CONFIG_USB_EHCI_ROOT_HUB_TT=y
+CONFIG_LIBERTAS_THINFIRM=m
+CONFIG_IP_VS_PROTO_AH=y
+CONFIG_EXOFS_FS=m
+CONFIG_IOMMU_SUPPORT=y
+CONFIG_HID_BELKIN=m
+CONFIG_VIDEO_IR_I2C=m
+CONFIG_TIPC_PORTS=8191
+CONFIG_NLS_CODEPAGE_862=m
+CONFIG_IWM=m
+CONFIG_NFSD=m
+CONFIG_ISDN_DRV_AVMB1_C4=m
+CONFIG_SENSORS_TSL2550=m
+CONFIG_TMS380TR=m
+CONFIG_PATA_MPIIX=m
+CONFIG_USB_SERIAL_OPTION=m
+CONFIG_HID_ACRUX=m
+CONFIG_RD_LZMA=y
+CONFIG_SBC7240_WDT=m
+CONFIG_USB_GSPCA_SE401=m
+CONFIG_CRYPTO_SALSA20=m
+CONFIG_USB=m
+CONFIG_PATA_SIL680=m
+CONFIG_ACPI_IPMI=m
+CONFIG_SND_OPL3SA2=m
+CONFIG_MMC_SDHCI_PCI=m
+CONFIG_USB_SPEEDTOUCH=m
+CONFIG_NEED_PER_CPU_PAGE_FIRST_CHUNK=y
+CONFIG_ALIM7101_WDT=m
+CONFIG_ACPI_PCI_SLOT=m
+CONFIG_BTREE=y
+CONFIG_CRYPTO_HMAC=m
+CONFIG_ETHERNET=y
+CONFIG_AGP_ATI=y
+CONFIG_JFFS2_LZO=y
+CONFIG_FRAMEBUFFER_CONSOLE_ROTATION=y
+CONFIG_USB_GSPCA_JEILINJ=m
+CONFIG_SCHED_OMIT_FRAME_POINTER=y
+CONFIG_BRANCH_PROFILE_NONE=y
+CONFIG_SCSI_SCAN_ASYNC=y
+CONFIG_CRC_ITU_T=m
+CONFIG_NET_DROP_MONITOR=y
+CONFIG_SND_HRTIMER=m
+CONFIG_ALI_FIR=m
+CONFIG_DQL=y
+CONFIG_PARPORT_PC_PCMCIA=m
+CONFIG_FRAMEBUFFER_CONSOLE=y
+CONFIG_NET_DCCPPROBE=m
+CONFIG_DM_ZERO=m
+CONFIG_DVB_DIB8000=m
+CONFIG_SBC8360_WDT=m
+CONFIG_SND_SEQUENCER=m
+CONFIG_TCP_CONG_LP=m
+CONFIG_GAMEPORT_EMU10K1=m
+CONFIG_WL1251_SPI=m
+CONFIG_USB_NET_GL620A=m
+CONFIG_COMEDI_ADDI_APCI_1500=m
+CONFIG_SND_OPL3_LIB=m
+CONFIG_B43_SDIO=y
+CONFIG_IP_NF_ARPTABLES=m
+CONFIG_COMEDI_AMPLC_PC263=m
+CONFIG_DVB_USB_GP8PSK=m
+CONFIG_USB_SERIAL_GENERIC=y
+CONFIG_HID_CHERRY=m
+CONFIG_XEN_PRIVILEGED_GUEST=y
+CONFIG_PC87413_WDT=m
+CONFIG_JFFS2_COMPRESSION_OPTIONS=y
+CONFIG_BATTERY_MAX17040=m
+CONFIG_ACCESSIBILITY=y
+CONFIG_MKISS=m
+CONFIG_HID_SUNPLUS=m
+CONFIG_KSZ884X_PCI=m
+CONFIG_HID_PICOLCD=m
+CONFIG_BCMA_POSSIBLE=y
+CONFIG_NET_SCH_SFB=m
+CONFIG_NET_VENDOR_CIRRUS=y
+CONFIG_FUSION_CTL=m
+CONFIG_TULIP=m
+CONFIG_AF_RXRPC=m
+CONFIG_CIFS_ACL=y
+CONFIG_ZRAM=m
+CONFIG_CRYPTO_CAST5=m
+CONFIG_VGA_ARB=y
+CONFIG_SENSORS_CORETEMP=m
+CONFIG_PARIDE_FIT2=m
+CONFIG_CAN_PM_TRACE=y
+CONFIG_FIREWIRE_SBP2=m
+CONFIG_SECURITY_TOMOYO_POLICY_LOADER="/sbin/tomoyo-init"
+CONFIG_NET_IPGRE_DEMUX=m
+CONFIG_COMEDI_MULTIQ3=m
+CONFIG_MEDIA_TUNER_XC5000=m
+CONFIG_NET_POLL_CONTROLLER=y
+CONFIG_PRINTK=y
+CONFIG_NCPFS_EXTRAS=y
+CONFIG_SPEAKUP_SYNTH_BNS=m
+CONFIG_EDAC_I82875P=m
+CONFIG_SFC=m
+CONFIG_PHANTOM=m
+CONFIG_FORCEDETH=m
+CONFIG_COMEDI_DAS08_CS=m
+CONFIG_FB_SYS_FILLRECT=y
+CONFIG_TIMERFD=y
+CONFIG_HID_THRUSTMASTER=m
+CONFIG_CAN_TSCAN1=m
+CONFIG_USB_DYNAMIC_MINORS=y
+CONFIG_SENSORS_MAX16065=m
+CONFIG_SENSORS_I5K_AMB=m
+CONFIG_DNS_RESOLVER=y
+CONFIG_INPUT_WISTRON_BTNS=m
+CONFIG_ITCO_VENDOR_SUPPORT=y
+CONFIG_TRACEPOINTS=y
+CONFIG_B43_PHY_LP=y
+CONFIG_MTD_CFI_I2=y
+CONFIG_CRYPTO_AUTHENC=m
+CONFIG_DVB_SP8870=m
+CONFIG_I6300ESB_WDT=m
+CONFIG_GPIO_ML_IOH=m
+CONFIG_YENTA=m
+CONFIG_W1_MASTER_DS2482=m
+CONFIG_COMEDI_SERIAL2002=m
+CONFIG_JOYSTICK_SIDEWINDER=m
+CONFIG_NET_EMATCH_STACK=32
+CONFIG_CARL9170_LEDS=y
+CONFIG_ATL1E=m
+CONFIG_USB_STORAGE_ENE_UB6250=m
+CONFIG_DVB_DDBRIDGE=m
+CONFIG_IRDA=m
+CONFIG_BOUNCE=y
+CONFIG_RDS_RDMA=m
+CONFIG_THINKPAD_ACPI=m
+CONFIG_P54_COMMON=m
+CONFIG_SHMEM=y
+CONFIG_MTD=m
+CONFIG_MIGRATION=y
+CONFIG_HAVE_ARCH_JUMP_LABEL=y
+CONFIG_COMEDI_C6XDIGIO=m
+CONFIG_MMC_BLOCK_MINORS=8
+CONFIG_USB_HSO=m
+CONFIG_HID_PRIMAX=m
+CONFIG_DECOMPRESS_LZMA=y
+CONFIG_PCI_IOV=y
+CONFIG_HAVE_KVM_EVENTFD=y
+CONFIG_N2=m
+CONFIG_SENSORS_AMC6821=m
+CONFIG_USB_IPHETH=m
+CONFIG_NLS_CODEPAGE_850=m
+CONFIG_DVB_CX22700=m
+CONFIG_DNOTIFY=y
+CONFIG_COMEDI_DAS800=m
+CONFIG_CRYPTO_CTS=m
+CONFIG_EDD=m
+CONFIG_DVB_USB_UMT_010=m
+CONFIG_SUNGEM_PHY=m
+CONFIG_JOYSTICK_DB9=m
+CONFIG_RTC_DRV_R9701=m
+CONFIG_INPUT_MOUSEDEV=y
+CONFIG_FB_RADEON_BACKLIGHT=y
+CONFIG_LIBERTAS_CS=m
+CONFIG_ATA=m
+CONFIG_KEYBOARD_SUNKBD=m
+CONFIG_PCMCIA_3C589=m
+CONFIG_CRYPTO_DES=m
+CONFIG_ENABLE_MUST_CHECK=y
+CONFIG_TOUCHSCREEN_WM9712=y
+CONFIG_CEPH_LIB=m
+CONFIG_MM_OWNER=y
+CONFIG_NLS_CODEPAGE_437=m
+CONFIG_MTD_NAND_IDS=m
+CONFIG_NATSEMI=m
+CONFIG_MCS_FIR=m
+CONFIG_NET_CLS_U32=m
+CONFIG_SND_JAZZ16=m
+CONFIG_MISDN=m
+CONFIG_EXPORTFS=y
+CONFIG_MTD_UBI_WL_THRESHOLD=4096
+CONFIG_PCMCIA_IBMTR=m
+CONFIG_AD525X_DPOT_I2C=m
+CONFIG_MMC_RICOH_MMC=y
+CONFIG_SND_MIXER_OSS=m
+CONFIG_TOUCHSCREEN_PENMOUNT=m
+CONFIG_IP6_NF_MATCH_MH=m
+CONFIG_SCSI_OSD_INITIATOR=m
+CONFIG_DVB_S921=m
+CONFIG_SCSI_OSD_DPRINT_SENSE=1
+CONFIG_MSI_WMI=m
+CONFIG_IT87_WDT=m
+CONFIG_LRU_CACHE=m
+CONFIG_SCSI_CXGB3_ISCSI=m
+CONFIG_PC8736x_GPIO=m
+CONFIG_SND_DARLA24=m
+CONFIG_SENSORS_MAX1619=m
+CONFIG_IPW2200_MONITOR=y
+CONFIG_DVB_AF9013=m
+CONFIG_PCMCIA_SYM53C500=m
+CONFIG_INFINIBAND_MTHCA_DEBUG=y
+CONFIG_SERIO=y
+CONFIG_DVB_USB_DTV5100=m
+CONFIG_IBMASR=m
+CONFIG_INPUT_MOUSE=y
+CONFIG_INFINIBAND_ISER=m
+CONFIG_FB_SYS_IMAGEBLIT=y
+CONFIG_VIDEO_TVEEPROM=m
+CONFIG_X86=y
+CONFIG_PPS_CLIENT_PARPORT=m
+CONFIG_DEFXX=m
+CONFIG_SUNRPC_GSS=m
+CONFIG_CORE_DUMP_DEFAULT_ELF_HEADERS=y
+CONFIG_TYPHOON=m
+CONFIG_TIGON3=m
+CONFIG_MA600_DONGLE=m
+CONFIG_COMEDI_SSV_DNP=m
+CONFIG_SENSORS_LM90=m
+CONFIG_NETCONSOLE=m
+CONFIG_RTC_INTF_SYSFS=y
+CONFIG_RTC_DRV_RS5C372=m
+CONFIG_NET_EMATCH_U32=m
+CONFIG_TOUCHSCREEN_TOUCHWIN=m
+CONFIG_BLK_DEV_INITRD=y
+CONFIG_USB_EMI62=m
+CONFIG_B43_PHY_N=y
+CONFIG_SCSI_IPS=m
+CONFIG_X86_MCE_AMD=y
+CONFIG_DM_BUFIO=m
+CONFIG_FB_I810_GTF=y
+CONFIG_I2C_ALGOPCA=m
+CONFIG_BT_ATH3K=m
+CONFIG_LEDS_TRIGGER_TIMER=m
+CONFIG_HIGHMEM64G=y
+CONFIG_RTC_DRV_M48T59=m
+CONFIG_RT2800_LIB=m
+CONFIG_FB_VESA=y
+CONFIG_CRYPTO_BLOWFISH_COMMON=m
+CONFIG_FUSION_LAN=m
+CONFIG_MTD_NAND_PLATFORM=m
+CONFIG_DVB_USB_DW2102=m
+CONFIG_PATA_PCMCIA=m
+CONFIG_NF_CONNTRACK_SANE=m
+CONFIG_SERIO_PARKBD=m
+CONFIG_SND_OSSEMUL=y
+CONFIG_TOIM3232_DONGLE=m
+CONFIG_USB_SERIAL_MOS7720=m
+CONFIG_SND_MSND_PINNACLE=m
+CONFIG_PREEMPT_NOTIFIERS=y
+CONFIG_XEN_PVHVM=y
+CONFIG_FB_ARC=m
+CONFIG_NF_CT_PROTO_DCCP=m
+CONFIG_ZLIB_INFLATE=y
+CONFIG_RTC_DRV_V3020=m
+CONFIG_DVB_TUA6100=m
+CONFIG_KVM_ASYNC_PF=y
+CONFIG_CRC_T10DIF=m
+CONFIG_BT_HCIBTUART=m
+CONFIG_MEDIA_TUNER_QT1010=m
+CONFIG_DVB_DYNAMIC_MINORS=y
+CONFIG_SSB_PCIHOST_POSSIBLE=y
+CONFIG_PCI_IOAPIC=y
+CONFIG_HWMON=y
+CONFIG_NET_VENDOR_DLINK=y
+CONFIG_CRYPTO_TWOFISH_COMMON=m
+CONFIG_DLCI_MAX=8
+CONFIG_AUDITSYSCALL=y
+CONFIG_NLS_ISO8859_2=m
+CONFIG_SENSORS_LM63=m
+CONFIG_SMC9194=m
+CONFIG_ARCH_CPU_PROBE_RELEASE=y
+CONFIG_USB_VIDEO_CLASS=m
+CONFIG_CLKBLD_I8253=y
+CONFIG_ATM_NICSTAR=m
+CONFIG_FB_ATY_GX=y
+CONFIG_RTC_INTF_PROC=y
+CONFIG_HID_PICOLCD_FB=y
+CONFIG_USB_SERIAL_TI=m
+CONFIG_NET_SCH_CBQ=m
+CONFIG_USB_SERIAL_MOS7715_PARPORT=y
+CONFIG_CRYPTO_SERPENT=m
+CONFIG_CPU_IDLE_GOV_MENU=y
+CONFIG_MTD_PCI=m
+CONFIG_ACPI_FAN=m
+CONFIG_SND_FM801=m
+CONFIG_MOUSE_PS2_SENTELIC=y
+CONFIG_HYSDN_CAPI=y
+CONFIG_FB_MATROX_MYSTIQUE=y
+CONFIG_SECURITY_APPARMOR=y
+CONFIG_STACKTRACE_SUPPORT=y
+CONFIG_B44_PCI_AUTOSELECT=y
+CONFIG_COMEDI_AMPLC_PCI224=m
+CONFIG_COMEDI_NI_TIO=m
+CONFIG_SERIAL_MAX3100=m
+CONFIG_SENSORS_EMC1403=m
+CONFIG_PCI_BIOS=y
+CONFIG_BNA=m
+CONFIG_IP_DCCP_TFRC_LIB=y
+CONFIG_OUTPUT_FORMAT="elf32-i386"
+CONFIG_ACPI=y
+CONFIG_SCSI_SYM53C8XX_2=m
+CONFIG_SCSI_CXGB4_ISCSI=m
+CONFIG_USB_UHCI_HCD=m
+CONFIG_NVRAM=m
+CONFIG_LOCKD=m
+CONFIG_LEDS_INTEL_SS4200=m
+CONFIG_DVB_FIREDTV=m
+CONFIG_DVB_S5H1411=m
+CONFIG_RTC_DRV_DS3234=m
+CONFIG_SOUND_OSS_CORE=y
+CONFIG_AIC79XX_REG_PRETTY_PRINT=y
+CONFIG_USB_SN9C102=m
+CONFIG_RT2800USB_RT35XX=y
+CONFIG_FB_SAVAGE=m
+CONFIG_LIBERTAS=m
+CONFIG_HPET_MMAP=y
+CONFIG_USB_GSPCA_TV8532=m
+CONFIG_DRM_VMWGFX=m
+CONFIG_NET_VENDOR_MICROCHIP=y
+CONFIG_JFFS2_FS=m
+CONFIG_STE10XP=m
+CONFIG_USB_EZUSB=y
+CONFIG_VIDEO_OUTPUT_CONTROL=m
+CONFIG_CASSINI=m
+CONFIG_USB_WHCI_HCD=m
+CONFIG_SCSI_DH_ALUA=m
+CONFIG_MTRR=y
+CONFIG_BT_RFCOMM_TTY=y
+CONFIG_LIBFCOE=m
+CONFIG_RPCSEC_GSS_KRB5=m
+CONFIG_SCSI_EATA_LINKED_COMMANDS=y
+CONFIG_VIDEOBUF_VMALLOC=m
+CONFIG_MTD_CFI_UTIL=m
+CONFIG_SND_LX6464ES=m
+CONFIG_NET_VENDOR_ADAPTEC=y
+CONFIG_SENSORS_PCF8591=m
+CONFIG_ACPI_BLACKLIST_YEAR=0
+CONFIG_DVB_STV0299=m
+CONFIG_IPW2200_RADIOTAP=y
+CONFIG_SSB_B43_PCI_BRIDGE=y
+CONFIG_ACER_WMI=m
+CONFIG_USB_AN2720=y
+CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING=y
+CONFIG_RAMOOPS=m
+CONFIG_MLX4_DEBUG=y
+CONFIG_BSD_PROCESS_ACCT=y
+CONFIG_NETFILTER_XT_MATCH_STRING=m
+CONFIG_SSB_DRIVER_PCICORE=y
+CONFIG_INPUT_TABLET=y
+CONFIG_MEDIA_TUNER_MAX2165=m
+CONFIG_MDIO=m
+CONFIG_N_HDLC=m
+CONFIG_I2O_EXT_ADAPTEC_DMA64=y
+CONFIG_MTD_CFI_INTELEXT=m
+CONFIG_ATM_LANAI=m
+CONFIG_LLC2=m
+CONFIG_IR_WINBOND_CIR=m
+CONFIG_HPET_EMULATE_RTC=y
+CONFIG_X86_MPPARSE=y
+CONFIG_NET_VENDOR_SILAN=y
+CONFIG_SND_OXYGEN_LIB=m
+CONFIG_SND_SB8=m
+CONFIG_DLM=m
+CONFIG_NI65=m
+CONFIG_TOUCHSCREEN_USB_GOTOP=y
+CONFIG_EEEPC_LAPTOP=m
+CONFIG_PHONE_IXJ_PCMCIA=m
+CONFIG_USB_STORAGE=m
+CONFIG_HMC6352=m
+CONFIG_NET_VENDOR_BROADCOM=y
+CONFIG_SND_KCTL_JACK=y
+CONFIG_DVB_USB_PCTV452E=m
+CONFIG_DVB_VES1820=m
+CONFIG_STANDALONE=y
+CONFIG_BAYCOM_SER_HDX=m
+CONFIG_CRYPTO_SEED=m
+CONFIG_SCHED_MC=y
+CONFIG_DELL_RBU=m
+CONFIG_SCSI_SAS_ATA=y
+CONFIG_BATTERY_DS2782=m
+CONFIG_CPU_FREQ_GOV_PERFORMANCE=y
+CONFIG_IR_LIRC_CODEC=m
+CONFIG_EFI=y
+CONFIG_DONGLE=y
+CONFIG_SATA_MV=m
+CONFIG_AGP_AMD64=y
+CONFIG_HAVE_SETUP_PER_CPU_AREA=y
+CONFIG_R8187SE=m
+CONFIG_WATCHDOG_CORE=y
+CONFIG_SPEAKUP_SYNTH_KEYPC=m
+CONFIG_DVB_TUNER_DIB0090=m
+CONFIG_PCI_XEN=y
+CONFIG_SND_USB_AUDIO=m
+CONFIG_ARCNET_CAP=m
+CONFIG_VIDEO_CX231XX=m
+CONFIG_SPEAKUP_SYNTH_TXPRT=m
+CONFIG_TCP_CONG_YEAH=m
+CONFIG_SCSI_SYM53C8XX_DMA_ADDRESSING_MODE=1
+CONFIG_IEEE802154=m
+CONFIG_XO15_EBOOK=m
+CONFIG_SCSI_QLA_FC=m
+CONFIG_TELCLOCK=m
+CONFIG_IO_DELAY_TYPE_0XED=1
+CONFIG_COMEDI_UNIOXX5=m
+CONFIG_BLOCK=y
+CONFIG_HAVE_IDE=y
+CONFIG_IP_VS_LC=m
+CONFIG_HID_APPLE=m
+CONFIG_MEDIA_TUNER_TDA827X=m
+CONFIG_VMXNET3=m
+CONFIG_INIT_ENV_ARG_LIMIT=32
+CONFIG_SND_RAWMIDI_SEQ=m
+CONFIG_IP_NF_ARP_MANGLE=m
+CONFIG_USB_WUSB=m
+CONFIG_DVB_USB=m
+CONFIG_P54_LEDS=y
+CONFIG_SENSORS_G760A=m
+CONFIG_RDS=m
+CONFIG_GENERIC_GPIO=y
+CONFIG_DVB_ATBM8830=m
+CONFIG_PATA_EFAR=m
+CONFIG_VIRTIO_RING=m
+CONFIG_SMCTR=m
+CONFIG_SCTP_HMAC_MD5=y
+CONFIG_ATL2=m
+CONFIG_USER_NS=y
+CONFIG_NF_CONNTRACK_PPTP=m
+CONFIG_CPU_SUP_INTEL=y
+CONFIG_VIDEO_CX231XX_ALSA=m
+CONFIG_HFSPLUS_FS=m
+CONFIG_TMPFS_POSIX_ACL=y
+CONFIG_SENSORS_ADM9240=m
+CONFIG_DEBUG_SET_MODULE_RONX=y
+CONFIG_SND_USB_UA101=m
+CONFIG_ACPI_APEI_PCIEAER=y
+CONFIG_BUG=y
+CONFIG_SCSI_AIC7XXX=m
+CONFIG_CONTEXT_SWITCH_TRACER=y
+CONFIG_MAC80211_HAS_RC=y
+CONFIG_LOGIWHEELS_FF=y
+CONFIG_HPLAN_PLUS=m
+CONFIG_SCSI_FC_TGT_ATTRS=y
+CONFIG_USB_SL811_HCD=m
+CONFIG_OCFS2_FS_O2CB=m
+CONFIG_XEN=y
+CONFIG_CRYPTO_CAST6=m
+CONFIG_NET_EMATCH_META=m
+CONFIG_COMEDI_PCL725=m
+CONFIG_KS8842=m
+CONFIG_PANTHERLORD_FF=y
+CONFIG_I2C_DIOLAN_U2C=m
+CONFIG_PM=y
+CONFIG_PPS=m
+CONFIG_GENERIC_ISA_DMA=y
+CONFIG_USB_LCD=m
+CONFIG_SPI=y
+CONFIG_SENSORS_DS620=m
+CONFIG_V4L_MEM2MEM_DRIVERS=y
+CONFIG_WL12XX_MENU=m
+CONFIG_BMP085=m
+CONFIG_X86_SPEEDSTEP_CENTRINO=m
+CONFIG_NF_CONNTRACK_IRC=m
+CONFIG_PATA_NS87410=m
+CONFIG_PCMCIA_SPECTRUM=m
+CONFIG_L2TP_IP=m
+CONFIG_MTD_REDBOOT_PARTS=m
+CONFIG_B43_PCMCIA=y
+CONFIG_BOOTPARAM_HUNG_TASK_PANIC_VALUE=0
+CONFIG_USB_STV06XX=m
+CONFIG_PPP_DEFLATE=m
+CONFIG_NTFS_RW=y
+CONFIG_VGA_SWITCHEROO=y
+CONFIG_STRIP_ASM_SYMS=y
+CONFIG_PCMCIA_NINJA_SCSI=m
+CONFIG_TEXTSEARCH_KMP=m
+CONFIG_RTS5139=m
+CONFIG_SND_MAESTRO3=m
+CONFIG_W1_SLAVE_SMEM=m
+CONFIG_VT=y
+CONFIG_USB_NET_NET1080=m
+CONFIG_SENSORS_F71805F=m
+CONFIG_NETFILTER_XT_TARGET_CLASSIFY=m
+CONFIG_PCI_ATS=y
+CONFIG_MISDN_IPAC=m
+CONFIG_PARIDE_KTTI=m
+CONFIG_SND_HDA_CODEC_CIRRUS=y
+CONFIG_CB710_DEBUG_ASSUMPTIONS=y
+CONFIG_SPLIT_PTLOCK_CPUS=4
+CONFIG_EDAC_E752X=m
+CONFIG_MSPRO_BLOCK=m
+CONFIG_DVB_TUNER_ITD1000=m
+CONFIG_POWER_SUPPLY=m
+CONFIG_DM_PERSISTENT_DATA=m
+CONFIG_PATA_VIA=m
+CONFIG_DAVICOM_PHY=m
+CONFIG_CIFS_XATTR=y
+CONFIG_I2C_PCA_PLATFORM=m
+CONFIG_NETFILTER_XT_TARGET_NFQUEUE=m
+CONFIG_SND_HDA_INPUT_BEEP=y
+CONFIG_I2O_CONFIG_OLD_IOCTL=y
+CONFIG_V4L_USB_DRIVERS=y
+CONFIG_WEXT_CORE=y
+CONFIG_USB_GSPCA_MR97310A=m
+CONFIG_DVB_HOPPER=m
+CONFIG_GENERIC_IRQ_CHIP=y
+CONFIG_VIDEO_WM8775=m
+CONFIG_NLS=y
+CONFIG_IP_SET_HASH_IPPORTNET=m
+CONFIG_CDROM_PKTCDVD_BUFFERS=8
+CONFIG_SCHED_AUTOGROUP=y
+CONFIG_CLS_U32_PERF=y
+CONFIG_COMEDI_PCL730=m
+CONFIG_PRISM2_USB=m
+CONFIG_ADM8211=m
+CONFIG_VIDEO_VIVI=m
+CONFIG_NETFILTER_XT_TARGET_SECMARK=m
+CONFIG_HID_MAGICMOUSE=m
+CONFIG_COMEDI_PCM3730=m
+CONFIG_SCx200_ACB=m
+CONFIG_XEN_SAVE_RESTORE=y
+CONFIG_TOUCHSCREEN_USB_ETURBO=y
+CONFIG_DELL_LAPTOP=m
+CONFIG_PPPOE=m
+CONFIG_XFRM_MIGRATE=y
+CONFIG_WL1251_SDIO=m
+CONFIG_SND_LAYLA24=m
+CONFIG_ZONE_DMA=y
+CONFIG_USB_GSPCA_SPCA508=m
+CONFIG_USB_LEGOTOWER=m
+CONFIG_MTD_DATAFLASH=m
+CONFIG_FB_MB862XX_I2C=y
+CONFIG_LIRC_SIR=m
+CONFIG_DVB_USB_DIBUSB_MC=m
+CONFIG_MTD_ALAUDA=m
+CONFIG_DVB_USB_VP702X=m
+CONFIG_NETFILTER_XT_MATCH_OWNER=m
+CONFIG_I2C_SIS5595=m
+CONFIG_SUN_PARTITION=y
+CONFIG_IP_NF_TARGET_ECN=m
+CONFIG_SND_GINA24=m
+CONFIG_MD_FAULTY=m
+CONFIG_SYN_COOKIES=y
+CONFIG_IRQ_WORK=y
+CONFIG_ATH9K=m
+CONFIG_PCI_MSI=y
+CONFIG_IP_ADVANCED_ROUTER=y
+CONFIG_ENABLE_WARN_DEPRECATED=y
+CONFIG_AGP_EFFICEON=y
+CONFIG_ARCNET_COM20020_CS=m
+CONFIG_COMEDI_CB_PCIDDA=m
+CONFIG_VIDEO_USBVISION=m
+CONFIG_FB_SYS_COPYAREA=y
+CONFIG_SPI_BITBANG=m
+CONFIG_EWRK3=m
+CONFIG_USB_STORAGE_ALAUDA=m
+CONFIG_NET_VENDOR_FUJITSU=y
+CONFIG_JOYSTICK_GRIP_MP=m
+CONFIG_B44_PCICORE_AUTOSELECT=y
+CONFIG_IWLWIFI=m
+CONFIG_USB_COMMON=m
+CONFIG_SENSORS_ADM1031=m
+CONFIG_TASK_XACCT=y
+CONFIG_ARCNET_1051=m
+CONFIG_MEDIA_TUNER_TDA18271=m
+CONFIG_IP_SET_BITMAP_PORT=m
+CONFIG_IP6_NF_IPTABLES=m
+CONFIG_X86_PCC_CPUFREQ=m
+CONFIG_QFMT_V1=y
+CONFIG_DVB_IX2505V=m
+CONFIG_TOUCHSCREEN_USB_ZYTRONIC=y
+CONFIG_TEKRAM_DONGLE=m
+CONFIG_ATM_HORIZON=m
+CONFIG_SND_SONICVIBES=m
+CONFIG_ARCH_DEFCONFIG="arch/x86/configs/i386_defconfig"
+CONFIG_CPU_FREQ_GOV_USERSPACE=m
+CONFIG_SND_CA0106=m
+CONFIG_ISDN_DIVAS_MAINT=m
+CONFIG_SECURITY_APPARMOR_BOOTPARAM_VALUE=1
+CONFIG_BLK_DEV_DM_BUILTIN=y
+CONFIG_COMEDI_FL512=m
+CONFIG_USB_SERIAL_IPW=m
+CONFIG_I2C_PIIX4=m
+CONFIG_EDAC_I7300=m
+CONFIG_SND_OPTI92X_AD1848=m
+CONFIG_EFI_VARS_PSTORE_DEFAULT_DISABLE=y
+CONFIG_ARCNET_COM20020_PCI=m
+CONFIG_PCIEAER_INJECT=m
+CONFIG_INET_IPCOMP=m
+CONFIG_SENSORS_FSCHMD=m
+CONFIG_VGA_ARB_MAX_GPUS=16
+CONFIG_DVB_USB_DIB0700=m
+CONFIG_TOUCHSCREEN_FUJITSU=m
+CONFIG_MCP2120_DONGLE=m
+CONFIG_PCMCIA=m
+CONFIG_XEN_BLKDEV_BACKEND=m
+CONFIG_SCSI_U14_34F_TAGGED_QUEUE=y
+CONFIG_BT_HCIBLUECARD=m
+CONFIG_JFFS2_FS_XATTR=y
+CONFIG_EVENT_TRACING=y
+CONFIG_ISDN_DRV_AVMB1_VERBOSE_REASON=y
+CONFIG_SND_ENS1370=m
+CONFIG_ASYNC_PQ=m
+CONFIG_HID_KEYTOUCH=m
+CONFIG_HID_CYPRESS=m
+CONFIG_N_GSM=m
+CONFIG_BRIDGE_EBT_LIMIT=m
+CONFIG_DRM_KMS_HELPER=m
+CONFIG_SCSI_U14_34F=m
+CONFIG_COSA=m
+CONFIG_IPW2200_PROMISCUOUS=y
+CONFIG_OCFS2_FS_USERSPACE_CLUSTER=m
+CONFIG_ARCH_WANT_OPTIONAL_GPIOLIB=y
+CONFIG_HYSDN=m
+CONFIG_COMEDI_ADL_PCI9111=m
+CONFIG_ATA_OVER_ETH=m
+CONFIG_USB_NET_PLUSB=m
+CONFIG_VIDEO_SAA711X=m
+CONFIG_RTL8192C_COMMON=m
+CONFIG_PREEMPT_VOLUNTARY=y
+CONFIG_DVB_BUDGET_CORE=m
+CONFIG_NLS_ISO8859_1=m
+CONFIG_MFD_WM8400=m
+CONFIG_MTD_INTEL_VR_NOR=m
+CONFIG_CRYPTO_WORKQUEUE=y
+CONFIG_NFC=m
+CONFIG_CIFS_FSCACHE=y
+CONFIG_R8169=m
+CONFIG_SENSORS_BH1780=m
+CONFIG_TCP_CONG_HYBLA=m
+CONFIG_PCI_STUB=m
+CONFIG_NCPFS_NFS_NS=y
+CONFIG_HAVE_ATOMIC_IOMAP=y
+CONFIG_HID_KENSINGTON=m
+CONFIG_AGP_ALI=y
+CONFIG_USB_EHCI_HCD=m
+CONFIG_BATTERY_DS2760=m
+CONFIG_CPU_FREQ_TABLE=y
+CONFIG_TEXTSEARCH_BM=m
+CONFIG_8139TOO=m
+CONFIG_JFS_SECURITY=y
+CONFIG_AFS_FSCACHE=y
+CONFIG_SND_PDAUDIOCF=m
+CONFIG_BT_HCIUART_LL=y
+CONFIG_HID_ZYDACRON=m
+CONFIG_PPP_MPPE=m
+CONFIG_CAN_CALC_BITTIMING=y
+CONFIG_DE2104X=m
+CONFIG_SND_PCM_OSS=m
+CONFIG_DVB_B2C2_FLEXCOP=m
+CONFIG_HOTPLUG_PCI_ACPI=y
+CONFIG_USB_IRDA=m
+CONFIG_RFKILL=m
+CONFIG_VIDEO_TVP5150=m
+CONFIG_NETDEVICES=y
+CONFIG_NET_KEY=m
+CONFIG_SMS_SIANO_MDTV=m
+CONFIG_ACORN_PARTITION_RISCIX=y
+CONFIG_IP6_NF_TARGET_HL=m
+CONFIG_IOSCHED_DEADLINE=y
+CONFIG_DLCI=m
+CONFIG_CLKSRC_I8253=y
+CONFIG_ATM_IDT77252_USE_SUNI=y
+CONFIG_SND_OPL3_LIB_SEQ=m
+CONFIG_CGROUP_FREEZER=y
+CONFIG_EVENTFD=y
+CONFIG_CRYPTO_DEV_PADLOCK_SHA=m
+CONFIG_PARIDE_PD=m
+CONFIG_RTL8192CE=m
+CONFIG_WAN=y
+CONFIG_FS_POSIX_ACL=y
+CONFIG_IPV6_SIT=m
+CONFIG_XFRM=y
+CONFIG_SENSORS_K8TEMP=m
+CONFIG_DEFCONFIG_LIST="/lib/modules/$UNAME_RELEASE/.config"
+CONFIG_ASYNC_TX_DMA=y
+CONFIG_COMEDI_DAS16=m
+CONFIG_IP_SET_HASH_IP=m
+CONFIG_YENTA_TOSHIBA=y
+CONFIG_USB_MR800=m
+CONFIG_AIRO=m
+CONFIG_MTD_NETtel=m
+CONFIG_MFD_VX855=m
+CONFIG_SERIAL_8250_CONSOLE=y
+CONFIG_IPV6_MULTIPLE_TABLES=y
+CONFIG_USB_ANNOUNCE_NEW_DEVICES=y
+CONFIG_USB_SERIAL_WHITEHEAT=m
+CONFIG_NET_CLS_ROUTE4=m
+CONFIG_PCMCIA_FMVJ18X=m
+CONFIG_IP_SET_HASH_NETPORT=m
+CONFIG_TCG_INFINEON=m
+CONFIG_ULTRA=m
+CONFIG_ATH9K_HTC=m
+CONFIG_TOSHIBA_FIR=m
+CONFIG_IP_VS_DH=m
+CONFIG_SCSI_NCR53C406A=m
+CONFIG_SND_AZT2320=m
+CONFIG_EL1=m
+CONFIG_IP_NF_TARGET_MASQUERADE=m
+CONFIG_AIC79XX_RESET_DELAY_MS=15000
+CONFIG_ARCNET_COM20020=m
+CONFIG_NF_CONNTRACK_BROADCAST=m
+CONFIG_ECRYPT_FS=m
+CONFIG_IR_RC5_SZ_DECODER=m
+CONFIG_PROC_PAGE_MONITOR=y
+CONFIG_SERIAL_8250_EXTENDED=y
+CONFIG_GAMEPORT_FM801=m
+CONFIG_KS959_DONGLE=m
+CONFIG_CC_OPTIMIZE_FOR_SIZE=y
+CONFIG_JOYSTICK_MAGELLAN=m
+CONFIG_FTL=m
+CONFIG_IPMI_DEVICE_INTERFACE=m
+CONFIG_9P_FS_POSIX_ACL=y
+CONFIG_KINGSUN_DONGLE=m
+CONFIG_NF_NAT_PROTO_DCCP=m
+CONFIG_USB_VIDEO_CLASS_INPUT_EVDEV=y
+CONFIG_SENSORS_ADM1021=m
+CONFIG_C2PORT=m
+CONFIG_DM_DELAY=m
+CONFIG_X86_CMOV=y
+CONFIG_USB_SERIAL_CH341=m
+CONFIG_USB_FTDI_ELAN=m
+CONFIG_ACPI_HOTPLUG_CPU=y
+CONFIG_RD_LZO=y
+CONFIG_COMEDI_ADDI_APCI_1564=m
+CONFIG_DVB_USB_FRIIO=m
+CONFIG_JFFS2_FS_SECURITY=y
+CONFIG_IP_SET_HASH_IPPORT=m
+CONFIG_NEED_NODE_MEMMAP_SIZE=y
+CONFIG_ARCH_HAS_CPU_IDLE_WAIT=y
+CONFIG_SENSORS_SHT21=m
+CONFIG_USB_IOWARRIOR=m
+CONFIG_SND_HDSP=m
+CONFIG_SERIO_CT82C710=m
+CONFIG_USBPCWATCHDOG=m
+CONFIG_WIMAX_I2400M_USB=m
+CONFIG_SND_USB_USX2Y=m
+CONFIG_SCSI_SPI_ATTRS=m
+CONFIG_FB_CYBER2000=m
+CONFIG_GREENASIA_FF=y
+CONFIG_SCSI_HPSA=m
+CONFIG_MICROCODE_AMD=y
+CONFIG_SPEAKUP_SYNTH_ACNTSA=m
+CONFIG_SND_KORG1212=m
+CONFIG_SENSORS_VIA_CPUTEMP=m
+CONFIG_NF_CONNTRACK_SECMARK=y
+CONFIG_ISDN_DRV_GIGASET=m
+CONFIG_CHELSIO_T3=m
+CONFIG_INSTRUCTION_DECODER=y
+CONFIG_CRYPTO_SHA512=m
+CONFIG_PHONET=m
+CONFIG_MWIFIEX_PCIE=m
+CONFIG_SCSI_WAIT_SCAN=m
+CONFIG_DRM_MGA=m
+CONFIG_BACKLIGHT_CLASS_DEVICE=y
+CONFIG_B43_HWRNG=y
+CONFIG_USB_M5602=m
+CONFIG_RT2X00_LIB_USB=m
+CONFIG_NET_VENDOR_EXAR=y
+CONFIG_CRYPTO_NULL=m
+CONFIG_DVB_USB_AF9005_REMOTE=m
+CONFIG_NET_VENDOR_SEEQ=y
+CONFIG_NF_DEFRAG_IPV4=m
+CONFIG_USER_RETURN_NOTIFIER=y
+CONFIG_SERIAL_8250_EXAR_ST16C554=m
+CONFIG_USB_IDMOUSE=m
+CONFIG_SELECT_MEMORY_MODEL=y
+CONFIG_MISDN_INFINEON=m
+CONFIG_INET_XFRM_MODE_BEET=m
+CONFIG_INFINIBAND_IPOIB_DEBUG=y
+CONFIG_HID_LCPOWER=m
+CONFIG_VIRTIO_CONSOLE=m
+CONFIG_BFS_FS=m
+CONFIG_SND_ES1938=m
+CONFIG_PM_DEBUG=y
+CONFIG_DVB_BUDGET_AV=m
+CONFIG_SSB_PCMCIAHOST=y
+CONFIG_IPV6_ROUTE_INFO=y
+CONFIG_NETFILTER_ADVANCED=y
+CONFIG_CRYPTO_DEFLATE=m
+CONFIG_USB_APPLEDISPLAY=m
+CONFIG_USB_SERIAL_KLSI=m
+CONFIG_NETFILTER_XT_MATCH_TCPMSS=m
+CONFIG_IGB=m
+CONFIG_MTD_CFI=m
+CONFIG_IPV6_ROUTER_PREF=y
+CONFIG_JFFS2_FS_DEBUG=0
+CONFIG_BT_HCIBTSDIO=m
+CONFIG_AGP_NVIDIA=y
+CONFIG_SLIP_COMPRESSED=y
+CONFIG_SND_VX_LIB=m
+CONFIG_ATM_MPOA=m
+CONFIG_ROCKETPORT=m
+CONFIG_CRYPTO_GCM=m
+CONFIG_SND_INDIGOIO=m
+CONFIG_NE2K_PCI=m
+CONFIG_MOUSE_SYNAPTICS_USB=m
+CONFIG_NET_SCTPPROBE=m
+CONFIG_NETFILTER_NETLINK_LOG=m
+CONFIG_HAVE_DYNAMIC_FTRACE=y
+CONFIG_NLS_ISO8859_14=m
+CONFIG_APRICOT=m
+CONFIG_MTD_PHRAM=m
+CONFIG_MAGIC_SYSRQ=y
+CONFIG_E100=m
+CONFIG_IO_DELAY_0X80=y
+CONFIG_DMI=y
+CONFIG_IPV6_SIT_6RD=y
+CONFIG_PARPORT_SERIAL=m
+CONFIG_COMEDI_CB_PCIDIO=m
+CONFIG_PNFS_BLOCK=m
+CONFIG_NET_VENDOR_RDC=y
+CONFIG_MACHZ_WDT=m
+CONFIG_CPUSETS=y
+CONFIG_ROMFS_ON_MTD=y
+CONFIG_NETFILTER_XT_MATCH_MARK=m
+CONFIG_FB_MATROX=m
+CONFIG_ISDN=y
+CONFIG_VIDEO_PVRUSB2_SYSFS=y
+CONFIG_MAC80211_RC_DEFAULT_MINSTREL=y
+CONFIG_GPIO_CS5535=m
+CONFIG_SPARSE_IRQ=y
+CONFIG_COMEDI_AMPLC_PC236=m
+CONFIG_DVB_LGS8GXX=m
+CONFIG_NETFILTER_XT_TARGET_TCPOPTSTRIP=m
+CONFIG_SSFDC=m
+CONFIG_IP_NF_MANGLE=m
+CONFIG_TIFM_7XX1=m
+CONFIG_HID_PICOLCD_LEDS=y
+CONFIG_COMEDI_CB_DAS16_CS=m
+CONFIG_RTC_DRV_DS1286=m
+CONFIG_FCOE_FNIC=m
+CONFIG_TOUCHSCREEN_MCS5000=m
+CONFIG_DVB_VES1X93=m
+CONFIG_SECURITYFS=y
+CONFIG_LIBERTAS_MESH=y
+CONFIG_MFD_CS5535=m
+CONFIG_DEFAULT_CFQ=y
+CONFIG_COMEDI_NI_PCIDIO=m
+CONFIG_CPU_SUP_AMD=y
+CONFIG_INET6_XFRM_MODE_TUNNEL=m
+CONFIG_BRIDGE_EBT_VLAN=m
+CONFIG_PCIEPORTBUS=y
+CONFIG_MEDIA_SUPPORT=m
+CONFIG_SENSORS_F75375S=m
+CONFIG_DEBUG_BUGVERBOSE=y
+CONFIG_TC1100_WMI=m
+CONFIG_NCPFS_OS2_NS=y
+CONFIG_IP_NF_FILTER=m
+CONFIG_HID_ZEROPLUS=m
+CONFIG_REED_SOLOMON_DEC16=y
+CONFIG_SATA_SX4=m
+CONFIG_EXT3_FS=m
+CONFIG_IBM_ASM=m
+CONFIG_NETFILTER_XT_MATCH_LENGTH=m
+CONFIG_BRIDGE_EBT_PKTTYPE=m
+CONFIG_X86_BIGSMP=y
+CONFIG_FAT_FS=m
+CONFIG_SND_HDA_CODEC_CA0132=y
+CONFIG_FCOE=m
+CONFIG_CAN_SJA1000=m
+CONFIG_SND_HDA_INTEL=m
+CONFIG_TEXTSEARCH_FSM=m
+CONFIG_MISDN_DSP=m
+CONFIG_SENSORS_LM75=m
+CONFIG_DTLK=m
+CONFIG_INFINIBAND_CXGB4=m
+CONFIG_LSI_ET1011C_PHY=m
+CONFIG_HIGHMEM=y
+CONFIG_IP6_NF_RAW=m
+CONFIG_SPEAKUP_SYNTH_SOFT=m
+CONFIG_DVB_USB_EC168=m
+CONFIG_USB_ZD1201=m
+CONFIG_RTC_DRV_DS1742=m
+CONFIG_INET_TUNNEL=m
+CONFIG_X86_INTERNODE_CACHE_SHIFT=6
+CONFIG_CRYPTO_DEV_PADLOCK=m
+CONFIG_NETFILTER_XT_TARGET_NOTRACK=m
+CONFIG_EEPROM_93CX6=m
+CONFIG_KVM_CLOCK=y
+CONFIG_NET_9P_VIRTIO=m
+CONFIG_MMC_BLOCK_BOUNCE=y
+CONFIG_MLX4_CORE=m
+CONFIG_MTD_REDBOOT_DIRECTORY_BLOCK=-1
+CONFIG_SND_MIA=m
+CONFIG_GENERIC_CLOCKEVENTS=y
+CONFIG_ROMFS_FS=m
+CONFIG_IOSCHED_CFQ=y
+CONFIG_DVB_USB_DTT200U=m
+CONFIG_CIFS_UPCALL=y
+CONFIG_RWSEM_XCHGADD_ALGORITHM=y
+CONFIG_DSCC4_PCISYNC=y
+CONFIG_PARIDE_EPIA=m
+CONFIG_LIB80211=m
+CONFIG_SCC=m
+CONFIG_MFD_CORE=m
+CONFIG_HAVE_KERNEL_XZ=y
+CONFIG_USB_CXACRU=m
+CONFIG_DRM_GMA3600=y
+CONFIG_RAID_ATTRS=m
+CONFIG_RFKILL_LEDS=y
+CONFIG_CONSOLE_TRANSLATIONS=y
+CONFIG_PATA_CMD64X=m
+CONFIG_MTD_CFI_STAA=m
+CONFIG_PHONE=m
+CONFIG_STOP_MACHINE=y
+CONFIG_RAID6_PQ=m
+CONFIG_SBC_FITPC2_WATCHDOG=m
+CONFIG_HW_RANDOM_TIMERIOMEM=m
+CONFIG_FB_ATY_GENERIC_LCD=y
+CONFIG_NET_IPGRE=m
+CONFIG_LIBERTAS_SDIO=m
+CONFIG_VIDEO_HELPER_CHIPS_AUTO=y
+CONFIG_FUSION=y
+CONFIG_MTDRAM_TOTAL_SIZE=4096
+CONFIG_SWIOTLB_XEN=y
+CONFIG_BRIDGE_EBT_IP6=m
+CONFIG_SND_AZT1605=m
+CONFIG_NF_NAT_SNMP_BASIC=m
+CONFIG_PCMCIA_LOAD_CIS=y
+CONFIG_CLS_U32_MARK=y
+CONFIG_SND_ICE1712=m
+CONFIG_LIBERTAS_SPI=m
+CONFIG_SCSI_ACARD=m
+CONFIG_LEDS_TRIGGER_BACKLIGHT=m
+CONFIG_CPU_FREQ=y
+CONFIG_USB_OHCI_HCD=m
+CONFIG_VIA_RHINE=m
+CONFIG_USB_GSPCA=m
+CONFIG_HOSTAP_FIRMWARE=y
+CONFIG_DM_MIRROR=m
+CONFIG_CRYPTO_BLOWFISH=m
+CONFIG_FB_SIS=m
+CONFIG_DUMMY_CONSOLE=y
+CONFIG_X86_LONGRUN=m
+CONFIG_AIC7XXX_DEBUG_MASK=0
+CONFIG_SCSI_GDTH=m
+CONFIG_MODULE_FORCE_LOAD=y
+CONFIG_NLS_ASCII=m
+CONFIG_B43=m
+CONFIG_JOYSTICK_GRIP=m
+CONFIG_BAYCOM_SER_FDX=m
+CONFIG_RTC_DRV_M41T94=m
+CONFIG_IP1000=m
+CONFIG_TULIP_NAPI=y
+CONFIG_WIMAX_DEBUG_LEVEL=8
+CONFIG_USB_RIO500=m
+CONFIG_SATA_SVW=m
+CONFIG_SND_CS5530=m
+CONFIG_TRACE_IRQFLAGS_SUPPORT=y
+CONFIG_MTD_PHYSMAP=m
+CONFIG_NFS_V3_ACL=y
+CONFIG_INFTL=m
+CONFIG_GAMEPORT_L4=m
+CONFIG_DVB_CAPTURE_DRIVERS=y
+CONFIG_SENSORS_ADT7462=m
+CONFIG_DETECT_HUNG_TASK=y
+CONFIG_PARIDE_FRIQ=m
+CONFIG_CAN_MCP251X=m
+CONFIG_CRYPTO_CCM=m
+CONFIG_TCP_CONG_ADVANCED=y
+CONFIG_NET_CLS_RSVP6=m
+CONFIG_MTRR_SANITIZER_ENABLE_DEFAULT=0
+CONFIG_USB_NET_CDC_SUBSET=m
+CONFIG_KVM_GUEST=y
+CONFIG_SND_WSS_LIB=m
+CONFIG_QFMT_V2=m
+CONFIG_USB_S2255=m
+CONFIG_INET_DCCP_DIAG=m
+CONFIG_ARCNET_COM90xxIO=m
+CONFIG_NETFILTER_XT_MATCH_CONNMARK=m
+CONFIG_SND_ISA=y
+CONFIG_ATH9K_HW=m
+CONFIG_BLK_CGROUP=y
+CONFIG_USB_SERIAL_MCT_U232=m
+CONFIG_UIO_PDRV_GENIRQ=m
+CONFIG_PATA_ISAPNP=m
+CONFIG_BT_HCIBT3C=m
+CONFIG_LEDS_TRIGGERS=y
+CONFIG_WIMAX_I2400M_DEBUG_LEVEL=8
+CONFIG_CRYPTO_RNG=m
+CONFIG_USB_SERIAL_GARMIN=m
+CONFIG_RAW_DRIVER=m
+CONFIG_XFS_QUOTA=y
+CONFIG_COMEDI_ISA_DRIVERS=m
+CONFIG_JOYSTICK_COBRA=m
+CONFIG_NET_SCH_ATM=m
+CONFIG_WINBOND_840=m
+CONFIG_SCSI_3W_9XXX=m
+CONFIG_SND_USB=y
+CONFIG_LOGIG940_FF=y
+CONFIG_VIDEOBUF2_MEMOPS=m
+CONFIG_RD_GZIP=y
+CONFIG_TOUCHSCREEN_USB_E2I=y
+CONFIG_ARCH_HAS_CPU_RELAX=y
+CONFIG_HAVE_REGS_AND_STACK_ACCESS_API=y
+CONFIG_BCMA_HOST_PCI_POSSIBLE=y
+CONFIG_SENSORS_LTC4261=m
+CONFIG_MMC_SDRICOH_CS=m
+CONFIG_MISDN_W6692=m
+CONFIG_USB_SERIAL_KEYSPAN=m
+CONFIG_LIRC_BT829=m
+CONFIG_THRUSTMASTER_FF=y
+CONFIG_LEDS_DELL_NETBOOKS=m
+CONFIG_MTD_DOC2000=m
+CONFIG_TREE_RCU=y
+CONFIG_LBDAF=y
+CONFIG_SWIOTLB=y
+CONFIG_SND_USB_CAIAQ=m
+CONFIG_USB_STORAGE_CYPRESS_ATACB=m
+CONFIG_EXT4_FS_SECURITY=y
+CONFIG_SPEAKUP_SYNTH_DUMMY=m
+CONFIG_SCSI_MVUMI=m
+CONFIG_CS5535_MFGPT=m
+CONFIG_BEFS_FS=m
+CONFIG_SND_ALI5451=m
+CONFIG_INFINIBAND_USER_MAD=m
+CONFIG_HID_ROCCAT=m
+CONFIG_NET_VENDOR_HP=y
+CONFIG_F71808E_WDT=m
+CONFIG_INET_XFRM_MODE_TRANSPORT=m
+CONFIG_CRYPTO_MD5=y
+CONFIG_VIDEO_CS53L32A=m
+CONFIG_IR_REDRAT3=m
+CONFIG_USB_GSPCA_VICAM=m
+CONFIG_PCMCIA_HERMES=m
+CONFIG_TRANSPARENT_HUGEPAGE=y
+CONFIG_PATA_CS5530=m
+CONFIG_ISCSI_TCP=m
+CONFIG_ATA_ACPI=y
+CONFIG_NFSD_V3=y
+CONFIG_PATA_ALI=m
+CONFIG_MFD_WL1273_CORE=m
+CONFIG_RT2800USB_RT53XX=y
+CONFIG_HAVE_ARCH_KMEMCHECK=y
+CONFIG_SND_ECHO3G=m
+CONFIG_COMEDI_ADL_PCI7432=m
+CONFIG_ACPI_PROCESSOR=m
+CONFIG_XEN_SCRUB_PAGES=y
+CONFIG_DVB_TDA10023=m
+CONFIG_MEDIA_TUNER_TEA5767=m
+CONFIG_BATMAN_ADV=m
+CONFIG_CS89x0=m
+CONFIG_ISDN_DRV_AVMB1_AVM_CS=m
+CONFIG_HAVE_KVM=y
+CONFIG_SND_FIREWIRE=y
+CONFIG_VIDEOBUF_DVB=m
+CONFIG_COMEDI_PCMDA12=m
+CONFIG_PCCARD=m
+CONFIG_HAVE_GENERIC_HARDIRQS=y
+CONFIG_USB_GSPCA_OV519=m
+CONFIG_USB_SERIAL_VIVOPAY_SERIAL=m
+CONFIG_BINFMT_ELF=y
+CONFIG_AUDIT_GENERIC=y
+CONFIG_PARIDE_PG=m
+CONFIG_MD_RAID456=m
+CONFIG_REGULATOR_PCF50633=m
+CONFIG_HOTPLUG=y
+CONFIG_JOYSTICK_IFORCE_USB=y
+CONFIG_DSCC4=m
+CONFIG_CICADA_PHY=m
+CONFIG_UDF_NLS=y
+CONFIG_JOYSTICK_STINGER=m
+CONFIG_USB_SISUSBVGA_CON=y
+CONFIG_CGROUP_MEM_RES_CTLR_SWAP=y
+CONFIG_IP_PIMSM_V1=y
+CONFIG_INET6_AH=m
+CONFIG_TARGET_CORE=m
+CONFIG_VLSI_FIR=m
+CONFIG_USB_SERIAL=m
+CONFIG_NET_VENDOR_ALTEON=y
+CONFIG_CGROUP_MEM_RES_CTLR=y
+CONFIG_SENSORS_GL518SM=m
+CONFIG_USB_MON=m
+CONFIG_COMEDI_CB_PCIMDAS=m
+CONFIG_VGASTATE=m
+CONFIG_REGULATOR_FIXED_VOLTAGE=m
+CONFIG_SIGMATEL_FIR=m
+CONFIG_IP_NF_TARGET_ULOG=m
+CONFIG_KEYS=y
+CONFIG_REGULATOR_TPS6507X=m
+CONFIG_BE2ISCSI=m
+CONFIG_INET_XFRM_TUNNEL=m
+CONFIG_RTC_DRV_FM3130=m
+CONFIG_IPMI_POWEROFF=m
+CONFIG_SND_VMASTER=y
+CONFIG_NETFILTER_XT_MARK=m
+CONFIG_NETFILTER_XTABLES=m
+CONFIG_IP_VS_LBLC=m
+CONFIG_RESOURCE_COUNTERS=y
+CONFIG_DVB_USB_OPERA1=m
+CONFIG_LEDS_BD2802=m
+CONFIG_KEYBOARD_STOWAWAY=m
+CONFIG_SLABINFO=y
+CONFIG_ATM_HE=m
+CONFIG_KEYS_DEBUG_PROC_KEYS=y
+CONFIG_IPMI_SI=m
+CONFIG_USB_STORAGE_DATAFAB=m
+CONFIG_DVB_USB_AF9005=m
+CONFIG_TCP_CONG_VEGAS=m
+CONFIG_MTD_SCx200_DOCFLASH=m
+CONFIG_CRYPTO_USER_API_HASH=m
+CONFIG_TIMER_STATS=y
+CONFIG_SENSORS_IBMPEX=m
+CONFIG_BOOT_PRINTK_DELAY=y
+CONFIG_SENSORS_ADM1026=m
+CONFIG_PATA_NINJA32=m
+CONFIG_SENSORS_ADT7470=m
+CONFIG_PM_SLEEP_SMP=y
+CONFIG_FB_PM3=m
+CONFIG_SCSI_PAS16=m
+CONFIG_X86_16BIT=y
+CONFIG_CRYPTO_HW=y
+CONFIG_X86_VERBOSE_BOOTUP=y
+CONFIG_MAC80211_RC_MINSTREL_HT=y
+CONFIG_USB_EG20T=m
+CONFIG_USB_STORAGE_KARMA=m
+CONFIG_TTPCI_EEPROM=m
+CONFIG_TEHUTI=m
+CONFIG_SIS900=m
+CONFIG_X86_INVLPG=y
+CONFIG_PCSPKR_PLATFORM=y
+CONFIG_MEGARAID_LEGACY=m
+CONFIG_CARDBUS=y
+CONFIG_SND_SB16=m
+CONFIG_HID_GREENASIA=m
+CONFIG_ORINOCO_USB=m
+CONFIG_FB_3DFX_I2C=y
+CONFIG_SMS_USB_DRV=m
+CONFIG_ACPI_AC=m
+CONFIG_JFFS2_FS_WRITEBUFFER=y
+CONFIG_SPI_MASTER=y
+CONFIG_USB_SERIAL_OPTICON=m
+CONFIG_RTL8180=m
+CONFIG_DVB_NXT200X=m
+CONFIG_SENSORS_LM87=m
+CONFIG_X86_SPEEDSTEP_RELAXED_CAP_CHECK=y
+CONFIG_VT_HW_CONSOLE_BINDING=y
+CONFIG_NET_ACT_GACT=m
+CONFIG_SLIP_MODE_SLIP6=y
+CONFIG_HID_GYRATION=m
+CONFIG_IRDA_CACHE_LAST_LSAP=y
+CONFIG_USB_WDM=m
+CONFIG_PATA_TOSHIBA=m
+CONFIG_BT_HCIBCM203X=m
+CONFIG_REGULATOR_WM8400=m
+CONFIG_THERMAL_HWMON=y
+CONFIG_TOUCHSCREEN_USB_COMPOSITE=m
+CONFIG_MTD_NAND_CS553X=m
+CONFIG_VIDEO_EM28XX_DVB=m
+CONFIG_USB_SERIAL_KOBIL_SCT=m
+CONFIG_HDLC_FR=m
+CONFIG_DE620=m
+CONFIG_FB_ATY128_BACKLIGHT=y
+CONFIG_XZ_DEC_X86=y
+CONFIG_MAC80211_LEDS=y
+CONFIG_INPUT_JOYDEV=m
+CONFIG_FB_MATROX_MAVEN=m
+CONFIG_EDAC_AMD76X=m
+CONFIG_KEYBOARD_LKKBD=m
+CONFIG_NETFILTER_XT_TARGET_TPROXY=m
+CONFIG_HIBERNATE_CALLBACKS=y
+CONFIG_IP_DCCP=m
+CONFIG_LIBIPW=m
+CONFIG_FIREWIRE_OHCI=m
+CONFIG_AC3200=m
+CONFIG_USB_ACM=m
+CONFIG_X86_GX_SUSPMOD=m
+CONFIG_COMEDI_ADL_PCI9118=m
+CONFIG_USB_RTL8150=m
+CONFIG_X86_32=y
+CONFIG_X86_REBOOTFIXUPS=y
+CONFIG_CRC16=m
+CONFIG_USB_NET_AX8817X=m
+CONFIG_SND_EMU10K1=m
+CONFIG_GENERIC_CALIBRATE_DELAY=y
+CONFIG_CRYPTO_GF128MUL=m
+CONFIG_NLS_ISO8859_6=m
+CONFIG_NET_CLS=y
+CONFIG_X86_CMPXCHG=y
+CONFIG_XFS_RT=y
+CONFIG_ISDN_DRV_AVMB1_B1ISA=m
+CONFIG_COMEDI_S626=m
+CONFIG_SND_INDIGO=m
+CONFIG_UIO_PDRV=m
+CONFIG_AX25=m
+CONFIG_SND_YMFPCI=m
+CONFIG_TMPFS=y
+CONFIG_X86_POWERNOW_K7=m
+CONFIG_HOSTAP=m
+CONFIG_ANON_INODES=y
+CONFIG_SND_CS5535AUDIO=m
+CONFIG_VIDEO_EM28XX=m
+CONFIG_NLS_CODEPAGE_936=m
+CONFIG_HAMACHI=m
+CONFIG_SCSI_AHA1542=m
+CONFIG_ET131X=m
+CONFIG_IR_ITE_CIR=m
+CONFIG_DVB_BUDGET=m
+CONFIG_FUTEX=y
+CONFIG_CRYPTO_ANUBIS=m
+CONFIG_COMEDI_NI_AT_A2150=m
+CONFIG_VIRTIO_PCI=m
+CONFIG_GPIO_PCH=m
+CONFIG_MISDN_HFCMULTI=m
+CONFIG_MWAVE=m
+CONFIG_PCMCIA_3C574=m
+CONFIG_USB_GSPCA_SQ930X=m
+CONFIG_RTL8192SE=m
+CONFIG_JOYSTICK_SPACEBALL=m
+CONFIG_REGMAP_I2C=m
+CONFIG_USB_SERIAL_ZIO=m
+CONFIG_M686=y
+CONFIG_NET_VENDOR_REALTEK=y
+CONFIG_DVB_DM1105=m
+CONFIG_ARCH_HAVE_NMI_SAFE_CMPXCHG=y
+CONFIG_JOYSTICK_XPAD_FF=y
+CONFIG_NETFILTER_XT_TARGET_HL=m
+CONFIG_MEGARAID_SAS=m
+CONFIG_DVB_CORE=m
+CONFIG_NFSD_V2_ACL=y
+CONFIG_COMEDI_ME_DAQ=m
+CONFIG_ISL29003=m
+CONFIG_CRYPTO_USER_API=m
+CONFIG_RTC_HCTOSYS=y
+CONFIG_I2C_OCORES=m
+CONFIG_SECURITY_NETWORK=y
+CONFIG_SERIAL_CORE_CONSOLE=y
+CONFIG_HUGETLB_PAGE=y
+CONFIG_HOTPLUG_PCI_CPCI=y
+CONFIG_MTD_SM_COMMON=m
+CONFIG_CIFS_WEAK_PW_HASH=y
+CONFIG_TOUCHSCREEN_GUNZE=m
+CONFIG_SENSORS_LM78=m
+CONFIG_NET_VENDOR_EMULEX=y
+CONFIG_SCSI_ULTRASTOR=m
+CONFIG_SENSORS_K10TEMP=m
+CONFIG_USB_HID=m
+CONFIG_DVB_USB_AF9015=m
+CONFIG_UBIFS_FS=m
+CONFIG_PARIDE_PT=m
+CONFIG_RTL8192CU=m
+CONFIG_AGP_AMD=y
+CONFIG_STALDRV=y
+CONFIG_ATM_DRIVERS=y
+CONFIG_CRYPTO_TGR192=m
+CONFIG_BLK_DEV_RBD=m
+CONFIG_USER_STACKTRACE_SUPPORT=y
+CONFIG_MEGARAID_MAILBOX=m
+CONFIG_LANMEDIA=m
+CONFIG_IT8712F_WDT=m
+CONFIG_ARCNET_COM20020_ISA=m
+CONFIG_COMEDI_NI_670X=m
+CONFIG_BLK_DEV_MD=m
+CONFIG_MMC_VUB300=m
+CONFIG_USB_SERIAL_AIRCABLE=m
+CONFIG_IP_SET_BITMAP_IP=m
+CONFIG_RTS_PSTOR=m
+CONFIG_MTD_ONENAND_SIM=m
+CONFIG_GPIO_VX855=m
+CONFIG_X86_INTEL_USERCOPY=y
+CONFIG_DECNET_NF_GRABULATOR=m
+CONFIG_MTD_UBI_BEB_RESERVE=1
+CONFIG_MTD_SBC_GXX=m
+CONFIG_NET_SCH_INGRESS=m
+CONFIG_BCMA=m
+CONFIG_DMADEVICES=y
+CONFIG_XENFS=m
+CONFIG_SCSI_AACRAID=m
+CONFIG_MISDN_HFCUSB=m
+CONFIG_NF_CONNTRACK_EVENTS=y
+CONFIG_MOUSE_PS2_ELANTECH=y
+CONFIG_IPV6_NDISC_NODETYPE=y
+CONFIG_HFS_FS=m
+CONFIG_RTC_DRV_MSM6242=m
+CONFIG_DVB_USB_TECHNISAT_USB2=m
+CONFIG_PCI_LABEL=y
+CONFIG_CRYPTO_ZLIB=m
+CONFIG_NLS_CODEPAGE_1251=m
+CONFIG_EDAC_X38=m
+CONFIG_FANOTIFY=y
+CONFIG_SPI_BUTTERFLY=m
+CONFIG_SONYPI_COMPAT=y
+CONFIG_IP_VS_PROTO_SCTP=y
+CONFIG_USB_SERIAL_FUNSOFT=m
+CONFIG_SP5100_TCO=m
+CONFIG_BLK_DEV_SR_VENDOR=y
+CONFIG_SATA_SIL=m
+CONFIG_CGROUP_SCHED=y
+CONFIG_SND_HDA_RECONFIG=y
+CONFIG_SYSVIPC=y
+CONFIG_COMEDI_NI_LABPC_CS=m
+CONFIG_HOSTAP_PLX=m
+CONFIG_CRYPTO_PCOMP2=y
+CONFIG_JOYSTICK_INTERACT=m
+CONFIG_COMEDI_DT282X=m
+CONFIG_DVB_TDA10071=m
+CONFIG_HDLC_CISCO=m
+CONFIG_MLX4_INFINIBAND=m
+CONFIG_RT2X00=m
+CONFIG_NLS_CODEPAGE_863=m
+CONFIG_WDT=m
+CONFIG_PNPBIOS=y
+CONFIG_NF_CONNTRACK_FTP=m
+CONFIG_DRM_SAVAGE=m
+CONFIG_CHELSIO_T4=m
+CONFIG_MODULES=y
+CONFIG_IP_NF_MATCH_ECN=m
+CONFIG_USB_GADGET=m
+CONFIG_REGULATOR_MAX8660=m
+CONFIG_EEPROM_LEGACY=m
+CONFIG_INFINIBAND_NES=m
+CONFIG_USB_GSPCA_SPCA506=m
+CONFIG_PATA_ARTOP=m
+CONFIG_KEYBOARD_NEWTON=m
+CONFIG_HARDLOCKUP_DETECTOR=y
+CONFIG_VIDEO_EM28XX_ALSA=m
+CONFIG_MEDIA_TUNER_MXL5005S=m
+CONFIG_USB_HIDDEV=y
+CONFIG_INFINIBAND_IPOIB=m
+CONFIG_SENSORS_APDS990X=m
+CONFIG_DVB_SI21XX=m
+CONFIG_SCSI_IN2000=m
+CONFIG_SOUND=m
+CONFIG_EVENT_POWER_TRACING_DEPRECATED=y
+CONFIG_COMEDI_RTI802=m
+CONFIG_SND_SIS7019=m
+CONFIG_JOLIET=y
+CONFIG_DVB_USB_VP7045=m
+CONFIG_BNX2X=m
+CONFIG_MEDIA_TUNER_TDA9887=m
+CONFIG_ADVANTECH_WDT=m
+CONFIG_AUDIT_WATCH=y
+CONFIG_CRYPTO_TEA=m
+CONFIG_SND_INTERWAVE=m
+CONFIG_ARCH_HIBERNATION_POSSIBLE=y
+CONFIG_KVM_APIC_ARCHITECTURE=y
+CONFIG_DVB_USB_LME2510=m
+CONFIG_PDC_ADMA=m
+CONFIG_SND_VXPOCKET=m
+CONFIG_UNIX=y
+CONFIG_USB_CATC=m
+CONFIG_SND_OPTI93X=m
+CONFIG_SCSI_SRP=m
+CONFIG_VIDEO_TLG2300=m
+CONFIG_MINIX_FS=m
+CONFIG_BRCMSMAC=m
+CONFIG_XEN_DEV_EVTCHN=m
+CONFIG_CRYPTO_HASH2=y
+CONFIG_CARL9170=m
+CONFIG_SND_HDA_CODEC_CONEXANT=y
+CONFIG_SND_RME9652=m
+CONFIG_MTD_ABSENT=m
+CONFIG_DEFAULT_HOSTNAME="(none)"
+CONFIG_COMEDI_ADDI_APCI_035=m
+CONFIG_X86_CPUFREQ_NFORCE2=m
+CONFIG_NLS_KOI8_R=m
+CONFIG_EL16=m
+CONFIG_USB_GADGET_STORAGE_NUM_BUFFERS=2
+CONFIG_USB_GSPCA_SONIXB=m
+CONFIG_CARDMAN_4040=m
+CONFIG_USB_STORAGE_ISD200=m
+CONFIG_SCSI_U14_34F_LINKED_COMMANDS=y
+CONFIG_CPU_FREQ_GOV_POWERSAVE=m
+CONFIG_USB_GSPCA_OV534_9=m
+CONFIG_NFS_FS=m
+CONFIG_MTD_SC520CDP=m
+CONFIG_USB_NET_SMSC95XX=m
+CONFIG_CRASH_DUMP=y
+CONFIG_INFINIBAND_ADDR_TRANS=y
+CONFIG_TULIP_NAPI_HW_MITIGATION=y
+CONFIG_BLK_DEV_IO_TRACE=y
+CONFIG_XPS=y
+CONFIG_C101=m
+CONFIG_NET_ACT_SKBEDIT=m
+CONFIG_COMEDI_ADV_PCI1723=m
+CONFIG_INET_ESP=m
+CONFIG_SECURITY_SELINUX_DEVELOP=y
+CONFIG_HPET_TIMER=y
+CONFIG_NF_CONNTRACK_ZONES=y
+CONFIG_NF_CONNTRACK_IPV6=m
+CONFIG_MD=y
+CONFIG_CRYPTO_ALGAPI=y
+CONFIG_FDDI=y
+CONFIG_SENSORS_VT8231=m
+CONFIG_DVB_BUDGET_CI=m
+CONFIG_PARIDE_FIT3=m
+CONFIG_COMEDI_KE_COUNTER=m
+CONFIG_EDAC_I3200=m
+CONFIG_BSD_PROCESS_ACCT_V3=y
+CONFIG_SCSI_DMX3191D=m
+CONFIG_BRIDGE=m
+CONFIG_MEDIA_TUNER=m
+CONFIG_TABLET_USB_GTCO=m
+CONFIG_USB_CYPRESS_CY7C63=m
+CONFIG_EEPROM_AT25=m
+CONFIG_RD_BZIP2=y
+CONFIG_INPUT_UINPUT=m
+CONFIG_NETFILTER_XT_TARGET_CHECKSUM=m
+CONFIG_TCG_ATMEL=m
+CONFIG_ARCH_SUPPORTS_MSI=y
+CONFIG_DVB_MB86A16=m
+CONFIG_MEDIA_TUNER_SIMPLE=m
+CONFIG_SND_OXYGEN=m
+CONFIG_SERIAL_8250_BOCA=m
+CONFIG_PCH_GBE=m
+CONFIG_KEYBOARD_ATKBD=y
+CONFIG_SCSI_QLA_ISCSI=m
+CONFIG_AT1700=m
+CONFIG_HAVE_MEMBLOCK_NODE_MAP=y
+CONFIG_X86_PLATFORM_DEVICES=y
+CONFIG_WANXL=m
+CONFIG_MTD_CFI_I1=y
+CONFIG_NF_NAT=m
+CONFIG_ARCH_HAS_DEFAULT_IDLE=y
+CONFIG_MAX_RAW_DEVS=256
+CONFIG_UBIFS_FS_ZLIB=y
+CONFIG_W83877F_WDT=m
+CONFIG_WAFER_WDT=m
+CONFIG_USB_U132_HCD=m
+CONFIG_USB_SERIAL_XIRCOM=m
+CONFIG_BLK_DEV_INTEGRITY=y
+CONFIG_DVB_USB_AZ6027=m
+CONFIG_NET_VENDOR_OKI=y
+CONFIG_MOUSE_BCM5974=m
+CONFIG_CPU_IDLE=y
+CONFIG_NFS_COMMON=y
+CONFIG_CHR_DEV_SCH=m
+CONFIG_REGULATOR=y
+CONFIG_FAIR_GROUP_SCHED=y
+CONFIG_RT2800USB=m
+CONFIG_CRYPTO_HASH=y
+CONFIG_EFI_PARTITION=y
+CONFIG_SSB_PCMCIAHOST_POSSIBLE=y
+CONFIG_INFINIBAND_AMSO1100=m
+CONFIG_SND_HDA_CODEC_HDMI=y
+CONFIG_BCMA_BLOCKIO=y
+CONFIG_LOG_BUF_SHIFT=17
+CONFIG_PATA_IT8213=m
+CONFIG_SND_CMIPCI=m
+CONFIG_ACPI_WMI=m
+CONFIG_HPET=y
+CONFIG_NLS_CODEPAGE_857=m
+CONFIG_NETFILTER_XT_TARGET_DSCP=m
+CONFIG_SND_EMU10K1X=m
+CONFIG_EXTRA_FIRMWARE=""
+CONFIG_TCG_TPM=m
+CONFIG_NET_VENDOR_8390=y
+CONFIG_IPV6_MROUTE=y
+CONFIG_XEN_PCIDEV_BACKEND=m
+CONFIG_PROC_EVENTS=y
+CONFIG_ACPI_VIDEO=m
+CONFIG_VIRT_TO_BUS=y
+CONFIG_VFAT_FS=m
+CONFIG_SECURITY_SELINUX_CHECKREQPROT_VALUE=1
+CONFIG_EDAC_I5000=m
+CONFIG_PID_NS=y
+CONFIG_MD_RAID1=m
+CONFIG_COMEDI_ADDI_APCI_2200=m
+CONFIG_CRYPTO_VMAC=m
+CONFIG_SENSORS_ACPI_POWER=m
+CONFIG_KEXEC=y
+CONFIG_ACPI_CMPC=m
+CONFIG_RADIO_TEF6862=m
+CONFIG_CRC32_SLICEBY8=y
+CONFIG_FB_DDC=m
+CONFIG_COMEDI_DAS08=m
+CONFIG_SCSI_MPT2SAS=m
+CONFIG_HVC_XEN=y
+CONFIG_UWB_WHCI=m
+CONFIG_TOUCHSCREEN_WM9713=y
+CONFIG_VIDEO_HDPVR=m
+CONFIG_OLD_BELKIN_DONGLE=m
+CONFIG_ROMFS_ON_BLOCK=y
+CONFIG_NET_SB1000=m
+CONFIG_HERMES_CACHE_FW_ON_INIT=y
+CONFIG_BLK_DEV_SR=m
+CONFIG_CPU_RMAP=y
+CONFIG_SND_HWDEP=m
+CONFIG_GIGASET_M101=m
+CONFIG_ISDN_DIVAS_PRIPCI=y
+CONFIG_SND_LAYLA20=m
+CONFIG_BLK_DEV_LOOP=m
+CONFIG_IPMI_HANDLER=m
+CONFIG_B44=m
+CONFIG_DEFAULT_HUNG_TASK_TIMEOUT=120
+CONFIG_SYSV_FS=m
+CONFIG_ATMEL=m
+CONFIG_SENSORS_THMC50=m
+CONFIG_X86_POWERNOW_K7_ACPI=y
+CONFIG_HAVE_OPTPROBES=y
+CONFIG_ATM_AMBASSADOR=m
+CONFIG_L2TP_ETH=m
+CONFIG_PATA_ATIIXP=m
+CONFIG_I8K=m
+CONFIG_SCSI_QLOGIC_1280=m
+CONFIG_HYPERV_UTILS=m
+CONFIG_SYNCLINK_GT=m
+CONFIG_CFQ_GROUP_IOSCHED=y
+CONFIG_NF_NAT_IRC=m
+CONFIG_SND_SBAWE=m
+CONFIG_60XX_WDT=m
+CONFIG_GEODE_WDT=m
+CONFIG_MEDIA_TUNER_XC2028=m
+CONFIG_INPUT_MISC=y
+CONFIG_IR_NUVOTON=m
+CONFIG_SENSORS_SCH5627=m
+CONFIG_I2C_AMD756=m
+CONFIG_E1000E=m
+CONFIG_DNET=m
+CONFIG_DVB_STV0288=m
+CONFIG_USB_SL811_CS=m
+CONFIG_SUSPEND=y
+CONFIG_SUNRPC_XPRT_RDMA=m
+CONFIG_SCx200_GPIO=m
+CONFIG_MTD_NAND_ECC=m
+CONFIG_CRYPTO_CBC=m
+CONFIG_SENSORS_LM93=m
+CONFIG_PARIDE_ON20=m
+CONFIG_BT_CMTP=m
+CONFIG_MEDIA_CONTROLLER=y
+CONFIG_I8253_LOCK=y
+CONFIG_SMSC_SCH311X_WDT=m
+CONFIG_AIC79XX_CMDS_PER_DEVICE=32
+CONFIG_IP6_NF_MATCH_RT=m
+CONFIG_SCSI_IPR=m
+CONFIG_SERIAL_8250_RUNTIME_UARTS=4
+CONFIG_NS83820=m
+CONFIG_DRM_SIS=m
+CONFIG_KPROBES=y
+CONFIG_FS_MBCACHE=m
+CONFIG_SND_MIRO=m
+CONFIG_MD_MULTIPATH=m
+CONFIG_DS1682=m
+CONFIG_GFS2_FS=m
+CONFIG_RTC_CLASS=y
+CONFIG_DVB_TUNER_DIB0070=m
+CONFIG_NCPFS_NLS=y
+CONFIG_SEEQ8005=m
+CONFIG_FB_MB862XX_PCI_GDC=y
+CONFIG_CRC7=m
+CONFIG_SENSORS_LTC4215=m
+CONFIG_KVM_AMD=m
+CONFIG_NET_CLS_TCINDEX=m
+CONFIG_USB_EMI26=m
+CONFIG_IP_VS_PROTO_ESP=y
+CONFIG_HAVE_LATENCYTOP_SUPPORT=y
+CONFIG_CRYPTO_DEV_GEODE=m
+CONFIG_PCNET32=m
+CONFIG_TMPFS_XATTR=y
+CONFIG_SND_CS4231=m
+CONFIG_EDAC_I82975X=m
+CONFIG_PCMCIA_NMCLAN=m
+CONFIG_FB_UVESA=m
+CONFIG_TOUCHSCREEN_TSC2007=m
+CONFIG_SND_RME96=m
+CONFIG_DCA=m
+CONFIG_I2C_ALI1535=m
+CONFIG_I2C_I801=m
+CONFIG_BLK_DEV_UMEM=m
+CONFIG_MTD_NAND_CAFE=m
+CONFIG_SCSI_SYM53C8XX_DEFAULT_TAGS=16
+CONFIG_W1=m
+CONFIG_LOGFS=m
+CONFIG_DLM_DEBUG=y
+CONFIG_RT2800PCI=m
+CONFIG_USB_GSPCA_VC032X=m
+CONFIG_PCMCIA_RAYCS=m
+CONFIG_IOMMU_HELPER=y
+CONFIG_DVB_ISL6421=m
+CONFIG_RTC_DRV_DS1374=m
+CONFIG_MICROCODE_OLD_INTERFACE=y
+CONFIG_RTC_DRV_BQ4802=m
+CONFIG_TMD_HERMES=m
+CONFIG_GENERIC_TRACER=y
+CONFIG_NLS_ISO8859_5=m
+CONFIG_IP_VS_WLC=m
+CONFIG_HAVE_FUNCTION_TRACER=y
+CONFIG_NF_NAT_TFTP=m
+CONFIG_NETFILTER_XT_MATCH_MULTIPORT=m
+CONFIG_NET_SCH_NETEM=m
+CONFIG_ACPI_PROCESSOR_AGGREGATOR=m
+CONFIG_USB_STORAGE_REALTEK=m
+CONFIG_WL12XX_SPI=m
+CONFIG_CS5535_CLOCK_EVENT_SRC=m
+CONFIG_I2C_PCA_ISA=m
+CONFIG_CRYPTO_CAMELLIA=m
+CONFIG_SND_EMU10K1_SEQ=m
+CONFIG_RTC_DRV_DS1307=m
+CONFIG_I2C_SIS630=m
+CONFIG_ARCH_SELECT_MEMORY_MODEL=y
+CONFIG_NFSD_V4=y
+CONFIG_I2C_SI4713=m
+CONFIG_TCP_CONG_ILLINOIS=m
+CONFIG_ZEROPLUS_FF=y
+CONFIG_CRYPTO_MANAGER2=y
+CONFIG_USB_GADGET_VBUS_DRAW=2
+CONFIG_NET_VENDOR_MYRI=y
+CONFIG_DRAGONRISE_FF=y
+CONFIG_TOUCHSCREEN_USB_3M=y
+CONFIG_TOUCHSCREEN_USB_EGALAX=y
+CONFIG_BRIDGE_EBT_DNAT=m
+CONFIG_GENERIC_PCI_IOMAP=y
+CONFIG_COMEDI_ACL7225B=m
+CONFIG_SENSORS_AD7418=m
+CONFIG_CONFIGFS_FS=m
+CONFIG_CRYPTO_TEST=m
+CONFIG_MTD_UBI=m
+CONFIG_XZ_DEC_BCJ=y
+CONFIG_SLIP=m
+CONFIG_PM_SLEEP=y
+CONFIG_SENSORS_FAM15H_POWER=m
+CONFIG_I2C=m
+CONFIG_COMPAL_LAPTOP=m
+CONFIG_JFFS2_ZLIB=y
+CONFIG_PCMCIA_PCNET=m
+CONFIG_EDAC_DECODE_MCE=m
+CONFIG_SENSORS_VT1211=m
+CONFIG_B44_PCI=y
+CONFIG_PPP_MULTILINK=y
+CONFIG_MTD_ONENAND_GENERIC=m
+CONFIG_EFI_STUB=y
+CONFIG_SATA_PROMISE=m
+CONFIG_PARPORT_1284=y
+CONFIG_VIDEO_CX25840=m
+CONFIG_GENERIC_PENDING_IRQ=y
+CONFIG_I2C_AMD756_S4882=m
+CONFIG_PARPORT_PC=m
+CONFIG_EEXPRESS_PRO=m
+CONFIG_X86_NEED_RELOCS=y
+CONFIG_SCSI_SRP_ATTRS=m
+CONFIG_NET_IPGRE_BROADCAST=y
+CONFIG_BT_HIDP=m
+CONFIG_PD6729=m
+CONFIG_KS8851_MLL=m
+CONFIG_VIDEO_CX231XX_RC=y
+CONFIG_MOUSE_PS2_LOGIPS2PP=y
+CONFIG_X86_SPEEDSTEP_ICH=m
+CONFIG_COMEDI_DT2817=m
+CONFIG_SMC_IRCC_FIR=m
+CONFIG_SND_PCXHR=m
+CONFIG_UFS_FS=m
+CONFIG_VM_EVENT_COUNTERS=y
+CONFIG_RELAY=y
+CONFIG_HAVE_MMIOTRACE_SUPPORT=y
+CONFIG_ASUS_NB_WMI=m
+CONFIG_USB_GSPCA_FINEPIX=m
+CONFIG_SND_AD1816A=m
+CONFIG_CRYPTO_ECB=m
+CONFIG_USB_GSPCA_ETOMS=m
+CONFIG_PM_STD_PARTITION=""
+CONFIG_SQUASHFS_LZO=y
+CONFIG_SND_DYNAMIC_MINORS=y
+CONFIG_FUJITSU_LAPTOP=m
+CONFIG_TCM_FILEIO=m
+CONFIG_NET_VENDOR_XIRCOM=y
+CONFIG_NI52=m
+CONFIG_GENERIC_FIND_FIRST_BIT=y
+CONFIG_SCSI_STEX=m
+CONFIG_HOTPLUG_PCI_CPCI_ZT5550=m
+CONFIG_BT_HCIUART_ATH3K=y
+CONFIG_NF_CONNTRACK_AMANDA=m
+CONFIG_SND_ATIIXP_MODEM=m
+CONFIG_DEBUG_FS=y
+CONFIG_FEALNX=m
+CONFIG_NET_VENDOR_AMD=y
+CONFIG_NET_PKTGEN=m
+CONFIG_HP_WMI=m
+CONFIG_USB_SERIAL_EDGEPORT=m
+CONFIG_DRM_TTM=m
+CONFIG_BASE_FULL=y
+CONFIG_FB_CFB_IMAGEBLIT=y
+CONFIG_ZLIB_DEFLATE=m
+CONFIG_SUNRPC=m
+CONFIG_SOLARIS_X86_PARTITION=y
+CONFIG_ARCNET_RAW=m
+CONFIG_ARCH_DISCARD_MEMBLOCK=y
+CONFIG_SCSI_DH_RDAC=m
+CONFIG_SENSORS_W83795=m
+CONFIG_COMEDI_FC=m
+CONFIG_X86_P4_CLOCKMOD=m
+CONFIG_INPUT_ATI_REMOTE2=m
+CONFIG_CNIC=m
+CONFIG_DRM_I810=m
+CONFIG_OSF_PARTITION=y
+CONFIG_NLS_CODEPAGE_864=m
+CONFIG_IWL3945=m
+CONFIG_IP_VS_LBLCR=m
+CONFIG_USB_YUREX=m
+CONFIG_XEN_BACKEND=y
+CONFIG_FW_LOADER=y
+CONFIG_LITELINK_DONGLE=m
+CONFIG_SENSORS_ADS7828=m
+CONFIG_KALLSYMS=y
+CONFIG_USB_GSPCA_SPCA501=m
+CONFIG_HOTPLUG_PCI_PCIE=y
+CONFIG_PCI=y
+CONFIG_RTC_HCTOSYS_DEVICE="rtc0"
+CONFIG_E2100=m
+CONFIG_CRYPTO_XTS=m
+CONFIG_CHARGER_PCF50633=m
+CONFIG_NETFILTER_XT_MATCH_RECENT=m
+CONFIG_DECOMPRESS_XZ=y
+CONFIG_NETFILTER_XT_MATCH_PKTTYPE=m
+CONFIG_PCI_QUIRKS=y
+CONFIG_MII=m
+CONFIG_SIGNALFD=y
+CONFIG_NET_CORE=y
+CONFIG_MOUSE_PS2_ALPS=y
+CONFIG_VIDEO_CPIA2=m
+CONFIG_HAVE_UNSTABLE_SCHED_CLOCK=y
+CONFIG_EXT4_FS=m
+CONFIG_NET_SCH_DRR=m
+CONFIG_SENSORS_LTC4151=m
+CONFIG_BRIDGE_EBT_802_3=m
+CONFIG_CPU5_WDT=m
+CONFIG_COMEDI_NI_65XX=m
+CONFIG_FB_LE80578=m
+CONFIG_HAVE_HW_BREAKPOINT=y
+CONFIG_KRETPROBES=y
+CONFIG_MTD_LPDDR=m
+CONFIG_COMEDI_ADDI_APCI_3001=m
+CONFIG_CRYPTO_SHA1=m
+CONFIG_EDAC_MM_EDAC=m
+CONFIG_BATTERY_BQ27X00_PLATFORM=y
+CONFIG_IPMI_WATCHDOG=m
+CONFIG_DRM_TDFX=m
+CONFIG_JOYSTICK_JOYDUMP=m
+CONFIG_SCSI_7000FASST=m
+CONFIG_IPV6_PRIVACY=y
+CONFIG_INFINIBAND_USER_ACCESS=m
+CONFIG_BPQETHER=m
+CONFIG_USB_ADUTUX=m
+CONFIG_SPEAKUP_SYNTH_ACNTPC=m
+CONFIG_SENSORS_SMSC47M192=m
+CONFIG_NLS_KOI8_U=m
+CONFIG_CRC8=m
+CONFIG_SENSORS_SCH5636=m
+CONFIG_XZ_DEC=y
+CONFIG_USB_BELKIN=y
+CONFIG_SATA_PMP=y
+CONFIG_IPW2100_MONITOR=y
+CONFIG_QLA3XXX=m
+CONFIG_RTL8192U=m
+CONFIG_CAN_VCAN=m
+CONFIG_SBNI=m
+CONFIG_ATH_COMMON=m
+CONFIG_NET_VENDOR_TI=y
+CONFIG_LOCKD_V4=y
+CONFIG_DUMMY=m
+CONFIG_CODA_FS=m
+CONFIG_W1_SLAVE_DS2431=m
+CONFIG_DVB_TUNER_CX24113=m
+CONFIG_USB_GADGET_DUALSPEED=y
+CONFIG_BRIDGE_EBT_MARK_T=m
+CONFIG_WATCHDOG=y
+CONFIG_SCSI_ADVANSYS=m
+CONFIG_DVB_B2C2_FLEXCOP_PCI=m
+CONFIG_HAS_IOMEM=y
+CONFIG_RING_BUFFER_ALLOW_SWAP=y
+CONFIG_SND_RAWMIDI=m
+CONFIG_HOTPLUG_PCI_ACPI_IBM=m
+CONFIG_LIRC_SASEM=m
+CONFIG_8139TOO_8129=y
+CONFIG_SND_HDA_INPUT_BEEP_MODE=1
+CONFIG_COMEDI_PCL724=m
+CONFIG_IR_FINTEK=m
+CONFIG_GENERIC_IRQ_PROBE=y
+CONFIG_SND_OPL4_LIB=m
+CONFIG_USB_NET_CDC_EEM=m
+CONFIG_USB_STORAGE_SDDR09=m
+CONFIG_HYPERV_STORAGE=m
+CONFIG_IP_NF_MATCH_TTL=m
+CONFIG_ASYNC_RAID6_RECOV=m
+CONFIG_NET_CLS_IND=y
+CONFIG_X86_WP_WORKS_OK=y
+CONFIG_PATA_CS5536=m
+CONFIG_SCSI_SYM53C8XX_MAX_TAGS=64
+CONFIG_NFTL=m
+CONFIG_WANT_LLC=y
+CONFIG_PCI_MMCONFIG=y
+CONFIG_EEXPRESS=m
+CONFIG_NETFILTER_XT_TARGET_TRACE=m
+CONFIG_HVC_IRQ=y
+CONFIG_ATM_ZATM=m
+CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND=y
+CONFIG_SND_RME32=m
+CONFIG_PROC_KCORE=y
+CONFIG_RTC_DRV_X1205=m
+CONFIG_MTD_MAP_BANK_WIDTH_1=y
+CONFIG_IP6_NF_MATCH_FRAG=m
+CONFIG_USB_SERIAL_CYBERJACK=m
+CONFIG_NET_SCH_PRIO=m
+CONFIG_SCHED_HRTICK=y
+CONFIG_SATA_ULI=m
+CONFIG_DVB_DRXK=m
+CONFIG_USB_SERIAL_IUU=m
+CONFIG_EPOLL=y
+CONFIG_FB_MATROX_G=y
+CONFIG_SCSI_AIC79XX=m
+CONFIG_CRYPTO_LZO=m
+CONFIG_RADIO_MAXIRADIO=m
+CONFIG_SND_PCM=m
+CONFIG_LIRC_ZILOG=m
+CONFIG_PM_RUNTIME=y
+CONFIG_BRIDGE_EBT_SNAT=m
+CONFIG_ARCH_HWEIGHT_CFLAGS="-fcall-saved-ecx -fcall-saved-edx"
+CONFIG_SND_AU8820=m
+CONFIG_GIRBIL_DONGLE=m
+CONFIG_EASYCAP=m
+CONFIG_SDIO_UART=m
+CONFIG_PARTITION_ADVANCED=y
+CONFIG_SENSORS_SCH56XX_COMMON=m
+CONFIG_NETFILTER_XT_MATCH_DCCP=m
+CONFIG_ICPLUS_PHY=m
+CONFIG_UNIXWARE_DISKLABEL=y
+CONFIG_COMEDI_USBDUXFAST=m
+CONFIG_BT_BNEP_MC_FILTER=y
+CONFIG_SCSI_ISCSI_ATTRS=m
+CONFIG_X86_BSWAP=y
+CONFIG_USB_SERIAL_EMPEG=m
+CONFIG_HOSTESS_SV11=m
+CONFIG_KEYBOARD_MAX7359=m
+CONFIG_IR_SONY_DECODER=m
+CONFIG_NLS_CODEPAGE_852=m
+CONFIG_TCG_TIS=m
+CONFIG_TOUCHSCREEN_USB_IDEALTEK=y
+CONFIG_VIDEO_PVRUSB2=m
+CONFIG_NETFILTER_XT_MATCH_COMMENT=m
+CONFIG_USB_ISP116X_HCD=m
+CONFIG_I2C_ISCH=m
+CONFIG_USB_NET_RNDIS_HOST=m
+CONFIG_NET=y
+CONFIG_ATARI_PARTITION=y
+CONFIG_INPUT_EVDEV=m
+CONFIG_SND_JACK=y
+CONFIG_SND_AD1848=m
+CONFIG_IDEAPAD_LAPTOP=m
+CONFIG_SECURITY_PATH=y
+CONFIG_NETFILTER_XT_TARGET_TCPMSS=m
+CONFIG_B43LEGACY_DMA=y
+CONFIG_ACPI_SLEEP=y
+CONFIG_EXT2_FS=m
+CONFIG_TABLET_USB_WACOM=m
+CONFIG_NETFILTER_XT_MATCH_DSCP=m
+CONFIG_CRYPTO_WP512=m
+CONFIG_C2PORT_DURAMAR_2150=m
+CONFIG_HID_DRAGONRISE=m
+CONFIG_NETFILTER_XT_MATCH_CONNTRACK=m
+CONFIG_COMEDI_ADQ12B=m
+CONFIG_ITCO_WDT=m
+CONFIG_COMEDI_NI_LABPC=m
+CONFIG_IBMLS=m
+CONFIG_NETFILTER_XT_MATCH_RATEEST=m
+CONFIG_SND_ALOOP=m
+CONFIG_USB_LD=m
+CONFIG_MTD_GEN_PROBE=m
+CONFIG_QUOTA_TREE=m
+CONFIG_FB_VIA=m
+CONFIG_INPUT_PCSPKR=m
+CONFIG_PNFS_OBJLAYOUT=m
+CONFIG_DVB_AV7110_OSD=y
+CONFIG_SERIO_PCIPS2=m
+CONFIG_USB_NET_CDCETHER=m
+CONFIG_PACKET=y
+CONFIG_ARCH_BINFMT_ELF_RANDOMIZE_PIE=y
+CONFIG_RTC_DRV_M48T86=m
+CONFIG_ARCH_HAS_CPU_AUTOPROBE=y
+CONFIG_NF_CONNTRACK_TIMESTAMP=y
+CONFIG_SERIAL_PCH_UART=m
+CONFIG_SENSORS_SMM665=m
+CONFIG_MWIFIEX_SDIO=m
+CONFIG_NETFILTER_XT_MATCH_IPRANGE=m
+CONFIG_INTEL_IOATDMA=m
+CONFIG_NET_CLS_BASIC=m
+CONFIG_SND_HDA_GENERIC=y
+CONFIG_I2C_TINY_USB=m
+CONFIG_NETROM=m
+CONFIG_FUSION_SPI=m
+CONFIG_BTRFS_FS_POSIX_ACL=y
+CONFIG_USB_GSPCA_OV534=m
+CONFIG_COMEDI_DT3000=m
+CONFIG_DVB_USB_GL861=m
+CONFIG_NF_CONNTRACK_TFTP=m
+CONFIG_NFS_V3=y
+CONFIG_RTC_DRV_MAX6902=m
+CONFIG_DVB_USB_ANYSEE=m
+CONFIG_NLS_CODEPAGE_949=m
+CONFIG_SENSORS_TMP102=m
+CONFIG_NOP_TRACER=y
+CONFIG_BACKLIGHT_LCD_SUPPORT=y
+CONFIG_LOOPBACK_TARGET=m
+CONFIG_ISL29020=m
+CONFIG_SND_HDA_PATCH_LOADER=y
+CONFIG_XEN_XENBUS_FRONTEND=y
+CONFIG_INET=y
+CONFIG_CRYPTO_PCRYPT=m
+CONFIG_COMEDI_CB_PCIMDDA=m
+CONFIG_IPDDP_DECAP=y
+CONFIG_IP_ROUTE_VERBOSE=y
+CONFIG_XZ_DEC_POWERPC=y
+CONFIG_PCMCIA_WL3501=m
+CONFIG_SND_ES1688=m
+CONFIG_NFSD_FAULT_INJECTION=y
+CONFIG_VIRTIO_NET=m
+CONFIG_NETFILTER_XT_MATCH_ADDRTYPE=m
+CONFIG_DRM_I915_KMS=y
+CONFIG_PREVENT_FIRMWARE_BUILD=y
+CONFIG_SERIAL_8250_PNP=y
+CONFIG_USB_NET_MCS7830=m
+CONFIG_SND_ENS1371=m
+CONFIG_CRYPTO_TWOFISH=m
+CONFIG_FREEZER=y
+CONFIG_FIREWIRE_NET=m
+CONFIG_USB_TEST=m
+CONFIG_SCSI_AIC7XXX_OLD=m
+CONFIG_ADAPTEC_STARFIRE=m
+CONFIG_BT=m
+CONFIG_BT_HCIVHCI=m
+CONFIG_INPUT_CM109=m
+CONFIG_PCI_DOMAINS=y
+CONFIG_EFI_VARS=m
+CONFIG_DVB_USB_MXL111SF=m
+CONFIG_SENSORS_IT87=m
+CONFIG_LPC_SCH=m
+CONFIG_NET_CLS_ACT=y
+CONFIG_REED_SOLOMON=m
+CONFIG_CIFS_DFS_UPCALL=y
+CONFIG_NET_VENDOR_CHELSIO=y
+CONFIG_COMEDI_ADL_PCI6208=m
+CONFIG_HDLC_RAW_ETH=m
+CONFIG_COMEDI=m
+CONFIG_BRIDGE_EBT_BROUTE=m
+CONFIG_USB_NET_SMSC75XX=m
+CONFIG_BE2NET=m
+CONFIG_PARPORT=m
+CONFIG_VORTEX=m
+CONFIG_SPEAKUP_SYNTH_DECTLK=m
+CONFIG_NETFILTER_XT_MATCH_IPVS=m
+CONFIG_X86_DEBUGCTLMSR=y
+CONFIG_HDLC=m
+CONFIG_ATM_SOLOS=m
+CONFIG_8139TOO_PIO=y
+CONFIG_NFS_V4_1_IMPLEMENTATION_ID_DOMAIN="n"
+CONFIG_IP_SET_MAX=256
+CONFIG_HAPPYMEAL=m
+CONFIG_HID_WACOM=m
+CONFIG_USB_SERIAL_CP210X=m
+CONFIG_SND_PCMCIA=y
+CONFIG_RTC_LIB=y
+CONFIG_NET_SCH_SFQ=m
+CONFIG_EDAC_R82600=m
+CONFIG_X86_LOCAL_APIC=y
+CONFIG_USB_UEAGLEATM=m
+CONFIG_NETFILTER_XT_MATCH_POLICY=m
+CONFIG_MWL8K=m
+CONFIG_HAVE_KPROBES=y
+CONFIG_TPS65010=m
+CONFIG_IP_ROUTE_CLASSID=y
+CONFIG_MOUSE_SYNAPTICS_I2C=m
+CONFIG_NETFILTER_XT_TARGET_TEE=m
+CONFIG_HPWDT_NMI_DECODING=y
+CONFIG_ENC28J60=m
+CONFIG_TOUCHSCREEN_USB_ITM=y
+CONFIG_CRYPTO_AES=m
+CONFIG_DVB_DIB7000P=m
+CONFIG_GPIOLIB=y
+CONFIG_SSB=m
+CONFIG_FB_MATROX_I2C=m
+CONFIG_NSC_GPIO=m
+CONFIG_I2C_STUB=m
+CONFIG_VIDEO_EM28XX_RC=y
+CONFIG_RADIO_TEA5764=m
+CONFIG_USB_GSPCA_SPCA1528=m
+CONFIG_FB_SVGALIB=m
+CONFIG_PARPORT_AX88796=m
+CONFIG_HID_PID=y
+CONFIG_NV_TCO=m
+CONFIG_SMSC9420=m
+CONFIG_COMEDI_PCI_DRIVERS=m
+CONFIG_SENSORS_MAX6639=m
+CONFIG_GAMEPORT=m
+CONFIG_ISO9660_FS=m
+CONFIG_SKY2=m
+CONFIG_BT_HCIUART_H4=y
+CONFIG_XEN_WDT=m
+CONFIG_DVB_USB_M920X=m
+CONFIG_UIO=m
+CONFIG_HID_WALTOP=m
+CONFIG_B43LEGACY_DEBUG=y
+CONFIG_SCSI_VIRTIO=m
+CONFIG_NF_CONNTRACK_MARK=y
+CONFIG_HVC_DRIVER=y
+CONFIG_NETFILTER=y
+CONFIG_RC_LOOPBACK=m
+CONFIG_ISDN_DRV_AVMB1_T1PCI=m
+CONFIG_NETFILTER_XT_MATCH_HASHLIMIT=m
+CONFIG_EL2=m
+CONFIG_BRIDGE_EBT_AMONG=m
+CONFIG_COMEDI_DT2814=m
+CONFIG_B43_PIO=y
+CONFIG_USB_R8A66597_HCD=m
+CONFIG_X86_MSR=m
+CONFIG_NET_VENDOR_SMSC=y
+CONFIG_NETFILTER_XT_MATCH_CLUSTER=m
+CONFIG_USB_KC2190=y
+CONFIG_R6040=m
+CONFIG_USE_GENERIC_SMP_HELPERS=y
+CONFIG_USB_MDC800=m
+CONFIG_AIRO_CS=m
+CONFIG_HWMON_VID=m
+CONFIG_SERIO_SERPORT=m
+CONFIG_FB_BOOT_VESA_SUPPORT=y
+CONFIG_COMEDI_ME4000=m
+CONFIG_NLS_CODEPAGE_950=m
+CONFIG_DVB_STV0297=m
+CONFIG_DVB_TTUSB_DEC=m
+CONFIG_HT_IRQ=y
+CONFIG_LIRC=m
+CONFIG_SCSI_AIC94XX=m
+CONFIG_BT_BNEP=m
+CONFIG_NET_SCH_QFQ=m
+CONFIG_DVB_TDA826X=m
+CONFIG_COMEDI_MPC624=m
+CONFIG_BLK_DEV_RAM_COUNT=16
+CONFIG_SCSI_FUTURE_DOMAIN=m
+CONFIG_DRM_RADEON_KMS=y
+CONFIG_IXGBEVF=m
+CONFIG_SND_AC97_POWER_SAVE_DEFAULT=0
+CONFIG_DVB_NGENE=m
+CONFIG_RD_XZ=y
+CONFIG_IP_MROUTE=y
+CONFIG_INET_XFRM_MODE_TUNNEL=m
+CONFIG_VGA_CONSOLE=y
+CONFIG_NF_NAT_NEEDED=y
+CONFIG_PHONE_IXJ=m
+CONFIG_ATA_VERBOSE_ERROR=y
+CONFIG_ISDN_DRV_AVMB1_B1PCMCIA=m
+CONFIG_XEN_BLKDEV_FRONTEND=m
+CONFIG_NF_CONNTRACK_SNMP=m
+CONFIG_SND_DRIVERS=y
+CONFIG_USB_SERIAL_BELKIN=m
+CONFIG_W1_MASTER_DS2490=m
+CONFIG_MEDIA_TUNER_MT2266=m
+CONFIG_XFS_FS=m
+CONFIG_SENSORS_DME1737=m
+CONFIG_INPUT_KEYSPAN_REMOTE=m
+CONFIG_USB_GSPCA_PAC7302=m
+CONFIG_LOCKDEP_SUPPORT=y
+CONFIG_X86_MCE_INJECT=m
+CONFIG_TOUCHSCREEN_ELO=m
+CONFIG_NLS_CODEPAGE_869=m
+CONFIG_LINE6_USB=m
+CONFIG_SND_FIREWIRE_SPEAKERS=m
+CONFIG_SND_AZT3328=m
+CONFIG_SND_AC97_POWER_SAVE=y
+CONFIG_PCH_DMA=m
+CONFIG_SATA_VIA=m
+CONFIG_COMEDI_PCMMIO=m
+CONFIG_NO_HZ=y
+CONFIG_X86_SPEEDSTEP_CENTRINO_TABLE=y
+CONFIG_POSIX_MQUEUE=y
+CONFIG_TOUCHSCREEN_TOUCHIT213=m
+CONFIG_BINFMT_AOUT=m
+CONFIG_USB_ARCH_HAS_EHCI=y
+CONFIG_FB_PM2_FIFO_DISCONNECT=y
+CONFIG_SENSORS_LM83=m
+CONFIG_ACENIC=m
+CONFIG_X86_ESPFIX32=y
+CONFIG_COMEDI_PCM3724=m
+CONFIG_CPU_FREQ_STAT=m
+CONFIG_X86_APM_BOOT=y
+CONFIG_ISCSI_IBFT=m
+CONFIG_COMEDI_NI_DAQ_700_CS=m
+CONFIG_PCMCIA_SMC91C92=m
+CONFIG_BT_HCIDTL1=m
+CONFIG_TIFM_CORE=m
+CONFIG_XEN_PRIVCMD=m
+CONFIG_FUSION_SAS=m
+CONFIG_CHR_DEV_OSST=m
+CONFIG_MTD_DOCPROBE=m
+CONFIG_MTD_BLKDEVS=m
+CONFIG_ACORN_PARTITION=y
+CONFIG_DVB_TDA10086=m
+CONFIG_HP100=m
+CONFIG_BLK_DEV_3W_XXXX_RAID=m
+CONFIG_MEMSTICK_R592=m
+CONFIG_NET_SCH_MQPRIO=m
+CONFIG_VIDEO_CAPTURE_DRIVERS=y
+CONFIG_APDS9802ALS=m
+CONFIG_DVB_NXT6000=m
+CONFIG_MANTIS_CORE=m
+CONFIG_PATA_MARVELL=m
+CONFIG_NETFILTER_XT_MATCH_SCTP=m
+CONFIG_SATA_SIL24=m
+CONFIG_SND_PCM_OSS_PLUGINS=y
+CONFIG_NET_VENDOR_DEC=y
+CONFIG_NLS_ISO8859_15=m
+CONFIG_TOUCHSCREEN_EETI=m
+CONFIG_SENSORS_VIA686A=m
+CONFIG_INET6_ESP=m
+CONFIG_HOSTAP_PCI=m
+CONFIG_IP_VS_WRR=m
+CONFIG_AUTOFS4_FS=m
+CONFIG_ATH5K=m
+CONFIG_ACPI_BUTTON=m
+CONFIG_ILLEGAL_POINTER_VALUE=0
+CONFIG_UIO_NETX=m
+CONFIG_JFFS2_CMODE_PRIORITY=y
+CONFIG_PDA_POWER=m
+CONFIG_NETFILTER_XT_SET=m
+CONFIG_SFC_MTD=y
+CONFIG_TASKSTATS=y
+CONFIG_ARCNET_1201=m
+CONFIG_NLS_CODEPAGE_932=m
+CONFIG_CRYPTO_CRC32C_INTEL=m
+CONFIG_CAN_PLX_PCI=m
+CONFIG_CRYPTO_AES_586=m
+CONFIG_JFS_POSIX_ACL=y
+CONFIG_I2C_ALI1563=m
+CONFIG_IP6_NF_FILTER=m
+CONFIG_INPUT_MOUSEDEV_SCREEN_X=1024
+CONFIG_SND_HDA_PREALLOC_SIZE=64
+CONFIG_GARP=m
+CONFIG_PCMCIA_AHA152X=m
+CONFIG_RT2500USB=m
+CONFIG_YENTA_ENE_TUNE=y
+CONFIG_X86_XADD=y
+CONFIG_MOUSE_PS2_LIFEBOOK=y
+CONFIG_SERIO_LIBPS2=y
+CONFIG_BLK_DEV_DRBD=m
+CONFIG_IP_VS_PROTO_TCP=y
+CONFIG_ISCSI_BOOT_SYSFS=m
+CONFIG_X86_CPUID=m
+CONFIG_NET_SCH_RED=m
+CONFIG_PCI_ATMEL=m
+CONFIG_NETFILTER_XT_MATCH_CONNBYTES=m
+CONFIG_PAGE_OFFSET=0xC0000000
+CONFIG_USB_PRINTER=m
+CONFIG_FONT_8x8=y
+CONFIG_SSB_SPROM=y
+CONFIG_USB_GSPCA_PAC207=m
+CONFIG_HPLAN=m
+CONFIG_NET_VENDOR_ATHEROS=y
+CONFIG_USB_SERIAL_IR=m
+CONFIG_SKGE=m
+CONFIG_COMEDI_DT9812=m
+CONFIG_TCM_PSCSI=m
+CONFIG_RELOCATABLE=y
+CONFIG_XOR_BLOCKS=m
+CONFIG_HID_TWINHAN=m
+CONFIG_SENSORS_NTC_THERMISTOR=m
+CONFIG_MISDN_L1OIP=m
+CONFIG_DVB_PT1=m
+CONFIG_DMIID=y
+CONFIG_NET_VENDOR_SUN=y
+CONFIG_3C515=m
+CONFIG_BACKLIGHT_PROGEAR=m
+CONFIG_ASUS_WMI=m
+CONFIG_SENSORS_DS1621=m
+CONFIG_QUOTA_NETLINK_INTERFACE=y
+CONFIG_INPUT_JOYSTICK=y
+CONFIG_QNX4FS_FS=m
+CONFIG_NET_ACT_SIMP=m
+CONFIG_RT2X00_LIB=m
+CONFIG_YAM=m
+CONFIG_WD80x3=m
+CONFIG_NETFILTER_XT_MATCH_ECN=m
+CONFIG_USB_GSPCA_STV0680=m
+CONFIG_SND_FM801_TEA575X_BOOL=y
+CONFIG_USB_STORAGE_SDDR55=m
+CONFIG_PPDEV=m
+CONFIG_SPARSEMEM_STATIC=y
+CONFIG_IP_NF_TARGET_TTL=m
+CONFIG_AMILO_RFKILL=m
+CONFIG_ISDN_DRV_AVMB1_B1PCI=m
+CONFIG_CFG80211_DEFAULT_PS=y
+CONFIG_USB_LED=m
+CONFIG_GENERIC_IOMAP=y
+CONFIG_USBIP_HOST=m
+CONFIG_I2O=m
+CONFIG_TOUCHSCREEN_WACOM_W8001=m
+CONFIG_DVB_PLUTO2=m
+CONFIG_XEN_FBDEV_FRONTEND=y
+CONFIG_SPARSEMEM_MANUAL=y
+CONFIG_DVB_AV7110=m
+CONFIG_RT2X00_LIB_FIRMWARE=y
+CONFIG_DL2K=m
+CONFIG_I2O_LCT_NOTIFY_ON_CHANGES=y
+CONFIG_SMP=y
+CONFIG_FB_KYRO=m
+CONFIG_DVB_ZL10353=m
+CONFIG_NETFILTER_XT_MATCH_TIME=m
+CONFIG_SND_HDA_POWER_SAVE=y
+CONFIG_IP_VS=m
+CONFIG_HAVE_KERNEL_GZIP=y
+CONFIG_ZSMALLOC=m
+CONFIG_DM_UEVENT=y
+CONFIG_CAN_ESD_USB2=m
+CONFIG_X86_USE_PPRO_CHECKSUM=y
+CONFIG_SND_MSND_CLASSIC=m
+CONFIG_NET_VENDOR_I825XX=y
+CONFIG_SEALEVEL_4021=m
+CONFIG_USB_XUSBATM=m
+CONFIG_PNP=y
+CONFIG_RTC_DRV_RP5C01=m
+CONFIG_NETFILTER_XT_MATCH_MAC=m
+CONFIG_I2C_NFORCE2_S4985=m
+CONFIG_YELLOWFIN=m
+CONFIG_TOUCHSCREEN_TPS6507X=m
+CONFIG_NET_ACT_PEDIT=m
+CONFIG_NETFILTER_XT_TARGET_NFLOG=m
+CONFIG_TOUCHSCREEN_USB_JASTEC=y
+CONFIG_GENERIC_ALLOCATOR=y
+CONFIG_RTC_DRV_DS1390=m
+CONFIG_L2TP=m
+CONFIG_DVB_B2C2_FLEXCOP_USB=m
+CONFIG_X86_POPAD_OK=y
+CONFIG_TCP_CONG_WESTWOOD=m
+CONFIG_ATM_FORE200E_TX_RETRY=16
+CONFIG_USB_GSPCA_SPCA561=m
+CONFIG_DRM_GMA600=y
+CONFIG_GENERIC_IO=y
+CONFIG_LIBCRC32C=m
+CONFIG_MFD_PCF50633=m
+CONFIG_GENERIC_BUG=y
+CONFIG_CRYPTO_SHA256=m
+CONFIG_HAVE_FTRACE_MCOUNT_RECORD=y
+CONFIG_JOYSTICK_GUILLEMOT=m
+CONFIG_BAYCOM_EPP=m
+CONFIG_INET_TCP_DIAG=m
+CONFIG_HID_SONY=m
+CONFIG_VIDEO_PVRUSB2_DVB=y
+CONFIG_HW_CONSOLE=y
+CONFIG_MDIO_BITBANG=m
+CONFIG_NET_ACT_IPT=m
+CONFIG_PARIDE_ON26=m
+CONFIG_SCSI_BNX2X_FCOE=m
+CONFIG_IPX=m
+CONFIG_HYPERV_NET=m
+CONFIG_SERIAL_8250_ACCENT=m
+CONFIG_SMSC_PHY=m
+CONFIG_HP_ACCEL=m
+CONFIG_CAN_EMS_PCI=m
+CONFIG_SCSI_BNX2_ISCSI=m
+CONFIG_OMFS_FS=m
+CONFIG_USB_GSPCA_ZC3XX=m
+CONFIG_SND_ES1968=m
+CONFIG_SND_SPI=y
+CONFIG_EUROTECH_WDT=m
+CONFIG_TOUCHSCREEN_MTOUCH=m
+CONFIG_BRIDGE_EBT_IP=m
+CONFIG_PARIDE_EPAT=m
+CONFIG_HID_MONTEREY=m
+CONFIG_FB_UDL=m
+CONFIG_USB_SERIAL_CYPRESS_M8=m
+CONFIG_FB_NEOMAGIC=m
+CONFIG_HID_EZKEY=m
+CONFIG_PADATA=y
+CONFIG_IOSCHED_NOOP=y
+CONFIG_SND_OPL4_LIB_SEQ=m
+CONFIG_DVB_S5H1409=m
+CONFIG_IPW2200_QOS=y
+CONFIG_SCSI_LOWLEVEL_PCMCIA=y
+CONFIG_JFFS2_FS_POSIX_ACL=y
+CONFIG_DM_THIN_PROVISIONING=m
+CONFIG_SERIAL_NONSTANDARD=y
+CONFIG_RT61PCI=m
+CONFIG_PATA_JMICRON=m
+CONFIG_SCSI_OSD_ULD=m
+CONFIG_JOYSTICK_XPAD_LEDS=y
+CONFIG_IPW2100=m
+CONFIG_SCSI_PPA=m
+CONFIG_BT_MRVL=m
+CONFIG_QUOTACTL=y
+CONFIG_RTC_DRV_RX8581=m
+CONFIG_FB_SAVAGE_I2C=y
+CONFIG_PARAVIRT=y
+CONFIG_ISDN_CAPI_CAPI20=m
+CONFIG_CRYPTO_CRYPTD=m
+CONFIG_SCSI_EATA_MAX_TAGS=16
+CONFIG_HAVE_IOREMAP_PROT=y
+CONFIG_PNPBIOS_PROC_FS=y
+CONFIG_USBIP_VHCI_HCD=m
+CONFIG_PATA_RZ1000=m
+CONFIG_GENERIC_ACL=y
+CONFIG_CAPI_TRACE=y
+CONFIG_DEBUG_KERNEL=y
+CONFIG_MTD_RAM=m
+CONFIG_RTL8192DE=m
+CONFIG_ACPI_TOSHIBA=m
+CONFIG_GAMEPORT_NS558=m
+CONFIG_VIDEO_CX2341X=m
+CONFIG_LOCALVERSION=""
+CONFIG_NCPFS_IOCTL_LOCKING=y
+CONFIG_REISERFS_FS_SECURITY=y
+CONFIG_DVB_STV6110x=m
+CONFIG_PATA_IT821X=m
+CONFIG_ACERHDF=m
+CONFIG_RADIO_ADAPTERS=y
+CONFIG_MEMTEST=y
+CONFIG_KEYBOARD_XTKBD=m
+CONFIG_HAVE_PCSPKR_PLATFORM=y
+CONFIG_NFS_FSCACHE=y
+CONFIG_MAC80211_MESH=y
+CONFIG_MMC_WBSD=m
+CONFIG_USB_GSPCA_TOPRO=m
+CONFIG_USB_GSPCA_MARS=m
+CONFIG_CAN_RAW=m
+CONFIG_CRYPTO=y
+CONFIG_FB_MATROX_MILLENIUM=y
+CONFIG_SENSORS_EMC6W201=m
+CONFIG_USB_TRANCEVIBRATOR=m
+CONFIG_CPU_SUP_TRANSMETA_32=y
+CONFIG_SCHED_DEBUG=y
+CONFIG_USB_STKWEBCAM=m
+CONFIG_NET_VENDOR_BROCADE=y
+CONFIG_BTRFS_FS=m
+CONFIG_DEFAULT_MMAP_MIN_ADDR=65536
+CONFIG_ASYNC_TX_DISABLE_XOR_VAL_DMA=y
+CONFIG_A11Y_BRAILLE_CONSOLE=y
+CONFIG_SND_USB_6FIRE=m
+CONFIG_SND_HDA_HWDEP=y
+CONFIG_I2C_SIS96X=m
+CONFIG_MMC_TIFM_SD=m
+CONFIG_SONYPI=m
+CONFIG_GFS2_FS_LOCKING_DLM=y
+CONFIG_SND_SB8_DSP=m
+CONFIG_MEDIA_TUNER_TDA18218=m
+CONFIG_IP_NF_IPTABLES=m
+CONFIG_W1_SLAVE_BQ27000=m
+CONFIG_BT_BNEP_PROTO_FILTER=y
+CONFIG_FB_VIRTUAL=m
+CONFIG_NET_VENDOR_QLOGIC=y
+CONFIG_USB_GSPCA_CPIA1=m
+CONFIG_PARIDE_PF=m
+CONFIG_USB_XHCI_HCD=m
+CONFIG_VIRTIO=m
+CONFIG_HAVE_DMA_API_DEBUG=y
+CONFIG_DEFAULT_CUBIC=y
+CONFIG_CAN_KVASER_PCI=m
+CONFIG_YENTA_TI=y
+CONFIG_COMEDI_NI_660X=m
+CONFIG_MFD_SM501=m
+CONFIG_HID_SAMSUNG=m
+CONFIG_IP_SET_LIST_SET=m
+CONFIG_TCM_IBLOCK=m
+CONFIG_IP_PIMSM_V2=y
+CONFIG_X86_MCE_THRESHOLD=y
+CONFIG_USB_ISIGHTFW=m
+CONFIG_JME=m
+CONFIG_SND_HDA_CODEC_CMEDIA=y
+CONFIG_YENTA_O2=y
+CONFIG_SND_SEQ_HRTIMER_DEFAULT=y
+CONFIG_USB_ARCH_HAS_HCD=y
+CONFIG_DVB_DIB3000MC=m
+CONFIG_STRICT_DEVMEM=y
+CONFIG_CACHEFILES=m
+CONFIG_PATA_OLDPIIX=m
+CONFIG_GENERIC_IRQ_SHOW=y
+CONFIG_SND_HDA_CODEC_SI3054=y
+CONFIG_IPV6_OPTIMISTIC_DAD=y
+CONFIG_9P_FS=m
+CONFIG_JOYSTICK_A3D=m
+CONFIG_SENSORS_ATK0110=m
+CONFIG_FB_VIA_X_COMPATIBILITY=y
+CONFIG_TCP_CONG_HSTCP=m
+CONFIG_SCSI_MOD=m
+CONFIG_SCSI_DPT_I2O=m
+CONFIG_SCx200=m
+CONFIG_AGP_SWORKS=y
+CONFIG_NET_VENDOR_MICREL=y
+CONFIG_AUDIT_TREE=y
+CONFIG_FB_PM2=m
+CONFIG_GIGASET_M105=m
+CONFIG_TOSHIBA=m
+CONFIG_JOYSTICK_ZHENHUA=m
+CONFIG_USB_SERIAL_SPCP8X5=m
+CONFIG_SCx200_I2C_SDA=13
+CONFIG_B43_LEDS=y
+CONFIG_UBIFS_FS_XATTR=y
+CONFIG_P54_USB=m
+CONFIG_TOUCHSCREEN_MK712=m
+CONFIG_FB_ATY=m
+CONFIG_USB_GSPCA_KINECT=m
+CONFIG_SPEAKUP_SYNTH_DECEXT=m
+CONFIG_COMEDI_DAQBOARD2000=m
+CONFIG_OPROFILE=m
+CONFIG_CRYPTO_CRC32C=m
+CONFIG_SERIAL_CORE=y
+CONFIG_FUSE_FS=m
+CONFIG_UID16=y
+CONFIG_ETHOC=m
+CONFIG_ACPI_HED=y
+CONFIG_TMSPCI=m
+CONFIG_HID_MICROSOFT=m
+CONFIG_ARCH_PHYS_ADDR_T_64BIT=y
+CONFIG_RTC_DRV_S35390A=m
+CONFIG_HAVE_KRETPROBES=y
+CONFIG_SCSI_IMM=m
+CONFIG_AGP_VIA=y
+CONFIG_PCH_CAN=m
+CONFIG_NF_DEFRAG_IPV6=m
+CONFIG_USB_GSPCA_CONEX=m
+CONFIG_MICREL_PHY=m
+CONFIG_VIDEO_DEV=m
+CONFIG_SGI_IOC4=m
+CONFIG_NFS_V4=y
+CONFIG_IRCOMM=m
+CONFIG_PPP_FILTER=y
+CONFIG_MTD_SLRAM=m
+CONFIG_INLINE_READ_UNLOCK=y
+CONFIG_MTD_ROM=m
+CONFIG_USB_ET61X251=m
+CONFIG_PATA_PDC2027X=m
+CONFIG_FB_I810=m
+CONFIG_HAS_DMA=y
+CONFIG_INTEL_IPS=m
+CONFIG_EDAC=y
+CONFIG_NF_CT_PROTO_SCTP=m
+CONFIG_SND_CMI8330=m
+CONFIG_USB_SERIAL_VISOR=m
+CONFIG_MTD_PMC551=m
+CONFIG_BROADCOM_PHY=m
+CONFIG_COMEDI_PCMUIO=m
+CONFIG_IO_DELAY_TYPE_NONE=3
+CONFIG_SCSI_QLOGIC_FAS=m
+CONFIG_SCSI=m
+CONFIG_FB_CFB_FILLRECT=y
+CONFIG_HYPERV=m
+CONFIG_AT76C50X_USB=m
+CONFIG_SCSI_U14_34F_MAX_TAGS=8
+CONFIG_NF_NAT_PPTP=m
+CONFIG_HID_CHICONY=m
+CONFIG_HID=m
+CONFIG_HW_RANDOM_AMD=m
+CONFIG_LIBERTAS_THINFIRM_USB=m
+CONFIG_SLIP_SMART=y
+CONFIG_IXGB=m
+CONFIG_NLS_ISO8859_9=m
+CONFIG_FIRMWARE_EDID=y
+CONFIG_SND_SERIAL_U16550=m
+CONFIG_USB_ARMLINUX=y
+CONFIG_I2C_SMBUS=m
+CONFIG_IP_VS_PE_SIP=m
+CONFIG_JOYSTICK_GF2K=m
+CONFIG_RTLWIFI=m
+CONFIG_LTPC=m
+CONFIG_X86_POWERNOW_K6=m
+CONFIG_LEDS_TRIGGER_DEFAULT_ON=m
+CONFIG_MXM_WMI=m
+CONFIG_FONT_8x16=y
+CONFIG_NET_VENDOR_MELLANOX=y
+CONFIG_MAC80211_HWSIM=m
+CONFIG_DVB_LGDT330X=m
+CONFIG_SERIAL_8250_MANY_PORTS=y
+CONFIG_VT_CONSOLE_SLEEP=y
+CONFIG_LIBFC=m
+CONFIG_LEDS_NET48XX=m
+CONFIG_X86_MCE_INTEL=y
+CONFIG_ARCH_ENABLE_MEMORY_HOTPLUG=y
+CONFIG_RTC_DRV_CMOS=y
+CONFIG_TOUCHSCREEN_HTCPEN=m
+CONFIG_PTP_1588_CLOCK=m
+CONFIG_IEEE802154_DRIVERS=m
+CONFIG_ADFS_FS=m
+CONFIG_TOUCHSCREEN_USB_IRTOUCH=y
+CONFIG_PATA_AMD=m
+CONFIG_USB_PWC=m
+CONFIG_SQUASHFS_FRAGMENT_CACHE_SIZE=3
+CONFIG_SENSORS_AD7414=m
+CONFIG_MEDIA_TUNER_TDA8290=m
+CONFIG_COMEDI_ADV_PCI_DIO=m
+CONFIG_TOUCHSCREEN_USB_PANJIT=y
+CONFIG_RT2800PCI_RT53XX=y
+CONFIG_BONDING=m
+CONFIG_SECURITY_TOMOYO_ACTIVATION_TRIGGER="/sbin/init"
+CONFIG_MEDIA_TUNER_TDA18212=m
+CONFIG_ARCH_HAS_CACHE_LINE_SIZE=y
+CONFIG_SCx200_I2C=m
+CONFIG_JBD2=m
+CONFIG_SENSORS_ASB100=m
+CONFIG_SND_INTEL8X0=m
+CONFIG_COMEDI_NI_ATMIO=m
+CONFIG_PATA_NS87415=m
+CONFIG_USBIP_CORE=m
+CONFIG_ATM_BR2684=m
+CONFIG_IB700_WDT=m
+CONFIG_MMC_USHC=m
+CONFIG_COMEDI_CB_PCIDAS64=m
+CONFIG_SPI_TLE62X0=m
+CONFIG_INET6_IPCOMP=m
+CONFIG_SONY_LAPTOP=m
+CONFIG_QLCNIC=m
+CONFIG_FB_SIS_315=y
+CONFIG_IRDA_FAST_RR=y
+CONFIG_NET_VENDOR_MARVELL=y
+CONFIG_PHYLIB=m
+CONFIG_IGB_DCA=y
+CONFIG_IPV6_TUNNEL=m
+CONFIG_SENSORS_LM77=m
+CONFIG_W1_SLAVE_DS2760=m
+CONFIG_NET_VENDOR_NVIDIA=y
+CONFIG_DVB_TDA665x=m
+CONFIG_PARIDE_BPCK6=m
+CONFIG_NLS_CODEPAGE_874=m
+CONFIG_UBIFS_FS_ADVANCED_COMPR=y
+CONFIG_GIGASET_CAPI=y
+CONFIG_OPTIMIZE_INLINING=y
+CONFIG_ULTRIX_PARTITION=y
+CONFIG_VIRTIO_BALLOON=m
+CONFIG_HOTPLUG_PCI_CPCI_GENERIC=m
+CONFIG_LSM_MMAP_MIN_ADDR=0
+CONFIG_SCSI_ARCMSR=m
+CONFIG_COMEDI_AMPLC_DIO200=m
+CONFIG_MTD_NAND_DISKONCHIP_PROBE_ADDRESS=0
+CONFIG_CAN_PEAK_PCI=m
+CONFIG_PPS_CLIENT_LDISC=m
+CONFIG_MTD_ONENAND_2X_PROGRAM=y
+CONFIG_MEDIA_TUNER_MT20XX=m
+CONFIG_NET_TULIP=y
+CONFIG_JFFS2_RTIME=y
+CONFIG_IPC_NS=y
+CONFIG_MISC_FILESYSTEMS=y
+CONFIG_FTRACE=y
+CONFIG_NETFILTER_XT_MATCH_CONNLIMIT=m
+CONFIG_ATP=m
+CONFIG_X86_THERMAL_VECTOR=y
+CONFIG_IP_NF_SECURITY=m
+CONFIG_IP_NF_RAW=m
+CONFIG_IP_NF_ARPFILTER=m
+CONFIG_TOUCHSCREEN_USB_ETT_TC45USB=y
+CONFIG_LIRC_SERIAL_TRANSMITTER=y
+CONFIG_W1_CON=y
+CONFIG_NETFILTER_XT_MATCH_SOCKET=m
+CONFIG_PPPOL2TP=m
+CONFIG_SYNCLINK=m
+CONFIG_KEYBOARD_ADP5588=m
+CONFIG_CLOCKSOURCE_WATCHDOG=y
+CONFIG_R8712U=m
+CONFIG_HID_TOPSEED=m
+CONFIG_B43_PHY_HT=y
+CONFIG_FB_VT8623=m
+CONFIG_DECOMPRESS_BZIP2=y
+CONFIG_SCx200_I2C_SCL=12
+CONFIG_RT2800PCI_RT33XX=y
+CONFIG_CORDIC=m
+CONFIG_COMEDI_CB_PCIDAS=m
+CONFIG_FB_TRIDENT=m
+CONFIG_SENSORS_ADM1029=m
+CONFIG_KSM=y
+CONFIG_NET_VENDOR_STMICRO=y
+CONFIG_EDAC_I3000=m
+CONFIG_DECNET=m
+CONFIG_TOPSTAR_LAPTOP=m
+CONFIG_AGP_SIS=y
+CONFIG_NF_NAT_H323=m
+CONFIG_XZ_DEC_SPARC=y
+CONFIG_JOYSTICK_TURBOGRAFX=m
+CONFIG_SKISA=m
+CONFIG_COMEDI_DMM32AT=m
+CONFIG_JFFS2_SUMMARY=y
+CONFIG_IR_ENE=m
+CONFIG_ALIM1535_WDT=m
+CONFIG_GIGASET_BASE=m
+CONFIG_INLINE_READ_UNLOCK_IRQ=y
+CONFIG_GACT_PROB=y
+CONFIG_MISDN_ISAR=m
+CONFIG_REALTEK_PHY=m
+CONFIG_PROC_VMCORE=y
+CONFIG_HID_A4TECH=m
+CONFIG_MEDIA_TUNER_MC44S803=m
+CONFIG_NLS_CODEPAGE_860=m
+CONFIG_SND_MONA=m
+CONFIG_NETFILTER_XT_MATCH_ESP=m
+CONFIG_PRINT_QUOTA_WARNING=y
+CONFIG_NIU=m
+CONFIG_IP_NF_TARGET_NETMAP=m
+CONFIG_USB_GSPCA_SPCA505=m
+CONFIG_RCU_CPU_STALL_TIMEOUT=60
+CONFIG_USB_GSPCA_SQ905C=m
+CONFIG_SATA_VITESSE=m
+CONFIG_USB_ZR364XX=m
+CONFIG_PRINTER=m
+CONFIG_RTC_DRV_ISL1208=m
+CONFIG_ISDN_DIVAS_DIVACAPI=m
+CONFIG_SND_VERBOSE_PROCFS=y
+CONFIG_SND_FIREWIRE_LIB=m
+CONFIG_LAPB=m
+CONFIG_SECURITY_TOMOYO_MAX_ACCEPT_ENTRY=2048
+CONFIG_IP_ROUTE_MULTIPATH=y
+CONFIG_RTC_DRV_PCF2123=m
+CONFIG_ISDN_DIVAS_USERIDI=m
+CONFIG_DVB_LNBP21=m
+CONFIG_XEN_NETDEV_FRONTEND=m
+CONFIG_M25PXX_USE_FAST_READ=y
+CONFIG_DVB_TDA10048=m
+CONFIG_INPUT_FF_MEMLESS=m
+CONFIG_PARAVIRT_CLOCK=y
+CONFIG_SENSORS_W83627HF=m
+CONFIG_CHR_DEV_SG=m
+CONFIG_USB_CDC_PHONET=m
+CONFIG_IP_SET_HASH_NET=m
+CONFIG_NET_SCH_DSMARK=m
+CONFIG_SND_AD1889=m
+CONFIG_SSB_DRIVER_PCICORE_POSSIBLE=y
+CONFIG_MISDN_AVMFRITZ=m
+CONFIG_X86_RESERVE_LOW=64
+CONFIG_SMS_SDIO_DRV=m
+CONFIG_NEED_SG_DMA_LENGTH=y
+CONFIG_SERIAL_8250_HUB6=m
+CONFIG_SND_MPU401=m
+CONFIG_DVB_CX24116=m
+CONFIG_CRYPTO_XCBC=m
+CONFIG_NF_NAT_AMANDA=m
+CONFIG_IPW2200=m
+CONFIG_BRIDGE_EBT_MARK=m
+CONFIG_KEYBOARD_QT2160=m
+CONFIG_SENSORS_ADT7411=m
+CONFIG_IXGBE_DCA=y
+CONFIG_IP6_NF_MATCH_IPV6HEADER=m
+CONFIG_MACVLAN=m
+CONFIG_PATA_PDC_OLD=m
+CONFIG_L2TP_V3=y
+CONFIG_CHELSIO_T1_1G=y
+CONFIG_SND_SSCAPE=m
+CONFIG_IBMTR=m
+CONFIG_FB_ARK=m
+CONFIG_JOYSTICK_IFORCE=m
+CONFIG_PCIEASPM_DEFAULT=y
+CONFIG_PROFILING=y
+CONFIG_PCF50633_ADC=m
+CONFIG_ARCNET=m
+CONFIG_I2C_ALI15X3=m
+CONFIG_SPARSEMEM=y
+CONFIG_INET6_XFRM_MODE_TRANSPORT=m
+CONFIG_COMEDI_ADDI_APCI_2032=m
+CONFIG_SND_ALS100=m
+CONFIG_CRYPTO_ARC4=m
+CONFIG_SND_TEA575X=m
+CONFIG_IEEE802154_6LOWPAN=m
+CONFIG_VHOST_NET=m
+CONFIG_DVB_STV0900=m
+CONFIG_I2C_NFORCE2=m
+CONFIG_USB_SERIAL_DIGI_ACCELEPORT=m
+CONFIG_USB_GL860=m
+CONFIG_SLHC=m
+CONFIG_NET_VENDOR_TEHUTI=y
+CONFIG_SND_ALS300=m
+CONFIG_I2C_EG20T=m
+CONFIG_SCSI_TGT=m
+CONFIG_CRYPTO_MANAGER=y
+CONFIG_NET_SCH_HTB=m
+CONFIG_EEPROM_AT24=m
+CONFIG_UIO_SERCOS3=m
+CONFIG_PPP_BSDCOMP=m
+CONFIG_SCHED_SMT=y
+CONFIG_DVB_USB_TTUSB2=m
+CONFIG_MTD_NAND=m
+CONFIG_RT_MUTEXES=y
+CONFIG_SCx200HR_TIMER=m
+CONFIG_HID_ORTEK=m
+CONFIG_NETFILTER_XT_TARGET_MARK=m
+CONFIG_MEDIA_TUNER_MXL5007T=m
+CONFIG_TCIC=m
+CONFIG_DRM_I2C_SIL164=m
+CONFIG_MD_LINEAR=m
+CONFIG_HUGETLBFS=y
+CONFIG_CHECK_SIGNATURE=y
+CONFIG_DVB_TDA10021=m
+CONFIG_VIDEO_CX231XX_DVB=m
+CONFIG_WL1251=m
+CONFIG_I2C_ALGOBIT=m
+CONFIG_IPV6_SUBTREES=y
+CONFIG_MMC_BLOCK=m
+CONFIG_NET_CLS_FW=m
+CONFIG_KVM=m
+CONFIG_SND_PCI=y
+CONFIG_BATTERY_BQ27X00_I2C=y
+CONFIG_ATM_FORE200E_DEBUG=0
+CONFIG_ATL1C=m
+CONFIG_HW_RANDOM_INTEL=m
+CONFIG_LIRC_SERIAL=m
+CONFIG_LXT_PHY=m
+CONFIG_FB_MB862XX=m
+CONFIG_VIDEO_MT9V011=m
+CONFIG_WIRELESS=y
+CONFIG_WEXT_PROC=y
+CONFIG_SQUASHFS=m
+CONFIG_EDAC_I7CORE=m
+CONFIG_HZ_250=y
+CONFIG_FB_N411=m
+CONFIG_X86_IO_APIC=y
+CONFIG_DELL_WMI_AIO=m
+CONFIG_SND_ALS4000=m
+CONFIG_USB_GSPCA_KONICA=m
+CONFIG_NET_SCH_TBF=m
+CONFIG_SND_SC6000=m
+CONFIG_BT_HCIBTUSB=m
+CONFIG_DVB_CX22702=m
+CONFIG_SERIO_RAW=m
+CONFIG_TASK_IO_ACCOUNTING=y
+CONFIG_FAT_DEFAULT_IOCHARSET="utf8"
+CONFIG_UWB=m
+CONFIG_ASYNC_XOR=m
+CONFIG_I2O_CONFIG=m
+CONFIG_ISDN_CAPI_MIDDLEWARE=y
+CONFIG_NET_CLS_RSVP=m
+CONFIG_TIPC=m
+CONFIG_DVB_STB6100=m
+CONFIG_W83977F_WDT=m
+CONFIG_MD_RAID0=m
+CONFIG_FRAME_WARN=1024
+CONFIG_NE2000=m
+CONFIG_USB_NET_CDC_NCM=m
+CONFIG_FB_SIS_300=y
+CONFIG_ACT200L_DONGLE=m
+CONFIG_HP_WATCHDOG=m
+CONFIG_COMEDI_USB_DRIVERS=m
+CONFIG_PATA_SCH=m
+CONFIG_GENERIC_HWEIGHT=y
+CONFIG_INITRAMFS_SOURCE=""
+CONFIG_PATA_NETCELL=m
+CONFIG_SND_GUSEXTREME=m
+CONFIG_ATM_CLIP=m
+CONFIG_COMEDI_RTD520=m
+CONFIG_SND_HDA_CODEC_SIGMATEL=y
+CONFIG_SND_ADLIB=m
+CONFIG_CGROUPS=y
+CONFIG_SND_USB_CAIAQ_INPUT=y
+CONFIG_MMC=m
+CONFIG_LZO_COMPRESS=y
+CONFIG_MOUSE_PC110PAD=m
+CONFIG_TOUCHSCREEN_USB_GUNZE=y
+CONFIG_CRYPTO_SEQIV=m
+CONFIG_COMEDI_QUATECH_DAQP_CS=m
+CONFIG_TOUCHSCREEN_AD7877=m
+CONFIG_SND_HDA_POWER_SAVE_DEFAULT=0
+CONFIG_9P_FSCACHE=y
+CONFIG_HID_LOGITECH=m
+CONFIG_SND_INDIGODJX=m
+CONFIG_ARCNET_COM90xx=m
+CONFIG_DM_LOG_USERSPACE=m
+CONFIG_JOYSTICK_GAMECON=m
+CONFIG_SCSI_ENCLOSURE=m
+CONFIG_CAPI_EICON=y
+CONFIG_STACKTRACE=y
+CONFIG_SENSORS_LM92=m
+CONFIG_COMEDI_ADDI_APCI_3120=m
+CONFIG_SCSI_SAS_LIBSAS=m
+CONFIG_ISCSI_TARGET=m
+CONFIG_ARCNET_RIM_I=m
+CONFIG_HID_WACOM_POWER_SUPPLY=y
+CONFIG_OPROFILE_NMI_TIMER=y
+CONFIG_NETFILTER_XT_TARGET_IDLETIMER=m
+CONFIG_FB_ATY128=m
+CONFIG_UIO_AEC=m
+CONFIG_SCSI_PM8001=m
+CONFIG_USB_NET_RNDIS_WLAN=m
+CONFIG_ARCH_SUPPORTS_DEBUG_PAGEALLOC=y
+CONFIG_VIDEO_TUNER=m
+CONFIG_IFB=m
+CONFIG_HAS_IOPORT=y
+CONFIG_LEDS_LP3944=m
+CONFIG_USB_SEVSEG=m
+CONFIG_SND_MPU401_UART=m
+CONFIG_RTC_DRV_PCF8563=m
+CONFIG_SND_CS4236=m
+CONFIG_PPTP=m
+CONFIG_SENSORS_SMSC47M1=m
+CONFIG_SND_USB_US122L=m
+CONFIG_USB_DSBR=m
+CONFIG_ISCSI_IBFT_FIND=y
+CONFIG_ACORN_PARTITION_ICS=y
+CONFIG_DCB=y
+CONFIG_PCIPCWATCHDOG=m
+CONFIG_CGROUP_CPUACCT=y
+CONFIG_USB_SERIAL_OTI6858=m
+CONFIG_ACTISYS_DONGLE=m
+CONFIG_CAN_BCM=m
+CONFIG_PATA_CS5520=m
+CONFIG_X86_CMPXCHG64=y
+CONFIG_VIDEO_SAA7146_VV=m
+CONFIG_NET_VENDOR_VIA=y
+CONFIG_USB_ATM=m
+CONFIG_ISA_DMA_API=y
+CONFIG_PCMCIA_FDOMAIN=m
+CONFIG_HZ=250
+CONFIG_SERIAL_8250_SHARE_IRQ=y
+CONFIG_I2C_HELPER_AUTO=y
+CONFIG_NETFILTER_XT_MATCH_U32=m
+CONFIG_SQUASHFS_ZLIB=y
+CONFIG_AGP_INTEL=y
+CONFIG_INLINE_SPIN_UNLOCK_IRQ=y
+CONFIG_NLS_ISO8859_4=m
+CONFIG_TOUCHSCREEN_AD7879_I2C=m
+CONFIG_INTEL_OAKTRAIL=m
+CONFIG_SND_MTS64=m
+CONFIG_FB_BACKLIGHT=y
+CONFIG_RTC_DRV_RX8025=m
+CONFIG_EDAC_I82860=m
+CONFIG_SERIAL_8250_NR_UARTS=32
+CONFIG_CRYPTO_RMD160=m
+CONFIG_IR_IMON=m
+CONFIG_PATA_HPT366=m
+CONFIG_SCSI_EATA=m
+CONFIG_INET_AH=m
+CONFIG_SENSORS_ATXP1=m
+CONFIG_HAVE_USER_RETURN_NOTIFIER=y
+CONFIG_DEFAULT_IOSCHED="cfq"
+CONFIG_DRM_I2C_CH7006=m
+CONFIG_TABLET_USB_KBTAB=m
+CONFIG_UDF_FS=m
+CONFIG_IPV6_MIP6=y
+CONFIG_MARVELL_PHY=m
+CONFIG_VXFS_FS=m
+CONFIG_CGROUP_PERF=y
+CONFIG_NLATTR=y
+CONFIG_SND_LOLA=m
+CONFIG_ISDN_CAPI=m
+CONFIG_HOTPLUG_PCI=y
+CONFIG_ZD1211RW=m
+CONFIG_TCP_CONG_CUBIC=y
+CONFIG_CEPH_FS=m
+CONFIG_SCSI_NETLINK=y
+CONFIG_TR=y
+CONFIG_NR_CPUS=32
+CONFIG_IXGBE=m
+CONFIG_SUSPEND_FREEZER=y
+CONFIG_LIRC_IMON=m
+CONFIG_MMC_SDHCI=m
+CONFIG_B43_SSB=y
+CONFIG_SND_SUPPORT_OLD_API=y
+CONFIG_LEDS_WRAP=m
+CONFIG_DVB_DIB7000M=m
+CONFIG_NETFILTER_XT_CONNMARK=m
+CONFIG_LEDS_LT3593=m
+CONFIG_LOGITECH_FF=y
+CONFIG_HID_KYE=m
+CONFIG_MOUSE_PS2_TRACKPOINT=y
+CONFIG_MOUSE_VSXXXAA=m
+CONFIG_IP_MROUTE_MULTIPLE_TABLES=y
+CONFIG_VIDEO_TM6000_ALSA=m
+CONFIG_WL12XX_SDIO=m
+CONFIG_DRM_NOUVEAU_BACKLIGHT=y
+CONFIG_SOFT_WATCHDOG=m
+CONFIG_SYSFS=y
+CONFIG_IPWIRELESS=m
+CONFIG_PARIDE_FRPW=m
+CONFIG_IP_SET_BITMAP_IPMAC=m
+CONFIG_MTD_NAND_RICOH=m
+CONFIG_LIB80211_CRYPT_WEP=m
+CONFIG_DELL_WMI=m
+CONFIG_HAVE_FUNCTION_TRACE_MCOUNT_TEST=y
+CONFIG_SENSORS_W83791D=m
+CONFIG_INPUT_TOUCHSCREEN=y
+CONFIG_RADIO_SI4713=m
+CONFIG_DSCC4_PCI_RST=y
+CONFIG_I2C_VIAPRO=m
+CONFIG_USB_GSPCA_NW80X=m
+CONFIG_IP_NF_MATCH_AH=m
+CONFIG_INFINIBAND_SRP=m
+CONFIG_SYNCLINK_CS=m
+CONFIG_CARL9170_WPC=y
+CONFIG_TCP_CONG_VENO=m
+CONFIG_DVB_S5H1420=m
+CONFIG_INFINIBAND=m
+CONFIG_AFS_FS=m
+CONFIG_COMEDI_S526=m
+CONFIG_COMEDI_DAS1800=m
+CONFIG_DVB_NET=y
+CONFIG_I2C_PARPORT_LIGHT=m
+CONFIG_NETFILTER_XT_MATCH_LIMIT=m
+CONFIG_CRYPTO_AES_NI_INTEL=m
+CONFIG_ULI526X=m
+CONFIG_IP6_NF_QUEUE=m
+CONFIG_NET_KEY_MIGRATE=y
+CONFIG_CC_STACKPROTECTOR=y
+CONFIG_I2C_SIMTEC=m
+CONFIG_XZ_DEC_ARM=y
+CONFIG_DEFAULT_IO_DELAY_TYPE=0
+CONFIG_NLS_CODEPAGE_775=m
+CONFIG_IRLAN=m
+CONFIG_MOUSE_SERIAL=m
+CONFIG_FB_SYS_FOPS=y
+CONFIG_JOYSTICK_ANALOG=m
+CONFIG_MISDN_HFCPCI=m
+CONFIG_WIMAX=m
+CONFIG_EXT2_FS_SECURITY=y
+CONFIG_I2O_SCSI=m
+CONFIG_HAVE_SYSCALL_TRACEPOINTS=y
+CONFIG_MEDIA_TUNER_XC4000=m
+CONFIG_NETFILTER_XT_MATCH_DEVGROUP=m
+CONFIG_ACPI_BATTERY=m
+CONFIG_DVB_LGDT3305=m
+CONFIG_MEMSTICK=m
+CONFIG_HOTPLUG_PCI_COMPAQ=m
+CONFIG_VIDEO_SAA7146=m
+CONFIG_MTD_COMPLEX_MAPPINGS=y
+CONFIG_FB=y
+CONFIG_TRACING=y
+CONFIG_X86_SPEEDSTEP_SMI=m
+CONFIG_NLS_CODEPAGE_865=m
+CONFIG_I2C_COMPAT=y
+CONFIG_KEYBOARD_OPENCORES=m
+CONFIG_LIRC_IGORPLUGUSB=m
+CONFIG_NFSD_V3_ACL=y
+CONFIG_USB_GSPCA_SPCA500=m
+CONFIG_I2O_BLOCK=m
+CONFIG_NET_ACT_NAT=m
+CONFIG_OCFS2_FS_STATS=y
+CONFIG_VIRTUALIZATION=y
+CONFIG_MSDOS_PARTITION=y
+CONFIG_COMEDI_RTI800=m
+CONFIG_MYRI10GE_DCA=y
+CONFIG_COMEDI_ADL_PCI7296=m
+CONFIG_BT_HCIUART=m
+CONFIG_TOUCHSCREEN_USB_NEXIO=y
+CONFIG_BOOTPARAM_HARDLOCKUP_PANIC_VALUE=0
+CONFIG_RT2800USB_RT33XX=y
+CONFIG_DVB_LNBP22=m
+CONFIG_SENSORS_TMP421=m
+CONFIG_FB_RADEON_I2C=y
+CONFIG_USB_GSPCA_SN9C2028=m
+CONFIG_SUNGEM=m
+CONFIG_HAVE_OPROFILE=y
+CONFIG_IR_STREAMZAP=m
+CONFIG_HAVE_GENERIC_DMA_COHERENT=y
+CONFIG_SND_HDSPM=m
+CONFIG_EFI_VARS_PSTORE=y
+CONFIG_NET_VENDOR_RACAL=y
+CONFIG_LEDS_CLEVO_MAIL=m
+CONFIG_CPU_IDLE_GOV_LADDER=y
+CONFIG_IP_SET=m
+CONFIG_THERMAL=m
+CONFIG_DVB_BUDGET_PATCH=m
+CONFIG_TOUCHSCREEN_TOUCHRIGHT=m
+CONFIG_AMD8111_ETH=m
+CONFIG_COMEDI_ADL_PCI8164=m
+CONFIG_I2C_AMD8111=m
+CONFIG_INPUT_POWERMATE=m
+CONFIG_NET_FC=y
+CONFIG_FB_S3=m
+CONFIG_BRCMUTIL=m
+CONFIG_DE600=m
+CONFIG_DVB_TTUSB_BUDGET=m
+CONFIG_VETH=m
+CONFIG_RTC_DRV_PCF8583=m
+CONFIG_DVB_MT312=m
+CONFIG_DVB_USB_DIBUSB_MB_FAULTY=y
+CONFIG_NET_VENDOR_3COM=y
+CONFIG_ATM_DUMMY=m
+CONFIG_HID_PETALYNX=m
+CONFIG_MTD_PCMCIA=m
+CONFIG_FB_ATY_CT=y
+CONFIG_TLAN=m
+CONFIG_COMEDI_AMPLC_PCI230=m
+CONFIG_SND_HDA_CODEC_VIA=y
+CONFIG_MEMSTICK_TIFM_MS=m
+CONFIG_ATM_LANE=m
+CONFIG_SND_GUSMAX=m
+CONFIG_SENSORS_W83L786NG=m
+CONFIG_NET_ACT_MIRRED=m
+CONFIG_HAVE_ARCH_KGDB=y
+CONFIG_INPUT_APANEL=m
+CONFIG_USB_ARCH_HAS_OHCI=y
+CONFIG_B43_PCICORE_AUTOSELECT=y
+CONFIG_NF_CONNTRACK_IPV4=m
+CONFIG_SERIAL_MFD_HSU=m
+CONFIG_MYRI10GE=m
+CONFIG_X86_PM_TIMER=y
+CONFIG_USB_VL600=m
+CONFIG_ZONE_DMA_FLAG=1
+CONFIG_PARIDE_BPCK=m
+CONFIG_X86_PAE=y
+CONFIG_B43LEGACY_HWRNG=y
+CONFIG_BATTERY_BQ27x00=m
+CONFIG_CAN_SOFTING=m
+CONFIG_RT2X00_LIB_PCI=m
+CONFIG_SND_DUMMY=m
+CONFIG_SCSI_MVSAS=m
+CONFIG_NET_VENDOR_INTEL=y
+CONFIG_USB_WUSB_CBAF=m
+CONFIG_RPS=y
+CONFIG_USB_NET_ZAURUS=m
+CONFIG_INET6_XFRM_TUNNEL=m
+CONFIG_DM_MULTIPATH_ST=m
+CONFIG_PATA_CS5535=m
+CONFIG_SENSORS_LM95241=m
+CONFIG_PROC_PID_CPUSET=y
+CONFIG_REALTEK_AUTOPM=y
+CONFIG_FB_METRONOME=m
+CONFIG_AD525X_DPOT_SPI=m
+CONFIG_8139TOO_TUNE_TWISTER=y
+CONFIG_INPUT_ATLAS_BTNS=m
+CONFIG_ACQUIRE_WDT=m
+CONFIG_TOUCHSCREEN_USB_DMC_TSC10=y
+CONFIG_DVB_ZL10039=m
+CONFIG_MIXCOMWD=m
+CONFIG_CAPI_AVM=y
+CONFIG_MTD_MAP_BANK_WIDTH_2=y
+CONFIG_WDTPCI=m
+CONFIG_USB_SERIAL_DEBUG=m
+CONFIG_IP_SET_HASH_IPPORTIP=m
+CONFIG_MLX4_EN=m
+CONFIG_PARIDE_DSTR=m
+CONFIG_TABLET_USB_ACECAD=m
+CONFIG_MTD_DOC2001PLUS=m
+CONFIG_SENSORS_LM70=m
+CONFIG_NET_EMATCH_NBYTE=m
+CONFIG_SENSORS_BH1770=m
+CONFIG_NORTEL_HERMES=m
+CONFIG_SIS190=m
+CONFIG_LP486E=m
+CONFIG_TCG_NSC=m
+CONFIG_MOUSE_INPORT=m
+CONFIG_ZISOFS=y
+CONFIG_VIDEO_MEDIA=m
+CONFIG_WIMAX_I2400M=m
+CONFIG_CUSE=m
+CONFIG_HTC_PASIC3=m
+CONFIG_TOUCHSCREEN_WM97XX=m
+CONFIG_IP_MULTICAST=y
+CONFIG_FB_RADEON=m
+CONFIG_CRYPTO_RMD256=m
+CONFIG_DVB_MT352=m
+CONFIG_RC_ATI_REMOTE=m
+CONFIG_W83627HF_WDT=m
+CONFIG_SQUASHFS_XZ=y
+CONFIG_FB_VOODOO1=m
+CONFIG_USB_NET_CX82310_ETH=m
+CONFIG_GENERIC_CMOS_UPDATE=y
+CONFIG_NET_VENDOR_CISCO=y
+CONFIG_EEPROM_MAX6875=m
+CONFIG_W1_MASTER_MATROX=m
+CONFIG_MOUSE_APPLETOUCH=m
+CONFIG_HID_LOGITECH_DJ=m
+CONFIG_DEFAULT_SECURITY=""
+CONFIG_TICK_ONESHOT=y
+CONFIG_XEN_PCIDEV_FRONTEND=m
+CONFIG_NF_NAT_PROTO_UDPLITE=m
+CONFIG_USB_SERIAL_SIERRAWIRELESS=m
+CONFIG_CRYPTO_CTR=m
+CONFIG_PCMCIA_XIRC2PS=m
+CONFIG_MTRR_SANITIZER=y
+CONFIG_DVB_STV090x=m
+CONFIG_SCSI_HPTIOP=m
+CONFIG_NATIONAL_PHY=m
+CONFIG_B43LEGACY_PCICORE_AUTOSELECT=y
+CONFIG_ORE=m
+CONFIG_USB_SERIAL_KEYSPAN_PDA=m
+CONFIG_WIRELESS_EXT=y
+CONFIG_MEDIA_TUNER_MT2060=m
+CONFIG_HID_PICOLCD_BACKLIGHT=y
+CONFIG_COMEDI_ADV_PCI1710=m
+CONFIG_SND_HDA_CODEC_CA0110=y
+CONFIG_RTC_DRV_RS5C348=m
+CONFIG_IBMOL=m
+CONFIG_MODVERSIONS=y
+CONFIG_HW_RANDOM=m
+CONFIG_B43_PCI_AUTOSELECT=y
+CONFIG_MUTEX_SPIN_ON_OWNER=y
+CONFIG_NCPFS_STRONG=y
+CONFIG_PATA_LEGACY=m
+CONFIG_IO_DELAY_TYPE_0X80=0
+CONFIG_SND_INTERWAVE_STB=m
+CONFIG_DVB_USB_AU6610=m
+CONFIG_SPI_LM70_LLP=m
+CONFIG_X86_SPEEDSTEP_LIB=m
+CONFIG_SCx200_WDT=m
+CONFIG_SYS_HYPERVISOR=y
+CONFIG_HAVE_DMA_ATTRS=y
+CONFIG_ATM_IA=m
+CONFIG_IRNET=m
+CONFIG_SND_VIRTUOSO=m
+CONFIG_AMIGA_PARTITION=y
+CONFIG_EARLY_PRINTK=y
+CONFIG_THINKPAD_ACPI_ALSA_SUPPORT=y
+CONFIG_MTD_AR7_PARTS=m
+CONFIG_SENSORS_ADS7871=m
+CONFIG_NLS_CODEPAGE_737=m
+CONFIG_HAVE_FUNCTION_GRAPH_TRACER=y
+CONFIG_HW_RANDOM_VIA=m
+CONFIG_SUNDANCE=m
+CONFIG_SENSORS_W83781D=m
+CONFIG_CAN_SOFTING_CS=m
+CONFIG_AIC7XXX_DEBUG_ENABLE=y
+CONFIG_HAVE_CMPXCHG_LOCAL=y
+CONFIG_VIDEOBUF2_CORE=m
+CONFIG_PARIDE_COMM=m
+CONFIG_IRTTY_SIR=m
+CONFIG_EEEPC_WMI=m
+CONFIG_NTFS_FS=m
+CONFIG_ACPI_THERMAL=m
+CONFIG_BLK_CPQ_DA=m
+CONFIG_RT2X00_LIB_CRYPTO=y
+CONFIG_SCSI_DH_HP_SW=m
+CONFIG_IP_SCTP=m
+CONFIG_DVB_STB0899=m
+CONFIG_P54_PCI=m
+CONFIG_BASE_SMALL=0
+CONFIG_XEN_GRANT_DEV_ALLOC=m
+CONFIG_CRYPTO_BLKCIPHER2=y
+CONFIG_SCSI_SAS_ATTRS=m
+CONFIG_SECURITY_SELINUX_AVC_STATS=y
+CONFIG_RTL8187=m
+CONFIG_DEVPTS_MULTIPLE_INSTANCES=y
+CONFIG_SND_SEQ_DUMMY=m
+CONFIG_B43LEGACY_PCI_AUTOSELECT=y
+CONFIG_USB_SERIAL_SIEMENS_MPI=m
+CONFIG_DM_RAID=m
+CONFIG_COMPACTION=y
+CONFIG_CAN_SJA1000_ISA=m
+CONFIG_DVB_TDA18271C2DD=m
+CONFIG_QLGE=m
+CONFIG_HAVE_TEXT_POKE_SMP=y
+CONFIG_I2O_BUS=m
+CONFIG_VIDEO_TM6000=m
+CONFIG_DVB_CXD2820R=m
+CONFIG_COMEDI_NI_DAQ_DIO24_CS=m
+CONFIG_USB_GSPCA_SONIXJ=m
+CONFIG_THINKPAD_ACPI_HOTKEY_POLL=y
+CONFIG_RTC_DRV_DS1553=m
+CONFIG_TOUCHSCREEN_HAMPSHIRE=m
+CONFIG_CRYPTO_KHAZAD=m
+CONFIG_PROC_FS=y
+CONFIG_MMC_CB710=m
+CONFIG_NET_PACKET_ENGINE=y
+CONFIG_MTD_BLOCK=m
+CONFIG_W83697HF_WDT=m
+CONFIG_VIDEOBUF2_VMALLOC=m
+CONFIG_SECURITY_TOMOYO=y
+CONFIG_RC_MAP=m
+CONFIG_WEXT_PRIV=y
+CONFIG_THINKPAD_ACPI_VIDEO=y
+CONFIG_SCSI_LOWLEVEL=y
+CONFIG_ROSE=m
+CONFIG_IP_VS_PROTO_AH_ESP=y
+CONFIG_MTD_QINFO_PROBE=m
+CONFIG_PCWATCHDOG=m
+CONFIG_IP_DCCP_CCID3=y
+CONFIG_CRYPTO_TWOFISH_586=m
+CONFIG_IRQ_FORCED_THREADING=y
+CONFIG_NILFS2_FS=m
+CONFIG_ATH9K_PCI=y
+CONFIG_NLS_ISO8859_3=m
+CONFIG_EXT2_FS_XATTR=y
+CONFIG_XEN_SYS_HYPERVISOR=y
+CONFIG_HW_RANDOM_GEODE=m
+CONFIG_COMEDI_PCL816=m
+CONFIG_HID_PANTHERLORD=m
+CONFIG_MTDRAM_ERASE_SIZE=128
+CONFIG_X86_HT=y
+CONFIG_SND=m
+CONFIG_NET_SCH_TEQL=m
+CONFIG_MEMSTICK_JMICRON_38X=m
+CONFIG_IR_RC6_DECODER=m
+CONFIG_XEN_NETDEV_BACKEND=m
+CONFIG_SND_SB16_DSP=m
+CONFIG_MTD_OOPS=m
+CONFIG_IWLEGACY=m
+CONFIG_S2IO=m
+CONFIG_IP_VS_SH=m
+CONFIG_XEN_BALLOON=y
+CONFIG_VIDEO_MSP3400=m
+CONFIG_PLIP=m
+CONFIG_SCSI_EATA_TAGGED_QUEUE=y
+CONFIG_USB_PEGASUS=m
+CONFIG_USB_TMC=m
+CONFIG_SBC_EPX_C3_WATCHDOG=m
+CONFIG_ATM_HE_USE_SUNI=y
+CONFIG_BLK_DEV_FD=m
+CONFIG_SND_PCSP=m
+CONFIG_RFKILL_INPUT=y
+CONFIG_FB_CIRRUS=m
+CONFIG_NET_VENDOR_NATSEMI=y
+CONFIG_BLK_DEV_BSGLIB=y
+CONFIG_ATH5K_PCI=y
+CONFIG_TABLET_USB_HANWANG=m
+CONFIG_ATH9K_COMMON=m
+CONFIG_DVB_STB6000=m
+CONFIG_COMEDI_MISC_DRIVERS=m
+CONFIG_USB_SERIAL_QCAUX=m
+CONFIG_SATA_ACARD_AHCI=m
+CONFIG_NFS_USE_KERNEL_DNS=y
+CONFIG_MISDN_SPEEDFAX=m
+CONFIG_SENSORS_IBMAEM=m
+CONFIG_LIRC_STAGING=y
+CONFIG_VM86=y
+CONFIG_SYSCTL=y
+CONFIG_BRIDGE_IGMP_SNOOPING=y
+CONFIG_IP_NF_TARGET_CLUSTERIP=m
+CONFIG_MTD_BLOCK2MTD=m
+CONFIG_W1_SLAVE_THERM=m
+CONFIG_CAN_SLCAN=m
+CONFIG_PARIDE_KBIC=m
+CONFIG_JOYSTICK_TWIDJOY=m
+CONFIG_EL3=m
+CONFIG_PHYS_ADDR_T_64BIT=y
+CONFIG_COMEDI_DT2815=m
+CONFIG_NOZOMI=m
+CONFIG_COMEDI_PCL711=m
+CONFIG_COMEDI_ADDI_APCI_2016=m
+CONFIG_NETFILTER_XT_TARGET_AUDIT=m
+CONFIG_HOSTAP_CS=m
+CONFIG_HAVE_C_RECORDMCOUNT=y
+CONFIG_SENSORS_ADCXX=m
+CONFIG_SND_CS4281=m
+CONFIG_COMEDI_8255=m
+CONFIG_MEDIA_TUNER_MT2131=m
+CONFIG_USB_NET_KALMIA=m
+CONFIG_USB_NET_DM9601=m
+CONFIG_HAVE_ARCH_TRACEHOOK=y
+CONFIG_SSB_PCIHOST=y
+CONFIG_ISAPNP=y
+CONFIG_IR_MCEUSB=m
+CONFIG_BLK_DEV_OSD=m
+CONFIG_LDM_PARTITION=y
+CONFIG_CIFS=m
+CONFIG_SMSC37B787_WDT=m
+CONFIG_XFRM_USER=m
+CONFIG_TCP_CONG_BIC=m
+CONFIG_SCSI_NSP32=m
+CONFIG_LEDS_PCA9532=m
+CONFIG_PCMCIA_PROBE=y
+CONFIG_TASK_DELAY_ACCT=y
+CONFIG_INPUT_PCF50633_PMU=m
+CONFIG_SCSI_DH_EMC=m
+CONFIG_NET_NS=y
+CONFIG_SENSORS_TMP401=m
+CONFIG_REGULATOR_MAX1586=m
+CONFIG_REISERFS_FS_XATTR=y
+CONFIG_SENSORS_ADT7475=m
+CONFIG_HAVE_PERF_EVENTS=y
+CONFIG_PCMCIA_XIRCOM=m
+CONFIG_SCSI_T128=m
+CONFIG_COMEDI_II_PCI20KC=m
+CONFIG_DVB_MANTIS=m
+CONFIG_SENSORS_LIS3_I2C=m
+CONFIG_RT2800PCI_RT35XX=y
+CONFIG_ATA_SFF=y
+CONFIG_JOYSTICK_WALKERA0701=m
+CONFIG_CRYPTO_LRW=m
+CONFIG_EXT3_FS_SECURITY=y
+CONFIG_NET_EMATCH_CMP=m
+CONFIG_USB_GSPCA_T613=m
+CONFIG_SND_VIA82XX_MODEM=m
+CONFIG_SND_MTPAV=m
+CONFIG_PPP_ASYNC=m
+CONFIG_MD_RAID10=m
+CONFIG_NO_BOOTMEM=y
+CONFIG_SCSI_SYM53C416=m
+CONFIG_SSB_SDIOHOST_POSSIBLE=y
+CONFIG_SENSORS_APPLESMC=m
+CONFIG_CAN_GW=m
+CONFIG_NLS_CODEPAGE_866=m
+CONFIG_SENSORS_ABITUGURU3=m
+CONFIG_CRAMFS=m
+CONFIG_RADIO_SAA7706H=m
+CONFIG_SKGE_GENESIS=y
+CONFIG_SLAB=y
+CONFIG_CYCLADES=m
+CONFIG_KEYBOARD_LM8323=m
+CONFIG_CHELSIO_T1=m
+CONFIG_COMEDI_AIO_AIO12_8=m
+CONFIG_DEBUG_MEMORY_INIT=y
+CONFIG_AUDIT=y
+CONFIG_CHR_DEV_ST=m
+CONFIG_DM_MULTIPATH=m
+CONFIG_CRYPTO_USER_API_SKCIPHER=m
+CONFIG_SCSI_3W_SAS=m
+CONFIG_COMEDI_NI_ATMIO16D=m
+CONFIG_LANCE=m
+CONFIG_SPEAKUP_SYNTH_DTLK=m
+CONFIG_SENSORS_LM80=m
+CONFIG_DVB_IT913X_FE=m
+CONFIG_PCIEASPM=y
+CONFIG_PM_ADVANCED_DEBUG=y
+CONFIG_ATA_PIIX=m
+CONFIG_B43LEGACY=m
+CONFIG_AIC7XXX_REG_PRETTY_PRINT=y
+CONFIG_HID_MULTITOUCH=m
+CONFIG_FB_DEFERRED_IO=y
+CONFIG_SATA_AHCI=m
+CONFIG_COMEDI_MITE=m
+CONFIG_DVB_USB_A800=m
+CONFIG_SECURITY=y
+CONFIG_I2C_SI470X=m
+CONFIG_DVB_A8293=m
+CONFIG_SENSORS_ASC7621=m
+CONFIG_OPTPROBES=y
+CONFIG_NETXEN_NIC=m
+CONFIG_ATM_TCP=m
+CONFIG_X86_32_SMP=y
+CONFIG_HID_ELECOM=m
+CONFIG_SND_TIMER=m
+CONFIG_LIRC_TTUSBIR=m
+CONFIG_COMEDI_ICP_MULTI=m
+CONFIG_DRM_R128=m
+CONFIG_KVM_MMIO=y
+CONFIG_USB_EHCI_TT_NEWSCHED=y
+CONFIG_FAT_DEFAULT_CODEPAGE=437
+CONFIG_TCM_FC=m
+CONFIG_IPV6_MROUTE_MULTIPLE_TABLES=y
+CONFIG_BLK_DEV=y
+CONFIG_DVB_USB_IT913X=m
+CONFIG_USB_SERIAL_MOTOROLA=m
+CONFIG_SERIO_I8042=y
+CONFIG_MAC80211_RC_DEFAULT="minstrel_ht"
+CONFIG_FARSYNC=m
+CONFIG_RTL8187_LEDS=y
+CONFIG_NFS_ACL_SUPPORT=m
+CONFIG_W1_SLAVE_DS2433=m
+CONFIG_ATL1=m
+CONFIG_APPLICOM=m
+CONFIG_USB_SERIAL_OMNINET=m
+CONFIG_HDLC_PPP=m
+CONFIG_BRIDGE_NETFILTER=y
+CONFIG_TCP_CONG_SCALABLE=m
+CONFIG_DVB_MB86A20S=m
+CONFIG_PATA_TRIFLEX=m
+CONFIG_COMEDI_PCL818=m
+CONFIG_JOYSTICK_TMDC=m
+CONFIG_TRACING_SUPPORT=y
+CONFIG_UNIX98_PTYS=y
+CONFIG_CDROM_PKTCDVD=m
+CONFIG_NETFILTER_XT_TARGET_CONNMARK=m
+CONFIG_MINIX_SUBPARTITION=y
+CONFIG_RADIO_WL1273=m
+CONFIG_SENSORS_SMSC47B397=m
+CONFIG_CRYPTO_MICHAEL_MIC=m
+CONFIG_CRYPTO_ANSI_CPRNG=m
+CONFIG_SECURITY_SELINUX=y
+CONFIG_NET_SCHED=y
+CONFIG_NETFILTER_XT_TARGET_CONNSECMARK=m
+CONFIG_UWB_I1480U=m
+CONFIG_COMEDI_PCL726=m
+CONFIG_JBD=m
+CONFIG_STAGING_MEDIA=y
+CONFIG_DVB_PLL=m
+CONFIG_PRINTK_TIME=y
+CONFIG_SERIAL_JSM=m
+CONFIG_EXT2_FS_POSIX_ACL=y
+CONFIG_INPUT_MOUSEDEV_SCREEN_Y=768
+CONFIG_EDAC_E7XXX=m
+CONFIG_PATA_HPT37X=m
+CONFIG_UIO_PCI_GENERIC=m
+CONFIG_PPP=m
+CONFIG_RFD_FTL=m
+CONFIG_NETFILTER_XT_MATCH_QUOTA=m
+CONFIG_ARCH_MAY_HAVE_PC_FDC=y
+CONFIG_TOUCHSCREEN_ATMEL_MXT=m
+CONFIG_HAVE_KERNEL_LZO=y
+CONFIG_ASYNC_CORE=m
+CONFIG_NET_SCH_MULTIQ=m
+CONFIG_INET_DIAG=m
+CONFIG_CRYPTO_GHASH=m
+CONFIG_OCFS2_DEBUG_MASKLOG=y
+CONFIG_SYNCLINKMP=m
+CONFIG_PSTORE=y
+CONFIG_SCSI_LPFC=m
+CONFIG_ROADRUNNER=m
+CONFIG_NF_NAT_FTP=m
+CONFIG_MAC80211_RC_MINSTREL=y
+CONFIG_CRYPTO_RMD320=m
+CONFIG_NF_CT_PROTO_UDPLITE=m
+CONFIG_CARDMAN_4000=m
+CONFIG_IO_DELAY_TYPE_UDELAY=2
+CONFIG_SPEAKUP=m
+CONFIG_HANGCHECK_TIMER=m
+CONFIG_JOYSTICK_WARRIOR=m
+CONFIG_COMEDI_AIO_IIRO_16=m
+CONFIG_SENSORS_W83627EHF=m
+CONFIG_ELF_CORE=y
+CONFIG_SENSORS_LM73=m
+CONFIG_VIA_VELOCITY=m
+CONFIG_SENSORS_PC87360=m
+CONFIG_TEXTSEARCH=y
+CONFIG_ACPI_DOCK=y
+CONFIG_KS8851=m
+CONFIG_MTD_JEDECPROBE=m
+CONFIG_I2O_EXT_ADAPTEC=y
+CONFIG_MTD_ONENAND_VERIFY_WRITE=y
+CONFIG_DEPCA=m
+CONFIG_USB_SUPPORT=y
+CONFIG_I2C_SCMI=m
+CONFIG_I2C_VIA=m
+CONFIG_INPUT_POLLDEV=m
+CONFIG_SND_INTEL8X0M=m
+CONFIG_RTC_DRV_BQ32K=m
+CONFIG_USB_GSPCA_PAC7311=m
+CONFIG_COMEDI_PCMAD=m
+CONFIG_X86_REROUTE_FOR_BROKEN_BOOT_IRQS=y
+CONFIG_USB_HWA_HCD=m
+CONFIG_TOUCHSCREEN_USB_EASYTOUCH=y
+CONFIG_STAGING=y
+CONFIG_NET_VENDOR_SIS=y
+CONFIG_MTD_CHAR=m
+CONFIG_SENSORS_LIS3LV02D=m
+CONFIG_INET_LRO=m
+CONFIG_FIREWIRE=m
+CONFIG_ATM=m
+CONFIG_SCSI_FC_ATTRS=m
+CONFIG_VT_CONSOLE=y
+CONFIG_HID_UCLOGIC=m
+CONFIG_HW_RANDOM_VIRTIO=m
+CONFIG_COMEDI_PCMCIA_DRIVERS=m
+CONFIG_ACPI_APEI=y
+CONFIG_SND_ES1968_RADIO=y
+CONFIG_SND_SB_COMMON=m
+CONFIG_SND_CS46XX=m
+CONFIG_USB_GSPCA_STK014=m
+CONFIG_IP_VS_FTP=m
+CONFIG_CS5535_MFGPT_DEFAULT_IRQ=7
+CONFIG_VMWARE_PVSCSI=m
+CONFIG_CFG80211_WEXT=y
+CONFIG_SMARTJOYPLUS_FF=y
+CONFIG_I2C_PARPORT=m
+CONFIG_ISDN_DIVAS_BRIPCI=y
+CONFIG_NETFILTER_XT_MATCH_PHYSDEV=m
+CONFIG_NOP_USB_XCEIV=m
+CONFIG_SND_VIA82XX=m
+CONFIG_SC520_WDT=m
+CONFIG_ISDN_DIVAS=m
+CONFIG_NFC_PN533=m
+CONFIG_DVB_USB_DIBUSB_MB=m
+CONFIG_HOTPLUG_PCI_IBM=m
+CONFIG_SND_DARLA20=m
+CONFIG_BLK_DEV_RAM=m
+CONFIG_TOUCHSCREEN_AD7879=m
+CONFIG_SENSORS_HDAPS=m
+CONFIG_NETFILTER_XT_MATCH_STATE=m
+CONFIG_DVB_L64781=m
+CONFIG_LOGIRUMBLEPAD2_FF=y
+CONFIG_SND_INDIGOIOX=m
+CONFIG_SND_ASIHPI=m
+CONFIG_PARAVIRT_GUEST=y
+CONFIG_BSD_DISKLABEL=y
+CONFIG_RTC_DRV_M48T35=m
+CONFIG_I2C_TAOS_EVM=m
+CONFIG_COMEDI_KCOMEDILIB=m
+CONFIG_FB_HGA=m
+CONFIG_USB_STORAGE_FREECOM=m
+CONFIG_SCSI_BUSLOGIC=m
+CONFIG_BRIDGE_EBT_LOG=m
+CONFIG_TOUCHSCREEN_ADS7846=m
+CONFIG_IR_RC5_DECODER=m
+CONFIG_FIREWIRE_NOSY=m
+CONFIG_NET_SCH_GRED=m
+CONFIG_PCI_DIRECT=y
+CONFIG_MMC_VIA_SDMMC=m
+CONFIG_DRM=m
+CONFIG_FUSION_MAX_SGE=128
+CONFIG_DOUBLEFAULT=y
+CONFIG_INET6_XFRM_MODE_BEET=m
+CONFIG_PCF50633_GPIO=m
+CONFIG_ASYNC_TX_DISABLE_PQ_VAL_DMA=y
+CONFIG_IWL4965=m
+CONFIG_POSIX_MQUEUE_SYSCTL=y
+CONFIG_RTC_DRV_MAX6900=m
+CONFIG_ICS932S401=m
+CONFIG_UNUSED_SYMBOLS=y
+CONFIG_SENSORS_MAX1111=m
+CONFIG_CRYPTO_DEV_PADLOCK_AES=m
+CONFIG_ISDN_DRV_AVMB1_B1PCIV4=y
+CONFIG_SAMSUNG_LAPTOP=m
+CONFIG_COMEDI_POC=m
+CONFIG_USB_USS720=m
+CONFIG_LEDS_DAC124S085=m
+CONFIG_SND_GUSCLASSIC=m
+CONFIG_FB_CFB_COPYAREA=y
+CONFIG_FB_EFI=y
+CONFIG_USB_SISUSBVGA=m
+CONFIG_HAVE_KVM_IRQCHIP=y
+CONFIG_BRIDGE_EBT_STP=m
+CONFIG_RT73USB=m
+CONFIG_DE2104X_DSL=0
+CONFIG_BRIDGE_EBT_ARP=m
+CONFIG_ROMFS_BACKED_BY_BOTH=y
+CONFIG_USB_CYTHERM=m
+CONFIG_IP6_NF_MATCH_EUI64=m
+CONFIG_BINARY_PRINTF=y
+CONFIG_MWIFIEX=m
+CONFIG_HP_ILO=m
+CONFIG_USB_STORAGE_JUMPSHOT=m
+CONFIG_SENSORS_MAX6642=m
+CONFIG_SND_GINA20=m
+CONFIG_GENERIC_CLOCKEVENTS_BUILD=y
+CONFIG_VIDEOBUF_GEN=m
+CONFIG_MTD_CFI_AMDSTD=m
+CONFIG_DRM_VIA=m
+CONFIG_SGI_PARTITION=y
+CONFIG_INPUT_SPARSEKMAP=m
+CONFIG_PCI_GOANY=y
+CONFIG_HIGHPTE=y
+CONFIG_AIC7XXX_CMDS_PER_DEVICE=8
+CONFIG_VIDEO_V4L2=m
+CONFIG_DVB_STV6110=m
+CONFIG_AC97_BUS=m
+CONFIG_SYSVIPC_SYSCTL=y
+CONFIG_HID_NTRIG=m
+CONFIG_IP_VS_IPV6=y
+CONFIG_DMA_SHARED_BUFFER=y
+CONFIG_DVB_USB_NOVA_T_USB2=m
+CONFIG_CIFS_POSIX=y
+CONFIG_PATA_RDC=m
+CONFIG_SND_PORTMAN2X4=m
+CONFIG_USB_EPSON2888=y
+CONFIG_SND_INDIGODJ=m
+CONFIG_SENSORS_W83L785TS=m
+CONFIG_DECOMPRESS_GZIP=y
+CONFIG_SENSORS_EMC2103=m
+CONFIG_SND_AU8830=m
+CONFIG_XFRM_SUB_POLICY=y
+CONFIG_VIRTIO_BLK=m
+CONFIG_SERIAL_8250_CS=m
+CONFIG_DECOMPRESS_LZO=y
+CONFIG_USB_SERIAL_ARK3116=m
+CONFIG_SND_MIXART=m
+CONFIG_QUOTA=y
+CONFIG_SND_BT87X=m
+CONFIG_DM9102=m
+CONFIG_COMEDI_NI_MIO_CS=m
+CONFIG_SND_AZT2316=m
+CONFIG_SENSORS_LINEAGE=m
+CONFIG_ABYSS=m
+CONFIG_CAN_EMS_PCMCIA=m
+CONFIG_SCSI_MPT2SAS_MAX_SGE=128
+CONFIG_VXGE=m
+CONFIG_PARIDE_PCD=m
+CONFIG_MMC_SDHCI_PLTFM=m
+CONFIG_I2C_CHARDEV=m
+CONFIG_RCU_FAST_NO_HZ=y
+CONFIG_W83697UG_WDT=m
+CONFIG_LLC=y
+CONFIG_MTD_NAND_NANDSIM=m
+CONFIG_CROSS_COMPILE=""
+CONFIG_REGULATOR_MAX8649=m
+CONFIG_MEDIA_TUNER_TEA5761=m
+CONFIG_SC92031=m
+CONFIG_SND_TRIDENT=m
+CONFIG_IPDDP=m
+CONFIG_NETWORK_SECMARK=y
+CONFIG_SND_RIPTIDE=m
+CONFIG_SND_CTXFI=m
+CONFIG_GENERIC_CLOCKEVENTS_BROADCAST=y
+CONFIG_SERIAL_8250_FOURPORT=m
+CONFIG_RXKAD=m
+CONFIG_HID_HOLTEK=m
+CONFIG_ARCH_RANDOM=y
+CONFIG_MOUSE_LOGIBM=m
+CONFIG_SERIAL_8250_PCI=y
+CONFIG_LIB80211_CRYPT_CCMP=m
+CONFIG_HAVE_MIXED_BREAKPOINTS_REGS=y
+CONFIG_RTC_DRV_DS1672=m
+CONFIG_USB_SERIAL_SSU100=m
+CONFIG_MOUSE_PS2_SYNAPTICS=y
+CONFIG_ATA_BMDMA=y
+CONFIG_ATALK=m
+CONFIG_XZ_DEC_ARMTHUMB=y
+CONFIG_B43_BCMA=y
+CONFIG_MTD_SWAP=m
+CONFIG_NFS_V4_1=y
+CONFIG_SKFP=m
+CONFIG_ARCH_WANT_FRAME_POINTERS=y
+CONFIG_REGMAP=y
+CONFIG_6PACK=m
+CONFIG_NLS_UTF8=m
+CONFIG_RADIO_SI470X=y
+CONFIG_PCIE_PME=y
+CONFIG_VIDEO_TM6000_DVB=m
+CONFIG_JOYSTICK_XPAD=m
+CONFIG_FB_ATY_BACKLIGHT=y
+CONFIG_ISA=y
+CONFIG_NETFILTER_TPROXY=m
+CONFIG_BAYCOM_PAR=m
+CONFIG_CAN_DEV=m
+CONFIG_INPUT_YEALINK=m
+CONFIG_COMEDI_VMK80XX=m
+CONFIG_DVB_DIB3000MB=m
+CONFIG_SCSI_DTC3280=m
+CONFIG_SCSI_SRP_TGT_ATTRS=y
+CONFIG_ETH16I=m
+CONFIG_IWMC3200TOP=m
+CONFIG_SPEAKUP_SYNTH_SPKOUT=m
+CONFIG_RTC_DRV_M41T80=m
+CONFIG_PCCARD_NONSTATIC=y
+CONFIG_VT6656=m
+CONFIG_USB_USBNET=m
+CONFIG_SCSI_MULTI_LUN=y
+CONFIG_CPU_SUP_CENTAUR=y
+CONFIG_CB710_CORE=m
+CONFIG_USB_SERIAL_PL2303=m
+CONFIG_NET_ACT_POLICE=m
+CONFIG_AIC79XX_DEBUG_MASK=0
+CONFIG_HAMRADIO=y
+CONFIG_INPUT_XEN_KBDDEV_FRONTEND=y
+CONFIG_HOTPLUG_PCI_SHPC=m
+CONFIG_DVB_USB_CINERGY_T2=m
+CONFIG_FHANDLE=y
+CONFIG_COMEDI_ADDI_APCI_3XXX=m
+CONFIG_USB_MICROTEK=m
+CONFIG_PANASONIC_LAPTOP=m
+CONFIG_HID_SMARTJOYPLUS=m
+CONFIG_ATA_GENERIC=m
+CONFIG_I82365=m
+CONFIG_NEW_LEDS=y
+CONFIG_SWAP=y
+CONFIG_MTD_ONENAND=m
+CONFIG_MTD_TS5500=m
+CONFIG_MICROCODE_INTEL=y
+CONFIG_RTC_DRV_DS1511=m
+CONFIG_IP_FIB_TRIE_STATS=y
+CONFIG_ATM_FORE200E=m
+CONFIG_NET_SCH_HFSC=m
+CONFIG_SND_ISIGHT=m
+CONFIG_VIDEOBUF_DMA_SG=m
+CONFIG_MTD_NAND_DISKONCHIP=m
+CONFIG_MAC80211=m
+CONFIG_TOUCHSCREEN_USB_GENERAL_TOUCH=y
+CONFIG_MEGARAID_MM=m
+CONFIG_ARCH_USES_PG_UNCACHED=y
+CONFIG_CRC_CCITT=m
+CONFIG_EXT3_FS_POSIX_ACL=y
+CONFIG_DVB_TDA8261=m
+CONFIG_IGBVF=m
+CONFIG_BLK_DEV_SD=m
+CONFIG_PHYSICAL_ALIGN=0x1000000
+CONFIG_NETFILTER_NETLINK=m
+CONFIG_VITESSE_PHY=m
+CONFIG_MODULE_UNLOAD=y
+CONFIG_FSCACHE_STATS=y
+CONFIG_ELPLUS=m
+CONFIG_AVERAGE=y
+CONFIG_INFINIBAND_MTHCA=m
+CONFIG_SENSORS_MAX6650=m
+CONFIG_USB_GSPCA_BENQ=m
+CONFIG_REGULATOR_TPS65023=m
+CONFIG_USB_ARCH_HAS_XHCI=y
+CONFIG_SND_AC97_CODEC=m
+CONFIG_MOXA_SMARTIO=m
+CONFIG_DVB_USB_CXUSB=m
+CONFIG_RT2500PCI=m
+CONFIG_SND_SB16_CSP=y
+CONFIG_SENSORS_LM85=m
+CONFIG_AD525X_DPOT=m
+CONFIG_SND_ATIIXP=m
+CONFIG_INFINIBAND_IPOIB_CM=y
+CONFIG_COMEDI_PARPORT=m
+CONFIG_HAVE_FUNCTION_GRAPH_FP_TEST=y
+CONFIG_RCU_FANOUT=32
+CONFIG_BITREVERSE=y
+CONFIG_DEVPORT=y
+CONFIG_BLK_DEV_RAM_SIZE=8192
+CONFIG_USB_SERIAL_WWAN=m
+CONFIG_SND_ICE1724=m
+CONFIG_MAC_PARTITION=y
+CONFIG_XFS_POSIX_ACL=y
+CONFIG_CRYPTO_PCOMP=m
+CONFIG_CISS_SCSI_TAPE=y
+CONFIG_MSI_LAPTOP=m
+CONFIG_COMEDI_DT2801=m
+CONFIG_VIDEO_V4L2_COMMON=m
+CONFIG_TOUCHSCREEN_DYNAPRO=m
+CONFIG_FB_MODE_HELPERS=y
+CONFIG_NLS_ISO8859_13=m
+CONFIG_MTD_MTDRAM=m
+CONFIG_BLK_DEV_SX8=m
+CONFIG_CRYPTO_BLKCIPHER=m
+CONFIG_X86_L1_CACHE_SHIFT=6
+CONFIG_X86_PAT=y
+CONFIG_USB_STORAGE_ONETOUCH=m
+CONFIG_NLS_ISO8859_8=m
+CONFIG_RT2400PCI=m
+CONFIG_NF_CONNTRACK=m
+CONFIG_COMEDI_GSC_HPDI=m
+CONFIG_COMEDI_NI_COMMON=m
+CONFIG_IPDDP_ENCAP=y
+CONFIG_ARCH_DMA_ADDR_T_64BIT=y
+CONFIG_FILE_LOCKING=y
+CONFIG_USB_GSPCA_XIRLINK_CIT=m
+CONFIG_RTC_DRV_STK17TA8=m
+CONFIG_USB_GSPCA_SN9C20X=m
+CONFIG_TOUCHSCREEN_USB_ELO=y
+CONFIG_GENERIC_CLOCKEVENTS_MIN_ADJUST=y
+CONFIG_MTD_DOCECC=m
+CONFIG_KARMA_PARTITION=y
+CONFIG_FB_SM501=m
+CONFIG_NETPOLL=y
+CONFIG_SND_WAVEFRONT=m
+CONFIG_SPEAKUP_SYNTH_AUDPTR=m
+CONFIG_SENSORS_F71882FG=m
+CONFIG_ACPI_APEI_GHES=y
+CONFIG_FB_CARILLO_RANCH=m
+CONFIG_AIO=y
+CONFIG_DVB_TDA8083=m
+CONFIG_BLK_DEV_DAC960=m
+CONFIG_CLKEVT_I8253=y
+CONFIG_IEEE802154_FAKEHARD=m
+CONFIG_REGULATOR_USERSPACE_CONSUMER=m
+CONFIG_NET_EMATCH=y
+CONFIG_PERF_EVENTS=y
+CONFIG_IP_NF_TARGET_REJECT=m
+CONFIG_NET_SCH_CHOKE=m
+CONFIG_LEDS_CLASS=y
+CONFIG_GENERIC_HARDIRQS=y
+CONFIG_COMEDI_BOND=m
+CONFIG_DVB_USB_DIGITV=m
+CONFIG_IP6_NF_MATCH_HL=m
+CONFIG_BLK_CPQ_CISS_DA=m
+CONFIG_WINBOND_FIR=m
+CONFIG_IP_VS_TAB_BITS=12
+CONFIG_COMEDI_NI_AT_AO=m
+CONFIG_IP6_NF_MATCH_OPTS=m
+CONFIG_APM=m
+CONFIG_SCSI_SAS_HOST_SMP=y
+CONFIG_RTC_INTF_DEV=y
+CONFIG_MTD_MAP_BANK_WIDTH_4=y
+CONFIG_HID_SUPPORT=y
+CONFIG_DCACHE_WORD_ACCESS=y
+CONFIG_SND_HDA_ENABLE_REALTEK_QUIRKS=y
+CONFIG_DVB_USB_CE6230=m
+CONFIG_PARIDE_ATEN=m
+CONFIG_TIPC_ADVANCED=y
+CONFIG_INFINIBAND_CXGB3=m
+CONFIG_USB_SERIAL_SYMBOL=m
+CONFIG_HERMES=m
+CONFIG_NETFILTER_XT_MATCH_OSF=m
+CONFIG_PROTEON=m
+CONFIG_SATA_QSTOR=m
+CONFIG_PATA_SIS=m
+CONFIG_EXT4_FS_XATTR=y
+CONFIG_AMD_NB=y
+CONFIG_SND_VIRMIDI=m
+CONFIG_LIB80211_CRYPT_TKIP=m
+CONFIG_LOCKUP_DETECTOR=y
+CONFIG_QSEMI_PHY=m
+CONFIG_IP_VS_PROTO_UDP=y
+CONFIG_SND_OPTI92X_CS4231=m
+CONFIG_NLS_DEFAULT="utf8"
+CONFIG_ACPI_CONTAINER=m
+CONFIG_SND_DMA_SGBUF=y
+CONFIG_UTS_NS=y
+CONFIG_NF_CT_PROTO_GRE=m
+CONFIG_BT_HCIUART_BCSP=y
+CONFIG_NF_CT_NETLINK=m
+CONFIG_EFS_FS=m
+CONFIG_DMA_ENGINE=y
+CONFIG_NET_EMATCH_TEXT=m
+CONFIG_SND_HDA_CODEC_ANALOG=y
+CONFIG_X86_ACPI_CPUFREQ=m
+CONFIG_HID_WIIMOTE=m
+CONFIG_P54_SPI=m
+CONFIG_RDS_TCP=m
+CONFIG_CRYPTO_AEAD2=y
+CONFIG_DEBUG_INFO=y
+CONFIG_CRYPTO_FCRYPT=m
+CONFIG_PCMCIA_ATMEL=m
+CONFIG_NFC_NCI=m
+CONFIG_TOSHIBA_BT_RFKILL=m
+CONFIG_MOUSE_PS2=m
+CONFIG_NET_IPIP=m
+CONFIG_IP_VS_SH_TAB_BITS=8
+CONFIG_BOOTPARAM_SOFTLOCKUP_PANIC_VALUE=0
+CONFIG_USB_SERIAL_IPAQ=m
+CONFIG_NETFILTER_XT_MATCH_HL=m
+CONFIG_CRYPTO_ALGAPI2=y
+CONFIG_SATA_SIS=m
+CONFIG_PHYSICAL_START=0x1000000
+CONFIG_NETFILTER_XT_TARGET_LED=m
+CONFIG_WEXT_SPY=y
+CONFIG_UBIFS_FS_LZO=y
+CONFIG_X86_LONGHAUL=m
+CONFIG_ACPI_SBS=m
+CONFIG_HAVE_MEMBLOCK=y
+CONFIG_DEBUG_RODATA=y
+CONFIG_FB_3DFX=m
+CONFIG_HAVE_EFFICIENT_UNALIGNED_ACCESS=y
+CONFIG_INPUT=y
+CONFIG_PCI200SYN=m
+CONFIG_PPPOATM=m
+CONFIG_PATA_OPTI=m
+CONFIG_PROC_SYSCTL=y
+CONFIG_SND_HDA_CODEC_REALTEK=y
+CONFIG_HAVE_PERF_EVENTS_NMI=y
+CONFIG_NETFILTER_XT_TARGET_CT=m
+CONFIG_MMU=y
+CONFIG_DVB_CX24123=m
+CONFIG_OCFS2_FS=m
+CONFIG_HAVE_IRQ_WORK=y
+CONFIG_MTD_M25P80=m
+CONFIG_USB_KAWETH=m
+CONFIG_USB_SIERRA_NET=m
+CONFIG_AIC7XXX_RESET_DELAY_MS=15000
+CONFIG_VMWARE_BALLOON=m
+CONFIG_BRIDGE_EBT_NFLOG=m
+CONFIG_TABLET_USB_AIPTEK=m
+CONFIG_AGP=y
+CONFIG_INLINE_WRITE_UNLOCK=y
+CONFIG_SENSORS_GL520SM=m
+CONFIG_E1000=m
+CONFIG_SCSI_SYM53C8XX_MMIO=y
diff -uprN ../linux-3.4.104-vanilla/include/config/auto.conf.cmd linux-3.4.104-syssec_hw2_app2/include/config/auto.conf.cmd
--- ../linux-3.4.104-vanilla/include/config/auto.conf.cmd	1969-12-31 19:00:00.000000000 -0500
+++ linux-3.4.104-syssec_hw2_app2/include/config/auto.conf.cmd	2014-11-05 22:14:11.000000000 -0500
@@ -0,0 +1,736 @@
+deps_config := \
+	lib/xz/Kconfig \
+	lib/Kconfig \
+	drivers/lguest/Kconfig \
+	drivers/vhost/Kconfig \
+	virt/kvm/Kconfig \
+	arch/x86/kvm/Kconfig \
+	drivers/crypto/caam/Kconfig \
+	drivers/crypto/Kconfig \
+	crypto/async_tx/Kconfig \
+	crypto/Kconfig \
+	security/integrity/evm/Kconfig \
+	security/integrity/ima/Kconfig \
+	security/integrity/Kconfig \
+	security/yama/Kconfig \
+	security/apparmor/Kconfig \
+	security/tomoyo/Kconfig \
+	security/smack/Kconfig \
+	security/selinux/Kconfig \
+	security/Kconfig \
+	lib/Kconfig.kmemcheck \
+	lib/Kconfig.kgdb \
+	samples/Kconfig \
+	kernel/trace/Kconfig \
+	mm/Kconfig.debug \
+	lib/Kconfig.debug \
+	arch/x86/Kconfig.debug \
+	fs/dlm/Kconfig \
+	fs/nls/Kconfig \
+	fs/9p/Kconfig \
+	fs/afs/Kconfig \
+	fs/coda/Kconfig \
+	fs/ncpfs/Kconfig \
+	fs/cifs/Kconfig \
+	fs/ceph/Kconfig \
+	net/sunrpc/Kconfig \
+	fs/nfsd/Kconfig \
+	fs/nfs/Kconfig \
+	fs/exofs/Kconfig.ore \
+	fs/exofs/Kconfig \
+	fs/ufs/Kconfig \
+	fs/sysv/Kconfig \
+	fs/pstore/Kconfig \
+	fs/romfs/Kconfig \
+	fs/qnx6/Kconfig \
+	fs/qnx4/Kconfig \
+	fs/hpfs/Kconfig \
+	fs/omfs/Kconfig \
+	fs/minix/Kconfig \
+	fs/freevxfs/Kconfig \
+	fs/squashfs/Kconfig \
+	fs/cramfs/Kconfig \
+	fs/logfs/Kconfig \
+	fs/ubifs/Kconfig \
+	fs/jffs2/Kconfig \
+	fs/efs/Kconfig \
+	fs/bfs/Kconfig \
+	fs/befs/Kconfig \
+	fs/hfsplus/Kconfig \
+	fs/hfs/Kconfig \
+	fs/ecryptfs/Kconfig \
+	fs/affs/Kconfig \
+	fs/adfs/Kconfig \
+	fs/configfs/Kconfig \
+	fs/sysfs/Kconfig \
+	fs/proc/Kconfig \
+	fs/ntfs/Kconfig \
+	fs/fat/Kconfig \
+	fs/udf/Kconfig \
+	fs/isofs/Kconfig \
+	fs/cachefiles/Kconfig \
+	fs/fscache/Kconfig \
+	fs/fuse/Kconfig \
+	fs/autofs4/Kconfig \
+	fs/quota/Kconfig \
+	fs/notify/fanotify/Kconfig \
+	fs/notify/inotify/Kconfig \
+	fs/notify/dnotify/Kconfig \
+	fs/notify/Kconfig \
+	fs/nilfs2/Kconfig \
+	fs/btrfs/Kconfig \
+	fs/ocfs2/Kconfig \
+	fs/gfs2/Kconfig \
+	fs/xfs/Kconfig \
+	fs/jfs/Kconfig \
+	fs/reiserfs/Kconfig \
+	fs/jbd2/Kconfig \
+	fs/jbd/Kconfig \
+	fs/ext4/Kconfig \
+	fs/ext3/Kconfig \
+	fs/ext2/Kconfig \
+	fs/Kconfig \
+	drivers/firmware/google/Kconfig \
+	drivers/firmware/Kconfig \
+	drivers/devfreq/Kconfig \
+	drivers/virt/Kconfig \
+	drivers/rpmsg/Kconfig \
+	drivers/remoteproc/Kconfig \
+	drivers/iommu/Kconfig \
+	drivers/clocksource/Kconfig \
+	drivers/hwspinlock/Kconfig \
+	drivers/clk/Kconfig \
+	drivers/platform/x86/Kconfig \
+	drivers/platform/Kconfig \
+	drivers/staging/ozwpan/Kconfig \
+	drivers/staging/ramster/Kconfig \
+	drivers/staging/telephony/Kconfig \
+	drivers/staging/android/switch/Kconfig \
+	drivers/staging/android/Kconfig \
+	drivers/staging/omapdrm/Kconfig \
+	drivers/staging/media/lirc/Kconfig \
+	drivers/staging/media/solo6x10/Kconfig \
+	drivers/staging/media/go7007/Kconfig \
+	drivers/staging/media/easycap/Kconfig \
+	drivers/staging/media/dt3155v4l/Kconfig \
+	drivers/staging/media/cxd2099/Kconfig \
+	drivers/staging/media/as102/Kconfig \
+	drivers/staging/media/Kconfig \
+	drivers/staging/nvec/Kconfig \
+	drivers/staging/mei/Kconfig \
+	drivers/staging/ste_rmi4/Kconfig \
+	drivers/staging/cptm1217/Kconfig \
+	drivers/staging/speakup/Kconfig \
+	drivers/staging/ft1000/Kconfig \
+	drivers/staging/bcm/Kconfig \
+	drivers/staging/keucr/Kconfig \
+	drivers/staging/sbe-2t3e3/Kconfig \
+	drivers/staging/quickstart/Kconfig \
+	drivers/staging/tidspbridge/Kconfig \
+	drivers/staging/xgifb/Kconfig \
+	drivers/staging/cxt1e1/Kconfig \
+	drivers/staging/crystalhd/Kconfig \
+	drivers/staging/sm7xx/Kconfig \
+	drivers/staging/wlags49_h25/Kconfig \
+	drivers/staging/wlags49_h2/Kconfig \
+	drivers/staging/zsmalloc/Kconfig \
+	drivers/staging/zcache/Kconfig \
+	drivers/staging/zram/Kconfig \
+	drivers/staging/iio/trigger/Kconfig \
+	drivers/staging/iio/resolver/Kconfig \
+	drivers/staging/iio/meter/Kconfig \
+	drivers/staging/iio/magnetometer/Kconfig \
+	drivers/staging/iio/light/Kconfig \
+	drivers/staging/iio/imu/Kconfig \
+	drivers/staging/iio/impedance-analyzer/Kconfig \
+	drivers/staging/iio/gyro/Kconfig \
+	drivers/staging/iio/dds/Kconfig \
+	drivers/staging/iio/dac/Kconfig \
+	drivers/staging/iio/cdc/Kconfig \
+	drivers/staging/iio/addac/Kconfig \
+	drivers/staging/iio/adc/Kconfig \
+	drivers/staging/iio/accel/Kconfig \
+	drivers/staging/iio/Kconfig \
+	drivers/staging/sep/Kconfig \
+	drivers/staging/vme/boards/Kconfig \
+	drivers/staging/vme/devices/Kconfig \
+	drivers/staging/vme/bridges/Kconfig \
+	drivers/staging/vme/Kconfig \
+	drivers/staging/vt6656/Kconfig \
+	drivers/staging/vt6655/Kconfig \
+	drivers/staging/quatech_usb2/Kconfig \
+	drivers/staging/serqt_usb2/Kconfig \
+	drivers/staging/octeon/Kconfig \
+	drivers/staging/line6/Kconfig \
+	drivers/staging/phison/Kconfig \
+	drivers/staging/frontier/Kconfig \
+	drivers/staging/rts5139/Kconfig \
+	drivers/staging/rts_pstor/Kconfig \
+	drivers/staging/rtl8712/Kconfig \
+	drivers/staging/rtl8192e/rtl8192e/Kconfig \
+	drivers/staging/rtl8192e/Kconfig \
+	drivers/staging/rtl8192u/Kconfig \
+	drivers/staging/rtl8187se/Kconfig \
+	drivers/staging/panel/Kconfig \
+	drivers/staging/asus_oled/Kconfig \
+	drivers/staging/olpc_dcon/Kconfig \
+	drivers/staging/comedi/Kconfig \
+	drivers/staging/echo/Kconfig \
+	drivers/staging/wlan-ng/Kconfig \
+	drivers/staging/winbond/Kconfig \
+	drivers/staging/usbip/Kconfig \
+	drivers/staging/slicoss/Kconfig \
+	drivers/staging/et131x/Kconfig \
+	drivers/staging/serial/Kconfig \
+	drivers/staging/Kconfig \
+	drivers/xen/Kconfig \
+	drivers/hv/Kconfig \
+	drivers/virtio/Kconfig \
+	drivers/vlynq/Kconfig \
+	drivers/uio/Kconfig \
+	drivers/auxdisplay/Kconfig \
+	drivers/dca/Kconfig \
+	drivers/dma/Kconfig \
+	drivers/rtc/Kconfig \
+	drivers/edac/Kconfig \
+	drivers/infiniband/ulp/iser/Kconfig \
+	drivers/infiniband/ulp/srpt/Kconfig \
+	drivers/infiniband/ulp/srp/Kconfig \
+	drivers/infiniband/ulp/ipoib/Kconfig \
+	drivers/infiniband/hw/nes/Kconfig \
+	drivers/infiniband/hw/mlx4/Kconfig \
+	drivers/infiniband/hw/cxgb4/Kconfig \
+	drivers/infiniband/hw/cxgb3/Kconfig \
+	drivers/infiniband/hw/amso1100/Kconfig \
+	drivers/infiniband/hw/ehca/Kconfig \
+	drivers/infiniband/hw/qib/Kconfig \
+	drivers/infiniband/hw/ipath/Kconfig \
+	drivers/infiniband/hw/mthca/Kconfig \
+	drivers/infiniband/Kconfig \
+	drivers/accessibility/Kconfig \
+	drivers/leds/Kconfig \
+	drivers/memstick/host/Kconfig \
+	drivers/memstick/core/Kconfig \
+	drivers/memstick/Kconfig \
+	drivers/mmc/host/Kconfig \
+	drivers/mmc/card/Kconfig \
+	drivers/mmc/core/Kconfig \
+	drivers/mmc/Kconfig \
+	drivers/uwb/Kconfig \
+	drivers/usb/otg/Kconfig \
+	drivers/usb/gadget/Kconfig \
+	drivers/usb/atm/Kconfig \
+	drivers/usb/misc/sisusbvga/Kconfig \
+	drivers/usb/misc/Kconfig \
+	drivers/usb/serial/Kconfig \
+	drivers/usb/image/Kconfig \
+	drivers/usb/storage/Kconfig \
+	drivers/usb/class/Kconfig \
+	drivers/usb/renesas_usbhs/Kconfig \
+	drivers/usb/musb/Kconfig \
+	drivers/usb/host/Kconfig \
+	drivers/usb/wusbcore/Kconfig \
+	drivers/usb/mon/Kconfig \
+	drivers/usb/dwc3/Kconfig \
+	drivers/usb/core/Kconfig \
+	drivers/usb/Kconfig \
+	drivers/hid/usbhid/Kconfig \
+	drivers/hid/Kconfig \
+	sound/oss/Kconfig \
+	sound/soc/codecs/Kconfig \
+	sound/soc/txx9/Kconfig \
+	sound/soc/tegra/Kconfig \
+	sound/soc/sh/Kconfig \
+	sound/soc/s6000/Kconfig \
+	sound/soc/samsung/Kconfig \
+	sound/soc/pxa/Kconfig \
+	sound/soc/mxs/Kconfig \
+	sound/soc/mid-x86/Kconfig \
+	sound/soc/kirkwood/Kconfig \
+	sound/soc/omap/Kconfig \
+	sound/soc/nuc900/Kconfig \
+	sound/soc/jz4740/Kconfig \
+	sound/soc/imx/Kconfig \
+	sound/soc/fsl/Kconfig \
+	sound/soc/ep93xx/Kconfig \
+	sound/soc/davinci/Kconfig \
+	sound/soc/blackfin/Kconfig \
+	sound/soc/au1x/Kconfig \
+	sound/soc/atmel/Kconfig \
+	sound/soc/Kconfig \
+	sound/parisc/Kconfig \
+	sound/sparc/Kconfig \
+	sound/pcmcia/Kconfig \
+	sound/firewire/Kconfig \
+	sound/usb/Kconfig \
+	sound/sh/Kconfig \
+	sound/mips/Kconfig \
+	sound/spi/Kconfig \
+	sound/atmel/Kconfig \
+	sound/arm/Kconfig \
+	sound/aoa/soundbus/Kconfig \
+	sound/aoa/codecs/Kconfig \
+	sound/aoa/fabrics/Kconfig \
+	sound/aoa/Kconfig \
+	sound/ppc/Kconfig \
+	sound/pci/hda/Kconfig \
+	sound/pci/Kconfig \
+	sound/isa/Kconfig \
+	sound/drivers/Kconfig \
+	sound/core/seq/Kconfig \
+	sound/core/Kconfig \
+	sound/oss/dmasound/Kconfig \
+	sound/Kconfig \
+	drivers/video/logo/Kconfig \
+	drivers/video/console/Kconfig \
+	drivers/video/backlight/Kconfig \
+	drivers/video/exynos/Kconfig \
+	drivers/video/omap2/displays/Kconfig \
+	drivers/video/omap2/omapfb/Kconfig \
+	drivers/video/omap2/dss/Kconfig \
+	drivers/video/omap2/Kconfig \
+	drivers/video/omap/Kconfig \
+	drivers/video/geode/Kconfig \
+	drivers/gpu/stub/Kconfig \
+	drivers/gpu/drm/udl/Kconfig \
+	drivers/gpu/drm/gma500/Kconfig \
+	drivers/gpu/drm/vmwgfx/Kconfig \
+	drivers/gpu/drm/exynos/Kconfig \
+	drivers/gpu/drm/nouveau/Kconfig \
+	drivers/gpu/drm/radeon/Kconfig \
+	drivers/gpu/drm/Kconfig \
+	drivers/gpu/vga/Kconfig \
+	drivers/char/agp/Kconfig \
+	drivers/video/Kconfig \
+	drivers/media/dvb/frontends/Kconfig \
+	drivers/media/dvb/ddbridge/Kconfig \
+	drivers/media/dvb/ngene/Kconfig \
+	drivers/media/dvb/mantis/Kconfig \
+	drivers/media/dvb/pt1/Kconfig \
+	drivers/media/dvb/firewire/Kconfig \
+	drivers/media/dvb/dm1105/Kconfig \
+	drivers/media/dvb/pluto2/Kconfig \
+	drivers/media/dvb/bt8xx/Kconfig \
+	drivers/media/dvb/b2c2/Kconfig \
+	drivers/media/dvb/siano/Kconfig \
+	drivers/media/dvb/ttusb-dec/Kconfig \
+	drivers/media/dvb/ttusb-budget/Kconfig \
+	drivers/media/dvb/dvb-usb/Kconfig \
+	drivers/media/dvb/ttpci/Kconfig \
+	drivers/media/dvb/Kconfig \
+	drivers/media/radio/wl128x/Kconfig \
+	drivers/media/radio/si470x/Kconfig \
+	drivers/media/radio/Kconfig \
+	drivers/media/video/s5p-tv/Kconfig \
+	drivers/media/video/blackfin/Kconfig \
+	drivers/media/video/omap/Kconfig \
+	drivers/media/video/davinci/Kconfig \
+	drivers/media/video/marvell-ccic/Kconfig \
+	drivers/media/video/zoran/Kconfig \
+	drivers/media/video/saa7164/Kconfig \
+	drivers/media/video/saa7134/Kconfig \
+	drivers/media/video/ivtv/Kconfig \
+	drivers/media/video/cx88/Kconfig \
+	drivers/media/video/cx25821/Kconfig \
+	drivers/media/video/cx23885/Kconfig \
+	drivers/media/video/cx18/Kconfig \
+	drivers/media/video/bt8xx/Kconfig \
+	drivers/media/video/au0828/Kconfig \
+	drivers/media/video/cpia2/Kconfig \
+	drivers/media/video/pwc/Kconfig \
+	drivers/media/video/sn9c102/Kconfig \
+	drivers/media/video/et61x251/Kconfig \
+	drivers/media/video/usbvision/Kconfig \
+	drivers/media/video/tm6000/Kconfig \
+	drivers/media/video/cx231xx/Kconfig \
+	drivers/media/video/tlg2300/Kconfig \
+	drivers/media/video/em28xx/Kconfig \
+	drivers/media/video/hdpvr/Kconfig \
+	drivers/media/video/pvrusb2/Kconfig \
+	drivers/media/video/gspca/gl860/Kconfig \
+	drivers/media/video/gspca/stv06xx/Kconfig \
+	drivers/media/video/gspca/m5602/Kconfig \
+	drivers/media/video/gspca/Kconfig \
+	drivers/media/video/uvc/Kconfig \
+	drivers/media/video/m5mols/Kconfig \
+	drivers/media/video/cx25840/Kconfig \
+	drivers/media/video/Kconfig \
+	drivers/media/common/tuners/Kconfig \
+	drivers/media/rc/keymaps/Kconfig \
+	drivers/media/rc/Kconfig \
+	drivers/media/common/Kconfig \
+	drivers/media/Kconfig \
+	drivers/regulator/Kconfig \
+	drivers/mfd/Kconfig \
+	drivers/bcma/Kconfig \
+	drivers/ssb/Kconfig \
+	drivers/watchdog/Kconfig \
+	drivers/thermal/Kconfig \
+	drivers/hwmon/pmbus/Kconfig \
+	drivers/hwmon/Kconfig \
+	drivers/power/Kconfig \
+	drivers/w1/slaves/Kconfig \
+	drivers/w1/masters/Kconfig \
+	drivers/w1/Kconfig \
+	drivers/gpio/Kconfig \
+	drivers/pinctrl/Kconfig \
+	drivers/ptp/Kconfig \
+	drivers/pps/generators/Kconfig \
+	drivers/pps/clients/Kconfig \
+	drivers/pps/Kconfig \
+	drivers/hsi/clients/Kconfig \
+	drivers/hsi/Kconfig \
+	drivers/spi/Kconfig \
+	drivers/i2c/busses/Kconfig \
+	drivers/i2c/algos/Kconfig \
+	drivers/i2c/muxes/Kconfig \
+	drivers/i2c/Kconfig \
+	drivers/s390/char/Kconfig \
+	drivers/char/tpm/Kconfig \
+	drivers/char/pcmcia/Kconfig \
+	drivers/char/hw_random/Kconfig \
+	drivers/char/ipmi/Kconfig \
+	drivers/tty/hvc/Kconfig \
+	drivers/tty/serial/8250/Kconfig \
+	drivers/tty/serial/Kconfig \
+	drivers/tty/Kconfig \
+	drivers/char/Kconfig \
+	drivers/input/gameport/Kconfig \
+	drivers/input/serio/Kconfig \
+	drivers/input/misc/Kconfig \
+	drivers/input/touchscreen/Kconfig \
+	drivers/input/tablet/Kconfig \
+	drivers/input/joystick/iforce/Kconfig \
+	drivers/input/joystick/Kconfig \
+	drivers/input/mouse/Kconfig \
+	drivers/input/keyboard/Kconfig \
+	drivers/input/Kconfig \
+	drivers/isdn/hardware/mISDN/Kconfig \
+	drivers/isdn/mISDN/Kconfig \
+	drivers/isdn/hysdn/Kconfig \
+	drivers/isdn/gigaset/Kconfig \
+	drivers/isdn/hardware/eicon/Kconfig \
+	drivers/isdn/hardware/avm/Kconfig \
+	drivers/isdn/hardware/Kconfig \
+	drivers/isdn/capi/Kconfig \
+	drivers/isdn/act2000/Kconfig \
+	drivers/isdn/sc/Kconfig \
+	drivers/isdn/pcbit/Kconfig \
+	drivers/isdn/icn/Kconfig \
+	drivers/isdn/hisax/Kconfig \
+	drivers/isdn/i4l/Kconfig \
+	drivers/isdn/Kconfig \
+	drivers/net/hyperv/Kconfig \
+	drivers/net/wan/Kconfig \
+	drivers/net/wimax/i2400m/Kconfig \
+	drivers/net/wimax/Kconfig \
+	drivers/net/wireless/mwifiex/Kconfig \
+	drivers/net/wireless/zd1211rw/Kconfig \
+	drivers/net/wireless/wl12xx/Kconfig \
+	drivers/net/wireless/wl1251/Kconfig \
+	drivers/net/wireless/rtlwifi/Kconfig \
+	drivers/net/wireless/rt2x00/Kconfig \
+	drivers/net/wireless/p54/Kconfig \
+	drivers/net/wireless/orinoco/Kconfig \
+	drivers/net/wireless/libertas/Kconfig \
+	drivers/net/wireless/iwmc3200wifi/Kconfig \
+	drivers/net/wireless/iwlegacy/Kconfig \
+	drivers/net/wireless/iwlwifi/Kconfig \
+	drivers/net/wireless/ipw2x00/Kconfig \
+	drivers/net/wireless/hostap/Kconfig \
+	drivers/net/wireless/brcm80211/Kconfig \
+	drivers/net/wireless/b43legacy/Kconfig \
+	drivers/net/wireless/b43/Kconfig \
+	drivers/net/wireless/ath/ath6kl/Kconfig \
+	drivers/net/wireless/ath/carl9170/Kconfig \
+	drivers/net/wireless/ath/ath9k/Kconfig \
+	drivers/net/wireless/ath/ath5k/Kconfig \
+	drivers/net/wireless/ath/Kconfig \
+	drivers/net/wireless/rtl818x/Kconfig \
+	drivers/net/wireless/Kconfig \
+	drivers/net/usb/Kconfig \
+	drivers/net/tokenring/Kconfig \
+	drivers/s390/net/Kconfig \
+	drivers/net/slip/Kconfig \
+	drivers/net/ppp/Kconfig \
+	drivers/net/plip/Kconfig \
+	drivers/net/phy/Kconfig \
+	drivers/net/hippi/Kconfig \
+	drivers/net/fddi/Kconfig \
+	drivers/net/ethernet/xircom/Kconfig \
+	drivers/net/ethernet/xilinx/Kconfig \
+	drivers/net/ethernet/via/Kconfig \
+	drivers/net/ethernet/tundra/Kconfig \
+	drivers/net/ethernet/toshiba/Kconfig \
+	drivers/net/ethernet/tile/Kconfig \
+	drivers/net/ethernet/ti/Kconfig \
+	drivers/net/ethernet/tehuti/Kconfig \
+	drivers/net/ethernet/sun/Kconfig \
+	drivers/net/ethernet/stmicro/stmmac/Kconfig \
+	drivers/net/ethernet/stmicro/Kconfig \
+	drivers/net/ethernet/smsc/Kconfig \
+	drivers/net/ethernet/sgi/Kconfig \
+	drivers/net/ethernet/sfc/Kconfig \
+	drivers/net/ethernet/sis/Kconfig \
+	drivers/net/ethernet/silan/Kconfig \
+	drivers/net/ethernet/seeq/Kconfig \
+	drivers/net/ethernet/rdc/Kconfig \
+	drivers/net/ethernet/renesas/Kconfig \
+	drivers/net/ethernet/realtek/Kconfig \
+	drivers/net/ethernet/racal/Kconfig \
+	drivers/net/ethernet/qlogic/Kconfig \
+	drivers/net/ethernet/pasemi/Kconfig \
+	drivers/net/ethernet/packetengines/Kconfig \
+	drivers/net/ethernet/oki-semi/pch_gbe/Kconfig \
+	drivers/net/ethernet/oki-semi/Kconfig \
+	drivers/net/ethernet/octeon/Kconfig \
+	drivers/net/ethernet/nxp/Kconfig \
+	drivers/net/ethernet/nvidia/Kconfig \
+	drivers/net/ethernet/nuvoton/Kconfig \
+	drivers/net/ethernet/8390/Kconfig \
+	drivers/net/ethernet/natsemi/Kconfig \
+	drivers/net/ethernet/myricom/Kconfig \
+	drivers/net/ethernet/microchip/Kconfig \
+	drivers/net/ethernet/micrel/Kconfig \
+	drivers/net/ethernet/mellanox/mlx4/Kconfig \
+	drivers/net/ethernet/mellanox/Kconfig \
+	drivers/net/ethernet/marvell/Kconfig \
+	drivers/net/ethernet/icplus/Kconfig \
+	drivers/net/ethernet/xscale/ixp2000/Kconfig \
+	drivers/net/ethernet/xscale/Kconfig \
+	drivers/net/ethernet/i825xx/Kconfig \
+	drivers/net/ethernet/intel/Kconfig \
+	drivers/net/ethernet/ibm/emac/Kconfig \
+	drivers/net/ethernet/ibm/Kconfig \
+	drivers/net/ethernet/hp/Kconfig \
+	drivers/net/ethernet/fujitsu/Kconfig \
+	drivers/net/ethernet/freescale/fs_enet/Kconfig \
+	drivers/net/ethernet/freescale/Kconfig \
+	drivers/net/ethernet/faraday/Kconfig \
+	drivers/net/ethernet/neterion/Kconfig \
+	drivers/net/ethernet/emulex/benet/Kconfig \
+	drivers/net/ethernet/emulex/Kconfig \
+	drivers/net/ethernet/dlink/Kconfig \
+	drivers/net/ethernet/dec/tulip/Kconfig \
+	drivers/net/ethernet/dec/Kconfig \
+	drivers/net/ethernet/davicom/Kconfig \
+	drivers/net/ethernet/cisco/enic/Kconfig \
+	drivers/net/ethernet/cisco/Kconfig \
+	drivers/net/ethernet/cirrus/Kconfig \
+	drivers/net/ethernet/chelsio/Kconfig \
+	drivers/net/ethernet/calxeda/Kconfig \
+	drivers/net/ethernet/brocade/bna/Kconfig \
+	drivers/net/ethernet/brocade/Kconfig \
+	drivers/net/ethernet/broadcom/Kconfig \
+	drivers/net/ethernet/adi/Kconfig \
+	drivers/net/ethernet/cadence/Kconfig \
+	drivers/net/ethernet/atheros/Kconfig \
+	drivers/net/ethernet/apple/Kconfig \
+	drivers/net/ethernet/amd/Kconfig \
+	drivers/net/ethernet/alteon/Kconfig \
+	drivers/net/ethernet/aeroflex/Kconfig \
+	drivers/net/ethernet/adaptec/Kconfig \
+	drivers/net/ethernet/3com/Kconfig \
+	drivers/net/ethernet/Kconfig \
+	drivers/net/dsa/Kconfig \
+	drivers/net/caif/Kconfig \
+	drivers/atm/Kconfig \
+	drivers/net/arcnet/Kconfig \
+	drivers/net/team/Kconfig \
+	drivers/ieee802154/Kconfig \
+	drivers/net/Kconfig \
+	drivers/macintosh/Kconfig \
+	drivers/message/i2o/Kconfig \
+	drivers/firewire/Kconfig \
+	drivers/message/fusion/Kconfig \
+	drivers/target/iscsi/Kconfig \
+	drivers/target/tcm_fc/Kconfig \
+	drivers/target/loopback/Kconfig \
+	drivers/target/Kconfig \
+	drivers/md/persistent-data/Kconfig \
+	drivers/md/Kconfig \
+	drivers/ata/Kconfig \
+	drivers/scsi/osd/Kconfig \
+	drivers/scsi/device_handler/Kconfig \
+	drivers/scsi/pcmcia/Kconfig \
+	drivers/scsi/arm/Kconfig \
+	drivers/scsi/qla4xxx/Kconfig \
+	drivers/scsi/qla2xxx/Kconfig \
+	drivers/scsi/ufs/Kconfig \
+	drivers/scsi/mpt2sas/Kconfig \
+	drivers/scsi/megaraid/Kconfig.megaraid \
+	drivers/scsi/mvsas/Kconfig \
+	drivers/scsi/aic94xx/Kconfig \
+	drivers/scsi/aic7xxx/Kconfig.aic79xx \
+	drivers/scsi/aic7xxx/Kconfig.aic7xxx \
+	drivers/scsi/be2iscsi/Kconfig \
+	drivers/scsi/bnx2fc/Kconfig \
+	drivers/scsi/bnx2i/Kconfig \
+	drivers/scsi/cxgbi/cxgb4i/Kconfig \
+	drivers/scsi/cxgbi/cxgb3i/Kconfig \
+	drivers/scsi/cxgbi/Kconfig \
+	drivers/scsi/libsas/Kconfig \
+	drivers/scsi/Kconfig \
+	drivers/ide/Kconfig \
+	drivers/misc/altera-stapl/Kconfig \
+	drivers/misc/carma/Kconfig \
+	drivers/misc/lis3lv02d/Kconfig \
+	drivers/misc/ti-st/Kconfig \
+	drivers/misc/iwmc3200top/Kconfig \
+	drivers/misc/cb710/Kconfig \
+	drivers/misc/eeprom/Kconfig \
+	drivers/misc/c2port/Kconfig \
+	drivers/misc/Kconfig \
+	drivers/s390/block/Kconfig \
+	drivers/block/drbd/Kconfig \
+	drivers/block/mtip32xx/Kconfig \
+	drivers/block/paride/Kconfig \
+	drivers/block/Kconfig \
+	drivers/pnp/pnpacpi/Kconfig \
+	drivers/pnp/pnpbios/Kconfig \
+	drivers/pnp/isapnp/Kconfig \
+	drivers/pnp/Kconfig \
+	drivers/parport/Kconfig \
+	drivers/of/Kconfig \
+	drivers/mtd/ubi/Kconfig \
+	drivers/mtd/lpddr/Kconfig \
+	drivers/mtd/onenand/Kconfig \
+	drivers/mtd/nand/Kconfig \
+	drivers/mtd/devices/Kconfig \
+	drivers/mtd/maps/Kconfig \
+	drivers/mtd/chips/Kconfig \
+	drivers/mtd/Kconfig \
+	drivers/connector/Kconfig \
+	drivers/base/regmap/Kconfig \
+	drivers/base/Kconfig \
+	drivers/Kconfig \
+	drivers/nfc/Kconfig \
+	net/nfc/llcp/Kconfig \
+	net/nfc/nci/Kconfig \
+	net/nfc/Kconfig \
+	net/ceph/Kconfig \
+	net/caif/Kconfig \
+	net/9p/Kconfig \
+	net/rfkill/Kconfig \
+	net/wimax/Kconfig \
+	net/mac80211/Kconfig \
+	net/wireless/Kconfig \
+	net/rxrpc/Kconfig \
+	drivers/bluetooth/Kconfig \
+	net/bluetooth/hidp/Kconfig \
+	net/bluetooth/cmtp/Kconfig \
+	net/bluetooth/bnep/Kconfig \
+	net/bluetooth/rfcomm/Kconfig \
+	net/bluetooth/Kconfig \
+	drivers/net/irda/Kconfig \
+	net/irda/ircomm/Kconfig \
+	net/irda/irnet/Kconfig \
+	net/irda/irlan/Kconfig \
+	net/irda/Kconfig \
+	drivers/net/can/softing/Kconfig \
+	drivers/net/can/usb/Kconfig \
+	drivers/net/can/cc770/Kconfig \
+	drivers/net/can/c_can/Kconfig \
+	drivers/net/can/sja1000/Kconfig \
+	drivers/net/can/mscan/Kconfig \
+	drivers/net/can/Kconfig \
+	net/can/Kconfig \
+	drivers/net/hamradio/Kconfig \
+	net/ax25/Kconfig \
+	net/openvswitch/Kconfig \
+	net/batman-adv/Kconfig \
+	net/dns_resolver/Kconfig \
+	net/dcb/Kconfig \
+	net/sched/Kconfig \
+	net/ieee802154/Kconfig \
+	net/phonet/Kconfig \
+	net/wanrouter/Kconfig \
+	net/econet/Kconfig \
+	net/lapb/Kconfig \
+	net/x25/Kconfig \
+	drivers/net/appletalk/Kconfig \
+	net/ipx/Kconfig \
+	net/llc/Kconfig \
+	net/decnet/Kconfig \
+	net/8021q/Kconfig \
+	net/dsa/Kconfig \
+	net/bridge/Kconfig \
+	net/802/Kconfig \
+	net/l2tp/Kconfig \
+	net/atm/Kconfig \
+	net/tipc/Kconfig \
+	net/rds/Kconfig \
+	net/sctp/Kconfig \
+	net/dccp/ccids/Kconfig \
+	net/dccp/Kconfig \
+	net/bridge/netfilter/Kconfig \
+	net/decnet/netfilter/Kconfig \
+	net/ipv6/netfilter/Kconfig \
+	net/ipv4/netfilter/Kconfig \
+	net/netfilter/ipvs/Kconfig \
+	net/netfilter/ipset/Kconfig \
+	net/netfilter/Kconfig \
+	net/netlabel/Kconfig \
+	net/ipv6/Kconfig \
+	net/ipv4/Kconfig \
+	net/iucv/Kconfig \
+	net/xfrm/Kconfig \
+	net/unix/Kconfig \
+	net/packet/Kconfig \
+	net/Kconfig \
+	fs/Kconfig.binfmt \
+	drivers/rapidio/switches/Kconfig \
+	drivers/rapidio/devices/Kconfig \
+	drivers/rapidio/Kconfig \
+	drivers/pci/hotplug/Kconfig \
+	drivers/pcmcia/Kconfig \
+	drivers/mca/Kconfig \
+	drivers/eisa/Kconfig \
+	drivers/pci/Kconfig \
+	drivers/pci/pcie/aer/Kconfig.debug \
+	drivers/pci/pcie/aer/Kconfig \
+	drivers/pci/pcie/Kconfig \
+	drivers/idle/Kconfig \
+	drivers/cpuidle/Kconfig \
+	drivers/cpufreq/Kconfig.powerpc \
+	drivers/cpufreq/Kconfig.arm \
+	drivers/cpufreq/Kconfig.x86 \
+	drivers/cpufreq/Kconfig \
+	drivers/sfi/Kconfig \
+	drivers/acpi/apei/Kconfig \
+	drivers/acpi/Kconfig \
+	kernel/power/Kconfig \
+	kernel/Kconfig.hz \
+	mm/Kconfig \
+	kernel/Kconfig.preempt \
+	arch/x86/Kconfig.cpu \
+	arch/x86/lguest/Kconfig \
+	arch/x86/xen/Kconfig \
+	kernel/time/Kconfig \
+	kernel/Kconfig.freezer \
+	kernel/Kconfig.locks \
+	block/Kconfig.iosched \
+	block/partitions/Kconfig \
+	block/Kconfig \
+	kernel/gcov/Kconfig \
+	arch/Kconfig \
+	usr/Kconfig \
+	kernel/irq/Kconfig \
+	init/Kconfig \
+	arch/x86/Kconfig \
+	Kconfig
+
+include/config/auto.conf: \
+	$(deps_config)
+
+ifneq "$(KERNELVERSION)" "3.4.104"
+include/config/auto.conf: FORCE
+endif
+ifneq "$(ARCH)" "i386"
+include/config/auto.conf: FORCE
+endif
+ifneq "$(SRCARCH)" "x86"
+include/config/auto.conf: FORCE
+endif
+
+$(deps_config): ;
diff -uprN ../linux-3.4.104-vanilla/include/config/kernel.release linux-3.4.104-syssec_hw2_app2/include/config/kernel.release
--- ../linux-3.4.104-vanilla/include/config/kernel.release	1969-12-31 19:00:00.000000000 -0500
+++ linux-3.4.104-syssec_hw2_app2/include/config/kernel.release	2014-11-12 22:39:49.000000000 -0500
@@ -0,0 +1 @@
+3.4.104
diff -uprN ../linux-3.4.104-vanilla/include/config/tristate.conf linux-3.4.104-syssec_hw2_app2/include/config/tristate.conf
--- ../linux-3.4.104-vanilla/include/config/tristate.conf	1969-12-31 19:00:00.000000000 -0500
+++ linux-3.4.104-syssec_hw2_app2/include/config/tristate.conf	2014-11-05 22:14:12.000000000 -0500
@@ -0,0 +1,2852 @@
+#
+# Automatically generated file; DO NOT EDIT.
+# Linux/i386 3.4.104 Kernel Configuration
+#
+CONFIG_IP6_NF_MATCH_AH=M
+CONFIG_NLS_CODEPAGE_861=M
+CONFIG_UWB_HWA=M
+CONFIG_NF_CONNTRACK_H323=M
+CONFIG_IP6_NF_SECURITY=M
+CONFIG_MICROCODE=M
+CONFIG_ATM_ENI=M
+CONFIG_TOUCHSCREEN_INEXIO=M
+CONFIG_3C359=M
+CONFIG_SENSORS_ABITUGURU=M
+CONFIG_USB_C67X00_HCD=M
+CONFIG_COMEDI_TEST=M
+CONFIG_TI_DAC7512=M
+CONFIG_IP_NF_TARGET_REDIRECT=M
+CONFIG_SERIO_ALTERA_PS2=M
+CONFIG_DRM_GMA500=M
+CONFIG_CRC32=Y
+CONFIG_SPEAKUP_SYNTH_LTLK=M
+CONFIG_NF_NAT_PROTO_SCTP=M
+CONFIG_DM_SNAPSHOT=M
+CONFIG_SCSI_DC390T=M
+CONFIG_IR_JVC_DECODER=M
+CONFIG_SND_ES18XX=M
+CONFIG_PCMCIA_QLOGIC=M
+CONFIG_DRM_NOUVEAU=M
+CONFIG_FSCACHE=M
+CONFIG_COMEDI_USBDUX=M
+CONFIG_NETFILTER_XT_MATCH_CPU=M
+CONFIG_SENSORS_MAX1668=M
+CONFIG_IR_MCE_KBD_DECODER=M
+CONFIG_CPU_FREQ_GOV_CONSERVATIVE=M
+CONFIG_PCMCIA_AXNET=M
+CONFIG_SPI_TOPCLIFF_PCH=M
+CONFIG_BLK_DEV_DM=M
+CONFIG_R3964=M
+CONFIG_USB_SERIAL_HP4X=M
+CONFIG_VLAN_8021Q=M
+CONFIG_HOTPLUG_PCI_FAKE=M
+CONFIG_MTD_NETSC520=M
+CONFIG_BT_RFCOMM=M
+CONFIG_MTD_DOC2001=M
+CONFIG_LEDS_TRIGGER_HEARTBEAT=M
+CONFIG_DEV_APPLETALK=M
+CONFIG_SCSI_INITIO=M
+CONFIG_DVB_TDA1004X=M
+CONFIG_JOYSTICK_ADI=M
+CONFIG_DVB_BCM3510=M
+CONFIG_NF_CONNTRACK_NETBIOS_NS=M
+CONFIG_SCSI_DH=M
+CONFIG_BRIDGE_EBT_T_FILTER=M
+CONFIG_KVM_INTEL=M
+CONFIG_ASUS_LAPTOP=M
+CONFIG_CRYPTO_MD4=M
+CONFIG_SCSI_AHA152X=M
+CONFIG_USB_SI470X=M
+CONFIG_SCSI_BFA_FC=M
+CONFIG_CPU_FREQ_GOV_ONDEMAND=Y
+CONFIG_SENSORS_LM95245=M
+CONFIG_BLK_DEV_XD=M
+CONFIG_BT_HCIBFUSB=M
+CONFIG_PLX_HERMES=M
+CONFIG_WL12XX=M
+CONFIG_PPP_SYNC_TTY=M
+CONFIG_RC_CORE=M
+CONFIG_LEDS_PCA955X=M
+CONFIG_IP_VS_NQ=M
+CONFIG_DVB_DRXD=M
+CONFIG_SENSORS_LTC4245=M
+CONFIG_HID_SPEEDLINK=M
+CONFIG_SPEAKUP_SYNTH_APOLLO=M
+CONFIG_BLK_DEV_NBD=M
+CONFIG_USB_SERIAL_NAVMAN=M
+CONFIG_JOYSTICK_SPACEORB=M
+CONFIG_EDAC_I5400=M
+CONFIG_TCP_CONG_HTCP=M
+CONFIG_SCSI_DEBUG=M
+CONFIG_DRM_I915=M
+CONFIG_BINFMT_MISC=M
+CONFIG_NETFILTER_XT_MATCH_HELPER=M
+CONFIG_BRIDGE_EBT_T_NAT=M
+CONFIG_NF_NAT_SIP=M
+CONFIG_SENSORS_W83792D=M
+CONFIG_NET_9P_RDMA=M
+CONFIG_DRM_RADEON=M
+CONFIG_NETFILTER_XT_MATCH_STATISTIC=M
+CONFIG_COMEDI_NI_PCIMIO=M
+CONFIG_COMEDI_ADDI_APCI_1032=M
+CONFIG_NLS_CODEPAGE_855=M
+CONFIG_ESI_DONGLE=M
+CONFIG_EDAC_I5100=M
+CONFIG_DVB_EC100=M
+CONFIG_USB_SERIAL_EDGEPORT_TI=M
+CONFIG_RTC_DRV_PCF50633=M
+CONFIG_HDLC_RAW=M
+CONFIG_USB_SERIAL_SAFE=M
+CONFIG_BRIDGE_NF_EBTABLES=M
+CONFIG_PATA_ARASAN_CF=M
+CONFIG_REISERFS_FS=M
+CONFIG_SATA_NV=M
+CONFIG_CRYPTO_RMD128=M
+CONFIG_STP=M
+CONFIG_USB_GSPCA_SQ905=M
+CONFIG_INET6_TUNNEL=M
+CONFIG_VIA_FIR=M
+CONFIG_SCSI_DC395x=M
+CONFIG_DVB_M88RS2000=M
+CONFIG_NF_CONNTRACK_SIP=M
+CONFIG_SND_NM256=M
+CONFIG_SENSORS_ADM1025=M
+CONFIG_KSDAZZLE_DONGLE=M
+CONFIG_HID_PRODIKEYS=M
+CONFIG_I2O_PROC=M
+CONFIG_IP_NF_QUEUE=M
+CONFIG_SDLA=M
+CONFIG_IP_VS_SED=M
+CONFIG_DVB_DS3000=M
+CONFIG_FB_S1D13XXX=M
+CONFIG_MTD_SST25L=M
+CONFIG_REGULATOR_LP3971=M
+CONFIG_DM_FLAKEY=M
+CONFIG_MACVTAP=M
+CONFIG_LEDS_REGULATOR=M
+CONFIG_CHELSIO_T4VF=M
+CONFIG_USB_SERIAL_FTDI_SIO=M
+CONFIG_BRIDGE_EBT_REDIRECT=M
+CONFIG_8139CP=M
+CONFIG_HID_EMS_FF=M
+CONFIG_COMEDI_ADDI_APCI_16XX=M
+CONFIG_IP_SET_HASH_NETIFACE=M
+CONFIG_IP6_NF_MANGLE=M
+CONFIG_MTD_PLATRAM=M
+CONFIG_BT_MRVL_SDIO=M
+CONFIG_NETFILTER_XT_MATCH_REALM=M
+CONFIG_BRIDGE_EBT_ULOG=M
+CONFIG_BT_HCIBPA10X=M
+CONFIG_IP_VS_RR=M
+CONFIG_IPV6=Y
+CONFIG_USB_SERIAL_QUALCOMM=M
+CONFIG_NET_9P=M
+CONFIG_CRYPTO_AEAD=M
+CONFIG_FB_HECUBA=M
+CONFIG_COMEDI_ADDI_APCI_3501=M
+CONFIG_MDA_CONSOLE=M
+CONFIG_NET_CLS_FLOW=M
+CONFIG_SENSORS_PC87427=M
+CONFIG_PNFS_FILE_LAYOUT=M
+CONFIG_I82092=M
+CONFIG_SCSI_PMCRAID=M
+CONFIG_DVB_ISL6423=M
+CONFIG_PATA_SC1200=M
+CONFIG_USB_STORAGE_USBAT=M
+CONFIG_CRYPTO_SALSA20_586=M
+CONFIG_NF_NAT_PROTO_GRE=M
+CONFIG_NLS_ISO8859_7=M
+CONFIG_CRYPTO_PCBC=M
+CONFIG_IP6_NF_TARGET_REJECT=M
+CONFIG_COMEDI_PCL812=M
+CONFIG_ASYNC_MEMCPY=M
+CONFIG_PCH_PHUB=M
+CONFIG_ZNET=M
+CONFIG_X86_POWERNOW_K8=M
+CONFIG_SC1200_WDT=M
+CONFIG_DCDBAS=M
+CONFIG_RTC_DRV_DS1305=M
+CONFIG_IR_NEC_DECODER=M
+CONFIG_USB_SERIAL_MOS7840=M
+CONFIG_AFFS_FS=M
+CONFIG_COMEDI_ADDI_APCI_1516=M
+CONFIG_ATM_FIRESTREAM=M
+CONFIG_L2TP_DEBUGFS=M
+CONFIG_NSC_FIR=M
+CONFIG_USB_NET_INT51X1=M
+CONFIG_INET6_XFRM_MODE_ROUTEOPTIMIZATION=M
+CONFIG_PATA_ATP867X=M
+CONFIG_COMEDI_CONTEC_PCI_DIO=M
+CONFIG_ENIC=M
+CONFIG_SCSI_ISCI=M
+CONFIG_PATA_SERVERWORKS=M
+CONFIG_CONNECTOR=Y
+CONFIG_COMEDI_DAS16M1=M
+CONFIG_NETFILTER_XT_TARGET_RATEEST=M
+CONFIG_EPIC100=M
+CONFIG_BRIDGE_EBT_ARPREPLY=M
+CONFIG_BACKLIGHT_APPLE=M
+CONFIG_PARIDE=M
+CONFIG_SND_SBAWE_SEQ=M
+CONFIG_SENSORS_SIS5595=M
+CONFIG_DM_MULTIPATH_QL=M
+CONFIG_LIBERTAS_USB=M
+CONFIG_JFS_FS=M
+CONFIG_CAN_EMS_USB=M
+CONFIG_XFRM_IPCOMP=M
+CONFIG_CRYPTO_RNG2=Y
+CONFIG_UIO_CIF=M
+CONFIG_FUSION_FC=M
+CONFIG_NETFILTER_NETLINK_QUEUE=M
+CONFIG_NET_ACT_CSUM=M
+CONFIG_MSDOS_FS=M
+CONFIG_COMEDI_DT2811=M
+CONFIG_FB_VGA16=M
+CONFIG_NET_CLS_CGROUP=Y
+CONFIG_TUN=M
+CONFIG_USB_GSPCA_SUNPLUS=M
+CONFIG_COMEDI_DAS6402=M
+CONFIG_ATM_IDT77252=M
+CONFIG_ENCLOSURE_SERVICES=M
+CONFIG_ISDN_DRV_AVMB1_T1ISA=M
+CONFIG_SENSORS_ADS1015=M
+CONFIG_BNX2=M
+CONFIG_CAN=M
+CONFIG_SND_VX222=M
+CONFIG_CFG80211=M
+CONFIG_MTD_BLOCK_RO=M
+CONFIG_EQUALIZER=M
+CONFIG_COMEDI_JR3_PCI=M
+CONFIG_SND_AU8810=M
+CONFIG_NLS_CODEPAGE_1250=M
+CONFIG_COMEDI_NI_6527=M
+CONFIG_DM_CRYPT=M
+CONFIG_SERIAL_8250=Y
+CONFIG_NCP_FS=M
+CONFIG_XEN_GNTDEV=M
+CONFIG_SENSORS_W83793=M
+CONFIG_LZO_DECOMPRESS=Y
+CONFIG_LIBERTAS_THINFIRM=M
+CONFIG_EXOFS_FS=M
+CONFIG_HID_BELKIN=M
+CONFIG_VIDEO_IR_I2C=M
+CONFIG_NLS_CODEPAGE_862=M
+CONFIG_IWM=M
+CONFIG_NFSD=M
+CONFIG_ISDN_DRV_AVMB1_C4=M
+CONFIG_SENSORS_TSL2550=M
+CONFIG_TMS380TR=M
+CONFIG_PATA_MPIIX=M
+CONFIG_USB_SERIAL_OPTION=M
+CONFIG_HID_ACRUX=M
+CONFIG_SBC7240_WDT=M
+CONFIG_USB_GSPCA_SE401=M
+CONFIG_CRYPTO_SALSA20=M
+CONFIG_USB=M
+CONFIG_PATA_SIL680=M
+CONFIG_ACPI_IPMI=M
+CONFIG_SND_OPL3SA2=M
+CONFIG_MMC_SDHCI_PCI=M
+CONFIG_USB_SPEEDTOUCH=M
+CONFIG_ALIM7101_WDT=M
+CONFIG_ACPI_PCI_SLOT=M
+CONFIG_CRYPTO_HMAC=M
+CONFIG_AGP_ATI=Y
+CONFIG_USB_GSPCA_JEILINJ=M
+CONFIG_CRC_ITU_T=M
+CONFIG_SND_HRTIMER=M
+CONFIG_ALI_FIR=M
+CONFIG_PARPORT_PC_PCMCIA=M
+CONFIG_FRAMEBUFFER_CONSOLE=Y
+CONFIG_NET_DCCPPROBE=M
+CONFIG_DM_ZERO=M
+CONFIG_DVB_DIB8000=M
+CONFIG_SBC8360_WDT=M
+CONFIG_SND_SEQUENCER=M
+CONFIG_TCP_CONG_LP=M
+CONFIG_GAMEPORT_EMU10K1=M
+CONFIG_WL1251_SPI=M
+CONFIG_USB_NET_GL620A=M
+CONFIG_COMEDI_ADDI_APCI_1500=M
+CONFIG_SND_OPL3_LIB=M
+CONFIG_IP_NF_ARPTABLES=M
+CONFIG_COMEDI_AMPLC_PC263=M
+CONFIG_DVB_USB_GP8PSK=M
+CONFIG_HID_CHERRY=M
+CONFIG_PC87413_WDT=M
+CONFIG_BATTERY_MAX17040=M
+CONFIG_MKISS=M
+CONFIG_HID_SUNPLUS=M
+CONFIG_KSZ884X_PCI=M
+CONFIG_HID_PICOLCD=M
+CONFIG_NET_SCH_SFB=M
+CONFIG_FUSION_CTL=M
+CONFIG_TULIP=M
+CONFIG_AF_RXRPC=M
+CONFIG_ZRAM=M
+CONFIG_CRYPTO_CAST5=M
+CONFIG_SENSORS_CORETEMP=M
+CONFIG_PARIDE_FIT2=M
+CONFIG_FIREWIRE_SBP2=M
+CONFIG_NET_IPGRE_DEMUX=M
+CONFIG_COMEDI_MULTIQ3=M
+CONFIG_MEDIA_TUNER_XC5000=M
+CONFIG_SPEAKUP_SYNTH_BNS=M
+CONFIG_EDAC_I82875P=M
+CONFIG_SFC=M
+CONFIG_PHANTOM=M
+CONFIG_FORCEDETH=M
+CONFIG_COMEDI_DAS08_CS=M
+CONFIG_FB_SYS_FILLRECT=Y
+CONFIG_HID_THRUSTMASTER=M
+CONFIG_CAN_TSCAN1=M
+CONFIG_SENSORS_MAX16065=M
+CONFIG_SENSORS_I5K_AMB=M
+CONFIG_DNS_RESOLVER=Y
+CONFIG_INPUT_WISTRON_BTNS=M
+CONFIG_CRYPTO_AUTHENC=M
+CONFIG_DVB_SP8870=M
+CONFIG_I6300ESB_WDT=M
+CONFIG_GPIO_ML_IOH=M
+CONFIG_YENTA=M
+CONFIG_W1_MASTER_DS2482=M
+CONFIG_COMEDI_SERIAL2002=M
+CONFIG_JOYSTICK_SIDEWINDER=M
+CONFIG_ATL1E=M
+CONFIG_USB_STORAGE_ENE_UB6250=M
+CONFIG_DVB_DDBRIDGE=M
+CONFIG_IRDA=M
+CONFIG_RDS_RDMA=M
+CONFIG_THINKPAD_ACPI=M
+CONFIG_P54_COMMON=M
+CONFIG_MTD=M
+CONFIG_COMEDI_C6XDIGIO=M
+CONFIG_USB_HSO=M
+CONFIG_HID_PRIMAX=M
+CONFIG_DECOMPRESS_LZMA=Y
+CONFIG_N2=M
+CONFIG_SENSORS_AMC6821=M
+CONFIG_USB_IPHETH=M
+CONFIG_NLS_CODEPAGE_850=M
+CONFIG_DVB_CX22700=M
+CONFIG_COMEDI_DAS800=M
+CONFIG_CRYPTO_CTS=M
+CONFIG_EDD=M
+CONFIG_DVB_USB_UMT_010=M
+CONFIG_SUNGEM_PHY=M
+CONFIG_JOYSTICK_DB9=M
+CONFIG_RTC_DRV_R9701=M
+CONFIG_INPUT_MOUSEDEV=Y
+CONFIG_LIBERTAS_CS=M
+CONFIG_ATA=M
+CONFIG_KEYBOARD_SUNKBD=M
+CONFIG_PCMCIA_3C589=M
+CONFIG_CRYPTO_DES=M
+CONFIG_CEPH_LIB=M
+CONFIG_NLS_CODEPAGE_437=M
+CONFIG_MTD_NAND_IDS=M
+CONFIG_NATSEMI=M
+CONFIG_MCS_FIR=M
+CONFIG_NET_CLS_U32=M
+CONFIG_SND_JAZZ16=M
+CONFIG_MISDN=M
+CONFIG_EXPORTFS=Y
+CONFIG_PCMCIA_IBMTR=M
+CONFIG_AD525X_DPOT_I2C=M
+CONFIG_SND_MIXER_OSS=M
+CONFIG_TOUCHSCREEN_PENMOUNT=M
+CONFIG_IP6_NF_MATCH_MH=M
+CONFIG_SCSI_OSD_INITIATOR=M
+CONFIG_DVB_S921=M
+CONFIG_MSI_WMI=M
+CONFIG_IT87_WDT=M
+CONFIG_LRU_CACHE=M
+CONFIG_SCSI_CXGB3_ISCSI=M
+CONFIG_PC8736x_GPIO=M
+CONFIG_SND_DARLA24=M
+CONFIG_SENSORS_MAX1619=M
+CONFIG_DVB_AF9013=M
+CONFIG_PCMCIA_SYM53C500=M
+CONFIG_SERIO=Y
+CONFIG_DVB_USB_DTV5100=M
+CONFIG_IBMASR=M
+CONFIG_INFINIBAND_ISER=M
+CONFIG_FB_SYS_IMAGEBLIT=Y
+CONFIG_VIDEO_TVEEPROM=M
+CONFIG_PPS_CLIENT_PARPORT=M
+CONFIG_DEFXX=M
+CONFIG_SUNRPC_GSS=M
+CONFIG_TYPHOON=M
+CONFIG_TIGON3=M
+CONFIG_MA600_DONGLE=M
+CONFIG_COMEDI_SSV_DNP=M
+CONFIG_SENSORS_LM90=M
+CONFIG_NETCONSOLE=M
+CONFIG_RTC_DRV_RS5C372=M
+CONFIG_NET_EMATCH_U32=M
+CONFIG_TOUCHSCREEN_TOUCHWIN=M
+CONFIG_USB_EMI62=M
+CONFIG_SCSI_IPS=M
+CONFIG_DM_BUFIO=M
+CONFIG_I2C_ALGOPCA=M
+CONFIG_BT_ATH3K=M
+CONFIG_LEDS_TRIGGER_TIMER=M
+CONFIG_RTC_DRV_M48T59=M
+CONFIG_RT2800_LIB=M
+CONFIG_CRYPTO_BLOWFISH_COMMON=M
+CONFIG_FUSION_LAN=M
+CONFIG_MTD_NAND_PLATFORM=M
+CONFIG_DVB_USB_DW2102=M
+CONFIG_PATA_PCMCIA=M
+CONFIG_NF_CONNTRACK_SANE=M
+CONFIG_SERIO_PARKBD=M
+CONFIG_TOIM3232_DONGLE=M
+CONFIG_USB_SERIAL_MOS7720=M
+CONFIG_SND_MSND_PINNACLE=M
+CONFIG_FB_ARC=M
+CONFIG_NF_CT_PROTO_DCCP=M
+CONFIG_ZLIB_INFLATE=Y
+CONFIG_RTC_DRV_V3020=M
+CONFIG_DVB_TUA6100=M
+CONFIG_CRC_T10DIF=M
+CONFIG_BT_HCIBTUART=M
+CONFIG_MEDIA_TUNER_QT1010=M
+CONFIG_PCI_IOAPIC=Y
+CONFIG_HWMON=Y
+CONFIG_CRYPTO_TWOFISH_COMMON=M
+CONFIG_NLS_ISO8859_2=M
+CONFIG_SENSORS_LM63=M
+CONFIG_SMC9194=M
+CONFIG_USB_VIDEO_CLASS=M
+CONFIG_ATM_NICSTAR=M
+CONFIG_USB_SERIAL_TI=M
+CONFIG_NET_SCH_CBQ=M
+CONFIG_CRYPTO_SERPENT=M
+CONFIG_MTD_PCI=M
+CONFIG_ACPI_FAN=M
+CONFIG_SND_FM801=M
+CONFIG_COMEDI_AMPLC_PCI224=M
+CONFIG_COMEDI_NI_TIO=M
+CONFIG_SERIAL_MAX3100=M
+CONFIG_SENSORS_EMC1403=M
+CONFIG_BNA=M
+CONFIG_SCSI_SYM53C8XX_2=M
+CONFIG_SCSI_CXGB4_ISCSI=M
+CONFIG_USB_UHCI_HCD=M
+CONFIG_NVRAM=M
+CONFIG_LOCKD=M
+CONFIG_LEDS_INTEL_SS4200=M
+CONFIG_DVB_FIREDTV=M
+CONFIG_DVB_S5H1411=M
+CONFIG_RTC_DRV_DS3234=M
+CONFIG_USB_SN9C102=M
+CONFIG_FB_SAVAGE=M
+CONFIG_LIBERTAS=M
+CONFIG_USB_GSPCA_TV8532=M
+CONFIG_DRM_VMWGFX=M
+CONFIG_JFFS2_FS=M
+CONFIG_STE10XP=M
+CONFIG_VIDEO_OUTPUT_CONTROL=M
+CONFIG_CASSINI=M
+CONFIG_USB_WHCI_HCD=M
+CONFIG_SCSI_DH_ALUA=M
+CONFIG_LIBFCOE=M
+CONFIG_RPCSEC_GSS_KRB5=M
+CONFIG_VIDEOBUF_VMALLOC=M
+CONFIG_MTD_CFI_UTIL=M
+CONFIG_SND_LX6464ES=M
+CONFIG_SENSORS_PCF8591=M
+CONFIG_DVB_STV0299=M
+CONFIG_ACER_WMI=M
+CONFIG_RAMOOPS=M
+CONFIG_NETFILTER_XT_MATCH_STRING=M
+CONFIG_MEDIA_TUNER_MAX2165=M
+CONFIG_MDIO=M
+CONFIG_N_HDLC=M
+CONFIG_MTD_CFI_INTELEXT=M
+CONFIG_ATM_LANAI=M
+CONFIG_LLC2=M
+CONFIG_IR_WINBOND_CIR=M
+CONFIG_SND_OXYGEN_LIB=M
+CONFIG_SND_SB8=M
+CONFIG_DLM=M
+CONFIG_NI65=M
+CONFIG_EEEPC_LAPTOP=M
+CONFIG_PHONE_IXJ_PCMCIA=M
+CONFIG_USB_STORAGE=M
+CONFIG_HMC6352=M
+CONFIG_DVB_USB_PCTV452E=M
+CONFIG_DVB_VES1820=M
+CONFIG_BAYCOM_SER_HDX=M
+CONFIG_CRYPTO_SEED=M
+CONFIG_DELL_RBU=M
+CONFIG_BATTERY_DS2782=M
+CONFIG_CPU_FREQ_GOV_PERFORMANCE=Y
+CONFIG_IR_LIRC_CODEC=M
+CONFIG_SATA_MV=M
+CONFIG_AGP_AMD64=Y
+CONFIG_R8187SE=M
+CONFIG_SPEAKUP_SYNTH_KEYPC=M
+CONFIG_DVB_TUNER_DIB0090=M
+CONFIG_SND_USB_AUDIO=M
+CONFIG_ARCNET_CAP=M
+CONFIG_VIDEO_CX231XX=M
+CONFIG_SPEAKUP_SYNTH_TXPRT=M
+CONFIG_TCP_CONG_YEAH=M
+CONFIG_IEEE802154=M
+CONFIG_XO15_EBOOK=M
+CONFIG_SCSI_QLA_FC=M
+CONFIG_TELCLOCK=M
+CONFIG_COMEDI_UNIOXX5=M
+CONFIG_IP_VS_LC=M
+CONFIG_HID_APPLE=M
+CONFIG_MEDIA_TUNER_TDA827X=M
+CONFIG_VMXNET3=M
+CONFIG_SND_RAWMIDI_SEQ=M
+CONFIG_IP_NF_ARP_MANGLE=M
+CONFIG_USB_WUSB=M
+CONFIG_DVB_USB=M
+CONFIG_SENSORS_G760A=M
+CONFIG_RDS=M
+CONFIG_DVB_ATBM8830=M
+CONFIG_PATA_EFAR=M
+CONFIG_VIRTIO_RING=M
+CONFIG_SMCTR=M
+CONFIG_ATL2=M
+CONFIG_NF_CONNTRACK_PPTP=M
+CONFIG_VIDEO_CX231XX_ALSA=M
+CONFIG_HFSPLUS_FS=M
+CONFIG_SENSORS_ADM9240=M
+CONFIG_SND_USB_UA101=M
+CONFIG_SCSI_AIC7XXX=M
+CONFIG_HPLAN_PLUS=M
+CONFIG_USB_SL811_HCD=M
+CONFIG_OCFS2_FS_O2CB=M
+CONFIG_CRYPTO_CAST6=M
+CONFIG_NET_EMATCH_META=M
+CONFIG_COMEDI_PCL725=M
+CONFIG_KS8842=M
+CONFIG_I2C_DIOLAN_U2C=M
+CONFIG_PPS=M
+CONFIG_USB_LCD=M
+CONFIG_SENSORS_DS620=M
+CONFIG_WL12XX_MENU=M
+CONFIG_BMP085=M
+CONFIG_X86_SPEEDSTEP_CENTRINO=M
+CONFIG_NF_CONNTRACK_IRC=M
+CONFIG_PATA_NS87410=M
+CONFIG_PCMCIA_SPECTRUM=M
+CONFIG_L2TP_IP=M
+CONFIG_MTD_REDBOOT_PARTS=M
+CONFIG_USB_STV06XX=M
+CONFIG_PPP_DEFLATE=M
+CONFIG_PCMCIA_NINJA_SCSI=M
+CONFIG_TEXTSEARCH_KMP=M
+CONFIG_RTS5139=M
+CONFIG_SND_MAESTRO3=M
+CONFIG_W1_SLAVE_SMEM=M
+CONFIG_USB_NET_NET1080=M
+CONFIG_SENSORS_F71805F=M
+CONFIG_NETFILTER_XT_TARGET_CLASSIFY=M
+CONFIG_MISDN_IPAC=M
+CONFIG_PARIDE_KTTI=M
+CONFIG_EDAC_E752X=M
+CONFIG_MSPRO_BLOCK=M
+CONFIG_DVB_TUNER_ITD1000=M
+CONFIG_POWER_SUPPLY=M
+CONFIG_DM_PERSISTENT_DATA=M
+CONFIG_PATA_VIA=M
+CONFIG_DAVICOM_PHY=M
+CONFIG_I2C_PCA_PLATFORM=M
+CONFIG_NETFILTER_XT_TARGET_NFQUEUE=M
+CONFIG_USB_GSPCA_MR97310A=M
+CONFIG_DVB_HOPPER=M
+CONFIG_VIDEO_WM8775=M
+CONFIG_NLS=Y
+CONFIG_IP_SET_HASH_IPPORTNET=M
+CONFIG_COMEDI_PCL730=M
+CONFIG_PRISM2_USB=M
+CONFIG_ADM8211=M
+CONFIG_VIDEO_VIVI=M
+CONFIG_NETFILTER_XT_TARGET_SECMARK=M
+CONFIG_HID_MAGICMOUSE=M
+CONFIG_COMEDI_PCM3730=M
+CONFIG_SCx200_ACB=M
+CONFIG_DELL_LAPTOP=M
+CONFIG_PPPOE=M
+CONFIG_WL1251_SDIO=M
+CONFIG_SND_LAYLA24=M
+CONFIG_USB_GSPCA_SPCA508=M
+CONFIG_USB_LEGOTOWER=M
+CONFIG_MTD_DATAFLASH=M
+CONFIG_LIRC_SIR=M
+CONFIG_DVB_USB_DIBUSB_MC=M
+CONFIG_MTD_ALAUDA=M
+CONFIG_DVB_USB_VP702X=M
+CONFIG_NETFILTER_XT_MATCH_OWNER=M
+CONFIG_I2C_SIS5595=M
+CONFIG_IP_NF_TARGET_ECN=M
+CONFIG_SND_GINA24=M
+CONFIG_MD_FAULTY=M
+CONFIG_ATH9K=M
+CONFIG_AGP_EFFICEON=Y
+CONFIG_ARCNET_COM20020_CS=M
+CONFIG_COMEDI_CB_PCIDDA=M
+CONFIG_VIDEO_USBVISION=M
+CONFIG_FB_SYS_COPYAREA=Y
+CONFIG_SPI_BITBANG=M
+CONFIG_EWRK3=M
+CONFIG_USB_STORAGE_ALAUDA=M
+CONFIG_JOYSTICK_GRIP_MP=M
+CONFIG_IWLWIFI=M
+CONFIG_USB_COMMON=M
+CONFIG_SENSORS_ADM1031=M
+CONFIG_ARCNET_1051=M
+CONFIG_MEDIA_TUNER_TDA18271=M
+CONFIG_IP_SET_BITMAP_PORT=M
+CONFIG_IP6_NF_IPTABLES=M
+CONFIG_X86_PCC_CPUFREQ=M
+CONFIG_QFMT_V1=Y
+CONFIG_DVB_IX2505V=M
+CONFIG_TEKRAM_DONGLE=M
+CONFIG_ATM_HORIZON=M
+CONFIG_SND_SONICVIBES=M
+CONFIG_CPU_FREQ_GOV_USERSPACE=M
+CONFIG_SND_CA0106=M
+CONFIG_ISDN_DIVAS_MAINT=M
+CONFIG_COMEDI_FL512=M
+CONFIG_USB_SERIAL_IPW=M
+CONFIG_I2C_PIIX4=M
+CONFIG_EDAC_I7300=M
+CONFIG_SND_OPTI92X_AD1848=M
+CONFIG_ARCNET_COM20020_PCI=M
+CONFIG_PCIEAER_INJECT=M
+CONFIG_INET_IPCOMP=M
+CONFIG_SENSORS_FSCHMD=M
+CONFIG_DVB_USB_DIB0700=M
+CONFIG_TOUCHSCREEN_FUJITSU=M
+CONFIG_MCP2120_DONGLE=M
+CONFIG_PCMCIA=M
+CONFIG_XEN_BLKDEV_BACKEND=M
+CONFIG_BT_HCIBLUECARD=M
+CONFIG_SND_ENS1370=M
+CONFIG_ASYNC_PQ=M
+CONFIG_HID_KEYTOUCH=M
+CONFIG_HID_CYPRESS=M
+CONFIG_N_GSM=M
+CONFIG_BRIDGE_EBT_LIMIT=M
+CONFIG_DRM_KMS_HELPER=M
+CONFIG_SCSI_U14_34F=M
+CONFIG_COSA=M
+CONFIG_OCFS2_FS_USERSPACE_CLUSTER=M
+CONFIG_HYSDN=M
+CONFIG_COMEDI_ADL_PCI9111=M
+CONFIG_ATA_OVER_ETH=M
+CONFIG_USB_NET_PLUSB=M
+CONFIG_VIDEO_SAA711X=M
+CONFIG_RTL8192C_COMMON=M
+CONFIG_DVB_BUDGET_CORE=M
+CONFIG_NLS_ISO8859_1=M
+CONFIG_MFD_WM8400=M
+CONFIG_MTD_INTEL_VR_NOR=M
+CONFIG_CRYPTO_WORKQUEUE=Y
+CONFIG_NFC=M
+CONFIG_R8169=M
+CONFIG_SENSORS_BH1780=M
+CONFIG_TCP_CONG_HYBLA=M
+CONFIG_PCI_STUB=M
+CONFIG_HID_KENSINGTON=M
+CONFIG_AGP_ALI=Y
+CONFIG_USB_EHCI_HCD=M
+CONFIG_BATTERY_DS2760=M
+CONFIG_CPU_FREQ_TABLE=Y
+CONFIG_TEXTSEARCH_BM=M
+CONFIG_8139TOO=M
+CONFIG_SND_PDAUDIOCF=M
+CONFIG_HID_ZYDACRON=M
+CONFIG_PPP_MPPE=M
+CONFIG_DE2104X=M
+CONFIG_SND_PCM_OSS=M
+CONFIG_DVB_B2C2_FLEXCOP=M
+CONFIG_HOTPLUG_PCI_ACPI=Y
+CONFIG_USB_IRDA=M
+CONFIG_RFKILL=M
+CONFIG_VIDEO_TVP5150=M
+CONFIG_NET_KEY=M
+CONFIG_SMS_SIANO_MDTV=M
+CONFIG_IP6_NF_TARGET_HL=M
+CONFIG_IOSCHED_DEADLINE=Y
+CONFIG_DLCI=M
+CONFIG_SND_OPL3_LIB_SEQ=M
+CONFIG_CRYPTO_DEV_PADLOCK_SHA=M
+CONFIG_PARIDE_PD=M
+CONFIG_RTL8192CE=M
+CONFIG_IPV6_SIT=M
+CONFIG_SENSORS_K8TEMP=M
+CONFIG_COMEDI_DAS16=M
+CONFIG_IP_SET_HASH_IP=M
+CONFIG_USB_MR800=M
+CONFIG_AIRO=M
+CONFIG_MTD_NETtel=M
+CONFIG_MFD_VX855=M
+CONFIG_USB_SERIAL_WHITEHEAT=M
+CONFIG_NET_CLS_ROUTE4=M
+CONFIG_PCMCIA_FMVJ18X=M
+CONFIG_IP_SET_HASH_NETPORT=M
+CONFIG_TCG_INFINEON=M
+CONFIG_ULTRA=M
+CONFIG_ATH9K_HTC=M
+CONFIG_TOSHIBA_FIR=M
+CONFIG_IP_VS_DH=M
+CONFIG_SCSI_NCR53C406A=M
+CONFIG_SND_AZT2320=M
+CONFIG_EL1=M
+CONFIG_IP_NF_TARGET_MASQUERADE=M
+CONFIG_ARCNET_COM20020=M
+CONFIG_NF_CONNTRACK_BROADCAST=M
+CONFIG_ECRYPT_FS=M
+CONFIG_IR_RC5_SZ_DECODER=M
+CONFIG_GAMEPORT_FM801=M
+CONFIG_KS959_DONGLE=M
+CONFIG_JOYSTICK_MAGELLAN=M
+CONFIG_FTL=M
+CONFIG_IPMI_DEVICE_INTERFACE=M
+CONFIG_KINGSUN_DONGLE=M
+CONFIG_NF_NAT_PROTO_DCCP=M
+CONFIG_SENSORS_ADM1021=M
+CONFIG_C2PORT=M
+CONFIG_DM_DELAY=M
+CONFIG_USB_SERIAL_CH341=M
+CONFIG_USB_FTDI_ELAN=M
+CONFIG_COMEDI_ADDI_APCI_1564=M
+CONFIG_DVB_USB_FRIIO=M
+CONFIG_IP_SET_HASH_IPPORT=M
+CONFIG_SENSORS_SHT21=M
+CONFIG_USB_IOWARRIOR=M
+CONFIG_SND_HDSP=M
+CONFIG_SERIO_CT82C710=M
+CONFIG_USBPCWATCHDOG=M
+CONFIG_WIMAX_I2400M_USB=M
+CONFIG_SND_USB_USX2Y=M
+CONFIG_SCSI_SPI_ATTRS=M
+CONFIG_FB_CYBER2000=M
+CONFIG_SCSI_HPSA=M
+CONFIG_SPEAKUP_SYNTH_ACNTSA=M
+CONFIG_SND_KORG1212=M
+CONFIG_SENSORS_VIA_CPUTEMP=M
+CONFIG_ISDN_DRV_GIGASET=M
+CONFIG_CHELSIO_T3=M
+CONFIG_CRYPTO_SHA512=M
+CONFIG_PHONET=M
+CONFIG_MWIFIEX_PCIE=M
+CONFIG_SCSI_WAIT_SCAN=M
+CONFIG_DRM_MGA=M
+CONFIG_BACKLIGHT_CLASS_DEVICE=Y
+CONFIG_USB_M5602=M
+CONFIG_RT2X00_LIB_USB=M
+CONFIG_CRYPTO_NULL=M
+CONFIG_DVB_USB_AF9005_REMOTE=M
+CONFIG_NF_DEFRAG_IPV4=M
+CONFIG_SERIAL_8250_EXAR_ST16C554=M
+CONFIG_USB_IDMOUSE=M
+CONFIG_MISDN_INFINEON=M
+CONFIG_INET_XFRM_MODE_BEET=M
+CONFIG_HID_LCPOWER=M
+CONFIG_VIRTIO_CONSOLE=M
+CONFIG_BFS_FS=M
+CONFIG_SND_ES1938=M
+CONFIG_DVB_BUDGET_AV=M
+CONFIG_CRYPTO_DEFLATE=M
+CONFIG_USB_APPLEDISPLAY=M
+CONFIG_USB_SERIAL_KLSI=M
+CONFIG_NETFILTER_XT_MATCH_TCPMSS=M
+CONFIG_IGB=M
+CONFIG_MTD_CFI=M
+CONFIG_BT_HCIBTSDIO=M
+CONFIG_AGP_NVIDIA=Y
+CONFIG_SND_VX_LIB=M
+CONFIG_ATM_MPOA=M
+CONFIG_ROCKETPORT=M
+CONFIG_CRYPTO_GCM=M
+CONFIG_SND_INDIGOIO=M
+CONFIG_NE2K_PCI=M
+CONFIG_MOUSE_SYNAPTICS_USB=M
+CONFIG_NET_SCTPPROBE=M
+CONFIG_NETFILTER_NETLINK_LOG=M
+CONFIG_NLS_ISO8859_14=M
+CONFIG_APRICOT=M
+CONFIG_MTD_PHRAM=M
+CONFIG_E100=M
+CONFIG_PARPORT_SERIAL=M
+CONFIG_COMEDI_CB_PCIDIO=M
+CONFIG_PNFS_BLOCK=M
+CONFIG_MACHZ_WDT=M
+CONFIG_NETFILTER_XT_MATCH_MARK=M
+CONFIG_FB_MATROX=M
+CONFIG_GPIO_CS5535=M
+CONFIG_COMEDI_AMPLC_PC236=M
+CONFIG_DVB_LGS8GXX=M
+CONFIG_NETFILTER_XT_TARGET_TCPOPTSTRIP=M
+CONFIG_SSFDC=M
+CONFIG_IP_NF_MANGLE=M
+CONFIG_TIFM_7XX1=M
+CONFIG_COMEDI_CB_DAS16_CS=M
+CONFIG_RTC_DRV_DS1286=M
+CONFIG_FCOE_FNIC=M
+CONFIG_TOUCHSCREEN_MCS5000=M
+CONFIG_DVB_VES1X93=M
+CONFIG_MFD_CS5535=M
+CONFIG_COMEDI_NI_PCIDIO=M
+CONFIG_INET6_XFRM_MODE_TUNNEL=M
+CONFIG_BRIDGE_EBT_VLAN=M
+CONFIG_MEDIA_SUPPORT=M
+CONFIG_SENSORS_F75375S=M
+CONFIG_TC1100_WMI=M
+CONFIG_IP_NF_FILTER=M
+CONFIG_HID_ZEROPLUS=M
+CONFIG_SATA_SX4=M
+CONFIG_EXT3_FS=M
+CONFIG_IBM_ASM=M
+CONFIG_NETFILTER_XT_MATCH_LENGTH=M
+CONFIG_BRIDGE_EBT_PKTTYPE=M
+CONFIG_FAT_FS=M
+CONFIG_FCOE=M
+CONFIG_CAN_SJA1000=M
+CONFIG_SND_HDA_INTEL=M
+CONFIG_TEXTSEARCH_FSM=M
+CONFIG_MISDN_DSP=M
+CONFIG_SENSORS_LM75=M
+CONFIG_DTLK=M
+CONFIG_INFINIBAND_CXGB4=M
+CONFIG_LSI_ET1011C_PHY=M
+CONFIG_IP6_NF_RAW=M
+CONFIG_SPEAKUP_SYNTH_SOFT=M
+CONFIG_DVB_USB_EC168=M
+CONFIG_USB_ZD1201=M
+CONFIG_RTC_DRV_DS1742=M
+CONFIG_INET_TUNNEL=M
+CONFIG_CRYPTO_DEV_PADLOCK=M
+CONFIG_NETFILTER_XT_TARGET_NOTRACK=M
+CONFIG_EEPROM_93CX6=M
+CONFIG_NET_9P_VIRTIO=M
+CONFIG_MLX4_CORE=M
+CONFIG_SND_MIA=M
+CONFIG_ROMFS_FS=M
+CONFIG_IOSCHED_CFQ=Y
+CONFIG_DVB_USB_DTT200U=M
+CONFIG_PARIDE_EPIA=M
+CONFIG_LIB80211=M
+CONFIG_SCC=M
+CONFIG_MFD_CORE=M
+CONFIG_USB_CXACRU=M
+CONFIG_RAID_ATTRS=M
+CONFIG_PATA_CMD64X=M
+CONFIG_MTD_CFI_STAA=M
+CONFIG_PHONE=M
+CONFIG_RAID6_PQ=M
+CONFIG_SBC_FITPC2_WATCHDOG=M
+CONFIG_HW_RANDOM_TIMERIOMEM=M
+CONFIG_NET_IPGRE=M
+CONFIG_LIBERTAS_SDIO=M
+CONFIG_BRIDGE_EBT_IP6=M
+CONFIG_SND_AZT1605=M
+CONFIG_NF_NAT_SNMP_BASIC=M
+CONFIG_SND_ICE1712=M
+CONFIG_LIBERTAS_SPI=M
+CONFIG_SCSI_ACARD=M
+CONFIG_LEDS_TRIGGER_BACKLIGHT=M
+CONFIG_USB_OHCI_HCD=M
+CONFIG_VIA_RHINE=M
+CONFIG_USB_GSPCA=M
+CONFIG_DM_MIRROR=M
+CONFIG_CRYPTO_BLOWFISH=M
+CONFIG_FB_SIS=M
+CONFIG_X86_LONGRUN=M
+CONFIG_SCSI_GDTH=M
+CONFIG_NLS_ASCII=M
+CONFIG_B43=M
+CONFIG_JOYSTICK_GRIP=M
+CONFIG_BAYCOM_SER_FDX=M
+CONFIG_RTC_DRV_M41T94=M
+CONFIG_IP1000=M
+CONFIG_USB_RIO500=M
+CONFIG_SATA_SVW=M
+CONFIG_SND_CS5530=M
+CONFIG_MTD_PHYSMAP=M
+CONFIG_INFTL=M
+CONFIG_GAMEPORT_L4=M
+CONFIG_SENSORS_ADT7462=M
+CONFIG_PARIDE_FRIQ=M
+CONFIG_CAN_MCP251X=M
+CONFIG_CRYPTO_CCM=M
+CONFIG_NET_CLS_RSVP6=M
+CONFIG_USB_NET_CDC_SUBSET=M
+CONFIG_SND_WSS_LIB=M
+CONFIG_QFMT_V2=M
+CONFIG_USB_S2255=M
+CONFIG_INET_DCCP_DIAG=M
+CONFIG_ARCNET_COM90xxIO=M
+CONFIG_NETFILTER_XT_MATCH_CONNMARK=M
+CONFIG_ATH9K_HW=M
+CONFIG_BLK_CGROUP=Y
+CONFIG_USB_SERIAL_MCT_U232=M
+CONFIG_UIO_PDRV_GENIRQ=M
+CONFIG_PATA_ISAPNP=M
+CONFIG_BT_HCIBT3C=M
+CONFIG_CRYPTO_RNG=M
+CONFIG_USB_SERIAL_GARMIN=M
+CONFIG_RAW_DRIVER=M
+CONFIG_COMEDI_ISA_DRIVERS=M
+CONFIG_JOYSTICK_COBRA=M
+CONFIG_NET_SCH_ATM=M
+CONFIG_WINBOND_840=M
+CONFIG_SCSI_3W_9XXX=M
+CONFIG_VIDEOBUF2_MEMOPS=M
+CONFIG_SENSORS_LTC4261=M
+CONFIG_MMC_SDRICOH_CS=M
+CONFIG_MISDN_W6692=M
+CONFIG_USB_SERIAL_KEYSPAN=M
+CONFIG_LIRC_BT829=M
+CONFIG_LEDS_DELL_NETBOOKS=M
+CONFIG_MTD_DOC2000=M
+CONFIG_SND_USB_CAIAQ=M
+CONFIG_USB_STORAGE_CYPRESS_ATACB=M
+CONFIG_SPEAKUP_SYNTH_DUMMY=M
+CONFIG_SCSI_MVUMI=M
+CONFIG_CS5535_MFGPT=M
+CONFIG_BEFS_FS=M
+CONFIG_SND_ALI5451=M
+CONFIG_INFINIBAND_USER_MAD=M
+CONFIG_HID_ROCCAT=M
+CONFIG_F71808E_WDT=M
+CONFIG_INET_XFRM_MODE_TRANSPORT=M
+CONFIG_CRYPTO_MD5=Y
+CONFIG_VIDEO_CS53L32A=M
+CONFIG_IR_REDRAT3=M
+CONFIG_USB_GSPCA_VICAM=M
+CONFIG_PCMCIA_HERMES=M
+CONFIG_PATA_CS5530=M
+CONFIG_ISCSI_TCP=M
+CONFIG_PATA_ALI=M
+CONFIG_MFD_WL1273_CORE=M
+CONFIG_SND_ECHO3G=M
+CONFIG_COMEDI_ADL_PCI7432=M
+CONFIG_ACPI_PROCESSOR=M
+CONFIG_DVB_TDA10023=M
+CONFIG_MEDIA_TUNER_TEA5767=M
+CONFIG_BATMAN_ADV=M
+CONFIG_CS89x0=M
+CONFIG_ISDN_DRV_AVMB1_AVM_CS=M
+CONFIG_VIDEOBUF_DVB=M
+CONFIG_COMEDI_PCMDA12=M
+CONFIG_PCCARD=M
+CONFIG_USB_GSPCA_OV519=M
+CONFIG_USB_SERIAL_VIVOPAY_SERIAL=M
+CONFIG_PARIDE_PG=M
+CONFIG_MD_RAID456=M
+CONFIG_REGULATOR_PCF50633=M
+CONFIG_DSCC4=M
+CONFIG_CICADA_PHY=M
+CONFIG_JOYSTICK_STINGER=M
+CONFIG_INET6_AH=M
+CONFIG_TARGET_CORE=M
+CONFIG_VLSI_FIR=M
+CONFIG_USB_SERIAL=M
+CONFIG_SENSORS_GL518SM=M
+CONFIG_USB_MON=M
+CONFIG_COMEDI_CB_PCIMDAS=M
+CONFIG_VGASTATE=M
+CONFIG_REGULATOR_FIXED_VOLTAGE=M
+CONFIG_SIGMATEL_FIR=M
+CONFIG_IP_NF_TARGET_ULOG=M
+CONFIG_REGULATOR_TPS6507X=M
+CONFIG_BE2ISCSI=M
+CONFIG_INET_XFRM_TUNNEL=M
+CONFIG_RTC_DRV_FM3130=M
+CONFIG_IPMI_POWEROFF=M
+CONFIG_NETFILTER_XT_MARK=M
+CONFIG_NETFILTER_XTABLES=M
+CONFIG_IP_VS_LBLC=M
+CONFIG_DVB_USB_OPERA1=M
+CONFIG_LEDS_BD2802=M
+CONFIG_KEYBOARD_STOWAWAY=M
+CONFIG_ATM_HE=M
+CONFIG_IPMI_SI=M
+CONFIG_USB_STORAGE_DATAFAB=M
+CONFIG_DVB_USB_AF9005=M
+CONFIG_TCP_CONG_VEGAS=M
+CONFIG_MTD_SCx200_DOCFLASH=M
+CONFIG_CRYPTO_USER_API_HASH=M
+CONFIG_SENSORS_IBMPEX=M
+CONFIG_SENSORS_ADM1026=M
+CONFIG_PATA_NINJA32=M
+CONFIG_SENSORS_ADT7470=M
+CONFIG_FB_PM3=M
+CONFIG_SCSI_PAS16=M
+CONFIG_USB_EG20T=M
+CONFIG_USB_STORAGE_KARMA=M
+CONFIG_TTPCI_EEPROM=M
+CONFIG_TEHUTI=M
+CONFIG_SIS900=M
+CONFIG_MEGARAID_LEGACY=M
+CONFIG_SND_SB16=M
+CONFIG_HID_GREENASIA=M
+CONFIG_ORINOCO_USB=M
+CONFIG_SMS_USB_DRV=M
+CONFIG_ACPI_AC=M
+CONFIG_USB_SERIAL_OPTICON=M
+CONFIG_RTL8180=M
+CONFIG_DVB_NXT200X=M
+CONFIG_SENSORS_LM87=M
+CONFIG_NET_ACT_GACT=M
+CONFIG_HID_GYRATION=M
+CONFIG_USB_WDM=M
+CONFIG_PATA_TOSHIBA=M
+CONFIG_BT_HCIBCM203X=M
+CONFIG_REGULATOR_WM8400=M
+CONFIG_TOUCHSCREEN_USB_COMPOSITE=M
+CONFIG_MTD_NAND_CS553X=M
+CONFIG_VIDEO_EM28XX_DVB=M
+CONFIG_USB_SERIAL_KOBIL_SCT=M
+CONFIG_HDLC_FR=M
+CONFIG_DE620=M
+CONFIG_INPUT_JOYDEV=M
+CONFIG_FB_MATROX_MAVEN=M
+CONFIG_EDAC_AMD76X=M
+CONFIG_KEYBOARD_LKKBD=M
+CONFIG_NETFILTER_XT_TARGET_TPROXY=M
+CONFIG_IP_DCCP=M
+CONFIG_LIBIPW=M
+CONFIG_FIREWIRE_OHCI=M
+CONFIG_AC3200=M
+CONFIG_USB_ACM=M
+CONFIG_X86_GX_SUSPMOD=M
+CONFIG_COMEDI_ADL_PCI9118=M
+CONFIG_USB_RTL8150=M
+CONFIG_CRC16=M
+CONFIG_USB_NET_AX8817X=M
+CONFIG_SND_EMU10K1=M
+CONFIG_CRYPTO_GF128MUL=M
+CONFIG_NLS_ISO8859_6=M
+CONFIG_ISDN_DRV_AVMB1_B1ISA=M
+CONFIG_COMEDI_S626=M
+CONFIG_SND_INDIGO=M
+CONFIG_UIO_PDRV=M
+CONFIG_AX25=M
+CONFIG_SND_YMFPCI=M
+CONFIG_X86_POWERNOW_K7=M
+CONFIG_HOSTAP=M
+CONFIG_SND_CS5535AUDIO=M
+CONFIG_VIDEO_EM28XX=M
+CONFIG_NLS_CODEPAGE_936=M
+CONFIG_HAMACHI=M
+CONFIG_SCSI_AHA1542=M
+CONFIG_ET131X=M
+CONFIG_IR_ITE_CIR=M
+CONFIG_DVB_BUDGET=M
+CONFIG_CRYPTO_ANUBIS=M
+CONFIG_COMEDI_NI_AT_A2150=M
+CONFIG_VIRTIO_PCI=M
+CONFIG_GPIO_PCH=M
+CONFIG_MISDN_HFCMULTI=M
+CONFIG_MWAVE=M
+CONFIG_PCMCIA_3C574=M
+CONFIG_USB_GSPCA_SQ930X=M
+CONFIG_RTL8192SE=M
+CONFIG_JOYSTICK_SPACEBALL=M
+CONFIG_REGMAP_I2C=M
+CONFIG_USB_SERIAL_ZIO=M
+CONFIG_DVB_DM1105=M
+CONFIG_NETFILTER_XT_TARGET_HL=M
+CONFIG_MEGARAID_SAS=M
+CONFIG_DVB_CORE=M
+CONFIG_COMEDI_ME_DAQ=M
+CONFIG_ISL29003=M
+CONFIG_CRYPTO_USER_API=M
+CONFIG_I2C_OCORES=M
+CONFIG_MTD_SM_COMMON=M
+CONFIG_TOUCHSCREEN_GUNZE=M
+CONFIG_SENSORS_LM78=M
+CONFIG_SCSI_ULTRASTOR=M
+CONFIG_SENSORS_K10TEMP=M
+CONFIG_USB_HID=M
+CONFIG_DVB_USB_AF9015=M
+CONFIG_UBIFS_FS=M
+CONFIG_PARIDE_PT=M
+CONFIG_RTL8192CU=M
+CONFIG_AGP_AMD=Y
+CONFIG_CRYPTO_TGR192=M
+CONFIG_BLK_DEV_RBD=M
+CONFIG_MEGARAID_MAILBOX=M
+CONFIG_LANMEDIA=M
+CONFIG_IT8712F_WDT=M
+CONFIG_ARCNET_COM20020_ISA=M
+CONFIG_COMEDI_NI_670X=M
+CONFIG_BLK_DEV_MD=M
+CONFIG_MMC_VUB300=M
+CONFIG_USB_SERIAL_AIRCABLE=M
+CONFIG_IP_SET_BITMAP_IP=M
+CONFIG_RTS_PSTOR=M
+CONFIG_MTD_ONENAND_SIM=M
+CONFIG_GPIO_VX855=M
+CONFIG_DECNET_NF_GRABULATOR=M
+CONFIG_MTD_SBC_GXX=M
+CONFIG_NET_SCH_INGRESS=M
+CONFIG_BCMA=M
+CONFIG_XENFS=M
+CONFIG_SCSI_AACRAID=M
+CONFIG_MISDN_HFCUSB=M
+CONFIG_HFS_FS=M
+CONFIG_RTC_DRV_MSM6242=M
+CONFIG_DVB_USB_TECHNISAT_USB2=M
+CONFIG_CRYPTO_ZLIB=M
+CONFIG_NLS_CODEPAGE_1251=M
+CONFIG_EDAC_X38=M
+CONFIG_SPI_BUTTERFLY=M
+CONFIG_USB_SERIAL_FUNSOFT=M
+CONFIG_SP5100_TCO=M
+CONFIG_SATA_SIL=M
+CONFIG_COMEDI_NI_LABPC_CS=M
+CONFIG_HOSTAP_PLX=M
+CONFIG_CRYPTO_PCOMP2=Y
+CONFIG_JOYSTICK_INTERACT=M
+CONFIG_COMEDI_DT282X=M
+CONFIG_DVB_TDA10071=M
+CONFIG_HDLC_CISCO=M
+CONFIG_MLX4_INFINIBAND=M
+CONFIG_RT2X00=M
+CONFIG_NLS_CODEPAGE_863=M
+CONFIG_WDT=M
+CONFIG_NF_CONNTRACK_FTP=M
+CONFIG_DRM_SAVAGE=M
+CONFIG_CHELSIO_T4=M
+CONFIG_IP_NF_MATCH_ECN=M
+CONFIG_USB_GADGET=M
+CONFIG_REGULATOR_MAX8660=M
+CONFIG_EEPROM_LEGACY=M
+CONFIG_INFINIBAND_NES=M
+CONFIG_USB_GSPCA_SPCA506=M
+CONFIG_PATA_ARTOP=M
+CONFIG_KEYBOARD_NEWTON=M
+CONFIG_VIDEO_EM28XX_ALSA=M
+CONFIG_MEDIA_TUNER_MXL5005S=M
+CONFIG_INFINIBAND_IPOIB=M
+CONFIG_SENSORS_APDS990X=M
+CONFIG_DVB_SI21XX=M
+CONFIG_SCSI_IN2000=M
+CONFIG_SOUND=M
+CONFIG_COMEDI_RTI802=M
+CONFIG_SND_SIS7019=M
+CONFIG_DVB_USB_VP7045=M
+CONFIG_BNX2X=M
+CONFIG_MEDIA_TUNER_TDA9887=M
+CONFIG_ADVANTECH_WDT=M
+CONFIG_CRYPTO_TEA=M
+CONFIG_SND_INTERWAVE=M
+CONFIG_DVB_USB_LME2510=M
+CONFIG_PDC_ADMA=M
+CONFIG_SND_VXPOCKET=M
+CONFIG_UNIX=Y
+CONFIG_USB_CATC=M
+CONFIG_SND_OPTI93X=M
+CONFIG_SCSI_SRP=M
+CONFIG_VIDEO_TLG2300=M
+CONFIG_MINIX_FS=M
+CONFIG_BRCMSMAC=M
+CONFIG_XEN_DEV_EVTCHN=M
+CONFIG_CRYPTO_HASH2=Y
+CONFIG_CARL9170=M
+CONFIG_SND_RME9652=M
+CONFIG_MTD_ABSENT=M
+CONFIG_COMEDI_ADDI_APCI_035=M
+CONFIG_X86_CPUFREQ_NFORCE2=M
+CONFIG_NLS_KOI8_R=M
+CONFIG_EL16=M
+CONFIG_USB_GSPCA_SONIXB=M
+CONFIG_CARDMAN_4040=M
+CONFIG_USB_STORAGE_ISD200=M
+CONFIG_CPU_FREQ_GOV_POWERSAVE=M
+CONFIG_USB_GSPCA_OV534_9=M
+CONFIG_NFS_FS=M
+CONFIG_MTD_SC520CDP=M
+CONFIG_USB_NET_SMSC95XX=M
+CONFIG_C101=M
+CONFIG_NET_ACT_SKBEDIT=M
+CONFIG_COMEDI_ADV_PCI1723=M
+CONFIG_INET_ESP=M
+CONFIG_NF_CONNTRACK_IPV6=M
+CONFIG_CRYPTO_ALGAPI=Y
+CONFIG_FDDI=Y
+CONFIG_SENSORS_VT8231=M
+CONFIG_DVB_BUDGET_CI=M
+CONFIG_PARIDE_FIT3=M
+CONFIG_COMEDI_KE_COUNTER=M
+CONFIG_EDAC_I3200=M
+CONFIG_SCSI_DMX3191D=M
+CONFIG_BRIDGE=M
+CONFIG_MEDIA_TUNER=M
+CONFIG_TABLET_USB_GTCO=M
+CONFIG_USB_CYPRESS_CY7C63=M
+CONFIG_EEPROM_AT25=M
+CONFIG_INPUT_UINPUT=M
+CONFIG_NETFILTER_XT_TARGET_CHECKSUM=M
+CONFIG_TCG_ATMEL=M
+CONFIG_DVB_MB86A16=M
+CONFIG_MEDIA_TUNER_SIMPLE=M
+CONFIG_SND_OXYGEN=M
+CONFIG_SERIAL_8250_BOCA=M
+CONFIG_PCH_GBE=M
+CONFIG_KEYBOARD_ATKBD=Y
+CONFIG_SCSI_QLA_ISCSI=M
+CONFIG_AT1700=M
+CONFIG_WANXL=M
+CONFIG_NF_NAT=M
+CONFIG_W83877F_WDT=M
+CONFIG_WAFER_WDT=M
+CONFIG_USB_U132_HCD=M
+CONFIG_USB_SERIAL_XIRCOM=M
+CONFIG_DVB_USB_AZ6027=M
+CONFIG_MOUSE_BCM5974=M
+CONFIG_CHR_DEV_SCH=M
+CONFIG_RT2800USB=M
+CONFIG_CRYPTO_HASH=Y
+CONFIG_INFINIBAND_AMSO1100=M
+CONFIG_PATA_IT8213=M
+CONFIG_SND_CMIPCI=M
+CONFIG_ACPI_WMI=M
+CONFIG_NLS_CODEPAGE_857=M
+CONFIG_NETFILTER_XT_TARGET_DSCP=M
+CONFIG_SND_EMU10K1X=M
+CONFIG_TCG_TPM=M
+CONFIG_XEN_PCIDEV_BACKEND=M
+CONFIG_ACPI_VIDEO=M
+CONFIG_VFAT_FS=M
+CONFIG_EDAC_I5000=M
+CONFIG_MD_RAID1=M
+CONFIG_COMEDI_ADDI_APCI_2200=M
+CONFIG_CRYPTO_VMAC=M
+CONFIG_SENSORS_ACPI_POWER=M
+CONFIG_ACPI_CMPC=M
+CONFIG_RADIO_TEF6862=M
+CONFIG_FB_DDC=M
+CONFIG_COMEDI_DAS08=M
+CONFIG_SCSI_MPT2SAS=M
+CONFIG_UWB_WHCI=M
+CONFIG_VIDEO_HDPVR=M
+CONFIG_OLD_BELKIN_DONGLE=M
+CONFIG_NET_SB1000=M
+CONFIG_BLK_DEV_SR=M
+CONFIG_SND_HWDEP=M
+CONFIG_GIGASET_M101=M
+CONFIG_SND_LAYLA20=M
+CONFIG_BLK_DEV_LOOP=M
+CONFIG_IPMI_HANDLER=M
+CONFIG_B44=M
+CONFIG_SYSV_FS=M
+CONFIG_ATMEL=M
+CONFIG_SENSORS_THMC50=M
+CONFIG_ATM_AMBASSADOR=M
+CONFIG_L2TP_ETH=M
+CONFIG_PATA_ATIIXP=M
+CONFIG_I8K=M
+CONFIG_SCSI_QLOGIC_1280=M
+CONFIG_HYPERV_UTILS=M
+CONFIG_SYNCLINK_GT=M
+CONFIG_NF_NAT_IRC=M
+CONFIG_SND_SBAWE=M
+CONFIG_60XX_WDT=M
+CONFIG_GEODE_WDT=M
+CONFIG_MEDIA_TUNER_XC2028=M
+CONFIG_IR_NUVOTON=M
+CONFIG_SENSORS_SCH5627=M
+CONFIG_I2C_AMD756=M
+CONFIG_E1000E=M
+CONFIG_DNET=M
+CONFIG_DVB_STV0288=M
+CONFIG_USB_SL811_CS=M
+CONFIG_SUNRPC_XPRT_RDMA=M
+CONFIG_SCx200_GPIO=M
+CONFIG_MTD_NAND_ECC=M
+CONFIG_CRYPTO_CBC=M
+CONFIG_SENSORS_LM93=M
+CONFIG_PARIDE_ON20=M
+CONFIG_BT_CMTP=M
+CONFIG_SMSC_SCH311X_WDT=M
+CONFIG_IP6_NF_MATCH_RT=M
+CONFIG_SCSI_IPR=M
+CONFIG_NS83820=M
+CONFIG_DRM_SIS=M
+CONFIG_FS_MBCACHE=M
+CONFIG_SND_MIRO=M
+CONFIG_MD_MULTIPATH=M
+CONFIG_DS1682=M
+CONFIG_GFS2_FS=M
+CONFIG_DVB_TUNER_DIB0070=M
+CONFIG_SEEQ8005=M
+CONFIG_CRC7=M
+CONFIG_SENSORS_LTC4215=M
+CONFIG_KVM_AMD=M
+CONFIG_NET_CLS_TCINDEX=M
+CONFIG_USB_EMI26=M
+CONFIG_CRYPTO_DEV_GEODE=M
+CONFIG_PCNET32=M
+CONFIG_SND_CS4231=M
+CONFIG_EDAC_I82975X=M
+CONFIG_PCMCIA_NMCLAN=M
+CONFIG_FB_UVESA=M
+CONFIG_TOUCHSCREEN_TSC2007=M
+CONFIG_SND_RME96=M
+CONFIG_DCA=M
+CONFIG_I2C_ALI1535=M
+CONFIG_I2C_I801=M
+CONFIG_BLK_DEV_UMEM=M
+CONFIG_MTD_NAND_CAFE=M
+CONFIG_W1=M
+CONFIG_LOGFS=M
+CONFIG_RT2800PCI=M
+CONFIG_USB_GSPCA_VC032X=M
+CONFIG_PCMCIA_RAYCS=M
+CONFIG_DVB_ISL6421=M
+CONFIG_RTC_DRV_DS1374=M
+CONFIG_RTC_DRV_BQ4802=M
+CONFIG_TMD_HERMES=M
+CONFIG_NLS_ISO8859_5=M
+CONFIG_IP_VS_WLC=M
+CONFIG_NF_NAT_TFTP=M
+CONFIG_NETFILTER_XT_MATCH_MULTIPORT=M
+CONFIG_NET_SCH_NETEM=M
+CONFIG_ACPI_PROCESSOR_AGGREGATOR=M
+CONFIG_USB_STORAGE_REALTEK=M
+CONFIG_WL12XX_SPI=M
+CONFIG_CS5535_CLOCK_EVENT_SRC=M
+CONFIG_I2C_PCA_ISA=M
+CONFIG_CRYPTO_CAMELLIA=M
+CONFIG_SND_EMU10K1_SEQ=M
+CONFIG_RTC_DRV_DS1307=M
+CONFIG_I2C_SIS630=M
+CONFIG_I2C_SI4713=M
+CONFIG_TCP_CONG_ILLINOIS=M
+CONFIG_CRYPTO_MANAGER2=Y
+CONFIG_BRIDGE_EBT_DNAT=M
+CONFIG_COMEDI_ACL7225B=M
+CONFIG_SENSORS_AD7418=M
+CONFIG_CONFIGFS_FS=M
+CONFIG_CRYPTO_TEST=M
+CONFIG_MTD_UBI=M
+CONFIG_SLIP=M
+CONFIG_SENSORS_FAM15H_POWER=M
+CONFIG_I2C=M
+CONFIG_COMPAL_LAPTOP=M
+CONFIG_PCMCIA_PCNET=M
+CONFIG_EDAC_DECODE_MCE=M
+CONFIG_SENSORS_VT1211=M
+CONFIG_MTD_ONENAND_GENERIC=M
+CONFIG_SATA_PROMISE=M
+CONFIG_VIDEO_CX25840=M
+CONFIG_I2C_AMD756_S4882=M
+CONFIG_PARPORT_PC=M
+CONFIG_EEXPRESS_PRO=M
+CONFIG_SCSI_SRP_ATTRS=M
+CONFIG_BT_HIDP=M
+CONFIG_PD6729=M
+CONFIG_KS8851_MLL=M
+CONFIG_X86_SPEEDSTEP_ICH=M
+CONFIG_COMEDI_DT2817=M
+CONFIG_SMC_IRCC_FIR=M
+CONFIG_SND_PCXHR=M
+CONFIG_UFS_FS=M
+CONFIG_ASUS_NB_WMI=M
+CONFIG_USB_GSPCA_FINEPIX=M
+CONFIG_SND_AD1816A=M
+CONFIG_CRYPTO_ECB=M
+CONFIG_USB_GSPCA_ETOMS=M
+CONFIG_FUJITSU_LAPTOP=M
+CONFIG_TCM_FILEIO=M
+CONFIG_NI52=M
+CONFIG_SCSI_STEX=M
+CONFIG_HOTPLUG_PCI_CPCI_ZT5550=M
+CONFIG_NF_CONNTRACK_AMANDA=M
+CONFIG_SND_ATIIXP_MODEM=M
+CONFIG_FEALNX=M
+CONFIG_NET_PKTGEN=M
+CONFIG_HP_WMI=M
+CONFIG_USB_SERIAL_EDGEPORT=M
+CONFIG_DRM_TTM=M
+CONFIG_FB_CFB_IMAGEBLIT=Y
+CONFIG_ZLIB_DEFLATE=M
+CONFIG_SUNRPC=M
+CONFIG_ARCNET_RAW=M
+CONFIG_SCSI_DH_RDAC=M
+CONFIG_SENSORS_W83795=M
+CONFIG_COMEDI_FC=M
+CONFIG_X86_P4_CLOCKMOD=M
+CONFIG_INPUT_ATI_REMOTE2=M
+CONFIG_CNIC=M
+CONFIG_DRM_I810=M
+CONFIG_NLS_CODEPAGE_864=M
+CONFIG_IWL3945=M
+CONFIG_IP_VS_LBLCR=M
+CONFIG_USB_YUREX=M
+CONFIG_FW_LOADER=Y
+CONFIG_LITELINK_DONGLE=M
+CONFIG_SENSORS_ADS7828=M
+CONFIG_USB_GSPCA_SPCA501=M
+CONFIG_HOTPLUG_PCI_PCIE=Y
+CONFIG_E2100=M
+CONFIG_CRYPTO_XTS=M
+CONFIG_CHARGER_PCF50633=M
+CONFIG_NETFILTER_XT_MATCH_RECENT=M
+CONFIG_DECOMPRESS_XZ=Y
+CONFIG_NETFILTER_XT_MATCH_PKTTYPE=M
+CONFIG_MII=M
+CONFIG_VIDEO_CPIA2=M
+CONFIG_EXT4_FS=M
+CONFIG_NET_SCH_DRR=M
+CONFIG_SENSORS_LTC4151=M
+CONFIG_BRIDGE_EBT_802_3=M
+CONFIG_CPU5_WDT=M
+CONFIG_COMEDI_NI_65XX=M
+CONFIG_FB_LE80578=M
+CONFIG_MTD_LPDDR=M
+CONFIG_COMEDI_ADDI_APCI_3001=M
+CONFIG_CRYPTO_SHA1=M
+CONFIG_EDAC_MM_EDAC=M
+CONFIG_IPMI_WATCHDOG=M
+CONFIG_DRM_TDFX=M
+CONFIG_JOYSTICK_JOYDUMP=M
+CONFIG_SCSI_7000FASST=M
+CONFIG_INFINIBAND_USER_ACCESS=M
+CONFIG_BPQETHER=M
+CONFIG_USB_ADUTUX=M
+CONFIG_SPEAKUP_SYNTH_ACNTPC=M
+CONFIG_SENSORS_SMSC47M192=M
+CONFIG_NLS_KOI8_U=M
+CONFIG_CRC8=M
+CONFIG_SENSORS_SCH5636=M
+CONFIG_XZ_DEC=Y
+CONFIG_QLA3XXX=M
+CONFIG_RTL8192U=M
+CONFIG_CAN_VCAN=M
+CONFIG_SBNI=M
+CONFIG_ATH_COMMON=M
+CONFIG_DUMMY=M
+CONFIG_CODA_FS=M
+CONFIG_W1_SLAVE_DS2431=M
+CONFIG_DVB_TUNER_CX24113=M
+CONFIG_BRIDGE_EBT_MARK_T=M
+CONFIG_SCSI_ADVANSYS=M
+CONFIG_DVB_B2C2_FLEXCOP_PCI=M
+CONFIG_SND_RAWMIDI=M
+CONFIG_HOTPLUG_PCI_ACPI_IBM=M
+CONFIG_LIRC_SASEM=M
+CONFIG_COMEDI_PCL724=M
+CONFIG_IR_FINTEK=M
+CONFIG_SND_OPL4_LIB=M
+CONFIG_USB_NET_CDC_EEM=M
+CONFIG_USB_STORAGE_SDDR09=M
+CONFIG_HYPERV_STORAGE=M
+CONFIG_IP_NF_MATCH_TTL=M
+CONFIG_ASYNC_RAID6_RECOV=M
+CONFIG_PATA_CS5536=M
+CONFIG_NFTL=M
+CONFIG_EEXPRESS=M
+CONFIG_NETFILTER_XT_TARGET_TRACE=M
+CONFIG_ATM_ZATM=M
+CONFIG_SND_RME32=M
+CONFIG_RTC_DRV_X1205=M
+CONFIG_IP6_NF_MATCH_FRAG=M
+CONFIG_USB_SERIAL_CYBERJACK=M
+CONFIG_NET_SCH_PRIO=M
+CONFIG_SATA_ULI=M
+CONFIG_DVB_DRXK=M
+CONFIG_USB_SERIAL_IUU=M
+CONFIG_SCSI_AIC79XX=M
+CONFIG_CRYPTO_LZO=M
+CONFIG_RADIO_MAXIRADIO=M
+CONFIG_SND_PCM=M
+CONFIG_LIRC_ZILOG=M
+CONFIG_BRIDGE_EBT_SNAT=M
+CONFIG_SND_AU8820=M
+CONFIG_GIRBIL_DONGLE=M
+CONFIG_EASYCAP=M
+CONFIG_SDIO_UART=M
+CONFIG_SENSORS_SCH56XX_COMMON=M
+CONFIG_NETFILTER_XT_MATCH_DCCP=M
+CONFIG_ICPLUS_PHY=M
+CONFIG_COMEDI_USBDUXFAST=M
+CONFIG_SCSI_ISCSI_ATTRS=M
+CONFIG_USB_SERIAL_EMPEG=M
+CONFIG_HOSTESS_SV11=M
+CONFIG_KEYBOARD_MAX7359=M
+CONFIG_IR_SONY_DECODER=M
+CONFIG_NLS_CODEPAGE_852=M
+CONFIG_TCG_TIS=M
+CONFIG_VIDEO_PVRUSB2=M
+CONFIG_NETFILTER_XT_MATCH_COMMENT=M
+CONFIG_USB_ISP116X_HCD=M
+CONFIG_I2C_ISCH=M
+CONFIG_USB_NET_RNDIS_HOST=M
+CONFIG_INPUT_EVDEV=M
+CONFIG_SND_AD1848=M
+CONFIG_IDEAPAD_LAPTOP=M
+CONFIG_NETFILTER_XT_TARGET_TCPMSS=M
+CONFIG_EXT2_FS=M
+CONFIG_TABLET_USB_WACOM=M
+CONFIG_NETFILTER_XT_MATCH_DSCP=M
+CONFIG_CRYPTO_WP512=M
+CONFIG_C2PORT_DURAMAR_2150=M
+CONFIG_HID_DRAGONRISE=M
+CONFIG_NETFILTER_XT_MATCH_CONNTRACK=M
+CONFIG_COMEDI_ADQ12B=M
+CONFIG_ITCO_WDT=M
+CONFIG_COMEDI_NI_LABPC=M
+CONFIG_IBMLS=M
+CONFIG_NETFILTER_XT_MATCH_RATEEST=M
+CONFIG_SND_ALOOP=M
+CONFIG_USB_LD=M
+CONFIG_MTD_GEN_PROBE=M
+CONFIG_QUOTA_TREE=M
+CONFIG_FB_VIA=M
+CONFIG_INPUT_PCSPKR=M
+CONFIG_PNFS_OBJLAYOUT=M
+CONFIG_SERIO_PCIPS2=M
+CONFIG_USB_NET_CDCETHER=M
+CONFIG_PACKET=Y
+CONFIG_RTC_DRV_M48T86=M
+CONFIG_SERIAL_PCH_UART=M
+CONFIG_SENSORS_SMM665=M
+CONFIG_MWIFIEX_SDIO=M
+CONFIG_NETFILTER_XT_MATCH_IPRANGE=M
+CONFIG_INTEL_IOATDMA=M
+CONFIG_NET_CLS_BASIC=M
+CONFIG_I2C_TINY_USB=M
+CONFIG_NETROM=M
+CONFIG_FUSION_SPI=M
+CONFIG_USB_GSPCA_OV534=M
+CONFIG_COMEDI_DT3000=M
+CONFIG_DVB_USB_GL861=M
+CONFIG_NF_CONNTRACK_TFTP=M
+CONFIG_RTC_DRV_MAX6902=M
+CONFIG_DVB_USB_ANYSEE=M
+CONFIG_NLS_CODEPAGE_949=M
+CONFIG_SENSORS_TMP102=M
+CONFIG_LOOPBACK_TARGET=M
+CONFIG_ISL29020=M
+CONFIG_XEN_XENBUS_FRONTEND=Y
+CONFIG_CRYPTO_PCRYPT=M
+CONFIG_COMEDI_CB_PCIMDDA=M
+CONFIG_PCMCIA_WL3501=M
+CONFIG_SND_ES1688=M
+CONFIG_VIRTIO_NET=M
+CONFIG_NETFILTER_XT_MATCH_ADDRTYPE=M
+CONFIG_SERIAL_8250_PNP=Y
+CONFIG_USB_NET_MCS7830=M
+CONFIG_SND_ENS1371=M
+CONFIG_CRYPTO_TWOFISH=M
+CONFIG_FIREWIRE_NET=M
+CONFIG_USB_TEST=M
+CONFIG_SCSI_AIC7XXX_OLD=M
+CONFIG_ADAPTEC_STARFIRE=M
+CONFIG_BT=M
+CONFIG_BT_HCIVHCI=M
+CONFIG_INPUT_CM109=M
+CONFIG_EFI_VARS=M
+CONFIG_DVB_USB_MXL111SF=M
+CONFIG_SENSORS_IT87=M
+CONFIG_LPC_SCH=M
+CONFIG_REED_SOLOMON=M
+CONFIG_COMEDI_ADL_PCI6208=M
+CONFIG_HDLC_RAW_ETH=M
+CONFIG_COMEDI=M
+CONFIG_BRIDGE_EBT_BROUTE=M
+CONFIG_USB_NET_SMSC75XX=M
+CONFIG_BE2NET=M
+CONFIG_PARPORT=M
+CONFIG_VORTEX=M
+CONFIG_SPEAKUP_SYNTH_DECTLK=M
+CONFIG_NETFILTER_XT_MATCH_IPVS=M
+CONFIG_HDLC=M
+CONFIG_ATM_SOLOS=M
+CONFIG_HAPPYMEAL=M
+CONFIG_HID_WACOM=M
+CONFIG_USB_SERIAL_CP210X=M
+CONFIG_NET_SCH_SFQ=M
+CONFIG_EDAC_R82600=M
+CONFIG_USB_UEAGLEATM=M
+CONFIG_NETFILTER_XT_MATCH_POLICY=M
+CONFIG_MWL8K=M
+CONFIG_TPS65010=M
+CONFIG_MOUSE_SYNAPTICS_I2C=M
+CONFIG_NETFILTER_XT_TARGET_TEE=M
+CONFIG_ENC28J60=M
+CONFIG_CRYPTO_AES=M
+CONFIG_DVB_DIB7000P=M
+CONFIG_SSB=M
+CONFIG_FB_MATROX_I2C=M
+CONFIG_NSC_GPIO=M
+CONFIG_I2C_STUB=M
+CONFIG_RADIO_TEA5764=M
+CONFIG_USB_GSPCA_SPCA1528=M
+CONFIG_FB_SVGALIB=M
+CONFIG_PARPORT_AX88796=M
+CONFIG_NV_TCO=M
+CONFIG_SMSC9420=M
+CONFIG_COMEDI_PCI_DRIVERS=M
+CONFIG_SENSORS_MAX6639=M
+CONFIG_GAMEPORT=M
+CONFIG_ISO9660_FS=M
+CONFIG_SKY2=M
+CONFIG_XEN_WDT=M
+CONFIG_DVB_USB_M920X=M
+CONFIG_UIO=M
+CONFIG_HID_WALTOP=M
+CONFIG_SCSI_VIRTIO=M
+CONFIG_RC_LOOPBACK=M
+CONFIG_ISDN_DRV_AVMB1_T1PCI=M
+CONFIG_NETFILTER_XT_MATCH_HASHLIMIT=M
+CONFIG_EL2=M
+CONFIG_BRIDGE_EBT_AMONG=M
+CONFIG_COMEDI_DT2814=M
+CONFIG_USB_R8A66597_HCD=M
+CONFIG_X86_MSR=M
+CONFIG_NETFILTER_XT_MATCH_CLUSTER=M
+CONFIG_R6040=M
+CONFIG_USB_MDC800=M
+CONFIG_AIRO_CS=M
+CONFIG_HWMON_VID=M
+CONFIG_SERIO_SERPORT=M
+CONFIG_COMEDI_ME4000=M
+CONFIG_NLS_CODEPAGE_950=M
+CONFIG_DVB_STV0297=M
+CONFIG_DVB_TTUSB_DEC=M
+CONFIG_LIRC=M
+CONFIG_SCSI_AIC94XX=M
+CONFIG_BT_BNEP=M
+CONFIG_NET_SCH_QFQ=M
+CONFIG_DVB_TDA826X=M
+CONFIG_COMEDI_MPC624=M
+CONFIG_SCSI_FUTURE_DOMAIN=M
+CONFIG_IXGBEVF=M
+CONFIG_DVB_NGENE=M
+CONFIG_INET_XFRM_MODE_TUNNEL=M
+CONFIG_PHONE_IXJ=M
+CONFIG_ISDN_DRV_AVMB1_B1PCMCIA=M
+CONFIG_XEN_BLKDEV_FRONTEND=M
+CONFIG_NF_CONNTRACK_SNMP=M
+CONFIG_USB_SERIAL_BELKIN=M
+CONFIG_W1_MASTER_DS2490=M
+CONFIG_MEDIA_TUNER_MT2266=M
+CONFIG_XFS_FS=M
+CONFIG_SENSORS_DME1737=M
+CONFIG_INPUT_KEYSPAN_REMOTE=M
+CONFIG_USB_GSPCA_PAC7302=M
+CONFIG_X86_MCE_INJECT=M
+CONFIG_TOUCHSCREEN_ELO=M
+CONFIG_NLS_CODEPAGE_869=M
+CONFIG_LINE6_USB=M
+CONFIG_SND_FIREWIRE_SPEAKERS=M
+CONFIG_SND_AZT3328=M
+CONFIG_PCH_DMA=M
+CONFIG_SATA_VIA=M
+CONFIG_COMEDI_PCMMIO=M
+CONFIG_TOUCHSCREEN_TOUCHIT213=M
+CONFIG_BINFMT_AOUT=M
+CONFIG_SENSORS_LM83=M
+CONFIG_ACENIC=M
+CONFIG_COMEDI_PCM3724=M
+CONFIG_CPU_FREQ_STAT=M
+CONFIG_ISCSI_IBFT=M
+CONFIG_COMEDI_NI_DAQ_700_CS=M
+CONFIG_PCMCIA_SMC91C92=M
+CONFIG_BT_HCIDTL1=M
+CONFIG_TIFM_CORE=M
+CONFIG_XEN_PRIVCMD=M
+CONFIG_FUSION_SAS=M
+CONFIG_CHR_DEV_OSST=M
+CONFIG_MTD_DOCPROBE=M
+CONFIG_MTD_BLKDEVS=M
+CONFIG_DVB_TDA10086=M
+CONFIG_HP100=M
+CONFIG_BLK_DEV_3W_XXXX_RAID=M
+CONFIG_MEMSTICK_R592=M
+CONFIG_NET_SCH_MQPRIO=M
+CONFIG_APDS9802ALS=M
+CONFIG_DVB_NXT6000=M
+CONFIG_MANTIS_CORE=M
+CONFIG_PATA_MARVELL=M
+CONFIG_NETFILTER_XT_MATCH_SCTP=M
+CONFIG_SATA_SIL24=M
+CONFIG_NLS_ISO8859_15=M
+CONFIG_TOUCHSCREEN_EETI=M
+CONFIG_SENSORS_VIA686A=M
+CONFIG_INET6_ESP=M
+CONFIG_HOSTAP_PCI=M
+CONFIG_IP_VS_WRR=M
+CONFIG_AUTOFS4_FS=M
+CONFIG_ATH5K=M
+CONFIG_ACPI_BUTTON=M
+CONFIG_UIO_NETX=M
+CONFIG_PDA_POWER=M
+CONFIG_NETFILTER_XT_SET=M
+CONFIG_ARCNET_1201=M
+CONFIG_NLS_CODEPAGE_932=M
+CONFIG_CRYPTO_CRC32C_INTEL=M
+CONFIG_CAN_PLX_PCI=M
+CONFIG_CRYPTO_AES_586=M
+CONFIG_I2C_ALI1563=M
+CONFIG_IP6_NF_FILTER=M
+CONFIG_GARP=M
+CONFIG_PCMCIA_AHA152X=M
+CONFIG_RT2500USB=M
+CONFIG_SERIO_LIBPS2=Y
+CONFIG_BLK_DEV_DRBD=M
+CONFIG_ISCSI_BOOT_SYSFS=M
+CONFIG_X86_CPUID=M
+CONFIG_NET_SCH_RED=M
+CONFIG_PCI_ATMEL=M
+CONFIG_NETFILTER_XT_MATCH_CONNBYTES=M
+CONFIG_USB_PRINTER=M
+CONFIG_USB_GSPCA_PAC207=M
+CONFIG_HPLAN=M
+CONFIG_USB_SERIAL_IR=M
+CONFIG_SKGE=M
+CONFIG_COMEDI_DT9812=M
+CONFIG_TCM_PSCSI=M
+CONFIG_XOR_BLOCKS=M
+CONFIG_HID_TWINHAN=M
+CONFIG_SENSORS_NTC_THERMISTOR=M
+CONFIG_MISDN_L1OIP=M
+CONFIG_DVB_PT1=M
+CONFIG_3C515=M
+CONFIG_BACKLIGHT_PROGEAR=M
+CONFIG_ASUS_WMI=M
+CONFIG_SENSORS_DS1621=M
+CONFIG_QNX4FS_FS=M
+CONFIG_NET_ACT_SIMP=M
+CONFIG_RT2X00_LIB=M
+CONFIG_YAM=M
+CONFIG_WD80x3=M
+CONFIG_NETFILTER_XT_MATCH_ECN=M
+CONFIG_USB_GSPCA_STV0680=M
+CONFIG_USB_STORAGE_SDDR55=M
+CONFIG_PPDEV=M
+CONFIG_IP_NF_TARGET_TTL=M
+CONFIG_AMILO_RFKILL=M
+CONFIG_ISDN_DRV_AVMB1_B1PCI=M
+CONFIG_USB_LED=M
+CONFIG_USBIP_HOST=M
+CONFIG_I2O=M
+CONFIG_TOUCHSCREEN_WACOM_W8001=M
+CONFIG_DVB_PLUTO2=M
+CONFIG_XEN_FBDEV_FRONTEND=Y
+CONFIG_DVB_AV7110=M
+CONFIG_DL2K=M
+CONFIG_FB_KYRO=M
+CONFIG_DVB_ZL10353=M
+CONFIG_NETFILTER_XT_MATCH_TIME=M
+CONFIG_IP_VS=M
+CONFIG_ZSMALLOC=M
+CONFIG_CAN_ESD_USB2=M
+CONFIG_SND_MSND_CLASSIC=M
+CONFIG_SEALEVEL_4021=M
+CONFIG_USB_XUSBATM=M
+CONFIG_RTC_DRV_RP5C01=M
+CONFIG_NETFILTER_XT_MATCH_MAC=M
+CONFIG_I2C_NFORCE2_S4985=M
+CONFIG_YELLOWFIN=M
+CONFIG_TOUCHSCREEN_TPS6507X=M
+CONFIG_NET_ACT_PEDIT=M
+CONFIG_NETFILTER_XT_TARGET_NFLOG=M
+CONFIG_RTC_DRV_DS1390=M
+CONFIG_L2TP=M
+CONFIG_DVB_B2C2_FLEXCOP_USB=M
+CONFIG_TCP_CONG_WESTWOOD=M
+CONFIG_USB_GSPCA_SPCA561=M
+CONFIG_LIBCRC32C=M
+CONFIG_MFD_PCF50633=M
+CONFIG_CRYPTO_SHA256=M
+CONFIG_JOYSTICK_GUILLEMOT=M
+CONFIG_BAYCOM_EPP=M
+CONFIG_INET_TCP_DIAG=M
+CONFIG_HID_SONY=M
+CONFIG_MDIO_BITBANG=M
+CONFIG_NET_ACT_IPT=M
+CONFIG_PARIDE_ON26=M
+CONFIG_SCSI_BNX2X_FCOE=M
+CONFIG_IPX=M
+CONFIG_HYPERV_NET=M
+CONFIG_SERIAL_8250_ACCENT=M
+CONFIG_SMSC_PHY=M
+CONFIG_HP_ACCEL=M
+CONFIG_CAN_EMS_PCI=M
+CONFIG_SCSI_BNX2_ISCSI=M
+CONFIG_OMFS_FS=M
+CONFIG_USB_GSPCA_ZC3XX=M
+CONFIG_SND_ES1968=M
+CONFIG_EUROTECH_WDT=M
+CONFIG_TOUCHSCREEN_MTOUCH=M
+CONFIG_BRIDGE_EBT_IP=M
+CONFIG_PARIDE_EPAT=M
+CONFIG_HID_MONTEREY=M
+CONFIG_FB_UDL=M
+CONFIG_USB_SERIAL_CYPRESS_M8=M
+CONFIG_FB_NEOMAGIC=M
+CONFIG_HID_EZKEY=M
+CONFIG_SND_OPL4_LIB_SEQ=M
+CONFIG_DVB_S5H1409=M
+CONFIG_DM_THIN_PROVISIONING=M
+CONFIG_RT61PCI=M
+CONFIG_PATA_JMICRON=M
+CONFIG_SCSI_OSD_ULD=M
+CONFIG_IPW2100=M
+CONFIG_SCSI_PPA=M
+CONFIG_BT_MRVL=M
+CONFIG_RTC_DRV_RX8581=M
+CONFIG_ISDN_CAPI_CAPI20=M
+CONFIG_CRYPTO_CRYPTD=M
+CONFIG_USBIP_VHCI_HCD=M
+CONFIG_PATA_RZ1000=M
+CONFIG_MTD_RAM=M
+CONFIG_RTL8192DE=M
+CONFIG_ACPI_TOSHIBA=M
+CONFIG_GAMEPORT_NS558=M
+CONFIG_VIDEO_CX2341X=M
+CONFIG_DVB_STV6110x=M
+CONFIG_PATA_IT821X=M
+CONFIG_ACERHDF=M
+CONFIG_KEYBOARD_XTKBD=M
+CONFIG_MMC_WBSD=M
+CONFIG_USB_GSPCA_TOPRO=M
+CONFIG_USB_GSPCA_MARS=M
+CONFIG_CAN_RAW=M
+CONFIG_CRYPTO=Y
+CONFIG_SENSORS_EMC6W201=M
+CONFIG_USB_TRANCEVIBRATOR=M
+CONFIG_USB_STKWEBCAM=M
+CONFIG_BTRFS_FS=M
+CONFIG_SND_USB_6FIRE=M
+CONFIG_I2C_SIS96X=M
+CONFIG_MMC_TIFM_SD=M
+CONFIG_SONYPI=M
+CONFIG_SND_SB8_DSP=M
+CONFIG_MEDIA_TUNER_TDA18218=M
+CONFIG_IP_NF_IPTABLES=M
+CONFIG_W1_SLAVE_BQ27000=M
+CONFIG_FB_VIRTUAL=M
+CONFIG_USB_GSPCA_CPIA1=M
+CONFIG_PARIDE_PF=M
+CONFIG_USB_XHCI_HCD=M
+CONFIG_VIRTIO=M
+CONFIG_CAN_KVASER_PCI=M
+CONFIG_COMEDI_NI_660X=M
+CONFIG_MFD_SM501=M
+CONFIG_HID_SAMSUNG=M
+CONFIG_IP_SET_LIST_SET=M
+CONFIG_TCM_IBLOCK=M
+CONFIG_USB_ISIGHTFW=M
+CONFIG_JME=M
+CONFIG_DVB_DIB3000MC=M
+CONFIG_CACHEFILES=M
+CONFIG_PATA_OLDPIIX=M
+CONFIG_9P_FS=M
+CONFIG_JOYSTICK_A3D=M
+CONFIG_SENSORS_ATK0110=M
+CONFIG_TCP_CONG_HSTCP=M
+CONFIG_SCSI_MOD=M
+CONFIG_SCSI_DPT_I2O=M
+CONFIG_SCx200=M
+CONFIG_AGP_SWORKS=Y
+CONFIG_FB_PM2=M
+CONFIG_GIGASET_M105=M
+CONFIG_TOSHIBA=M
+CONFIG_JOYSTICK_ZHENHUA=M
+CONFIG_USB_SERIAL_SPCP8X5=M
+CONFIG_P54_USB=M
+CONFIG_TOUCHSCREEN_MK712=M
+CONFIG_FB_ATY=M
+CONFIG_USB_GSPCA_KINECT=M
+CONFIG_SPEAKUP_SYNTH_DECEXT=M
+CONFIG_COMEDI_DAQBOARD2000=M
+CONFIG_OPROFILE=M
+CONFIG_CRYPTO_CRC32C=M
+CONFIG_SERIAL_CORE=Y
+CONFIG_FUSE_FS=M
+CONFIG_ETHOC=M
+CONFIG_ACPI_HED=Y
+CONFIG_TMSPCI=M
+CONFIG_HID_MICROSOFT=M
+CONFIG_RTC_DRV_S35390A=M
+CONFIG_SCSI_IMM=M
+CONFIG_AGP_VIA=Y
+CONFIG_PCH_CAN=M
+CONFIG_NF_DEFRAG_IPV6=M
+CONFIG_USB_GSPCA_CONEX=M
+CONFIG_MICREL_PHY=M
+CONFIG_VIDEO_DEV=M
+CONFIG_SGI_IOC4=M
+CONFIG_IRCOMM=M
+CONFIG_MTD_SLRAM=M
+CONFIG_MTD_ROM=M
+CONFIG_USB_ET61X251=M
+CONFIG_PATA_PDC2027X=M
+CONFIG_FB_I810=M
+CONFIG_INTEL_IPS=M
+CONFIG_NF_CT_PROTO_SCTP=M
+CONFIG_SND_CMI8330=M
+CONFIG_USB_SERIAL_VISOR=M
+CONFIG_MTD_PMC551=M
+CONFIG_BROADCOM_PHY=M
+CONFIG_COMEDI_PCMUIO=M
+CONFIG_SCSI_QLOGIC_FAS=M
+CONFIG_SCSI=M
+CONFIG_FB_CFB_FILLRECT=Y
+CONFIG_HYPERV=M
+CONFIG_AT76C50X_USB=M
+CONFIG_NF_NAT_PPTP=M
+CONFIG_HID_CHICONY=M
+CONFIG_HID=M
+CONFIG_HW_RANDOM_AMD=M
+CONFIG_LIBERTAS_THINFIRM_USB=M
+CONFIG_IXGB=M
+CONFIG_NLS_ISO8859_9=M
+CONFIG_SND_SERIAL_U16550=M
+CONFIG_I2C_SMBUS=M
+CONFIG_IP_VS_PE_SIP=M
+CONFIG_JOYSTICK_GF2K=M
+CONFIG_RTLWIFI=M
+CONFIG_LTPC=M
+CONFIG_X86_POWERNOW_K6=M
+CONFIG_LEDS_TRIGGER_DEFAULT_ON=M
+CONFIG_MXM_WMI=M
+CONFIG_MAC80211_HWSIM=M
+CONFIG_DVB_LGDT330X=M
+CONFIG_LIBFC=M
+CONFIG_LEDS_NET48XX=M
+CONFIG_RTC_DRV_CMOS=Y
+CONFIG_TOUCHSCREEN_HTCPEN=M
+CONFIG_PTP_1588_CLOCK=M
+CONFIG_IEEE802154_DRIVERS=M
+CONFIG_ADFS_FS=M
+CONFIG_PATA_AMD=M
+CONFIG_USB_PWC=M
+CONFIG_SENSORS_AD7414=M
+CONFIG_MEDIA_TUNER_TDA8290=M
+CONFIG_COMEDI_ADV_PCI_DIO=M
+CONFIG_BONDING=M
+CONFIG_MEDIA_TUNER_TDA18212=M
+CONFIG_SCx200_I2C=M
+CONFIG_JBD2=M
+CONFIG_SENSORS_ASB100=M
+CONFIG_SND_INTEL8X0=M
+CONFIG_COMEDI_NI_ATMIO=M
+CONFIG_PATA_NS87415=M
+CONFIG_USBIP_CORE=M
+CONFIG_ATM_BR2684=M
+CONFIG_IB700_WDT=M
+CONFIG_MMC_USHC=M
+CONFIG_COMEDI_CB_PCIDAS64=M
+CONFIG_SPI_TLE62X0=M
+CONFIG_INET6_IPCOMP=M
+CONFIG_SONY_LAPTOP=M
+CONFIG_QLCNIC=M
+CONFIG_PHYLIB=M
+CONFIG_IPV6_TUNNEL=M
+CONFIG_SENSORS_LM77=M
+CONFIG_W1_SLAVE_DS2760=M
+CONFIG_DVB_TDA665x=M
+CONFIG_PARIDE_BPCK6=M
+CONFIG_NLS_CODEPAGE_874=M
+CONFIG_VIRTIO_BALLOON=M
+CONFIG_HOTPLUG_PCI_CPCI_GENERIC=M
+CONFIG_SCSI_ARCMSR=M
+CONFIG_COMEDI_AMPLC_DIO200=M
+CONFIG_CAN_PEAK_PCI=M
+CONFIG_PPS_CLIENT_LDISC=M
+CONFIG_MEDIA_TUNER_MT20XX=M
+CONFIG_NETFILTER_XT_MATCH_CONNLIMIT=M
+CONFIG_ATP=M
+CONFIG_IP_NF_SECURITY=M
+CONFIG_IP_NF_RAW=M
+CONFIG_IP_NF_ARPFILTER=M
+CONFIG_NETFILTER_XT_MATCH_SOCKET=M
+CONFIG_PPPOL2TP=M
+CONFIG_SYNCLINK=M
+CONFIG_KEYBOARD_ADP5588=M
+CONFIG_R8712U=M
+CONFIG_HID_TOPSEED=M
+CONFIG_FB_VT8623=M
+CONFIG_DECOMPRESS_BZIP2=Y
+CONFIG_CORDIC=M
+CONFIG_COMEDI_CB_PCIDAS=M
+CONFIG_FB_TRIDENT=M
+CONFIG_SENSORS_ADM1029=M
+CONFIG_EDAC_I3000=M
+CONFIG_DECNET=M
+CONFIG_TOPSTAR_LAPTOP=M
+CONFIG_AGP_SIS=Y
+CONFIG_NF_NAT_H323=M
+CONFIG_JOYSTICK_TURBOGRAFX=M
+CONFIG_SKISA=M
+CONFIG_COMEDI_DMM32AT=M
+CONFIG_IR_ENE=M
+CONFIG_ALIM1535_WDT=M
+CONFIG_GIGASET_BASE=M
+CONFIG_MISDN_ISAR=M
+CONFIG_REALTEK_PHY=M
+CONFIG_HID_A4TECH=M
+CONFIG_MEDIA_TUNER_MC44S803=M
+CONFIG_NLS_CODEPAGE_860=M
+CONFIG_SND_MONA=M
+CONFIG_NETFILTER_XT_MATCH_ESP=M
+CONFIG_NIU=M
+CONFIG_IP_NF_TARGET_NETMAP=M
+CONFIG_USB_GSPCA_SPCA505=M
+CONFIG_USB_GSPCA_SQ905C=M
+CONFIG_SATA_VITESSE=M
+CONFIG_USB_ZR364XX=M
+CONFIG_PRINTER=M
+CONFIG_RTC_DRV_ISL1208=M
+CONFIG_ISDN_DIVAS_DIVACAPI=M
+CONFIG_SND_FIREWIRE_LIB=M
+CONFIG_LAPB=M
+CONFIG_RTC_DRV_PCF2123=M
+CONFIG_ISDN_DIVAS_USERIDI=M
+CONFIG_DVB_LNBP21=M
+CONFIG_XEN_NETDEV_FRONTEND=M
+CONFIG_DVB_TDA10048=M
+CONFIG_INPUT_FF_MEMLESS=M
+CONFIG_SENSORS_W83627HF=M
+CONFIG_CHR_DEV_SG=M
+CONFIG_USB_CDC_PHONET=M
+CONFIG_IP_SET_HASH_NET=M
+CONFIG_NET_SCH_DSMARK=M
+CONFIG_SND_AD1889=M
+CONFIG_MISDN_AVMFRITZ=M
+CONFIG_SMS_SDIO_DRV=M
+CONFIG_SERIAL_8250_HUB6=M
+CONFIG_SND_MPU401=M
+CONFIG_DVB_CX24116=M
+CONFIG_CRYPTO_XCBC=M
+CONFIG_NF_NAT_AMANDA=M
+CONFIG_IPW2200=M
+CONFIG_BRIDGE_EBT_MARK=M
+CONFIG_KEYBOARD_QT2160=M
+CONFIG_SENSORS_ADT7411=M
+CONFIG_IP6_NF_MATCH_IPV6HEADER=M
+CONFIG_MACVLAN=M
+CONFIG_PATA_PDC_OLD=M
+CONFIG_SND_SSCAPE=M
+CONFIG_IBMTR=M
+CONFIG_FB_ARK=M
+CONFIG_JOYSTICK_IFORCE=M
+CONFIG_PCF50633_ADC=M
+CONFIG_ARCNET=M
+CONFIG_I2C_ALI15X3=M
+CONFIG_INET6_XFRM_MODE_TRANSPORT=M
+CONFIG_COMEDI_ADDI_APCI_2032=M
+CONFIG_SND_ALS100=M
+CONFIG_CRYPTO_ARC4=M
+CONFIG_SND_TEA575X=M
+CONFIG_IEEE802154_6LOWPAN=M
+CONFIG_VHOST_NET=M
+CONFIG_DVB_STV0900=M
+CONFIG_I2C_NFORCE2=M
+CONFIG_USB_SERIAL_DIGI_ACCELEPORT=M
+CONFIG_USB_GL860=M
+CONFIG_SLHC=M
+CONFIG_SND_ALS300=M
+CONFIG_I2C_EG20T=M
+CONFIG_SCSI_TGT=M
+CONFIG_CRYPTO_MANAGER=Y
+CONFIG_NET_SCH_HTB=M
+CONFIG_EEPROM_AT24=M
+CONFIG_UIO_SERCOS3=M
+CONFIG_PPP_BSDCOMP=M
+CONFIG_DVB_USB_TTUSB2=M
+CONFIG_MTD_NAND=M
+CONFIG_SCx200HR_TIMER=M
+CONFIG_HID_ORTEK=M
+CONFIG_NETFILTER_XT_TARGET_MARK=M
+CONFIG_MEDIA_TUNER_MXL5007T=M
+CONFIG_TCIC=M
+CONFIG_DRM_I2C_SIL164=M
+CONFIG_MD_LINEAR=M
+CONFIG_DVB_TDA10021=M
+CONFIG_VIDEO_CX231XX_DVB=M
+CONFIG_WL1251=M
+CONFIG_I2C_ALGOBIT=M
+CONFIG_MMC_BLOCK=M
+CONFIG_NET_CLS_FW=M
+CONFIG_KVM=M
+CONFIG_ATL1C=M
+CONFIG_HW_RANDOM_INTEL=M
+CONFIG_LIRC_SERIAL=M
+CONFIG_LXT_PHY=M
+CONFIG_FB_MB862XX=M
+CONFIG_VIDEO_MT9V011=M
+CONFIG_SQUASHFS=M
+CONFIG_EDAC_I7CORE=M
+CONFIG_FB_N411=M
+CONFIG_DELL_WMI_AIO=M
+CONFIG_SND_ALS4000=M
+CONFIG_USB_GSPCA_KONICA=M
+CONFIG_NET_SCH_TBF=M
+CONFIG_SND_SC6000=M
+CONFIG_BT_HCIBTUSB=M
+CONFIG_DVB_CX22702=M
+CONFIG_SERIO_RAW=M
+CONFIG_UWB=M
+CONFIG_ASYNC_XOR=M
+CONFIG_I2O_CONFIG=M
+CONFIG_NET_CLS_RSVP=M
+CONFIG_TIPC=M
+CONFIG_DVB_STB6100=M
+CONFIG_W83977F_WDT=M
+CONFIG_MD_RAID0=M
+CONFIG_NE2000=M
+CONFIG_USB_NET_CDC_NCM=M
+CONFIG_ACT200L_DONGLE=M
+CONFIG_HP_WATCHDOG=M
+CONFIG_COMEDI_USB_DRIVERS=M
+CONFIG_PATA_SCH=M
+CONFIG_PATA_NETCELL=M
+CONFIG_SND_GUSEXTREME=M
+CONFIG_ATM_CLIP=M
+CONFIG_COMEDI_RTD520=M
+CONFIG_SND_ADLIB=M
+CONFIG_MMC=M
+CONFIG_LZO_COMPRESS=Y
+CONFIG_MOUSE_PC110PAD=M
+CONFIG_CRYPTO_SEQIV=M
+CONFIG_COMEDI_QUATECH_DAQP_CS=M
+CONFIG_TOUCHSCREEN_AD7877=M
+CONFIG_HID_LOGITECH=M
+CONFIG_SND_INDIGODJX=M
+CONFIG_ARCNET_COM90xx=M
+CONFIG_DM_LOG_USERSPACE=M
+CONFIG_JOYSTICK_GAMECON=M
+CONFIG_SCSI_ENCLOSURE=M
+CONFIG_SENSORS_LM92=M
+CONFIG_COMEDI_ADDI_APCI_3120=M
+CONFIG_SCSI_SAS_LIBSAS=M
+CONFIG_ISCSI_TARGET=M
+CONFIG_ARCNET_RIM_I=M
+CONFIG_NETFILTER_XT_TARGET_IDLETIMER=M
+CONFIG_FB_ATY128=M
+CONFIG_UIO_AEC=M
+CONFIG_SCSI_PM8001=M
+CONFIG_USB_NET_RNDIS_WLAN=M
+CONFIG_VIDEO_TUNER=M
+CONFIG_IFB=M
+CONFIG_LEDS_LP3944=M
+CONFIG_USB_SEVSEG=M
+CONFIG_SND_MPU401_UART=M
+CONFIG_RTC_DRV_PCF8563=M
+CONFIG_SND_CS4236=M
+CONFIG_PPTP=M
+CONFIG_SENSORS_SMSC47M1=M
+CONFIG_SND_USB_US122L=M
+CONFIG_USB_DSBR=M
+CONFIG_PCIPCWATCHDOG=M
+CONFIG_USB_SERIAL_OTI6858=M
+CONFIG_ACTISYS_DONGLE=M
+CONFIG_CAN_BCM=M
+CONFIG_PATA_CS5520=M
+CONFIG_VIDEO_SAA7146_VV=M
+CONFIG_USB_ATM=M
+CONFIG_PCMCIA_FDOMAIN=M
+CONFIG_NETFILTER_XT_MATCH_U32=M
+CONFIG_AGP_INTEL=Y
+CONFIG_NLS_ISO8859_4=M
+CONFIG_TOUCHSCREEN_AD7879_I2C=M
+CONFIG_INTEL_OAKTRAIL=M
+CONFIG_SND_MTS64=M
+CONFIG_RTC_DRV_RX8025=M
+CONFIG_EDAC_I82860=M
+CONFIG_CRYPTO_RMD160=M
+CONFIG_IR_IMON=M
+CONFIG_PATA_HPT366=M
+CONFIG_SCSI_EATA=M
+CONFIG_INET_AH=M
+CONFIG_SENSORS_ATXP1=M
+CONFIG_DRM_I2C_CH7006=M
+CONFIG_TABLET_USB_KBTAB=M
+CONFIG_UDF_FS=M
+CONFIG_IPV6_MIP6=Y
+CONFIG_MARVELL_PHY=M
+CONFIG_VXFS_FS=M
+CONFIG_SND_LOLA=M
+CONFIG_ISDN_CAPI=M
+CONFIG_HOTPLUG_PCI=Y
+CONFIG_ZD1211RW=M
+CONFIG_TCP_CONG_CUBIC=Y
+CONFIG_CEPH_FS=M
+CONFIG_IXGBE=M
+CONFIG_LIRC_IMON=M
+CONFIG_MMC_SDHCI=M
+CONFIG_LEDS_WRAP=M
+CONFIG_DVB_DIB7000M=M
+CONFIG_NETFILTER_XT_CONNMARK=M
+CONFIG_LEDS_LT3593=M
+CONFIG_HID_KYE=M
+CONFIG_MOUSE_VSXXXAA=M
+CONFIG_VIDEO_TM6000_ALSA=M
+CONFIG_WL12XX_SDIO=M
+CONFIG_SOFT_WATCHDOG=M
+CONFIG_IPWIRELESS=M
+CONFIG_PARIDE_FRPW=M
+CONFIG_IP_SET_BITMAP_IPMAC=M
+CONFIG_MTD_NAND_RICOH=M
+CONFIG_LIB80211_CRYPT_WEP=M
+CONFIG_DELL_WMI=M
+CONFIG_SENSORS_W83791D=M
+CONFIG_RADIO_SI4713=M
+CONFIG_I2C_VIAPRO=M
+CONFIG_USB_GSPCA_NW80X=M
+CONFIG_IP_NF_MATCH_AH=M
+CONFIG_INFINIBAND_SRP=M
+CONFIG_SYNCLINK_CS=M
+CONFIG_TCP_CONG_VENO=M
+CONFIG_DVB_S5H1420=M
+CONFIG_INFINIBAND=M
+CONFIG_AFS_FS=M
+CONFIG_COMEDI_S526=M
+CONFIG_COMEDI_DAS1800=M
+CONFIG_I2C_PARPORT_LIGHT=M
+CONFIG_NETFILTER_XT_MATCH_LIMIT=M
+CONFIG_CRYPTO_AES_NI_INTEL=M
+CONFIG_ULI526X=M
+CONFIG_IP6_NF_QUEUE=M
+CONFIG_I2C_SIMTEC=M
+CONFIG_NLS_CODEPAGE_775=M
+CONFIG_IRLAN=M
+CONFIG_MOUSE_SERIAL=M
+CONFIG_FB_SYS_FOPS=Y
+CONFIG_JOYSTICK_ANALOG=M
+CONFIG_MISDN_HFCPCI=M
+CONFIG_WIMAX=M
+CONFIG_I2O_SCSI=M
+CONFIG_MEDIA_TUNER_XC4000=M
+CONFIG_NETFILTER_XT_MATCH_DEVGROUP=M
+CONFIG_ACPI_BATTERY=M
+CONFIG_DVB_LGDT3305=M
+CONFIG_MEMSTICK=M
+CONFIG_HOTPLUG_PCI_COMPAQ=M
+CONFIG_VIDEO_SAA7146=M
+CONFIG_FB=Y
+CONFIG_X86_SPEEDSTEP_SMI=M
+CONFIG_NLS_CODEPAGE_865=M
+CONFIG_KEYBOARD_OPENCORES=M
+CONFIG_LIRC_IGORPLUGUSB=M
+CONFIG_USB_GSPCA_SPCA500=M
+CONFIG_I2O_BLOCK=M
+CONFIG_NET_ACT_NAT=M
+CONFIG_COMEDI_RTI800=M
+CONFIG_COMEDI_ADL_PCI7296=M
+CONFIG_BT_HCIUART=M
+CONFIG_DVB_LNBP22=M
+CONFIG_SENSORS_TMP421=M
+CONFIG_USB_GSPCA_SN9C2028=M
+CONFIG_SUNGEM=M
+CONFIG_IR_STREAMZAP=M
+CONFIG_SND_HDSPM=M
+CONFIG_LEDS_CLEVO_MAIL=M
+CONFIG_IP_SET=M
+CONFIG_THERMAL=M
+CONFIG_DVB_BUDGET_PATCH=M
+CONFIG_TOUCHSCREEN_TOUCHRIGHT=M
+CONFIG_AMD8111_ETH=M
+CONFIG_COMEDI_ADL_PCI8164=M
+CONFIG_I2C_AMD8111=M
+CONFIG_INPUT_POWERMATE=M
+CONFIG_FB_S3=M
+CONFIG_BRCMUTIL=M
+CONFIG_DE600=M
+CONFIG_DVB_TTUSB_BUDGET=M
+CONFIG_VETH=M
+CONFIG_RTC_DRV_PCF8583=M
+CONFIG_DVB_MT312=M
+CONFIG_ATM_DUMMY=M
+CONFIG_HID_PETALYNX=M
+CONFIG_MTD_PCMCIA=M
+CONFIG_TLAN=M
+CONFIG_COMEDI_AMPLC_PCI230=M
+CONFIG_MEMSTICK_TIFM_MS=M
+CONFIG_ATM_LANE=M
+CONFIG_SND_GUSMAX=M
+CONFIG_SENSORS_W83L786NG=M
+CONFIG_NET_ACT_MIRRED=M
+CONFIG_INPUT_APANEL=M
+CONFIG_NF_CONNTRACK_IPV4=M
+CONFIG_SERIAL_MFD_HSU=M
+CONFIG_MYRI10GE=M
+CONFIG_USB_VL600=M
+CONFIG_PARIDE_BPCK=M
+CONFIG_BATTERY_BQ27x00=M
+CONFIG_CAN_SOFTING=M
+CONFIG_RT2X00_LIB_PCI=M
+CONFIG_SND_DUMMY=M
+CONFIG_SCSI_MVSAS=M
+CONFIG_USB_WUSB_CBAF=M
+CONFIG_USB_NET_ZAURUS=M
+CONFIG_INET6_XFRM_TUNNEL=M
+CONFIG_DM_MULTIPATH_ST=M
+CONFIG_PATA_CS5535=M
+CONFIG_SENSORS_LM95241=M
+CONFIG_FB_METRONOME=M
+CONFIG_AD525X_DPOT_SPI=M
+CONFIG_INPUT_ATLAS_BTNS=M
+CONFIG_ACQUIRE_WDT=M
+CONFIG_DVB_ZL10039=M
+CONFIG_MIXCOMWD=M
+CONFIG_WDTPCI=M
+CONFIG_USB_SERIAL_DEBUG=M
+CONFIG_IP_SET_HASH_IPPORTIP=M
+CONFIG_MLX4_EN=M
+CONFIG_PARIDE_DSTR=M
+CONFIG_TABLET_USB_ACECAD=M
+CONFIG_MTD_DOC2001PLUS=M
+CONFIG_SENSORS_LM70=M
+CONFIG_NET_EMATCH_NBYTE=M
+CONFIG_SENSORS_BH1770=M
+CONFIG_NORTEL_HERMES=M
+CONFIG_SIS190=M
+CONFIG_LP486E=M
+CONFIG_TCG_NSC=M
+CONFIG_MOUSE_INPORT=M
+CONFIG_VIDEO_MEDIA=M
+CONFIG_WIMAX_I2400M=M
+CONFIG_CUSE=M
+CONFIG_HTC_PASIC3=M
+CONFIG_TOUCHSCREEN_WM97XX=M
+CONFIG_FB_RADEON=M
+CONFIG_CRYPTO_RMD256=M
+CONFIG_DVB_MT352=M
+CONFIG_RC_ATI_REMOTE=M
+CONFIG_W83627HF_WDT=M
+CONFIG_FB_VOODOO1=M
+CONFIG_USB_NET_CX82310_ETH=M
+CONFIG_EEPROM_MAX6875=M
+CONFIG_W1_MASTER_MATROX=M
+CONFIG_MOUSE_APPLETOUCH=M
+CONFIG_HID_LOGITECH_DJ=M
+CONFIG_XEN_PCIDEV_FRONTEND=M
+CONFIG_NF_NAT_PROTO_UDPLITE=M
+CONFIG_USB_SERIAL_SIERRAWIRELESS=M
+CONFIG_CRYPTO_CTR=M
+CONFIG_PCMCIA_XIRC2PS=M
+CONFIG_DVB_STV090x=M
+CONFIG_SCSI_HPTIOP=M
+CONFIG_NATIONAL_PHY=M
+CONFIG_ORE=M
+CONFIG_USB_SERIAL_KEYSPAN_PDA=M
+CONFIG_MEDIA_TUNER_MT2060=M
+CONFIG_COMEDI_ADV_PCI1710=M
+CONFIG_RTC_DRV_RS5C348=M
+CONFIG_IBMOL=M
+CONFIG_HW_RANDOM=M
+CONFIG_PATA_LEGACY=M
+CONFIG_SND_INTERWAVE_STB=M
+CONFIG_DVB_USB_AU6610=M
+CONFIG_SPI_LM70_LLP=M
+CONFIG_X86_SPEEDSTEP_LIB=M
+CONFIG_SCx200_WDT=M
+CONFIG_ATM_IA=M
+CONFIG_IRNET=M
+CONFIG_SND_VIRTUOSO=M
+CONFIG_MTD_AR7_PARTS=M
+CONFIG_SENSORS_ADS7871=M
+CONFIG_NLS_CODEPAGE_737=M
+CONFIG_HW_RANDOM_VIA=M
+CONFIG_SUNDANCE=M
+CONFIG_SENSORS_W83781D=M
+CONFIG_CAN_SOFTING_CS=M
+CONFIG_VIDEOBUF2_CORE=M
+CONFIG_PARIDE_COMM=M
+CONFIG_IRTTY_SIR=M
+CONFIG_EEEPC_WMI=M
+CONFIG_NTFS_FS=M
+CONFIG_ACPI_THERMAL=M
+CONFIG_BLK_CPQ_DA=M
+CONFIG_SCSI_DH_HP_SW=M
+CONFIG_IP_SCTP=M
+CONFIG_DVB_STB0899=M
+CONFIG_P54_PCI=M
+CONFIG_XEN_GRANT_DEV_ALLOC=M
+CONFIG_CRYPTO_BLKCIPHER2=Y
+CONFIG_SCSI_SAS_ATTRS=M
+CONFIG_RTL8187=M
+CONFIG_SND_SEQ_DUMMY=M
+CONFIG_USB_SERIAL_SIEMENS_MPI=M
+CONFIG_DM_RAID=M
+CONFIG_CAN_SJA1000_ISA=M
+CONFIG_DVB_TDA18271C2DD=M
+CONFIG_QLGE=M
+CONFIG_I2O_BUS=M
+CONFIG_VIDEO_TM6000=M
+CONFIG_DVB_CXD2820R=M
+CONFIG_COMEDI_NI_DAQ_DIO24_CS=M
+CONFIG_USB_GSPCA_SONIXJ=M
+CONFIG_RTC_DRV_DS1553=M
+CONFIG_TOUCHSCREEN_HAMPSHIRE=M
+CONFIG_CRYPTO_KHAZAD=M
+CONFIG_MMC_CB710=M
+CONFIG_MTD_BLOCK=M
+CONFIG_W83697HF_WDT=M
+CONFIG_VIDEOBUF2_VMALLOC=M
+CONFIG_RC_MAP=M
+CONFIG_ROSE=M
+CONFIG_MTD_QINFO_PROBE=M
+CONFIG_PCWATCHDOG=M
+CONFIG_CRYPTO_TWOFISH_586=M
+CONFIG_NILFS2_FS=M
+CONFIG_NLS_ISO8859_3=M
+CONFIG_HW_RANDOM_GEODE=M
+CONFIG_COMEDI_PCL816=M
+CONFIG_HID_PANTHERLORD=M
+CONFIG_SND=M
+CONFIG_NET_SCH_TEQL=M
+CONFIG_MEMSTICK_JMICRON_38X=M
+CONFIG_IR_RC6_DECODER=M
+CONFIG_XEN_NETDEV_BACKEND=M
+CONFIG_SND_SB16_DSP=M
+CONFIG_MTD_OOPS=M
+CONFIG_IWLEGACY=M
+CONFIG_S2IO=M
+CONFIG_IP_VS_SH=M
+CONFIG_VIDEO_MSP3400=M
+CONFIG_PLIP=M
+CONFIG_USB_PEGASUS=M
+CONFIG_USB_TMC=M
+CONFIG_SBC_EPX_C3_WATCHDOG=M
+CONFIG_BLK_DEV_FD=M
+CONFIG_SND_PCSP=M
+CONFIG_FB_CIRRUS=M
+CONFIG_TABLET_USB_HANWANG=M
+CONFIG_ATH9K_COMMON=M
+CONFIG_DVB_STB6000=M
+CONFIG_COMEDI_MISC_DRIVERS=M
+CONFIG_USB_SERIAL_QCAUX=M
+CONFIG_SATA_ACARD_AHCI=M
+CONFIG_MISDN_SPEEDFAX=M
+CONFIG_SENSORS_IBMAEM=M
+CONFIG_IP_NF_TARGET_CLUSTERIP=M
+CONFIG_MTD_BLOCK2MTD=M
+CONFIG_W1_SLAVE_THERM=M
+CONFIG_CAN_SLCAN=M
+CONFIG_PARIDE_KBIC=M
+CONFIG_JOYSTICK_TWIDJOY=M
+CONFIG_EL3=M
+CONFIG_COMEDI_DT2815=M
+CONFIG_NOZOMI=M
+CONFIG_COMEDI_PCL711=M
+CONFIG_COMEDI_ADDI_APCI_2016=M
+CONFIG_NETFILTER_XT_TARGET_AUDIT=M
+CONFIG_HOSTAP_CS=M
+CONFIG_SENSORS_ADCXX=M
+CONFIG_SND_CS4281=M
+CONFIG_COMEDI_8255=M
+CONFIG_MEDIA_TUNER_MT2131=M
+CONFIG_USB_NET_KALMIA=M
+CONFIG_USB_NET_DM9601=M
+CONFIG_IR_MCEUSB=M
+CONFIG_BLK_DEV_OSD=M
+CONFIG_CIFS=M
+CONFIG_SMSC37B787_WDT=M
+CONFIG_XFRM_USER=M
+CONFIG_TCP_CONG_BIC=M
+CONFIG_SCSI_NSP32=M
+CONFIG_LEDS_PCA9532=M
+CONFIG_INPUT_PCF50633_PMU=M
+CONFIG_SCSI_DH_EMC=M
+CONFIG_SENSORS_TMP401=M
+CONFIG_REGULATOR_MAX1586=M
+CONFIG_SENSORS_ADT7475=M
+CONFIG_PCMCIA_XIRCOM=M
+CONFIG_SCSI_T128=M
+CONFIG_COMEDI_II_PCI20KC=M
+CONFIG_DVB_MANTIS=M
+CONFIG_SENSORS_LIS3_I2C=M
+CONFIG_JOYSTICK_WALKERA0701=M
+CONFIG_CRYPTO_LRW=M
+CONFIG_NET_EMATCH_CMP=M
+CONFIG_USB_GSPCA_T613=M
+CONFIG_SND_VIA82XX_MODEM=M
+CONFIG_SND_MTPAV=M
+CONFIG_PPP_ASYNC=M
+CONFIG_MD_RAID10=M
+CONFIG_SCSI_SYM53C416=M
+CONFIG_SENSORS_APPLESMC=M
+CONFIG_CAN_GW=M
+CONFIG_NLS_CODEPAGE_866=M
+CONFIG_SENSORS_ABITUGURU3=M
+CONFIG_CRAMFS=M
+CONFIG_RADIO_SAA7706H=M
+CONFIG_CYCLADES=M
+CONFIG_KEYBOARD_LM8323=M
+CONFIG_CHELSIO_T1=M
+CONFIG_COMEDI_AIO_AIO12_8=M
+CONFIG_CHR_DEV_ST=M
+CONFIG_DM_MULTIPATH=M
+CONFIG_CRYPTO_USER_API_SKCIPHER=M
+CONFIG_SCSI_3W_SAS=M
+CONFIG_COMEDI_NI_ATMIO16D=M
+CONFIG_LANCE=M
+CONFIG_SPEAKUP_SYNTH_DTLK=M
+CONFIG_SENSORS_LM80=M
+CONFIG_DVB_IT913X_FE=M
+CONFIG_ATA_PIIX=M
+CONFIG_B43LEGACY=M
+CONFIG_HID_MULTITOUCH=M
+CONFIG_SATA_AHCI=M
+CONFIG_COMEDI_MITE=M
+CONFIG_DVB_USB_A800=M
+CONFIG_I2C_SI470X=M
+CONFIG_DVB_A8293=M
+CONFIG_SENSORS_ASC7621=M
+CONFIG_NETXEN_NIC=M
+CONFIG_ATM_TCP=M
+CONFIG_HID_ELECOM=M
+CONFIG_SND_TIMER=M
+CONFIG_LIRC_TTUSBIR=M
+CONFIG_COMEDI_ICP_MULTI=M
+CONFIG_DRM_R128=M
+CONFIG_TCM_FC=M
+CONFIG_DVB_USB_IT913X=M
+CONFIG_USB_SERIAL_MOTOROLA=M
+CONFIG_SERIO_I8042=Y
+CONFIG_FARSYNC=M
+CONFIG_NFS_ACL_SUPPORT=M
+CONFIG_W1_SLAVE_DS2433=M
+CONFIG_ATL1=M
+CONFIG_APPLICOM=M
+CONFIG_USB_SERIAL_OMNINET=M
+CONFIG_HDLC_PPP=M
+CONFIG_TCP_CONG_SCALABLE=M
+CONFIG_DVB_MB86A20S=M
+CONFIG_PATA_TRIFLEX=M
+CONFIG_COMEDI_PCL818=M
+CONFIG_JOYSTICK_TMDC=M
+CONFIG_CDROM_PKTCDVD=M
+CONFIG_NETFILTER_XT_TARGET_CONNMARK=M
+CONFIG_RADIO_WL1273=M
+CONFIG_SENSORS_SMSC47B397=M
+CONFIG_CRYPTO_MICHAEL_MIC=M
+CONFIG_CRYPTO_ANSI_CPRNG=M
+CONFIG_NETFILTER_XT_TARGET_CONNSECMARK=M
+CONFIG_UWB_I1480U=M
+CONFIG_COMEDI_PCL726=M
+CONFIG_JBD=M
+CONFIG_DVB_PLL=M
+CONFIG_SERIAL_JSM=M
+CONFIG_EDAC_E7XXX=M
+CONFIG_PATA_HPT37X=M
+CONFIG_UIO_PCI_GENERIC=M
+CONFIG_PPP=M
+CONFIG_RFD_FTL=M
+CONFIG_NETFILTER_XT_MATCH_QUOTA=M
+CONFIG_TOUCHSCREEN_ATMEL_MXT=M
+CONFIG_ASYNC_CORE=M
+CONFIG_NET_SCH_MULTIQ=M
+CONFIG_INET_DIAG=M
+CONFIG_CRYPTO_GHASH=M
+CONFIG_SYNCLINKMP=M
+CONFIG_SCSI_LPFC=M
+CONFIG_ROADRUNNER=M
+CONFIG_NF_NAT_FTP=M
+CONFIG_CRYPTO_RMD320=M
+CONFIG_NF_CT_PROTO_UDPLITE=M
+CONFIG_CARDMAN_4000=M
+CONFIG_SPEAKUP=M
+CONFIG_HANGCHECK_TIMER=M
+CONFIG_JOYSTICK_WARRIOR=M
+CONFIG_COMEDI_AIO_IIRO_16=M
+CONFIG_SENSORS_W83627EHF=M
+CONFIG_SENSORS_LM73=M
+CONFIG_VIA_VELOCITY=M
+CONFIG_SENSORS_PC87360=M
+CONFIG_KS8851=M
+CONFIG_MTD_JEDECPROBE=M
+CONFIG_DEPCA=M
+CONFIG_I2C_SCMI=M
+CONFIG_I2C_VIA=M
+CONFIG_INPUT_POLLDEV=M
+CONFIG_SND_INTEL8X0M=M
+CONFIG_RTC_DRV_BQ32K=M
+CONFIG_USB_GSPCA_PAC7311=M
+CONFIG_COMEDI_PCMAD=M
+CONFIG_USB_HWA_HCD=M
+CONFIG_MTD_CHAR=M
+CONFIG_SENSORS_LIS3LV02D=M
+CONFIG_INET_LRO=M
+CONFIG_FIREWIRE=M
+CONFIG_ATM=M
+CONFIG_SCSI_FC_ATTRS=M
+CONFIG_HID_UCLOGIC=M
+CONFIG_HW_RANDOM_VIRTIO=M
+CONFIG_COMEDI_PCMCIA_DRIVERS=M
+CONFIG_SND_SB_COMMON=M
+CONFIG_SND_CS46XX=M
+CONFIG_USB_GSPCA_STK014=M
+CONFIG_IP_VS_FTP=M
+CONFIG_VMWARE_PVSCSI=M
+CONFIG_I2C_PARPORT=M
+CONFIG_NETFILTER_XT_MATCH_PHYSDEV=M
+CONFIG_NOP_USB_XCEIV=M
+CONFIG_SND_VIA82XX=M
+CONFIG_SC520_WDT=M
+CONFIG_ISDN_DIVAS=M
+CONFIG_NFC_PN533=M
+CONFIG_DVB_USB_DIBUSB_MB=M
+CONFIG_HOTPLUG_PCI_IBM=M
+CONFIG_SND_DARLA20=M
+CONFIG_BLK_DEV_RAM=M
+CONFIG_TOUCHSCREEN_AD7879=M
+CONFIG_SENSORS_HDAPS=M
+CONFIG_NETFILTER_XT_MATCH_STATE=M
+CONFIG_DVB_L64781=M
+CONFIG_SND_INDIGOIOX=M
+CONFIG_SND_ASIHPI=M
+CONFIG_RTC_DRV_M48T35=M
+CONFIG_I2C_TAOS_EVM=M
+CONFIG_COMEDI_KCOMEDILIB=M
+CONFIG_FB_HGA=M
+CONFIG_USB_STORAGE_FREECOM=M
+CONFIG_SCSI_BUSLOGIC=M
+CONFIG_BRIDGE_EBT_LOG=M
+CONFIG_TOUCHSCREEN_ADS7846=M
+CONFIG_IR_RC5_DECODER=M
+CONFIG_FIREWIRE_NOSY=M
+CONFIG_NET_SCH_GRED=M
+CONFIG_MMC_VIA_SDMMC=M
+CONFIG_DRM=M
+CONFIG_INET6_XFRM_MODE_BEET=M
+CONFIG_PCF50633_GPIO=M
+CONFIG_IWL4965=M
+CONFIG_RTC_DRV_MAX6900=M
+CONFIG_ICS932S401=M
+CONFIG_SENSORS_MAX1111=M
+CONFIG_CRYPTO_DEV_PADLOCK_AES=M
+CONFIG_SAMSUNG_LAPTOP=M
+CONFIG_COMEDI_POC=M
+CONFIG_USB_USS720=M
+CONFIG_LEDS_DAC124S085=M
+CONFIG_SND_GUSCLASSIC=M
+CONFIG_FB_CFB_COPYAREA=Y
+CONFIG_USB_SISUSBVGA=M
+CONFIG_BRIDGE_EBT_STP=M
+CONFIG_RT73USB=M
+CONFIG_BRIDGE_EBT_ARP=M
+CONFIG_USB_CYTHERM=M
+CONFIG_IP6_NF_MATCH_EUI64=M
+CONFIG_MWIFIEX=M
+CONFIG_HP_ILO=M
+CONFIG_USB_STORAGE_JUMPSHOT=M
+CONFIG_SENSORS_MAX6642=M
+CONFIG_SND_GINA20=M
+CONFIG_VIDEOBUF_GEN=M
+CONFIG_MTD_CFI_AMDSTD=M
+CONFIG_DRM_VIA=M
+CONFIG_INPUT_SPARSEKMAP=M
+CONFIG_VIDEO_V4L2=M
+CONFIG_DVB_STV6110=M
+CONFIG_AC97_BUS=M
+CONFIG_HID_NTRIG=M
+CONFIG_DVB_USB_NOVA_T_USB2=M
+CONFIG_PATA_RDC=M
+CONFIG_SND_PORTMAN2X4=M
+CONFIG_SND_INDIGODJ=M
+CONFIG_SENSORS_W83L785TS=M
+CONFIG_DECOMPRESS_GZIP=Y
+CONFIG_SENSORS_EMC2103=M
+CONFIG_SND_AU8830=M
+CONFIG_VIRTIO_BLK=M
+CONFIG_SERIAL_8250_CS=M
+CONFIG_DECOMPRESS_LZO=Y
+CONFIG_USB_SERIAL_ARK3116=M
+CONFIG_SND_MIXART=M
+CONFIG_SND_BT87X=M
+CONFIG_DM9102=M
+CONFIG_COMEDI_NI_MIO_CS=M
+CONFIG_SND_AZT2316=M
+CONFIG_SENSORS_LINEAGE=M
+CONFIG_ABYSS=M
+CONFIG_CAN_EMS_PCMCIA=M
+CONFIG_VXGE=M
+CONFIG_PARIDE_PCD=M
+CONFIG_MMC_SDHCI_PLTFM=M
+CONFIG_I2C_CHARDEV=M
+CONFIG_W83697UG_WDT=M
+CONFIG_LLC=Y
+CONFIG_MTD_NAND_NANDSIM=M
+CONFIG_REGULATOR_MAX8649=M
+CONFIG_MEDIA_TUNER_TEA5761=M
+CONFIG_SC92031=M
+CONFIG_SND_TRIDENT=M
+CONFIG_IPDDP=M
+CONFIG_SND_RIPTIDE=M
+CONFIG_SND_CTXFI=M
+CONFIG_SERIAL_8250_FOURPORT=M
+CONFIG_RXKAD=M
+CONFIG_HID_HOLTEK=M
+CONFIG_MOUSE_LOGIBM=M
+CONFIG_SERIAL_8250_PCI=Y
+CONFIG_LIB80211_CRYPT_CCMP=M
+CONFIG_RTC_DRV_DS1672=M
+CONFIG_USB_SERIAL_SSU100=M
+CONFIG_ATALK=M
+CONFIG_MTD_SWAP=M
+CONFIG_SKFP=M
+CONFIG_6PACK=M
+CONFIG_NLS_UTF8=M
+CONFIG_VIDEO_TM6000_DVB=M
+CONFIG_JOYSTICK_XPAD=M
+CONFIG_NETFILTER_TPROXY=M
+CONFIG_BAYCOM_PAR=M
+CONFIG_CAN_DEV=M
+CONFIG_INPUT_YEALINK=M
+CONFIG_COMEDI_VMK80XX=M
+CONFIG_DVB_DIB3000MB=M
+CONFIG_SCSI_DTC3280=M
+CONFIG_ETH16I=M
+CONFIG_IWMC3200TOP=M
+CONFIG_SPEAKUP_SYNTH_SPKOUT=M
+CONFIG_RTC_DRV_M41T80=M
+CONFIG_VT6656=M
+CONFIG_USB_USBNET=M
+CONFIG_CB710_CORE=M
+CONFIG_USB_SERIAL_PL2303=M
+CONFIG_NET_ACT_POLICE=M
+CONFIG_INPUT_XEN_KBDDEV_FRONTEND=Y
+CONFIG_HOTPLUG_PCI_SHPC=M
+CONFIG_DVB_USB_CINERGY_T2=M
+CONFIG_COMEDI_ADDI_APCI_3XXX=M
+CONFIG_USB_MICROTEK=M
+CONFIG_PANASONIC_LAPTOP=M
+CONFIG_HID_SMARTJOYPLUS=M
+CONFIG_ATA_GENERIC=M
+CONFIG_I82365=M
+CONFIG_MTD_ONENAND=M
+CONFIG_MTD_TS5500=M
+CONFIG_RTC_DRV_DS1511=M
+CONFIG_ATM_FORE200E=M
+CONFIG_NET_SCH_HFSC=M
+CONFIG_SND_ISIGHT=M
+CONFIG_VIDEOBUF_DMA_SG=M
+CONFIG_MTD_NAND_DISKONCHIP=M
+CONFIG_MAC80211=M
+CONFIG_MEGARAID_MM=M
+CONFIG_CRC_CCITT=M
+CONFIG_DVB_TDA8261=M
+CONFIG_IGBVF=M
+CONFIG_BLK_DEV_SD=M
+CONFIG_NETFILTER_NETLINK=M
+CONFIG_VITESSE_PHY=M
+CONFIG_ELPLUS=M
+CONFIG_INFINIBAND_MTHCA=M
+CONFIG_SENSORS_MAX6650=M
+CONFIG_USB_GSPCA_BENQ=M
+CONFIG_REGULATOR_TPS65023=M
+CONFIG_SND_AC97_CODEC=M
+CONFIG_MOXA_SMARTIO=M
+CONFIG_DVB_USB_CXUSB=M
+CONFIG_RT2500PCI=M
+CONFIG_SENSORS_LM85=M
+CONFIG_AD525X_DPOT=M
+CONFIG_SND_ATIIXP=M
+CONFIG_COMEDI_PARPORT=M
+CONFIG_BITREVERSE=Y
+CONFIG_USB_SERIAL_WWAN=M
+CONFIG_SND_ICE1724=M
+CONFIG_CRYPTO_PCOMP=M
+CONFIG_MSI_LAPTOP=M
+CONFIG_COMEDI_DT2801=M
+CONFIG_VIDEO_V4L2_COMMON=M
+CONFIG_TOUCHSCREEN_DYNAPRO=M
+CONFIG_NLS_ISO8859_13=M
+CONFIG_MTD_MTDRAM=M
+CONFIG_BLK_DEV_SX8=M
+CONFIG_CRYPTO_BLKCIPHER=M
+CONFIG_USB_STORAGE_ONETOUCH=M
+CONFIG_NLS_ISO8859_8=M
+CONFIG_RT2400PCI=M
+CONFIG_NF_CONNTRACK=M
+CONFIG_COMEDI_GSC_HPDI=M
+CONFIG_COMEDI_NI_COMMON=M
+CONFIG_USB_GSPCA_XIRLINK_CIT=M
+CONFIG_RTC_DRV_STK17TA8=M
+CONFIG_USB_GSPCA_SN9C20X=M
+CONFIG_MTD_DOCECC=M
+CONFIG_FB_SM501=M
+CONFIG_SND_WAVEFRONT=M
+CONFIG_SPEAKUP_SYNTH_AUDPTR=M
+CONFIG_SENSORS_F71882FG=M
+CONFIG_FB_CARILLO_RANCH=M
+CONFIG_DVB_TDA8083=M
+CONFIG_BLK_DEV_DAC960=M
+CONFIG_IEEE802154_FAKEHARD=M
+CONFIG_REGULATOR_USERSPACE_CONSUMER=M
+CONFIG_IP_NF_TARGET_REJECT=M
+CONFIG_NET_SCH_CHOKE=M
+CONFIG_LEDS_CLASS=Y
+CONFIG_COMEDI_BOND=M
+CONFIG_DVB_USB_DIGITV=M
+CONFIG_IP6_NF_MATCH_HL=M
+CONFIG_BLK_CPQ_CISS_DA=M
+CONFIG_WINBOND_FIR=M
+CONFIG_COMEDI_NI_AT_AO=M
+CONFIG_IP6_NF_MATCH_OPTS=M
+CONFIG_APM=M
+CONFIG_DVB_USB_CE6230=M
+CONFIG_PARIDE_ATEN=M
+CONFIG_INFINIBAND_CXGB3=M
+CONFIG_USB_SERIAL_SYMBOL=M
+CONFIG_HERMES=M
+CONFIG_NETFILTER_XT_MATCH_OSF=M
+CONFIG_PROTEON=M
+CONFIG_SATA_QSTOR=M
+CONFIG_PATA_SIS=M
+CONFIG_SND_VIRMIDI=M
+CONFIG_LIB80211_CRYPT_TKIP=M
+CONFIG_QSEMI_PHY=M
+CONFIG_SND_OPTI92X_CS4231=M
+CONFIG_ACPI_CONTAINER=M
+CONFIG_NF_CT_PROTO_GRE=M
+CONFIG_NF_CT_NETLINK=M
+CONFIG_EFS_FS=M
+CONFIG_NET_EMATCH_TEXT=M
+CONFIG_X86_ACPI_CPUFREQ=M
+CONFIG_HID_WIIMOTE=M
+CONFIG_P54_SPI=M
+CONFIG_RDS_TCP=M
+CONFIG_CRYPTO_AEAD2=Y
+CONFIG_CRYPTO_FCRYPT=M
+CONFIG_PCMCIA_ATMEL=M
+CONFIG_NFC_NCI=M
+CONFIG_TOSHIBA_BT_RFKILL=M
+CONFIG_MOUSE_PS2=M
+CONFIG_NET_IPIP=M
+CONFIG_USB_SERIAL_IPAQ=M
+CONFIG_NETFILTER_XT_MATCH_HL=M
+CONFIG_CRYPTO_ALGAPI2=Y
+CONFIG_SATA_SIS=M
+CONFIG_NETFILTER_XT_TARGET_LED=M
+CONFIG_X86_LONGHAUL=M
+CONFIG_ACPI_SBS=M
+CONFIG_FB_3DFX=M
+CONFIG_INPUT=Y
+CONFIG_PCI200SYN=M
+CONFIG_PPPOATM=M
+CONFIG_PATA_OPTI=M
+CONFIG_NETFILTER_XT_TARGET_CT=M
+CONFIG_DVB_CX24123=M
+CONFIG_OCFS2_FS=M
+CONFIG_MTD_M25P80=M
+CONFIG_USB_KAWETH=M
+CONFIG_USB_SIERRA_NET=M
+CONFIG_VMWARE_BALLOON=M
+CONFIG_BRIDGE_EBT_NFLOG=M
+CONFIG_TABLET_USB_AIPTEK=M
+CONFIG_AGP=Y
+CONFIG_SENSORS_GL520SM=M
+CONFIG_E1000=M
diff -uprN ../linux-3.4.104-vanilla/include/generated/asm-offsets.h linux-3.4.104-syssec_hw2_app2/include/generated/asm-offsets.h
--- ../linux-3.4.104-vanilla/include/generated/asm-offsets.h	1969-12-31 19:00:00.000000000 -0500
+++ linux-3.4.104-syssec_hw2_app2/include/generated/asm-offsets.h	2014-11-12 22:38:33.000000000 -0500
@@ -0,0 +1,89 @@
+#ifndef __ASM_OFFSETS_H__
+#define __ASM_OFFSETS_H__
+/*
+ * DO NOT MODIFY.
+ *
+ * This file was generated by Kbuild
+ *
+ */
+
+#define IA32_SIGCONTEXT_ax 44 /* offsetof(struct sigcontext, ax)	# */
+#define IA32_SIGCONTEXT_bx 32 /* offsetof(struct sigcontext, bx)	# */
+#define IA32_SIGCONTEXT_cx 40 /* offsetof(struct sigcontext, cx)	# */
+#define IA32_SIGCONTEXT_dx 36 /* offsetof(struct sigcontext, dx)	# */
+#define IA32_SIGCONTEXT_si 20 /* offsetof(struct sigcontext, si)	# */
+#define IA32_SIGCONTEXT_di 16 /* offsetof(struct sigcontext, di)	# */
+#define IA32_SIGCONTEXT_bp 24 /* offsetof(struct sigcontext, bp)	# */
+#define IA32_SIGCONTEXT_sp 28 /* offsetof(struct sigcontext, sp)	# */
+#define IA32_SIGCONTEXT_ip 56 /* offsetof(struct sigcontext, ip)	# */
+
+#define CPUINFO_x86 0 /* offsetof(struct cpuinfo_x86, x86)	# */
+#define CPUINFO_x86_vendor 1 /* offsetof(struct cpuinfo_x86, x86_vendor)	# */
+#define CPUINFO_x86_model 2 /* offsetof(struct cpuinfo_x86, x86_model)	# */
+#define CPUINFO_x86_mask 3 /* offsetof(struct cpuinfo_x86, x86_mask)	# */
+#define CPUINFO_hard_math 6 /* offsetof(struct cpuinfo_x86, hard_math)	# */
+#define CPUINFO_cpuid_level 20 /* offsetof(struct cpuinfo_x86, cpuid_level)	# */
+#define CPUINFO_x86_capability 24 /* offsetof(struct cpuinfo_x86, x86_capability)	# */
+#define CPUINFO_x86_vendor_id 64 /* offsetof(struct cpuinfo_x86, x86_vendor_id)	# */
+
+#define TI_sysenter_return 60 /* offsetof(struct thread_info, sysenter_return)	# */
+#define TI_cpu 16 /* offsetof(struct thread_info, cpu)	# */
+
+#define PT_EBX 0 /* offsetof(struct pt_regs, bx)	# */
+#define PT_ECX 4 /* offsetof(struct pt_regs, cx)	# */
+#define PT_EDX 8 /* offsetof(struct pt_regs, dx)	# */
+#define PT_ESI 12 /* offsetof(struct pt_regs, si)	# */
+#define PT_EDI 16 /* offsetof(struct pt_regs, di)	# */
+#define PT_EBP 20 /* offsetof(struct pt_regs, bp)	# */
+#define PT_EAX 24 /* offsetof(struct pt_regs, ax)	# */
+#define PT_DS 28 /* offsetof(struct pt_regs, ds)	# */
+#define PT_ES 32 /* offsetof(struct pt_regs, es)	# */
+#define PT_FS 36 /* offsetof(struct pt_regs, fs)	# */
+#define PT_GS 40 /* offsetof(struct pt_regs, gs)	# */
+#define PT_ORIG_EAX 44 /* offsetof(struct pt_regs, orig_ax)	# */
+#define PT_EIP 48 /* offsetof(struct pt_regs, ip)	# */
+#define PT_CS 52 /* offsetof(struct pt_regs, cs)	# */
+#define PT_EFLAGS 56 /* offsetof(struct pt_regs, flags)	# */
+#define PT_OLDESP 60 /* offsetof(struct pt_regs, sp)	# */
+#define PT_OLDSS 64 /* offsetof(struct pt_regs, ss)	# */
+
+#define IA32_RT_SIGFRAME_sigcontext 164 /* offsetof(struct rt_sigframe, uc.uc_mcontext)	# */
+
+#define TSS_sysenter_sp0 -8572 /* offsetof(struct tss_struct, x86_tss.sp0) - sizeof(struct tss_struct)	# */
+
+#define __NR_syscall_max 349 /* sizeof(syscalls) - 1	# */
+#define NR_syscalls 350 /* sizeof(syscalls)	# */
+
+#define TI_flags 8 /* offsetof(struct thread_info, flags)	# */
+#define TI_status 12 /* offsetof(struct thread_info, status)	# */
+#define TI_addr_limit 24 /* offsetof(struct thread_info, addr_limit)	# */
+#define TI_preempt_count 20 /* offsetof(struct thread_info, preempt_count)	# */
+
+#define crypto_tfm_ctx_offset 48 /* offsetof(struct crypto_tfm, __crt_ctx)	# */
+
+#define pbe_address 0 /* offsetof(struct pbe, address)	# */
+#define pbe_orig_address 4 /* offsetof(struct pbe, orig_address)	# */
+#define pbe_next 8 /* offsetof(struct pbe, next)	# */
+
+#define PARAVIRT_enabled 8 /* offsetof(struct pv_info, paravirt_enabled)	# */
+#define PARAVIRT_PATCH_pv_cpu_ops 16 /* offsetof(struct paravirt_patch_template, pv_cpu_ops)	# */
+#define PARAVIRT_PATCH_pv_irq_ops 176 /* offsetof(struct paravirt_patch_template, pv_irq_ops)	# */
+#define PV_IRQ_irq_disable 8 /* offsetof(struct pv_irq_ops, irq_disable)	# */
+#define PV_IRQ_irq_enable 12 /* offsetof(struct pv_irq_ops, irq_enable)	# */
+#define PV_CPU_iret 144 /* offsetof(struct pv_cpu_ops, iret)	# */
+#define PV_CPU_irq_enable_sysexit 132 /* offsetof(struct pv_cpu_ops, irq_enable_sysexit)	# */
+#define PV_CPU_read_cr0 12 /* offsetof(struct pv_cpu_ops, read_cr0)	# */
+#define PV_MMU_read_cr2 0 /* offsetof(struct pv_mmu_ops, read_cr2)	# */
+
+#define XEN_vcpu_info_mask 1 /* offsetof(struct vcpu_info, evtchn_upcall_mask)	# */
+#define XEN_vcpu_info_pending 0 /* offsetof(struct vcpu_info, evtchn_upcall_pending)	# */
+
+#define BP_scratch 484 /* offsetof(struct boot_params, scratch)	# */
+#define BP_loadflags 529 /* offsetof(struct boot_params, hdr.loadflags)	# */
+#define BP_hardware_subarch 572 /* offsetof(struct boot_params, hdr.hardware_subarch)	# */
+#define BP_version 518 /* offsetof(struct boot_params, hdr.version)	# */
+#define BP_kernel_alignment 560 /* offsetof(struct boot_params, hdr.kernel_alignment)	# */
+#define BP_pref_address 600 /* offsetof(struct boot_params, hdr.pref_address)	# */
+#define BP_code32_start 532 /* offsetof(struct boot_params, hdr.code32_start)	# */
+
+#endif
diff -uprN ../linux-3.4.104-vanilla/include/generated/autoconf.h linux-3.4.104-syssec_hw2_app2/include/generated/autoconf.h
--- ../linux-3.4.104-vanilla/include/generated/autoconf.h	1969-12-31 19:00:00.000000000 -0500
+++ linux-3.4.104-syssec_hw2_app2/include/generated/autoconf.h	2014-11-05 22:14:12.000000000 -0500
@@ -0,0 +1,4142 @@
+/*
+ *
+ * Automatically generated file; DO NOT EDIT.
+ * Linux/i386 3.4.104 Kernel Configuration
+ *
+ */
+#define CONFIG_IP6_NF_MATCH_AH_MODULE 1
+#define CONFIG_NLS_CODEPAGE_861_MODULE 1
+#define CONFIG_RING_BUFFER 1
+#define CONFIG_UWB_HWA_MODULE 1
+#define CONFIG_NF_CONNTRACK_H323_MODULE 1
+#define CONFIG_IP6_NF_SECURITY_MODULE 1
+#define CONFIG_SCSI_DMA 1
+#define CONFIG_INTEL_IDLE 1
+#define CONFIG_TCP_MD5SIG 1
+#define CONFIG_KERNEL_GZIP 1
+#define CONFIG_MICROCODE_MODULE 1
+#define CONFIG_ATM_ENI_MODULE 1
+#define CONFIG_TOUCHSCREEN_INEXIO_MODULE 1
+#define CONFIG_3C359_MODULE 1
+#define CONFIG_NEED_PER_CPU_EMBED_FIRST_CHUNK 1
+#define CONFIG_TOUCHSCREEN_WM9705 1
+#define CONFIG_INPUT_KEYBOARD 1
+#define CONFIG_SENSORS_ABITUGURU_MODULE 1
+#define CONFIG_USB_C67X00_HCD_MODULE 1
+#define CONFIG_RFS_ACCEL 1
+#define CONFIG_COMEDI_TEST_MODULE 1
+#define CONFIG_TI_DAC7512_MODULE 1
+#define CONFIG_IP_NF_TARGET_REDIRECT_MODULE 1
+#define CONFIG_SERIO_ALTERA_PS2_MODULE 1
+#define CONFIG_DRM_GMA500_MODULE 1
+#define CONFIG_CRC32 1
+#define CONFIG_I2C_BOARDINFO 1
+#define CONFIG_SPEAKUP_SYNTH_LTLK_MODULE 1
+#define CONFIG_NF_NAT_PROTO_SCTP_MODULE 1
+#define CONFIG_HAVE_AOUT 1
+#define CONFIG_USB_ALI_M5632 1
+#define CONFIG_DM_SNAPSHOT_MODULE 1
+#define CONFIG_SCSI_DC390T_MODULE 1
+#define CONFIG_IR_JVC_DECODER_MODULE 1
+#define CONFIG_X86_MCE 1
+#define CONFIG_SND_ES18XX_MODULE 1
+#define CONFIG_PCMCIA_QLOGIC_MODULE 1
+#define CONFIG_DRM_NOUVEAU_MODULE 1
+#define CONFIG_FSCACHE_MODULE 1
+#define CONFIG_COMEDI_USBDUX_MODULE 1
+#define CONFIG_PARPORT_NOT_PC 1
+#define CONFIG_NETFILTER_XT_MATCH_CPU_MODULE 1
+#define CONFIG_B43_BCMA_PIO 1
+#define CONFIG_MTD_DOCPROBE_ADDRESS 0x0
+#define CONFIG_SENSORS_MAX1668_MODULE 1
+#define CONFIG_EXT3_FS_XATTR 1
+#define CONFIG_FB_TILEBLITTING 1
+#define CONFIG_IR_MCE_KBD_DECODER_MODULE 1
+#define CONFIG_IXGBE_DCB 1
+#define CONFIG_CPU_FREQ_GOV_CONSERVATIVE_MODULE 1
+#define CONFIG_SECCOMP 1
+#define CONFIG_HIGH_RES_TIMERS 1
+#define CONFIG_PCMCIA_AXNET_MODULE 1
+#define CONFIG_SPI_TOPCLIFF_PCH_MODULE 1
+#define CONFIG_SECURITY_TOMOYO_MAX_AUDIT_LOG 1024
+#define CONFIG_BLK_DEV_DM_MODULE 1
+#define CONFIG_R3964_MODULE 1
+#define CONFIG_USB_SERIAL_HP4X_MODULE 1
+#define CONFIG_VLAN_8021Q_MODULE 1
+#define CONFIG_IP_MULTIPLE_TABLES 1
+#define CONFIG_MTRR_SANITIZER_SPARE_REG_NR_DEFAULT 1
+#define CONFIG_HOTPLUG_PCI_FAKE_MODULE 1
+#define CONFIG_MTD_NETSC520_MODULE 1
+#define CONFIG_XEN_DOM0 1
+#define CONFIG_FIRMWARE_MEMMAP 1
+#define CONFIG_SSB_SDIOHOST 1
+#define CONFIG_FIX_EARLYCON_MEM 1
+#define CONFIG_BT_RFCOMM_MODULE 1
+#define CONFIG_MTD_DOC2001_MODULE 1
+#define CONFIG_LEDS_TRIGGER_HEARTBEAT_MODULE 1
+#define CONFIG_EXT3_DEFAULTS_TO_ORDERED 1
+#define CONFIG_DEV_APPLETALK_MODULE 1
+#define CONFIG_SCSI_INITIO_MODULE 1
+#define CONFIG_DVB_TDA1004X_MODULE 1
+#define CONFIG_XZ_DEC_IA64 1
+#define CONFIG_JOYSTICK_ADI_MODULE 1
+#define CONFIG_DVB_BCM3510_MODULE 1
+#define CONFIG_INOTIFY_USER 1
+#define CONFIG_SECURITY_NETWORK_XFRM 1
+#define CONFIG_NF_CONNTRACK_NETBIOS_NS_MODULE 1
+#define CONFIG_SCSI_DH_MODULE 1
+#define CONFIG_SCSI_LOGGING 1
+#define CONFIG_FB_CYBER2000_DDC 1
+#define CONFIG_HIPPI 1
+#define CONFIG_BRIDGE_EBT_T_FILTER_MODULE 1
+#define CONFIG_NETWORK_FILESYSTEMS 1
+#define CONFIG_MODULE_FORCE_UNLOAD 1
+#define CONFIG_JOYSTICK_IFORCE_232 1
+#define CONFIG_CRYPTO_FIPS 1
+#define CONFIG_KVM_INTEL_MODULE 1
+#define CONFIG_ASUS_LAPTOP_MODULE 1
+#define CONFIG_CRYPTO_MD4_MODULE 1
+#define CONFIG_BCMA_HOST_PCI 1
+#define CONFIG_SCSI_AHA152X_MODULE 1
+#define CONFIG_USB_SI470X_MODULE 1
+#define CONFIG_X86_MINIMUM_CPU_FAMILY 5
+#define CONFIG_SCSI_BFA_FC_MODULE 1
+#define CONFIG_CPU_FREQ_GOV_ONDEMAND 1
+#define CONFIG_SENSORS_LM95245_MODULE 1
+#define CONFIG_BLK_DEV_XD_MODULE 1
+#define CONFIG_BT_HCIBFUSB_MODULE 1
+#define CONFIG_PLX_HERMES_MODULE 1
+#define CONFIG_EXPERIMENTAL 1
+#define CONFIG_CGROUP_DEVICE 1
+#define CONFIG_WL12XX_MODULE 1
+#define CONFIG_X86_TSC 1
+#define CONFIG_PPP_SYNC_TTY_MODULE 1
+#define CONFIG_ARCH_SUSPEND_POSSIBLE 1
+#define CONFIG_NCPFS_PACKET_SIGNING 1
+#define CONFIG_INLINE_WRITE_UNLOCK_IRQ 1
+#define CONFIG_RC_CORE_MODULE 1
+#define CONFIG_LEDS_PCA955X_MODULE 1
+#define CONFIG_IP_VS_NQ_MODULE 1
+#define CONFIG_DVB_DRXD_MODULE 1
+#define CONFIG_SENSORS_LTC4245_MODULE 1
+#define CONFIG_HID_SPEEDLINK_MODULE 1
+#define CONFIG_SPEAKUP_SYNTH_APOLLO_MODULE 1
+#define CONFIG_HIBERNATION 1
+#define CONFIG_BLK_DEV_NBD_MODULE 1
+#define CONFIG_PNPACPI 1
+#define CONFIG_USB_SERIAL_NAVMAN_MODULE 1
+#define CONFIG_JOYSTICK_SPACEORB_MODULE 1
+#define CONFIG_EDAC_I5400_MODULE 1
+#define CONFIG_TCP_CONG_HTCP_MODULE 1
+#define CONFIG_EXT4_FS_POSIX_ACL 1
+#define CONFIG_SCSI_DEBUG_MODULE 1
+#define CONFIG_DRM_I915_MODULE 1
+#define CONFIG_BINFMT_MISC_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_HELPER_MODULE 1
+#define CONFIG_SSB_POSSIBLE 1
+#define CONFIG_BRIDGE_EBT_T_NAT_MODULE 1
+#define CONFIG_NF_NAT_SIP_MODULE 1
+#define CONFIG_SENSORS_W83792D_MODULE 1
+#define CONFIG_MMU_NOTIFIER 1
+#define CONFIG_NET_9P_RDMA_MODULE 1
+#define CONFIG_TRANSPARENT_HUGEPAGE_MADVISE 1
+#define CONFIG_DRM_RADEON_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_STATISTIC_MODULE 1
+#define CONFIG_COMEDI_NI_PCIMIO_MODULE 1
+#define CONFIG_COMEDI_ADDI_APCI_1032_MODULE 1
+#define CONFIG_NLS_CODEPAGE_855_MODULE 1
+#define CONFIG_ESI_DONGLE_MODULE 1
+#define CONFIG_NETCONSOLE_DYNAMIC 1
+#define CONFIG_EDAC_I5100_MODULE 1
+#define CONFIG_DVB_EC100_MODULE 1
+#define CONFIG_USB_SERIAL_EDGEPORT_TI_MODULE 1
+#define CONFIG_RTC_DRV_PCF50633_MODULE 1
+#define CONFIG_HDLC_RAW_MODULE 1
+#define CONFIG_B43LEGACY_LEDS 1
+#define CONFIG_USB_SERIAL_SAFE_MODULE 1
+#define CONFIG_BRIDGE_NF_EBTABLES_MODULE 1
+#define CONFIG_PATA_ARASAN_CF_MODULE 1
+#define CONFIG_USB_OHCI_LITTLE_ENDIAN 1
+#define CONFIG_NET_SCH_FIFO 1
+#define CONFIG_REISERFS_FS_MODULE 1
+#define CONFIG_SATA_NV_MODULE 1
+#define CONFIG_FSNOTIFY 1
+#define CONFIG_CRYPTO_RMD128_MODULE 1
+#define CONFIG_BLK_DEV_LOOP_MIN_COUNT 8
+#define CONFIG_STP_MODULE 1
+#define CONFIG_USB_GSPCA_SQ905_MODULE 1
+#define CONFIG_ARCH_FLATMEM_ENABLE 1
+#define CONFIG_INET6_TUNNEL_MODULE 1
+#define CONFIG_VIA_FIR_MODULE 1
+#define CONFIG_SCSI_DC395x_MODULE 1
+#define CONFIG_DVB_M88RS2000_MODULE 1
+#define CONFIG_NF_CONNTRACK_SIP_MODULE 1
+#define CONFIG_MEDIA_ATTACH 1
+#define CONFIG_SND_NM256_MODULE 1
+#define CONFIG_USB_SUSPEND 1
+#define CONFIG_HIDRAW 1
+#define CONFIG_SENSORS_ADM1025_MODULE 1
+#define CONFIG_KSDAZZLE_DONGLE_MODULE 1
+#define CONFIG_HAVE_KERNEL_LZMA 1
+#define CONFIG_HID_PRODIKEYS_MODULE 1
+#define CONFIG_I2O_PROC_MODULE 1
+#define CONFIG_IP_NF_QUEUE_MODULE 1
+#define CONFIG_RT2X00_LIB_LEDS 1
+#define CONFIG_SDLA_MODULE 1
+#define CONFIG_IP_VS_SED_MODULE 1
+#define CONFIG_DVB_DS3000_MODULE 1
+#define CONFIG_FB_S1D13XXX_MODULE 1
+#define CONFIG_MTD_SST25L_MODULE 1
+#define CONFIG_REGULATOR_LP3971_MODULE 1
+#define CONFIG_DM_FLAKEY_MODULE 1
+#define CONFIG_MACVTAP_MODULE 1
+#define CONFIG_LEDS_REGULATOR_MODULE 1
+#define CONFIG_CHELSIO_T4VF_MODULE 1
+#define CONFIG_HAVE_MEMORY_PRESENT 1
+#define CONFIG_USB_SERIAL_FTDI_SIO_MODULE 1
+#define CONFIG_BRIDGE_EBT_REDIRECT_MODULE 1
+#define CONFIG_XEN_COMPAT_XENFS 1
+#define CONFIG_DEFAULT_SECURITY_DAC 1
+#define CONFIG_8139CP_MODULE 1
+#define CONFIG_SERIAL_8250_RSA 1
+#define CONFIG_FIB_RULES 1
+#define CONFIG_HID_ACRUX_FF 1
+#define CONFIG_DVB_FIREDTV_INPUT 1
+#define CONFIG_SND_ES1968_INPUT 1
+#define CONFIG_IP_VS_NFCT 1
+#define CONFIG_HID_EMS_FF_MODULE 1
+#define CONFIG_KTIME_SCALAR 1
+#define CONFIG_COMEDI_ADDI_APCI_16XX_MODULE 1
+#define CONFIG_VLAN_8021Q_GVRP 1
+#define CONFIG_IP_SET_HASH_NETIFACE_MODULE 1
+#define CONFIG_IP6_NF_MANGLE_MODULE 1
+#define CONFIG_MTD_PLATRAM_MODULE 1
+#define CONFIG_SCSI_CONSTANTS 1
+#define CONFIG_BT_MRVL_SDIO_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_REALM_MODULE 1
+#define CONFIG_BRIDGE_EBT_ULOG_MODULE 1
+#define CONFIG_BT_HCIBPA10X_MODULE 1
+#define CONFIG_MEGARAID_NEWGEN 1
+#define CONFIG_SQUASHFS_XATTR 1
+#define CONFIG_IP_VS_RR_MODULE 1
+#define CONFIG_IPV6 1
+#define CONFIG_USB_SERIAL_QUALCOMM_MODULE 1
+#define CONFIG_FB_I810_I2C 1
+#define CONFIG_NET_9P_MODULE 1
+#define CONFIG_CRYPTO_AEAD_MODULE 1
+#define CONFIG_FB_HECUBA_MODULE 1
+#define CONFIG_BQL 1
+#define CONFIG_INPUT_MOUSEDEV_PSAUX 1
+#define CONFIG_HAVE_KERNEL_BZIP2 1
+#define CONFIG_COMEDI_ADDI_APCI_3501_MODULE 1
+#define CONFIG_DEFAULT_TCP_CONG "cubic"
+#define CONFIG_MDA_CONSOLE_MODULE 1
+#define CONFIG_UEVENT_HELPER_PATH ""
+#define CONFIG_USB_DEVICEFS 1
+#define CONFIG_DEVTMPFS 1
+#define CONFIG_NET_CLS_FLOW_MODULE 1
+#define CONFIG_SENSORS_PC87427_MODULE 1
+#define CONFIG_PNFS_FILE_LAYOUT_MODULE 1
+#define CONFIG_I82092_MODULE 1
+#define CONFIG_SCSI_PMCRAID_MODULE 1
+#define CONFIG_DVB_ISL6423_MODULE 1
+#define CONFIG_FB_S3_DDC 1
+#define CONFIG_PATA_SC1200_MODULE 1
+#define CONFIG_USB_STORAGE_USBAT_MODULE 1
+#define CONFIG_REISERFS_FS_POSIX_ACL 1
+#define CONFIG_INFINIBAND_USER_MEM 1
+#define CONFIG_CRYPTO_SALSA20_586_MODULE 1
+#define CONFIG_NF_NAT_PROTO_GRE_MODULE 1
+#define CONFIG_YENTA_RICOH 1
+#define CONFIG_SUNRPC_BACKCHANNEL 1
+#define CONFIG_NLS_ISO8859_7_MODULE 1
+#define CONFIG_CRYPTO_PCBC_MODULE 1
+#define CONFIG_IP6_NF_TARGET_REJECT_MODULE 1
+#define CONFIG_SND_HDA_INPUT_JACK 1
+#define CONFIG_COMEDI_PCL812_MODULE 1
+#define CONFIG_ASYNC_MEMCPY_MODULE 1
+#define CONFIG_PCH_PHUB_MODULE 1
+#define CONFIG_ZNET_MODULE 1
+#define CONFIG_X86_POWERNOW_K8_MODULE 1
+#define CONFIG_ARCH_SPARSEMEM_ENABLE 1
+#define CONFIG_SC1200_WDT_MODULE 1
+#define CONFIG_DCDBAS_MODULE 1
+#define CONFIG_RTC_DRV_DS1305_MODULE 1
+#define CONFIG_IR_NEC_DECODER_MODULE 1
+#define CONFIG_HOTPLUG_CPU 1
+#define CONFIG_USB_SERIAL_MOS7840_MODULE 1
+#define CONFIG_SND_MAESTRO3_INPUT 1
+#define CONFIG_WLAN 1
+#define CONFIG_AFFS_FS_MODULE 1
+#define CONFIG_COMEDI_ADDI_APCI_1516_MODULE 1
+#define CONFIG_ATM_FIRESTREAM_MODULE 1
+#define CONFIG_NAMESPACES 1
+#define CONFIG_L2TP_DEBUGFS_MODULE 1
+#define CONFIG_HAVE_CMPXCHG_DOUBLE 1
+#define CONFIG_NSC_FIR_MODULE 1
+#define CONFIG_USB_NET_INT51X1_MODULE 1
+#define CONFIG_INET6_XFRM_MODE_ROUTEOPTIMIZATION_MODULE 1
+#define CONFIG_DEFAULT_MESSAGE_LOGLEVEL 4
+#define CONFIG_PATA_ATP867X_MODULE 1
+#define CONFIG_X86_GENERIC 1
+#define CONFIG_SFI 1
+#define CONFIG_FRAMEBUFFER_CONSOLE_DETECT_PRIMARY 1
+#define CONFIG_COMEDI_CONTEC_PCI_DIO_MODULE 1
+#define CONFIG_BLK_DEV_BSG 1
+#define CONFIG_ENIC_MODULE 1
+#define CONFIG_AIC79XX_DEBUG_ENABLE 1
+#define CONFIG_SCSI_ISCI_MODULE 1
+#define CONFIG_PATA_SERVERWORKS_MODULE 1
+#define CONFIG_CONNECTOR 1
+#define CONFIG_COMEDI_DAS16M1_MODULE 1
+#define CONFIG_NETFILTER_XT_TARGET_RATEEST_MODULE 1
+#define CONFIG_PCIEAER 1
+#define CONFIG_EPIC100_MODULE 1
+#define CONFIG_BRIDGE_EBT_ARPREPLY_MODULE 1
+#define CONFIG_BACKLIGHT_APPLE_MODULE 1
+#define CONFIG_B43LEGACY_DMA_AND_PIO_MODE 1
+#define CONFIG_PARIDE_MODULE 1
+#define CONFIG_SND_SBAWE_SEQ_MODULE 1
+#define CONFIG_DVB_MAX_ADAPTERS 8
+#define CONFIG_SENSORS_SIS5595_MODULE 1
+#define CONFIG_DM_MULTIPATH_QL_MODULE 1
+#define CONFIG_LIBERTAS_USB_MODULE 1
+#define CONFIG_JFS_FS_MODULE 1
+#define CONFIG_CAN_EMS_USB_MODULE 1
+#define CONFIG_XFRM_IPCOMP_MODULE 1
+#define CONFIG_CRYPTO_RNG2 1
+#define CONFIG_UIO_CIF_MODULE 1
+#define CONFIG_USB_PWC_INPUT_EVDEV 1
+#define CONFIG_FUSION_FC_MODULE 1
+#define CONFIG_NETFILTER_NETLINK_QUEUE_MODULE 1
+#define CONFIG_NET_ACT_CSUM_MODULE 1
+#define CONFIG_NFTL_RW 1
+#define CONFIG_MSDOS_FS_MODULE 1
+#define CONFIG_COMEDI_DT2811_MODULE 1
+#define CONFIG_FB_VGA16_MODULE 1
+#define CONFIG_NET_CLS_CGROUP 1
+#define CONFIG_XEN_MAX_DOMAIN_MEMORY 64
+#define CONFIG_TUN_MODULE 1
+#define CONFIG_USB_OTG_UTILS 1
+#define CONFIG_USB_GSPCA_SUNPLUS_MODULE 1
+#define CONFIG_COMEDI_DAS6402_MODULE 1
+#define CONFIG_ATM_IDT77252_MODULE 1
+#define CONFIG_ENCLOSURE_SERVICES_MODULE 1
+#define CONFIG_IPV6_PIMSM_V2 1
+#define CONFIG_ISDN_DRV_AVMB1_T1ISA_MODULE 1
+#define CONFIG_SENSORS_ADS1015_MODULE 1
+#define CONFIG_WL12XX_PLATFORM_DATA 1
+#define CONFIG_BNX2_MODULE 1
+#define CONFIG_CAN_MODULE 1
+#define CONFIG_SND_VX222_MODULE 1
+#define CONFIG_CFG80211_MODULE 1
+#define CONFIG_SSB_BLOCKIO 1
+#define CONFIG_MTD_BLOCK_RO_MODULE 1
+#define CONFIG_EQUALIZER_MODULE 1
+#define CONFIG_COMEDI_JR3_PCI_MODULE 1
+#define CONFIG_SND_AU8810_MODULE 1
+#define CONFIG_TIPC_LOG 0
+#define CONFIG_NLS_CODEPAGE_1250_MODULE 1
+#define CONFIG_COMEDI_NI_6527_MODULE 1
+#define CONFIG_DM_CRYPT_MODULE 1
+#define CONFIG_SERIAL_8250 1
+#define CONFIG_NCP_FS_MODULE 1
+#define CONFIG_XEN_GNTDEV_MODULE 1
+#define CONFIG_SENSORS_W83793_MODULE 1
+#define CONFIG_B43LEGACY_PIO 1
+#define CONFIG_LZO_DECOMPRESS 1
+#define CONFIG_USB_EHCI_ROOT_HUB_TT 1
+#define CONFIG_LIBERTAS_THINFIRM_MODULE 1
+#define CONFIG_IP_VS_PROTO_AH 1
+#define CONFIG_EXOFS_FS_MODULE 1
+#define CONFIG_IOMMU_SUPPORT 1
+#define CONFIG_HID_BELKIN_MODULE 1
+#define CONFIG_VIDEO_IR_I2C_MODULE 1
+#define CONFIG_TIPC_PORTS 8191
+#define CONFIG_NLS_CODEPAGE_862_MODULE 1
+#define CONFIG_IWM_MODULE 1
+#define CONFIG_NFSD_MODULE 1
+#define CONFIG_ISDN_DRV_AVMB1_C4_MODULE 1
+#define CONFIG_SENSORS_TSL2550_MODULE 1
+#define CONFIG_TMS380TR_MODULE 1
+#define CONFIG_PATA_MPIIX_MODULE 1
+#define CONFIG_USB_SERIAL_OPTION_MODULE 1
+#define CONFIG_HID_ACRUX_MODULE 1
+#define CONFIG_RD_LZMA 1
+#define CONFIG_SBC7240_WDT_MODULE 1
+#define CONFIG_USB_GSPCA_SE401_MODULE 1
+#define CONFIG_CRYPTO_SALSA20_MODULE 1
+#define CONFIG_USB_MODULE 1
+#define CONFIG_PATA_SIL680_MODULE 1
+#define CONFIG_ACPI_IPMI_MODULE 1
+#define CONFIG_SND_OPL3SA2_MODULE 1
+#define CONFIG_MMC_SDHCI_PCI_MODULE 1
+#define CONFIG_USB_SPEEDTOUCH_MODULE 1
+#define CONFIG_NEED_PER_CPU_PAGE_FIRST_CHUNK 1
+#define CONFIG_ALIM7101_WDT_MODULE 1
+#define CONFIG_ACPI_PCI_SLOT_MODULE 1
+#define CONFIG_BTREE 1
+#define CONFIG_CRYPTO_HMAC_MODULE 1
+#define CONFIG_ETHERNET 1
+#define CONFIG_AGP_ATI 1
+#define CONFIG_JFFS2_LZO 1
+#define CONFIG_FRAMEBUFFER_CONSOLE_ROTATION 1
+#define CONFIG_USB_GSPCA_JEILINJ_MODULE 1
+#define CONFIG_SCHED_OMIT_FRAME_POINTER 1
+#define CONFIG_BRANCH_PROFILE_NONE 1
+#define CONFIG_SCSI_SCAN_ASYNC 1
+#define CONFIG_CRC_ITU_T_MODULE 1
+#define CONFIG_NET_DROP_MONITOR 1
+#define CONFIG_SND_HRTIMER_MODULE 1
+#define CONFIG_ALI_FIR_MODULE 1
+#define CONFIG_DQL 1
+#define CONFIG_PARPORT_PC_PCMCIA_MODULE 1
+#define CONFIG_FRAMEBUFFER_CONSOLE 1
+#define CONFIG_NET_DCCPPROBE_MODULE 1
+#define CONFIG_DM_ZERO_MODULE 1
+#define CONFIG_DVB_DIB8000_MODULE 1
+#define CONFIG_SBC8360_WDT_MODULE 1
+#define CONFIG_SND_SEQUENCER_MODULE 1
+#define CONFIG_TCP_CONG_LP_MODULE 1
+#define CONFIG_GAMEPORT_EMU10K1_MODULE 1
+#define CONFIG_WL1251_SPI_MODULE 1
+#define CONFIG_USB_NET_GL620A_MODULE 1
+#define CONFIG_COMEDI_ADDI_APCI_1500_MODULE 1
+#define CONFIG_SND_OPL3_LIB_MODULE 1
+#define CONFIG_B43_SDIO 1
+#define CONFIG_IP_NF_ARPTABLES_MODULE 1
+#define CONFIG_COMEDI_AMPLC_PC263_MODULE 1
+#define CONFIG_DVB_USB_GP8PSK_MODULE 1
+#define CONFIG_USB_SERIAL_GENERIC 1
+#define CONFIG_HID_CHERRY_MODULE 1
+#define CONFIG_XEN_PRIVILEGED_GUEST 1
+#define CONFIG_PC87413_WDT_MODULE 1
+#define CONFIG_JFFS2_COMPRESSION_OPTIONS 1
+#define CONFIG_BATTERY_MAX17040_MODULE 1
+#define CONFIG_ACCESSIBILITY 1
+#define CONFIG_MKISS_MODULE 1
+#define CONFIG_HID_SUNPLUS_MODULE 1
+#define CONFIG_KSZ884X_PCI_MODULE 1
+#define CONFIG_HID_PICOLCD_MODULE 1
+#define CONFIG_BCMA_POSSIBLE 1
+#define CONFIG_NET_SCH_SFB_MODULE 1
+#define CONFIG_NET_VENDOR_CIRRUS 1
+#define CONFIG_FUSION_CTL_MODULE 1
+#define CONFIG_TULIP_MODULE 1
+#define CONFIG_AF_RXRPC_MODULE 1
+#define CONFIG_CIFS_ACL 1
+#define CONFIG_ZRAM_MODULE 1
+#define CONFIG_CRYPTO_CAST5_MODULE 1
+#define CONFIG_VGA_ARB 1
+#define CONFIG_SENSORS_CORETEMP_MODULE 1
+#define CONFIG_PARIDE_FIT2_MODULE 1
+#define CONFIG_CAN_PM_TRACE 1
+#define CONFIG_FIREWIRE_SBP2_MODULE 1
+#define CONFIG_SECURITY_TOMOYO_POLICY_LOADER "/sbin/tomoyo-init"
+#define CONFIG_NET_IPGRE_DEMUX_MODULE 1
+#define CONFIG_COMEDI_MULTIQ3_MODULE 1
+#define CONFIG_MEDIA_TUNER_XC5000_MODULE 1
+#define CONFIG_NET_POLL_CONTROLLER 1
+#define CONFIG_PRINTK 1
+#define CONFIG_NCPFS_EXTRAS 1
+#define CONFIG_SPEAKUP_SYNTH_BNS_MODULE 1
+#define CONFIG_EDAC_I82875P_MODULE 1
+#define CONFIG_SFC_MODULE 1
+#define CONFIG_PHANTOM_MODULE 1
+#define CONFIG_FORCEDETH_MODULE 1
+#define CONFIG_COMEDI_DAS08_CS_MODULE 1
+#define CONFIG_FB_SYS_FILLRECT 1
+#define CONFIG_TIMERFD 1
+#define CONFIG_HID_THRUSTMASTER_MODULE 1
+#define CONFIG_CAN_TSCAN1_MODULE 1
+#define CONFIG_USB_DYNAMIC_MINORS 1
+#define CONFIG_SENSORS_MAX16065_MODULE 1
+#define CONFIG_SENSORS_I5K_AMB_MODULE 1
+#define CONFIG_DNS_RESOLVER 1
+#define CONFIG_INPUT_WISTRON_BTNS_MODULE 1
+#define CONFIG_ITCO_VENDOR_SUPPORT 1
+#define CONFIG_TRACEPOINTS 1
+#define CONFIG_B43_PHY_LP 1
+#define CONFIG_MTD_CFI_I2 1
+#define CONFIG_CRYPTO_AUTHENC_MODULE 1
+#define CONFIG_DVB_SP8870_MODULE 1
+#define CONFIG_I6300ESB_WDT_MODULE 1
+#define CONFIG_GPIO_ML_IOH_MODULE 1
+#define CONFIG_YENTA_MODULE 1
+#define CONFIG_W1_MASTER_DS2482_MODULE 1
+#define CONFIG_COMEDI_SERIAL2002_MODULE 1
+#define CONFIG_JOYSTICK_SIDEWINDER_MODULE 1
+#define CONFIG_NET_EMATCH_STACK 32
+#define CONFIG_CARL9170_LEDS 1
+#define CONFIG_ATL1E_MODULE 1
+#define CONFIG_USB_STORAGE_ENE_UB6250_MODULE 1
+#define CONFIG_DVB_DDBRIDGE_MODULE 1
+#define CONFIG_IRDA_MODULE 1
+#define CONFIG_BOUNCE 1
+#define CONFIG_RDS_RDMA_MODULE 1
+#define CONFIG_THINKPAD_ACPI_MODULE 1
+#define CONFIG_P54_COMMON_MODULE 1
+#define CONFIG_SHMEM 1
+#define CONFIG_MTD_MODULE 1
+#define CONFIG_MIGRATION 1
+#define CONFIG_HAVE_ARCH_JUMP_LABEL 1
+#define CONFIG_COMEDI_C6XDIGIO_MODULE 1
+#define CONFIG_MMC_BLOCK_MINORS 8
+#define CONFIG_USB_HSO_MODULE 1
+#define CONFIG_HID_PRIMAX_MODULE 1
+#define CONFIG_DECOMPRESS_LZMA 1
+#define CONFIG_PCI_IOV 1
+#define CONFIG_HAVE_KVM_EVENTFD 1
+#define CONFIG_N2_MODULE 1
+#define CONFIG_SENSORS_AMC6821_MODULE 1
+#define CONFIG_USB_IPHETH_MODULE 1
+#define CONFIG_NLS_CODEPAGE_850_MODULE 1
+#define CONFIG_DVB_CX22700_MODULE 1
+#define CONFIG_DNOTIFY 1
+#define CONFIG_COMEDI_DAS800_MODULE 1
+#define CONFIG_CRYPTO_CTS_MODULE 1
+#define CONFIG_EDD_MODULE 1
+#define CONFIG_DVB_USB_UMT_010_MODULE 1
+#define CONFIG_SUNGEM_PHY_MODULE 1
+#define CONFIG_JOYSTICK_DB9_MODULE 1
+#define CONFIG_RTC_DRV_R9701_MODULE 1
+#define CONFIG_INPUT_MOUSEDEV 1
+#define CONFIG_FB_RADEON_BACKLIGHT 1
+#define CONFIG_LIBERTAS_CS_MODULE 1
+#define CONFIG_ATA_MODULE 1
+#define CONFIG_KEYBOARD_SUNKBD_MODULE 1
+#define CONFIG_PCMCIA_3C589_MODULE 1
+#define CONFIG_CRYPTO_DES_MODULE 1
+#define CONFIG_ENABLE_MUST_CHECK 1
+#define CONFIG_TOUCHSCREEN_WM9712 1
+#define CONFIG_CEPH_LIB_MODULE 1
+#define CONFIG_MM_OWNER 1
+#define CONFIG_NLS_CODEPAGE_437_MODULE 1
+#define CONFIG_MTD_NAND_IDS_MODULE 1
+#define CONFIG_NATSEMI_MODULE 1
+#define CONFIG_MCS_FIR_MODULE 1
+#define CONFIG_NET_CLS_U32_MODULE 1
+#define CONFIG_SND_JAZZ16_MODULE 1
+#define CONFIG_MISDN_MODULE 1
+#define CONFIG_EXPORTFS 1
+#define CONFIG_MTD_UBI_WL_THRESHOLD 4096
+#define CONFIG_PCMCIA_IBMTR_MODULE 1
+#define CONFIG_AD525X_DPOT_I2C_MODULE 1
+#define CONFIG_MMC_RICOH_MMC 1
+#define CONFIG_SND_MIXER_OSS_MODULE 1
+#define CONFIG_TOUCHSCREEN_PENMOUNT_MODULE 1
+#define CONFIG_IP6_NF_MATCH_MH_MODULE 1
+#define CONFIG_SCSI_OSD_INITIATOR_MODULE 1
+#define CONFIG_DVB_S921_MODULE 1
+#define CONFIG_SCSI_OSD_DPRINT_SENSE 1
+#define CONFIG_MSI_WMI_MODULE 1
+#define CONFIG_IT87_WDT_MODULE 1
+#define CONFIG_LRU_CACHE_MODULE 1
+#define CONFIG_SCSI_CXGB3_ISCSI_MODULE 1
+#define CONFIG_PC8736x_GPIO_MODULE 1
+#define CONFIG_SND_DARLA24_MODULE 1
+#define CONFIG_SENSORS_MAX1619_MODULE 1
+#define CONFIG_IPW2200_MONITOR 1
+#define CONFIG_DVB_AF9013_MODULE 1
+#define CONFIG_PCMCIA_SYM53C500_MODULE 1
+#define CONFIG_INFINIBAND_MTHCA_DEBUG 1
+#define CONFIG_SERIO 1
+#define CONFIG_DVB_USB_DTV5100_MODULE 1
+#define CONFIG_IBMASR_MODULE 1
+#define CONFIG_INPUT_MOUSE 1
+#define CONFIG_INFINIBAND_ISER_MODULE 1
+#define CONFIG_FB_SYS_IMAGEBLIT 1
+#define CONFIG_VIDEO_TVEEPROM_MODULE 1
+#define CONFIG_X86 1
+#define CONFIG_PPS_CLIENT_PARPORT_MODULE 1
+#define CONFIG_DEFXX_MODULE 1
+#define CONFIG_SUNRPC_GSS_MODULE 1
+#define CONFIG_CORE_DUMP_DEFAULT_ELF_HEADERS 1
+#define CONFIG_TYPHOON_MODULE 1
+#define CONFIG_TIGON3_MODULE 1
+#define CONFIG_MA600_DONGLE_MODULE 1
+#define CONFIG_COMEDI_SSV_DNP_MODULE 1
+#define CONFIG_SENSORS_LM90_MODULE 1
+#define CONFIG_NETCONSOLE_MODULE 1
+#define CONFIG_RTC_INTF_SYSFS 1
+#define CONFIG_RTC_DRV_RS5C372_MODULE 1
+#define CONFIG_NET_EMATCH_U32_MODULE 1
+#define CONFIG_TOUCHSCREEN_TOUCHWIN_MODULE 1
+#define CONFIG_BLK_DEV_INITRD 1
+#define CONFIG_USB_EMI62_MODULE 1
+#define CONFIG_B43_PHY_N 1
+#define CONFIG_SCSI_IPS_MODULE 1
+#define CONFIG_X86_MCE_AMD 1
+#define CONFIG_DM_BUFIO_MODULE 1
+#define CONFIG_FB_I810_GTF 1
+#define CONFIG_I2C_ALGOPCA_MODULE 1
+#define CONFIG_BT_ATH3K_MODULE 1
+#define CONFIG_LEDS_TRIGGER_TIMER_MODULE 1
+#define CONFIG_HIGHMEM64G 1
+#define CONFIG_RTC_DRV_M48T59_MODULE 1
+#define CONFIG_RT2800_LIB_MODULE 1
+#define CONFIG_FB_VESA 1
+#define CONFIG_CRYPTO_BLOWFISH_COMMON_MODULE 1
+#define CONFIG_FUSION_LAN_MODULE 1
+#define CONFIG_MTD_NAND_PLATFORM_MODULE 1
+#define CONFIG_DVB_USB_DW2102_MODULE 1
+#define CONFIG_PATA_PCMCIA_MODULE 1
+#define CONFIG_NF_CONNTRACK_SANE_MODULE 1
+#define CONFIG_SERIO_PARKBD_MODULE 1
+#define CONFIG_SND_OSSEMUL 1
+#define CONFIG_TOIM3232_DONGLE_MODULE 1
+#define CONFIG_USB_SERIAL_MOS7720_MODULE 1
+#define CONFIG_SND_MSND_PINNACLE_MODULE 1
+#define CONFIG_PREEMPT_NOTIFIERS 1
+#define CONFIG_XEN_PVHVM 1
+#define CONFIG_FB_ARC_MODULE 1
+#define CONFIG_NF_CT_PROTO_DCCP_MODULE 1
+#define CONFIG_ZLIB_INFLATE 1
+#define CONFIG_RTC_DRV_V3020_MODULE 1
+#define CONFIG_DVB_TUA6100_MODULE 1
+#define CONFIG_KVM_ASYNC_PF 1
+#define CONFIG_CRC_T10DIF_MODULE 1
+#define CONFIG_BT_HCIBTUART_MODULE 1
+#define CONFIG_MEDIA_TUNER_QT1010_MODULE 1
+#define CONFIG_DVB_DYNAMIC_MINORS 1
+#define CONFIG_SSB_PCIHOST_POSSIBLE 1
+#define CONFIG_PCI_IOAPIC 1
+#define CONFIG_HWMON 1
+#define CONFIG_NET_VENDOR_DLINK 1
+#define CONFIG_CRYPTO_TWOFISH_COMMON_MODULE 1
+#define CONFIG_DLCI_MAX 8
+#define CONFIG_AUDITSYSCALL 1
+#define CONFIG_NLS_ISO8859_2_MODULE 1
+#define CONFIG_SENSORS_LM63_MODULE 1
+#define CONFIG_SMC9194_MODULE 1
+#define CONFIG_ARCH_CPU_PROBE_RELEASE 1
+#define CONFIG_USB_VIDEO_CLASS_MODULE 1
+#define CONFIG_CLKBLD_I8253 1
+#define CONFIG_ATM_NICSTAR_MODULE 1
+#define CONFIG_FB_ATY_GX 1
+#define CONFIG_RTC_INTF_PROC 1
+#define CONFIG_HID_PICOLCD_FB 1
+#define CONFIG_USB_SERIAL_TI_MODULE 1
+#define CONFIG_NET_SCH_CBQ_MODULE 1
+#define CONFIG_USB_SERIAL_MOS7715_PARPORT 1
+#define CONFIG_CRYPTO_SERPENT_MODULE 1
+#define CONFIG_CPU_IDLE_GOV_MENU 1
+#define CONFIG_MTD_PCI_MODULE 1
+#define CONFIG_ACPI_FAN_MODULE 1
+#define CONFIG_SND_FM801_MODULE 1
+#define CONFIG_MOUSE_PS2_SENTELIC 1
+#define CONFIG_HYSDN_CAPI 1
+#define CONFIG_FB_MATROX_MYSTIQUE 1
+#define CONFIG_SECURITY_APPARMOR 1
+#define CONFIG_STACKTRACE_SUPPORT 1
+#define CONFIG_B44_PCI_AUTOSELECT 1
+#define CONFIG_COMEDI_AMPLC_PCI224_MODULE 1
+#define CONFIG_COMEDI_NI_TIO_MODULE 1
+#define CONFIG_SERIAL_MAX3100_MODULE 1
+#define CONFIG_SENSORS_EMC1403_MODULE 1
+#define CONFIG_PCI_BIOS 1
+#define CONFIG_BNA_MODULE 1
+#define CONFIG_IP_DCCP_TFRC_LIB 1
+#define CONFIG_OUTPUT_FORMAT "elf32-i386"
+#define CONFIG_ACPI 1
+#define CONFIG_SCSI_SYM53C8XX_2_MODULE 1
+#define CONFIG_SCSI_CXGB4_ISCSI_MODULE 1
+#define CONFIG_USB_UHCI_HCD_MODULE 1
+#define CONFIG_NVRAM_MODULE 1
+#define CONFIG_LOCKD_MODULE 1
+#define CONFIG_LEDS_INTEL_SS4200_MODULE 1
+#define CONFIG_DVB_FIREDTV_MODULE 1
+#define CONFIG_DVB_S5H1411_MODULE 1
+#define CONFIG_RTC_DRV_DS3234_MODULE 1
+#define CONFIG_SOUND_OSS_CORE 1
+#define CONFIG_AIC79XX_REG_PRETTY_PRINT 1
+#define CONFIG_USB_SN9C102_MODULE 1
+#define CONFIG_RT2800USB_RT35XX 1
+#define CONFIG_FB_SAVAGE_MODULE 1
+#define CONFIG_LIBERTAS_MODULE 1
+#define CONFIG_HPET_MMAP 1
+#define CONFIG_USB_GSPCA_TV8532_MODULE 1
+#define CONFIG_DRM_VMWGFX_MODULE 1
+#define CONFIG_NET_VENDOR_MICROCHIP 1
+#define CONFIG_JFFS2_FS_MODULE 1
+#define CONFIG_STE10XP_MODULE 1
+#define CONFIG_USB_EZUSB 1
+#define CONFIG_VIDEO_OUTPUT_CONTROL_MODULE 1
+#define CONFIG_CASSINI_MODULE 1
+#define CONFIG_USB_WHCI_HCD_MODULE 1
+#define CONFIG_SCSI_DH_ALUA_MODULE 1
+#define CONFIG_MTRR 1
+#define CONFIG_BT_RFCOMM_TTY 1
+#define CONFIG_LIBFCOE_MODULE 1
+#define CONFIG_RPCSEC_GSS_KRB5_MODULE 1
+#define CONFIG_SCSI_EATA_LINKED_COMMANDS 1
+#define CONFIG_VIDEOBUF_VMALLOC_MODULE 1
+#define CONFIG_MTD_CFI_UTIL_MODULE 1
+#define CONFIG_SND_LX6464ES_MODULE 1
+#define CONFIG_NET_VENDOR_ADAPTEC 1
+#define CONFIG_SENSORS_PCF8591_MODULE 1
+#define CONFIG_ACPI_BLACKLIST_YEAR 0
+#define CONFIG_DVB_STV0299_MODULE 1
+#define CONFIG_IPW2200_RADIOTAP 1
+#define CONFIG_SSB_B43_PCI_BRIDGE 1
+#define CONFIG_ACER_WMI_MODULE 1
+#define CONFIG_USB_AN2720 1
+#define CONFIG_ARCH_SUPPORTS_OPTIMIZED_INLINING 1
+#define CONFIG_RAMOOPS_MODULE 1
+#define CONFIG_MLX4_DEBUG 1
+#define CONFIG_BSD_PROCESS_ACCT 1
+#define CONFIG_NETFILTER_XT_MATCH_STRING_MODULE 1
+#define CONFIG_SSB_DRIVER_PCICORE 1
+#define CONFIG_INPUT_TABLET 1
+#define CONFIG_MEDIA_TUNER_MAX2165_MODULE 1
+#define CONFIG_MDIO_MODULE 1
+#define CONFIG_N_HDLC_MODULE 1
+#define CONFIG_I2O_EXT_ADAPTEC_DMA64 1
+#define CONFIG_MTD_CFI_INTELEXT_MODULE 1
+#define CONFIG_ATM_LANAI_MODULE 1
+#define CONFIG_LLC2_MODULE 1
+#define CONFIG_IR_WINBOND_CIR_MODULE 1
+#define CONFIG_HPET_EMULATE_RTC 1
+#define CONFIG_X86_MPPARSE 1
+#define CONFIG_NET_VENDOR_SILAN 1
+#define CONFIG_SND_OXYGEN_LIB_MODULE 1
+#define CONFIG_SND_SB8_MODULE 1
+#define CONFIG_DLM_MODULE 1
+#define CONFIG_NI65_MODULE 1
+#define CONFIG_TOUCHSCREEN_USB_GOTOP 1
+#define CONFIG_EEEPC_LAPTOP_MODULE 1
+#define CONFIG_PHONE_IXJ_PCMCIA_MODULE 1
+#define CONFIG_USB_STORAGE_MODULE 1
+#define CONFIG_HMC6352_MODULE 1
+#define CONFIG_NET_VENDOR_BROADCOM 1
+#define CONFIG_SND_KCTL_JACK 1
+#define CONFIG_DVB_USB_PCTV452E_MODULE 1
+#define CONFIG_DVB_VES1820_MODULE 1
+#define CONFIG_STANDALONE 1
+#define CONFIG_BAYCOM_SER_HDX_MODULE 1
+#define CONFIG_CRYPTO_SEED_MODULE 1
+#define CONFIG_SCHED_MC 1
+#define CONFIG_DELL_RBU_MODULE 1
+#define CONFIG_SCSI_SAS_ATA 1
+#define CONFIG_BATTERY_DS2782_MODULE 1
+#define CONFIG_CPU_FREQ_GOV_PERFORMANCE 1
+#define CONFIG_IR_LIRC_CODEC_MODULE 1
+#define CONFIG_EFI 1
+#define CONFIG_DONGLE 1
+#define CONFIG_SATA_MV_MODULE 1
+#define CONFIG_AGP_AMD64 1
+#define CONFIG_HAVE_SETUP_PER_CPU_AREA 1
+#define CONFIG_R8187SE_MODULE 1
+#define CONFIG_WATCHDOG_CORE 1
+#define CONFIG_SPEAKUP_SYNTH_KEYPC_MODULE 1
+#define CONFIG_DVB_TUNER_DIB0090_MODULE 1
+#define CONFIG_PCI_XEN 1
+#define CONFIG_SND_USB_AUDIO_MODULE 1
+#define CONFIG_ARCNET_CAP_MODULE 1
+#define CONFIG_VIDEO_CX231XX_MODULE 1
+#define CONFIG_SPEAKUP_SYNTH_TXPRT_MODULE 1
+#define CONFIG_TCP_CONG_YEAH_MODULE 1
+#define CONFIG_SCSI_SYM53C8XX_DMA_ADDRESSING_MODE 1
+#define CONFIG_IEEE802154_MODULE 1
+#define CONFIG_XO15_EBOOK_MODULE 1
+#define CONFIG_SCSI_QLA_FC_MODULE 1
+#define CONFIG_TELCLOCK_MODULE 1
+#define CONFIG_IO_DELAY_TYPE_0XED 1
+#define CONFIG_COMEDI_UNIOXX5_MODULE 1
+#define CONFIG_BLOCK 1
+#define CONFIG_HAVE_IDE 1
+#define CONFIG_IP_VS_LC_MODULE 1
+#define CONFIG_HID_APPLE_MODULE 1
+#define CONFIG_MEDIA_TUNER_TDA827X_MODULE 1
+#define CONFIG_VMXNET3_MODULE 1
+#define CONFIG_INIT_ENV_ARG_LIMIT 32
+#define CONFIG_SND_RAWMIDI_SEQ_MODULE 1
+#define CONFIG_IP_NF_ARP_MANGLE_MODULE 1
+#define CONFIG_USB_WUSB_MODULE 1
+#define CONFIG_DVB_USB_MODULE 1
+#define CONFIG_P54_LEDS 1
+#define CONFIG_SENSORS_G760A_MODULE 1
+#define CONFIG_RDS_MODULE 1
+#define CONFIG_GENERIC_GPIO 1
+#define CONFIG_DVB_ATBM8830_MODULE 1
+#define CONFIG_PATA_EFAR_MODULE 1
+#define CONFIG_VIRTIO_RING_MODULE 1
+#define CONFIG_SMCTR_MODULE 1
+#define CONFIG_SCTP_HMAC_MD5 1
+#define CONFIG_ATL2_MODULE 1
+#define CONFIG_USER_NS 1
+#define CONFIG_NF_CONNTRACK_PPTP_MODULE 1
+#define CONFIG_CPU_SUP_INTEL 1
+#define CONFIG_VIDEO_CX231XX_ALSA_MODULE 1
+#define CONFIG_HFSPLUS_FS_MODULE 1
+#define CONFIG_TMPFS_POSIX_ACL 1
+#define CONFIG_SENSORS_ADM9240_MODULE 1
+#define CONFIG_DEBUG_SET_MODULE_RONX 1
+#define CONFIG_SND_USB_UA101_MODULE 1
+#define CONFIG_ACPI_APEI_PCIEAER 1
+#define CONFIG_BUG 1
+#define CONFIG_SCSI_AIC7XXX_MODULE 1
+#define CONFIG_CONTEXT_SWITCH_TRACER 1
+#define CONFIG_MAC80211_HAS_RC 1
+#define CONFIG_LOGIWHEELS_FF 1
+#define CONFIG_HPLAN_PLUS_MODULE 1
+#define CONFIG_SCSI_FC_TGT_ATTRS 1
+#define CONFIG_USB_SL811_HCD_MODULE 1
+#define CONFIG_OCFS2_FS_O2CB_MODULE 1
+#define CONFIG_XEN 1
+#define CONFIG_CRYPTO_CAST6_MODULE 1
+#define CONFIG_NET_EMATCH_META_MODULE 1
+#define CONFIG_COMEDI_PCL725_MODULE 1
+#define CONFIG_KS8842_MODULE 1
+#define CONFIG_PANTHERLORD_FF 1
+#define CONFIG_I2C_DIOLAN_U2C_MODULE 1
+#define CONFIG_PM 1
+#define CONFIG_PPS_MODULE 1
+#define CONFIG_GENERIC_ISA_DMA 1
+#define CONFIG_USB_LCD_MODULE 1
+#define CONFIG_SPI 1
+#define CONFIG_SENSORS_DS620_MODULE 1
+#define CONFIG_V4L_MEM2MEM_DRIVERS 1
+#define CONFIG_WL12XX_MENU_MODULE 1
+#define CONFIG_BMP085_MODULE 1
+#define CONFIG_X86_SPEEDSTEP_CENTRINO_MODULE 1
+#define CONFIG_NF_CONNTRACK_IRC_MODULE 1
+#define CONFIG_PATA_NS87410_MODULE 1
+#define CONFIG_PCMCIA_SPECTRUM_MODULE 1
+#define CONFIG_L2TP_IP_MODULE 1
+#define CONFIG_MTD_REDBOOT_PARTS_MODULE 1
+#define CONFIG_B43_PCMCIA 1
+#define CONFIG_BOOTPARAM_HUNG_TASK_PANIC_VALUE 0
+#define CONFIG_USB_STV06XX_MODULE 1
+#define CONFIG_PPP_DEFLATE_MODULE 1
+#define CONFIG_NTFS_RW 1
+#define CONFIG_VGA_SWITCHEROO 1
+#define CONFIG_STRIP_ASM_SYMS 1
+#define CONFIG_PCMCIA_NINJA_SCSI_MODULE 1
+#define CONFIG_TEXTSEARCH_KMP_MODULE 1
+#define CONFIG_RTS5139_MODULE 1
+#define CONFIG_SND_MAESTRO3_MODULE 1
+#define CONFIG_W1_SLAVE_SMEM_MODULE 1
+#define CONFIG_VT 1
+#define CONFIG_USB_NET_NET1080_MODULE 1
+#define CONFIG_SENSORS_F71805F_MODULE 1
+#define CONFIG_NETFILTER_XT_TARGET_CLASSIFY_MODULE 1
+#define CONFIG_PCI_ATS 1
+#define CONFIG_MISDN_IPAC_MODULE 1
+#define CONFIG_PARIDE_KTTI_MODULE 1
+#define CONFIG_SND_HDA_CODEC_CIRRUS 1
+#define CONFIG_CB710_DEBUG_ASSUMPTIONS 1
+#define CONFIG_SPLIT_PTLOCK_CPUS 4
+#define CONFIG_EDAC_E752X_MODULE 1
+#define CONFIG_MSPRO_BLOCK_MODULE 1
+#define CONFIG_DVB_TUNER_ITD1000_MODULE 1
+#define CONFIG_POWER_SUPPLY_MODULE 1
+#define CONFIG_DM_PERSISTENT_DATA_MODULE 1
+#define CONFIG_PATA_VIA_MODULE 1
+#define CONFIG_DAVICOM_PHY_MODULE 1
+#define CONFIG_CIFS_XATTR 1
+#define CONFIG_I2C_PCA_PLATFORM_MODULE 1
+#define CONFIG_NETFILTER_XT_TARGET_NFQUEUE_MODULE 1
+#define CONFIG_SND_HDA_INPUT_BEEP 1
+#define CONFIG_I2O_CONFIG_OLD_IOCTL 1
+#define CONFIG_V4L_USB_DRIVERS 1
+#define CONFIG_WEXT_CORE 1
+#define CONFIG_USB_GSPCA_MR97310A_MODULE 1
+#define CONFIG_DVB_HOPPER_MODULE 1
+#define CONFIG_GENERIC_IRQ_CHIP 1
+#define CONFIG_VIDEO_WM8775_MODULE 1
+#define CONFIG_NLS 1
+#define CONFIG_IP_SET_HASH_IPPORTNET_MODULE 1
+#define CONFIG_CDROM_PKTCDVD_BUFFERS 8
+#define CONFIG_SCHED_AUTOGROUP 1
+#define CONFIG_CLS_U32_PERF 1
+#define CONFIG_COMEDI_PCL730_MODULE 1
+#define CONFIG_PRISM2_USB_MODULE 1
+#define CONFIG_ADM8211_MODULE 1
+#define CONFIG_VIDEO_VIVI_MODULE 1
+#define CONFIG_NETFILTER_XT_TARGET_SECMARK_MODULE 1
+#define CONFIG_HID_MAGICMOUSE_MODULE 1
+#define CONFIG_COMEDI_PCM3730_MODULE 1
+#define CONFIG_SCx200_ACB_MODULE 1
+#define CONFIG_XEN_SAVE_RESTORE 1
+#define CONFIG_TOUCHSCREEN_USB_ETURBO 1
+#define CONFIG_DELL_LAPTOP_MODULE 1
+#define CONFIG_PPPOE_MODULE 1
+#define CONFIG_XFRM_MIGRATE 1
+#define CONFIG_WL1251_SDIO_MODULE 1
+#define CONFIG_SND_LAYLA24_MODULE 1
+#define CONFIG_ZONE_DMA 1
+#define CONFIG_USB_GSPCA_SPCA508_MODULE 1
+#define CONFIG_USB_LEGOTOWER_MODULE 1
+#define CONFIG_MTD_DATAFLASH_MODULE 1
+#define CONFIG_FB_MB862XX_I2C 1
+#define CONFIG_LIRC_SIR_MODULE 1
+#define CONFIG_DVB_USB_DIBUSB_MC_MODULE 1
+#define CONFIG_MTD_ALAUDA_MODULE 1
+#define CONFIG_DVB_USB_VP702X_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_OWNER_MODULE 1
+#define CONFIG_I2C_SIS5595_MODULE 1
+#define CONFIG_SUN_PARTITION 1
+#define CONFIG_IP_NF_TARGET_ECN_MODULE 1
+#define CONFIG_SND_GINA24_MODULE 1
+#define CONFIG_MD_FAULTY_MODULE 1
+#define CONFIG_SYN_COOKIES 1
+#define CONFIG_IRQ_WORK 1
+#define CONFIG_ATH9K_MODULE 1
+#define CONFIG_PCI_MSI 1
+#define CONFIG_IP_ADVANCED_ROUTER 1
+#define CONFIG_ENABLE_WARN_DEPRECATED 1
+#define CONFIG_AGP_EFFICEON 1
+#define CONFIG_ARCNET_COM20020_CS_MODULE 1
+#define CONFIG_COMEDI_CB_PCIDDA_MODULE 1
+#define CONFIG_VIDEO_USBVISION_MODULE 1
+#define CONFIG_FB_SYS_COPYAREA 1
+#define CONFIG_SPI_BITBANG_MODULE 1
+#define CONFIG_EWRK3_MODULE 1
+#define CONFIG_USB_STORAGE_ALAUDA_MODULE 1
+#define CONFIG_NET_VENDOR_FUJITSU 1
+#define CONFIG_JOYSTICK_GRIP_MP_MODULE 1
+#define CONFIG_B44_PCICORE_AUTOSELECT 1
+#define CONFIG_IWLWIFI_MODULE 1
+#define CONFIG_USB_COMMON_MODULE 1
+#define CONFIG_SENSORS_ADM1031_MODULE 1
+#define CONFIG_TASK_XACCT 1
+#define CONFIG_ARCNET_1051_MODULE 1
+#define CONFIG_MEDIA_TUNER_TDA18271_MODULE 1
+#define CONFIG_IP_SET_BITMAP_PORT_MODULE 1
+#define CONFIG_IP6_NF_IPTABLES_MODULE 1
+#define CONFIG_X86_PCC_CPUFREQ_MODULE 1
+#define CONFIG_QFMT_V1 1
+#define CONFIG_DVB_IX2505V_MODULE 1
+#define CONFIG_TOUCHSCREEN_USB_ZYTRONIC 1
+#define CONFIG_TEKRAM_DONGLE_MODULE 1
+#define CONFIG_ATM_HORIZON_MODULE 1
+#define CONFIG_SND_SONICVIBES_MODULE 1
+#define CONFIG_ARCH_DEFCONFIG "arch/x86/configs/i386_defconfig"
+#define CONFIG_CPU_FREQ_GOV_USERSPACE_MODULE 1
+#define CONFIG_SND_CA0106_MODULE 1
+#define CONFIG_ISDN_DIVAS_MAINT_MODULE 1
+#define CONFIG_SECURITY_APPARMOR_BOOTPARAM_VALUE 1
+#define CONFIG_BLK_DEV_DM_BUILTIN 1
+#define CONFIG_COMEDI_FL512_MODULE 1
+#define CONFIG_USB_SERIAL_IPW_MODULE 1
+#define CONFIG_I2C_PIIX4_MODULE 1
+#define CONFIG_EDAC_I7300_MODULE 1
+#define CONFIG_SND_OPTI92X_AD1848_MODULE 1
+#define CONFIG_EFI_VARS_PSTORE_DEFAULT_DISABLE 1
+#define CONFIG_ARCNET_COM20020_PCI_MODULE 1
+#define CONFIG_PCIEAER_INJECT_MODULE 1
+#define CONFIG_INET_IPCOMP_MODULE 1
+#define CONFIG_SENSORS_FSCHMD_MODULE 1
+#define CONFIG_VGA_ARB_MAX_GPUS 16
+#define CONFIG_DVB_USB_DIB0700_MODULE 1
+#define CONFIG_TOUCHSCREEN_FUJITSU_MODULE 1
+#define CONFIG_MCP2120_DONGLE_MODULE 1
+#define CONFIG_PCMCIA_MODULE 1
+#define CONFIG_XEN_BLKDEV_BACKEND_MODULE 1
+#define CONFIG_SCSI_U14_34F_TAGGED_QUEUE 1
+#define CONFIG_BT_HCIBLUECARD_MODULE 1
+#define CONFIG_JFFS2_FS_XATTR 1
+#define CONFIG_EVENT_TRACING 1
+#define CONFIG_ISDN_DRV_AVMB1_VERBOSE_REASON 1
+#define CONFIG_SND_ENS1370_MODULE 1
+#define CONFIG_ASYNC_PQ_MODULE 1
+#define CONFIG_HID_KEYTOUCH_MODULE 1
+#define CONFIG_HID_CYPRESS_MODULE 1
+#define CONFIG_N_GSM_MODULE 1
+#define CONFIG_BRIDGE_EBT_LIMIT_MODULE 1
+#define CONFIG_DRM_KMS_HELPER_MODULE 1
+#define CONFIG_SCSI_U14_34F_MODULE 1
+#define CONFIG_COSA_MODULE 1
+#define CONFIG_IPW2200_PROMISCUOUS 1
+#define CONFIG_OCFS2_FS_USERSPACE_CLUSTER_MODULE 1
+#define CONFIG_ARCH_WANT_OPTIONAL_GPIOLIB 1
+#define CONFIG_HYSDN_MODULE 1
+#define CONFIG_COMEDI_ADL_PCI9111_MODULE 1
+#define CONFIG_ATA_OVER_ETH_MODULE 1
+#define CONFIG_USB_NET_PLUSB_MODULE 1
+#define CONFIG_VIDEO_SAA711X_MODULE 1
+#define CONFIG_RTL8192C_COMMON_MODULE 1
+#define CONFIG_PREEMPT_VOLUNTARY 1
+#define CONFIG_DVB_BUDGET_CORE_MODULE 1
+#define CONFIG_NLS_ISO8859_1_MODULE 1
+#define CONFIG_MFD_WM8400_MODULE 1
+#define CONFIG_MTD_INTEL_VR_NOR_MODULE 1
+#define CONFIG_CRYPTO_WORKQUEUE 1
+#define CONFIG_NFC_MODULE 1
+#define CONFIG_CIFS_FSCACHE 1
+#define CONFIG_R8169_MODULE 1
+#define CONFIG_SENSORS_BH1780_MODULE 1
+#define CONFIG_TCP_CONG_HYBLA_MODULE 1
+#define CONFIG_PCI_STUB_MODULE 1
+#define CONFIG_NCPFS_NFS_NS 1
+#define CONFIG_HAVE_ATOMIC_IOMAP 1
+#define CONFIG_HID_KENSINGTON_MODULE 1
+#define CONFIG_AGP_ALI 1
+#define CONFIG_USB_EHCI_HCD_MODULE 1
+#define CONFIG_BATTERY_DS2760_MODULE 1
+#define CONFIG_CPU_FREQ_TABLE 1
+#define CONFIG_TEXTSEARCH_BM_MODULE 1
+#define CONFIG_8139TOO_MODULE 1
+#define CONFIG_JFS_SECURITY 1
+#define CONFIG_AFS_FSCACHE 1
+#define CONFIG_SND_PDAUDIOCF_MODULE 1
+#define CONFIG_BT_HCIUART_LL 1
+#define CONFIG_HID_ZYDACRON_MODULE 1
+#define CONFIG_PPP_MPPE_MODULE 1
+#define CONFIG_CAN_CALC_BITTIMING 1
+#define CONFIG_DE2104X_MODULE 1
+#define CONFIG_SND_PCM_OSS_MODULE 1
+#define CONFIG_DVB_B2C2_FLEXCOP_MODULE 1
+#define CONFIG_HOTPLUG_PCI_ACPI 1
+#define CONFIG_USB_IRDA_MODULE 1
+#define CONFIG_RFKILL_MODULE 1
+#define CONFIG_VIDEO_TVP5150_MODULE 1
+#define CONFIG_NETDEVICES 1
+#define CONFIG_NET_KEY_MODULE 1
+#define CONFIG_SMS_SIANO_MDTV_MODULE 1
+#define CONFIG_ACORN_PARTITION_RISCIX 1
+#define CONFIG_IP6_NF_TARGET_HL_MODULE 1
+#define CONFIG_IOSCHED_DEADLINE 1
+#define CONFIG_DLCI_MODULE 1
+#define CONFIG_CLKSRC_I8253 1
+#define CONFIG_ATM_IDT77252_USE_SUNI 1
+#define CONFIG_SND_OPL3_LIB_SEQ_MODULE 1
+#define CONFIG_CGROUP_FREEZER 1
+#define CONFIG_EVENTFD 1
+#define CONFIG_CRYPTO_DEV_PADLOCK_SHA_MODULE 1
+#define CONFIG_PARIDE_PD_MODULE 1
+#define CONFIG_RTL8192CE_MODULE 1
+#define CONFIG_WAN 1
+#define CONFIG_FS_POSIX_ACL 1
+#define CONFIG_IPV6_SIT_MODULE 1
+#define CONFIG_XFRM 1
+#define CONFIG_SENSORS_K8TEMP_MODULE 1
+#define CONFIG_DEFCONFIG_LIST "/lib/modules/$UNAME_RELEASE/.config"
+#define CONFIG_ASYNC_TX_DMA 1
+#define CONFIG_COMEDI_DAS16_MODULE 1
+#define CONFIG_IP_SET_HASH_IP_MODULE 1
+#define CONFIG_YENTA_TOSHIBA 1
+#define CONFIG_USB_MR800_MODULE 1
+#define CONFIG_AIRO_MODULE 1
+#define CONFIG_MTD_NETtel_MODULE 1
+#define CONFIG_MFD_VX855_MODULE 1
+#define CONFIG_SERIAL_8250_CONSOLE 1
+#define CONFIG_IPV6_MULTIPLE_TABLES 1
+#define CONFIG_USB_ANNOUNCE_NEW_DEVICES 1
+#define CONFIG_USB_SERIAL_WHITEHEAT_MODULE 1
+#define CONFIG_NET_CLS_ROUTE4_MODULE 1
+#define CONFIG_PCMCIA_FMVJ18X_MODULE 1
+#define CONFIG_IP_SET_HASH_NETPORT_MODULE 1
+#define CONFIG_TCG_INFINEON_MODULE 1
+#define CONFIG_ULTRA_MODULE 1
+#define CONFIG_ATH9K_HTC_MODULE 1
+#define CONFIG_TOSHIBA_FIR_MODULE 1
+#define CONFIG_IP_VS_DH_MODULE 1
+#define CONFIG_SCSI_NCR53C406A_MODULE 1
+#define CONFIG_SND_AZT2320_MODULE 1
+#define CONFIG_EL1_MODULE 1
+#define CONFIG_IP_NF_TARGET_MASQUERADE_MODULE 1
+#define CONFIG_AIC79XX_RESET_DELAY_MS 15000
+#define CONFIG_ARCNET_COM20020_MODULE 1
+#define CONFIG_NF_CONNTRACK_BROADCAST_MODULE 1
+#define CONFIG_ECRYPT_FS_MODULE 1
+#define CONFIG_IR_RC5_SZ_DECODER_MODULE 1
+#define CONFIG_PROC_PAGE_MONITOR 1
+#define CONFIG_SERIAL_8250_EXTENDED 1
+#define CONFIG_GAMEPORT_FM801_MODULE 1
+#define CONFIG_KS959_DONGLE_MODULE 1
+#define CONFIG_CC_OPTIMIZE_FOR_SIZE 1
+#define CONFIG_JOYSTICK_MAGELLAN_MODULE 1
+#define CONFIG_FTL_MODULE 1
+#define CONFIG_IPMI_DEVICE_INTERFACE_MODULE 1
+#define CONFIG_9P_FS_POSIX_ACL 1
+#define CONFIG_KINGSUN_DONGLE_MODULE 1
+#define CONFIG_NF_NAT_PROTO_DCCP_MODULE 1
+#define CONFIG_USB_VIDEO_CLASS_INPUT_EVDEV 1
+#define CONFIG_SENSORS_ADM1021_MODULE 1
+#define CONFIG_C2PORT_MODULE 1
+#define CONFIG_DM_DELAY_MODULE 1
+#define CONFIG_X86_CMOV 1
+#define CONFIG_USB_SERIAL_CH341_MODULE 1
+#define CONFIG_USB_FTDI_ELAN_MODULE 1
+#define CONFIG_ACPI_HOTPLUG_CPU 1
+#define CONFIG_RD_LZO 1
+#define CONFIG_COMEDI_ADDI_APCI_1564_MODULE 1
+#define CONFIG_DVB_USB_FRIIO_MODULE 1
+#define CONFIG_JFFS2_FS_SECURITY 1
+#define CONFIG_IP_SET_HASH_IPPORT_MODULE 1
+#define CONFIG_NEED_NODE_MEMMAP_SIZE 1
+#define CONFIG_ARCH_HAS_CPU_IDLE_WAIT 1
+#define CONFIG_SENSORS_SHT21_MODULE 1
+#define CONFIG_USB_IOWARRIOR_MODULE 1
+#define CONFIG_SND_HDSP_MODULE 1
+#define CONFIG_SERIO_CT82C710_MODULE 1
+#define CONFIG_USBPCWATCHDOG_MODULE 1
+#define CONFIG_WIMAX_I2400M_USB_MODULE 1
+#define CONFIG_SND_USB_USX2Y_MODULE 1
+#define CONFIG_SCSI_SPI_ATTRS_MODULE 1
+#define CONFIG_FB_CYBER2000_MODULE 1
+#define CONFIG_GREENASIA_FF 1
+#define CONFIG_SCSI_HPSA_MODULE 1
+#define CONFIG_MICROCODE_AMD 1
+#define CONFIG_SPEAKUP_SYNTH_ACNTSA_MODULE 1
+#define CONFIG_SND_KORG1212_MODULE 1
+#define CONFIG_SENSORS_VIA_CPUTEMP_MODULE 1
+#define CONFIG_NF_CONNTRACK_SECMARK 1
+#define CONFIG_ISDN_DRV_GIGASET_MODULE 1
+#define CONFIG_CHELSIO_T3_MODULE 1
+#define CONFIG_INSTRUCTION_DECODER 1
+#define CONFIG_CRYPTO_SHA512_MODULE 1
+#define CONFIG_PHONET_MODULE 1
+#define CONFIG_MWIFIEX_PCIE_MODULE 1
+#define CONFIG_SCSI_WAIT_SCAN_MODULE 1
+#define CONFIG_DRM_MGA_MODULE 1
+#define CONFIG_BACKLIGHT_CLASS_DEVICE 1
+#define CONFIG_B43_HWRNG 1
+#define CONFIG_USB_M5602_MODULE 1
+#define CONFIG_RT2X00_LIB_USB_MODULE 1
+#define CONFIG_NET_VENDOR_EXAR 1
+#define CONFIG_CRYPTO_NULL_MODULE 1
+#define CONFIG_DVB_USB_AF9005_REMOTE_MODULE 1
+#define CONFIG_NET_VENDOR_SEEQ 1
+#define CONFIG_NF_DEFRAG_IPV4_MODULE 1
+#define CONFIG_USER_RETURN_NOTIFIER 1
+#define CONFIG_SERIAL_8250_EXAR_ST16C554_MODULE 1
+#define CONFIG_USB_IDMOUSE_MODULE 1
+#define CONFIG_SELECT_MEMORY_MODEL 1
+#define CONFIG_MISDN_INFINEON_MODULE 1
+#define CONFIG_INET_XFRM_MODE_BEET_MODULE 1
+#define CONFIG_INFINIBAND_IPOIB_DEBUG 1
+#define CONFIG_HID_LCPOWER_MODULE 1
+#define CONFIG_VIRTIO_CONSOLE_MODULE 1
+#define CONFIG_BFS_FS_MODULE 1
+#define CONFIG_SND_ES1938_MODULE 1
+#define CONFIG_PM_DEBUG 1
+#define CONFIG_DVB_BUDGET_AV_MODULE 1
+#define CONFIG_SSB_PCMCIAHOST 1
+#define CONFIG_IPV6_ROUTE_INFO 1
+#define CONFIG_NETFILTER_ADVANCED 1
+#define CONFIG_CRYPTO_DEFLATE_MODULE 1
+#define CONFIG_USB_APPLEDISPLAY_MODULE 1
+#define CONFIG_USB_SERIAL_KLSI_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_TCPMSS_MODULE 1
+#define CONFIG_IGB_MODULE 1
+#define CONFIG_MTD_CFI_MODULE 1
+#define CONFIG_IPV6_ROUTER_PREF 1
+#define CONFIG_JFFS2_FS_DEBUG 0
+#define CONFIG_BT_HCIBTSDIO_MODULE 1
+#define CONFIG_AGP_NVIDIA 1
+#define CONFIG_SLIP_COMPRESSED 1
+#define CONFIG_SND_VX_LIB_MODULE 1
+#define CONFIG_ATM_MPOA_MODULE 1
+#define CONFIG_ROCKETPORT_MODULE 1
+#define CONFIG_CRYPTO_GCM_MODULE 1
+#define CONFIG_SND_INDIGOIO_MODULE 1
+#define CONFIG_NE2K_PCI_MODULE 1
+#define CONFIG_MOUSE_SYNAPTICS_USB_MODULE 1
+#define CONFIG_NET_SCTPPROBE_MODULE 1
+#define CONFIG_NETFILTER_NETLINK_LOG_MODULE 1
+#define CONFIG_HAVE_DYNAMIC_FTRACE 1
+#define CONFIG_NLS_ISO8859_14_MODULE 1
+#define CONFIG_APRICOT_MODULE 1
+#define CONFIG_MTD_PHRAM_MODULE 1
+#define CONFIG_MAGIC_SYSRQ 1
+#define CONFIG_E100_MODULE 1
+#define CONFIG_IO_DELAY_0X80 1
+#define CONFIG_DMI 1
+#define CONFIG_IPV6_SIT_6RD 1
+#define CONFIG_PARPORT_SERIAL_MODULE 1
+#define CONFIG_COMEDI_CB_PCIDIO_MODULE 1
+#define CONFIG_PNFS_BLOCK_MODULE 1
+#define CONFIG_NET_VENDOR_RDC 1
+#define CONFIG_MACHZ_WDT_MODULE 1
+#define CONFIG_CPUSETS 1
+#define CONFIG_ROMFS_ON_MTD 1
+#define CONFIG_NETFILTER_XT_MATCH_MARK_MODULE 1
+#define CONFIG_FB_MATROX_MODULE 1
+#define CONFIG_ISDN 1
+#define CONFIG_VIDEO_PVRUSB2_SYSFS 1
+#define CONFIG_MAC80211_RC_DEFAULT_MINSTREL 1
+#define CONFIG_GPIO_CS5535_MODULE 1
+#define CONFIG_SPARSE_IRQ 1
+#define CONFIG_COMEDI_AMPLC_PC236_MODULE 1
+#define CONFIG_DVB_LGS8GXX_MODULE 1
+#define CONFIG_NETFILTER_XT_TARGET_TCPOPTSTRIP_MODULE 1
+#define CONFIG_SSFDC_MODULE 1
+#define CONFIG_IP_NF_MANGLE_MODULE 1
+#define CONFIG_TIFM_7XX1_MODULE 1
+#define CONFIG_HID_PICOLCD_LEDS 1
+#define CONFIG_COMEDI_CB_DAS16_CS_MODULE 1
+#define CONFIG_RTC_DRV_DS1286_MODULE 1
+#define CONFIG_FCOE_FNIC_MODULE 1
+#define CONFIG_TOUCHSCREEN_MCS5000_MODULE 1
+#define CONFIG_DVB_VES1X93_MODULE 1
+#define CONFIG_SECURITYFS 1
+#define CONFIG_LIBERTAS_MESH 1
+#define CONFIG_MFD_CS5535_MODULE 1
+#define CONFIG_DEFAULT_CFQ 1
+#define CONFIG_COMEDI_NI_PCIDIO_MODULE 1
+#define CONFIG_CPU_SUP_AMD 1
+#define CONFIG_INET6_XFRM_MODE_TUNNEL_MODULE 1
+#define CONFIG_BRIDGE_EBT_VLAN_MODULE 1
+#define CONFIG_PCIEPORTBUS 1
+#define CONFIG_MEDIA_SUPPORT_MODULE 1
+#define CONFIG_SENSORS_F75375S_MODULE 1
+#define CONFIG_DEBUG_BUGVERBOSE 1
+#define CONFIG_TC1100_WMI_MODULE 1
+#define CONFIG_NCPFS_OS2_NS 1
+#define CONFIG_IP_NF_FILTER_MODULE 1
+#define CONFIG_HID_ZEROPLUS_MODULE 1
+#define CONFIG_REED_SOLOMON_DEC16 1
+#define CONFIG_SATA_SX4_MODULE 1
+#define CONFIG_EXT3_FS_MODULE 1
+#define CONFIG_IBM_ASM_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_LENGTH_MODULE 1
+#define CONFIG_BRIDGE_EBT_PKTTYPE_MODULE 1
+#define CONFIG_X86_BIGSMP 1
+#define CONFIG_FAT_FS_MODULE 1
+#define CONFIG_SND_HDA_CODEC_CA0132 1
+#define CONFIG_FCOE_MODULE 1
+#define CONFIG_CAN_SJA1000_MODULE 1
+#define CONFIG_SND_HDA_INTEL_MODULE 1
+#define CONFIG_TEXTSEARCH_FSM_MODULE 1
+#define CONFIG_MISDN_DSP_MODULE 1
+#define CONFIG_SENSORS_LM75_MODULE 1
+#define CONFIG_DTLK_MODULE 1
+#define CONFIG_INFINIBAND_CXGB4_MODULE 1
+#define CONFIG_LSI_ET1011C_PHY_MODULE 1
+#define CONFIG_HIGHMEM 1
+#define CONFIG_IP6_NF_RAW_MODULE 1
+#define CONFIG_SPEAKUP_SYNTH_SOFT_MODULE 1
+#define CONFIG_DVB_USB_EC168_MODULE 1
+#define CONFIG_USB_ZD1201_MODULE 1
+#define CONFIG_RTC_DRV_DS1742_MODULE 1
+#define CONFIG_INET_TUNNEL_MODULE 1
+#define CONFIG_X86_INTERNODE_CACHE_SHIFT 6
+#define CONFIG_CRYPTO_DEV_PADLOCK_MODULE 1
+#define CONFIG_NETFILTER_XT_TARGET_NOTRACK_MODULE 1
+#define CONFIG_EEPROM_93CX6_MODULE 1
+#define CONFIG_KVM_CLOCK 1
+#define CONFIG_NET_9P_VIRTIO_MODULE 1
+#define CONFIG_MMC_BLOCK_BOUNCE 1
+#define CONFIG_MLX4_CORE_MODULE 1
+#define CONFIG_MTD_REDBOOT_DIRECTORY_BLOCK -1
+#define CONFIG_SND_MIA_MODULE 1
+#define CONFIG_GENERIC_CLOCKEVENTS 1
+#define CONFIG_ROMFS_FS_MODULE 1
+#define CONFIG_IOSCHED_CFQ 1
+#define CONFIG_DVB_USB_DTT200U_MODULE 1
+#define CONFIG_CIFS_UPCALL 1
+#define CONFIG_RWSEM_XCHGADD_ALGORITHM 1
+#define CONFIG_DSCC4_PCISYNC 1
+#define CONFIG_PARIDE_EPIA_MODULE 1
+#define CONFIG_LIB80211_MODULE 1
+#define CONFIG_SCC_MODULE 1
+#define CONFIG_MFD_CORE_MODULE 1
+#define CONFIG_HAVE_KERNEL_XZ 1
+#define CONFIG_USB_CXACRU_MODULE 1
+#define CONFIG_DRM_GMA3600 1
+#define CONFIG_RAID_ATTRS_MODULE 1
+#define CONFIG_RFKILL_LEDS 1
+#define CONFIG_CONSOLE_TRANSLATIONS 1
+#define CONFIG_PATA_CMD64X_MODULE 1
+#define CONFIG_MTD_CFI_STAA_MODULE 1
+#define CONFIG_PHONE_MODULE 1
+#define CONFIG_STOP_MACHINE 1
+#define CONFIG_RAID6_PQ_MODULE 1
+#define CONFIG_SBC_FITPC2_WATCHDOG_MODULE 1
+#define CONFIG_HW_RANDOM_TIMERIOMEM_MODULE 1
+#define CONFIG_FB_ATY_GENERIC_LCD 1
+#define CONFIG_NET_IPGRE_MODULE 1
+#define CONFIG_LIBERTAS_SDIO_MODULE 1
+#define CONFIG_VIDEO_HELPER_CHIPS_AUTO 1
+#define CONFIG_FUSION 1
+#define CONFIG_MTDRAM_TOTAL_SIZE 4096
+#define CONFIG_SWIOTLB_XEN 1
+#define CONFIG_BRIDGE_EBT_IP6_MODULE 1
+#define CONFIG_SND_AZT1605_MODULE 1
+#define CONFIG_NF_NAT_SNMP_BASIC_MODULE 1
+#define CONFIG_PCMCIA_LOAD_CIS 1
+#define CONFIG_CLS_U32_MARK 1
+#define CONFIG_SND_ICE1712_MODULE 1
+#define CONFIG_LIBERTAS_SPI_MODULE 1
+#define CONFIG_SCSI_ACARD_MODULE 1
+#define CONFIG_LEDS_TRIGGER_BACKLIGHT_MODULE 1
+#define CONFIG_CPU_FREQ 1
+#define CONFIG_USB_OHCI_HCD_MODULE 1
+#define CONFIG_VIA_RHINE_MODULE 1
+#define CONFIG_USB_GSPCA_MODULE 1
+#define CONFIG_HOSTAP_FIRMWARE 1
+#define CONFIG_DM_MIRROR_MODULE 1
+#define CONFIG_CRYPTO_BLOWFISH_MODULE 1
+#define CONFIG_FB_SIS_MODULE 1
+#define CONFIG_DUMMY_CONSOLE 1
+#define CONFIG_X86_LONGRUN_MODULE 1
+#define CONFIG_AIC7XXX_DEBUG_MASK 0
+#define CONFIG_SCSI_GDTH_MODULE 1
+#define CONFIG_MODULE_FORCE_LOAD 1
+#define CONFIG_NLS_ASCII_MODULE 1
+#define CONFIG_B43_MODULE 1
+#define CONFIG_JOYSTICK_GRIP_MODULE 1
+#define CONFIG_BAYCOM_SER_FDX_MODULE 1
+#define CONFIG_RTC_DRV_M41T94_MODULE 1
+#define CONFIG_IP1000_MODULE 1
+#define CONFIG_TULIP_NAPI 1
+#define CONFIG_WIMAX_DEBUG_LEVEL 8
+#define CONFIG_USB_RIO500_MODULE 1
+#define CONFIG_SATA_SVW_MODULE 1
+#define CONFIG_SND_CS5530_MODULE 1
+#define CONFIG_TRACE_IRQFLAGS_SUPPORT 1
+#define CONFIG_MTD_PHYSMAP_MODULE 1
+#define CONFIG_NFS_V3_ACL 1
+#define CONFIG_INFTL_MODULE 1
+#define CONFIG_GAMEPORT_L4_MODULE 1
+#define CONFIG_DVB_CAPTURE_DRIVERS 1
+#define CONFIG_SENSORS_ADT7462_MODULE 1
+#define CONFIG_DETECT_HUNG_TASK 1
+#define CONFIG_PARIDE_FRIQ_MODULE 1
+#define CONFIG_CAN_MCP251X_MODULE 1
+#define CONFIG_CRYPTO_CCM_MODULE 1
+#define CONFIG_TCP_CONG_ADVANCED 1
+#define CONFIG_NET_CLS_RSVP6_MODULE 1
+#define CONFIG_MTRR_SANITIZER_ENABLE_DEFAULT 0
+#define CONFIG_USB_NET_CDC_SUBSET_MODULE 1
+#define CONFIG_KVM_GUEST 1
+#define CONFIG_SND_WSS_LIB_MODULE 1
+#define CONFIG_QFMT_V2_MODULE 1
+#define CONFIG_USB_S2255_MODULE 1
+#define CONFIG_INET_DCCP_DIAG_MODULE 1
+#define CONFIG_ARCNET_COM90xxIO_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_CONNMARK_MODULE 1
+#define CONFIG_SND_ISA 1
+#define CONFIG_ATH9K_HW_MODULE 1
+#define CONFIG_BLK_CGROUP 1
+#define CONFIG_USB_SERIAL_MCT_U232_MODULE 1
+#define CONFIG_UIO_PDRV_GENIRQ_MODULE 1
+#define CONFIG_PATA_ISAPNP_MODULE 1
+#define CONFIG_BT_HCIBT3C_MODULE 1
+#define CONFIG_LEDS_TRIGGERS 1
+#define CONFIG_WIMAX_I2400M_DEBUG_LEVEL 8
+#define CONFIG_CRYPTO_RNG_MODULE 1
+#define CONFIG_USB_SERIAL_GARMIN_MODULE 1
+#define CONFIG_RAW_DRIVER_MODULE 1
+#define CONFIG_XFS_QUOTA 1
+#define CONFIG_COMEDI_ISA_DRIVERS_MODULE 1
+#define CONFIG_JOYSTICK_COBRA_MODULE 1
+#define CONFIG_NET_SCH_ATM_MODULE 1
+#define CONFIG_WINBOND_840_MODULE 1
+#define CONFIG_SCSI_3W_9XXX_MODULE 1
+#define CONFIG_SND_USB 1
+#define CONFIG_LOGIG940_FF 1
+#define CONFIG_VIDEOBUF2_MEMOPS_MODULE 1
+#define CONFIG_RD_GZIP 1
+#define CONFIG_TOUCHSCREEN_USB_E2I 1
+#define CONFIG_ARCH_HAS_CPU_RELAX 1
+#define CONFIG_HAVE_REGS_AND_STACK_ACCESS_API 1
+#define CONFIG_BCMA_HOST_PCI_POSSIBLE 1
+#define CONFIG_SENSORS_LTC4261_MODULE 1
+#define CONFIG_MMC_SDRICOH_CS_MODULE 1
+#define CONFIG_MISDN_W6692_MODULE 1
+#define CONFIG_USB_SERIAL_KEYSPAN_MODULE 1
+#define CONFIG_LIRC_BT829_MODULE 1
+#define CONFIG_THRUSTMASTER_FF 1
+#define CONFIG_LEDS_DELL_NETBOOKS_MODULE 1
+#define CONFIG_MTD_DOC2000_MODULE 1
+#define CONFIG_TREE_RCU 1
+#define CONFIG_LBDAF 1
+#define CONFIG_SWIOTLB 1
+#define CONFIG_SND_USB_CAIAQ_MODULE 1
+#define CONFIG_USB_STORAGE_CYPRESS_ATACB_MODULE 1
+#define CONFIG_EXT4_FS_SECURITY 1
+#define CONFIG_SPEAKUP_SYNTH_DUMMY_MODULE 1
+#define CONFIG_SCSI_MVUMI_MODULE 1
+#define CONFIG_CS5535_MFGPT_MODULE 1
+#define CONFIG_BEFS_FS_MODULE 1
+#define CONFIG_SND_ALI5451_MODULE 1
+#define CONFIG_INFINIBAND_USER_MAD_MODULE 1
+#define CONFIG_HID_ROCCAT_MODULE 1
+#define CONFIG_NET_VENDOR_HP 1
+#define CONFIG_F71808E_WDT_MODULE 1
+#define CONFIG_INET_XFRM_MODE_TRANSPORT_MODULE 1
+#define CONFIG_CRYPTO_MD5 1
+#define CONFIG_VIDEO_CS53L32A_MODULE 1
+#define CONFIG_IR_REDRAT3_MODULE 1
+#define CONFIG_USB_GSPCA_VICAM_MODULE 1
+#define CONFIG_PCMCIA_HERMES_MODULE 1
+#define CONFIG_TRANSPARENT_HUGEPAGE 1
+#define CONFIG_PATA_CS5530_MODULE 1
+#define CONFIG_ISCSI_TCP_MODULE 1
+#define CONFIG_ATA_ACPI 1
+#define CONFIG_NFSD_V3 1
+#define CONFIG_PATA_ALI_MODULE 1
+#define CONFIG_MFD_WL1273_CORE_MODULE 1
+#define CONFIG_RT2800USB_RT53XX 1
+#define CONFIG_HAVE_ARCH_KMEMCHECK 1
+#define CONFIG_SND_ECHO3G_MODULE 1
+#define CONFIG_COMEDI_ADL_PCI7432_MODULE 1
+#define CONFIG_ACPI_PROCESSOR_MODULE 1
+#define CONFIG_XEN_SCRUB_PAGES 1
+#define CONFIG_DVB_TDA10023_MODULE 1
+#define CONFIG_MEDIA_TUNER_TEA5767_MODULE 1
+#define CONFIG_BATMAN_ADV_MODULE 1
+#define CONFIG_CS89x0_MODULE 1
+#define CONFIG_ISDN_DRV_AVMB1_AVM_CS_MODULE 1
+#define CONFIG_HAVE_KVM 1
+#define CONFIG_SND_FIREWIRE 1
+#define CONFIG_VIDEOBUF_DVB_MODULE 1
+#define CONFIG_COMEDI_PCMDA12_MODULE 1
+#define CONFIG_PCCARD_MODULE 1
+#define CONFIG_HAVE_GENERIC_HARDIRQS 1
+#define CONFIG_USB_GSPCA_OV519_MODULE 1
+#define CONFIG_USB_SERIAL_VIVOPAY_SERIAL_MODULE 1
+#define CONFIG_BINFMT_ELF 1
+#define CONFIG_AUDIT_GENERIC 1
+#define CONFIG_PARIDE_PG_MODULE 1
+#define CONFIG_MD_RAID456_MODULE 1
+#define CONFIG_REGULATOR_PCF50633_MODULE 1
+#define CONFIG_HOTPLUG 1
+#define CONFIG_JOYSTICK_IFORCE_USB 1
+#define CONFIG_DSCC4_MODULE 1
+#define CONFIG_CICADA_PHY_MODULE 1
+#define CONFIG_UDF_NLS 1
+#define CONFIG_JOYSTICK_STINGER_MODULE 1
+#define CONFIG_USB_SISUSBVGA_CON 1
+#define CONFIG_CGROUP_MEM_RES_CTLR_SWAP 1
+#define CONFIG_IP_PIMSM_V1 1
+#define CONFIG_INET6_AH_MODULE 1
+#define CONFIG_TARGET_CORE_MODULE 1
+#define CONFIG_VLSI_FIR_MODULE 1
+#define CONFIG_USB_SERIAL_MODULE 1
+#define CONFIG_NET_VENDOR_ALTEON 1
+#define CONFIG_CGROUP_MEM_RES_CTLR 1
+#define CONFIG_SENSORS_GL518SM_MODULE 1
+#define CONFIG_USB_MON_MODULE 1
+#define CONFIG_COMEDI_CB_PCIMDAS_MODULE 1
+#define CONFIG_VGASTATE_MODULE 1
+#define CONFIG_REGULATOR_FIXED_VOLTAGE_MODULE 1
+#define CONFIG_SIGMATEL_FIR_MODULE 1
+#define CONFIG_IP_NF_TARGET_ULOG_MODULE 1
+#define CONFIG_KEYS 1
+#define CONFIG_REGULATOR_TPS6507X_MODULE 1
+#define CONFIG_BE2ISCSI_MODULE 1
+#define CONFIG_INET_XFRM_TUNNEL_MODULE 1
+#define CONFIG_RTC_DRV_FM3130_MODULE 1
+#define CONFIG_IPMI_POWEROFF_MODULE 1
+#define CONFIG_SND_VMASTER 1
+#define CONFIG_NETFILTER_XT_MARK_MODULE 1
+#define CONFIG_NETFILTER_XTABLES_MODULE 1
+#define CONFIG_IP_VS_LBLC_MODULE 1
+#define CONFIG_RESOURCE_COUNTERS 1
+#define CONFIG_DVB_USB_OPERA1_MODULE 1
+#define CONFIG_LEDS_BD2802_MODULE 1
+#define CONFIG_KEYBOARD_STOWAWAY_MODULE 1
+#define CONFIG_SLABINFO 1
+#define CONFIG_ATM_HE_MODULE 1
+#define CONFIG_KEYS_DEBUG_PROC_KEYS 1
+#define CONFIG_IPMI_SI_MODULE 1
+#define CONFIG_USB_STORAGE_DATAFAB_MODULE 1
+#define CONFIG_DVB_USB_AF9005_MODULE 1
+#define CONFIG_TCP_CONG_VEGAS_MODULE 1
+#define CONFIG_MTD_SCx200_DOCFLASH_MODULE 1
+#define CONFIG_CRYPTO_USER_API_HASH_MODULE 1
+#define CONFIG_TIMER_STATS 1
+#define CONFIG_SENSORS_IBMPEX_MODULE 1
+#define CONFIG_BOOT_PRINTK_DELAY 1
+#define CONFIG_SENSORS_ADM1026_MODULE 1
+#define CONFIG_PATA_NINJA32_MODULE 1
+#define CONFIG_SENSORS_ADT7470_MODULE 1
+#define CONFIG_PM_SLEEP_SMP 1
+#define CONFIG_FB_PM3_MODULE 1
+#define CONFIG_SCSI_PAS16_MODULE 1
+#define CONFIG_X86_16BIT 1
+#define CONFIG_CRYPTO_HW 1
+#define CONFIG_X86_VERBOSE_BOOTUP 1
+#define CONFIG_MAC80211_RC_MINSTREL_HT 1
+#define CONFIG_USB_EG20T_MODULE 1
+#define CONFIG_USB_STORAGE_KARMA_MODULE 1
+#define CONFIG_TTPCI_EEPROM_MODULE 1
+#define CONFIG_TEHUTI_MODULE 1
+#define CONFIG_SIS900_MODULE 1
+#define CONFIG_X86_INVLPG 1
+#define CONFIG_PCSPKR_PLATFORM 1
+#define CONFIG_MEGARAID_LEGACY_MODULE 1
+#define CONFIG_CARDBUS 1
+#define CONFIG_SND_SB16_MODULE 1
+#define CONFIG_HID_GREENASIA_MODULE 1
+#define CONFIG_ORINOCO_USB_MODULE 1
+#define CONFIG_FB_3DFX_I2C 1
+#define CONFIG_SMS_USB_DRV_MODULE 1
+#define CONFIG_ACPI_AC_MODULE 1
+#define CONFIG_JFFS2_FS_WRITEBUFFER 1
+#define CONFIG_SPI_MASTER 1
+#define CONFIG_USB_SERIAL_OPTICON_MODULE 1
+#define CONFIG_RTL8180_MODULE 1
+#define CONFIG_DVB_NXT200X_MODULE 1
+#define CONFIG_SENSORS_LM87_MODULE 1
+#define CONFIG_X86_SPEEDSTEP_RELAXED_CAP_CHECK 1
+#define CONFIG_VT_HW_CONSOLE_BINDING 1
+#define CONFIG_NET_ACT_GACT_MODULE 1
+#define CONFIG_SLIP_MODE_SLIP6 1
+#define CONFIG_HID_GYRATION_MODULE 1
+#define CONFIG_IRDA_CACHE_LAST_LSAP 1
+#define CONFIG_USB_WDM_MODULE 1
+#define CONFIG_PATA_TOSHIBA_MODULE 1
+#define CONFIG_BT_HCIBCM203X_MODULE 1
+#define CONFIG_REGULATOR_WM8400_MODULE 1
+#define CONFIG_THERMAL_HWMON 1
+#define CONFIG_TOUCHSCREEN_USB_COMPOSITE_MODULE 1
+#define CONFIG_MTD_NAND_CS553X_MODULE 1
+#define CONFIG_VIDEO_EM28XX_DVB_MODULE 1
+#define CONFIG_USB_SERIAL_KOBIL_SCT_MODULE 1
+#define CONFIG_HDLC_FR_MODULE 1
+#define CONFIG_DE620_MODULE 1
+#define CONFIG_FB_ATY128_BACKLIGHT 1
+#define CONFIG_XZ_DEC_X86 1
+#define CONFIG_MAC80211_LEDS 1
+#define CONFIG_INPUT_JOYDEV_MODULE 1
+#define CONFIG_FB_MATROX_MAVEN_MODULE 1
+#define CONFIG_EDAC_AMD76X_MODULE 1
+#define CONFIG_KEYBOARD_LKKBD_MODULE 1
+#define CONFIG_NETFILTER_XT_TARGET_TPROXY_MODULE 1
+#define CONFIG_HIBERNATE_CALLBACKS 1
+#define CONFIG_IP_DCCP_MODULE 1
+#define CONFIG_LIBIPW_MODULE 1
+#define CONFIG_FIREWIRE_OHCI_MODULE 1
+#define CONFIG_AC3200_MODULE 1
+#define CONFIG_USB_ACM_MODULE 1
+#define CONFIG_X86_GX_SUSPMOD_MODULE 1
+#define CONFIG_COMEDI_ADL_PCI9118_MODULE 1
+#define CONFIG_USB_RTL8150_MODULE 1
+#define CONFIG_X86_32 1
+#define CONFIG_X86_REBOOTFIXUPS 1
+#define CONFIG_CRC16_MODULE 1
+#define CONFIG_USB_NET_AX8817X_MODULE 1
+#define CONFIG_SND_EMU10K1_MODULE 1
+#define CONFIG_GENERIC_CALIBRATE_DELAY 1
+#define CONFIG_CRYPTO_GF128MUL_MODULE 1
+#define CONFIG_NLS_ISO8859_6_MODULE 1
+#define CONFIG_NET_CLS 1
+#define CONFIG_X86_CMPXCHG 1
+#define CONFIG_XFS_RT 1
+#define CONFIG_ISDN_DRV_AVMB1_B1ISA_MODULE 1
+#define CONFIG_COMEDI_S626_MODULE 1
+#define CONFIG_SND_INDIGO_MODULE 1
+#define CONFIG_UIO_PDRV_MODULE 1
+#define CONFIG_AX25_MODULE 1
+#define CONFIG_SND_YMFPCI_MODULE 1
+#define CONFIG_TMPFS 1
+#define CONFIG_X86_POWERNOW_K7_MODULE 1
+#define CONFIG_HOSTAP_MODULE 1
+#define CONFIG_ANON_INODES 1
+#define CONFIG_SND_CS5535AUDIO_MODULE 1
+#define CONFIG_VIDEO_EM28XX_MODULE 1
+#define CONFIG_NLS_CODEPAGE_936_MODULE 1
+#define CONFIG_HAMACHI_MODULE 1
+#define CONFIG_SCSI_AHA1542_MODULE 1
+#define CONFIG_ET131X_MODULE 1
+#define CONFIG_IR_ITE_CIR_MODULE 1
+#define CONFIG_DVB_BUDGET_MODULE 1
+#define CONFIG_FUTEX 1
+#define CONFIG_CRYPTO_ANUBIS_MODULE 1
+#define CONFIG_COMEDI_NI_AT_A2150_MODULE 1
+#define CONFIG_VIRTIO_PCI_MODULE 1
+#define CONFIG_GPIO_PCH_MODULE 1
+#define CONFIG_MISDN_HFCMULTI_MODULE 1
+#define CONFIG_MWAVE_MODULE 1
+#define CONFIG_PCMCIA_3C574_MODULE 1
+#define CONFIG_USB_GSPCA_SQ930X_MODULE 1
+#define CONFIG_RTL8192SE_MODULE 1
+#define CONFIG_JOYSTICK_SPACEBALL_MODULE 1
+#define CONFIG_REGMAP_I2C_MODULE 1
+#define CONFIG_USB_SERIAL_ZIO_MODULE 1
+#define CONFIG_M686 1
+#define CONFIG_NET_VENDOR_REALTEK 1
+#define CONFIG_DVB_DM1105_MODULE 1
+#define CONFIG_ARCH_HAVE_NMI_SAFE_CMPXCHG 1
+#define CONFIG_JOYSTICK_XPAD_FF 1
+#define CONFIG_NETFILTER_XT_TARGET_HL_MODULE 1
+#define CONFIG_MEGARAID_SAS_MODULE 1
+#define CONFIG_DVB_CORE_MODULE 1
+#define CONFIG_NFSD_V2_ACL 1
+#define CONFIG_COMEDI_ME_DAQ_MODULE 1
+#define CONFIG_ISL29003_MODULE 1
+#define CONFIG_CRYPTO_USER_API_MODULE 1
+#define CONFIG_RTC_HCTOSYS 1
+#define CONFIG_I2C_OCORES_MODULE 1
+#define CONFIG_SECURITY_NETWORK 1
+#define CONFIG_SERIAL_CORE_CONSOLE 1
+#define CONFIG_HUGETLB_PAGE 1
+#define CONFIG_HOTPLUG_PCI_CPCI 1
+#define CONFIG_MTD_SM_COMMON_MODULE 1
+#define CONFIG_CIFS_WEAK_PW_HASH 1
+#define CONFIG_TOUCHSCREEN_GUNZE_MODULE 1
+#define CONFIG_SENSORS_LM78_MODULE 1
+#define CONFIG_NET_VENDOR_EMULEX 1
+#define CONFIG_SCSI_ULTRASTOR_MODULE 1
+#define CONFIG_SENSORS_K10TEMP_MODULE 1
+#define CONFIG_USB_HID_MODULE 1
+#define CONFIG_DVB_USB_AF9015_MODULE 1
+#define CONFIG_UBIFS_FS_MODULE 1
+#define CONFIG_PARIDE_PT_MODULE 1
+#define CONFIG_RTL8192CU_MODULE 1
+#define CONFIG_AGP_AMD 1
+#define CONFIG_STALDRV 1
+#define CONFIG_ATM_DRIVERS 1
+#define CONFIG_CRYPTO_TGR192_MODULE 1
+#define CONFIG_BLK_DEV_RBD_MODULE 1
+#define CONFIG_USER_STACKTRACE_SUPPORT 1
+#define CONFIG_MEGARAID_MAILBOX_MODULE 1
+#define CONFIG_LANMEDIA_MODULE 1
+#define CONFIG_IT8712F_WDT_MODULE 1
+#define CONFIG_ARCNET_COM20020_ISA_MODULE 1
+#define CONFIG_COMEDI_NI_670X_MODULE 1
+#define CONFIG_BLK_DEV_MD_MODULE 1
+#define CONFIG_MMC_VUB300_MODULE 1
+#define CONFIG_USB_SERIAL_AIRCABLE_MODULE 1
+#define CONFIG_IP_SET_BITMAP_IP_MODULE 1
+#define CONFIG_RTS_PSTOR_MODULE 1
+#define CONFIG_MTD_ONENAND_SIM_MODULE 1
+#define CONFIG_GPIO_VX855_MODULE 1
+#define CONFIG_X86_INTEL_USERCOPY 1
+#define CONFIG_DECNET_NF_GRABULATOR_MODULE 1
+#define CONFIG_MTD_UBI_BEB_RESERVE 1
+#define CONFIG_MTD_SBC_GXX_MODULE 1
+#define CONFIG_NET_SCH_INGRESS_MODULE 1
+#define CONFIG_BCMA_MODULE 1
+#define CONFIG_DMADEVICES 1
+#define CONFIG_XENFS_MODULE 1
+#define CONFIG_SCSI_AACRAID_MODULE 1
+#define CONFIG_MISDN_HFCUSB_MODULE 1
+#define CONFIG_NF_CONNTRACK_EVENTS 1
+#define CONFIG_MOUSE_PS2_ELANTECH 1
+#define CONFIG_IPV6_NDISC_NODETYPE 1
+#define CONFIG_HFS_FS_MODULE 1
+#define CONFIG_RTC_DRV_MSM6242_MODULE 1
+#define CONFIG_DVB_USB_TECHNISAT_USB2_MODULE 1
+#define CONFIG_PCI_LABEL 1
+#define CONFIG_CRYPTO_ZLIB_MODULE 1
+#define CONFIG_NLS_CODEPAGE_1251_MODULE 1
+#define CONFIG_EDAC_X38_MODULE 1
+#define CONFIG_FANOTIFY 1
+#define CONFIG_SPI_BUTTERFLY_MODULE 1
+#define CONFIG_SONYPI_COMPAT 1
+#define CONFIG_IP_VS_PROTO_SCTP 1
+#define CONFIG_USB_SERIAL_FUNSOFT_MODULE 1
+#define CONFIG_SP5100_TCO_MODULE 1
+#define CONFIG_BLK_DEV_SR_VENDOR 1
+#define CONFIG_SATA_SIL_MODULE 1
+#define CONFIG_CGROUP_SCHED 1
+#define CONFIG_SND_HDA_RECONFIG 1
+#define CONFIG_SYSVIPC 1
+#define CONFIG_COMEDI_NI_LABPC_CS_MODULE 1
+#define CONFIG_HOSTAP_PLX_MODULE 1
+#define CONFIG_CRYPTO_PCOMP2 1
+#define CONFIG_JOYSTICK_INTERACT_MODULE 1
+#define CONFIG_COMEDI_DT282X_MODULE 1
+#define CONFIG_DVB_TDA10071_MODULE 1
+#define CONFIG_HDLC_CISCO_MODULE 1
+#define CONFIG_MLX4_INFINIBAND_MODULE 1
+#define CONFIG_RT2X00_MODULE 1
+#define CONFIG_NLS_CODEPAGE_863_MODULE 1
+#define CONFIG_WDT_MODULE 1
+#define CONFIG_PNPBIOS 1
+#define CONFIG_NF_CONNTRACK_FTP_MODULE 1
+#define CONFIG_DRM_SAVAGE_MODULE 1
+#define CONFIG_CHELSIO_T4_MODULE 1
+#define CONFIG_MODULES 1
+#define CONFIG_IP_NF_MATCH_ECN_MODULE 1
+#define CONFIG_USB_GADGET_MODULE 1
+#define CONFIG_REGULATOR_MAX8660_MODULE 1
+#define CONFIG_EEPROM_LEGACY_MODULE 1
+#define CONFIG_INFINIBAND_NES_MODULE 1
+#define CONFIG_USB_GSPCA_SPCA506_MODULE 1
+#define CONFIG_PATA_ARTOP_MODULE 1
+#define CONFIG_KEYBOARD_NEWTON_MODULE 1
+#define CONFIG_HARDLOCKUP_DETECTOR 1
+#define CONFIG_VIDEO_EM28XX_ALSA_MODULE 1
+#define CONFIG_MEDIA_TUNER_MXL5005S_MODULE 1
+#define CONFIG_USB_HIDDEV 1
+#define CONFIG_INFINIBAND_IPOIB_MODULE 1
+#define CONFIG_SENSORS_APDS990X_MODULE 1
+#define CONFIG_DVB_SI21XX_MODULE 1
+#define CONFIG_SCSI_IN2000_MODULE 1
+#define CONFIG_SOUND_MODULE 1
+#define CONFIG_EVENT_POWER_TRACING_DEPRECATED 1
+#define CONFIG_COMEDI_RTI802_MODULE 1
+#define CONFIG_SND_SIS7019_MODULE 1
+#define CONFIG_JOLIET 1
+#define CONFIG_DVB_USB_VP7045_MODULE 1
+#define CONFIG_BNX2X_MODULE 1
+#define CONFIG_MEDIA_TUNER_TDA9887_MODULE 1
+#define CONFIG_ADVANTECH_WDT_MODULE 1
+#define CONFIG_AUDIT_WATCH 1
+#define CONFIG_CRYPTO_TEA_MODULE 1
+#define CONFIG_SND_INTERWAVE_MODULE 1
+#define CONFIG_ARCH_HIBERNATION_POSSIBLE 1
+#define CONFIG_KVM_APIC_ARCHITECTURE 1
+#define CONFIG_DVB_USB_LME2510_MODULE 1
+#define CONFIG_PDC_ADMA_MODULE 1
+#define CONFIG_SND_VXPOCKET_MODULE 1
+#define CONFIG_UNIX 1
+#define CONFIG_USB_CATC_MODULE 1
+#define CONFIG_SND_OPTI93X_MODULE 1
+#define CONFIG_SCSI_SRP_MODULE 1
+#define CONFIG_VIDEO_TLG2300_MODULE 1
+#define CONFIG_MINIX_FS_MODULE 1
+#define CONFIG_BRCMSMAC_MODULE 1
+#define CONFIG_XEN_DEV_EVTCHN_MODULE 1
+#define CONFIG_CRYPTO_HASH2 1
+#define CONFIG_CARL9170_MODULE 1
+#define CONFIG_SND_HDA_CODEC_CONEXANT 1
+#define CONFIG_SND_RME9652_MODULE 1
+#define CONFIG_MTD_ABSENT_MODULE 1
+#define CONFIG_DEFAULT_HOSTNAME "(none)"
+#define CONFIG_COMEDI_ADDI_APCI_035_MODULE 1
+#define CONFIG_X86_CPUFREQ_NFORCE2_MODULE 1
+#define CONFIG_NLS_KOI8_R_MODULE 1
+#define CONFIG_EL16_MODULE 1
+#define CONFIG_USB_GADGET_STORAGE_NUM_BUFFERS 2
+#define CONFIG_USB_GSPCA_SONIXB_MODULE 1
+#define CONFIG_CARDMAN_4040_MODULE 1
+#define CONFIG_USB_STORAGE_ISD200_MODULE 1
+#define CONFIG_SCSI_U14_34F_LINKED_COMMANDS 1
+#define CONFIG_CPU_FREQ_GOV_POWERSAVE_MODULE 1
+#define CONFIG_USB_GSPCA_OV534_9_MODULE 1
+#define CONFIG_NFS_FS_MODULE 1
+#define CONFIG_MTD_SC520CDP_MODULE 1
+#define CONFIG_USB_NET_SMSC95XX_MODULE 1
+#define CONFIG_CRASH_DUMP 1
+#define CONFIG_INFINIBAND_ADDR_TRANS 1
+#define CONFIG_TULIP_NAPI_HW_MITIGATION 1
+#define CONFIG_BLK_DEV_IO_TRACE 1
+#define CONFIG_XPS 1
+#define CONFIG_C101_MODULE 1
+#define CONFIG_NET_ACT_SKBEDIT_MODULE 1
+#define CONFIG_COMEDI_ADV_PCI1723_MODULE 1
+#define CONFIG_INET_ESP_MODULE 1
+#define CONFIG_SECURITY_SELINUX_DEVELOP 1
+#define CONFIG_HPET_TIMER 1
+#define CONFIG_NF_CONNTRACK_ZONES 1
+#define CONFIG_NF_CONNTRACK_IPV6_MODULE 1
+#define CONFIG_MD 1
+#define CONFIG_CRYPTO_ALGAPI 1
+#define CONFIG_FDDI 1
+#define CONFIG_SENSORS_VT8231_MODULE 1
+#define CONFIG_DVB_BUDGET_CI_MODULE 1
+#define CONFIG_PARIDE_FIT3_MODULE 1
+#define CONFIG_COMEDI_KE_COUNTER_MODULE 1
+#define CONFIG_EDAC_I3200_MODULE 1
+#define CONFIG_BSD_PROCESS_ACCT_V3 1
+#define CONFIG_SCSI_DMX3191D_MODULE 1
+#define CONFIG_BRIDGE_MODULE 1
+#define CONFIG_MEDIA_TUNER_MODULE 1
+#define CONFIG_TABLET_USB_GTCO_MODULE 1
+#define CONFIG_USB_CYPRESS_CY7C63_MODULE 1
+#define CONFIG_EEPROM_AT25_MODULE 1
+#define CONFIG_RD_BZIP2 1
+#define CONFIG_INPUT_UINPUT_MODULE 1
+#define CONFIG_NETFILTER_XT_TARGET_CHECKSUM_MODULE 1
+#define CONFIG_TCG_ATMEL_MODULE 1
+#define CONFIG_ARCH_SUPPORTS_MSI 1
+#define CONFIG_DVB_MB86A16_MODULE 1
+#define CONFIG_MEDIA_TUNER_SIMPLE_MODULE 1
+#define CONFIG_SND_OXYGEN_MODULE 1
+#define CONFIG_SERIAL_8250_BOCA_MODULE 1
+#define CONFIG_PCH_GBE_MODULE 1
+#define CONFIG_KEYBOARD_ATKBD 1
+#define CONFIG_SCSI_QLA_ISCSI_MODULE 1
+#define CONFIG_AT1700_MODULE 1
+#define CONFIG_HAVE_MEMBLOCK_NODE_MAP 1
+#define CONFIG_X86_PLATFORM_DEVICES 1
+#define CONFIG_WANXL_MODULE 1
+#define CONFIG_MTD_CFI_I1 1
+#define CONFIG_NF_NAT_MODULE 1
+#define CONFIG_ARCH_HAS_DEFAULT_IDLE 1
+#define CONFIG_MAX_RAW_DEVS 256
+#define CONFIG_UBIFS_FS_ZLIB 1
+#define CONFIG_W83877F_WDT_MODULE 1
+#define CONFIG_WAFER_WDT_MODULE 1
+#define CONFIG_USB_U132_HCD_MODULE 1
+#define CONFIG_USB_SERIAL_XIRCOM_MODULE 1
+#define CONFIG_BLK_DEV_INTEGRITY 1
+#define CONFIG_DVB_USB_AZ6027_MODULE 1
+#define CONFIG_NET_VENDOR_OKI 1
+#define CONFIG_MOUSE_BCM5974_MODULE 1
+#define CONFIG_CPU_IDLE 1
+#define CONFIG_NFS_COMMON 1
+#define CONFIG_CHR_DEV_SCH_MODULE 1
+#define CONFIG_REGULATOR 1
+#define CONFIG_FAIR_GROUP_SCHED 1
+#define CONFIG_RT2800USB_MODULE 1
+#define CONFIG_CRYPTO_HASH 1
+#define CONFIG_EFI_PARTITION 1
+#define CONFIG_SSB_PCMCIAHOST_POSSIBLE 1
+#define CONFIG_INFINIBAND_AMSO1100_MODULE 1
+#define CONFIG_SND_HDA_CODEC_HDMI 1
+#define CONFIG_BCMA_BLOCKIO 1
+#define CONFIG_LOG_BUF_SHIFT 17
+#define CONFIG_PATA_IT8213_MODULE 1
+#define CONFIG_SND_CMIPCI_MODULE 1
+#define CONFIG_ACPI_WMI_MODULE 1
+#define CONFIG_HPET 1
+#define CONFIG_NLS_CODEPAGE_857_MODULE 1
+#define CONFIG_NETFILTER_XT_TARGET_DSCP_MODULE 1
+#define CONFIG_SND_EMU10K1X_MODULE 1
+#define CONFIG_EXTRA_FIRMWARE ""
+#define CONFIG_TCG_TPM_MODULE 1
+#define CONFIG_NET_VENDOR_8390 1
+#define CONFIG_IPV6_MROUTE 1
+#define CONFIG_XEN_PCIDEV_BACKEND_MODULE 1
+#define CONFIG_PROC_EVENTS 1
+#define CONFIG_ACPI_VIDEO_MODULE 1
+#define CONFIG_VIRT_TO_BUS 1
+#define CONFIG_VFAT_FS_MODULE 1
+#define CONFIG_SECURITY_SELINUX_CHECKREQPROT_VALUE 1
+#define CONFIG_EDAC_I5000_MODULE 1
+#define CONFIG_PID_NS 1
+#define CONFIG_MD_RAID1_MODULE 1
+#define CONFIG_COMEDI_ADDI_APCI_2200_MODULE 1
+#define CONFIG_CRYPTO_VMAC_MODULE 1
+#define CONFIG_SENSORS_ACPI_POWER_MODULE 1
+#define CONFIG_KEXEC 1
+#define CONFIG_ACPI_CMPC_MODULE 1
+#define CONFIG_RADIO_TEF6862_MODULE 1
+#define CONFIG_CRC32_SLICEBY8 1
+#define CONFIG_FB_DDC_MODULE 1
+#define CONFIG_COMEDI_DAS08_MODULE 1
+#define CONFIG_SCSI_MPT2SAS_MODULE 1
+#define CONFIG_HVC_XEN 1
+#define CONFIG_UWB_WHCI_MODULE 1
+#define CONFIG_TOUCHSCREEN_WM9713 1
+#define CONFIG_VIDEO_HDPVR_MODULE 1
+#define CONFIG_OLD_BELKIN_DONGLE_MODULE 1
+#define CONFIG_ROMFS_ON_BLOCK 1
+#define CONFIG_NET_SB1000_MODULE 1
+#define CONFIG_HERMES_CACHE_FW_ON_INIT 1
+#define CONFIG_BLK_DEV_SR_MODULE 1
+#define CONFIG_CPU_RMAP 1
+#define CONFIG_SND_HWDEP_MODULE 1
+#define CONFIG_GIGASET_M101_MODULE 1
+#define CONFIG_ISDN_DIVAS_PRIPCI 1
+#define CONFIG_SND_LAYLA20_MODULE 1
+#define CONFIG_BLK_DEV_LOOP_MODULE 1
+#define CONFIG_IPMI_HANDLER_MODULE 1
+#define CONFIG_B44_MODULE 1
+#define CONFIG_DEFAULT_HUNG_TASK_TIMEOUT 120
+#define CONFIG_SYSV_FS_MODULE 1
+#define CONFIG_ATMEL_MODULE 1
+#define CONFIG_SENSORS_THMC50_MODULE 1
+#define CONFIG_X86_POWERNOW_K7_ACPI 1
+#define CONFIG_HAVE_OPTPROBES 1
+#define CONFIG_ATM_AMBASSADOR_MODULE 1
+#define CONFIG_L2TP_ETH_MODULE 1
+#define CONFIG_PATA_ATIIXP_MODULE 1
+#define CONFIG_I8K_MODULE 1
+#define CONFIG_SCSI_QLOGIC_1280_MODULE 1
+#define CONFIG_HYPERV_UTILS_MODULE 1
+#define CONFIG_SYNCLINK_GT_MODULE 1
+#define CONFIG_CFQ_GROUP_IOSCHED 1
+#define CONFIG_NF_NAT_IRC_MODULE 1
+#define CONFIG_SND_SBAWE_MODULE 1
+#define CONFIG_60XX_WDT_MODULE 1
+#define CONFIG_GEODE_WDT_MODULE 1
+#define CONFIG_MEDIA_TUNER_XC2028_MODULE 1
+#define CONFIG_INPUT_MISC 1
+#define CONFIG_IR_NUVOTON_MODULE 1
+#define CONFIG_SENSORS_SCH5627_MODULE 1
+#define CONFIG_I2C_AMD756_MODULE 1
+#define CONFIG_E1000E_MODULE 1
+#define CONFIG_DNET_MODULE 1
+#define CONFIG_DVB_STV0288_MODULE 1
+#define CONFIG_USB_SL811_CS_MODULE 1
+#define CONFIG_SUSPEND 1
+#define CONFIG_SUNRPC_XPRT_RDMA_MODULE 1
+#define CONFIG_SCx200_GPIO_MODULE 1
+#define CONFIG_MTD_NAND_ECC_MODULE 1
+#define CONFIG_CRYPTO_CBC_MODULE 1
+#define CONFIG_SENSORS_LM93_MODULE 1
+#define CONFIG_PARIDE_ON20_MODULE 1
+#define CONFIG_BT_CMTP_MODULE 1
+#define CONFIG_MEDIA_CONTROLLER 1
+#define CONFIG_I8253_LOCK 1
+#define CONFIG_SMSC_SCH311X_WDT_MODULE 1
+#define CONFIG_AIC79XX_CMDS_PER_DEVICE 32
+#define CONFIG_IP6_NF_MATCH_RT_MODULE 1
+#define CONFIG_SCSI_IPR_MODULE 1
+#define CONFIG_SERIAL_8250_RUNTIME_UARTS 4
+#define CONFIG_NS83820_MODULE 1
+#define CONFIG_DRM_SIS_MODULE 1
+#define CONFIG_KPROBES 1
+#define CONFIG_FS_MBCACHE_MODULE 1
+#define CONFIG_SND_MIRO_MODULE 1
+#define CONFIG_MD_MULTIPATH_MODULE 1
+#define CONFIG_DS1682_MODULE 1
+#define CONFIG_GFS2_FS_MODULE 1
+#define CONFIG_RTC_CLASS 1
+#define CONFIG_DVB_TUNER_DIB0070_MODULE 1
+#define CONFIG_NCPFS_NLS 1
+#define CONFIG_SEEQ8005_MODULE 1
+#define CONFIG_FB_MB862XX_PCI_GDC 1
+#define CONFIG_CRC7_MODULE 1
+#define CONFIG_SENSORS_LTC4215_MODULE 1
+#define CONFIG_KVM_AMD_MODULE 1
+#define CONFIG_NET_CLS_TCINDEX_MODULE 1
+#define CONFIG_USB_EMI26_MODULE 1
+#define CONFIG_IP_VS_PROTO_ESP 1
+#define CONFIG_HAVE_LATENCYTOP_SUPPORT 1
+#define CONFIG_CRYPTO_DEV_GEODE_MODULE 1
+#define CONFIG_PCNET32_MODULE 1
+#define CONFIG_TMPFS_XATTR 1
+#define CONFIG_SND_CS4231_MODULE 1
+#define CONFIG_EDAC_I82975X_MODULE 1
+#define CONFIG_PCMCIA_NMCLAN_MODULE 1
+#define CONFIG_FB_UVESA_MODULE 1
+#define CONFIG_TOUCHSCREEN_TSC2007_MODULE 1
+#define CONFIG_SND_RME96_MODULE 1
+#define CONFIG_DCA_MODULE 1
+#define CONFIG_I2C_ALI1535_MODULE 1
+#define CONFIG_I2C_I801_MODULE 1
+#define CONFIG_BLK_DEV_UMEM_MODULE 1
+#define CONFIG_MTD_NAND_CAFE_MODULE 1
+#define CONFIG_SCSI_SYM53C8XX_DEFAULT_TAGS 16
+#define CONFIG_W1_MODULE 1
+#define CONFIG_LOGFS_MODULE 1
+#define CONFIG_DLM_DEBUG 1
+#define CONFIG_RT2800PCI_MODULE 1
+#define CONFIG_USB_GSPCA_VC032X_MODULE 1
+#define CONFIG_PCMCIA_RAYCS_MODULE 1
+#define CONFIG_IOMMU_HELPER 1
+#define CONFIG_DVB_ISL6421_MODULE 1
+#define CONFIG_RTC_DRV_DS1374_MODULE 1
+#define CONFIG_MICROCODE_OLD_INTERFACE 1
+#define CONFIG_RTC_DRV_BQ4802_MODULE 1
+#define CONFIG_TMD_HERMES_MODULE 1
+#define CONFIG_GENERIC_TRACER 1
+#define CONFIG_NLS_ISO8859_5_MODULE 1
+#define CONFIG_IP_VS_WLC_MODULE 1
+#define CONFIG_HAVE_FUNCTION_TRACER 1
+#define CONFIG_NF_NAT_TFTP_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_MULTIPORT_MODULE 1
+#define CONFIG_NET_SCH_NETEM_MODULE 1
+#define CONFIG_ACPI_PROCESSOR_AGGREGATOR_MODULE 1
+#define CONFIG_USB_STORAGE_REALTEK_MODULE 1
+#define CONFIG_WL12XX_SPI_MODULE 1
+#define CONFIG_CS5535_CLOCK_EVENT_SRC_MODULE 1
+#define CONFIG_I2C_PCA_ISA_MODULE 1
+#define CONFIG_CRYPTO_CAMELLIA_MODULE 1
+#define CONFIG_SND_EMU10K1_SEQ_MODULE 1
+#define CONFIG_RTC_DRV_DS1307_MODULE 1
+#define CONFIG_I2C_SIS630_MODULE 1
+#define CONFIG_ARCH_SELECT_MEMORY_MODEL 1
+#define CONFIG_NFSD_V4 1
+#define CONFIG_I2C_SI4713_MODULE 1
+#define CONFIG_TCP_CONG_ILLINOIS_MODULE 1
+#define CONFIG_ZEROPLUS_FF 1
+#define CONFIG_CRYPTO_MANAGER2 1
+#define CONFIG_USB_GADGET_VBUS_DRAW 2
+#define CONFIG_NET_VENDOR_MYRI 1
+#define CONFIG_DRAGONRISE_FF 1
+#define CONFIG_TOUCHSCREEN_USB_3M 1
+#define CONFIG_TOUCHSCREEN_USB_EGALAX 1
+#define CONFIG_BRIDGE_EBT_DNAT_MODULE 1
+#define CONFIG_GENERIC_PCI_IOMAP 1
+#define CONFIG_COMEDI_ACL7225B_MODULE 1
+#define CONFIG_SENSORS_AD7418_MODULE 1
+#define CONFIG_CONFIGFS_FS_MODULE 1
+#define CONFIG_CRYPTO_TEST_MODULE 1
+#define CONFIG_MTD_UBI_MODULE 1
+#define CONFIG_XZ_DEC_BCJ 1
+#define CONFIG_SLIP_MODULE 1
+#define CONFIG_PM_SLEEP 1
+#define CONFIG_SENSORS_FAM15H_POWER_MODULE 1
+#define CONFIG_I2C_MODULE 1
+#define CONFIG_COMPAL_LAPTOP_MODULE 1
+#define CONFIG_JFFS2_ZLIB 1
+#define CONFIG_PCMCIA_PCNET_MODULE 1
+#define CONFIG_EDAC_DECODE_MCE_MODULE 1
+#define CONFIG_SENSORS_VT1211_MODULE 1
+#define CONFIG_B44_PCI 1
+#define CONFIG_PPP_MULTILINK 1
+#define CONFIG_MTD_ONENAND_GENERIC_MODULE 1
+#define CONFIG_EFI_STUB 1
+#define CONFIG_SATA_PROMISE_MODULE 1
+#define CONFIG_PARPORT_1284 1
+#define CONFIG_VIDEO_CX25840_MODULE 1
+#define CONFIG_GENERIC_PENDING_IRQ 1
+#define CONFIG_I2C_AMD756_S4882_MODULE 1
+#define CONFIG_PARPORT_PC_MODULE 1
+#define CONFIG_EEXPRESS_PRO_MODULE 1
+#define CONFIG_X86_NEED_RELOCS 1
+#define CONFIG_SCSI_SRP_ATTRS_MODULE 1
+#define CONFIG_NET_IPGRE_BROADCAST 1
+#define CONFIG_BT_HIDP_MODULE 1
+#define CONFIG_PD6729_MODULE 1
+#define CONFIG_KS8851_MLL_MODULE 1
+#define CONFIG_VIDEO_CX231XX_RC 1
+#define CONFIG_MOUSE_PS2_LOGIPS2PP 1
+#define CONFIG_X86_SPEEDSTEP_ICH_MODULE 1
+#define CONFIG_COMEDI_DT2817_MODULE 1
+#define CONFIG_SMC_IRCC_FIR_MODULE 1
+#define CONFIG_SND_PCXHR_MODULE 1
+#define CONFIG_UFS_FS_MODULE 1
+#define CONFIG_VM_EVENT_COUNTERS 1
+#define CONFIG_RELAY 1
+#define CONFIG_HAVE_MMIOTRACE_SUPPORT 1
+#define CONFIG_ASUS_NB_WMI_MODULE 1
+#define CONFIG_USB_GSPCA_FINEPIX_MODULE 1
+#define CONFIG_SND_AD1816A_MODULE 1
+#define CONFIG_CRYPTO_ECB_MODULE 1
+#define CONFIG_USB_GSPCA_ETOMS_MODULE 1
+#define CONFIG_PM_STD_PARTITION ""
+#define CONFIG_SQUASHFS_LZO 1
+#define CONFIG_SND_DYNAMIC_MINORS 1
+#define CONFIG_FUJITSU_LAPTOP_MODULE 1
+#define CONFIG_TCM_FILEIO_MODULE 1
+#define CONFIG_NET_VENDOR_XIRCOM 1
+#define CONFIG_NI52_MODULE 1
+#define CONFIG_GENERIC_FIND_FIRST_BIT 1
+#define CONFIG_SCSI_STEX_MODULE 1
+#define CONFIG_HOTPLUG_PCI_CPCI_ZT5550_MODULE 1
+#define CONFIG_BT_HCIUART_ATH3K 1
+#define CONFIG_NF_CONNTRACK_AMANDA_MODULE 1
+#define CONFIG_SND_ATIIXP_MODEM_MODULE 1
+#define CONFIG_DEBUG_FS 1
+#define CONFIG_FEALNX_MODULE 1
+#define CONFIG_NET_VENDOR_AMD 1
+#define CONFIG_NET_PKTGEN_MODULE 1
+#define CONFIG_HP_WMI_MODULE 1
+#define CONFIG_USB_SERIAL_EDGEPORT_MODULE 1
+#define CONFIG_DRM_TTM_MODULE 1
+#define CONFIG_BASE_FULL 1
+#define CONFIG_FB_CFB_IMAGEBLIT 1
+#define CONFIG_ZLIB_DEFLATE_MODULE 1
+#define CONFIG_SUNRPC_MODULE 1
+#define CONFIG_SOLARIS_X86_PARTITION 1
+#define CONFIG_ARCNET_RAW_MODULE 1
+#define CONFIG_ARCH_DISCARD_MEMBLOCK 1
+#define CONFIG_SCSI_DH_RDAC_MODULE 1
+#define CONFIG_SENSORS_W83795_MODULE 1
+#define CONFIG_COMEDI_FC_MODULE 1
+#define CONFIG_X86_P4_CLOCKMOD_MODULE 1
+#define CONFIG_INPUT_ATI_REMOTE2_MODULE 1
+#define CONFIG_CNIC_MODULE 1
+#define CONFIG_DRM_I810_MODULE 1
+#define CONFIG_OSF_PARTITION 1
+#define CONFIG_NLS_CODEPAGE_864_MODULE 1
+#define CONFIG_IWL3945_MODULE 1
+#define CONFIG_IP_VS_LBLCR_MODULE 1
+#define CONFIG_USB_YUREX_MODULE 1
+#define CONFIG_XEN_BACKEND 1
+#define CONFIG_FW_LOADER 1
+#define CONFIG_LITELINK_DONGLE_MODULE 1
+#define CONFIG_SENSORS_ADS7828_MODULE 1
+#define CONFIG_KALLSYMS 1
+#define CONFIG_USB_GSPCA_SPCA501_MODULE 1
+#define CONFIG_HOTPLUG_PCI_PCIE 1
+#define CONFIG_PCI 1
+#define CONFIG_RTC_HCTOSYS_DEVICE "rtc0"
+#define CONFIG_E2100_MODULE 1
+#define CONFIG_CRYPTO_XTS_MODULE 1
+#define CONFIG_CHARGER_PCF50633_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_RECENT_MODULE 1
+#define CONFIG_DECOMPRESS_XZ 1
+#define CONFIG_NETFILTER_XT_MATCH_PKTTYPE_MODULE 1
+#define CONFIG_PCI_QUIRKS 1
+#define CONFIG_MII_MODULE 1
+#define CONFIG_SIGNALFD 1
+#define CONFIG_NET_CORE 1
+#define CONFIG_MOUSE_PS2_ALPS 1
+#define CONFIG_VIDEO_CPIA2_MODULE 1
+#define CONFIG_HAVE_UNSTABLE_SCHED_CLOCK 1
+#define CONFIG_EXT4_FS_MODULE 1
+#define CONFIG_NET_SCH_DRR_MODULE 1
+#define CONFIG_SENSORS_LTC4151_MODULE 1
+#define CONFIG_BRIDGE_EBT_802_3_MODULE 1
+#define CONFIG_CPU5_WDT_MODULE 1
+#define CONFIG_COMEDI_NI_65XX_MODULE 1
+#define CONFIG_FB_LE80578_MODULE 1
+#define CONFIG_HAVE_HW_BREAKPOINT 1
+#define CONFIG_KRETPROBES 1
+#define CONFIG_MTD_LPDDR_MODULE 1
+#define CONFIG_COMEDI_ADDI_APCI_3001_MODULE 1
+#define CONFIG_CRYPTO_SHA1_MODULE 1
+#define CONFIG_EDAC_MM_EDAC_MODULE 1
+#define CONFIG_BATTERY_BQ27X00_PLATFORM 1
+#define CONFIG_IPMI_WATCHDOG_MODULE 1
+#define CONFIG_DRM_TDFX_MODULE 1
+#define CONFIG_JOYSTICK_JOYDUMP_MODULE 1
+#define CONFIG_SCSI_7000FASST_MODULE 1
+#define CONFIG_IPV6_PRIVACY 1
+#define CONFIG_INFINIBAND_USER_ACCESS_MODULE 1
+#define CONFIG_BPQETHER_MODULE 1
+#define CONFIG_USB_ADUTUX_MODULE 1
+#define CONFIG_SPEAKUP_SYNTH_ACNTPC_MODULE 1
+#define CONFIG_SENSORS_SMSC47M192_MODULE 1
+#define CONFIG_NLS_KOI8_U_MODULE 1
+#define CONFIG_CRC8_MODULE 1
+#define CONFIG_SENSORS_SCH5636_MODULE 1
+#define CONFIG_XZ_DEC 1
+#define CONFIG_USB_BELKIN 1
+#define CONFIG_SATA_PMP 1
+#define CONFIG_IPW2100_MONITOR 1
+#define CONFIG_QLA3XXX_MODULE 1
+#define CONFIG_RTL8192U_MODULE 1
+#define CONFIG_CAN_VCAN_MODULE 1
+#define CONFIG_SBNI_MODULE 1
+#define CONFIG_ATH_COMMON_MODULE 1
+#define CONFIG_NET_VENDOR_TI 1
+#define CONFIG_LOCKD_V4 1
+#define CONFIG_DUMMY_MODULE 1
+#define CONFIG_CODA_FS_MODULE 1
+#define CONFIG_W1_SLAVE_DS2431_MODULE 1
+#define CONFIG_DVB_TUNER_CX24113_MODULE 1
+#define CONFIG_USB_GADGET_DUALSPEED 1
+#define CONFIG_BRIDGE_EBT_MARK_T_MODULE 1
+#define CONFIG_WATCHDOG 1
+#define CONFIG_SCSI_ADVANSYS_MODULE 1
+#define CONFIG_DVB_B2C2_FLEXCOP_PCI_MODULE 1
+#define CONFIG_HAS_IOMEM 1
+#define CONFIG_RING_BUFFER_ALLOW_SWAP 1
+#define CONFIG_SND_RAWMIDI_MODULE 1
+#define CONFIG_HOTPLUG_PCI_ACPI_IBM_MODULE 1
+#define CONFIG_LIRC_SASEM_MODULE 1
+#define CONFIG_8139TOO_8129 1
+#define CONFIG_SND_HDA_INPUT_BEEP_MODE 1
+#define CONFIG_COMEDI_PCL724_MODULE 1
+#define CONFIG_IR_FINTEK_MODULE 1
+#define CONFIG_GENERIC_IRQ_PROBE 1
+#define CONFIG_SND_OPL4_LIB_MODULE 1
+#define CONFIG_USB_NET_CDC_EEM_MODULE 1
+#define CONFIG_USB_STORAGE_SDDR09_MODULE 1
+#define CONFIG_HYPERV_STORAGE_MODULE 1
+#define CONFIG_IP_NF_MATCH_TTL_MODULE 1
+#define CONFIG_ASYNC_RAID6_RECOV_MODULE 1
+#define CONFIG_NET_CLS_IND 1
+#define CONFIG_X86_WP_WORKS_OK 1
+#define CONFIG_PATA_CS5536_MODULE 1
+#define CONFIG_SCSI_SYM53C8XX_MAX_TAGS 64
+#define CONFIG_NFTL_MODULE 1
+#define CONFIG_WANT_LLC 1
+#define CONFIG_PCI_MMCONFIG 1
+#define CONFIG_EEXPRESS_MODULE 1
+#define CONFIG_NETFILTER_XT_TARGET_TRACE_MODULE 1
+#define CONFIG_HVC_IRQ 1
+#define CONFIG_ATM_ZATM_MODULE 1
+#define CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND 1
+#define CONFIG_SND_RME32_MODULE 1
+#define CONFIG_PROC_KCORE 1
+#define CONFIG_RTC_DRV_X1205_MODULE 1
+#define CONFIG_MTD_MAP_BANK_WIDTH_1 1
+#define CONFIG_IP6_NF_MATCH_FRAG_MODULE 1
+#define CONFIG_USB_SERIAL_CYBERJACK_MODULE 1
+#define CONFIG_NET_SCH_PRIO_MODULE 1
+#define CONFIG_SCHED_HRTICK 1
+#define CONFIG_SATA_ULI_MODULE 1
+#define CONFIG_DVB_DRXK_MODULE 1
+#define CONFIG_USB_SERIAL_IUU_MODULE 1
+#define CONFIG_EPOLL 1
+#define CONFIG_FB_MATROX_G 1
+#define CONFIG_SCSI_AIC79XX_MODULE 1
+#define CONFIG_CRYPTO_LZO_MODULE 1
+#define CONFIG_RADIO_MAXIRADIO_MODULE 1
+#define CONFIG_SND_PCM_MODULE 1
+#define CONFIG_LIRC_ZILOG_MODULE 1
+#define CONFIG_PM_RUNTIME 1
+#define CONFIG_BRIDGE_EBT_SNAT_MODULE 1
+#define CONFIG_ARCH_HWEIGHT_CFLAGS "-fcall-saved-ecx -fcall-saved-edx"
+#define CONFIG_SND_AU8820_MODULE 1
+#define CONFIG_GIRBIL_DONGLE_MODULE 1
+#define CONFIG_EASYCAP_MODULE 1
+#define CONFIG_SDIO_UART_MODULE 1
+#define CONFIG_PARTITION_ADVANCED 1
+#define CONFIG_SENSORS_SCH56XX_COMMON_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_DCCP_MODULE 1
+#define CONFIG_ICPLUS_PHY_MODULE 1
+#define CONFIG_UNIXWARE_DISKLABEL 1
+#define CONFIG_COMEDI_USBDUXFAST_MODULE 1
+#define CONFIG_BT_BNEP_MC_FILTER 1
+#define CONFIG_SCSI_ISCSI_ATTRS_MODULE 1
+#define CONFIG_X86_BSWAP 1
+#define CONFIG_USB_SERIAL_EMPEG_MODULE 1
+#define CONFIG_HOSTESS_SV11_MODULE 1
+#define CONFIG_KEYBOARD_MAX7359_MODULE 1
+#define CONFIG_IR_SONY_DECODER_MODULE 1
+#define CONFIG_NLS_CODEPAGE_852_MODULE 1
+#define CONFIG_TCG_TIS_MODULE 1
+#define CONFIG_TOUCHSCREEN_USB_IDEALTEK 1
+#define CONFIG_VIDEO_PVRUSB2_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_COMMENT_MODULE 1
+#define CONFIG_USB_ISP116X_HCD_MODULE 1
+#define CONFIG_I2C_ISCH_MODULE 1
+#define CONFIG_USB_NET_RNDIS_HOST_MODULE 1
+#define CONFIG_NET 1
+#define CONFIG_ATARI_PARTITION 1
+#define CONFIG_INPUT_EVDEV_MODULE 1
+#define CONFIG_SND_JACK 1
+#define CONFIG_SND_AD1848_MODULE 1
+#define CONFIG_IDEAPAD_LAPTOP_MODULE 1
+#define CONFIG_SECURITY_PATH 1
+#define CONFIG_NETFILTER_XT_TARGET_TCPMSS_MODULE 1
+#define CONFIG_B43LEGACY_DMA 1
+#define CONFIG_ACPI_SLEEP 1
+#define CONFIG_EXT2_FS_MODULE 1
+#define CONFIG_TABLET_USB_WACOM_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_DSCP_MODULE 1
+#define CONFIG_CRYPTO_WP512_MODULE 1
+#define CONFIG_C2PORT_DURAMAR_2150_MODULE 1
+#define CONFIG_HID_DRAGONRISE_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_CONNTRACK_MODULE 1
+#define CONFIG_COMEDI_ADQ12B_MODULE 1
+#define CONFIG_ITCO_WDT_MODULE 1
+#define CONFIG_COMEDI_NI_LABPC_MODULE 1
+#define CONFIG_IBMLS_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_RATEEST_MODULE 1
+#define CONFIG_SND_ALOOP_MODULE 1
+#define CONFIG_USB_LD_MODULE 1
+#define CONFIG_MTD_GEN_PROBE_MODULE 1
+#define CONFIG_QUOTA_TREE_MODULE 1
+#define CONFIG_FB_VIA_MODULE 1
+#define CONFIG_INPUT_PCSPKR_MODULE 1
+#define CONFIG_PNFS_OBJLAYOUT_MODULE 1
+#define CONFIG_DVB_AV7110_OSD 1
+#define CONFIG_SERIO_PCIPS2_MODULE 1
+#define CONFIG_USB_NET_CDCETHER_MODULE 1
+#define CONFIG_PACKET 1
+#define CONFIG_ARCH_BINFMT_ELF_RANDOMIZE_PIE 1
+#define CONFIG_RTC_DRV_M48T86_MODULE 1
+#define CONFIG_ARCH_HAS_CPU_AUTOPROBE 1
+#define CONFIG_NF_CONNTRACK_TIMESTAMP 1
+#define CONFIG_SERIAL_PCH_UART_MODULE 1
+#define CONFIG_SENSORS_SMM665_MODULE 1
+#define CONFIG_MWIFIEX_SDIO_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_IPRANGE_MODULE 1
+#define CONFIG_INTEL_IOATDMA_MODULE 1
+#define CONFIG_NET_CLS_BASIC_MODULE 1
+#define CONFIG_SND_HDA_GENERIC 1
+#define CONFIG_I2C_TINY_USB_MODULE 1
+#define CONFIG_NETROM_MODULE 1
+#define CONFIG_FUSION_SPI_MODULE 1
+#define CONFIG_BTRFS_FS_POSIX_ACL 1
+#define CONFIG_USB_GSPCA_OV534_MODULE 1
+#define CONFIG_COMEDI_DT3000_MODULE 1
+#define CONFIG_DVB_USB_GL861_MODULE 1
+#define CONFIG_NF_CONNTRACK_TFTP_MODULE 1
+#define CONFIG_NFS_V3 1
+#define CONFIG_RTC_DRV_MAX6902_MODULE 1
+#define CONFIG_DVB_USB_ANYSEE_MODULE 1
+#define CONFIG_NLS_CODEPAGE_949_MODULE 1
+#define CONFIG_SENSORS_TMP102_MODULE 1
+#define CONFIG_NOP_TRACER 1
+#define CONFIG_BACKLIGHT_LCD_SUPPORT 1
+#define CONFIG_LOOPBACK_TARGET_MODULE 1
+#define CONFIG_ISL29020_MODULE 1
+#define CONFIG_SND_HDA_PATCH_LOADER 1
+#define CONFIG_XEN_XENBUS_FRONTEND 1
+#define CONFIG_INET 1
+#define CONFIG_CRYPTO_PCRYPT_MODULE 1
+#define CONFIG_COMEDI_CB_PCIMDDA_MODULE 1
+#define CONFIG_IPDDP_DECAP 1
+#define CONFIG_IP_ROUTE_VERBOSE 1
+#define CONFIG_XZ_DEC_POWERPC 1
+#define CONFIG_PCMCIA_WL3501_MODULE 1
+#define CONFIG_SND_ES1688_MODULE 1
+#define CONFIG_NFSD_FAULT_INJECTION 1
+#define CONFIG_VIRTIO_NET_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_ADDRTYPE_MODULE 1
+#define CONFIG_DRM_I915_KMS 1
+#define CONFIG_PREVENT_FIRMWARE_BUILD 1
+#define CONFIG_SERIAL_8250_PNP 1
+#define CONFIG_USB_NET_MCS7830_MODULE 1
+#define CONFIG_SND_ENS1371_MODULE 1
+#define CONFIG_CRYPTO_TWOFISH_MODULE 1
+#define CONFIG_FREEZER 1
+#define CONFIG_FIREWIRE_NET_MODULE 1
+#define CONFIG_USB_TEST_MODULE 1
+#define CONFIG_SCSI_AIC7XXX_OLD_MODULE 1
+#define CONFIG_ADAPTEC_STARFIRE_MODULE 1
+#define CONFIG_BT_MODULE 1
+#define CONFIG_BT_HCIVHCI_MODULE 1
+#define CONFIG_INPUT_CM109_MODULE 1
+#define CONFIG_PCI_DOMAINS 1
+#define CONFIG_EFI_VARS_MODULE 1
+#define CONFIG_DVB_USB_MXL111SF_MODULE 1
+#define CONFIG_SENSORS_IT87_MODULE 1
+#define CONFIG_LPC_SCH_MODULE 1
+#define CONFIG_NET_CLS_ACT 1
+#define CONFIG_REED_SOLOMON_MODULE 1
+#define CONFIG_CIFS_DFS_UPCALL 1
+#define CONFIG_NET_VENDOR_CHELSIO 1
+#define CONFIG_COMEDI_ADL_PCI6208_MODULE 1
+#define CONFIG_HDLC_RAW_ETH_MODULE 1
+#define CONFIG_COMEDI_MODULE 1
+#define CONFIG_BRIDGE_EBT_BROUTE_MODULE 1
+#define CONFIG_USB_NET_SMSC75XX_MODULE 1
+#define CONFIG_BE2NET_MODULE 1
+#define CONFIG_PARPORT_MODULE 1
+#define CONFIG_VORTEX_MODULE 1
+#define CONFIG_SPEAKUP_SYNTH_DECTLK_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_IPVS_MODULE 1
+#define CONFIG_X86_DEBUGCTLMSR 1
+#define CONFIG_HDLC_MODULE 1
+#define CONFIG_ATM_SOLOS_MODULE 1
+#define CONFIG_8139TOO_PIO 1
+#define CONFIG_NFS_V4_1_IMPLEMENTATION_ID_DOMAIN "n"
+#define CONFIG_IP_SET_MAX 256
+#define CONFIG_HAPPYMEAL_MODULE 1
+#define CONFIG_HID_WACOM_MODULE 1
+#define CONFIG_USB_SERIAL_CP210X_MODULE 1
+#define CONFIG_SND_PCMCIA 1
+#define CONFIG_RTC_LIB 1
+#define CONFIG_NET_SCH_SFQ_MODULE 1
+#define CONFIG_EDAC_R82600_MODULE 1
+#define CONFIG_X86_LOCAL_APIC 1
+#define CONFIG_USB_UEAGLEATM_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_POLICY_MODULE 1
+#define CONFIG_MWL8K_MODULE 1
+#define CONFIG_HAVE_KPROBES 1
+#define CONFIG_TPS65010_MODULE 1
+#define CONFIG_IP_ROUTE_CLASSID 1
+#define CONFIG_MOUSE_SYNAPTICS_I2C_MODULE 1
+#define CONFIG_NETFILTER_XT_TARGET_TEE_MODULE 1
+#define CONFIG_HPWDT_NMI_DECODING 1
+#define CONFIG_ENC28J60_MODULE 1
+#define CONFIG_TOUCHSCREEN_USB_ITM 1
+#define CONFIG_CRYPTO_AES_MODULE 1
+#define CONFIG_DVB_DIB7000P_MODULE 1
+#define CONFIG_GPIOLIB 1
+#define CONFIG_SSB_MODULE 1
+#define CONFIG_FB_MATROX_I2C_MODULE 1
+#define CONFIG_NSC_GPIO_MODULE 1
+#define CONFIG_I2C_STUB_MODULE 1
+#define CONFIG_VIDEO_EM28XX_RC 1
+#define CONFIG_RADIO_TEA5764_MODULE 1
+#define CONFIG_USB_GSPCA_SPCA1528_MODULE 1
+#define CONFIG_FB_SVGALIB_MODULE 1
+#define CONFIG_PARPORT_AX88796_MODULE 1
+#define CONFIG_HID_PID 1
+#define CONFIG_NV_TCO_MODULE 1
+#define CONFIG_SMSC9420_MODULE 1
+#define CONFIG_COMEDI_PCI_DRIVERS_MODULE 1
+#define CONFIG_SENSORS_MAX6639_MODULE 1
+#define CONFIG_GAMEPORT_MODULE 1
+#define CONFIG_ISO9660_FS_MODULE 1
+#define CONFIG_SKY2_MODULE 1
+#define CONFIG_BT_HCIUART_H4 1
+#define CONFIG_XEN_WDT_MODULE 1
+#define CONFIG_DVB_USB_M920X_MODULE 1
+#define CONFIG_UIO_MODULE 1
+#define CONFIG_HID_WALTOP_MODULE 1
+#define CONFIG_B43LEGACY_DEBUG 1
+#define CONFIG_SCSI_VIRTIO_MODULE 1
+#define CONFIG_NF_CONNTRACK_MARK 1
+#define CONFIG_HVC_DRIVER 1
+#define CONFIG_NETFILTER 1
+#define CONFIG_RC_LOOPBACK_MODULE 1
+#define CONFIG_ISDN_DRV_AVMB1_T1PCI_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_HASHLIMIT_MODULE 1
+#define CONFIG_EL2_MODULE 1
+#define CONFIG_BRIDGE_EBT_AMONG_MODULE 1
+#define CONFIG_COMEDI_DT2814_MODULE 1
+#define CONFIG_B43_PIO 1
+#define CONFIG_USB_R8A66597_HCD_MODULE 1
+#define CONFIG_X86_MSR_MODULE 1
+#define CONFIG_NET_VENDOR_SMSC 1
+#define CONFIG_NETFILTER_XT_MATCH_CLUSTER_MODULE 1
+#define CONFIG_USB_KC2190 1
+#define CONFIG_R6040_MODULE 1
+#define CONFIG_USE_GENERIC_SMP_HELPERS 1
+#define CONFIG_USB_MDC800_MODULE 1
+#define CONFIG_AIRO_CS_MODULE 1
+#define CONFIG_HWMON_VID_MODULE 1
+#define CONFIG_SERIO_SERPORT_MODULE 1
+#define CONFIG_FB_BOOT_VESA_SUPPORT 1
+#define CONFIG_COMEDI_ME4000_MODULE 1
+#define CONFIG_NLS_CODEPAGE_950_MODULE 1
+#define CONFIG_DVB_STV0297_MODULE 1
+#define CONFIG_DVB_TTUSB_DEC_MODULE 1
+#define CONFIG_HT_IRQ 1
+#define CONFIG_LIRC_MODULE 1
+#define CONFIG_SCSI_AIC94XX_MODULE 1
+#define CONFIG_BT_BNEP_MODULE 1
+#define CONFIG_NET_SCH_QFQ_MODULE 1
+#define CONFIG_DVB_TDA826X_MODULE 1
+#define CONFIG_COMEDI_MPC624_MODULE 1
+#define CONFIG_BLK_DEV_RAM_COUNT 16
+#define CONFIG_SCSI_FUTURE_DOMAIN_MODULE 1
+#define CONFIG_DRM_RADEON_KMS 1
+#define CONFIG_IXGBEVF_MODULE 1
+#define CONFIG_SND_AC97_POWER_SAVE_DEFAULT 0
+#define CONFIG_DVB_NGENE_MODULE 1
+#define CONFIG_RD_XZ 1
+#define CONFIG_IP_MROUTE 1
+#define CONFIG_INET_XFRM_MODE_TUNNEL_MODULE 1
+#define CONFIG_VGA_CONSOLE 1
+#define CONFIG_NF_NAT_NEEDED 1
+#define CONFIG_PHONE_IXJ_MODULE 1
+#define CONFIG_ATA_VERBOSE_ERROR 1
+#define CONFIG_ISDN_DRV_AVMB1_B1PCMCIA_MODULE 1
+#define CONFIG_XEN_BLKDEV_FRONTEND_MODULE 1
+#define CONFIG_NF_CONNTRACK_SNMP_MODULE 1
+#define CONFIG_SND_DRIVERS 1
+#define CONFIG_USB_SERIAL_BELKIN_MODULE 1
+#define CONFIG_W1_MASTER_DS2490_MODULE 1
+#define CONFIG_MEDIA_TUNER_MT2266_MODULE 1
+#define CONFIG_XFS_FS_MODULE 1
+#define CONFIG_SENSORS_DME1737_MODULE 1
+#define CONFIG_INPUT_KEYSPAN_REMOTE_MODULE 1
+#define CONFIG_USB_GSPCA_PAC7302_MODULE 1
+#define CONFIG_LOCKDEP_SUPPORT 1
+#define CONFIG_X86_MCE_INJECT_MODULE 1
+#define CONFIG_TOUCHSCREEN_ELO_MODULE 1
+#define CONFIG_NLS_CODEPAGE_869_MODULE 1
+#define CONFIG_LINE6_USB_MODULE 1
+#define CONFIG_SND_FIREWIRE_SPEAKERS_MODULE 1
+#define CONFIG_SND_AZT3328_MODULE 1
+#define CONFIG_SND_AC97_POWER_SAVE 1
+#define CONFIG_PCH_DMA_MODULE 1
+#define CONFIG_SATA_VIA_MODULE 1
+#define CONFIG_COMEDI_PCMMIO_MODULE 1
+#define CONFIG_NO_HZ 1
+#define CONFIG_X86_SPEEDSTEP_CENTRINO_TABLE 1
+#define CONFIG_POSIX_MQUEUE 1
+#define CONFIG_TOUCHSCREEN_TOUCHIT213_MODULE 1
+#define CONFIG_BINFMT_AOUT_MODULE 1
+#define CONFIG_USB_ARCH_HAS_EHCI 1
+#define CONFIG_FB_PM2_FIFO_DISCONNECT 1
+#define CONFIG_SENSORS_LM83_MODULE 1
+#define CONFIG_ACENIC_MODULE 1
+#define CONFIG_X86_ESPFIX32 1
+#define CONFIG_COMEDI_PCM3724_MODULE 1
+#define CONFIG_CPU_FREQ_STAT_MODULE 1
+#define CONFIG_X86_APM_BOOT 1
+#define CONFIG_ISCSI_IBFT_MODULE 1
+#define CONFIG_COMEDI_NI_DAQ_700_CS_MODULE 1
+#define CONFIG_PCMCIA_SMC91C92_MODULE 1
+#define CONFIG_BT_HCIDTL1_MODULE 1
+#define CONFIG_TIFM_CORE_MODULE 1
+#define CONFIG_XEN_PRIVCMD_MODULE 1
+#define CONFIG_FUSION_SAS_MODULE 1
+#define CONFIG_CHR_DEV_OSST_MODULE 1
+#define CONFIG_MTD_DOCPROBE_MODULE 1
+#define CONFIG_MTD_BLKDEVS_MODULE 1
+#define CONFIG_ACORN_PARTITION 1
+#define CONFIG_DVB_TDA10086_MODULE 1
+#define CONFIG_HP100_MODULE 1
+#define CONFIG_BLK_DEV_3W_XXXX_RAID_MODULE 1
+#define CONFIG_MEMSTICK_R592_MODULE 1
+#define CONFIG_NET_SCH_MQPRIO_MODULE 1
+#define CONFIG_VIDEO_CAPTURE_DRIVERS 1
+#define CONFIG_APDS9802ALS_MODULE 1
+#define CONFIG_DVB_NXT6000_MODULE 1
+#define CONFIG_MANTIS_CORE_MODULE 1
+#define CONFIG_PATA_MARVELL_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_SCTP_MODULE 1
+#define CONFIG_SATA_SIL24_MODULE 1
+#define CONFIG_SND_PCM_OSS_PLUGINS 1
+#define CONFIG_NET_VENDOR_DEC 1
+#define CONFIG_NLS_ISO8859_15_MODULE 1
+#define CONFIG_TOUCHSCREEN_EETI_MODULE 1
+#define CONFIG_SENSORS_VIA686A_MODULE 1
+#define CONFIG_INET6_ESP_MODULE 1
+#define CONFIG_HOSTAP_PCI_MODULE 1
+#define CONFIG_IP_VS_WRR_MODULE 1
+#define CONFIG_AUTOFS4_FS_MODULE 1
+#define CONFIG_ATH5K_MODULE 1
+#define CONFIG_ACPI_BUTTON_MODULE 1
+#define CONFIG_ILLEGAL_POINTER_VALUE 0x0
+#define CONFIG_UIO_NETX_MODULE 1
+#define CONFIG_JFFS2_CMODE_PRIORITY 1
+#define CONFIG_PDA_POWER_MODULE 1
+#define CONFIG_NETFILTER_XT_SET_MODULE 1
+#define CONFIG_SFC_MTD 1
+#define CONFIG_TASKSTATS 1
+#define CONFIG_ARCNET_1201_MODULE 1
+#define CONFIG_NLS_CODEPAGE_932_MODULE 1
+#define CONFIG_CRYPTO_CRC32C_INTEL_MODULE 1
+#define CONFIG_CAN_PLX_PCI_MODULE 1
+#define CONFIG_CRYPTO_AES_586_MODULE 1
+#define CONFIG_JFS_POSIX_ACL 1
+#define CONFIG_I2C_ALI1563_MODULE 1
+#define CONFIG_IP6_NF_FILTER_MODULE 1
+#define CONFIG_INPUT_MOUSEDEV_SCREEN_X 1024
+#define CONFIG_SND_HDA_PREALLOC_SIZE 64
+#define CONFIG_GARP_MODULE 1
+#define CONFIG_PCMCIA_AHA152X_MODULE 1
+#define CONFIG_RT2500USB_MODULE 1
+#define CONFIG_YENTA_ENE_TUNE 1
+#define CONFIG_X86_XADD 1
+#define CONFIG_MOUSE_PS2_LIFEBOOK 1
+#define CONFIG_SERIO_LIBPS2 1
+#define CONFIG_BLK_DEV_DRBD_MODULE 1
+#define CONFIG_IP_VS_PROTO_TCP 1
+#define CONFIG_ISCSI_BOOT_SYSFS_MODULE 1
+#define CONFIG_X86_CPUID_MODULE 1
+#define CONFIG_NET_SCH_RED_MODULE 1
+#define CONFIG_PCI_ATMEL_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_CONNBYTES_MODULE 1
+#define CONFIG_PAGE_OFFSET 0xC0000000
+#define CONFIG_USB_PRINTER_MODULE 1
+#define CONFIG_FONT_8x8 1
+#define CONFIG_SSB_SPROM 1
+#define CONFIG_USB_GSPCA_PAC207_MODULE 1
+#define CONFIG_HPLAN_MODULE 1
+#define CONFIG_NET_VENDOR_ATHEROS 1
+#define CONFIG_USB_SERIAL_IR_MODULE 1
+#define CONFIG_SKGE_MODULE 1
+#define CONFIG_COMEDI_DT9812_MODULE 1
+#define CONFIG_TCM_PSCSI_MODULE 1
+#define CONFIG_RELOCATABLE 1
+#define CONFIG_XOR_BLOCKS_MODULE 1
+#define CONFIG_HID_TWINHAN_MODULE 1
+#define CONFIG_SENSORS_NTC_THERMISTOR_MODULE 1
+#define CONFIG_MISDN_L1OIP_MODULE 1
+#define CONFIG_DVB_PT1_MODULE 1
+#define CONFIG_DMIID 1
+#define CONFIG_NET_VENDOR_SUN 1
+#define CONFIG_3C515_MODULE 1
+#define CONFIG_BACKLIGHT_PROGEAR_MODULE 1
+#define CONFIG_ASUS_WMI_MODULE 1
+#define CONFIG_SENSORS_DS1621_MODULE 1
+#define CONFIG_QUOTA_NETLINK_INTERFACE 1
+#define CONFIG_INPUT_JOYSTICK 1
+#define CONFIG_QNX4FS_FS_MODULE 1
+#define CONFIG_NET_ACT_SIMP_MODULE 1
+#define CONFIG_RT2X00_LIB_MODULE 1
+#define CONFIG_YAM_MODULE 1
+#define CONFIG_WD80x3_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_ECN_MODULE 1
+#define CONFIG_USB_GSPCA_STV0680_MODULE 1
+#define CONFIG_SND_FM801_TEA575X_BOOL 1
+#define CONFIG_USB_STORAGE_SDDR55_MODULE 1
+#define CONFIG_PPDEV_MODULE 1
+#define CONFIG_SPARSEMEM_STATIC 1
+#define CONFIG_IP_NF_TARGET_TTL_MODULE 1
+#define CONFIG_AMILO_RFKILL_MODULE 1
+#define CONFIG_ISDN_DRV_AVMB1_B1PCI_MODULE 1
+#define CONFIG_CFG80211_DEFAULT_PS 1
+#define CONFIG_USB_LED_MODULE 1
+#define CONFIG_GENERIC_IOMAP 1
+#define CONFIG_USBIP_HOST_MODULE 1
+#define CONFIG_I2O_MODULE 1
+#define CONFIG_TOUCHSCREEN_WACOM_W8001_MODULE 1
+#define CONFIG_DVB_PLUTO2_MODULE 1
+#define CONFIG_XEN_FBDEV_FRONTEND 1
+#define CONFIG_SPARSEMEM_MANUAL 1
+#define CONFIG_DVB_AV7110_MODULE 1
+#define CONFIG_RT2X00_LIB_FIRMWARE 1
+#define CONFIG_DL2K_MODULE 1
+#define CONFIG_I2O_LCT_NOTIFY_ON_CHANGES 1
+#define CONFIG_SMP 1
+#define CONFIG_FB_KYRO_MODULE 1
+#define CONFIG_DVB_ZL10353_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_TIME_MODULE 1
+#define CONFIG_SND_HDA_POWER_SAVE 1
+#define CONFIG_IP_VS_MODULE 1
+#define CONFIG_HAVE_KERNEL_GZIP 1
+#define CONFIG_ZSMALLOC_MODULE 1
+#define CONFIG_DM_UEVENT 1
+#define CONFIG_CAN_ESD_USB2_MODULE 1
+#define CONFIG_X86_USE_PPRO_CHECKSUM 1
+#define CONFIG_SND_MSND_CLASSIC_MODULE 1
+#define CONFIG_NET_VENDOR_I825XX 1
+#define CONFIG_SEALEVEL_4021_MODULE 1
+#define CONFIG_USB_XUSBATM_MODULE 1
+#define CONFIG_PNP 1
+#define CONFIG_RTC_DRV_RP5C01_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_MAC_MODULE 1
+#define CONFIG_I2C_NFORCE2_S4985_MODULE 1
+#define CONFIG_YELLOWFIN_MODULE 1
+#define CONFIG_TOUCHSCREEN_TPS6507X_MODULE 1
+#define CONFIG_NET_ACT_PEDIT_MODULE 1
+#define CONFIG_NETFILTER_XT_TARGET_NFLOG_MODULE 1
+#define CONFIG_TOUCHSCREEN_USB_JASTEC 1
+#define CONFIG_GENERIC_ALLOCATOR 1
+#define CONFIG_RTC_DRV_DS1390_MODULE 1
+#define CONFIG_L2TP_MODULE 1
+#define CONFIG_DVB_B2C2_FLEXCOP_USB_MODULE 1
+#define CONFIG_X86_POPAD_OK 1
+#define CONFIG_TCP_CONG_WESTWOOD_MODULE 1
+#define CONFIG_ATM_FORE200E_TX_RETRY 16
+#define CONFIG_USB_GSPCA_SPCA561_MODULE 1
+#define CONFIG_DRM_GMA600 1
+#define CONFIG_GENERIC_IO 1
+#define CONFIG_LIBCRC32C_MODULE 1
+#define CONFIG_MFD_PCF50633_MODULE 1
+#define CONFIG_GENERIC_BUG 1
+#define CONFIG_CRYPTO_SHA256_MODULE 1
+#define CONFIG_HAVE_FTRACE_MCOUNT_RECORD 1
+#define CONFIG_JOYSTICK_GUILLEMOT_MODULE 1
+#define CONFIG_BAYCOM_EPP_MODULE 1
+#define CONFIG_INET_TCP_DIAG_MODULE 1
+#define CONFIG_HID_SONY_MODULE 1
+#define CONFIG_VIDEO_PVRUSB2_DVB 1
+#define CONFIG_HW_CONSOLE 1
+#define CONFIG_MDIO_BITBANG_MODULE 1
+#define CONFIG_NET_ACT_IPT_MODULE 1
+#define CONFIG_PARIDE_ON26_MODULE 1
+#define CONFIG_SCSI_BNX2X_FCOE_MODULE 1
+#define CONFIG_IPX_MODULE 1
+#define CONFIG_HYPERV_NET_MODULE 1
+#define CONFIG_SERIAL_8250_ACCENT_MODULE 1
+#define CONFIG_SMSC_PHY_MODULE 1
+#define CONFIG_HP_ACCEL_MODULE 1
+#define CONFIG_CAN_EMS_PCI_MODULE 1
+#define CONFIG_SCSI_BNX2_ISCSI_MODULE 1
+#define CONFIG_OMFS_FS_MODULE 1
+#define CONFIG_USB_GSPCA_ZC3XX_MODULE 1
+#define CONFIG_SND_ES1968_MODULE 1
+#define CONFIG_SND_SPI 1
+#define CONFIG_EUROTECH_WDT_MODULE 1
+#define CONFIG_TOUCHSCREEN_MTOUCH_MODULE 1
+#define CONFIG_BRIDGE_EBT_IP_MODULE 1
+#define CONFIG_PARIDE_EPAT_MODULE 1
+#define CONFIG_HID_MONTEREY_MODULE 1
+#define CONFIG_FB_UDL_MODULE 1
+#define CONFIG_USB_SERIAL_CYPRESS_M8_MODULE 1
+#define CONFIG_FB_NEOMAGIC_MODULE 1
+#define CONFIG_HID_EZKEY_MODULE 1
+#define CONFIG_PADATA 1
+#define CONFIG_IOSCHED_NOOP 1
+#define CONFIG_SND_OPL4_LIB_SEQ_MODULE 1
+#define CONFIG_DVB_S5H1409_MODULE 1
+#define CONFIG_IPW2200_QOS 1
+#define CONFIG_SCSI_LOWLEVEL_PCMCIA 1
+#define CONFIG_JFFS2_FS_POSIX_ACL 1
+#define CONFIG_DM_THIN_PROVISIONING_MODULE 1
+#define CONFIG_SERIAL_NONSTANDARD 1
+#define CONFIG_RT61PCI_MODULE 1
+#define CONFIG_PATA_JMICRON_MODULE 1
+#define CONFIG_SCSI_OSD_ULD_MODULE 1
+#define CONFIG_JOYSTICK_XPAD_LEDS 1
+#define CONFIG_IPW2100_MODULE 1
+#define CONFIG_SCSI_PPA_MODULE 1
+#define CONFIG_BT_MRVL_MODULE 1
+#define CONFIG_QUOTACTL 1
+#define CONFIG_RTC_DRV_RX8581_MODULE 1
+#define CONFIG_FB_SAVAGE_I2C 1
+#define CONFIG_PARAVIRT 1
+#define CONFIG_ISDN_CAPI_CAPI20_MODULE 1
+#define CONFIG_CRYPTO_CRYPTD_MODULE 1
+#define CONFIG_SCSI_EATA_MAX_TAGS 16
+#define CONFIG_HAVE_IOREMAP_PROT 1
+#define CONFIG_PNPBIOS_PROC_FS 1
+#define CONFIG_USBIP_VHCI_HCD_MODULE 1
+#define CONFIG_PATA_RZ1000_MODULE 1
+#define CONFIG_GENERIC_ACL 1
+#define CONFIG_CAPI_TRACE 1
+#define CONFIG_DEBUG_KERNEL 1
+#define CONFIG_MTD_RAM_MODULE 1
+#define CONFIG_RTL8192DE_MODULE 1
+#define CONFIG_ACPI_TOSHIBA_MODULE 1
+#define CONFIG_GAMEPORT_NS558_MODULE 1
+#define CONFIG_VIDEO_CX2341X_MODULE 1
+#define CONFIG_LOCALVERSION ""
+#define CONFIG_NCPFS_IOCTL_LOCKING 1
+#define CONFIG_REISERFS_FS_SECURITY 1
+#define CONFIG_DVB_STV6110x_MODULE 1
+#define CONFIG_PATA_IT821X_MODULE 1
+#define CONFIG_ACERHDF_MODULE 1
+#define CONFIG_RADIO_ADAPTERS 1
+#define CONFIG_MEMTEST 1
+#define CONFIG_KEYBOARD_XTKBD_MODULE 1
+#define CONFIG_HAVE_PCSPKR_PLATFORM 1
+#define CONFIG_NFS_FSCACHE 1
+#define CONFIG_MAC80211_MESH 1
+#define CONFIG_MMC_WBSD_MODULE 1
+#define CONFIG_USB_GSPCA_TOPRO_MODULE 1
+#define CONFIG_USB_GSPCA_MARS_MODULE 1
+#define CONFIG_CAN_RAW_MODULE 1
+#define CONFIG_CRYPTO 1
+#define CONFIG_FB_MATROX_MILLENIUM 1
+#define CONFIG_SENSORS_EMC6W201_MODULE 1
+#define CONFIG_USB_TRANCEVIBRATOR_MODULE 1
+#define CONFIG_CPU_SUP_TRANSMETA_32 1
+#define CONFIG_SCHED_DEBUG 1
+#define CONFIG_USB_STKWEBCAM_MODULE 1
+#define CONFIG_NET_VENDOR_BROCADE 1
+#define CONFIG_BTRFS_FS_MODULE 1
+#define CONFIG_DEFAULT_MMAP_MIN_ADDR 65536
+#define CONFIG_ASYNC_TX_DISABLE_XOR_VAL_DMA 1
+#define CONFIG_A11Y_BRAILLE_CONSOLE 1
+#define CONFIG_SND_USB_6FIRE_MODULE 1
+#define CONFIG_SND_HDA_HWDEP 1
+#define CONFIG_I2C_SIS96X_MODULE 1
+#define CONFIG_MMC_TIFM_SD_MODULE 1
+#define CONFIG_SONYPI_MODULE 1
+#define CONFIG_GFS2_FS_LOCKING_DLM 1
+#define CONFIG_SND_SB8_DSP_MODULE 1
+#define CONFIG_MEDIA_TUNER_TDA18218_MODULE 1
+#define CONFIG_IP_NF_IPTABLES_MODULE 1
+#define CONFIG_W1_SLAVE_BQ27000_MODULE 1
+#define CONFIG_BT_BNEP_PROTO_FILTER 1
+#define CONFIG_FB_VIRTUAL_MODULE 1
+#define CONFIG_NET_VENDOR_QLOGIC 1
+#define CONFIG_USB_GSPCA_CPIA1_MODULE 1
+#define CONFIG_PARIDE_PF_MODULE 1
+#define CONFIG_USB_XHCI_HCD_MODULE 1
+#define CONFIG_VIRTIO_MODULE 1
+#define CONFIG_HAVE_DMA_API_DEBUG 1
+#define CONFIG_DEFAULT_CUBIC 1
+#define CONFIG_CAN_KVASER_PCI_MODULE 1
+#define CONFIG_YENTA_TI 1
+#define CONFIG_COMEDI_NI_660X_MODULE 1
+#define CONFIG_MFD_SM501_MODULE 1
+#define CONFIG_HID_SAMSUNG_MODULE 1
+#define CONFIG_IP_SET_LIST_SET_MODULE 1
+#define CONFIG_TCM_IBLOCK_MODULE 1
+#define CONFIG_IP_PIMSM_V2 1
+#define CONFIG_X86_MCE_THRESHOLD 1
+#define CONFIG_USB_ISIGHTFW_MODULE 1
+#define CONFIG_JME_MODULE 1
+#define CONFIG_SND_HDA_CODEC_CMEDIA 1
+#define CONFIG_YENTA_O2 1
+#define CONFIG_SND_SEQ_HRTIMER_DEFAULT 1
+#define CONFIG_USB_ARCH_HAS_HCD 1
+#define CONFIG_DVB_DIB3000MC_MODULE 1
+#define CONFIG_STRICT_DEVMEM 1
+#define CONFIG_CACHEFILES_MODULE 1
+#define CONFIG_PATA_OLDPIIX_MODULE 1
+#define CONFIG_GENERIC_IRQ_SHOW 1
+#define CONFIG_SND_HDA_CODEC_SI3054 1
+#define CONFIG_IPV6_OPTIMISTIC_DAD 1
+#define CONFIG_9P_FS_MODULE 1
+#define CONFIG_JOYSTICK_A3D_MODULE 1
+#define CONFIG_SENSORS_ATK0110_MODULE 1
+#define CONFIG_FB_VIA_X_COMPATIBILITY 1
+#define CONFIG_TCP_CONG_HSTCP_MODULE 1
+#define CONFIG_SCSI_MOD_MODULE 1
+#define CONFIG_SCSI_DPT_I2O_MODULE 1
+#define CONFIG_SCx200_MODULE 1
+#define CONFIG_AGP_SWORKS 1
+#define CONFIG_NET_VENDOR_MICREL 1
+#define CONFIG_AUDIT_TREE 1
+#define CONFIG_FB_PM2_MODULE 1
+#define CONFIG_GIGASET_M105_MODULE 1
+#define CONFIG_TOSHIBA_MODULE 1
+#define CONFIG_JOYSTICK_ZHENHUA_MODULE 1
+#define CONFIG_USB_SERIAL_SPCP8X5_MODULE 1
+#define CONFIG_SCx200_I2C_SDA 13
+#define CONFIG_B43_LEDS 1
+#define CONFIG_UBIFS_FS_XATTR 1
+#define CONFIG_P54_USB_MODULE 1
+#define CONFIG_TOUCHSCREEN_MK712_MODULE 1
+#define CONFIG_FB_ATY_MODULE 1
+#define CONFIG_USB_GSPCA_KINECT_MODULE 1
+#define CONFIG_SPEAKUP_SYNTH_DECEXT_MODULE 1
+#define CONFIG_COMEDI_DAQBOARD2000_MODULE 1
+#define CONFIG_OPROFILE_MODULE 1
+#define CONFIG_CRYPTO_CRC32C_MODULE 1
+#define CONFIG_SERIAL_CORE 1
+#define CONFIG_FUSE_FS_MODULE 1
+#define CONFIG_UID16 1
+#define CONFIG_ETHOC_MODULE 1
+#define CONFIG_ACPI_HED 1
+#define CONFIG_TMSPCI_MODULE 1
+#define CONFIG_HID_MICROSOFT_MODULE 1
+#define CONFIG_ARCH_PHYS_ADDR_T_64BIT 1
+#define CONFIG_RTC_DRV_S35390A_MODULE 1
+#define CONFIG_HAVE_KRETPROBES 1
+#define CONFIG_SCSI_IMM_MODULE 1
+#define CONFIG_AGP_VIA 1
+#define CONFIG_PCH_CAN_MODULE 1
+#define CONFIG_NF_DEFRAG_IPV6_MODULE 1
+#define CONFIG_USB_GSPCA_CONEX_MODULE 1
+#define CONFIG_MICREL_PHY_MODULE 1
+#define CONFIG_VIDEO_DEV_MODULE 1
+#define CONFIG_SGI_IOC4_MODULE 1
+#define CONFIG_NFS_V4 1
+#define CONFIG_IRCOMM_MODULE 1
+#define CONFIG_PPP_FILTER 1
+#define CONFIG_MTD_SLRAM_MODULE 1
+#define CONFIG_INLINE_READ_UNLOCK 1
+#define CONFIG_MTD_ROM_MODULE 1
+#define CONFIG_USB_ET61X251_MODULE 1
+#define CONFIG_PATA_PDC2027X_MODULE 1
+#define CONFIG_FB_I810_MODULE 1
+#define CONFIG_HAS_DMA 1
+#define CONFIG_INTEL_IPS_MODULE 1
+#define CONFIG_EDAC 1
+#define CONFIG_NF_CT_PROTO_SCTP_MODULE 1
+#define CONFIG_SND_CMI8330_MODULE 1
+#define CONFIG_USB_SERIAL_VISOR_MODULE 1
+#define CONFIG_MTD_PMC551_MODULE 1
+#define CONFIG_BROADCOM_PHY_MODULE 1
+#define CONFIG_COMEDI_PCMUIO_MODULE 1
+#define CONFIG_IO_DELAY_TYPE_NONE 3
+#define CONFIG_SCSI_QLOGIC_FAS_MODULE 1
+#define CONFIG_SCSI_MODULE 1
+#define CONFIG_FB_CFB_FILLRECT 1
+#define CONFIG_HYPERV_MODULE 1
+#define CONFIG_AT76C50X_USB_MODULE 1
+#define CONFIG_SCSI_U14_34F_MAX_TAGS 8
+#define CONFIG_NF_NAT_PPTP_MODULE 1
+#define CONFIG_HID_CHICONY_MODULE 1
+#define CONFIG_HID_MODULE 1
+#define CONFIG_HW_RANDOM_AMD_MODULE 1
+#define CONFIG_LIBERTAS_THINFIRM_USB_MODULE 1
+#define CONFIG_SLIP_SMART 1
+#define CONFIG_IXGB_MODULE 1
+#define CONFIG_NLS_ISO8859_9_MODULE 1
+#define CONFIG_FIRMWARE_EDID 1
+#define CONFIG_SND_SERIAL_U16550_MODULE 1
+#define CONFIG_USB_ARMLINUX 1
+#define CONFIG_I2C_SMBUS_MODULE 1
+#define CONFIG_IP_VS_PE_SIP_MODULE 1
+#define CONFIG_JOYSTICK_GF2K_MODULE 1
+#define CONFIG_RTLWIFI_MODULE 1
+#define CONFIG_LTPC_MODULE 1
+#define CONFIG_X86_POWERNOW_K6_MODULE 1
+#define CONFIG_LEDS_TRIGGER_DEFAULT_ON_MODULE 1
+#define CONFIG_MXM_WMI_MODULE 1
+#define CONFIG_FONT_8x16 1
+#define CONFIG_NET_VENDOR_MELLANOX 1
+#define CONFIG_MAC80211_HWSIM_MODULE 1
+#define CONFIG_DVB_LGDT330X_MODULE 1
+#define CONFIG_SERIAL_8250_MANY_PORTS 1
+#define CONFIG_VT_CONSOLE_SLEEP 1
+#define CONFIG_LIBFC_MODULE 1
+#define CONFIG_LEDS_NET48XX_MODULE 1
+#define CONFIG_X86_MCE_INTEL 1
+#define CONFIG_ARCH_ENABLE_MEMORY_HOTPLUG 1
+#define CONFIG_RTC_DRV_CMOS 1
+#define CONFIG_TOUCHSCREEN_HTCPEN_MODULE 1
+#define CONFIG_PTP_1588_CLOCK_MODULE 1
+#define CONFIG_IEEE802154_DRIVERS_MODULE 1
+#define CONFIG_ADFS_FS_MODULE 1
+#define CONFIG_TOUCHSCREEN_USB_IRTOUCH 1
+#define CONFIG_PATA_AMD_MODULE 1
+#define CONFIG_USB_PWC_MODULE 1
+#define CONFIG_SQUASHFS_FRAGMENT_CACHE_SIZE 3
+#define CONFIG_SENSORS_AD7414_MODULE 1
+#define CONFIG_MEDIA_TUNER_TDA8290_MODULE 1
+#define CONFIG_COMEDI_ADV_PCI_DIO_MODULE 1
+#define CONFIG_TOUCHSCREEN_USB_PANJIT 1
+#define CONFIG_RT2800PCI_RT53XX 1
+#define CONFIG_BONDING_MODULE 1
+#define CONFIG_SECURITY_TOMOYO_ACTIVATION_TRIGGER "/sbin/init"
+#define CONFIG_MEDIA_TUNER_TDA18212_MODULE 1
+#define CONFIG_ARCH_HAS_CACHE_LINE_SIZE 1
+#define CONFIG_SCx200_I2C_MODULE 1
+#define CONFIG_JBD2_MODULE 1
+#define CONFIG_SENSORS_ASB100_MODULE 1
+#define CONFIG_SND_INTEL8X0_MODULE 1
+#define CONFIG_COMEDI_NI_ATMIO_MODULE 1
+#define CONFIG_PATA_NS87415_MODULE 1
+#define CONFIG_USBIP_CORE_MODULE 1
+#define CONFIG_ATM_BR2684_MODULE 1
+#define CONFIG_IB700_WDT_MODULE 1
+#define CONFIG_MMC_USHC_MODULE 1
+#define CONFIG_COMEDI_CB_PCIDAS64_MODULE 1
+#define CONFIG_SPI_TLE62X0_MODULE 1
+#define CONFIG_INET6_IPCOMP_MODULE 1
+#define CONFIG_SONY_LAPTOP_MODULE 1
+#define CONFIG_QLCNIC_MODULE 1
+#define CONFIG_FB_SIS_315 1
+#define CONFIG_IRDA_FAST_RR 1
+#define CONFIG_NET_VENDOR_MARVELL 1
+#define CONFIG_PHYLIB_MODULE 1
+#define CONFIG_IGB_DCA 1
+#define CONFIG_IPV6_TUNNEL_MODULE 1
+#define CONFIG_SENSORS_LM77_MODULE 1
+#define CONFIG_W1_SLAVE_DS2760_MODULE 1
+#define CONFIG_NET_VENDOR_NVIDIA 1
+#define CONFIG_DVB_TDA665x_MODULE 1
+#define CONFIG_PARIDE_BPCK6_MODULE 1
+#define CONFIG_NLS_CODEPAGE_874_MODULE 1
+#define CONFIG_UBIFS_FS_ADVANCED_COMPR 1
+#define CONFIG_GIGASET_CAPI 1
+#define CONFIG_OPTIMIZE_INLINING 1
+#define CONFIG_ULTRIX_PARTITION 1
+#define CONFIG_VIRTIO_BALLOON_MODULE 1
+#define CONFIG_HOTPLUG_PCI_CPCI_GENERIC_MODULE 1
+#define CONFIG_LSM_MMAP_MIN_ADDR 0
+#define CONFIG_SCSI_ARCMSR_MODULE 1
+#define CONFIG_COMEDI_AMPLC_DIO200_MODULE 1
+#define CONFIG_MTD_NAND_DISKONCHIP_PROBE_ADDRESS 0x0
+#define CONFIG_CAN_PEAK_PCI_MODULE 1
+#define CONFIG_PPS_CLIENT_LDISC_MODULE 1
+#define CONFIG_MTD_ONENAND_2X_PROGRAM 1
+#define CONFIG_MEDIA_TUNER_MT20XX_MODULE 1
+#define CONFIG_NET_TULIP 1
+#define CONFIG_JFFS2_RTIME 1
+#define CONFIG_IPC_NS 1
+#define CONFIG_MISC_FILESYSTEMS 1
+#define CONFIG_FTRACE 1
+#define CONFIG_NETFILTER_XT_MATCH_CONNLIMIT_MODULE 1
+#define CONFIG_ATP_MODULE 1
+#define CONFIG_X86_THERMAL_VECTOR 1
+#define CONFIG_IP_NF_SECURITY_MODULE 1
+#define CONFIG_IP_NF_RAW_MODULE 1
+#define CONFIG_IP_NF_ARPFILTER_MODULE 1
+#define CONFIG_TOUCHSCREEN_USB_ETT_TC45USB 1
+#define CONFIG_LIRC_SERIAL_TRANSMITTER 1
+#define CONFIG_W1_CON 1
+#define CONFIG_NETFILTER_XT_MATCH_SOCKET_MODULE 1
+#define CONFIG_PPPOL2TP_MODULE 1
+#define CONFIG_SYNCLINK_MODULE 1
+#define CONFIG_KEYBOARD_ADP5588_MODULE 1
+#define CONFIG_CLOCKSOURCE_WATCHDOG 1
+#define CONFIG_R8712U_MODULE 1
+#define CONFIG_HID_TOPSEED_MODULE 1
+#define CONFIG_B43_PHY_HT 1
+#define CONFIG_FB_VT8623_MODULE 1
+#define CONFIG_DECOMPRESS_BZIP2 1
+#define CONFIG_SCx200_I2C_SCL 12
+#define CONFIG_RT2800PCI_RT33XX 1
+#define CONFIG_CORDIC_MODULE 1
+#define CONFIG_COMEDI_CB_PCIDAS_MODULE 1
+#define CONFIG_FB_TRIDENT_MODULE 1
+#define CONFIG_SENSORS_ADM1029_MODULE 1
+#define CONFIG_KSM 1
+#define CONFIG_NET_VENDOR_STMICRO 1
+#define CONFIG_EDAC_I3000_MODULE 1
+#define CONFIG_DECNET_MODULE 1
+#define CONFIG_TOPSTAR_LAPTOP_MODULE 1
+#define CONFIG_AGP_SIS 1
+#define CONFIG_NF_NAT_H323_MODULE 1
+#define CONFIG_XZ_DEC_SPARC 1
+#define CONFIG_JOYSTICK_TURBOGRAFX_MODULE 1
+#define CONFIG_SKISA_MODULE 1
+#define CONFIG_COMEDI_DMM32AT_MODULE 1
+#define CONFIG_JFFS2_SUMMARY 1
+#define CONFIG_IR_ENE_MODULE 1
+#define CONFIG_ALIM1535_WDT_MODULE 1
+#define CONFIG_GIGASET_BASE_MODULE 1
+#define CONFIG_INLINE_READ_UNLOCK_IRQ 1
+#define CONFIG_GACT_PROB 1
+#define CONFIG_MISDN_ISAR_MODULE 1
+#define CONFIG_REALTEK_PHY_MODULE 1
+#define CONFIG_PROC_VMCORE 1
+#define CONFIG_HID_A4TECH_MODULE 1
+#define CONFIG_MEDIA_TUNER_MC44S803_MODULE 1
+#define CONFIG_NLS_CODEPAGE_860_MODULE 1
+#define CONFIG_SND_MONA_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_ESP_MODULE 1
+#define CONFIG_PRINT_QUOTA_WARNING 1
+#define CONFIG_NIU_MODULE 1
+#define CONFIG_IP_NF_TARGET_NETMAP_MODULE 1
+#define CONFIG_USB_GSPCA_SPCA505_MODULE 1
+#define CONFIG_RCU_CPU_STALL_TIMEOUT 60
+#define CONFIG_USB_GSPCA_SQ905C_MODULE 1
+#define CONFIG_SATA_VITESSE_MODULE 1
+#define CONFIG_USB_ZR364XX_MODULE 1
+#define CONFIG_PRINTER_MODULE 1
+#define CONFIG_RTC_DRV_ISL1208_MODULE 1
+#define CONFIG_ISDN_DIVAS_DIVACAPI_MODULE 1
+#define CONFIG_SND_VERBOSE_PROCFS 1
+#define CONFIG_SND_FIREWIRE_LIB_MODULE 1
+#define CONFIG_LAPB_MODULE 1
+#define CONFIG_SECURITY_TOMOYO_MAX_ACCEPT_ENTRY 2048
+#define CONFIG_IP_ROUTE_MULTIPATH 1
+#define CONFIG_RTC_DRV_PCF2123_MODULE 1
+#define CONFIG_ISDN_DIVAS_USERIDI_MODULE 1
+#define CONFIG_DVB_LNBP21_MODULE 1
+#define CONFIG_XEN_NETDEV_FRONTEND_MODULE 1
+#define CONFIG_M25PXX_USE_FAST_READ 1
+#define CONFIG_DVB_TDA10048_MODULE 1
+#define CONFIG_INPUT_FF_MEMLESS_MODULE 1
+#define CONFIG_PARAVIRT_CLOCK 1
+#define CONFIG_SENSORS_W83627HF_MODULE 1
+#define CONFIG_CHR_DEV_SG_MODULE 1
+#define CONFIG_USB_CDC_PHONET_MODULE 1
+#define CONFIG_IP_SET_HASH_NET_MODULE 1
+#define CONFIG_NET_SCH_DSMARK_MODULE 1
+#define CONFIG_SND_AD1889_MODULE 1
+#define CONFIG_SSB_DRIVER_PCICORE_POSSIBLE 1
+#define CONFIG_MISDN_AVMFRITZ_MODULE 1
+#define CONFIG_X86_RESERVE_LOW 64
+#define CONFIG_SMS_SDIO_DRV_MODULE 1
+#define CONFIG_NEED_SG_DMA_LENGTH 1
+#define CONFIG_SERIAL_8250_HUB6_MODULE 1
+#define CONFIG_SND_MPU401_MODULE 1
+#define CONFIG_DVB_CX24116_MODULE 1
+#define CONFIG_CRYPTO_XCBC_MODULE 1
+#define CONFIG_NF_NAT_AMANDA_MODULE 1
+#define CONFIG_IPW2200_MODULE 1
+#define CONFIG_BRIDGE_EBT_MARK_MODULE 1
+#define CONFIG_KEYBOARD_QT2160_MODULE 1
+#define CONFIG_SENSORS_ADT7411_MODULE 1
+#define CONFIG_IXGBE_DCA 1
+#define CONFIG_IP6_NF_MATCH_IPV6HEADER_MODULE 1
+#define CONFIG_MACVLAN_MODULE 1
+#define CONFIG_PATA_PDC_OLD_MODULE 1
+#define CONFIG_L2TP_V3 1
+#define CONFIG_CHELSIO_T1_1G 1
+#define CONFIG_SND_SSCAPE_MODULE 1
+#define CONFIG_IBMTR_MODULE 1
+#define CONFIG_FB_ARK_MODULE 1
+#define CONFIG_JOYSTICK_IFORCE_MODULE 1
+#define CONFIG_PCIEASPM_DEFAULT 1
+#define CONFIG_PROFILING 1
+#define CONFIG_PCF50633_ADC_MODULE 1
+#define CONFIG_ARCNET_MODULE 1
+#define CONFIG_I2C_ALI15X3_MODULE 1
+#define CONFIG_SPARSEMEM 1
+#define CONFIG_INET6_XFRM_MODE_TRANSPORT_MODULE 1
+#define CONFIG_COMEDI_ADDI_APCI_2032_MODULE 1
+#define CONFIG_SND_ALS100_MODULE 1
+#define CONFIG_CRYPTO_ARC4_MODULE 1
+#define CONFIG_SND_TEA575X_MODULE 1
+#define CONFIG_IEEE802154_6LOWPAN_MODULE 1
+#define CONFIG_VHOST_NET_MODULE 1
+#define CONFIG_DVB_STV0900_MODULE 1
+#define CONFIG_I2C_NFORCE2_MODULE 1
+#define CONFIG_USB_SERIAL_DIGI_ACCELEPORT_MODULE 1
+#define CONFIG_USB_GL860_MODULE 1
+#define CONFIG_SLHC_MODULE 1
+#define CONFIG_NET_VENDOR_TEHUTI 1
+#define CONFIG_SND_ALS300_MODULE 1
+#define CONFIG_I2C_EG20T_MODULE 1
+#define CONFIG_SCSI_TGT_MODULE 1
+#define CONFIG_CRYPTO_MANAGER 1
+#define CONFIG_NET_SCH_HTB_MODULE 1
+#define CONFIG_EEPROM_AT24_MODULE 1
+#define CONFIG_UIO_SERCOS3_MODULE 1
+#define CONFIG_PPP_BSDCOMP_MODULE 1
+#define CONFIG_SCHED_SMT 1
+#define CONFIG_DVB_USB_TTUSB2_MODULE 1
+#define CONFIG_MTD_NAND_MODULE 1
+#define CONFIG_RT_MUTEXES 1
+#define CONFIG_SCx200HR_TIMER_MODULE 1
+#define CONFIG_HID_ORTEK_MODULE 1
+#define CONFIG_NETFILTER_XT_TARGET_MARK_MODULE 1
+#define CONFIG_MEDIA_TUNER_MXL5007T_MODULE 1
+#define CONFIG_TCIC_MODULE 1
+#define CONFIG_DRM_I2C_SIL164_MODULE 1
+#define CONFIG_MD_LINEAR_MODULE 1
+#define CONFIG_HUGETLBFS 1
+#define CONFIG_CHECK_SIGNATURE 1
+#define CONFIG_DVB_TDA10021_MODULE 1
+#define CONFIG_VIDEO_CX231XX_DVB_MODULE 1
+#define CONFIG_WL1251_MODULE 1
+#define CONFIG_I2C_ALGOBIT_MODULE 1
+#define CONFIG_IPV6_SUBTREES 1
+#define CONFIG_MMC_BLOCK_MODULE 1
+#define CONFIG_NET_CLS_FW_MODULE 1
+#define CONFIG_KVM_MODULE 1
+#define CONFIG_SND_PCI 1
+#define CONFIG_BATTERY_BQ27X00_I2C 1
+#define CONFIG_ATM_FORE200E_DEBUG 0
+#define CONFIG_ATL1C_MODULE 1
+#define CONFIG_HW_RANDOM_INTEL_MODULE 1
+#define CONFIG_LIRC_SERIAL_MODULE 1
+#define CONFIG_LXT_PHY_MODULE 1
+#define CONFIG_FB_MB862XX_MODULE 1
+#define CONFIG_VIDEO_MT9V011_MODULE 1
+#define CONFIG_WIRELESS 1
+#define CONFIG_WEXT_PROC 1
+#define CONFIG_SQUASHFS_MODULE 1
+#define CONFIG_EDAC_I7CORE_MODULE 1
+#define CONFIG_HZ_250 1
+#define CONFIG_FB_N411_MODULE 1
+#define CONFIG_X86_IO_APIC 1
+#define CONFIG_DELL_WMI_AIO_MODULE 1
+#define CONFIG_SND_ALS4000_MODULE 1
+#define CONFIG_USB_GSPCA_KONICA_MODULE 1
+#define CONFIG_NET_SCH_TBF_MODULE 1
+#define CONFIG_SND_SC6000_MODULE 1
+#define CONFIG_BT_HCIBTUSB_MODULE 1
+#define CONFIG_DVB_CX22702_MODULE 1
+#define CONFIG_SERIO_RAW_MODULE 1
+#define CONFIG_TASK_IO_ACCOUNTING 1
+#define CONFIG_FAT_DEFAULT_IOCHARSET "utf8"
+#define CONFIG_UWB_MODULE 1
+#define CONFIG_ASYNC_XOR_MODULE 1
+#define CONFIG_I2O_CONFIG_MODULE 1
+#define CONFIG_ISDN_CAPI_MIDDLEWARE 1
+#define CONFIG_NET_CLS_RSVP_MODULE 1
+#define CONFIG_TIPC_MODULE 1
+#define CONFIG_DVB_STB6100_MODULE 1
+#define CONFIG_W83977F_WDT_MODULE 1
+#define CONFIG_MD_RAID0_MODULE 1
+#define CONFIG_FRAME_WARN 1024
+#define CONFIG_NE2000_MODULE 1
+#define CONFIG_USB_NET_CDC_NCM_MODULE 1
+#define CONFIG_FB_SIS_300 1
+#define CONFIG_ACT200L_DONGLE_MODULE 1
+#define CONFIG_HP_WATCHDOG_MODULE 1
+#define CONFIG_COMEDI_USB_DRIVERS_MODULE 1
+#define CONFIG_PATA_SCH_MODULE 1
+#define CONFIG_GENERIC_HWEIGHT 1
+#define CONFIG_INITRAMFS_SOURCE ""
+#define CONFIG_PATA_NETCELL_MODULE 1
+#define CONFIG_SND_GUSEXTREME_MODULE 1
+#define CONFIG_ATM_CLIP_MODULE 1
+#define CONFIG_COMEDI_RTD520_MODULE 1
+#define CONFIG_SND_HDA_CODEC_SIGMATEL 1
+#define CONFIG_SND_ADLIB_MODULE 1
+#define CONFIG_CGROUPS 1
+#define CONFIG_SND_USB_CAIAQ_INPUT 1
+#define CONFIG_MMC_MODULE 1
+#define CONFIG_LZO_COMPRESS 1
+#define CONFIG_MOUSE_PC110PAD_MODULE 1
+#define CONFIG_TOUCHSCREEN_USB_GUNZE 1
+#define CONFIG_CRYPTO_SEQIV_MODULE 1
+#define CONFIG_COMEDI_QUATECH_DAQP_CS_MODULE 1
+#define CONFIG_TOUCHSCREEN_AD7877_MODULE 1
+#define CONFIG_SND_HDA_POWER_SAVE_DEFAULT 0
+#define CONFIG_9P_FSCACHE 1
+#define CONFIG_HID_LOGITECH_MODULE 1
+#define CONFIG_SND_INDIGODJX_MODULE 1
+#define CONFIG_ARCNET_COM90xx_MODULE 1
+#define CONFIG_DM_LOG_USERSPACE_MODULE 1
+#define CONFIG_JOYSTICK_GAMECON_MODULE 1
+#define CONFIG_SCSI_ENCLOSURE_MODULE 1
+#define CONFIG_CAPI_EICON 1
+#define CONFIG_STACKTRACE 1
+#define CONFIG_SENSORS_LM92_MODULE 1
+#define CONFIG_COMEDI_ADDI_APCI_3120_MODULE 1
+#define CONFIG_SCSI_SAS_LIBSAS_MODULE 1
+#define CONFIG_ISCSI_TARGET_MODULE 1
+#define CONFIG_ARCNET_RIM_I_MODULE 1
+#define CONFIG_HID_WACOM_POWER_SUPPLY 1
+#define CONFIG_OPROFILE_NMI_TIMER 1
+#define CONFIG_NETFILTER_XT_TARGET_IDLETIMER_MODULE 1
+#define CONFIG_FB_ATY128_MODULE 1
+#define CONFIG_UIO_AEC_MODULE 1
+#define CONFIG_SCSI_PM8001_MODULE 1
+#define CONFIG_USB_NET_RNDIS_WLAN_MODULE 1
+#define CONFIG_ARCH_SUPPORTS_DEBUG_PAGEALLOC 1
+#define CONFIG_VIDEO_TUNER_MODULE 1
+#define CONFIG_IFB_MODULE 1
+#define CONFIG_HAS_IOPORT 1
+#define CONFIG_LEDS_LP3944_MODULE 1
+#define CONFIG_USB_SEVSEG_MODULE 1
+#define CONFIG_SND_MPU401_UART_MODULE 1
+#define CONFIG_RTC_DRV_PCF8563_MODULE 1
+#define CONFIG_SND_CS4236_MODULE 1
+#define CONFIG_PPTP_MODULE 1
+#define CONFIG_SENSORS_SMSC47M1_MODULE 1
+#define CONFIG_SND_USB_US122L_MODULE 1
+#define CONFIG_USB_DSBR_MODULE 1
+#define CONFIG_ISCSI_IBFT_FIND 1
+#define CONFIG_ACORN_PARTITION_ICS 1
+#define CONFIG_DCB 1
+#define CONFIG_PCIPCWATCHDOG_MODULE 1
+#define CONFIG_CGROUP_CPUACCT 1
+#define CONFIG_USB_SERIAL_OTI6858_MODULE 1
+#define CONFIG_ACTISYS_DONGLE_MODULE 1
+#define CONFIG_CAN_BCM_MODULE 1
+#define CONFIG_PATA_CS5520_MODULE 1
+#define CONFIG_X86_CMPXCHG64 1
+#define CONFIG_VIDEO_SAA7146_VV_MODULE 1
+#define CONFIG_NET_VENDOR_VIA 1
+#define CONFIG_USB_ATM_MODULE 1
+#define CONFIG_ISA_DMA_API 1
+#define CONFIG_PCMCIA_FDOMAIN_MODULE 1
+#define CONFIG_HZ 250
+#define CONFIG_SERIAL_8250_SHARE_IRQ 1
+#define CONFIG_I2C_HELPER_AUTO 1
+#define CONFIG_NETFILTER_XT_MATCH_U32_MODULE 1
+#define CONFIG_SQUASHFS_ZLIB 1
+#define CONFIG_AGP_INTEL 1
+#define CONFIG_INLINE_SPIN_UNLOCK_IRQ 1
+#define CONFIG_NLS_ISO8859_4_MODULE 1
+#define CONFIG_TOUCHSCREEN_AD7879_I2C_MODULE 1
+#define CONFIG_INTEL_OAKTRAIL_MODULE 1
+#define CONFIG_SND_MTS64_MODULE 1
+#define CONFIG_FB_BACKLIGHT 1
+#define CONFIG_RTC_DRV_RX8025_MODULE 1
+#define CONFIG_EDAC_I82860_MODULE 1
+#define CONFIG_SERIAL_8250_NR_UARTS 32
+#define CONFIG_CRYPTO_RMD160_MODULE 1
+#define CONFIG_IR_IMON_MODULE 1
+#define CONFIG_PATA_HPT366_MODULE 1
+#define CONFIG_SCSI_EATA_MODULE 1
+#define CONFIG_INET_AH_MODULE 1
+#define CONFIG_SENSORS_ATXP1_MODULE 1
+#define CONFIG_HAVE_USER_RETURN_NOTIFIER 1
+#define CONFIG_DEFAULT_IOSCHED "cfq"
+#define CONFIG_DRM_I2C_CH7006_MODULE 1
+#define CONFIG_TABLET_USB_KBTAB_MODULE 1
+#define CONFIG_UDF_FS_MODULE 1
+#define CONFIG_IPV6_MIP6 1
+#define CONFIG_MARVELL_PHY_MODULE 1
+#define CONFIG_VXFS_FS_MODULE 1
+#define CONFIG_CGROUP_PERF 1
+#define CONFIG_NLATTR 1
+#define CONFIG_SND_LOLA_MODULE 1
+#define CONFIG_ISDN_CAPI_MODULE 1
+#define CONFIG_HOTPLUG_PCI 1
+#define CONFIG_ZD1211RW_MODULE 1
+#define CONFIG_TCP_CONG_CUBIC 1
+#define CONFIG_CEPH_FS_MODULE 1
+#define CONFIG_SCSI_NETLINK 1
+#define CONFIG_TR 1
+#define CONFIG_NR_CPUS 32
+#define CONFIG_IXGBE_MODULE 1
+#define CONFIG_SUSPEND_FREEZER 1
+#define CONFIG_LIRC_IMON_MODULE 1
+#define CONFIG_MMC_SDHCI_MODULE 1
+#define CONFIG_B43_SSB 1
+#define CONFIG_SND_SUPPORT_OLD_API 1
+#define CONFIG_LEDS_WRAP_MODULE 1
+#define CONFIG_DVB_DIB7000M_MODULE 1
+#define CONFIG_NETFILTER_XT_CONNMARK_MODULE 1
+#define CONFIG_LEDS_LT3593_MODULE 1
+#define CONFIG_LOGITECH_FF 1
+#define CONFIG_HID_KYE_MODULE 1
+#define CONFIG_MOUSE_PS2_TRACKPOINT 1
+#define CONFIG_MOUSE_VSXXXAA_MODULE 1
+#define CONFIG_IP_MROUTE_MULTIPLE_TABLES 1
+#define CONFIG_VIDEO_TM6000_ALSA_MODULE 1
+#define CONFIG_WL12XX_SDIO_MODULE 1
+#define CONFIG_DRM_NOUVEAU_BACKLIGHT 1
+#define CONFIG_SOFT_WATCHDOG_MODULE 1
+#define CONFIG_SYSFS 1
+#define CONFIG_IPWIRELESS_MODULE 1
+#define CONFIG_PARIDE_FRPW_MODULE 1
+#define CONFIG_IP_SET_BITMAP_IPMAC_MODULE 1
+#define CONFIG_MTD_NAND_RICOH_MODULE 1
+#define CONFIG_LIB80211_CRYPT_WEP_MODULE 1
+#define CONFIG_DELL_WMI_MODULE 1
+#define CONFIG_HAVE_FUNCTION_TRACE_MCOUNT_TEST 1
+#define CONFIG_SENSORS_W83791D_MODULE 1
+#define CONFIG_INPUT_TOUCHSCREEN 1
+#define CONFIG_RADIO_SI4713_MODULE 1
+#define CONFIG_DSCC4_PCI_RST 1
+#define CONFIG_I2C_VIAPRO_MODULE 1
+#define CONFIG_USB_GSPCA_NW80X_MODULE 1
+#define CONFIG_IP_NF_MATCH_AH_MODULE 1
+#define CONFIG_INFINIBAND_SRP_MODULE 1
+#define CONFIG_SYNCLINK_CS_MODULE 1
+#define CONFIG_CARL9170_WPC 1
+#define CONFIG_TCP_CONG_VENO_MODULE 1
+#define CONFIG_DVB_S5H1420_MODULE 1
+#define CONFIG_INFINIBAND_MODULE 1
+#define CONFIG_AFS_FS_MODULE 1
+#define CONFIG_COMEDI_S526_MODULE 1
+#define CONFIG_COMEDI_DAS1800_MODULE 1
+#define CONFIG_DVB_NET 1
+#define CONFIG_I2C_PARPORT_LIGHT_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_LIMIT_MODULE 1
+#define CONFIG_CRYPTO_AES_NI_INTEL_MODULE 1
+#define CONFIG_ULI526X_MODULE 1
+#define CONFIG_IP6_NF_QUEUE_MODULE 1
+#define CONFIG_NET_KEY_MIGRATE 1
+#define CONFIG_CC_STACKPROTECTOR 1
+#define CONFIG_I2C_SIMTEC_MODULE 1
+#define CONFIG_XZ_DEC_ARM 1
+#define CONFIG_DEFAULT_IO_DELAY_TYPE 0
+#define CONFIG_NLS_CODEPAGE_775_MODULE 1
+#define CONFIG_IRLAN_MODULE 1
+#define CONFIG_MOUSE_SERIAL_MODULE 1
+#define CONFIG_FB_SYS_FOPS 1
+#define CONFIG_JOYSTICK_ANALOG_MODULE 1
+#define CONFIG_MISDN_HFCPCI_MODULE 1
+#define CONFIG_WIMAX_MODULE 1
+#define CONFIG_EXT2_FS_SECURITY 1
+#define CONFIG_I2O_SCSI_MODULE 1
+#define CONFIG_HAVE_SYSCALL_TRACEPOINTS 1
+#define CONFIG_MEDIA_TUNER_XC4000_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_DEVGROUP_MODULE 1
+#define CONFIG_ACPI_BATTERY_MODULE 1
+#define CONFIG_DVB_LGDT3305_MODULE 1
+#define CONFIG_MEMSTICK_MODULE 1
+#define CONFIG_HOTPLUG_PCI_COMPAQ_MODULE 1
+#define CONFIG_VIDEO_SAA7146_MODULE 1
+#define CONFIG_MTD_COMPLEX_MAPPINGS 1
+#define CONFIG_FB 1
+#define CONFIG_TRACING 1
+#define CONFIG_X86_SPEEDSTEP_SMI_MODULE 1
+#define CONFIG_NLS_CODEPAGE_865_MODULE 1
+#define CONFIG_I2C_COMPAT 1
+#define CONFIG_KEYBOARD_OPENCORES_MODULE 1
+#define CONFIG_LIRC_IGORPLUGUSB_MODULE 1
+#define CONFIG_NFSD_V3_ACL 1
+#define CONFIG_USB_GSPCA_SPCA500_MODULE 1
+#define CONFIG_I2O_BLOCK_MODULE 1
+#define CONFIG_NET_ACT_NAT_MODULE 1
+#define CONFIG_OCFS2_FS_STATS 1
+#define CONFIG_VIRTUALIZATION 1
+#define CONFIG_MSDOS_PARTITION 1
+#define CONFIG_COMEDI_RTI800_MODULE 1
+#define CONFIG_MYRI10GE_DCA 1
+#define CONFIG_COMEDI_ADL_PCI7296_MODULE 1
+#define CONFIG_BT_HCIUART_MODULE 1
+#define CONFIG_TOUCHSCREEN_USB_NEXIO 1
+#define CONFIG_BOOTPARAM_HARDLOCKUP_PANIC_VALUE 0
+#define CONFIG_RT2800USB_RT33XX 1
+#define CONFIG_DVB_LNBP22_MODULE 1
+#define CONFIG_SENSORS_TMP421_MODULE 1
+#define CONFIG_FB_RADEON_I2C 1
+#define CONFIG_USB_GSPCA_SN9C2028_MODULE 1
+#define CONFIG_SUNGEM_MODULE 1
+#define CONFIG_HAVE_OPROFILE 1
+#define CONFIG_IR_STREAMZAP_MODULE 1
+#define CONFIG_HAVE_GENERIC_DMA_COHERENT 1
+#define CONFIG_SND_HDSPM_MODULE 1
+#define CONFIG_EFI_VARS_PSTORE 1
+#define CONFIG_NET_VENDOR_RACAL 1
+#define CONFIG_LEDS_CLEVO_MAIL_MODULE 1
+#define CONFIG_CPU_IDLE_GOV_LADDER 1
+#define CONFIG_IP_SET_MODULE 1
+#define CONFIG_THERMAL_MODULE 1
+#define CONFIG_DVB_BUDGET_PATCH_MODULE 1
+#define CONFIG_TOUCHSCREEN_TOUCHRIGHT_MODULE 1
+#define CONFIG_AMD8111_ETH_MODULE 1
+#define CONFIG_COMEDI_ADL_PCI8164_MODULE 1
+#define CONFIG_I2C_AMD8111_MODULE 1
+#define CONFIG_INPUT_POWERMATE_MODULE 1
+#define CONFIG_NET_FC 1
+#define CONFIG_FB_S3_MODULE 1
+#define CONFIG_BRCMUTIL_MODULE 1
+#define CONFIG_DE600_MODULE 1
+#define CONFIG_DVB_TTUSB_BUDGET_MODULE 1
+#define CONFIG_VETH_MODULE 1
+#define CONFIG_RTC_DRV_PCF8583_MODULE 1
+#define CONFIG_DVB_MT312_MODULE 1
+#define CONFIG_DVB_USB_DIBUSB_MB_FAULTY 1
+#define CONFIG_NET_VENDOR_3COM 1
+#define CONFIG_ATM_DUMMY_MODULE 1
+#define CONFIG_HID_PETALYNX_MODULE 1
+#define CONFIG_MTD_PCMCIA_MODULE 1
+#define CONFIG_FB_ATY_CT 1
+#define CONFIG_TLAN_MODULE 1
+#define CONFIG_COMEDI_AMPLC_PCI230_MODULE 1
+#define CONFIG_SND_HDA_CODEC_VIA 1
+#define CONFIG_MEMSTICK_TIFM_MS_MODULE 1
+#define CONFIG_ATM_LANE_MODULE 1
+#define CONFIG_SND_GUSMAX_MODULE 1
+#define CONFIG_SENSORS_W83L786NG_MODULE 1
+#define CONFIG_NET_ACT_MIRRED_MODULE 1
+#define CONFIG_HAVE_ARCH_KGDB 1
+#define CONFIG_INPUT_APANEL_MODULE 1
+#define CONFIG_USB_ARCH_HAS_OHCI 1
+#define CONFIG_B43_PCICORE_AUTOSELECT 1
+#define CONFIG_NF_CONNTRACK_IPV4_MODULE 1
+#define CONFIG_SERIAL_MFD_HSU_MODULE 1
+#define CONFIG_MYRI10GE_MODULE 1
+#define CONFIG_X86_PM_TIMER 1
+#define CONFIG_USB_VL600_MODULE 1
+#define CONFIG_ZONE_DMA_FLAG 1
+#define CONFIG_PARIDE_BPCK_MODULE 1
+#define CONFIG_X86_PAE 1
+#define CONFIG_B43LEGACY_HWRNG 1
+#define CONFIG_BATTERY_BQ27x00_MODULE 1
+#define CONFIG_CAN_SOFTING_MODULE 1
+#define CONFIG_RT2X00_LIB_PCI_MODULE 1
+#define CONFIG_SND_DUMMY_MODULE 1
+#define CONFIG_SCSI_MVSAS_MODULE 1
+#define CONFIG_NET_VENDOR_INTEL 1
+#define CONFIG_USB_WUSB_CBAF_MODULE 1
+#define CONFIG_RPS 1
+#define CONFIG_USB_NET_ZAURUS_MODULE 1
+#define CONFIG_INET6_XFRM_TUNNEL_MODULE 1
+#define CONFIG_DM_MULTIPATH_ST_MODULE 1
+#define CONFIG_PATA_CS5535_MODULE 1
+#define CONFIG_SENSORS_LM95241_MODULE 1
+#define CONFIG_PROC_PID_CPUSET 1
+#define CONFIG_REALTEK_AUTOPM 1
+#define CONFIG_FB_METRONOME_MODULE 1
+#define CONFIG_AD525X_DPOT_SPI_MODULE 1
+#define CONFIG_8139TOO_TUNE_TWISTER 1
+#define CONFIG_INPUT_ATLAS_BTNS_MODULE 1
+#define CONFIG_ACQUIRE_WDT_MODULE 1
+#define CONFIG_TOUCHSCREEN_USB_DMC_TSC10 1
+#define CONFIG_DVB_ZL10039_MODULE 1
+#define CONFIG_MIXCOMWD_MODULE 1
+#define CONFIG_CAPI_AVM 1
+#define CONFIG_MTD_MAP_BANK_WIDTH_2 1
+#define CONFIG_WDTPCI_MODULE 1
+#define CONFIG_USB_SERIAL_DEBUG_MODULE 1
+#define CONFIG_IP_SET_HASH_IPPORTIP_MODULE 1
+#define CONFIG_MLX4_EN_MODULE 1
+#define CONFIG_PARIDE_DSTR_MODULE 1
+#define CONFIG_TABLET_USB_ACECAD_MODULE 1
+#define CONFIG_MTD_DOC2001PLUS_MODULE 1
+#define CONFIG_SENSORS_LM70_MODULE 1
+#define CONFIG_NET_EMATCH_NBYTE_MODULE 1
+#define CONFIG_SENSORS_BH1770_MODULE 1
+#define CONFIG_NORTEL_HERMES_MODULE 1
+#define CONFIG_SIS190_MODULE 1
+#define CONFIG_LP486E_MODULE 1
+#define CONFIG_TCG_NSC_MODULE 1
+#define CONFIG_MOUSE_INPORT_MODULE 1
+#define CONFIG_ZISOFS 1
+#define CONFIG_VIDEO_MEDIA_MODULE 1
+#define CONFIG_WIMAX_I2400M_MODULE 1
+#define CONFIG_CUSE_MODULE 1
+#define CONFIG_HTC_PASIC3_MODULE 1
+#define CONFIG_TOUCHSCREEN_WM97XX_MODULE 1
+#define CONFIG_IP_MULTICAST 1
+#define CONFIG_FB_RADEON_MODULE 1
+#define CONFIG_CRYPTO_RMD256_MODULE 1
+#define CONFIG_DVB_MT352_MODULE 1
+#define CONFIG_RC_ATI_REMOTE_MODULE 1
+#define CONFIG_W83627HF_WDT_MODULE 1
+#define CONFIG_SQUASHFS_XZ 1
+#define CONFIG_FB_VOODOO1_MODULE 1
+#define CONFIG_USB_NET_CX82310_ETH_MODULE 1
+#define CONFIG_GENERIC_CMOS_UPDATE 1
+#define CONFIG_NET_VENDOR_CISCO 1
+#define CONFIG_EEPROM_MAX6875_MODULE 1
+#define CONFIG_W1_MASTER_MATROX_MODULE 1
+#define CONFIG_MOUSE_APPLETOUCH_MODULE 1
+#define CONFIG_HID_LOGITECH_DJ_MODULE 1
+#define CONFIG_DEFAULT_SECURITY ""
+#define CONFIG_TICK_ONESHOT 1
+#define CONFIG_XEN_PCIDEV_FRONTEND_MODULE 1
+#define CONFIG_NF_NAT_PROTO_UDPLITE_MODULE 1
+#define CONFIG_USB_SERIAL_SIERRAWIRELESS_MODULE 1
+#define CONFIG_CRYPTO_CTR_MODULE 1
+#define CONFIG_PCMCIA_XIRC2PS_MODULE 1
+#define CONFIG_MTRR_SANITIZER 1
+#define CONFIG_DVB_STV090x_MODULE 1
+#define CONFIG_SCSI_HPTIOP_MODULE 1
+#define CONFIG_NATIONAL_PHY_MODULE 1
+#define CONFIG_B43LEGACY_PCICORE_AUTOSELECT 1
+#define CONFIG_ORE_MODULE 1
+#define CONFIG_USB_SERIAL_KEYSPAN_PDA_MODULE 1
+#define CONFIG_WIRELESS_EXT 1
+#define CONFIG_MEDIA_TUNER_MT2060_MODULE 1
+#define CONFIG_HID_PICOLCD_BACKLIGHT 1
+#define CONFIG_COMEDI_ADV_PCI1710_MODULE 1
+#define CONFIG_SND_HDA_CODEC_CA0110 1
+#define CONFIG_RTC_DRV_RS5C348_MODULE 1
+#define CONFIG_IBMOL_MODULE 1
+#define CONFIG_MODVERSIONS 1
+#define CONFIG_HW_RANDOM_MODULE 1
+#define CONFIG_B43_PCI_AUTOSELECT 1
+#define CONFIG_MUTEX_SPIN_ON_OWNER 1
+#define CONFIG_NCPFS_STRONG 1
+#define CONFIG_PATA_LEGACY_MODULE 1
+#define CONFIG_IO_DELAY_TYPE_0X80 0
+#define CONFIG_SND_INTERWAVE_STB_MODULE 1
+#define CONFIG_DVB_USB_AU6610_MODULE 1
+#define CONFIG_SPI_LM70_LLP_MODULE 1
+#define CONFIG_X86_SPEEDSTEP_LIB_MODULE 1
+#define CONFIG_SCx200_WDT_MODULE 1
+#define CONFIG_SYS_HYPERVISOR 1
+#define CONFIG_HAVE_DMA_ATTRS 1
+#define CONFIG_ATM_IA_MODULE 1
+#define CONFIG_IRNET_MODULE 1
+#define CONFIG_SND_VIRTUOSO_MODULE 1
+#define CONFIG_AMIGA_PARTITION 1
+#define CONFIG_EARLY_PRINTK 1
+#define CONFIG_THINKPAD_ACPI_ALSA_SUPPORT 1
+#define CONFIG_MTD_AR7_PARTS_MODULE 1
+#define CONFIG_SENSORS_ADS7871_MODULE 1
+#define CONFIG_NLS_CODEPAGE_737_MODULE 1
+#define CONFIG_HAVE_FUNCTION_GRAPH_TRACER 1
+#define CONFIG_HW_RANDOM_VIA_MODULE 1
+#define CONFIG_SUNDANCE_MODULE 1
+#define CONFIG_SENSORS_W83781D_MODULE 1
+#define CONFIG_CAN_SOFTING_CS_MODULE 1
+#define CONFIG_AIC7XXX_DEBUG_ENABLE 1
+#define CONFIG_HAVE_CMPXCHG_LOCAL 1
+#define CONFIG_VIDEOBUF2_CORE_MODULE 1
+#define CONFIG_PARIDE_COMM_MODULE 1
+#define CONFIG_IRTTY_SIR_MODULE 1
+#define CONFIG_EEEPC_WMI_MODULE 1
+#define CONFIG_NTFS_FS_MODULE 1
+#define CONFIG_ACPI_THERMAL_MODULE 1
+#define CONFIG_BLK_CPQ_DA_MODULE 1
+#define CONFIG_RT2X00_LIB_CRYPTO 1
+#define CONFIG_SCSI_DH_HP_SW_MODULE 1
+#define CONFIG_IP_SCTP_MODULE 1
+#define CONFIG_DVB_STB0899_MODULE 1
+#define CONFIG_P54_PCI_MODULE 1
+#define CONFIG_BASE_SMALL 0
+#define CONFIG_XEN_GRANT_DEV_ALLOC_MODULE 1
+#define CONFIG_CRYPTO_BLKCIPHER2 1
+#define CONFIG_SCSI_SAS_ATTRS_MODULE 1
+#define CONFIG_SECURITY_SELINUX_AVC_STATS 1
+#define CONFIG_RTL8187_MODULE 1
+#define CONFIG_DEVPTS_MULTIPLE_INSTANCES 1
+#define CONFIG_SND_SEQ_DUMMY_MODULE 1
+#define CONFIG_B43LEGACY_PCI_AUTOSELECT 1
+#define CONFIG_USB_SERIAL_SIEMENS_MPI_MODULE 1
+#define CONFIG_DM_RAID_MODULE 1
+#define CONFIG_COMPACTION 1
+#define CONFIG_CAN_SJA1000_ISA_MODULE 1
+#define CONFIG_DVB_TDA18271C2DD_MODULE 1
+#define CONFIG_QLGE_MODULE 1
+#define CONFIG_HAVE_TEXT_POKE_SMP 1
+#define CONFIG_I2O_BUS_MODULE 1
+#define CONFIG_VIDEO_TM6000_MODULE 1
+#define CONFIG_DVB_CXD2820R_MODULE 1
+#define CONFIG_COMEDI_NI_DAQ_DIO24_CS_MODULE 1
+#define CONFIG_USB_GSPCA_SONIXJ_MODULE 1
+#define CONFIG_THINKPAD_ACPI_HOTKEY_POLL 1
+#define CONFIG_RTC_DRV_DS1553_MODULE 1
+#define CONFIG_TOUCHSCREEN_HAMPSHIRE_MODULE 1
+#define CONFIG_CRYPTO_KHAZAD_MODULE 1
+#define CONFIG_PROC_FS 1
+#define CONFIG_MMC_CB710_MODULE 1
+#define CONFIG_NET_PACKET_ENGINE 1
+#define CONFIG_MTD_BLOCK_MODULE 1
+#define CONFIG_W83697HF_WDT_MODULE 1
+#define CONFIG_VIDEOBUF2_VMALLOC_MODULE 1
+#define CONFIG_SECURITY_TOMOYO 1
+#define CONFIG_RC_MAP_MODULE 1
+#define CONFIG_WEXT_PRIV 1
+#define CONFIG_THINKPAD_ACPI_VIDEO 1
+#define CONFIG_SCSI_LOWLEVEL 1
+#define CONFIG_ROSE_MODULE 1
+#define CONFIG_IP_VS_PROTO_AH_ESP 1
+#define CONFIG_MTD_QINFO_PROBE_MODULE 1
+#define CONFIG_PCWATCHDOG_MODULE 1
+#define CONFIG_IP_DCCP_CCID3 1
+#define CONFIG_CRYPTO_TWOFISH_586_MODULE 1
+#define CONFIG_IRQ_FORCED_THREADING 1
+#define CONFIG_NILFS2_FS_MODULE 1
+#define CONFIG_ATH9K_PCI 1
+#define CONFIG_NLS_ISO8859_3_MODULE 1
+#define CONFIG_EXT2_FS_XATTR 1
+#define CONFIG_XEN_SYS_HYPERVISOR 1
+#define CONFIG_HW_RANDOM_GEODE_MODULE 1
+#define CONFIG_COMEDI_PCL816_MODULE 1
+#define CONFIG_HID_PANTHERLORD_MODULE 1
+#define CONFIG_MTDRAM_ERASE_SIZE 128
+#define CONFIG_X86_HT 1
+#define CONFIG_SND_MODULE 1
+#define CONFIG_NET_SCH_TEQL_MODULE 1
+#define CONFIG_MEMSTICK_JMICRON_38X_MODULE 1
+#define CONFIG_IR_RC6_DECODER_MODULE 1
+#define CONFIG_XEN_NETDEV_BACKEND_MODULE 1
+#define CONFIG_SND_SB16_DSP_MODULE 1
+#define CONFIG_MTD_OOPS_MODULE 1
+#define CONFIG_IWLEGACY_MODULE 1
+#define CONFIG_S2IO_MODULE 1
+#define CONFIG_IP_VS_SH_MODULE 1
+#define CONFIG_XEN_BALLOON 1
+#define CONFIG_VIDEO_MSP3400_MODULE 1
+#define CONFIG_PLIP_MODULE 1
+#define CONFIG_SCSI_EATA_TAGGED_QUEUE 1
+#define CONFIG_USB_PEGASUS_MODULE 1
+#define CONFIG_USB_TMC_MODULE 1
+#define CONFIG_SBC_EPX_C3_WATCHDOG_MODULE 1
+#define CONFIG_ATM_HE_USE_SUNI 1
+#define CONFIG_BLK_DEV_FD_MODULE 1
+#define CONFIG_SND_PCSP_MODULE 1
+#define CONFIG_RFKILL_INPUT 1
+#define CONFIG_FB_CIRRUS_MODULE 1
+#define CONFIG_NET_VENDOR_NATSEMI 1
+#define CONFIG_BLK_DEV_BSGLIB 1
+#define CONFIG_ATH5K_PCI 1
+#define CONFIG_TABLET_USB_HANWANG_MODULE 1
+#define CONFIG_ATH9K_COMMON_MODULE 1
+#define CONFIG_DVB_STB6000_MODULE 1
+#define CONFIG_COMEDI_MISC_DRIVERS_MODULE 1
+#define CONFIG_USB_SERIAL_QCAUX_MODULE 1
+#define CONFIG_SATA_ACARD_AHCI_MODULE 1
+#define CONFIG_NFS_USE_KERNEL_DNS 1
+#define CONFIG_MISDN_SPEEDFAX_MODULE 1
+#define CONFIG_SENSORS_IBMAEM_MODULE 1
+#define CONFIG_LIRC_STAGING 1
+#define CONFIG_VM86 1
+#define CONFIG_SYSCTL 1
+#define CONFIG_BRIDGE_IGMP_SNOOPING 1
+#define CONFIG_IP_NF_TARGET_CLUSTERIP_MODULE 1
+#define CONFIG_MTD_BLOCK2MTD_MODULE 1
+#define CONFIG_W1_SLAVE_THERM_MODULE 1
+#define CONFIG_CAN_SLCAN_MODULE 1
+#define CONFIG_PARIDE_KBIC_MODULE 1
+#define CONFIG_JOYSTICK_TWIDJOY_MODULE 1
+#define CONFIG_EL3_MODULE 1
+#define CONFIG_PHYS_ADDR_T_64BIT 1
+#define CONFIG_COMEDI_DT2815_MODULE 1
+#define CONFIG_NOZOMI_MODULE 1
+#define CONFIG_COMEDI_PCL711_MODULE 1
+#define CONFIG_COMEDI_ADDI_APCI_2016_MODULE 1
+#define CONFIG_NETFILTER_XT_TARGET_AUDIT_MODULE 1
+#define CONFIG_HOSTAP_CS_MODULE 1
+#define CONFIG_HAVE_C_RECORDMCOUNT 1
+#define CONFIG_SENSORS_ADCXX_MODULE 1
+#define CONFIG_SND_CS4281_MODULE 1
+#define CONFIG_COMEDI_8255_MODULE 1
+#define CONFIG_MEDIA_TUNER_MT2131_MODULE 1
+#define CONFIG_USB_NET_KALMIA_MODULE 1
+#define CONFIG_USB_NET_DM9601_MODULE 1
+#define CONFIG_HAVE_ARCH_TRACEHOOK 1
+#define CONFIG_SSB_PCIHOST 1
+#define CONFIG_ISAPNP 1
+#define CONFIG_IR_MCEUSB_MODULE 1
+#define CONFIG_BLK_DEV_OSD_MODULE 1
+#define CONFIG_LDM_PARTITION 1
+#define CONFIG_CIFS_MODULE 1
+#define CONFIG_SMSC37B787_WDT_MODULE 1
+#define CONFIG_XFRM_USER_MODULE 1
+#define CONFIG_TCP_CONG_BIC_MODULE 1
+#define CONFIG_SCSI_NSP32_MODULE 1
+#define CONFIG_LEDS_PCA9532_MODULE 1
+#define CONFIG_PCMCIA_PROBE 1
+#define CONFIG_TASK_DELAY_ACCT 1
+#define CONFIG_INPUT_PCF50633_PMU_MODULE 1
+#define CONFIG_SCSI_DH_EMC_MODULE 1
+#define CONFIG_NET_NS 1
+#define CONFIG_SENSORS_TMP401_MODULE 1
+#define CONFIG_REGULATOR_MAX1586_MODULE 1
+#define CONFIG_REISERFS_FS_XATTR 1
+#define CONFIG_SENSORS_ADT7475_MODULE 1
+#define CONFIG_HAVE_PERF_EVENTS 1
+#define CONFIG_PCMCIA_XIRCOM_MODULE 1
+#define CONFIG_SCSI_T128_MODULE 1
+#define CONFIG_COMEDI_II_PCI20KC_MODULE 1
+#define CONFIG_DVB_MANTIS_MODULE 1
+#define CONFIG_SENSORS_LIS3_I2C_MODULE 1
+#define CONFIG_RT2800PCI_RT35XX 1
+#define CONFIG_ATA_SFF 1
+#define CONFIG_JOYSTICK_WALKERA0701_MODULE 1
+#define CONFIG_CRYPTO_LRW_MODULE 1
+#define CONFIG_EXT3_FS_SECURITY 1
+#define CONFIG_NET_EMATCH_CMP_MODULE 1
+#define CONFIG_USB_GSPCA_T613_MODULE 1
+#define CONFIG_SND_VIA82XX_MODEM_MODULE 1
+#define CONFIG_SND_MTPAV_MODULE 1
+#define CONFIG_PPP_ASYNC_MODULE 1
+#define CONFIG_MD_RAID10_MODULE 1
+#define CONFIG_NO_BOOTMEM 1
+#define CONFIG_SCSI_SYM53C416_MODULE 1
+#define CONFIG_SSB_SDIOHOST_POSSIBLE 1
+#define CONFIG_SENSORS_APPLESMC_MODULE 1
+#define CONFIG_CAN_GW_MODULE 1
+#define CONFIG_NLS_CODEPAGE_866_MODULE 1
+#define CONFIG_SENSORS_ABITUGURU3_MODULE 1
+#define CONFIG_CRAMFS_MODULE 1
+#define CONFIG_RADIO_SAA7706H_MODULE 1
+#define CONFIG_SKGE_GENESIS 1
+#define CONFIG_SLAB 1
+#define CONFIG_CYCLADES_MODULE 1
+#define CONFIG_KEYBOARD_LM8323_MODULE 1
+#define CONFIG_CHELSIO_T1_MODULE 1
+#define CONFIG_COMEDI_AIO_AIO12_8_MODULE 1
+#define CONFIG_DEBUG_MEMORY_INIT 1
+#define CONFIG_AUDIT 1
+#define CONFIG_CHR_DEV_ST_MODULE 1
+#define CONFIG_DM_MULTIPATH_MODULE 1
+#define CONFIG_CRYPTO_USER_API_SKCIPHER_MODULE 1
+#define CONFIG_SCSI_3W_SAS_MODULE 1
+#define CONFIG_COMEDI_NI_ATMIO16D_MODULE 1
+#define CONFIG_LANCE_MODULE 1
+#define CONFIG_SPEAKUP_SYNTH_DTLK_MODULE 1
+#define CONFIG_SENSORS_LM80_MODULE 1
+#define CONFIG_DVB_IT913X_FE_MODULE 1
+#define CONFIG_PCIEASPM 1
+#define CONFIG_PM_ADVANCED_DEBUG 1
+#define CONFIG_ATA_PIIX_MODULE 1
+#define CONFIG_B43LEGACY_MODULE 1
+#define CONFIG_AIC7XXX_REG_PRETTY_PRINT 1
+#define CONFIG_HID_MULTITOUCH_MODULE 1
+#define CONFIG_FB_DEFERRED_IO 1
+#define CONFIG_SATA_AHCI_MODULE 1
+#define CONFIG_COMEDI_MITE_MODULE 1
+#define CONFIG_DVB_USB_A800_MODULE 1
+#define CONFIG_SECURITY 1
+#define CONFIG_I2C_SI470X_MODULE 1
+#define CONFIG_DVB_A8293_MODULE 1
+#define CONFIG_SENSORS_ASC7621_MODULE 1
+#define CONFIG_OPTPROBES 1
+#define CONFIG_NETXEN_NIC_MODULE 1
+#define CONFIG_ATM_TCP_MODULE 1
+#define CONFIG_X86_32_SMP 1
+#define CONFIG_HID_ELECOM_MODULE 1
+#define CONFIG_SND_TIMER_MODULE 1
+#define CONFIG_LIRC_TTUSBIR_MODULE 1
+#define CONFIG_COMEDI_ICP_MULTI_MODULE 1
+#define CONFIG_DRM_R128_MODULE 1
+#define CONFIG_KVM_MMIO 1
+#define CONFIG_USB_EHCI_TT_NEWSCHED 1
+#define CONFIG_FAT_DEFAULT_CODEPAGE 437
+#define CONFIG_TCM_FC_MODULE 1
+#define CONFIG_IPV6_MROUTE_MULTIPLE_TABLES 1
+#define CONFIG_BLK_DEV 1
+#define CONFIG_DVB_USB_IT913X_MODULE 1
+#define CONFIG_USB_SERIAL_MOTOROLA_MODULE 1
+#define CONFIG_SERIO_I8042 1
+#define CONFIG_MAC80211_RC_DEFAULT "minstrel_ht"
+#define CONFIG_FARSYNC_MODULE 1
+#define CONFIG_RTL8187_LEDS 1
+#define CONFIG_NFS_ACL_SUPPORT_MODULE 1
+#define CONFIG_W1_SLAVE_DS2433_MODULE 1
+#define CONFIG_ATL1_MODULE 1
+#define CONFIG_APPLICOM_MODULE 1
+#define CONFIG_USB_SERIAL_OMNINET_MODULE 1
+#define CONFIG_HDLC_PPP_MODULE 1
+#define CONFIG_BRIDGE_NETFILTER 1
+#define CONFIG_TCP_CONG_SCALABLE_MODULE 1
+#define CONFIG_DVB_MB86A20S_MODULE 1
+#define CONFIG_PATA_TRIFLEX_MODULE 1
+#define CONFIG_COMEDI_PCL818_MODULE 1
+#define CONFIG_JOYSTICK_TMDC_MODULE 1
+#define CONFIG_TRACING_SUPPORT 1
+#define CONFIG_UNIX98_PTYS 1
+#define CONFIG_CDROM_PKTCDVD_MODULE 1
+#define CONFIG_NETFILTER_XT_TARGET_CONNMARK_MODULE 1
+#define CONFIG_MINIX_SUBPARTITION 1
+#define CONFIG_RADIO_WL1273_MODULE 1
+#define CONFIG_SENSORS_SMSC47B397_MODULE 1
+#define CONFIG_CRYPTO_MICHAEL_MIC_MODULE 1
+#define CONFIG_CRYPTO_ANSI_CPRNG_MODULE 1
+#define CONFIG_SECURITY_SELINUX 1
+#define CONFIG_NET_SCHED 1
+#define CONFIG_NETFILTER_XT_TARGET_CONNSECMARK_MODULE 1
+#define CONFIG_UWB_I1480U_MODULE 1
+#define CONFIG_COMEDI_PCL726_MODULE 1
+#define CONFIG_JBD_MODULE 1
+#define CONFIG_STAGING_MEDIA 1
+#define CONFIG_DVB_PLL_MODULE 1
+#define CONFIG_PRINTK_TIME 1
+#define CONFIG_SERIAL_JSM_MODULE 1
+#define CONFIG_EXT2_FS_POSIX_ACL 1
+#define CONFIG_INPUT_MOUSEDEV_SCREEN_Y 768
+#define CONFIG_EDAC_E7XXX_MODULE 1
+#define CONFIG_PATA_HPT37X_MODULE 1
+#define CONFIG_UIO_PCI_GENERIC_MODULE 1
+#define CONFIG_PPP_MODULE 1
+#define CONFIG_RFD_FTL_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_QUOTA_MODULE 1
+#define CONFIG_ARCH_MAY_HAVE_PC_FDC 1
+#define CONFIG_TOUCHSCREEN_ATMEL_MXT_MODULE 1
+#define CONFIG_HAVE_KERNEL_LZO 1
+#define CONFIG_ASYNC_CORE_MODULE 1
+#define CONFIG_NET_SCH_MULTIQ_MODULE 1
+#define CONFIG_INET_DIAG_MODULE 1
+#define CONFIG_CRYPTO_GHASH_MODULE 1
+#define CONFIG_OCFS2_DEBUG_MASKLOG 1
+#define CONFIG_SYNCLINKMP_MODULE 1
+#define CONFIG_PSTORE 1
+#define CONFIG_SCSI_LPFC_MODULE 1
+#define CONFIG_ROADRUNNER_MODULE 1
+#define CONFIG_NF_NAT_FTP_MODULE 1
+#define CONFIG_MAC80211_RC_MINSTREL 1
+#define CONFIG_CRYPTO_RMD320_MODULE 1
+#define CONFIG_NF_CT_PROTO_UDPLITE_MODULE 1
+#define CONFIG_CARDMAN_4000_MODULE 1
+#define CONFIG_IO_DELAY_TYPE_UDELAY 2
+#define CONFIG_SPEAKUP_MODULE 1
+#define CONFIG_HANGCHECK_TIMER_MODULE 1
+#define CONFIG_JOYSTICK_WARRIOR_MODULE 1
+#define CONFIG_COMEDI_AIO_IIRO_16_MODULE 1
+#define CONFIG_SENSORS_W83627EHF_MODULE 1
+#define CONFIG_ELF_CORE 1
+#define CONFIG_SENSORS_LM73_MODULE 1
+#define CONFIG_VIA_VELOCITY_MODULE 1
+#define CONFIG_SENSORS_PC87360_MODULE 1
+#define CONFIG_TEXTSEARCH 1
+#define CONFIG_ACPI_DOCK 1
+#define CONFIG_KS8851_MODULE 1
+#define CONFIG_MTD_JEDECPROBE_MODULE 1
+#define CONFIG_I2O_EXT_ADAPTEC 1
+#define CONFIG_MTD_ONENAND_VERIFY_WRITE 1
+#define CONFIG_DEPCA_MODULE 1
+#define CONFIG_USB_SUPPORT 1
+#define CONFIG_I2C_SCMI_MODULE 1
+#define CONFIG_I2C_VIA_MODULE 1
+#define CONFIG_INPUT_POLLDEV_MODULE 1
+#define CONFIG_SND_INTEL8X0M_MODULE 1
+#define CONFIG_RTC_DRV_BQ32K_MODULE 1
+#define CONFIG_USB_GSPCA_PAC7311_MODULE 1
+#define CONFIG_COMEDI_PCMAD_MODULE 1
+#define CONFIG_X86_REROUTE_FOR_BROKEN_BOOT_IRQS 1
+#define CONFIG_USB_HWA_HCD_MODULE 1
+#define CONFIG_TOUCHSCREEN_USB_EASYTOUCH 1
+#define CONFIG_STAGING 1
+#define CONFIG_NET_VENDOR_SIS 1
+#define CONFIG_MTD_CHAR_MODULE 1
+#define CONFIG_SENSORS_LIS3LV02D_MODULE 1
+#define CONFIG_INET_LRO_MODULE 1
+#define CONFIG_FIREWIRE_MODULE 1
+#define CONFIG_ATM_MODULE 1
+#define CONFIG_SCSI_FC_ATTRS_MODULE 1
+#define CONFIG_VT_CONSOLE 1
+#define CONFIG_HID_UCLOGIC_MODULE 1
+#define CONFIG_HW_RANDOM_VIRTIO_MODULE 1
+#define CONFIG_COMEDI_PCMCIA_DRIVERS_MODULE 1
+#define CONFIG_ACPI_APEI 1
+#define CONFIG_SND_ES1968_RADIO 1
+#define CONFIG_SND_SB_COMMON_MODULE 1
+#define CONFIG_SND_CS46XX_MODULE 1
+#define CONFIG_USB_GSPCA_STK014_MODULE 1
+#define CONFIG_IP_VS_FTP_MODULE 1
+#define CONFIG_CS5535_MFGPT_DEFAULT_IRQ 7
+#define CONFIG_VMWARE_PVSCSI_MODULE 1
+#define CONFIG_CFG80211_WEXT 1
+#define CONFIG_SMARTJOYPLUS_FF 1
+#define CONFIG_I2C_PARPORT_MODULE 1
+#define CONFIG_ISDN_DIVAS_BRIPCI 1
+#define CONFIG_NETFILTER_XT_MATCH_PHYSDEV_MODULE 1
+#define CONFIG_NOP_USB_XCEIV_MODULE 1
+#define CONFIG_SND_VIA82XX_MODULE 1
+#define CONFIG_SC520_WDT_MODULE 1
+#define CONFIG_ISDN_DIVAS_MODULE 1
+#define CONFIG_NFC_PN533_MODULE 1
+#define CONFIG_DVB_USB_DIBUSB_MB_MODULE 1
+#define CONFIG_HOTPLUG_PCI_IBM_MODULE 1
+#define CONFIG_SND_DARLA20_MODULE 1
+#define CONFIG_BLK_DEV_RAM_MODULE 1
+#define CONFIG_TOUCHSCREEN_AD7879_MODULE 1
+#define CONFIG_SENSORS_HDAPS_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_STATE_MODULE 1
+#define CONFIG_DVB_L64781_MODULE 1
+#define CONFIG_LOGIRUMBLEPAD2_FF 1
+#define CONFIG_SND_INDIGOIOX_MODULE 1
+#define CONFIG_SND_ASIHPI_MODULE 1
+#define CONFIG_PARAVIRT_GUEST 1
+#define CONFIG_BSD_DISKLABEL 1
+#define CONFIG_RTC_DRV_M48T35_MODULE 1
+#define CONFIG_I2C_TAOS_EVM_MODULE 1
+#define CONFIG_COMEDI_KCOMEDILIB_MODULE 1
+#define CONFIG_FB_HGA_MODULE 1
+#define CONFIG_USB_STORAGE_FREECOM_MODULE 1
+#define CONFIG_SCSI_BUSLOGIC_MODULE 1
+#define CONFIG_BRIDGE_EBT_LOG_MODULE 1
+#define CONFIG_TOUCHSCREEN_ADS7846_MODULE 1
+#define CONFIG_IR_RC5_DECODER_MODULE 1
+#define CONFIG_FIREWIRE_NOSY_MODULE 1
+#define CONFIG_NET_SCH_GRED_MODULE 1
+#define CONFIG_PCI_DIRECT 1
+#define CONFIG_MMC_VIA_SDMMC_MODULE 1
+#define CONFIG_DRM_MODULE 1
+#define CONFIG_FUSION_MAX_SGE 128
+#define CONFIG_DOUBLEFAULT 1
+#define CONFIG_INET6_XFRM_MODE_BEET_MODULE 1
+#define CONFIG_PCF50633_GPIO_MODULE 1
+#define CONFIG_ASYNC_TX_DISABLE_PQ_VAL_DMA 1
+#define CONFIG_IWL4965_MODULE 1
+#define CONFIG_POSIX_MQUEUE_SYSCTL 1
+#define CONFIG_RTC_DRV_MAX6900_MODULE 1
+#define CONFIG_ICS932S401_MODULE 1
+#define CONFIG_UNUSED_SYMBOLS 1
+#define CONFIG_SENSORS_MAX1111_MODULE 1
+#define CONFIG_CRYPTO_DEV_PADLOCK_AES_MODULE 1
+#define CONFIG_ISDN_DRV_AVMB1_B1PCIV4 1
+#define CONFIG_SAMSUNG_LAPTOP_MODULE 1
+#define CONFIG_COMEDI_POC_MODULE 1
+#define CONFIG_USB_USS720_MODULE 1
+#define CONFIG_LEDS_DAC124S085_MODULE 1
+#define CONFIG_SND_GUSCLASSIC_MODULE 1
+#define CONFIG_FB_CFB_COPYAREA 1
+#define CONFIG_FB_EFI 1
+#define CONFIG_USB_SISUSBVGA_MODULE 1
+#define CONFIG_HAVE_KVM_IRQCHIP 1
+#define CONFIG_BRIDGE_EBT_STP_MODULE 1
+#define CONFIG_RT73USB_MODULE 1
+#define CONFIG_DE2104X_DSL 0
+#define CONFIG_BRIDGE_EBT_ARP_MODULE 1
+#define CONFIG_ROMFS_BACKED_BY_BOTH 1
+#define CONFIG_USB_CYTHERM_MODULE 1
+#define CONFIG_IP6_NF_MATCH_EUI64_MODULE 1
+#define CONFIG_BINARY_PRINTF 1
+#define CONFIG_MWIFIEX_MODULE 1
+#define CONFIG_HP_ILO_MODULE 1
+#define CONFIG_USB_STORAGE_JUMPSHOT_MODULE 1
+#define CONFIG_SENSORS_MAX6642_MODULE 1
+#define CONFIG_SND_GINA20_MODULE 1
+#define CONFIG_GENERIC_CLOCKEVENTS_BUILD 1
+#define CONFIG_VIDEOBUF_GEN_MODULE 1
+#define CONFIG_MTD_CFI_AMDSTD_MODULE 1
+#define CONFIG_DRM_VIA_MODULE 1
+#define CONFIG_SGI_PARTITION 1
+#define CONFIG_INPUT_SPARSEKMAP_MODULE 1
+#define CONFIG_PCI_GOANY 1
+#define CONFIG_HIGHPTE 1
+#define CONFIG_AIC7XXX_CMDS_PER_DEVICE 8
+#define CONFIG_VIDEO_V4L2_MODULE 1
+#define CONFIG_DVB_STV6110_MODULE 1
+#define CONFIG_AC97_BUS_MODULE 1
+#define CONFIG_SYSVIPC_SYSCTL 1
+#define CONFIG_HID_NTRIG_MODULE 1
+#define CONFIG_IP_VS_IPV6 1
+#define CONFIG_DMA_SHARED_BUFFER 1
+#define CONFIG_DVB_USB_NOVA_T_USB2_MODULE 1
+#define CONFIG_CIFS_POSIX 1
+#define CONFIG_PATA_RDC_MODULE 1
+#define CONFIG_SND_PORTMAN2X4_MODULE 1
+#define CONFIG_USB_EPSON2888 1
+#define CONFIG_SND_INDIGODJ_MODULE 1
+#define CONFIG_SENSORS_W83L785TS_MODULE 1
+#define CONFIG_DECOMPRESS_GZIP 1
+#define CONFIG_SENSORS_EMC2103_MODULE 1
+#define CONFIG_SND_AU8830_MODULE 1
+#define CONFIG_XFRM_SUB_POLICY 1
+#define CONFIG_VIRTIO_BLK_MODULE 1
+#define CONFIG_SERIAL_8250_CS_MODULE 1
+#define CONFIG_DECOMPRESS_LZO 1
+#define CONFIG_USB_SERIAL_ARK3116_MODULE 1
+#define CONFIG_SND_MIXART_MODULE 1
+#define CONFIG_QUOTA 1
+#define CONFIG_SND_BT87X_MODULE 1
+#define CONFIG_DM9102_MODULE 1
+#define CONFIG_COMEDI_NI_MIO_CS_MODULE 1
+#define CONFIG_SND_AZT2316_MODULE 1
+#define CONFIG_SENSORS_LINEAGE_MODULE 1
+#define CONFIG_ABYSS_MODULE 1
+#define CONFIG_CAN_EMS_PCMCIA_MODULE 1
+#define CONFIG_SCSI_MPT2SAS_MAX_SGE 128
+#define CONFIG_VXGE_MODULE 1
+#define CONFIG_PARIDE_PCD_MODULE 1
+#define CONFIG_MMC_SDHCI_PLTFM_MODULE 1
+#define CONFIG_I2C_CHARDEV_MODULE 1
+#define CONFIG_RCU_FAST_NO_HZ 1
+#define CONFIG_W83697UG_WDT_MODULE 1
+#define CONFIG_LLC 1
+#define CONFIG_MTD_NAND_NANDSIM_MODULE 1
+#define CONFIG_CROSS_COMPILE ""
+#define CONFIG_REGULATOR_MAX8649_MODULE 1
+#define CONFIG_MEDIA_TUNER_TEA5761_MODULE 1
+#define CONFIG_SC92031_MODULE 1
+#define CONFIG_SND_TRIDENT_MODULE 1
+#define CONFIG_IPDDP_MODULE 1
+#define CONFIG_NETWORK_SECMARK 1
+#define CONFIG_SND_RIPTIDE_MODULE 1
+#define CONFIG_SND_CTXFI_MODULE 1
+#define CONFIG_GENERIC_CLOCKEVENTS_BROADCAST 1
+#define CONFIG_SERIAL_8250_FOURPORT_MODULE 1
+#define CONFIG_RXKAD_MODULE 1
+#define CONFIG_HID_HOLTEK_MODULE 1
+#define CONFIG_ARCH_RANDOM 1
+#define CONFIG_MOUSE_LOGIBM_MODULE 1
+#define CONFIG_SERIAL_8250_PCI 1
+#define CONFIG_LIB80211_CRYPT_CCMP_MODULE 1
+#define CONFIG_HAVE_MIXED_BREAKPOINTS_REGS 1
+#define CONFIG_RTC_DRV_DS1672_MODULE 1
+#define CONFIG_USB_SERIAL_SSU100_MODULE 1
+#define CONFIG_MOUSE_PS2_SYNAPTICS 1
+#define CONFIG_ATA_BMDMA 1
+#define CONFIG_ATALK_MODULE 1
+#define CONFIG_XZ_DEC_ARMTHUMB 1
+#define CONFIG_B43_BCMA 1
+#define CONFIG_MTD_SWAP_MODULE 1
+#define CONFIG_NFS_V4_1 1
+#define CONFIG_SKFP_MODULE 1
+#define CONFIG_ARCH_WANT_FRAME_POINTERS 1
+#define CONFIG_REGMAP 1
+#define CONFIG_6PACK_MODULE 1
+#define CONFIG_NLS_UTF8_MODULE 1
+#define CONFIG_RADIO_SI470X 1
+#define CONFIG_PCIE_PME 1
+#define CONFIG_VIDEO_TM6000_DVB_MODULE 1
+#define CONFIG_JOYSTICK_XPAD_MODULE 1
+#define CONFIG_FB_ATY_BACKLIGHT 1
+#define CONFIG_ISA 1
+#define CONFIG_NETFILTER_TPROXY_MODULE 1
+#define CONFIG_BAYCOM_PAR_MODULE 1
+#define CONFIG_CAN_DEV_MODULE 1
+#define CONFIG_INPUT_YEALINK_MODULE 1
+#define CONFIG_COMEDI_VMK80XX_MODULE 1
+#define CONFIG_DVB_DIB3000MB_MODULE 1
+#define CONFIG_SCSI_DTC3280_MODULE 1
+#define CONFIG_SCSI_SRP_TGT_ATTRS 1
+#define CONFIG_ETH16I_MODULE 1
+#define CONFIG_IWMC3200TOP_MODULE 1
+#define CONFIG_SPEAKUP_SYNTH_SPKOUT_MODULE 1
+#define CONFIG_RTC_DRV_M41T80_MODULE 1
+#define CONFIG_PCCARD_NONSTATIC 1
+#define CONFIG_VT6656_MODULE 1
+#define CONFIG_USB_USBNET_MODULE 1
+#define CONFIG_SCSI_MULTI_LUN 1
+#define CONFIG_CPU_SUP_CENTAUR 1
+#define CONFIG_CB710_CORE_MODULE 1
+#define CONFIG_USB_SERIAL_PL2303_MODULE 1
+#define CONFIG_NET_ACT_POLICE_MODULE 1
+#define CONFIG_AIC79XX_DEBUG_MASK 0
+#define CONFIG_HAMRADIO 1
+#define CONFIG_INPUT_XEN_KBDDEV_FRONTEND 1
+#define CONFIG_HOTPLUG_PCI_SHPC_MODULE 1
+#define CONFIG_DVB_USB_CINERGY_T2_MODULE 1
+#define CONFIG_FHANDLE 1
+#define CONFIG_COMEDI_ADDI_APCI_3XXX_MODULE 1
+#define CONFIG_USB_MICROTEK_MODULE 1
+#define CONFIG_PANASONIC_LAPTOP_MODULE 1
+#define CONFIG_HID_SMARTJOYPLUS_MODULE 1
+#define CONFIG_ATA_GENERIC_MODULE 1
+#define CONFIG_I82365_MODULE 1
+#define CONFIG_NEW_LEDS 1
+#define CONFIG_SWAP 1
+#define CONFIG_MTD_ONENAND_MODULE 1
+#define CONFIG_MTD_TS5500_MODULE 1
+#define CONFIG_MICROCODE_INTEL 1
+#define CONFIG_RTC_DRV_DS1511_MODULE 1
+#define CONFIG_IP_FIB_TRIE_STATS 1
+#define CONFIG_ATM_FORE200E_MODULE 1
+#define CONFIG_NET_SCH_HFSC_MODULE 1
+#define CONFIG_SND_ISIGHT_MODULE 1
+#define CONFIG_VIDEOBUF_DMA_SG_MODULE 1
+#define CONFIG_MTD_NAND_DISKONCHIP_MODULE 1
+#define CONFIG_MAC80211_MODULE 1
+#define CONFIG_TOUCHSCREEN_USB_GENERAL_TOUCH 1
+#define CONFIG_MEGARAID_MM_MODULE 1
+#define CONFIG_ARCH_USES_PG_UNCACHED 1
+#define CONFIG_CRC_CCITT_MODULE 1
+#define CONFIG_EXT3_FS_POSIX_ACL 1
+#define CONFIG_DVB_TDA8261_MODULE 1
+#define CONFIG_IGBVF_MODULE 1
+#define CONFIG_BLK_DEV_SD_MODULE 1
+#define CONFIG_PHYSICAL_ALIGN 0x1000000
+#define CONFIG_NETFILTER_NETLINK_MODULE 1
+#define CONFIG_VITESSE_PHY_MODULE 1
+#define CONFIG_MODULE_UNLOAD 1
+#define CONFIG_FSCACHE_STATS 1
+#define CONFIG_ELPLUS_MODULE 1
+#define CONFIG_AVERAGE 1
+#define CONFIG_INFINIBAND_MTHCA_MODULE 1
+#define CONFIG_SENSORS_MAX6650_MODULE 1
+#define CONFIG_USB_GSPCA_BENQ_MODULE 1
+#define CONFIG_REGULATOR_TPS65023_MODULE 1
+#define CONFIG_USB_ARCH_HAS_XHCI 1
+#define CONFIG_SND_AC97_CODEC_MODULE 1
+#define CONFIG_MOXA_SMARTIO_MODULE 1
+#define CONFIG_DVB_USB_CXUSB_MODULE 1
+#define CONFIG_RT2500PCI_MODULE 1
+#define CONFIG_SND_SB16_CSP 1
+#define CONFIG_SENSORS_LM85_MODULE 1
+#define CONFIG_AD525X_DPOT_MODULE 1
+#define CONFIG_SND_ATIIXP_MODULE 1
+#define CONFIG_INFINIBAND_IPOIB_CM 1
+#define CONFIG_COMEDI_PARPORT_MODULE 1
+#define CONFIG_HAVE_FUNCTION_GRAPH_FP_TEST 1
+#define CONFIG_RCU_FANOUT 32
+#define CONFIG_BITREVERSE 1
+#define CONFIG_DEVPORT 1
+#define CONFIG_BLK_DEV_RAM_SIZE 8192
+#define CONFIG_USB_SERIAL_WWAN_MODULE 1
+#define CONFIG_SND_ICE1724_MODULE 1
+#define CONFIG_MAC_PARTITION 1
+#define CONFIG_XFS_POSIX_ACL 1
+#define CONFIG_CRYPTO_PCOMP_MODULE 1
+#define CONFIG_CISS_SCSI_TAPE 1
+#define CONFIG_MSI_LAPTOP_MODULE 1
+#define CONFIG_COMEDI_DT2801_MODULE 1
+#define CONFIG_VIDEO_V4L2_COMMON_MODULE 1
+#define CONFIG_TOUCHSCREEN_DYNAPRO_MODULE 1
+#define CONFIG_FB_MODE_HELPERS 1
+#define CONFIG_NLS_ISO8859_13_MODULE 1
+#define CONFIG_MTD_MTDRAM_MODULE 1
+#define CONFIG_BLK_DEV_SX8_MODULE 1
+#define CONFIG_CRYPTO_BLKCIPHER_MODULE 1
+#define CONFIG_X86_L1_CACHE_SHIFT 6
+#define CONFIG_X86_PAT 1
+#define CONFIG_USB_STORAGE_ONETOUCH_MODULE 1
+#define CONFIG_NLS_ISO8859_8_MODULE 1
+#define CONFIG_RT2400PCI_MODULE 1
+#define CONFIG_NF_CONNTRACK_MODULE 1
+#define CONFIG_COMEDI_GSC_HPDI_MODULE 1
+#define CONFIG_COMEDI_NI_COMMON_MODULE 1
+#define CONFIG_IPDDP_ENCAP 1
+#define CONFIG_ARCH_DMA_ADDR_T_64BIT 1
+#define CONFIG_FILE_LOCKING 1
+#define CONFIG_USB_GSPCA_XIRLINK_CIT_MODULE 1
+#define CONFIG_RTC_DRV_STK17TA8_MODULE 1
+#define CONFIG_USB_GSPCA_SN9C20X_MODULE 1
+#define CONFIG_TOUCHSCREEN_USB_ELO 1
+#define CONFIG_GENERIC_CLOCKEVENTS_MIN_ADJUST 1
+#define CONFIG_MTD_DOCECC_MODULE 1
+#define CONFIG_KARMA_PARTITION 1
+#define CONFIG_FB_SM501_MODULE 1
+#define CONFIG_NETPOLL 1
+#define CONFIG_SND_WAVEFRONT_MODULE 1
+#define CONFIG_SPEAKUP_SYNTH_AUDPTR_MODULE 1
+#define CONFIG_SENSORS_F71882FG_MODULE 1
+#define CONFIG_ACPI_APEI_GHES 1
+#define CONFIG_FB_CARILLO_RANCH_MODULE 1
+#define CONFIG_AIO 1
+#define CONFIG_DVB_TDA8083_MODULE 1
+#define CONFIG_BLK_DEV_DAC960_MODULE 1
+#define CONFIG_CLKEVT_I8253 1
+#define CONFIG_IEEE802154_FAKEHARD_MODULE 1
+#define CONFIG_REGULATOR_USERSPACE_CONSUMER_MODULE 1
+#define CONFIG_NET_EMATCH 1
+#define CONFIG_PERF_EVENTS 1
+#define CONFIG_IP_NF_TARGET_REJECT_MODULE 1
+#define CONFIG_NET_SCH_CHOKE_MODULE 1
+#define CONFIG_LEDS_CLASS 1
+#define CONFIG_GENERIC_HARDIRQS 1
+#define CONFIG_COMEDI_BOND_MODULE 1
+#define CONFIG_DVB_USB_DIGITV_MODULE 1
+#define CONFIG_IP6_NF_MATCH_HL_MODULE 1
+#define CONFIG_BLK_CPQ_CISS_DA_MODULE 1
+#define CONFIG_WINBOND_FIR_MODULE 1
+#define CONFIG_IP_VS_TAB_BITS 12
+#define CONFIG_COMEDI_NI_AT_AO_MODULE 1
+#define CONFIG_IP6_NF_MATCH_OPTS_MODULE 1
+#define CONFIG_APM_MODULE 1
+#define CONFIG_SCSI_SAS_HOST_SMP 1
+#define CONFIG_RTC_INTF_DEV 1
+#define CONFIG_MTD_MAP_BANK_WIDTH_4 1
+#define CONFIG_HID_SUPPORT 1
+#define CONFIG_DCACHE_WORD_ACCESS 1
+#define CONFIG_SND_HDA_ENABLE_REALTEK_QUIRKS 1
+#define CONFIG_DVB_USB_CE6230_MODULE 1
+#define CONFIG_PARIDE_ATEN_MODULE 1
+#define CONFIG_TIPC_ADVANCED 1
+#define CONFIG_INFINIBAND_CXGB3_MODULE 1
+#define CONFIG_USB_SERIAL_SYMBOL_MODULE 1
+#define CONFIG_HERMES_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_OSF_MODULE 1
+#define CONFIG_PROTEON_MODULE 1
+#define CONFIG_SATA_QSTOR_MODULE 1
+#define CONFIG_PATA_SIS_MODULE 1
+#define CONFIG_EXT4_FS_XATTR 1
+#define CONFIG_AMD_NB 1
+#define CONFIG_SND_VIRMIDI_MODULE 1
+#define CONFIG_LIB80211_CRYPT_TKIP_MODULE 1
+#define CONFIG_LOCKUP_DETECTOR 1
+#define CONFIG_QSEMI_PHY_MODULE 1
+#define CONFIG_IP_VS_PROTO_UDP 1
+#define CONFIG_SND_OPTI92X_CS4231_MODULE 1
+#define CONFIG_NLS_DEFAULT "utf8"
+#define CONFIG_ACPI_CONTAINER_MODULE 1
+#define CONFIG_SND_DMA_SGBUF 1
+#define CONFIG_UTS_NS 1
+#define CONFIG_NF_CT_PROTO_GRE_MODULE 1
+#define CONFIG_BT_HCIUART_BCSP 1
+#define CONFIG_NF_CT_NETLINK_MODULE 1
+#define CONFIG_EFS_FS_MODULE 1
+#define CONFIG_DMA_ENGINE 1
+#define CONFIG_NET_EMATCH_TEXT_MODULE 1
+#define CONFIG_SND_HDA_CODEC_ANALOG 1
+#define CONFIG_X86_ACPI_CPUFREQ_MODULE 1
+#define CONFIG_HID_WIIMOTE_MODULE 1
+#define CONFIG_P54_SPI_MODULE 1
+#define CONFIG_RDS_TCP_MODULE 1
+#define CONFIG_CRYPTO_AEAD2 1
+#define CONFIG_DEBUG_INFO 1
+#define CONFIG_CRYPTO_FCRYPT_MODULE 1
+#define CONFIG_PCMCIA_ATMEL_MODULE 1
+#define CONFIG_NFC_NCI_MODULE 1
+#define CONFIG_TOSHIBA_BT_RFKILL_MODULE 1
+#define CONFIG_MOUSE_PS2_MODULE 1
+#define CONFIG_NET_IPIP_MODULE 1
+#define CONFIG_IP_VS_SH_TAB_BITS 8
+#define CONFIG_BOOTPARAM_SOFTLOCKUP_PANIC_VALUE 0
+#define CONFIG_USB_SERIAL_IPAQ_MODULE 1
+#define CONFIG_NETFILTER_XT_MATCH_HL_MODULE 1
+#define CONFIG_CRYPTO_ALGAPI2 1
+#define CONFIG_SATA_SIS_MODULE 1
+#define CONFIG_PHYSICAL_START 0x1000000
+#define CONFIG_NETFILTER_XT_TARGET_LED_MODULE 1
+#define CONFIG_WEXT_SPY 1
+#define CONFIG_UBIFS_FS_LZO 1
+#define CONFIG_X86_LONGHAUL_MODULE 1
+#define CONFIG_ACPI_SBS_MODULE 1
+#define CONFIG_HAVE_MEMBLOCK 1
+#define CONFIG_DEBUG_RODATA 1
+#define CONFIG_FB_3DFX_MODULE 1
+#define CONFIG_HAVE_EFFICIENT_UNALIGNED_ACCESS 1
+#define CONFIG_INPUT 1
+#define CONFIG_PCI200SYN_MODULE 1
+#define CONFIG_PPPOATM_MODULE 1
+#define CONFIG_PATA_OPTI_MODULE 1
+#define CONFIG_PROC_SYSCTL 1
+#define CONFIG_SND_HDA_CODEC_REALTEK 1
+#define CONFIG_HAVE_PERF_EVENTS_NMI 1
+#define CONFIG_NETFILTER_XT_TARGET_CT_MODULE 1
+#define CONFIG_MMU 1
+#define CONFIG_DVB_CX24123_MODULE 1
+#define CONFIG_OCFS2_FS_MODULE 1
+#define CONFIG_HAVE_IRQ_WORK 1
+#define CONFIG_MTD_M25P80_MODULE 1
+#define CONFIG_USB_KAWETH_MODULE 1
+#define CONFIG_USB_SIERRA_NET_MODULE 1
+#define CONFIG_AIC7XXX_RESET_DELAY_MS 15000
+#define CONFIG_VMWARE_BALLOON_MODULE 1
+#define CONFIG_BRIDGE_EBT_NFLOG_MODULE 1
+#define CONFIG_TABLET_USB_AIPTEK_MODULE 1
+#define CONFIG_AGP 1
+#define CONFIG_INLINE_WRITE_UNLOCK 1
+#define CONFIG_SENSORS_GL520SM_MODULE 1
+#define CONFIG_E1000_MODULE 1
+#define CONFIG_SCSI_SYM53C8XX_MMIO 1
diff -uprN ../linux-3.4.104-vanilla/include/generated/bounds.h linux-3.4.104-syssec_hw2_app2/include/generated/bounds.h
--- ../linux-3.4.104-vanilla/include/generated/bounds.h	1969-12-31 19:00:00.000000000 -0500
+++ linux-3.4.104-syssec_hw2_app2/include/generated/bounds.h	2014-11-09 05:26:05.000000000 -0500
@@ -0,0 +1,14 @@
+#ifndef __LINUX_BOUNDS_H__
+#define __LINUX_BOUNDS_H__
+/*
+ * DO NOT MODIFY.
+ *
+ * This file was generated by Kbuild
+ *
+ */
+
+#define NR_PAGEFLAGS 23 /* __NR_PAGEFLAGS	# */
+#define MAX_NR_ZONES 4 /* __MAX_NR_ZONES	# */
+#define NR_PCG_FLAGS 3 /* __NR_PCG_FLAGS	# */
+
+#endif
diff -uprN ../linux-3.4.104-vanilla/include/generated/compile.h linux-3.4.104-syssec_hw2_app2/include/generated/compile.h
--- ../linux-3.4.104-vanilla/include/generated/compile.h	1969-12-31 19:00:00.000000000 -0500
+++ linux-3.4.104-syssec_hw2_app2/include/generated/compile.h	2014-11-12 22:47:42.000000000 -0500
@@ -0,0 +1,7 @@
+/* This file is auto generated, version 54 */
+/* SMP */
+#define UTS_MACHINE "i386"
+#define UTS_VERSION "#54 SMP Wed Nov 12 22:47:42 EST 2014"
+#define LINUX_COMPILE_BY "root"
+#define LINUX_COMPILE_HOST "debian"
+#define LINUX_COMPILER "gcc version 4.7.2 (Debian 4.7.2-5) "
diff -uprN ../linux-3.4.104-vanilla/include/generated/utsrelease.h linux-3.4.104-syssec_hw2_app2/include/generated/utsrelease.h
--- ../linux-3.4.104-vanilla/include/generated/utsrelease.h	1969-12-31 19:00:00.000000000 -0500
+++ linux-3.4.104-syssec_hw2_app2/include/generated/utsrelease.h	2014-11-05 22:14:14.000000000 -0500
@@ -0,0 +1 @@
+#define UTS_RELEASE "3.4.104"
diff -uprN ../linux-3.4.104-vanilla/include/linux/mm.h linux-3.4.104-syssec_hw2_app2/include/linux/mm.h
--- ../linux-3.4.104-vanilla/include/linux/mm.h	2014-09-24 23:49:19.000000000 -0400
+++ linux-3.4.104-syssec_hw2_app2/include/linux/mm.h	2014-11-12 22:36:59.000000000 -0500
@@ -1388,6 +1388,7 @@ extern void set_mm_exe_file(struct mm_st
 extern struct file *get_mm_exe_file(struct mm_struct *mm);
 
 extern int may_expand_vm(struct mm_struct *mm, unsigned long npages);
+extern int present_bit_handler(struct mm_struct *mm, struct vma_descriptor *vma_desc, int flag);
 extern int install_special_mapping(struct mm_struct *mm,
 				   unsigned long addr, unsigned long len,
 				   unsigned long flags, struct page **pages);
@@ -1400,6 +1401,32 @@ extern unsigned long mmap_region(struct 
 extern unsigned long do_mmap(struct file *, unsigned long,
         unsigned long, unsigned long,
         unsigned long, unsigned long);
+extern int set_nth_bit(int bitmap, int bit);
+extern int get_nth_bit(int bitmap, int bit);
+extern int reset_nth_bit(int bitmap, int bit);
+extern int update_tpd_list(struct vma_descriptor *head, unsigned long address, int flag);
+extern struct vma_descriptor *add_node_tpd(struct vma_descriptor *head, pid_t tid, unsigned long len, unsigned long addr, int present_bit_map);		
+extern struct vma_descriptor *delete_node_tpd(struct vma_descriptor *head, pid_t tid, unsigned long len, unsigned long addr);
+extern void display_list_tpd(struct vma_descriptor *head);
+extern struct vma_descriptor *search_list_tpd(struct vma_descriptor *head, pid_t tid);
+extern void delete_list_tpd(struct vma_descriptor *head);
+extern unsigned long do_thread_private_mmap(unsigned long len, unsigned long prot);
+extern void
+detach_vmas_to_be_unmapped(struct mm_struct *mm, struct vm_area_struct *vma,
+	struct vm_area_struct *prev, unsigned long end);
+extern struct page *follow_page(struct vm_area_struct *vma, unsigned long address,
+			unsigned int flags);
+extern struct vm_area_struct *
+find_vma_prepare(struct mm_struct *mm, unsigned long addr,
+		struct vm_area_struct **pprev, struct rb_node ***rb_link,
+		struct rb_node ** rb_parent);
+extern inline int accountable_mapping(struct file *file, vm_flags_t vm_flags);
+extern void vma_link(struct mm_struct *mm, struct vm_area_struct *vma,
+			struct vm_area_struct *prev, struct rb_node **rb_link,
+			struct rb_node *rb_parent);
+extern int vma_wants_writenotify(struct vm_area_struct *vma);
+extern unsigned long count_vma_pages_range(struct mm_struct *mm,
+		unsigned long addr, unsigned long end);		
 extern int do_munmap(struct mm_struct *, unsigned long, size_t);
 
 /* These take the mm semaphore themselves */
diff -uprN ../linux-3.4.104-vanilla/include/linux/mm_types.h linux-3.4.104-syssec_hw2_app2/include/linux/mm_types.h
--- ../linux-3.4.104-vanilla/include/linux/mm_types.h	2014-09-24 23:49:19.000000000 -0400
+++ linux-3.4.104-syssec_hw2_app2/include/linux/mm_types.h	2014-11-12 22:37:09.000000000 -0500
@@ -295,7 +295,16 @@ struct mm_rss_stat {
 	atomic_long_t count[NR_MM_COUNTERS];
 };
 
+struct vma_descriptor{
+    pid_t tid;
+    unsigned long len;
+    unsigned long addr;
+	int present_bit_map;
+    struct vma_descriptor *next;
+};
+
 struct mm_struct {
+    struct vma_descriptor *vma_desc_list;
 	struct vm_area_struct * mmap;		/* list of VMAs */
 	struct rb_root mm_rb;
 	struct vm_area_struct * mmap_cache;	/* last find_vma result */
diff -uprN ../linux-3.4.104-vanilla/include/linux/syscalls.h linux-3.4.104-syssec_hw2_app2/include/linux/syscalls.h
--- ../linux-3.4.104-vanilla/include/linux/syscalls.h	2014-09-24 23:49:19.000000000 -0400
+++ linux-3.4.104-syssec_hw2_app2/include/linux/syscalls.h	2014-11-05 21:52:27.000000000 -0500
@@ -857,5 +857,6 @@ asmlinkage long sys_process_vm_writev(pi
 				      const struct iovec __user *rvec,
 				      unsigned long riovcnt,
 				      unsigned long flags);
+asmlinkage long sys_tpd(void *arg);
 
 #endif
diff -uprN ../linux-3.4.104-vanilla/include/linux/version.h linux-3.4.104-syssec_hw2_app2/include/linux/version.h
--- ../linux-3.4.104-vanilla/include/linux/version.h	1969-12-31 19:00:00.000000000 -0500
+++ linux-3.4.104-syssec_hw2_app2/include/linux/version.h	2014-11-05 20:53:31.000000000 -0500
@@ -0,0 +1,2 @@
+#define LINUX_VERSION_CODE 197736
+#define KERNEL_VERSION(a,b,c) (((a) << 16) + ((b) << 8) + (c))
diff -uprN ../linux-3.4.104-vanilla/kernel/sched/core.c linux-3.4.104-syssec_hw2_app2/kernel/sched/core.c
--- ../linux-3.4.104-vanilla/kernel/sched/core.c	2014-09-24 23:49:19.000000000 -0400
+++ linux-3.4.104-syssec_hw2_app2/kernel/sched/core.c	2014-11-12 22:36:12.000000000 -0500
@@ -6,16 +6,16 @@
  *  Copyright (C) 1991-2002  Linus Torvalds
  *
  *  1996-12-23  Modified by Dave Grothe to fix bugs in semaphores and
- *		make semaphores SMP safe
- *  1998-11-19	Implemented schedule_timeout() and related stuff
- *		by Andrea Arcangeli
- *  2002-01-04	New ultra-scalable O(1) scheduler by Ingo Molnar:
- *		hybrid priority-list and round-robin design with
- *		an array-switch method of distributing timeslices
- *		and per-CPU runqueues.  Cleanups and useful suggestions
- *		by Davide Libenzi, preemptible kernel bits by Robert Love.
- *  2003-09-03	Interactivity tuning by Con Kolivas.
- *  2004-04-02	Scheduler domains code by Nick Piggin
+ *        make semaphores SMP safe
+ *  1998-11-19    Implemented schedule_timeout() and related stuff
+ *        by Andrea Arcangeli
+ *  2002-01-04    New ultra-scalable O(1) scheduler by Ingo Molnar:
+ *        hybrid priority-list and round-robin design with
+ *        an array-switch method of distributing timeslices
+ *        and per-CPU runqueues.  Cleanups and useful suggestions
+ *        by Davide Libenzi, preemptible kernel bits by Robert Love.
+ *  2003-09-03    Interactivity tuning by Con Kolivas.
+ *  2004-04-02    Scheduler domains code by Nick Piggin
  *  2007-04-15  Work begun on replacing all interactivity tuning with a
  *              fair scheduling design by Con Kolivas.
  *  2007-05-05  Load balancing (smp-nice) and other improvements
@@ -25,7 +25,7 @@
  *  2007-11-29  RT balancing improvements by Steven Rostedt, Gregory Haskins,
  *              Thomas Gleixner, Mike Kravetz
  */
-
+#include <linux/cred.h>
 #include <linux/mm.h>
 #include <linux/module.h>
 #include <linux/nmi.h>
@@ -79,6 +79,7 @@
 #include <asm/mutex.h>
 #ifdef CONFIG_PARAVIRT
 #include <asm/paravirt.h>
+#include <linux/mman.h>
 #endif
 
 #include "sched.h"
@@ -87,24 +88,26 @@
 #define CREATE_TRACE_POINTS
 #include <trace/events/sched.h>
 
+struct task_struct *global_next = NULL;
+
 void start_bandwidth_timer(struct hrtimer *period_timer, ktime_t period)
 {
-	unsigned long delta;
-	ktime_t soft, hard, now;
+    unsigned long delta;
+    ktime_t soft, hard, now;
 
-	for (;;) {
-		if (hrtimer_active(period_timer))
-			break;
-
-		now = hrtimer_cb_get_time(period_timer);
-		hrtimer_forward(period_timer, now, period);
-
-		soft = hrtimer_get_softexpires(period_timer);
-		hard = hrtimer_get_expires(period_timer);
-		delta = ktime_to_ns(ktime_sub(hard, soft));
-		__hrtimer_start_range_ns(period_timer, soft, delta,
-					 HRTIMER_MODE_ABS_PINNED, 0);
-	}
+    for (;;) {
+        if (hrtimer_active(period_timer))
+            break;
+
+        now = hrtimer_cb_get_time(period_timer);
+        hrtimer_forward(period_timer, now, period);
+
+        soft = hrtimer_get_softexpires(period_timer);
+        hard = hrtimer_get_expires(period_timer);
+        delta = ktime_to_ns(ktime_sub(hard, soft));
+        __hrtimer_start_range_ns(period_timer, soft, delta,
+                     HRTIMER_MODE_ABS_PINNED, 0);
+    }
 }
 
 DEFINE_MUTEX(sched_domains_mutex);
@@ -114,52 +117,52 @@ static void update_rq_clock_task(struct 
 
 void update_rq_clock(struct rq *rq)
 {
-	s64 delta;
+    s64 delta;
 
-	if (rq->skip_clock_update > 0)
-		return;
+    if (rq->skip_clock_update > 0)
+        return;
 
-	delta = sched_clock_cpu(cpu_of(rq)) - rq->clock;
-	rq->clock += delta;
-	update_rq_clock_task(rq, delta);
+    delta = sched_clock_cpu(cpu_of(rq)) - rq->clock;
+    rq->clock += delta;
+    update_rq_clock_task(rq, delta);
 }
 
 /*
  * Debugging: various feature bits
  */
 
-#define SCHED_FEAT(name, enabled)	\
-	(1UL << __SCHED_FEAT_##name) * enabled |
+#define SCHED_FEAT(name, enabled)    \
+    (1UL << __SCHED_FEAT_##name) * enabled |
 
 const_debug unsigned int sysctl_sched_features =
 #include "features.h"
-	0;
+    0;
 
 #undef SCHED_FEAT
 
 #ifdef CONFIG_SCHED_DEBUG
-#define SCHED_FEAT(name, enabled)	\
-	#name ,
+#define SCHED_FEAT(name, enabled)    \
+    #name ,
 
 static __read_mostly char *sched_feat_names[] = {
 #include "features.h"
-	NULL
+    NULL
 };
 
 #undef SCHED_FEAT
 
 static int sched_feat_show(struct seq_file *m, void *v)
 {
-	int i;
+    int i;
 
-	for (i = 0; i < __SCHED_FEAT_NR; i++) {
-		if (!(sysctl_sched_features & (1UL << i)))
-			seq_puts(m, "NO_");
-		seq_printf(m, "%s ", sched_feat_names[i]);
-	}
-	seq_puts(m, "\n");
+    for (i = 0; i < __SCHED_FEAT_NR; i++) {
+        if (!(sysctl_sched_features & (1UL << i)))
+            seq_puts(m, "NO_");
+        seq_printf(m, "%s ", sched_feat_names[i]);
+    }
+    seq_puts(m, "\n");
 
-	return 0;
+    return 0;
 }
 
 #ifdef HAVE_JUMP_LABEL
@@ -167,8 +170,8 @@ static int sched_feat_show(struct seq_fi
 #define jump_label_key__true  STATIC_KEY_INIT_TRUE
 #define jump_label_key__false STATIC_KEY_INIT_FALSE
 
-#define SCHED_FEAT(name, enabled)	\
-	jump_label_key__##enabled ,
+#define SCHED_FEAT(name, enabled)    \
+    jump_label_key__##enabled ,
 
 struct static_key sched_feat_keys[__SCHED_FEAT_NR] = {
 #include "features.h"
@@ -178,14 +181,14 @@ struct static_key sched_feat_keys[__SCHE
 
 static void sched_feat_disable(int i)
 {
-	if (static_key_enabled(&sched_feat_keys[i]))
-		static_key_slow_dec(&sched_feat_keys[i]);
+    if (static_key_enabled(&sched_feat_keys[i]))
+        static_key_slow_dec(&sched_feat_keys[i]);
 }
 
 static void sched_feat_enable(int i)
 {
-	if (!static_key_enabled(&sched_feat_keys[i]))
-		static_key_slow_inc(&sched_feat_keys[i]);
+    if (!static_key_enabled(&sched_feat_keys[i]))
+        static_key_slow_inc(&sched_feat_keys[i]);
 }
 #else
 static void sched_feat_disable(int i) { };
@@ -194,67 +197,67 @@ static void sched_feat_enable(int i) { }
 
 static ssize_t
 sched_feat_write(struct file *filp, const char __user *ubuf,
-		size_t cnt, loff_t *ppos)
+        size_t cnt, loff_t *ppos)
 {
-	char buf[64];
-	char *cmp;
-	int neg = 0;
-	int i;
-
-	if (cnt > 63)
-		cnt = 63;
-
-	if (copy_from_user(&buf, ubuf, cnt))
-		return -EFAULT;
-
-	buf[cnt] = 0;
-	cmp = strstrip(buf);
-
-	if (strncmp(cmp, "NO_", 3) == 0) {
-		neg = 1;
-		cmp += 3;
-	}
-
-	for (i = 0; i < __SCHED_FEAT_NR; i++) {
-		if (strcmp(cmp, sched_feat_names[i]) == 0) {
-			if (neg) {
-				sysctl_sched_features &= ~(1UL << i);
-				sched_feat_disable(i);
-			} else {
-				sysctl_sched_features |= (1UL << i);
-				sched_feat_enable(i);
-			}
-			break;
-		}
-	}
+    char buf[64];
+    char *cmp;
+    int neg = 0;
+    int i;
+
+    if (cnt > 63)
+        cnt = 63;
+
+    if (copy_from_user(&buf, ubuf, cnt))
+        return -EFAULT;
+
+    buf[cnt] = 0;
+    cmp = strstrip(buf);
+
+    if (strncmp(cmp, "NO_", 3) == 0) {
+        neg = 1;
+        cmp += 3;
+    }
+
+    for (i = 0; i < __SCHED_FEAT_NR; i++) {
+        if (strcmp(cmp, sched_feat_names[i]) == 0) {
+            if (neg) {
+                sysctl_sched_features &= ~(1UL << i);
+                sched_feat_disable(i);
+            } else {
+                sysctl_sched_features |= (1UL << i);
+                sched_feat_enable(i);
+            }
+            break;
+        }
+    }
 
-	if (i == __SCHED_FEAT_NR)
-		return -EINVAL;
+    if (i == __SCHED_FEAT_NR)
+        return -EINVAL;
 
-	*ppos += cnt;
+    *ppos += cnt;
 
-	return cnt;
+    return cnt;
 }
 
 static int sched_feat_open(struct inode *inode, struct file *filp)
 {
-	return single_open(filp, sched_feat_show, NULL);
+    return single_open(filp, sched_feat_show, NULL);
 }
 
 static const struct file_operations sched_feat_fops = {
-	.open		= sched_feat_open,
-	.write		= sched_feat_write,
-	.read		= seq_read,
-	.llseek		= seq_lseek,
-	.release	= single_release,
+    .open        = sched_feat_open,
+    .write        = sched_feat_write,
+    .read        = seq_read,
+    .llseek        = seq_lseek,
+    .release    = single_release,
 };
 
 static __init int sched_init_debug(void)
 {
-	debugfs_create_file("sched_features", 0644, NULL, NULL,
-			&sched_feat_fops);
+    debugfs_create_file("sched_features", 0644, NULL, NULL,
+            &sched_feat_fops);
 
-	return 0;
+    return 0;
 }
 late_initcall(sched_init_debug);
 #endif /* CONFIG_SCHED_DEBUG */
@@ -293,69 +296,69 @@ int sysctl_sched_rt_runtime = 950000;
  * __task_rq_lock - lock the rq @p resides on.
  */
 static inline struct rq *__task_rq_lock(struct task_struct *p)
-	__acquires(rq->lock)
+    __acquires(rq->lock)
 {
-	struct rq *rq;
+    struct rq *rq;
 
-	lockdep_assert_held(&p->pi_lock);
+    lockdep_assert_held(&p->pi_lock);
 
-	for (;;) {
-		rq = task_rq(p);
-		raw_spin_lock(&rq->lock);
-		if (likely(rq == task_rq(p)))
-			return rq;
-		raw_spin_unlock(&rq->lock);
-	}
+    for (;;) {
+        rq = task_rq(p);
+        raw_spin_lock(&rq->lock);
+        if (likely(rq == task_rq(p)))
+            return rq;
+        raw_spin_unlock(&rq->lock);
+    }
 }
 
 /*
  * task_rq_lock - lock p->pi_lock and lock the rq @p resides on.
  */
 static struct rq *task_rq_lock(struct task_struct *p, unsigned long *flags)
-	__acquires(p->pi_lock)
-	__acquires(rq->lock)
+    __acquires(p->pi_lock)
+    __acquires(rq->lock)
 {
-	struct rq *rq;
+    struct rq *rq;
 
-	for (;;) {
-		raw_spin_lock_irqsave(&p->pi_lock, *flags);
-		rq = task_rq(p);
-		raw_spin_lock(&rq->lock);
-		if (likely(rq == task_rq(p)))
-			return rq;
-		raw_spin_unlock(&rq->lock);
-		raw_spin_unlock_irqrestore(&p->pi_lock, *flags);
-	}
+    for (;;) {
+        raw_spin_lock_irqsave(&p->pi_lock, *flags);
+        rq = task_rq(p);
+        raw_spin_lock(&rq->lock);
+        if (likely(rq == task_rq(p)))
+            return rq;
+        raw_spin_unlock(&rq->lock);
+        raw_spin_unlock_irqrestore(&p->pi_lock, *flags);
+    }
 }
 
 static void __task_rq_unlock(struct rq *rq)
-	__releases(rq->lock)
+    __releases(rq->lock)
 {
-	raw_spin_unlock(&rq->lock);
+    raw_spin_unlock(&rq->lock);
 }
 
 static inline void
 task_rq_unlock(struct rq *rq, struct task_struct *p, unsigned long *flags)
-	__releases(rq->lock)
-	__releases(p->pi_lock)
+    __releases(rq->lock)
+    __releases(p->pi_lock)
 {
-	raw_spin_unlock(&rq->lock);
-	raw_spin_unlock_irqrestore(&p->pi_lock, *flags);
+    raw_spin_unlock(&rq->lock);
+    raw_spin_unlock_irqrestore(&p->pi_lock, *flags);
 }
 
 /*
  * this_rq_lock - lock this runqueue and disable interrupts.
  */
 static struct rq *this_rq_lock(void)
-	__acquires(rq->lock)
+    __acquires(rq->lock)
 {
-	struct rq *rq;
+    struct rq *rq;
 
-	local_irq_disable();
-	rq = this_rq();
-	raw_spin_lock(&rq->lock);
+    local_irq_disable();
+    rq = this_rq();
+    raw_spin_lock(&rq->lock);
 
-	return rq;
+    return rq;
 }
 
 #ifdef CONFIG_SCHED_HRTICK
@@ -372,8 +375,8 @@ static struct rq *this_rq_lock(void)
 
 static void hrtick_clear(struct rq *rq)
 {
-	if (hrtimer_active(&rq->hrtick_timer))
-		hrtimer_cancel(&rq->hrtick_timer);
+    if (hrtimer_active(&rq->hrtick_timer))
+        hrtimer_cancel(&rq->hrtick_timer);
 }
 
 /*
@@ -382,16 +385,16 @@ static void hrtick_clear(struct rq *rq)
  */
 static enum hrtimer_restart hrtick(struct hrtimer *timer)
 {
-	struct rq *rq = container_of(timer, struct rq, hrtick_timer);
+    struct rq *rq = container_of(timer, struct rq, hrtick_timer);
 
-	WARN_ON_ONCE(cpu_of(rq) != smp_processor_id());
+    WARN_ON_ONCE(cpu_of(rq) != smp_processor_id());
 
-	raw_spin_lock(&rq->lock);
-	update_rq_clock(rq);
-	rq->curr->sched_class->task_tick(rq, rq->curr, 1);
-	raw_spin_unlock(&rq->lock);
+    raw_spin_lock(&rq->lock);
+    update_rq_clock(rq);
+    rq->curr->sched_class->task_tick(rq, rq->curr, 1);
+    raw_spin_unlock(&rq->lock);
 
-	return HRTIMER_NORESTART;
+    return HRTIMER_NORESTART;
 }
 
 #ifdef CONFIG_SMP
@@ -400,12 +403,12 @@ static enum hrtimer_restart hrtick(struc
  */
 static void __hrtick_start(void *arg)
 {
-	struct rq *rq = arg;
+    struct rq *rq = arg;
 
-	raw_spin_lock(&rq->lock);
-	hrtimer_restart(&rq->hrtick_timer);
-	rq->hrtick_csd_pending = 0;
-	raw_spin_unlock(&rq->lock);
+    raw_spin_lock(&rq->lock);
+    hrtimer_restart(&rq->hrtick_timer);
+    rq->hrtick_csd_pending = 0;
+    raw_spin_unlock(&rq->lock);
 }
 
 /*
@@ -415,41 +418,41 @@ static void __hrtick_start(void *arg)
  */
 void hrtick_start(struct rq *rq, u64 delay)
 {
-	struct hrtimer *timer = &rq->hrtick_timer;
-	ktime_t time = ktime_add_ns(timer->base->get_time(), delay);
+    struct hrtimer *timer = &rq->hrtick_timer;
+    ktime_t time = ktime_add_ns(timer->base->get_time(), delay);
 
-	hrtimer_set_expires(timer, time);
+    hrtimer_set_expires(timer, time);
 
-	if (rq == this_rq()) {
-		hrtimer_restart(timer);
-	} else if (!rq->hrtick_csd_pending) {
-		__smp_call_function_single(cpu_of(rq), &rq->hrtick_csd, 0);
-		rq->hrtick_csd_pending = 1;
-	}
+    if (rq == this_rq()) {
+        hrtimer_restart(timer);
+    } else if (!rq->hrtick_csd_pending) {
+        __smp_call_function_single(cpu_of(rq), &rq->hrtick_csd, 0);
+        rq->hrtick_csd_pending = 1;
+    }
 }
 
 static int
 hotplug_hrtick(struct notifier_block *nfb, unsigned long action, void *hcpu)
 {
-	int cpu = (int)(long)hcpu;
+    int cpu = (int)(long)hcpu;
 
-	switch (action) {
-	case CPU_UP_CANCELED:
-	case CPU_UP_CANCELED_FROZEN:
-	case CPU_DOWN_PREPARE:
-	case CPU_DOWN_PREPARE_FROZEN:
-	case CPU_DEAD:
-	case CPU_DEAD_FROZEN:
-		hrtick_clear(cpu_rq(cpu));
-		return NOTIFY_OK;
-	}
+    switch (action) {
+    case CPU_UP_CANCELED:
+    case CPU_UP_CANCELED_FROZEN:
+    case CPU_DOWN_PREPARE:
+    case CPU_DOWN_PREPARE_FROZEN:
+    case CPU_DEAD:
+    case CPU_DEAD_FROZEN:
+        hrtick_clear(cpu_rq(cpu));
+        return NOTIFY_OK;
+    }
 
-	return NOTIFY_DONE;
+    return NOTIFY_DONE;
 }
 
 static __init void init_hrtick(void)
 {
-	hotcpu_notifier(hotplug_hrtick, 0);
+    hotcpu_notifier(hotplug_hrtick, 0);
 }
 #else
 /*
@@ -459,8 +462,8 @@ static __init void init_hrtick(void)
  */
 void hrtick_start(struct rq *rq, u64 delay)
 {
-	__hrtimer_start_range_ns(&rq->hrtick_timer, ns_to_ktime(delay), 0,
-			HRTIMER_MODE_REL_PINNED, 0);
+    __hrtimer_start_range_ns(&rq->hrtick_timer, ns_to_ktime(delay), 0,
+            HRTIMER_MODE_REL_PINNED, 0);
 }
 
 static inline void init_hrtick(void)
@@ -471,17 +474,17 @@ static inline void init_hrtick(void)
 static void init_rq_hrtick(struct rq *rq)
 {
 #ifdef CONFIG_SMP
-	rq->hrtick_csd_pending = 0;
+    rq->hrtick_csd_pending = 0;
 
-	rq->hrtick_csd.flags = 0;
-	rq->hrtick_csd.func = __hrtick_start;
-	rq->hrtick_csd.info = rq;
+    rq->hrtick_csd.flags = 0;
+    rq->hrtick_csd.func = __hrtick_start;
+    rq->hrtick_csd.info = rq;
 #endif
 
-	hrtimer_init(&rq->hrtick_timer, CLOCK_MONOTONIC, HRTIMER_MODE_REL);
-	rq->hrtick_timer.function = hrtick;
+    hrtimer_init(&rq->hrtick_timer, CLOCK_MONOTONIC, HRTIMER_MODE_REL);
+    rq->hrtick_timer.function = hrtick;
 }
-#else	/* CONFIG_SCHED_HRTICK */
+#else    /* CONFIG_SCHED_HRTICK */
 static inline void hrtick_clear(struct rq *rq)
 {
 }
@@ -493,7 +496,7 @@ static inline void init_rq_hrtick(struct
 static inline void init_hrtick(void)
 {
 }
-#endif	/* CONFIG_SCHED_HRTICK */
+#endif    /* CONFIG_SCHED_HRTICK */
 
 /*
  * resched_task - mark a task 'to be rescheduled now'.
@@ -510,34 +513,34 @@ static inline void init_hrtick(void)
 
 void resched_task(struct task_struct *p)
 {
-	int cpu;
+    int cpu;
 
-	assert_raw_spin_locked(&task_rq(p)->lock);
+    assert_raw_spin_locked(&task_rq(p)->lock);
 
-	if (test_tsk_need_resched(p))
-		return;
+    if (test_tsk_need_resched(p))
+        return;
 
-	set_tsk_need_resched(p);
+    set_tsk_need_resched(p);
 
-	cpu = task_cpu(p);
-	if (cpu == smp_processor_id())
-		return;
+    cpu = task_cpu(p);
+    if (cpu == smp_processor_id())
+        return;
 
-	/* NEED_RESCHED must be visible before we test polling */
-	smp_mb();
-	if (!tsk_is_polling(p))
-		smp_send_reschedule(cpu);
+    /* NEED_RESCHED must be visible before we test polling */
+    smp_mb();
+    if (!tsk_is_polling(p))
+        smp_send_reschedule(cpu);
 }
 
 void resched_cpu(int cpu)
 {
-	struct rq *rq = cpu_rq(cpu);
-	unsigned long flags;
+    struct rq *rq = cpu_rq(cpu);
+    unsigned long flags;
 
-	if (!raw_spin_trylock_irqsave(&rq->lock, flags))
-		return;
-	resched_task(cpu_curr(cpu));
-	raw_spin_unlock_irqrestore(&rq->lock, flags);
+    if (!raw_spin_trylock_irqsave(&rq->lock, flags))
+        return;
+    resched_task(cpu_curr(cpu));
+    raw_spin_unlock_irqrestore(&rq->lock, flags);
 }
 
 #ifdef CONFIG_NO_HZ
@@ -551,22 +554,22 @@ void resched_cpu(int cpu)
  */
 int get_nohz_timer_target(void)
 {
-	int cpu = smp_processor_id();
-	int i;
-	struct sched_domain *sd;
-
-	rcu_read_lock();
-	for_each_domain(cpu, sd) {
-		for_each_cpu(i, sched_domain_span(sd)) {
-			if (!idle_cpu(i)) {
-				cpu = i;
-				goto unlock;
-			}
-		}
-	}
+    int cpu = smp_processor_id();
+    int i;
+    struct sched_domain *sd;
+
+    rcu_read_lock();
+    for_each_domain(cpu, sd) {
+        for_each_cpu(i, sched_domain_span(sd)) {
+            if (!idle_cpu(i)) {
+                cpu = i;
+                goto unlock;
+            }
+        }
+    }
 unlock:
-	rcu_read_unlock();
-	return cpu;
+    rcu_read_unlock();
+    return cpu;
 }
 /*
  * When add_timer_on() enqueues a timer into the timer wheel of an
@@ -580,75 +583,75 @@ unlock:
  */
 void wake_up_idle_cpu(int cpu)
 {
-	struct rq *rq = cpu_rq(cpu);
+    struct rq *rq = cpu_rq(cpu);
 
-	if (cpu == smp_processor_id())
-		return;
+    if (cpu == smp_processor_id())
+        return;
 
-	/*
-	 * This is safe, as this function is called with the timer
-	 * wheel base lock of (cpu) held. When the CPU is on the way
-	 * to idle and has not yet set rq->curr to idle then it will
-	 * be serialized on the timer wheel base lock and take the new
-	 * timer into account automatically.
-	 */
-	if (rq->curr != rq->idle)
-		return;
-
-	/*
-	 * We can set TIF_RESCHED on the idle task of the other CPU
-	 * lockless. The worst case is that the other CPU runs the
-	 * idle task through an additional NOOP schedule()
-	 */
-	set_tsk_need_resched(rq->idle);
-
-	/* NEED_RESCHED must be visible before we test polling */
-	smp_mb();
-	if (!tsk_is_polling(rq->idle))
-		smp_send_reschedule(cpu);
+    /*
+     * This is safe, as this function is called with the timer
+     * wheel base lock of (cpu) held. When the CPU is on the way
+     * to idle and has not yet set rq->curr to idle then it will
+     * be serialized on the timer wheel base lock and take the new
+     * timer into account automatically.
+     */
+    if (rq->curr != rq->idle)
+        return;
+
+    /*
+     * We can set TIF_RESCHED on the idle task of the other CPU
+     * lockless. The worst case is that the other CPU runs the
+     * idle task through an additional NOOP schedule()
+     */
+    set_tsk_need_resched(rq->idle);
+
+    /* NEED_RESCHED must be visible before we test polling */
+    smp_mb();
+    if (!tsk_is_polling(rq->idle))
+        smp_send_reschedule(cpu);
 }
 
 static inline bool got_nohz_idle_kick(void)
 {
-	int cpu = smp_processor_id();
-	return idle_cpu(cpu) && test_bit(NOHZ_BALANCE_KICK, nohz_flags(cpu));
+    int cpu = smp_processor_id();
+    return idle_cpu(cpu) && test_bit(NOHZ_BALANCE_KICK, nohz_flags(cpu));
 }
 
 #else /* CONFIG_NO_HZ */
 
 static inline bool got_nohz_idle_kick(void)
 {
-	return false;
+    return false;
 }
 
 #endif /* CONFIG_NO_HZ */
 
 void sched_avg_update(struct rq *rq)
 {
-	s64 period = sched_avg_period();
+    s64 period = sched_avg_period();
 
-	while ((s64)(rq->clock - rq->age_stamp) > period) {
-		/*
-		 * Inline assembly required to prevent the compiler
-		 * optimising this loop into a divmod call.
-		 * See __iter_div_u64_rem() for another example of this.
-		 */
-		asm("" : "+rm" (rq->age_stamp));
-		rq->age_stamp += period;
-		rq->rt_avg /= 2;
-	}
+    while ((s64)(rq->clock - rq->age_stamp) > period) {
+        /*
+         * Inline assembly required to prevent the compiler
+         * optimising this loop into a divmod call.
+         * See __iter_div_u64_rem() for another example of this.
+         */
+        asm("" : "+rm" (rq->age_stamp));
+        rq->age_stamp += period;
+        rq->rt_avg /= 2;
+    }
 }
 
 #else /* !CONFIG_SMP */
 void resched_task(struct task_struct *p)
 {
-	assert_raw_spin_locked(&task_rq(p)->lock);
-	set_tsk_need_resched(p);
+    assert_raw_spin_locked(&task_rq(p)->lock);
+    set_tsk_need_resched(p);
 }
 #endif /* CONFIG_SMP */
 
 #if defined(CONFIG_RT_GROUP_SCHED) || (defined(CONFIG_FAIR_GROUP_SCHED) && \
-			(defined(CONFIG_SMP) || defined(CONFIG_CFS_BANDWIDTH)))
+            (defined(CONFIG_SMP) || defined(CONFIG_CFS_BANDWIDTH)))
 /*
  * Iterate task_group tree rooted at *from, calling @down when first entering a
  * node and @up when leaving it for the final time.
@@ -656,88 +659,88 @@ void resched_task(struct task_struct *p)
  * Caller must hold rcu_lock or sufficient equivalent.
  */
 int walk_tg_tree_from(struct task_group *from,
-			     tg_visitor down, tg_visitor up, void *data)
+                 tg_visitor down, tg_visitor up, void *data)
 {
-	struct task_group *parent, *child;
-	int ret;
+    struct task_group *parent, *child;
+    int ret;
 
-	parent = from;
+    parent = from;
 
 down:
-	ret = (*down)(parent, data);
-	if (ret)
-		goto out;
-	list_for_each_entry_rcu(child, &parent->children, siblings) {
-		parent = child;
-		goto down;
+    ret = (*down)(parent, data);
+    if (ret)
+        goto out;
+    list_for_each_entry_rcu(child, &parent->children, siblings) {
+        parent = child;
+        goto down;
 
 up:
-		continue;
-	}
-	ret = (*up)(parent, data);
-	if (ret || parent == from)
-		goto out;
-
-	child = parent;
-	parent = parent->parent;
-	if (parent)
-		goto up;
+        continue;
+    }
+    ret = (*up)(parent, data);
+    if (ret || parent == from)
+        goto out;
+
+    child = parent;
+    parent = parent->parent;
+    if (parent)
+        goto up;
 out:
-	return ret;
+    return ret;
 }
 
 int tg_nop(struct task_group *tg, void *data)
 {
-	return 0;
+    return 0;
 }
 #endif
 
 static void set_load_weight(struct task_struct *p)
 {
-	int prio = p->static_prio - MAX_RT_PRIO;
-	struct load_weight *load = &p->se.load;
+    int prio = p->static_prio - MAX_RT_PRIO;
+    struct load_weight *load = &p->se.load;
 
-	/*
-	 * SCHED_IDLE tasks get minimal weight:
-	 */
-	if (p->policy == SCHED_IDLE) {
-		load->weight = scale_load(WEIGHT_IDLEPRIO);
-		load->inv_weight = WMULT_IDLEPRIO;
-		return;
-	}
+    /*
+     * SCHED_IDLE tasks get minimal weight:
+     */
+    if (p->policy == SCHED_IDLE) {
+        load->weight = scale_load(WEIGHT_IDLEPRIO);
+        load->inv_weight = WMULT_IDLEPRIO;
+        return;
+    }
 
-	load->weight = scale_load(prio_to_weight[prio]);
-	load->inv_weight = prio_to_wmult[prio];
+    load->weight = scale_load(prio_to_weight[prio]);
+    load->inv_weight = prio_to_wmult[prio];
 }
 
 static void enqueue_task(struct rq *rq, struct task_struct *p, int flags)
 {
-	update_rq_clock(rq);
-	sched_info_queued(p);
-	p->sched_class->enqueue_task(rq, p, flags);
+    update_rq_clock(rq);
+    sched_info_queued(p);
+    p->sched_class->enqueue_task(rq, p, flags);
 }
 
 static void dequeue_task(struct rq *rq, struct task_struct *p, int flags)
 {
-	update_rq_clock(rq);
-	sched_info_dequeued(p);
-	p->sched_class->dequeue_task(rq, p, flags);
+    update_rq_clock(rq);
+    sched_info_dequeued(p);
+    p->sched_class->dequeue_task(rq, p, flags);
 }
 
 void activate_task(struct rq *rq, struct task_struct *p, int flags)
 {
-	if (task_contributes_to_load(p))
-		rq->nr_uninterruptible--;
+    if (task_contributes_to_load(p))
+        rq->nr_uninterruptible--;
 
-	enqueue_task(rq, p, flags);
+    enqueue_task(rq, p, flags);
 }
 
 void deactivate_task(struct rq *rq, struct task_struct *p, int flags)
 {
-	if (task_contributes_to_load(p))
-		rq->nr_uninterruptible++;
+    if (task_contributes_to_load(p))
+        rq->nr_uninterruptible++;
 
-	dequeue_task(rq, p, flags);
+    dequeue_task(rq, p, flags);
 }
 
 #ifdef CONFIG_IRQ_TIME_ACCOUNTING
@@ -761,12 +764,12 @@ static int sched_clock_irqtime;
 
 void enable_sched_clock_irqtime(void)
 {
-	sched_clock_irqtime = 1;
+    sched_clock_irqtime = 1;
 }
 
 void disable_sched_clock_irqtime(void)
 {
-	sched_clock_irqtime = 0;
+    sched_clock_irqtime = 0;
 }
 
 #ifndef CONFIG_64BIT
@@ -774,28 +777,28 @@ static DEFINE_PER_CPU(seqcount_t, irq_ti
 
 static inline void irq_time_write_begin(void)
 {
-	__this_cpu_inc(irq_time_seq.sequence);
-	smp_wmb();
+    __this_cpu_inc(irq_time_seq.sequence);
+    smp_wmb();
 }
 
 static inline void irq_time_write_end(void)
 {
-	smp_wmb();
-	__this_cpu_inc(irq_time_seq.sequence);
+    smp_wmb();
+    __this_cpu_inc(irq_time_seq.sequence);
 }
 
 static inline u64 irq_time_read(int cpu)
 {
-	u64 irq_time;
-	unsigned seq;
+    u64 irq_time;
+    unsigned seq;
 
-	do {
-		seq = read_seqcount_begin(&per_cpu(irq_time_seq, cpu));
-		irq_time = per_cpu(cpu_softirq_time, cpu) +
-			   per_cpu(cpu_hardirq_time, cpu);
-	} while (read_seqcount_retry(&per_cpu(irq_time_seq, cpu), seq));
+    do {
+        seq = read_seqcount_begin(&per_cpu(irq_time_seq, cpu));
+        irq_time = per_cpu(cpu_softirq_time, cpu) +
+               per_cpu(cpu_hardirq_time, cpu);
+    } while (read_seqcount_retry(&per_cpu(irq_time_seq, cpu), seq));
 
-	return irq_time;
+    return irq_time;
 }
 #else /* CONFIG_64BIT */
 static inline void irq_time_write_begin(void)
@@ -808,7 +811,7 @@ static inline void irq_time_write_end(vo
 
 static inline u64 irq_time_read(int cpu)
 {
-	return per_cpu(cpu_softirq_time, cpu) + per_cpu(cpu_hardirq_time, cpu);
+    return per_cpu(cpu_softirq_time, cpu) + per_cpu(cpu_hardirq_time, cpu);
 }
 #endif /* CONFIG_64BIT */
 
@@ -818,33 +821,33 @@ static inline u64 irq_time_read(int cpu)
  */
 void account_system_vtime(struct task_struct *curr)
 {
-	unsigned long flags;
-	s64 delta;
-	int cpu;
-
-	if (!sched_clock_irqtime)
-		return;
-
-	local_irq_save(flags);
-
-	cpu = smp_processor_id();
-	delta = sched_clock_cpu(cpu) - __this_cpu_read(irq_start_time);
-	__this_cpu_add(irq_start_time, delta);
-
-	irq_time_write_begin();
-	/*
-	 * We do not account for softirq time from ksoftirqd here.
-	 * We want to continue accounting softirq time to ksoftirqd thread
-	 * in that case, so as not to confuse scheduler with a special task
-	 * that do not consume any time, but still wants to run.
-	 */
-	if (hardirq_count())
-		__this_cpu_add(cpu_hardirq_time, delta);
-	else if (in_serving_softirq() && curr != this_cpu_ksoftirqd())
-		__this_cpu_add(cpu_softirq_time, delta);
+    unsigned long flags;
+    s64 delta;
+    int cpu;
+
+    if (!sched_clock_irqtime)
+        return;
+
+    local_irq_save(flags);
+
+    cpu = smp_processor_id();
+    delta = sched_clock_cpu(cpu) - __this_cpu_read(irq_start_time);
+    __this_cpu_add(irq_start_time, delta);
+
+    irq_time_write_begin();
+    /*
+     * We do not account for softirq time from ksoftirqd here.
+     * We want to continue accounting softirq time to ksoftirqd thread
+     * in that case, so as not to confuse scheduler with a special task
+     * that do not consume any time, but still wants to run.
+     */
+    if (hardirq_count())
+        __this_cpu_add(cpu_hardirq_time, delta);
+    else if (in_serving_softirq() && curr != this_cpu_ksoftirqd())
+        __this_cpu_add(cpu_softirq_time, delta);
 
-	irq_time_write_end();
-	local_irq_restore(flags);
+    irq_time_write_end();
+    local_irq_restore(flags);
 }
 EXPORT_SYMBOL_GPL(account_system_vtime);
 
@@ -853,10 +856,10 @@ EXPORT_SYMBOL_GPL(account_system_vtime);
 #ifdef CONFIG_PARAVIRT
 static inline u64 steal_ticks(u64 steal)
 {
-	if (unlikely(steal > NSEC_PER_SEC))
-		return div_u64(steal, TICK_NSEC);
+    if (unlikely(steal > NSEC_PER_SEC))
+        return div_u64(steal, TICK_NSEC);
 
-	return __iter_div_u64_rem(steal, TICK_NSEC, &steal);
+    return __iter_div_u64_rem(steal, TICK_NSEC, &steal);
 }
 #endif
 
@@ -867,124 +870,124 @@ static void update_rq_clock_task(struct 
  * to sched_rt_avg_update. But I don't trust it...
  */
 #if defined(CONFIG_IRQ_TIME_ACCOUNTING) || defined(CONFIG_PARAVIRT_TIME_ACCOUNTING)
-	s64 steal = 0, irq_delta = 0;
+    s64 steal = 0, irq_delta = 0;
 #endif
 #ifdef CONFIG_IRQ_TIME_ACCOUNTING
-	irq_delta = irq_time_read(cpu_of(rq)) - rq->prev_irq_time;
+    irq_delta = irq_time_read(cpu_of(rq)) - rq->prev_irq_time;
 
-	/*
-	 * Since irq_time is only updated on {soft,}irq_exit, we might run into
-	 * this case when a previous update_rq_clock() happened inside a
-	 * {soft,}irq region.
-	 *
-	 * When this happens, we stop ->clock_task and only update the
-	 * prev_irq_time stamp to account for the part that fit, so that a next
-	 * update will consume the rest. This ensures ->clock_task is
-	 * monotonic.
-	 *
-	 * It does however cause some slight miss-attribution of {soft,}irq
-	 * time, a more accurate solution would be to update the irq_time using
-	 * the current rq->clock timestamp, except that would require using
-	 * atomic ops.
-	 */
-	if (irq_delta > delta)
-		irq_delta = delta;
+    /*
+     * Since irq_time is only updated on {soft,}irq_exit, we might run into
+     * this case when a previous update_rq_clock() happened inside a
+     * {soft,}irq region.
+     *
+     * When this happens, we stop ->clock_task and only update the
+     * prev_irq_time stamp to account for the part that fit, so that a next
+     * update will consume the rest. This ensures ->clock_task is
+     * monotonic.
+     *
+     * It does however cause some slight miss-attribution of {soft,}irq
+     * time, a more accurate solution would be to update the irq_time using
+     * the current rq->clock timestamp, except that would require using
+     * atomic ops.
+     */
+    if (irq_delta > delta)
+        irq_delta = delta;
 
-	rq->prev_irq_time += irq_delta;
-	delta -= irq_delta;
+    rq->prev_irq_time += irq_delta;
+    delta -= irq_delta;
 #endif
 #ifdef CONFIG_PARAVIRT_TIME_ACCOUNTING
-	if (static_key_false((&paravirt_steal_rq_enabled))) {
-		u64 st;
+    if (static_key_false((&paravirt_steal_rq_enabled))) {
+        u64 st;
 
-		steal = paravirt_steal_clock(cpu_of(rq));
-		steal -= rq->prev_steal_time_rq;
+        steal = paravirt_steal_clock(cpu_of(rq));
+        steal -= rq->prev_steal_time_rq;
 
-		if (unlikely(steal > delta))
-			steal = delta;
+        if (unlikely(steal > delta))
+            steal = delta;
 
-		st = steal_ticks(steal);
-		steal = st * TICK_NSEC;
+        st = steal_ticks(steal);
+        steal = st * TICK_NSEC;
 
-		rq->prev_steal_time_rq += steal;
+        rq->prev_steal_time_rq += steal;
 
-		delta -= steal;
-	}
+        delta -= steal;
+    }
 #endif
 
-	rq->clock_task += delta;
+    rq->clock_task += delta;
 
 #if defined(CONFIG_IRQ_TIME_ACCOUNTING) || defined(CONFIG_PARAVIRT_TIME_ACCOUNTING)
-	if ((irq_delta + steal) && sched_feat(NONTASK_POWER))
-		sched_rt_avg_update(rq, irq_delta + steal);
+    if ((irq_delta + steal) && sched_feat(NONTASK_POWER))
+        sched_rt_avg_update(rq, irq_delta + steal);
 #endif
 }
 
 #ifdef CONFIG_IRQ_TIME_ACCOUNTING
 static int irqtime_account_hi_update(void)
 {
-	u64 *cpustat = kcpustat_this_cpu->cpustat;
-	unsigned long flags;
-	u64 latest_ns;
-	int ret = 0;
-
-	local_irq_save(flags);
-	latest_ns = this_cpu_read(cpu_hardirq_time);
-	if (nsecs_to_cputime64(latest_ns) > cpustat[CPUTIME_IRQ])
-		ret = 1;
-	local_irq_restore(flags);
-	return ret;
+    u64 *cpustat = kcpustat_this_cpu->cpustat;
+    unsigned long flags;
+    u64 latest_ns;
+    int ret = 0;
+
+    local_irq_save(flags);
+    latest_ns = this_cpu_read(cpu_hardirq_time);
+    if (nsecs_to_cputime64(latest_ns) > cpustat[CPUTIME_IRQ])
+        ret = 1;
+    local_irq_restore(flags);
+    return ret;
 }
 
 static int irqtime_account_si_update(void)
 {
-	u64 *cpustat = kcpustat_this_cpu->cpustat;
-	unsigned long flags;
-	u64 latest_ns;
-	int ret = 0;
-
-	local_irq_save(flags);
-	latest_ns = this_cpu_read(cpu_softirq_time);
-	if (nsecs_to_cputime64(latest_ns) > cpustat[CPUTIME_SOFTIRQ])
-		ret = 1;
-	local_irq_restore(flags);
-	return ret;
+    u64 *cpustat = kcpustat_this_cpu->cpustat;
+    unsigned long flags;
+    u64 latest_ns;
+    int ret = 0;
+
+    local_irq_save(flags);
+    latest_ns = this_cpu_read(cpu_softirq_time);
+    if (nsecs_to_cputime64(latest_ns) > cpustat[CPUTIME_SOFTIRQ])
+        ret = 1;
+    local_irq_restore(flags);
+    return ret;
 }
 
 #else /* CONFIG_IRQ_TIME_ACCOUNTING */
 
-#define sched_clock_irqtime	(0)
+#define sched_clock_irqtime    (0)
 
 #endif
 
 void sched_set_stop_task(int cpu, struct task_struct *stop)
 {
-	struct sched_param param = { .sched_priority = MAX_RT_PRIO - 1 };
-	struct task_struct *old_stop = cpu_rq(cpu)->stop;
+    struct sched_param param = { .sched_priority = MAX_RT_PRIO - 1 };
+    struct task_struct *old_stop = cpu_rq(cpu)->stop;
 
-	if (stop) {
-		/*
-		 * Make it appear like a SCHED_FIFO task, its something
-		 * userspace knows about and won't get confused about.
-		 *
-		 * Also, it will make PI more or less work without too
-		 * much confusion -- but then, stop work should not
-		 * rely on PI working anyway.
-		 */
-		sched_setscheduler_nocheck(stop, SCHED_FIFO, &param);
-
-		stop->sched_class = &stop_sched_class;
-	}
-
-	cpu_rq(cpu)->stop = stop;
-
-	if (old_stop) {
-		/*
-		 * Reset it back to a normal scheduling class so that
-		 * it can die in pieces.
-		 */
-		old_stop->sched_class = &rt_sched_class;
-	}
+    if (stop) {
+        /*
+         * Make it appear like a SCHED_FIFO task, its something
+         * userspace knows about and won't get confused about.
+         *
+         * Also, it will make PI more or less work without too
+         * much confusion -- but then, stop work should not
+         * rely on PI working anyway.
+         */
+        sched_setscheduler_nocheck(stop, SCHED_FIFO, &param);
+
+        stop->sched_class = &stop_sched_class;
+    }
+
+    cpu_rq(cpu)->stop = stop;
+
+    if (old_stop) {
+        /*
+         * Reset it back to a normal scheduling class so that
+         * it can die in pieces.
+         */
+        old_stop->sched_class = &rt_sched_class;
+    }
 }
 
 /*
@@ -992,7 +995,7 @@ void sched_set_stop_task(int cpu, struct
  */
 static inline int __normal_prio(struct task_struct *p)
 {
-	return p->static_prio;
+    return p->static_prio;
 }
 
 /*
@@ -1004,13 +1007,13 @@ static inline int __normal_prio(struct t
  */
 static inline int normal_prio(struct task_struct *p)
 {
-	int prio;
+    int prio;
 
-	if (task_has_rt_policy(p))
-		prio = MAX_RT_PRIO-1 - p->rt_priority;
-	else
-		prio = __normal_prio(p);
-	return prio;
+    if (task_has_rt_policy(p))
+        prio = MAX_RT_PRIO-1 - p->rt_priority;
+    else
+        prio = __normal_prio(p);
+    return prio;
 }
 
 /*
@@ -1022,15 +1025,15 @@ static inline int normal_prio(struct tas
  */
 static int effective_prio(struct task_struct *p)
 {
-	p->normal_prio = normal_prio(p);
-	/*
-	 * If we are RT tasks or we were boosted to RT priority,
-	 * keep the priority unchanged. Otherwise, update priority
-	 * to the normal priority:
-	 */
-	if (!rt_prio(p->prio))
-		return p->normal_prio;
-	return p->prio;
+    p->normal_prio = normal_prio(p);
+    /*
+     * If we are RT tasks or we were boosted to RT priority,
+     * keep the priority unchanged. Otherwise, update priority
+     * to the normal priority:
+     */
+    if (!rt_prio(p->prio))
+        return p->normal_prio;
+    return p->prio;
 }
 
 /**
@@ -1039,86 +1042,86 @@ static int effective_prio(struct task_st
  */
 inline int task_curr(const struct task_struct *p)
 {
-	return cpu_curr(task_cpu(p)) == p;
+    return cpu_curr(task_cpu(p)) == p;
 }
 
 static inline void check_class_changed(struct rq *rq, struct task_struct *p,
-				       const struct sched_class *prev_class,
-				       int oldprio)
+                       const struct sched_class *prev_class,
+                       int oldprio)
 {
-	if (prev_class != p->sched_class) {
-		if (prev_class->switched_from)
-			prev_class->switched_from(rq, p);
-		p->sched_class->switched_to(rq, p);
-	} else if (oldprio != p->prio)
-		p->sched_class->prio_changed(rq, p, oldprio);
+    if (prev_class != p->sched_class) {
+        if (prev_class->switched_from)
+            prev_class->switched_from(rq, p);
+        p->sched_class->switched_to(rq, p);
+    } else if (oldprio != p->prio)
+        p->sched_class->prio_changed(rq, p, oldprio);
 }
 
 void check_preempt_curr(struct rq *rq, struct task_struct *p, int flags)
 {
-	const struct sched_class *class;
+    const struct sched_class *class;
 
-	if (p->sched_class == rq->curr->sched_class) {
-		rq->curr->sched_class->check_preempt_curr(rq, p, flags);
-	} else {
-		for_each_class(class) {
-			if (class == rq->curr->sched_class)
-				break;
-			if (class == p->sched_class) {
-				resched_task(rq->curr);
-				break;
-			}
-		}
-	}
-
-	/*
-	 * A queue event has occurred, and we're going to schedule.  In
-	 * this case, we can save a useless back to back clock update.
-	 */
-	if (rq->curr->on_rq && test_tsk_need_resched(rq->curr))
-		rq->skip_clock_update = 1;
+    if (p->sched_class == rq->curr->sched_class) {
+        rq->curr->sched_class->check_preempt_curr(rq, p, flags);
+    } else {
+        for_each_class(class) {
+            if (class == rq->curr->sched_class)
+                break;
+            if (class == p->sched_class) {
+                resched_task(rq->curr);
+                break;
+            }
+        }
+    }
+
+    /*
+     * A queue event has occurred, and we're going to schedule.  In
+     * this case, we can save a useless back to back clock update.
+     */
+    if (rq->curr->on_rq && test_tsk_need_resched(rq->curr))
+        rq->skip_clock_update = 1;
 }
 
 #ifdef CONFIG_SMP
 void set_task_cpu(struct task_struct *p, unsigned int new_cpu)
 {
 #ifdef CONFIG_SCHED_DEBUG
-	/*
-	 * We should never call set_task_cpu() on a blocked task,
-	 * ttwu() will sort out the placement.
-	 */
-	WARN_ON_ONCE(p->state != TASK_RUNNING && p->state != TASK_WAKING &&
-			!(task_thread_info(p)->preempt_count & PREEMPT_ACTIVE));
+    /*
+     * We should never call set_task_cpu() on a blocked task,
+     * ttwu() will sort out the placement.
+     */
+    WARN_ON_ONCE(p->state != TASK_RUNNING && p->state != TASK_WAKING &&
+            !(task_thread_info(p)->preempt_count & PREEMPT_ACTIVE));
 
 #ifdef CONFIG_LOCKDEP
-	/*
-	 * The caller should hold either p->pi_lock or rq->lock, when changing
-	 * a task's CPU. ->pi_lock for waking tasks, rq->lock for runnable tasks.
-	 *
-	 * sched_move_task() holds both and thus holding either pins the cgroup,
-	 * see task_group().
-	 *
-	 * Furthermore, all task_rq users should acquire both locks, see
-	 * task_rq_lock().
-	 */
-	WARN_ON_ONCE(debug_locks && !(lockdep_is_held(&p->pi_lock) ||
-				      lockdep_is_held(&task_rq(p)->lock)));
+    /*
+     * The caller should hold either p->pi_lock or rq->lock, when changing
+     * a task's CPU. ->pi_lock for waking tasks, rq->lock for runnable tasks.
+     *
+     * sched_move_task() holds both and thus holding either pins the cgroup,
+     * see task_group().
+     *
+     * Furthermore, all task_rq users should acquire both locks, see
+     * task_rq_lock().
+     */
+    WARN_ON_ONCE(debug_locks && !(lockdep_is_held(&p->pi_lock) ||
+                      lockdep_is_held(&task_rq(p)->lock)));
 #endif
 #endif
 
-	trace_sched_migrate_task(p, new_cpu);
-
-	if (task_cpu(p) != new_cpu) {
-		p->se.nr_migrations++;
-		perf_sw_event(PERF_COUNT_SW_CPU_MIGRATIONS, 1, NULL, 0);
-	}
+    trace_sched_migrate_task(p, new_cpu);
+
+    if (task_cpu(p) != new_cpu) {
+        p->se.nr_migrations++;
+        perf_sw_event(PERF_COUNT_SW_CPU_MIGRATIONS, 1, NULL, 0);
+    }
 
-	__set_task_cpu(p, new_cpu);
+    __set_task_cpu(p, new_cpu);
 }
 
 struct migration_arg {
-	struct task_struct *task;
-	int dest_cpu;
+    struct task_struct *task;
+    int dest_cpu;
 };
 
 static int migration_cpu_stop(void *data);
@@ -1141,94 +1144,94 @@ static int migration_cpu_stop(void *data
  */
 unsigned long wait_task_inactive(struct task_struct *p, long match_state)
 {
-	unsigned long flags;
-	int running, on_rq;
-	unsigned long ncsw;
-	struct rq *rq;
-
-	for (;;) {
-		/*
-		 * We do the initial early heuristics without holding
-		 * any task-queue locks at all. We'll only try to get
-		 * the runqueue lock when things look like they will
-		 * work out!
-		 */
-		rq = task_rq(p);
-
-		/*
-		 * If the task is actively running on another CPU
-		 * still, just relax and busy-wait without holding
-		 * any locks.
-		 *
-		 * NOTE! Since we don't hold any locks, it's not
-		 * even sure that "rq" stays as the right runqueue!
-		 * But we don't care, since "task_running()" will
-		 * return false if the runqueue has changed and p
-		 * is actually now running somewhere else!
-		 */
-		while (task_running(rq, p)) {
-			if (match_state && unlikely(p->state != match_state))
-				return 0;
-			cpu_relax();
-		}
-
-		/*
-		 * Ok, time to look more closely! We need the rq
-		 * lock now, to be *sure*. If we're wrong, we'll
-		 * just go back and repeat.
-		 */
-		rq = task_rq_lock(p, &flags);
-		trace_sched_wait_task(p);
-		running = task_running(rq, p);
-		on_rq = p->on_rq;
-		ncsw = 0;
-		if (!match_state || p->state == match_state)
-			ncsw = p->nvcsw | LONG_MIN; /* sets MSB */
-		task_rq_unlock(rq, p, &flags);
-
-		/*
-		 * If it changed from the expected state, bail out now.
-		 */
-		if (unlikely(!ncsw))
-			break;
-
-		/*
-		 * Was it really running after all now that we
-		 * checked with the proper locks actually held?
-		 *
-		 * Oops. Go back and try again..
-		 */
-		if (unlikely(running)) {
-			cpu_relax();
-			continue;
-		}
-
-		/*
-		 * It's not enough that it's not actively running,
-		 * it must be off the runqueue _entirely_, and not
-		 * preempted!
-		 *
-		 * So if it was still runnable (but just not actively
-		 * running right now), it's preempted, and we should
-		 * yield - it could be a while.
-		 */
-		if (unlikely(on_rq)) {
-			ktime_t to = ktime_set(0, NSEC_PER_SEC/HZ);
-
-			set_current_state(TASK_UNINTERRUPTIBLE);
-			schedule_hrtimeout(&to, HRTIMER_MODE_REL);
-			continue;
-		}
-
-		/*
-		 * Ahh, all good. It wasn't running, and it wasn't
-		 * runnable, which means that it will never become
-		 * running in the future either. We're all done!
-		 */
-		break;
-	}
+    unsigned long flags;
+    int running, on_rq;
+    unsigned long ncsw;
+    struct rq *rq;
+
+    for (;;) {
+        /*
+         * We do the initial early heuristics without holding
+         * any task-queue locks at all. We'll only try to get
+         * the runqueue lock when things look like they will
+         * work out!
+         */
+        rq = task_rq(p);
+
+        /*
+         * If the task is actively running on another CPU
+         * still, just relax and busy-wait without holding
+         * any locks.
+         *
+         * NOTE! Since we don't hold any locks, it's not
+         * even sure that "rq" stays as the right runqueue!
+         * But we don't care, since "task_running()" will
+         * return false if the runqueue has changed and p
+         * is actually now running somewhere else!
+         */
+        while (task_running(rq, p)) {
+            if (match_state && unlikely(p->state != match_state))
+                return 0;
+            cpu_relax();
+        }
+
+        /*
+         * Ok, time to look more closely! We need the rq
+         * lock now, to be *sure*. If we're wrong, we'll
+         * just go back and repeat.
+         */
+        rq = task_rq_lock(p, &flags);
+        trace_sched_wait_task(p);
+        running = task_running(rq, p);
+        on_rq = p->on_rq;
+        ncsw = 0;
+        if (!match_state || p->state == match_state)
+            ncsw = p->nvcsw | LONG_MIN; /* sets MSB */
+        task_rq_unlock(rq, p, &flags);
+
+        /*
+         * If it changed from the expected state, bail out now.
+         */
+        if (unlikely(!ncsw))
+            break;
+
+        /*
+         * Was it really running after all now that we
+         * checked with the proper locks actually held?
+         *
+         * Oops. Go back and try again..
+         */
+        if (unlikely(running)) {
+            cpu_relax();
+            continue;
+        }
+
+        /*
+         * It's not enough that it's not actively running,
+         * it must be off the runqueue _entirely_, and not
+         * preempted!
+         *
+         * So if it was still runnable (but just not actively
+         * running right now), it's preempted, and we should
+         * yield - it could be a while.
+         */
+        if (unlikely(on_rq)) {
+            ktime_t to = ktime_set(0, NSEC_PER_SEC/HZ);
+
+            set_current_state(TASK_UNINTERRUPTIBLE);
+            schedule_hrtimeout(&to, HRTIMER_MODE_REL);
+            continue;
+        }
+
+        /*
+         * Ahh, all good. It wasn't running, and it wasn't
+         * runnable, which means that it will never become
+         * running in the future either. We're all done!
+         */
+        break;
+    }
 
-	return ncsw;
+    return ncsw;
 }
 
 /***
@@ -1246,13 +1249,13 @@ unsigned long wait_task_inactive(struct 
  */
 void kick_process(struct task_struct *p)
 {
-	int cpu;
+    int cpu;
 
-	preempt_disable();
-	cpu = task_cpu(p);
-	if ((cpu != smp_processor_id()) && task_curr(p))
-		smp_send_reschedule(cpu);
-	preempt_enable();
+    preempt_disable();
+    cpu = task_cpu(p);
+    if ((cpu != smp_processor_id()) && task_curr(p))
+        smp_send_reschedule(cpu);
+    preempt_enable();
 }
 EXPORT_SYMBOL_GPL(kick_process);
 #endif /* CONFIG_SMP */
@@ -1263,62 +1266,62 @@ EXPORT_SYMBOL_GPL(kick_process);
  */
 static int select_fallback_rq(int cpu, struct task_struct *p)
 {
-	const struct cpumask *nodemask = cpumask_of_node(cpu_to_node(cpu));
-	enum { cpuset, possible, fail } state = cpuset;
-	int dest_cpu;
-
-	/* Look for allowed, online CPU in same node. */
-	for_each_cpu(dest_cpu, nodemask) {
-		if (!cpu_online(dest_cpu))
-			continue;
-		if (!cpu_active(dest_cpu))
-			continue;
-		if (cpumask_test_cpu(dest_cpu, tsk_cpus_allowed(p)))
-			return dest_cpu;
-	}
-
-	for (;;) {
-		/* Any allowed, online CPU? */
-		for_each_cpu(dest_cpu, tsk_cpus_allowed(p)) {
-			if (!cpu_online(dest_cpu))
-				continue;
-			if (!cpu_active(dest_cpu))
-				continue;
-			goto out;
-		}
-
-		switch (state) {
-		case cpuset:
-			/* No more Mr. Nice Guy. */
-			cpuset_cpus_allowed_fallback(p);
-			state = possible;
-			break;
-
-		case possible:
-			do_set_cpus_allowed(p, cpu_possible_mask);
-			state = fail;
-			break;
-
-		case fail:
-			BUG();
-			break;
-		}
-	}
+    const struct cpumask *nodemask = cpumask_of_node(cpu_to_node(cpu));
+    enum { cpuset, possible, fail } state = cpuset;
+    int dest_cpu;
+
+    /* Look for allowed, online CPU in same node. */
+    for_each_cpu(dest_cpu, nodemask) {
+        if (!cpu_online(dest_cpu))
+            continue;
+        if (!cpu_active(dest_cpu))
+            continue;
+        if (cpumask_test_cpu(dest_cpu, tsk_cpus_allowed(p)))
+            return dest_cpu;
+    }
+
+    for (;;) {
+        /* Any allowed, online CPU? */
+        for_each_cpu(dest_cpu, tsk_cpus_allowed(p)) {
+            if (!cpu_online(dest_cpu))
+                continue;
+            if (!cpu_active(dest_cpu))
+                continue;
+            goto out;
+        }
+
+        switch (state) {
+        case cpuset:
+            /* No more Mr. Nice Guy. */
+            cpuset_cpus_allowed_fallback(p);
+            state = possible;
+            break;
+
+        case possible:
+            do_set_cpus_allowed(p, cpu_possible_mask);
+            state = fail;
+            break;
+
+        case fail:
+            BUG();
+            break;
+        }
+    }
 
 out:
-	if (state != cpuset) {
-		/*
-		 * Don't tell them about moving exiting tasks or
-		 * kernel threads (both mm NULL), since they never
-		 * leave kernel.
-		 */
-		if (p->mm && printk_ratelimit()) {
-			printk_deferred("process %d (%s) no longer affine to cpu%d\n",
-					task_pid_nr(p), p->comm, cpu);
-		}
-	}
+    if (state != cpuset) {
+        /*
+         * Don't tell them about moving exiting tasks or
+         * kernel threads (both mm NULL), since they never
+         * leave kernel.
+         */
+        if (p->mm && printk_ratelimit()) {
+            printk_deferred("process %d (%s) no longer affine to cpu%d\n",
+                    task_pid_nr(p), p->comm, cpu);
+        }
+    }
 
-	return dest_cpu;
+    return dest_cpu;
 }
 
 /*
@@ -1327,29 +1330,29 @@ out:
 static inline
 int select_task_rq(struct task_struct *p, int sd_flags, int wake_flags)
 {
-	int cpu = p->sched_class->select_task_rq(p, sd_flags, wake_flags);
+    int cpu = p->sched_class->select_task_rq(p, sd_flags, wake_flags);
 
-	/*
-	 * In order not to call set_task_cpu() on a blocking task we need
-	 * to rely on ttwu() to place the task on a valid ->cpus_allowed
-	 * cpu.
-	 *
-	 * Since this is common to all placement strategies, this lives here.
-	 *
-	 * [ this allows ->select_task() to simply return task_cpu(p) and
-	 *   not worry about this generic constraint ]
-	 */
-	if (unlikely(!cpumask_test_cpu(cpu, tsk_cpus_allowed(p)) ||
-		     !cpu_online(cpu)))
-		cpu = select_fallback_rq(task_cpu(p), p);
+    /*
+     * In order not to call set_task_cpu() on a blocking task we need
+     * to rely on ttwu() to place the task on a valid ->cpus_allowed
+     * cpu.
+     *
+     * Since this is common to all placement strategies, this lives here.
+     *
+     * [ this allows ->select_task() to simply return task_cpu(p) and
+     *   not worry about this generic constraint ]
+     */
+    if (unlikely(!cpumask_test_cpu(cpu, tsk_cpus_allowed(p)) ||
+             !cpu_online(cpu)))
+        cpu = select_fallback_rq(task_cpu(p), p);
 
-	return cpu;
+    return cpu;
 }
 
 static void update_avg(u64 *avg, u64 sample)
 {
-	s64 diff = sample - *avg;
-	*avg += diff >> 3;
+    s64 diff = sample - *avg;
+    *avg += diff >> 3;
 }
 #endif
 
@@ -1357,50 +1360,50 @@ static void
 ttwu_stat(struct task_struct *p, int cpu, int wake_flags)
 {
 #ifdef CONFIG_SCHEDSTATS
-	struct rq *rq = this_rq();
+    struct rq *rq = this_rq();
 
 #ifdef CONFIG_SMP
-	int this_cpu = smp_processor_id();
+    int this_cpu = smp_processor_id();
 
-	if (cpu == this_cpu) {
-		schedstat_inc(rq, ttwu_local);
-		schedstat_inc(p, se.statistics.nr_wakeups_local);
-	} else {
-		struct sched_domain *sd;
-
-		schedstat_inc(p, se.statistics.nr_wakeups_remote);
-		rcu_read_lock();
-		for_each_domain(this_cpu, sd) {
-			if (cpumask_test_cpu(cpu, sched_domain_span(sd))) {
-				schedstat_inc(sd, ttwu_wake_remote);
-				break;
-			}
-		}
-		rcu_read_unlock();
-	}
+    if (cpu == this_cpu) {
+        schedstat_inc(rq, ttwu_local);
+        schedstat_inc(p, se.statistics.nr_wakeups_local);
+    } else {
+        struct sched_domain *sd;
+
+        schedstat_inc(p, se.statistics.nr_wakeups_remote);
+        rcu_read_lock();
+        for_each_domain(this_cpu, sd) {
+            if (cpumask_test_cpu(cpu, sched_domain_span(sd))) {
+                schedstat_inc(sd, ttwu_wake_remote);
+                break;
+            }
+        }
+        rcu_read_unlock();
+    }
 
-	if (wake_flags & WF_MIGRATED)
-		schedstat_inc(p, se.statistics.nr_wakeups_migrate);
+    if (wake_flags & WF_MIGRATED)
+        schedstat_inc(p, se.statistics.nr_wakeups_migrate);
 
 #endif /* CONFIG_SMP */
 
-	schedstat_inc(rq, ttwu_count);
-	schedstat_inc(p, se.statistics.nr_wakeups);
+    schedstat_inc(rq, ttwu_count);
+    schedstat_inc(p, se.statistics.nr_wakeups);
 
-	if (wake_flags & WF_SYNC)
-		schedstat_inc(p, se.statistics.nr_wakeups_sync);
+    if (wake_flags & WF_SYNC)
+        schedstat_inc(p, se.statistics.nr_wakeups_sync);
 
 #endif /* CONFIG_SCHEDSTATS */
 }
 
 static void ttwu_activate(struct rq *rq, struct task_struct *p, int en_flags)
 {
-	activate_task(rq, p, en_flags);
-	p->on_rq = 1;
+    activate_task(rq, p, en_flags);
+    p->on_rq = 1;
 
-	/* if a worker is waking up, notify workqueue */
-	if (p->flags & PF_WQ_WORKER)
-		wq_worker_waking_up(p, cpu_of(rq));
+    /* if a worker is waking up, notify workqueue */
+    if (p->flags & PF_WQ_WORKER)
+        wq_worker_waking_up(p, cpu_of(rq));
 }
 
 /*
@@ -1409,24 +1412,24 @@ static void ttwu_activate(struct rq *rq,
 static void
 ttwu_do_wakeup(struct rq *rq, struct task_struct *p, int wake_flags)
 {
-	trace_sched_wakeup(p, true);
-	check_preempt_curr(rq, p, wake_flags);
+    trace_sched_wakeup(p, true);
+    check_preempt_curr(rq, p, wake_flags);
 
-	p->state = TASK_RUNNING;
+    p->state = TASK_RUNNING;
 #ifdef CONFIG_SMP
-	if (p->sched_class->task_woken)
-		p->sched_class->task_woken(rq, p);
+    if (p->sched_class->task_woken)
+        p->sched_class->task_woken(rq, p);
 
-	if (rq->idle_stamp) {
-		u64 delta = rq->clock - rq->idle_stamp;
-		u64 max = 2*sysctl_sched_migration_cost;
-
-		if (delta > max)
-			rq->avg_idle = max;
-		else
-			update_avg(&rq->avg_idle, delta);
-		rq->idle_stamp = 0;
-	}
+    if (rq->idle_stamp) {
+        u64 delta = rq->clock - rq->idle_stamp;
+        u64 max = 2*sysctl_sched_migration_cost;
+
+        if (delta > max)
+            rq->avg_idle = max;
+        else
+            update_avg(&rq->avg_idle, delta);
+        rq->idle_stamp = 0;
+    }
 #endif
 }
 
@@ -1434,12 +1437,12 @@ static void
 ttwu_do_activate(struct rq *rq, struct task_struct *p, int wake_flags)
 {
 #ifdef CONFIG_SMP
-	if (p->sched_contributes_to_load)
-		rq->nr_uninterruptible--;
+    if (p->sched_contributes_to_load)
+        rq->nr_uninterruptible--;
 #endif
 
-	ttwu_activate(rq, p, ENQUEUE_WAKEUP | ENQUEUE_WAKING);
-	ttwu_do_wakeup(rq, p, wake_flags);
+    ttwu_activate(rq, p, ENQUEUE_WAKEUP | ENQUEUE_WAKING);
+    ttwu_do_wakeup(rq, p, wake_flags);
 }
 
 /*
@@ -1450,114 +1453,114 @@ ttwu_do_activate(struct rq *rq, struct t
  */
 static int ttwu_remote(struct task_struct *p, int wake_flags)
 {
-	struct rq *rq;
-	int ret = 0;
+    struct rq *rq;
+    int ret = 0;
 
-	rq = __task_rq_lock(p);
-	if (p->on_rq) {
-		ttwu_do_wakeup(rq, p, wake_flags);
-		ret = 1;
-	}
-	__task_rq_unlock(rq);
+    rq = __task_rq_lock(p);
+    if (p->on_rq) {
+        ttwu_do_wakeup(rq, p, wake_flags);
+        ret = 1;
+    }
+    __task_rq_unlock(rq);
 
-	return ret;
+    return ret;
 }
 
 #ifdef CONFIG_SMP
 static void sched_ttwu_pending(void)
 {
-	struct rq *rq = this_rq();
-	struct llist_node *llist = llist_del_all(&rq->wake_list);
-	struct task_struct *p;
-
-	raw_spin_lock(&rq->lock);
-
-	while (llist) {
-		p = llist_entry(llist, struct task_struct, wake_entry);
-		llist = llist_next(llist);
-		ttwu_do_activate(rq, p, 0);
-	}
+    struct rq *rq = this_rq();
+    struct llist_node *llist = llist_del_all(&rq->wake_list);
+    struct task_struct *p;
+
+    raw_spin_lock(&rq->lock);
+
+    while (llist) {
+        p = llist_entry(llist, struct task_struct, wake_entry);
+        llist = llist_next(llist);
+        ttwu_do_activate(rq, p, 0);
+    }
 
-	raw_spin_unlock(&rq->lock);
+    raw_spin_unlock(&rq->lock);
 }
 
 void scheduler_ipi(void)
 {
-	if (llist_empty(&this_rq()->wake_list) && !got_nohz_idle_kick())
-		return;
+    if (llist_empty(&this_rq()->wake_list) && !got_nohz_idle_kick())
+        return;
 
-	/*
-	 * Not all reschedule IPI handlers call irq_enter/irq_exit, since
-	 * traditionally all their work was done from the interrupt return
-	 * path. Now that we actually do some work, we need to make sure
-	 * we do call them.
-	 *
-	 * Some archs already do call them, luckily irq_enter/exit nest
-	 * properly.
-	 *
-	 * Arguably we should visit all archs and update all handlers,
-	 * however a fair share of IPIs are still resched only so this would
-	 * somewhat pessimize the simple resched case.
-	 */
-	irq_enter();
-	sched_ttwu_pending();
-
-	/*
-	 * Check if someone kicked us for doing the nohz idle load balance.
-	 */
-	if (unlikely(got_nohz_idle_kick() && !need_resched())) {
-		this_rq()->idle_balance = 1;
-		raise_softirq_irqoff(SCHED_SOFTIRQ);
-	}
-	irq_exit();
+    /*
+     * Not all reschedule IPI handlers call irq_enter/irq_exit, since
+     * traditionally all their work was done from the interrupt return
+     * path. Now that we actually do some work, we need to make sure
+     * we do call them.
+     *
+     * Some archs already do call them, luckily irq_enter/exit nest
+     * properly.
+     *
+     * Arguably we should visit all archs and update all handlers,
+     * however a fair share of IPIs are still resched only so this would
+     * somewhat pessimize the simple resched case.
+     */
+    irq_enter();
+    sched_ttwu_pending();
+
+    /*
+     * Check if someone kicked us for doing the nohz idle load balance.
+     */
+    if (unlikely(got_nohz_idle_kick() && !need_resched())) {
+        this_rq()->idle_balance = 1;
+        raise_softirq_irqoff(SCHED_SOFTIRQ);
+    }
+    irq_exit();
 }
 
 static void ttwu_queue_remote(struct task_struct *p, int cpu)
 {
-	if (llist_add(&p->wake_entry, &cpu_rq(cpu)->wake_list))
-		smp_send_reschedule(cpu);
+    if (llist_add(&p->wake_entry, &cpu_rq(cpu)->wake_list))
+        smp_send_reschedule(cpu);
 }
 
 #ifdef __ARCH_WANT_INTERRUPTS_ON_CTXSW
 static int ttwu_activate_remote(struct task_struct *p, int wake_flags)
 {
-	struct rq *rq;
-	int ret = 0;
+    struct rq *rq;
+    int ret = 0;
 
-	rq = __task_rq_lock(p);
-	if (p->on_cpu) {
-		ttwu_activate(rq, p, ENQUEUE_WAKEUP);
-		ttwu_do_wakeup(rq, p, wake_flags);
-		ret = 1;
-	}
-	__task_rq_unlock(rq);
+    rq = __task_rq_lock(p);
+    if (p->on_cpu) {
+        ttwu_activate(rq, p, ENQUEUE_WAKEUP);
+        ttwu_do_wakeup(rq, p, wake_flags);
+        ret = 1;
+    }
+    __task_rq_unlock(rq);
 
-	return ret;
+    return ret;
 
 }
 #endif /* __ARCH_WANT_INTERRUPTS_ON_CTXSW */
 
 bool cpus_share_cache(int this_cpu, int that_cpu)
 {
-	return per_cpu(sd_llc_id, this_cpu) == per_cpu(sd_llc_id, that_cpu);
+    return per_cpu(sd_llc_id, this_cpu) == per_cpu(sd_llc_id, that_cpu);
 }
 #endif /* CONFIG_SMP */
 
 static void ttwu_queue(struct task_struct *p, int cpu)
 {
-	struct rq *rq = cpu_rq(cpu);
+    struct rq *rq = cpu_rq(cpu);
 
 #if defined(CONFIG_SMP)
-	if (sched_feat(TTWU_QUEUE) && !cpus_share_cache(smp_processor_id(), cpu)) {
-		sched_clock_cpu(cpu); /* sync clocks x-cpu */
-		ttwu_queue_remote(p, cpu);
-		return;
-	}
+    if (sched_feat(TTWU_QUEUE) && !cpus_share_cache(smp_processor_id(), cpu)) {
+        sched_clock_cpu(cpu); /* sync clocks x-cpu */
+        ttwu_queue_remote(p, cpu);
+        return;
+    }
 #endif
 
-	raw_spin_lock(&rq->lock);
-	ttwu_do_activate(rq, p, 0);
-	raw_spin_unlock(&rq->lock);
+    raw_spin_lock(&rq->lock);
+    ttwu_do_activate(rq, p, 0);
+    raw_spin_unlock(&rq->lock);
 }
 
 /**
@@ -1578,65 +1581,65 @@ static void ttwu_queue(struct task_struc
 static int
 try_to_wake_up(struct task_struct *p, unsigned int state, int wake_flags)
 {
-	unsigned long flags;
-	int cpu, success = 0;
+    unsigned long flags;
+    int cpu, success = 0;
 
-	smp_wmb();
-	raw_spin_lock_irqsave(&p->pi_lock, flags);
-	if (!(p->state & state))
-		goto out;
+    smp_wmb();
+    raw_spin_lock_irqsave(&p->pi_lock, flags);
+    if (!(p->state & state))
+        goto out;
 
-	success = 1; /* we're going to change ->state */
-	cpu = task_cpu(p);
+    success = 1; /* we're going to change ->state */
+    cpu = task_cpu(p);
 
-	if (p->on_rq && ttwu_remote(p, wake_flags))
-		goto stat;
+    if (p->on_rq && ttwu_remote(p, wake_flags))
+        goto stat;
 
 #ifdef CONFIG_SMP
-	/*
-	 * If the owning (remote) cpu is still in the middle of schedule() with
-	 * this task as prev, wait until its done referencing the task.
-	 */
-	while (p->on_cpu) {
+    /*
+     * If the owning (remote) cpu is still in the middle of schedule() with
+     * this task as prev, wait until its done referencing the task.
+     */
+    while (p->on_cpu) {
 #ifdef __ARCH_WANT_INTERRUPTS_ON_CTXSW
-		/*
-		 * In case the architecture enables interrupts in
-		 * context_switch(), we cannot busy wait, since that
-		 * would lead to deadlocks when an interrupt hits and
-		 * tries to wake up @prev. So bail and do a complete
-		 * remote wakeup.
-		 */
-		if (ttwu_activate_remote(p, wake_flags))
-			goto stat;
+        /*
+         * In case the architecture enables interrupts in
+         * context_switch(), we cannot busy wait, since that
+         * would lead to deadlocks when an interrupt hits and
+         * tries to wake up @prev. So bail and do a complete
+         * remote wakeup.
+         */
+        if (ttwu_activate_remote(p, wake_flags))
+            goto stat;
 #else
-		cpu_relax();
+        cpu_relax();
 #endif
-	}
-	/*
-	 * Pairs with the smp_wmb() in finish_lock_switch().
-	 */
-	smp_rmb();
-
-	p->sched_contributes_to_load = !!task_contributes_to_load(p);
-	p->state = TASK_WAKING;
-
-	if (p->sched_class->task_waking)
-		p->sched_class->task_waking(p);
-
-	cpu = select_task_rq(p, SD_BALANCE_WAKE, wake_flags);
-	if (task_cpu(p) != cpu) {
-		wake_flags |= WF_MIGRATED;
-		set_task_cpu(p, cpu);
-	}
+    }
+    /*
+     * Pairs with the smp_wmb() in finish_lock_switch().
+     */
+    smp_rmb();
+
+    p->sched_contributes_to_load = !!task_contributes_to_load(p);
+    p->state = TASK_WAKING;
+
+    if (p->sched_class->task_waking)
+        p->sched_class->task_waking(p);
+
+    cpu = select_task_rq(p, SD_BALANCE_WAKE, wake_flags);
+    if (task_cpu(p) != cpu) {
+        wake_flags |= WF_MIGRATED;
+        set_task_cpu(p, cpu);
+    }
 #endif /* CONFIG_SMP */
 
-	ttwu_queue(p, cpu);
+    ttwu_queue(p, cpu);
 stat:
-	ttwu_stat(p, cpu, wake_flags);
+    ttwu_stat(p, cpu, wake_flags);
 out:
-	raw_spin_unlock_irqrestore(&p->pi_lock, flags);
+    raw_spin_unlock_irqrestore(&p->pi_lock, flags);
 
-	return success;
+    return success;
 }
 
 /**
@@ -1649,30 +1652,30 @@ out:
  */
 static void try_to_wake_up_local(struct task_struct *p)
 {
-	struct rq *rq = task_rq(p);
+    struct rq *rq = task_rq(p);
 
-	if (WARN_ON_ONCE(rq != this_rq()) ||
-	    WARN_ON_ONCE(p == current))
-		return;
+    if (WARN_ON_ONCE(rq != this_rq()) ||
+        WARN_ON_ONCE(p == current))
+        return;
 
-	lockdep_assert_held(&rq->lock);
+    lockdep_assert_held(&rq->lock);
 
-	if (!raw_spin_trylock(&p->pi_lock)) {
-		raw_spin_unlock(&rq->lock);
-		raw_spin_lock(&p->pi_lock);
-		raw_spin_lock(&rq->lock);
-	}
+    if (!raw_spin_trylock(&p->pi_lock)) {
+        raw_spin_unlock(&rq->lock);
+        raw_spin_lock(&p->pi_lock);
+        raw_spin_lock(&rq->lock);
+    }
 
-	if (!(p->state & TASK_NORMAL))
-		goto out;
+    if (!(p->state & TASK_NORMAL))
+        goto out;
 
-	if (!p->on_rq)
-		ttwu_activate(rq, p, ENQUEUE_WAKEUP);
+    if (!p->on_rq)
+        ttwu_activate(rq, p, ENQUEUE_WAKEUP);
 
-	ttwu_do_wakeup(rq, p, 0);
-	ttwu_stat(p, smp_processor_id(), 0);
+    ttwu_do_wakeup(rq, p, 0);
+    ttwu_stat(p, smp_processor_id(), 0);
 out:
-	raw_spin_unlock(&p->pi_lock);
+    raw_spin_unlock(&p->pi_lock);
 }
 
 /**
@@ -1688,14 +1691,14 @@ out:
  */
 int wake_up_process(struct task_struct *p)
 {
-	WARN_ON(task_is_stopped_or_traced(p));
-	return try_to_wake_up(p, TASK_NORMAL, 0);
+    WARN_ON(task_is_stopped_or_traced(p));
+    return try_to_wake_up(p, TASK_NORMAL, 0);
 }
 EXPORT_SYMBOL(wake_up_process);
 
 int wake_up_state(struct task_struct *p, unsigned int state)
 {
-	return try_to_wake_up(p, state, 0);
+    return try_to_wake_up(p, state, 0);
 }
 
 /*
@@ -1706,24 +1709,24 @@ int wake_up_state(struct task_struct *p,
  */
 static void __sched_fork(struct task_struct *p)
 {
-	p->on_rq			= 0;
+    p->on_rq            = 0;
 
-	p->se.on_rq			= 0;
-	p->se.exec_start		= 0;
-	p->se.sum_exec_runtime		= 0;
-	p->se.prev_sum_exec_runtime	= 0;
-	p->se.nr_migrations		= 0;
-	p->se.vruntime			= 0;
-	INIT_LIST_HEAD(&p->se.group_node);
+    p->se.on_rq            = 0;
+    p->se.exec_start        = 0;
+    p->se.sum_exec_runtime        = 0;
+    p->se.prev_sum_exec_runtime    = 0;
+    p->se.nr_migrations        = 0;
+    p->se.vruntime            = 0;
+    INIT_LIST_HEAD(&p->se.group_node);
 
 #ifdef CONFIG_SCHEDSTATS
-	memset(&p->se.statistics, 0, sizeof(p->se.statistics));
+    memset(&p->se.statistics, 0, sizeof(p->se.statistics));
 #endif
 
-	INIT_LIST_HEAD(&p->rt.run_list);
+    INIT_LIST_HEAD(&p->rt.run_list);
 
 #ifdef CONFIG_PREEMPT_NOTIFIERS
-	INIT_HLIST_HEAD(&p->preempt_notifiers);
+    INIT_HLIST_HEAD(&p->preempt_notifiers);
 #endif
 }
 
@@ -1732,76 +1735,76 @@ static void __sched_fork(struct task_str
  */
 void sched_fork(struct task_struct *p)
 {
-	unsigned long flags;
-	int cpu = get_cpu();
+    unsigned long flags;
+    int cpu = get_cpu();
 
-	__sched_fork(p);
-	/*
-	 * We mark the process as running here. This guarantees that
-	 * nobody will actually run it, and a signal or other external
-	 * event cannot wake it up and insert it on the runqueue either.
-	 */
-	p->state = TASK_RUNNING;
-
-	/*
-	 * Make sure we do not leak PI boosting priority to the child.
-	 */
-	p->prio = current->normal_prio;
-
-	/*
-	 * Revert to default priority/policy on fork if requested.
-	 */
-	if (unlikely(p->sched_reset_on_fork)) {
-		if (task_has_rt_policy(p)) {
-			p->policy = SCHED_NORMAL;
-			p->static_prio = NICE_TO_PRIO(0);
-			p->rt_priority = 0;
-		} else if (PRIO_TO_NICE(p->static_prio) < 0)
-			p->static_prio = NICE_TO_PRIO(0);
-
-		p->prio = p->normal_prio = __normal_prio(p);
-		set_load_weight(p);
-
-		/*
-		 * We don't need the reset flag anymore after the fork. It has
-		 * fulfilled its duty:
-		 */
-		p->sched_reset_on_fork = 0;
-	}
-
-	if (!rt_prio(p->prio))
-		p->sched_class = &fair_sched_class;
-
-	if (p->sched_class->task_fork)
-		p->sched_class->task_fork(p);
-
-	/*
-	 * The child is not yet in the pid-hash so no cgroup attach races,
-	 * and the cgroup is pinned to this child due to cgroup_fork()
-	 * is ran before sched_fork().
-	 *
-	 * Silence PROVE_RCU.
-	 */
-	raw_spin_lock_irqsave(&p->pi_lock, flags);
-	set_task_cpu(p, cpu);
-	raw_spin_unlock_irqrestore(&p->pi_lock, flags);
+    __sched_fork(p);
+    /*
+     * We mark the process as running here. This guarantees that
+     * nobody will actually run it, and a signal or other external
+     * event cannot wake it up and insert it on the runqueue either.
+     */
+    p->state = TASK_RUNNING;
+
+    /*
+     * Make sure we do not leak PI boosting priority to the child.
+     */
+    p->prio = current->normal_prio;
+
+    /*
+     * Revert to default priority/policy on fork if requested.
+     */
+    if (unlikely(p->sched_reset_on_fork)) {
+        if (task_has_rt_policy(p)) {
+            p->policy = SCHED_NORMAL;
+            p->static_prio = NICE_TO_PRIO(0);
+            p->rt_priority = 0;
+        } else if (PRIO_TO_NICE(p->static_prio) < 0)
+            p->static_prio = NICE_TO_PRIO(0);
+
+        p->prio = p->normal_prio = __normal_prio(p);
+        set_load_weight(p);
+
+        /*
+         * We don't need the reset flag anymore after the fork. It has
+         * fulfilled its duty:
+         */
+        p->sched_reset_on_fork = 0;
+    }
+
+    if (!rt_prio(p->prio))
+        p->sched_class = &fair_sched_class;
+
+    if (p->sched_class->task_fork)
+        p->sched_class->task_fork(p);
+
+    /*
+     * The child is not yet in the pid-hash so no cgroup attach races,
+     * and the cgroup is pinned to this child due to cgroup_fork()
+     * is ran before sched_fork().
+     *
+     * Silence PROVE_RCU.
+     */
+    raw_spin_lock_irqsave(&p->pi_lock, flags);
+    set_task_cpu(p, cpu);
+    raw_spin_unlock_irqrestore(&p->pi_lock, flags);
 
 #if defined(CONFIG_SCHEDSTATS) || defined(CONFIG_TASK_DELAY_ACCT)
-	if (likely(sched_info_on()))
-		memset(&p->sched_info, 0, sizeof(p->sched_info));
+    if (likely(sched_info_on()))
+        memset(&p->sched_info, 0, sizeof(p->sched_info));
 #endif
 #if defined(CONFIG_SMP)
-	p->on_cpu = 0;
+    p->on_cpu = 0;
 #endif
 #ifdef CONFIG_PREEMPT_COUNT
-	/* Want to start with kernel preemption disabled. */
-	task_thread_info(p)->preempt_count = 1;
+    /* Want to start with kernel preemption disabled. */
+    task_thread_info(p)->preempt_count = 1;
 #endif
 #ifdef CONFIG_SMP
-	plist_node_init(&p->pushable_tasks, MAX_PRIO);
+    plist_node_init(&p->pushable_tasks, MAX_PRIO);
 #endif
 
-	put_cpu();
+    put_cpu();
 }
 
 /*
@@ -1813,29 +1816,29 @@ void sched_fork(struct task_struct *p)
  */
 void wake_up_new_task(struct task_struct *p)
 {
-	unsigned long flags;
-	struct rq *rq;
+    unsigned long flags;
+    struct rq *rq;
 
-	raw_spin_lock_irqsave(&p->pi_lock, flags);
+    raw_spin_lock_irqsave(&p->pi_lock, flags);
 #ifdef CONFIG_SMP
-	/*
-	 * Fork balancing, do it here and not earlier because:
-	 *  - cpus_allowed can change in the fork path
-	 *  - any previously selected cpu might disappear through hotplug
-	 */
-	set_task_cpu(p, select_task_rq(p, SD_BALANCE_FORK, 0));
+    /*
+     * Fork balancing, do it here and not earlier because:
+     *  - cpus_allowed can change in the fork path
+     *  - any previously selected cpu might disappear through hotplug
+     */
+    set_task_cpu(p, select_task_rq(p, SD_BALANCE_FORK, 0));
 #endif
 
-	rq = __task_rq_lock(p);
-	activate_task(rq, p, 0);
-	p->on_rq = 1;
-	trace_sched_wakeup_new(p, true);
-	check_preempt_curr(rq, p, WF_FORK);
+    rq = __task_rq_lock(p);
+    activate_task(rq, p, 0);
+    p->on_rq = 1;
+    trace_sched_wakeup_new(p, true);
+    check_preempt_curr(rq, p, WF_FORK);
 #ifdef CONFIG_SMP
-	if (p->sched_class->task_woken)
-		p->sched_class->task_woken(rq, p);
+    if (p->sched_class->task_woken)
+        p->sched_class->task_woken(rq, p);
 #endif
-	task_rq_unlock(rq, p, &flags);
+    task_rq_unlock(rq, p, &flags);
 }
 
 #ifdef CONFIG_PREEMPT_NOTIFIERS
@@ -1846,7 +1849,7 @@ void wake_up_new_task(struct task_struct
  */
 void preempt_notifier_register(struct preempt_notifier *notifier)
 {
-	hlist_add_head(&notifier->link, &current->preempt_notifiers);
+    hlist_add_head(&notifier->link, &current->preempt_notifiers);
 }
 EXPORT_SYMBOL_GPL(preempt_notifier_register);
 
@@ -1858,28 +1861,28 @@ EXPORT_SYMBOL_GPL(preempt_notifier_regis
  */
 void preempt_notifier_unregister(struct preempt_notifier *notifier)
 {
-	hlist_del(&notifier->link);
+    hlist_del(&notifier->link);
 }
 EXPORT_SYMBOL_GPL(preempt_notifier_unregister);
 
 static void fire_sched_in_preempt_notifiers(struct task_struct *curr)
 {
-	struct preempt_notifier *notifier;
-	struct hlist_node *node;
+    struct preempt_notifier *notifier;
+    struct hlist_node *node;
 
-	hlist_for_each_entry(notifier, node, &curr->preempt_notifiers, link)
-		notifier->ops->sched_in(notifier, raw_smp_processor_id());
+    hlist_for_each_entry(notifier, node, &curr->preempt_notifiers, link)
+        notifier->ops->sched_in(notifier, raw_smp_processor_id());
 }
 
 static void
 fire_sched_out_preempt_notifiers(struct task_struct *curr,
-				 struct task_struct *next)
+                 struct task_struct *next)
 {
-	struct preempt_notifier *notifier;
-	struct hlist_node *node;
+    struct preempt_notifier *notifier;
+    struct hlist_node *node;
 
-	hlist_for_each_entry(notifier, node, &curr->preempt_notifiers, link)
-		notifier->ops->sched_out(notifier, next);
+    hlist_for_each_entry(notifier, node, &curr->preempt_notifiers, link)
+        notifier->ops->sched_out(notifier, next);
 }
 
 #else /* !CONFIG_PREEMPT_NOTIFIERS */
@@ -1890,7 +1893,7 @@ static void fire_sched_in_preempt_notifi
 
 static void
 fire_sched_out_preempt_notifiers(struct task_struct *curr,
-				 struct task_struct *next)
+                 struct task_struct *next)
 {
 }
 
@@ -1911,14 +1914,14 @@ fire_sched_out_preempt_notifiers(struct 
  */
 static inline void
 prepare_task_switch(struct rq *rq, struct task_struct *prev,
-		    struct task_struct *next)
+            struct task_struct *next)
 {
-	sched_info_switch(prev, next);
-	perf_event_task_sched_out(prev, next);
-	fire_sched_out_preempt_notifiers(prev, next);
-	prepare_lock_switch(rq, next);
-	prepare_arch_switch(next);
-	trace_sched_switch(prev, next);
+    sched_info_switch(prev, next);
+    perf_event_task_sched_out(prev, next);
+    fire_sched_out_preempt_notifiers(prev, next);
+    prepare_lock_switch(rq, next);
+    prepare_arch_switch(next);
+    trace_sched_switch(prev, next);
 }
 
 /**
@@ -1937,47 +1940,47 @@ prepare_task_switch(struct rq *rq, struc
  * details.)
  */
 static void finish_task_switch(struct rq *rq, struct task_struct *prev)
-	__releases(rq->lock)
+    __releases(rq->lock)
 {
-	struct mm_struct *mm = rq->prev_mm;
-	long prev_state;
+    struct mm_struct *mm = rq->prev_mm;
+    long prev_state;
 
-	rq->prev_mm = NULL;
+    rq->prev_mm = NULL;
 
-	/*
-	 * A task struct has one reference for the use as "current".
-	 * If a task dies, then it sets TASK_DEAD in tsk->state and calls
-	 * schedule one last time. The schedule call will never return, and
-	 * the scheduled task must drop that reference.
-	 * The test for TASK_DEAD must occur while the runqueue locks are
-	 * still held, otherwise prev could be scheduled on another cpu, die
-	 * there before we look at prev->state, and then the reference would
-	 * be dropped twice.
-	 *		Manfred Spraul <manfred@colorfullife.com>
-	 */
-	prev_state = prev->state;
-	finish_arch_switch(prev);
+    /*
+     * A task struct has one reference for the use as "current".
+     * If a task dies, then it sets TASK_DEAD in tsk->state and calls
+     * schedule one last time. The schedule call will never return, and
+     * the scheduled task must drop that reference.
+     * The test for TASK_DEAD must occur while the runqueue locks are
+     * still held, otherwise prev could be scheduled on another cpu, die
+     * there before we look at prev->state, and then the reference would
+     * be dropped twice.
+     *        Manfred Spraul <manfred@colorfullife.com>
+     */
+    prev_state = prev->state;
+    finish_arch_switch(prev);
 #ifdef __ARCH_WANT_INTERRUPTS_ON_CTXSW
-	local_irq_disable();
+    local_irq_disable();
 #endif /* __ARCH_WANT_INTERRUPTS_ON_CTXSW */
-	perf_event_task_sched_in(prev, current);
+    perf_event_task_sched_in(prev, current);
 #ifdef __ARCH_WANT_INTERRUPTS_ON_CTXSW
-	local_irq_enable();
+    local_irq_enable();
 #endif /* __ARCH_WANT_INTERRUPTS_ON_CTXSW */
-	finish_lock_switch(rq, prev);
-	finish_arch_post_lock_switch();
+    finish_lock_switch(rq, prev);
+    finish_arch_post_lock_switch();
 
-	fire_sched_in_preempt_notifiers(current);
-	if (mm)
-		mmdrop(mm);
-	if (unlikely(prev_state == TASK_DEAD)) {
-		/*
-		 * Remove function-return probe instances associated with this
-		 * task and put them back on the free list.
-		 */
-		kprobe_flush_task(prev);
-		put_task_struct(prev);
-	}
+    fire_sched_in_preempt_notifiers(current);
+    if (mm)
+        mmdrop(mm);
+    if (unlikely(prev_state == TASK_DEAD)) {
+        /*
+         * Remove function-return probe instances associated with this
+         * task and put them back on the free list.
+         */
+        kprobe_flush_task(prev);
+        put_task_struct(prev);
+    }
 }
 
 #ifdef CONFIG_SMP
@@ -1985,23 +1988,23 @@ static void finish_task_switch(struct rq
 /* assumes rq->lock is held */
 static inline void pre_schedule(struct rq *rq, struct task_struct *prev)
 {
-	if (prev->sched_class->pre_schedule)
-		prev->sched_class->pre_schedule(rq, prev);
+    if (prev->sched_class->pre_schedule)
+        prev->sched_class->pre_schedule(rq, prev);
 }
 
 /* rq->lock is NOT held, but preemption is disabled */
 static inline void post_schedule(struct rq *rq)
 {
-	if (rq->post_schedule) {
-		unsigned long flags;
+    if (rq->post_schedule) {
+        unsigned long flags;
 
-		raw_spin_lock_irqsave(&rq->lock, flags);
-		if (rq->curr->sched_class->post_schedule)
-			rq->curr->sched_class->post_schedule(rq);
-		raw_spin_unlock_irqrestore(&rq->lock, flags);
+        raw_spin_lock_irqsave(&rq->lock, flags);
+        if (rq->curr->sched_class->post_schedule)
+            rq->curr->sched_class->post_schedule(rq);
+        raw_spin_unlock_irqrestore(&rq->lock, flags);
 
-		rq->post_schedule = 0;
-	}
+        rq->post_schedule = 0;
+    }
 }
 
 #else
@@ -2021,24 +2024,24 @@ static inline void post_schedule(struct 
  * @prev: the thread we just switched away from.
  */
 asmlinkage void schedule_tail(struct task_struct *prev)
-	__releases(rq->lock)
+    __releases(rq->lock)
 {
-	struct rq *rq = this_rq();
+    struct rq *rq = this_rq();
 
-	finish_task_switch(rq, prev);
+    finish_task_switch(rq, prev);
 
-	/*
-	 * FIXME: do we need to worry about rq being invalidated by the
-	 * task_switch?
-	 */
-	post_schedule(rq);
+    /*
+     * FIXME: do we need to worry about rq being invalidated by the
+     * task_switch?
+     */
+    post_schedule(rq);
 
 #ifdef __ARCH_WANT_UNLOCKED_CTXSW
-	/* In this case, finish_task_switch does not reenable preemption */
-	preempt_enable();
+    /* In this case, finish_task_switch does not reenable preemption */
+    preempt_enable();
 #endif
-	if (current->set_child_tid)
-		put_user(task_pid_vnr(current), current->set_child_tid);
+    if (current->set_child_tid)
+        put_user(task_pid_vnr(current), current->set_child_tid);
 }
 
 /*
@@ -2047,52 +2050,53 @@ asmlinkage void schedule_tail(struct tas
  */
 static inline void
 context_switch(struct rq *rq, struct task_struct *prev,
-	       struct task_struct *next)
+           struct task_struct *next)
 {
-	struct mm_struct *mm, *oldmm;
+    struct mm_struct *mm, *oldmm;
+    prepare_task_switch(rq, prev, next);
 
-	prepare_task_switch(rq, prev, next);
-
-	mm = next->mm;
-	oldmm = prev->active_mm;
-	/*
-	 * For paravirt, this is coupled with an exit in switch_to to
-	 * combine the page table reload and the switch backend into
-	 * one hypercall.
-	 */
-	arch_start_context_switch(prev);
-
-	if (!mm) {
-		next->active_mm = oldmm;
-		atomic_inc(&oldmm->mm_count);
-		enter_lazy_tlb(oldmm, next);
-	} else
-		switch_mm(oldmm, mm, next);
-
-	if (!prev->mm) {
-		prev->active_mm = NULL;
-		rq->prev_mm = oldmm;
-	}
-	/*
-	 * Since the runqueue lock will be released by the next
-	 * task (which is an invalid locking op but in the case
-	 * of the scheduler it's an obvious special-case), so we
-	 * do an early lockdep release here:
-	 */
+    mm = next->mm;
+    oldmm = prev->active_mm;
+    /*
+     * For paravirt, this is coupled with an exit in switch_to to
+     * combine the page table reload and the switch backend into
+     * one hypercall.
+     */
+    arch_start_context_switch(prev);
+
+    if (!mm) {
+        next->active_mm = oldmm;
+        atomic_inc(&oldmm->mm_count);
+        enter_lazy_tlb(oldmm, next);
+    }
+    else {
+        switch_mm(oldmm, mm, next);
+    }
+
+    if (!prev->mm) {
+        prev->active_mm = NULL;
+        rq->prev_mm = oldmm;
+    }
+    /*
+     * Since the runqueue lock will be released by the next
+     * task (which is an invalid locking op but in the case
+     * of the scheduler it's an obvious special-case), so we
+     * do an early lockdep release here:
+     */
 #ifndef __ARCH_WANT_UNLOCKED_CTXSW
-	spin_release(&rq->lock.dep_map, 1, _THIS_IP_);
+    spin_release(&rq->lock.dep_map, 1, _THIS_IP_);
 #endif
 
-	/* Here we just switch the register state and the stack. */
-	switch_to(prev, next, prev);
+    /* Here we just switch the register state and the stack. */
+    switch_to(prev, next, prev);
 
-	barrier();
-	/*
-	 * this_rq must be evaluated again because prev may have moved
-	 * CPUs since it called schedule(), thus the 'rq' on its stack
-	 * frame will be invalid.
-	 */
-	finish_task_switch(this_rq(), prev);
+    barrier();
+    /*
+     * this_rq must be evaluated again because prev may have moved
+     * CPUs since it called schedule(), thus the 'rq' on its stack
+     * frame will be invalid.
+     */
+    finish_task_switch(this_rq(), prev);
 }
 
 /*
@@ -2104,62 +2108,62 @@ context_switch(struct rq *rq, struct tas
  */
 unsigned long nr_running(void)
 {
-	unsigned long i, sum = 0;
+    unsigned long i, sum = 0;
 
-	for_each_online_cpu(i)
-		sum += cpu_rq(i)->nr_running;
+    for_each_online_cpu(i)
+        sum += cpu_rq(i)->nr_running;
 
-	return sum;
+    return sum;
 }
 
 unsigned long nr_uninterruptible(void)
 {
-	unsigned long i, sum = 0;
+    unsigned long i, sum = 0;
 
-	for_each_possible_cpu(i)
-		sum += cpu_rq(i)->nr_uninterruptible;
+    for_each_possible_cpu(i)
+        sum += cpu_rq(i)->nr_uninterruptible;
 
-	/*
-	 * Since we read the counters lockless, it might be slightly
-	 * inaccurate. Do not allow it to go below zero though:
-	 */
-	if (unlikely((long)sum < 0))
-		sum = 0;
+    /*
+     * Since we read the counters lockless, it might be slightly
+     * inaccurate. Do not allow it to go below zero though:
+     */
+    if (unlikely((long)sum < 0))
+        sum = 0;
 
-	return sum;
+    return sum;
 }
 
 unsigned long long nr_context_switches(void)
 {
-	int i;
-	unsigned long long sum = 0;
+    int i;
+    unsigned long long sum = 0;
 
-	for_each_possible_cpu(i)
-		sum += cpu_rq(i)->nr_switches;
+    for_each_possible_cpu(i)
+        sum += cpu_rq(i)->nr_switches;
 
-	return sum;
+    return sum;
 }
 
 unsigned long nr_iowait(void)
 {
-	unsigned long i, sum = 0;
+    unsigned long i, sum = 0;
 
-	for_each_possible_cpu(i)
-		sum += atomic_read(&cpu_rq(i)->nr_iowait);
+    for_each_possible_cpu(i)
+        sum += atomic_read(&cpu_rq(i)->nr_iowait);
 
-	return sum;
+    return sum;
 }
 
 unsigned long nr_iowait_cpu(int cpu)
 {
-	struct rq *this = cpu_rq(cpu);
-	return atomic_read(&this->nr_iowait);
+    struct rq *this = cpu_rq(cpu);
+    return atomic_read(&this->nr_iowait);
 }
 
 unsigned long this_cpu_load(void)
 {
-	struct rq *this = this_rq();
-	return this->cpu_load[0];
+    struct rq *this = this_rq();
+    return this->cpu_load[0];
 }
 
 
@@ -2176,7 +2180,7 @@ unsigned long this_cpu_load(void)
  *
  *   nr_active = 0;
  *   for_each_possible_cpu(cpu)
- *   	nr_active += cpu_of(cpu)->nr_running + cpu_of(cpu)->nr_uninterruptible;
+ *       nr_active += cpu_of(cpu)->nr_running + cpu_of(cpu)->nr_uninterruptible;
  *
  *   avenrun[n] = avenrun[0] * exp_n + nr_active * (1 - exp_n)
  *
@@ -2218,32 +2222,32 @@ EXPORT_SYMBOL(avenrun); /* should be rem
 
 /**
  * get_avenrun - get the load average array
- * @loads:	pointer to dest load array
- * @offset:	offset to add
- * @shift:	shift count to shift the result left
+ * @loads:    pointer to dest load array
+ * @offset:    offset to add
+ * @shift:    shift count to shift the result left
  *
  * These values are estimates at best, so no need for locking.
  */
 void get_avenrun(unsigned long *loads, unsigned long offset, int shift)
 {
-	loads[0] = (avenrun[0] + offset) << shift;
-	loads[1] = (avenrun[1] + offset) << shift;
-	loads[2] = (avenrun[2] + offset) << shift;
+    loads[0] = (avenrun[0] + offset) << shift;
+    loads[1] = (avenrun[1] + offset) << shift;
+    loads[2] = (avenrun[2] + offset) << shift;
 }
 
 static long calc_load_fold_active(struct rq *this_rq)
 {
-	long nr_active, delta = 0;
+    long nr_active, delta = 0;
 
-	nr_active = this_rq->nr_running;
-	nr_active += (long) this_rq->nr_uninterruptible;
+    nr_active = this_rq->nr_running;
+    nr_active += (long) this_rq->nr_uninterruptible;
 
-	if (nr_active != this_rq->calc_load_active) {
-		delta = nr_active - this_rq->calc_load_active;
-		this_rq->calc_load_active = nr_active;
-	}
+    if (nr_active != this_rq->calc_load_active) {
+        delta = nr_active - this_rq->calc_load_active;
+        this_rq->calc_load_active = nr_active;
+    }
 
-	return delta;
+    return delta;
 }
 
 /*
@@ -2252,10 +2256,10 @@ static long calc_load_fold_active(struct
 static unsigned long
 calc_load(unsigned long load, unsigned long exp, unsigned long active)
 {
-	load *= exp;
-	load += active * (FIXED_1 - exp);
-	load += 1UL << (FSHIFT - 1);
-	return load >> FSHIFT;
+    load *= exp;
+    load += active * (FIXED_1 - exp);
+    load += 1UL << (FSHIFT - 1);
+    return load >> FSHIFT;
 }
 
 #ifdef CONFIG_NO_HZ
@@ -2306,74 +2310,74 @@ static int calc_load_idx;
 
 static inline int calc_load_write_idx(void)
 {
-	int idx = calc_load_idx;
+    int idx = calc_load_idx;
 
-	/*
-	 * See calc_global_nohz(), if we observe the new index, we also
-	 * need to observe the new update time.
-	 */
-	smp_rmb();
-
-	/*
-	 * If the folding window started, make sure we start writing in the
-	 * next idle-delta.
-	 */
-	if (!time_before(jiffies, calc_load_update))
-		idx++;
+    /*
+     * See calc_global_nohz(), if we observe the new index, we also
+     * need to observe the new update time.
+     */
+    smp_rmb();
+
+    /*
+     * If the folding window started, make sure we start writing in the
+     * next idle-delta.
+     */
+    if (!time_before(jiffies, calc_load_update))
+        idx++;
 
-	return idx & 1;
+    return idx & 1;
 }
 
 static inline int calc_load_read_idx(void)
 {
-	return calc_load_idx & 1;
+    return calc_load_idx & 1;
 }
 
 void calc_load_enter_idle(void)
 {
-	struct rq *this_rq = this_rq();
-	long delta;
+    struct rq *this_rq = this_rq();
+    long delta;
 
-	/*
-	 * We're going into NOHZ mode, if there's any pending delta, fold it
-	 * into the pending idle delta.
-	 */
-	delta = calc_load_fold_active(this_rq);
-	if (delta) {
-		int idx = calc_load_write_idx();
-		atomic_long_add(delta, &calc_load_idle[idx]);
-	}
+    /*
+     * We're going into NOHZ mode, if there's any pending delta, fold it
+     * into the pending idle delta.
+     */
+    delta = calc_load_fold_active(this_rq);
+    if (delta) {
+        int idx = calc_load_write_idx();
+        atomic_long_add(delta, &calc_load_idle[idx]);
+    }
 }
 
 void calc_load_exit_idle(void)
 {
-	struct rq *this_rq = this_rq();
+    struct rq *this_rq = this_rq();
 
-	/*
-	 * If we're still before the sample window, we're done.
-	 */
-	if (time_before(jiffies, this_rq->calc_load_update))
-		return;
-
-	/*
-	 * We woke inside or after the sample window, this means we're already
-	 * accounted through the nohz accounting, so skip the entire deal and
-	 * sync up for the next window.
-	 */
-	this_rq->calc_load_update = calc_load_update;
-	if (time_before(jiffies, this_rq->calc_load_update + 10))
-		this_rq->calc_load_update += LOAD_FREQ;
+    /*
+     * If we're still before the sample window, we're done.
+     */
+    if (time_before(jiffies, this_rq->calc_load_update))
+        return;
+
+    /*
+     * We woke inside or after the sample window, this means we're already
+     * accounted through the nohz accounting, so skip the entire deal and
+     * sync up for the next window.
+     */
+    this_rq->calc_load_update = calc_load_update;
+    if (time_before(jiffies, this_rq->calc_load_update + 10))
+        this_rq->calc_load_update += LOAD_FREQ;
 }
 
 static long calc_load_fold_idle(void)
 {
-	int idx = calc_load_read_idx();
-	long delta = 0;
+    int idx = calc_load_read_idx();
+    long delta = 0;
 
-	if (atomic_long_read(&calc_load_idle[idx]))
-		delta = atomic_long_xchg(&calc_load_idle[idx], 0);
+    if (atomic_long_read(&calc_load_idle[idx]))
+        delta = atomic_long_xchg(&calc_load_idle[idx], 0);
 
-	return delta;
+    return delta;
 }
 
 /**
@@ -2394,23 +2398,23 @@ static long calc_load_fold_idle(void)
 static unsigned long
 fixed_power_int(unsigned long x, unsigned int frac_bits, unsigned int n)
 {
-	unsigned long result = 1UL << frac_bits;
+    unsigned long result = 1UL << frac_bits;
 
-	if (n) for (;;) {
-		if (n & 1) {
-			result *= x;
-			result += 1UL << (frac_bits - 1);
-			result >>= frac_bits;
-		}
-		n >>= 1;
-		if (!n)
-			break;
-		x *= x;
-		x += 1UL << (frac_bits - 1);
-		x >>= frac_bits;
-	}
+    if (n) for (;;) {
+        if (n & 1) {
+            result *= x;
+            result += 1UL << (frac_bits - 1);
+            result >>= frac_bits;
+        }
+        n >>= 1;
+        if (!n)
+            break;
+        x *= x;
+        x += 1UL << (frac_bits - 1);
+        x >>= frac_bits;
+    }
 
-	return result;
+    return result;
 }
 
 /*
@@ -2438,10 +2442,10 @@ fixed_power_int(unsigned long x, unsigne
  */
 static unsigned long
 calc_load_n(unsigned long load, unsigned long exp,
-	    unsigned long active, unsigned int n)
+        unsigned long active, unsigned int n)
 {
 
-	return calc_load(load, fixed_power_int(exp, FSHIFT, n), active);
+    return calc_load(load, fixed_power_int(exp, FSHIFT, n), active);
 }
 
 /*
@@ -2455,34 +2459,34 @@ calc_load_n(unsigned long load, unsigned
  */
 static void calc_global_nohz(void)
 {
-	long delta, active, n;
+    long delta, active, n;
 
-	if (!time_before(jiffies, calc_load_update + 10)) {
-		/*
-		 * Catch-up, fold however many we are behind still
-		 */
-		delta = jiffies - calc_load_update - 10;
-		n = 1 + (delta / LOAD_FREQ);
-
-		active = atomic_long_read(&calc_load_tasks);
-		active = active > 0 ? active * FIXED_1 : 0;
-
-		avenrun[0] = calc_load_n(avenrun[0], EXP_1, active, n);
-		avenrun[1] = calc_load_n(avenrun[1], EXP_5, active, n);
-		avenrun[2] = calc_load_n(avenrun[2], EXP_15, active, n);
-
-		calc_load_update += n * LOAD_FREQ;
-	}
-
-	/*
-	 * Flip the idle index...
-	 *
-	 * Make sure we first write the new time then flip the index, so that
-	 * calc_load_write_idx() will see the new time when it reads the new
-	 * index, this avoids a double flip messing things up.
-	 */
-	smp_wmb();
-	calc_load_idx++;
+    if (!time_before(jiffies, calc_load_update + 10)) {
+        /*
+         * Catch-up, fold however many we are behind still
+         */
+        delta = jiffies - calc_load_update - 10;
+        n = 1 + (delta / LOAD_FREQ);
+
+        active = atomic_long_read(&calc_load_tasks);
+        active = active > 0 ? active * FIXED_1 : 0;
+
+        avenrun[0] = calc_load_n(avenrun[0], EXP_1, active, n);
+        avenrun[1] = calc_load_n(avenrun[1], EXP_5, active, n);
+        avenrun[2] = calc_load_n(avenrun[2], EXP_15, active, n);
+
+        calc_load_update += n * LOAD_FREQ;
+    }
+
+    /*
+     * Flip the idle index...
+     *
+     * Make sure we first write the new time then flip the index, so that
+     * calc_load_write_idx() will see the new time when it reads the new
+     * index, this avoids a double flip messing things up.
+     */
+    smp_wmb();
+    calc_load_idx++;
 }
 #else /* !CONFIG_NO_HZ */
 
@@ -2497,31 +2501,31 @@ static inline void calc_global_nohz(void
  */
 void calc_global_load(unsigned long ticks)
 {
-	long active, delta;
+    long active, delta;
 
-	if (time_before(jiffies, calc_load_update + 10))
-		return;
+    if (time_before(jiffies, calc_load_update + 10))
+        return;
 
-	/*
-	 * Fold the 'old' idle-delta to include all NO_HZ cpus.
-	 */
-	delta = calc_load_fold_idle();
-	if (delta)
-		atomic_long_add(delta, &calc_load_tasks);
-
-	active = atomic_long_read(&calc_load_tasks);
-	active = active > 0 ? active * FIXED_1 : 0;
-
-	avenrun[0] = calc_load(avenrun[0], EXP_1, active);
-	avenrun[1] = calc_load(avenrun[1], EXP_5, active);
-	avenrun[2] = calc_load(avenrun[2], EXP_15, active);
-
-	calc_load_update += LOAD_FREQ;
-
-	/*
-	 * In case we idled for multiple LOAD_FREQ intervals, catch up in bulk.
-	 */
-	calc_global_nohz();
+    /*
+     * Fold the 'old' idle-delta to include all NO_HZ cpus.
+     */
+    delta = calc_load_fold_idle();
+    if (delta)
+        atomic_long_add(delta, &calc_load_tasks);
+
+    active = atomic_long_read(&calc_load_tasks);
+    active = active > 0 ? active * FIXED_1 : 0;
+
+    avenrun[0] = calc_load(avenrun[0], EXP_1, active);
+    avenrun[1] = calc_load(avenrun[1], EXP_5, active);
+    avenrun[2] = calc_load(avenrun[2], EXP_15, active);
+
+    calc_load_update += LOAD_FREQ;
+
+    /*
+     * In case we idled for multiple LOAD_FREQ intervals, catch up in bulk.
+     */
+    calc_global_nohz();
 }
 
 /*
@@ -2530,16 +2534,16 @@ void calc_global_load(unsigned long tick
  */
 static void calc_load_account_active(struct rq *this_rq)
 {
-	long delta;
+    long delta;
 
-	if (time_before(jiffies, this_rq->calc_load_update))
-		return;
+    if (time_before(jiffies, this_rq->calc_load_update))
+        return;
 
-	delta  = calc_load_fold_active(this_rq);
-	if (delta)
-		atomic_long_add(delta, &calc_load_tasks);
+    delta  = calc_load_fold_active(this_rq);
+    if (delta)
+        atomic_long_add(delta, &calc_load_tasks);
 
-	this_rq->calc_load_update += LOAD_FREQ;
+    this_rq->calc_load_update += LOAD_FREQ;
 }
 
 /*
@@ -2573,16 +2577,16 @@ static void calc_load_account_active(str
  * by looking at 1 bits in n and doing as many mult/shift instead of
  * n mult/shifts needed by the exact degradation.
  */
-#define DEGRADE_SHIFT		7
+#define DEGRADE_SHIFT        7
 static const unsigned char
-		degrade_zero_ticks[CPU_LOAD_IDX_MAX] = {0, 8, 32, 64, 128};
+        degrade_zero_ticks[CPU_LOAD_IDX_MAX] = {0, 8, 32, 64, 128};
 static const unsigned char
-		degrade_factor[CPU_LOAD_IDX_MAX][DEGRADE_SHIFT + 1] = {
-					{0, 0, 0, 0, 0, 0, 0, 0},
-					{64, 32, 8, 0, 0, 0, 0, 0},
-					{96, 72, 40, 12, 1, 0, 0},
-					{112, 98, 75, 43, 15, 1, 0},
-					{120, 112, 98, 76, 45, 16, 2} };
+        degrade_factor[CPU_LOAD_IDX_MAX][DEGRADE_SHIFT + 1] = {
+                    {0, 0, 0, 0, 0, 0, 0, 0},
+                    {64, 32, 8, 0, 0, 0, 0, 0},
+                    {96, 72, 40, 12, 1, 0, 0},
+                    {112, 98, 75, 43, 15, 1, 0},
+                    {120, 112, 98, 76, 45, 16, 2} };
 
 /*
  * Update cpu_load for any missed ticks, due to tickless idle. The backlog
@@ -2592,25 +2596,25 @@ static const unsigned char
 static unsigned long
 decay_load_missed(unsigned long load, unsigned long missed_updates, int idx)
 {
-	int j = 0;
+    int j = 0;
 
-	if (!missed_updates)
-		return load;
+    if (!missed_updates)
+        return load;
 
-	if (missed_updates >= degrade_zero_ticks[idx])
-		return 0;
+    if (missed_updates >= degrade_zero_ticks[idx])
+        return 0;
 
-	if (idx == 1)
-		return load >> missed_updates;
+    if (idx == 1)
+        return load >> missed_updates;
 
-	while (missed_updates) {
-		if (missed_updates % 2)
-			load = (load * degrade_factor[idx][j]) >> DEGRADE_SHIFT;
+    while (missed_updates) {
+        if (missed_updates % 2)
+            load = (load * degrade_factor[idx][j]) >> DEGRADE_SHIFT;
 
-		missed_updates >>= 1;
-		j++;
-	}
-	return load;
+        missed_updates >>= 1;
+        j++;
+    }
+    return load;
 }
 
 /*
@@ -2619,34 +2623,34 @@ decay_load_missed(unsigned long load, un
  * every tick. We fix it up based on jiffies.
  */
 static void __update_cpu_load(struct rq *this_rq, unsigned long this_load,
-			      unsigned long pending_updates)
+                  unsigned long pending_updates)
 {
-	int i, scale;
+    int i, scale;
 
-	this_rq->nr_load_updates++;
+    this_rq->nr_load_updates++;
 
-	/* Update our load: */
-	this_rq->cpu_load[0] = this_load; /* Fasttrack for idx 0 */
-	for (i = 1, scale = 2; i < CPU_LOAD_IDX_MAX; i++, scale += scale) {
-		unsigned long old_load, new_load;
-
-		/* scale is effectively 1 << i now, and >> i divides by scale */
-
-		old_load = this_rq->cpu_load[i];
-		old_load = decay_load_missed(old_load, pending_updates - 1, i);
-		new_load = this_load;
-		/*
-		 * Round up the averaging division if load is increasing. This
-		 * prevents us from getting stuck on 9 if the load is 10, for
-		 * example.
-		 */
-		if (new_load > old_load)
-			new_load += scale - 1;
+    /* Update our load: */
+    this_rq->cpu_load[0] = this_load; /* Fasttrack for idx 0 */
+    for (i = 1, scale = 2; i < CPU_LOAD_IDX_MAX; i++, scale += scale) {
+        unsigned long old_load, new_load;
+
+        /* scale is effectively 1 << i now, and >> i divides by scale */
+
+        old_load = this_rq->cpu_load[i];
+        old_load = decay_load_missed(old_load, pending_updates - 1, i);
+        new_load = this_load;
+        /*
+         * Round up the averaging division if load is increasing. This
+         * prevents us from getting stuck on 9 if the load is 10, for
+         * example.
+         */
+        if (new_load > old_load)
+            new_load += scale - 1;
 
-		this_rq->cpu_load[i] = (old_load * (scale - 1) + new_load) >> i;
-	}
+        this_rq->cpu_load[i] = (old_load * (scale - 1) + new_load) >> i;
+    }
 
-	sched_avg_update(this_rq);
+    sched_avg_update(this_rq);
 }
 
 #ifdef CONFIG_NO_HZ
@@ -2669,20 +2673,20 @@ static void __update_cpu_load(struct rq 
  */
 void update_idle_cpu_load(struct rq *this_rq)
 {
-	unsigned long curr_jiffies = ACCESS_ONCE(jiffies);
-	unsigned long load = this_rq->load.weight;
-	unsigned long pending_updates;
-
-	/*
-	 * bail if there's load or we're actually up-to-date.
-	 */
-	if (load || curr_jiffies == this_rq->last_load_update_tick)
-		return;
+    unsigned long curr_jiffies = ACCESS_ONCE(jiffies);
+    unsigned long load = this_rq->load.weight;
+    unsigned long pending_updates;
+
+    /*
+     * bail if there's load or we're actually up-to-date.
+     */
+    if (load || curr_jiffies == this_rq->last_load_update_tick)
+        return;
 
-	pending_updates = curr_jiffies - this_rq->last_load_update_tick;
-	this_rq->last_load_update_tick = curr_jiffies;
+    pending_updates = curr_jiffies - this_rq->last_load_update_tick;
+    this_rq->last_load_update_tick = curr_jiffies;
 
-	__update_cpu_load(this_rq, load, pending_updates);
+    __update_cpu_load(this_rq, load, pending_updates);
 }
 
 /*
@@ -2690,24 +2694,24 @@ void update_idle_cpu_load(struct rq *thi
  */
 void update_cpu_load_nohz(void)
 {
-	struct rq *this_rq = this_rq();
-	unsigned long curr_jiffies = ACCESS_ONCE(jiffies);
-	unsigned long pending_updates;
-
-	if (curr_jiffies == this_rq->last_load_update_tick)
-		return;
-
-	raw_spin_lock(&this_rq->lock);
-	pending_updates = curr_jiffies - this_rq->last_load_update_tick;
-	if (pending_updates) {
-		this_rq->last_load_update_tick = curr_jiffies;
-		/*
-		 * We were idle, this means load 0, the current load might be
-		 * !0 due to remote wakeups and the sort.
-		 */
-		__update_cpu_load(this_rq, 0, pending_updates);
-	}
-	raw_spin_unlock(&this_rq->lock);
+    struct rq *this_rq = this_rq();
+    unsigned long curr_jiffies = ACCESS_ONCE(jiffies);
+    unsigned long pending_updates;
+
+    if (curr_jiffies == this_rq->last_load_update_tick)
+        return;
+
+    raw_spin_lock(&this_rq->lock);
+    pending_updates = curr_jiffies - this_rq->last_load_update_tick;
+    if (pending_updates) {
+        this_rq->last_load_update_tick = curr_jiffies;
+        /*
+         * We were idle, this means load 0, the current load might be
+         * !0 due to remote wakeups and the sort.
+         */
+        __update_cpu_load(this_rq, 0, pending_updates);
+    }
+    raw_spin_unlock(&this_rq->lock);
 }
 #endif /* CONFIG_NO_HZ */
 
@@ -2716,13 +2720,13 @@ void update_cpu_load_nohz(void)
  */
 static void update_cpu_load_active(struct rq *this_rq)
 {
-	/*
-	 * See the mess around update_idle_cpu_load() / update_cpu_load_nohz().
-	 */
-	this_rq->last_load_update_tick = jiffies;
-	__update_cpu_load(this_rq, this_rq->load.weight, 1);
+    /*
+     * See the mess around update_idle_cpu_load() / update_cpu_load_nohz().
+     */
+    this_rq->last_load_update_tick = jiffies;
+    __update_cpu_load(this_rq, this_rq->load.weight, 1);
 
-	calc_load_account_active(this_rq);
+    calc_load_account_active(this_rq);
 }
 
 #ifdef CONFIG_SMP
@@ -2733,24 +2737,24 @@ static void update_cpu_load_active(struc
  */
 void sched_exec(void)
 {
-	struct task_struct *p = current;
-	unsigned long flags;
-	int dest_cpu;
-
-	raw_spin_lock_irqsave(&p->pi_lock, flags);
-	dest_cpu = p->sched_class->select_task_rq(p, SD_BALANCE_EXEC, 0);
-	if (dest_cpu == smp_processor_id())
-		goto unlock;
-
-	if (likely(cpu_active(dest_cpu))) {
-		struct migration_arg arg = { p, dest_cpu };
-
-		raw_spin_unlock_irqrestore(&p->pi_lock, flags);
-		stop_one_cpu(task_cpu(p), migration_cpu_stop, &arg);
-		return;
-	}
+    struct task_struct *p = current;
+    unsigned long flags;
+    int dest_cpu;
+
+    raw_spin_lock_irqsave(&p->pi_lock, flags);
+    dest_cpu = p->sched_class->select_task_rq(p, SD_BALANCE_EXEC, 0);
+    if (dest_cpu == smp_processor_id())
+        goto unlock;
+
+    if (likely(cpu_active(dest_cpu))) {
+        struct migration_arg arg = { p, dest_cpu };
+
+        raw_spin_unlock_irqrestore(&p->pi_lock, flags);
+        stop_one_cpu(task_cpu(p), migration_cpu_stop, &arg);
+        return;
+    }
 unlock:
-	raw_spin_unlock_irqrestore(&p->pi_lock, flags);
+    raw_spin_unlock_irqrestore(&p->pi_lock, flags);
 }
 
 #endif
@@ -2769,29 +2773,29 @@ EXPORT_PER_CPU_SYMBOL(kernel_cpustat);
  */
 static u64 do_task_delta_exec(struct task_struct *p, struct rq *rq)
 {
-	u64 ns = 0;
+    u64 ns = 0;
 
-	if (task_current(rq, p)) {
-		update_rq_clock(rq);
-		ns = rq->clock_task - p->se.exec_start;
-		if ((s64)ns < 0)
-			ns = 0;
-	}
+    if (task_current(rq, p)) {
+        update_rq_clock(rq);
+        ns = rq->clock_task - p->se.exec_start;
+        if ((s64)ns < 0)
+            ns = 0;
+    }
 
-	return ns;
+    return ns;
 }
 
 unsigned long long task_delta_exec(struct task_struct *p)
 {
-	unsigned long flags;
-	struct rq *rq;
-	u64 ns = 0;
-
-	rq = task_rq_lock(p, &flags);
-	ns = do_task_delta_exec(p, rq);
-	task_rq_unlock(rq, p, &flags);
+    unsigned long flags;
+    struct rq *rq;
+    u64 ns = 0;
+
+    rq = task_rq_lock(p, &flags);
+    ns = do_task_delta_exec(p, rq);
+    task_rq_unlock(rq, p, &flags);
 
-	return ns;
+    return ns;
 }
 
 /*
@@ -2801,15 +2805,15 @@ unsigned long long task_delta_exec(struc
  */
 unsigned long long task_sched_runtime(struct task_struct *p)
 {
-	unsigned long flags;
-	struct rq *rq;
-	u64 ns = 0;
-
-	rq = task_rq_lock(p, &flags);
-	ns = p->se.sum_exec_runtime + do_task_delta_exec(p, rq);
-	task_rq_unlock(rq, p, &flags);
+    unsigned long flags;
+    struct rq *rq;
+    u64 ns = 0;
+
+    rq = task_rq_lock(p, &flags);
+    ns = p->se.sum_exec_runtime + do_task_delta_exec(p, rq);
+    task_rq_unlock(rq, p, &flags);
 
-	return ns;
+    return ns;
 }
 
 #ifdef CONFIG_CGROUP_CPUACCT
@@ -2818,32 +2822,32 @@ struct cpuacct root_cpuacct;
 #endif
 
 static inline void task_group_account_field(struct task_struct *p, int index,
-					    u64 tmp)
+                        u64 tmp)
 {
 #ifdef CONFIG_CGROUP_CPUACCT
-	struct kernel_cpustat *kcpustat;
-	struct cpuacct *ca;
+    struct kernel_cpustat *kcpustat;
+    struct cpuacct *ca;
 #endif
-	/*
-	 * Since all updates are sure to touch the root cgroup, we
-	 * get ourselves ahead and touch it first. If the root cgroup
-	 * is the only cgroup, then nothing else should be necessary.
-	 *
-	 */
-	__get_cpu_var(kernel_cpustat).cpustat[index] += tmp;
+    /*
+     * Since all updates are sure to touch the root cgroup, we
+     * get ourselves ahead and touch it first. If the root cgroup
+     * is the only cgroup, then nothing else should be necessary.
+     *
+     */
+    __get_cpu_var(kernel_cpustat).cpustat[index] += tmp;
 
 #ifdef CONFIG_CGROUP_CPUACCT
-	if (unlikely(!cpuacct_subsys.active))
-		return;
+    if (unlikely(!cpuacct_subsys.active))
+        return;
 
-	rcu_read_lock();
-	ca = task_ca(p);
-	while (ca && (ca != &root_cpuacct)) {
-		kcpustat = this_cpu_ptr(ca->cpustat);
-		kcpustat->cpustat[index] += tmp;
-		ca = parent_ca(ca);
-	}
-	rcu_read_unlock();
+    rcu_read_lock();
+    ca = task_ca(p);
+    while (ca && (ca != &root_cpuacct)) {
+        kcpustat = this_cpu_ptr(ca->cpustat);
+        kcpustat->cpustat[index] += tmp;
+        ca = parent_ca(ca);
+    }
+    rcu_read_unlock();
 #endif
 }
 
@@ -2855,22 +2859,22 @@ static inline void task_group_account_fi
  * @cputime_scaled: cputime scaled by cpu frequency
  */
 void account_user_time(struct task_struct *p, cputime_t cputime,
-		       cputime_t cputime_scaled)
+               cputime_t cputime_scaled)
 {
-	int index;
+    int index;
 
-	/* Add user time to process. */
-	p->utime += cputime;
-	p->utimescaled += cputime_scaled;
-	account_group_user_time(p, cputime);
+    /* Add user time to process. */
+    p->utime += cputime;
+    p->utimescaled += cputime_scaled;
+    account_group_user_time(p, cputime);
 
-	index = (TASK_NICE(p) > 0) ? CPUTIME_NICE : CPUTIME_USER;
+    index = (TASK_NICE(p) > 0) ? CPUTIME_NICE : CPUTIME_USER;
 
-	/* Add user time to cpustat. */
-	task_group_account_field(p, index, (__force u64) cputime);
+    /* Add user time to cpustat. */
+    task_group_account_field(p, index, (__force u64) cputime);
 
-	/* Account for user time used */
-	acct_update_integrals(p);
+    /* Account for user time used */
+    acct_update_integrals(p);
 }
 
 /*
@@ -2880,24 +2884,24 @@ void account_user_time(struct task_struc
  * @cputime_scaled: cputime scaled by cpu frequency
  */
 static void account_guest_time(struct task_struct *p, cputime_t cputime,
-			       cputime_t cputime_scaled)
+                   cputime_t cputime_scaled)
 {
-	u64 *cpustat = kcpustat_this_cpu->cpustat;
+    u64 *cpustat = kcpustat_this_cpu->cpustat;
 
-	/* Add guest time to process. */
-	p->utime += cputime;
-	p->utimescaled += cputime_scaled;
-	account_group_user_time(p, cputime);
-	p->gtime += cputime;
-
-	/* Add guest time to cpustat. */
-	if (TASK_NICE(p) > 0) {
-		cpustat[CPUTIME_NICE] += (__force u64) cputime;
-		cpustat[CPUTIME_GUEST_NICE] += (__force u64) cputime;
-	} else {
-		cpustat[CPUTIME_USER] += (__force u64) cputime;
-		cpustat[CPUTIME_GUEST] += (__force u64) cputime;
-	}
+    /* Add guest time to process. */
+    p->utime += cputime;
+    p->utimescaled += cputime_scaled;
+    account_group_user_time(p, cputime);
+    p->gtime += cputime;
+
+    /* Add guest time to cpustat. */
+    if (TASK_NICE(p) > 0) {
+        cpustat[CPUTIME_NICE] += (__force u64) cputime;
+        cpustat[CPUTIME_GUEST_NICE] += (__force u64) cputime;
+    } else {
+        cpustat[CPUTIME_USER] += (__force u64) cputime;
+        cpustat[CPUTIME_GUEST] += (__force u64) cputime;
+    }
 }
 
 /*
@@ -2909,18 +2913,18 @@ static void account_guest_time(struct ta
  */
 static inline
 void __account_system_time(struct task_struct *p, cputime_t cputime,
-			cputime_t cputime_scaled, int index)
+            cputime_t cputime_scaled, int index)
 {
-	/* Add system time to process. */
-	p->stime += cputime;
-	p->stimescaled += cputime_scaled;
-	account_group_system_time(p, cputime);
+    /* Add system time to process. */
+    p->stime += cputime;
+    p->stimescaled += cputime_scaled;
+    account_group_system_time(p, cputime);
 
-	/* Add system time to cpustat. */
-	task_group_account_field(p, index, (__force u64) cputime);
+    /* Add system time to cpustat. */
+    task_group_account_field(p, index, (__force u64) cputime);
 
-	/* Account for system time used */
-	acct_update_integrals(p);
+    /* Account for system time used */
+    acct_update_integrals(p);
 }
 
 /*
@@ -2931,23 +2935,23 @@ void __account_system_time(struct task_s
  * @cputime_scaled: cputime scaled by cpu frequency
  */
 void account_system_time(struct task_struct *p, int hardirq_offset,
-			 cputime_t cputime, cputime_t cputime_scaled)
+             cputime_t cputime, cputime_t cputime_scaled)
 {
-	int index;
+    int index;
 
-	if ((p->flags & PF_VCPU) && (irq_count() - hardirq_offset == 0)) {
-		account_guest_time(p, cputime, cputime_scaled);
-		return;
-	}
-
-	if (hardirq_count() - hardirq_offset)
-		index = CPUTIME_IRQ;
-	else if (in_serving_softirq())
-		index = CPUTIME_SOFTIRQ;
-	else
-		index = CPUTIME_SYSTEM;
+    if ((p->flags & PF_VCPU) && (irq_count() - hardirq_offset == 0)) {
+        account_guest_time(p, cputime, cputime_scaled);
+        return;
+    }
+
+    if (hardirq_count() - hardirq_offset)
+        index = CPUTIME_IRQ;
+    else if (in_serving_softirq())
+        index = CPUTIME_SOFTIRQ;
+    else
+        index = CPUTIME_SYSTEM;
 
-	__account_system_time(p, cputime, cputime_scaled, index);
+    __account_system_time(p, cputime, cputime_scaled, index);
 }
 
 /*
@@ -2956,9 +2960,9 @@ void account_system_time(struct task_str
  */
 void account_steal_time(cputime_t cputime)
 {
-	u64 *cpustat = kcpustat_this_cpu->cpustat;
+    u64 *cpustat = kcpustat_this_cpu->cpustat;
 
-	cpustat[CPUTIME_STEAL] += (__force u64) cputime;
+    cpustat[CPUTIME_STEAL] += (__force u64) cputime;
 }
 
 /*
@@ -2967,32 +2971,32 @@ void account_steal_time(cputime_t cputim
  */
 void account_idle_time(cputime_t cputime)
 {
-	u64 *cpustat = kcpustat_this_cpu->cpustat;
-	struct rq *rq = this_rq();
+    u64 *cpustat = kcpustat_this_cpu->cpustat;
+    struct rq *rq = this_rq();
 
-	if (atomic_read(&rq->nr_iowait) > 0)
-		cpustat[CPUTIME_IOWAIT] += (__force u64) cputime;
-	else
-		cpustat[CPUTIME_IDLE] += (__force u64) cputime;
+    if (atomic_read(&rq->nr_iowait) > 0)
+        cpustat[CPUTIME_IOWAIT] += (__force u64) cputime;
+    else
+        cpustat[CPUTIME_IDLE] += (__force u64) cputime;
 }
 
 static __always_inline bool steal_account_process_tick(void)
 {
 #ifdef CONFIG_PARAVIRT
-	if (static_key_false(&paravirt_steal_enabled)) {
-		u64 steal, st = 0;
+    if (static_key_false(&paravirt_steal_enabled)) {
+        u64 steal, st = 0;
 
-		steal = paravirt_steal_clock(smp_processor_id());
-		steal -= this_rq()->prev_steal_time;
+        steal = paravirt_steal_clock(smp_processor_id());
+        steal -= this_rq()->prev_steal_time;
 
-		st = steal_ticks(steal);
-		this_rq()->prev_steal_time += st * TICK_NSEC;
+        st = steal_ticks(steal);
+        this_rq()->prev_steal_time += st * TICK_NSEC;
 
-		account_steal_time(st);
-		return st;
-	}
+        account_steal_time(st);
+        return st;
+    }
 #endif
-	return false;
+    return false;
 }
 
 #ifndef CONFIG_VIRT_CPU_ACCOUNTING
@@ -3020,50 +3024,50 @@ static __always_inline bool steal_accoun
  * softirq as those do not count in task exec_runtime any more.
  */
 static void irqtime_account_process_tick(struct task_struct *p, int user_tick,
-						struct rq *rq)
+                        struct rq *rq)
 {
-	cputime_t one_jiffy_scaled = cputime_to_scaled(cputime_one_jiffy);
-	u64 *cpustat = kcpustat_this_cpu->cpustat;
+    cputime_t one_jiffy_scaled = cputime_to_scaled(cputime_one_jiffy);
+    u64 *cpustat = kcpustat_this_cpu->cpustat;
 
-	if (steal_account_process_tick())
-		return;
+    if (steal_account_process_tick())
+        return;
 
-	if (irqtime_account_hi_update()) {
-		cpustat[CPUTIME_IRQ] += (__force u64) cputime_one_jiffy;
-	} else if (irqtime_account_si_update()) {
-		cpustat[CPUTIME_SOFTIRQ] += (__force u64) cputime_one_jiffy;
-	} else if (this_cpu_ksoftirqd() == p) {
-		/*
-		 * ksoftirqd time do not get accounted in cpu_softirq_time.
-		 * So, we have to handle it separately here.
-		 * Also, p->stime needs to be updated for ksoftirqd.
-		 */
-		__account_system_time(p, cputime_one_jiffy, one_jiffy_scaled,
-					CPUTIME_SOFTIRQ);
-	} else if (user_tick) {
-		account_user_time(p, cputime_one_jiffy, one_jiffy_scaled);
-	} else if (p == rq->idle) {
-		account_idle_time(cputime_one_jiffy);
-	} else if (p->flags & PF_VCPU) { /* System time or guest time */
-		account_guest_time(p, cputime_one_jiffy, one_jiffy_scaled);
-	} else {
-		__account_system_time(p, cputime_one_jiffy, one_jiffy_scaled,
-					CPUTIME_SYSTEM);
-	}
+    if (irqtime_account_hi_update()) {
+        cpustat[CPUTIME_IRQ] += (__force u64) cputime_one_jiffy;
+    } else if (irqtime_account_si_update()) {
+        cpustat[CPUTIME_SOFTIRQ] += (__force u64) cputime_one_jiffy;
+    } else if (this_cpu_ksoftirqd() == p) {
+        /*
+         * ksoftirqd time do not get accounted in cpu_softirq_time.
+         * So, we have to handle it separately here.
+         * Also, p->stime needs to be updated for ksoftirqd.
+         */
+        __account_system_time(p, cputime_one_jiffy, one_jiffy_scaled,
+                    CPUTIME_SOFTIRQ);
+    } else if (user_tick) {
+        account_user_time(p, cputime_one_jiffy, one_jiffy_scaled);
+    } else if (p == rq->idle) {
+        account_idle_time(cputime_one_jiffy);
+    } else if (p->flags & PF_VCPU) { /* System time or guest time */
+        account_guest_time(p, cputime_one_jiffy, one_jiffy_scaled);
+    } else {
+        __account_system_time(p, cputime_one_jiffy, one_jiffy_scaled,
+                    CPUTIME_SYSTEM);
+    }
 }
 
 static void irqtime_account_idle_ticks(int ticks)
 {
-	int i;
-	struct rq *rq = this_rq();
+    int i;
+    struct rq *rq = this_rq();
 
-	for (i = 0; i < ticks; i++)
-		irqtime_account_process_tick(current, 0, rq);
+    for (i = 0; i < ticks; i++)
+        irqtime_account_process_tick(current, 0, rq);
 }
 #else /* CONFIG_IRQ_TIME_ACCOUNTING */
 static void irqtime_account_idle_ticks(int ticks) {}
 static void irqtime_account_process_tick(struct task_struct *p, int user_tick,
-						struct rq *rq) {}
+                        struct rq *rq) {}
 #endif /* CONFIG_IRQ_TIME_ACCOUNTING */
 
 /*
@@ -3073,24 +3077,24 @@ static void irqtime_account_process_tick
  */
 void account_process_tick(struct task_struct *p, int user_tick)
 {
-	cputime_t one_jiffy_scaled = cputime_to_scaled(cputime_one_jiffy);
-	struct rq *rq = this_rq();
+    cputime_t one_jiffy_scaled = cputime_to_scaled(cputime_one_jiffy);
+    struct rq *rq = this_rq();
 
-	if (sched_clock_irqtime) {
-		irqtime_account_process_tick(p, user_tick, rq);
-		return;
-	}
-
-	if (steal_account_process_tick())
-		return;
-
-	if (user_tick)
-		account_user_time(p, cputime_one_jiffy, one_jiffy_scaled);
-	else if ((p != rq->idle) || (irq_count() != HARDIRQ_OFFSET))
-		account_system_time(p, HARDIRQ_OFFSET, cputime_one_jiffy,
-				    one_jiffy_scaled);
-	else
-		account_idle_time(cputime_one_jiffy);
+    if (sched_clock_irqtime) {
+        irqtime_account_process_tick(p, user_tick, rq);
+        return;
+    }
+
+    if (steal_account_process_tick())
+        return;
+
+    if (user_tick)
+        account_user_time(p, cputime_one_jiffy, one_jiffy_scaled);
+    else if ((p != rq->idle) || (irq_count() != HARDIRQ_OFFSET))
+        account_system_time(p, HARDIRQ_OFFSET, cputime_one_jiffy,
+                    one_jiffy_scaled);
+    else
+        account_idle_time(cputime_one_jiffy);
 }
 
 /*
@@ -3100,7 +3104,7 @@ void account_process_tick(struct task_st
  */
 void account_steal_ticks(unsigned long ticks)
 {
-	account_steal_time(jiffies_to_cputime(ticks));
+    account_steal_time(jiffies_to_cputime(ticks));
 }
 
 /*
@@ -3110,12 +3114,12 @@ void account_steal_ticks(unsigned long t
 void account_idle_ticks(unsigned long ticks)
 {
 
-	if (sched_clock_irqtime) {
-		irqtime_account_idle_ticks(ticks);
-		return;
-	}
+    if (sched_clock_irqtime) {
+        irqtime_account_idle_ticks(ticks);
+        return;
+    }
 
-	account_idle_time(jiffies_to_cputime(ticks));
+    account_idle_time(jiffies_to_cputime(ticks));
 }
 
 #endif
@@ -3126,61 +3130,61 @@ void account_idle_ticks(unsigned long ti
 #ifdef CONFIG_VIRT_CPU_ACCOUNTING
 void task_times(struct task_struct *p, cputime_t *ut, cputime_t *st)
 {
-	*ut = p->utime;
-	*st = p->stime;
+    *ut = p->utime;
+    *st = p->stime;
 }
 
 void thread_group_times(struct task_struct *p, cputime_t *ut, cputime_t *st)
 {
-	struct task_cputime cputime;
+    struct task_cputime cputime;
 
-	thread_group_cputime(p, &cputime);
+    thread_group_cputime(p, &cputime);
 
-	*ut = cputime.utime;
-	*st = cputime.stime;
+    *ut = cputime.utime;
+    *st = cputime.stime;
 }
 #else
 
 #ifndef nsecs_to_cputime
-# define nsecs_to_cputime(__nsecs)	nsecs_to_jiffies(__nsecs)
+# define nsecs_to_cputime(__nsecs)    nsecs_to_jiffies(__nsecs)
 #endif
 
 static cputime_t scale_utime(cputime_t utime, cputime_t rtime, cputime_t total)
 {
-	u64 temp = (__force u64) rtime;
+    u64 temp = (__force u64) rtime;
 
-	temp *= (__force u64) utime;
+    temp *= (__force u64) utime;
 
-	if (sizeof(cputime_t) == 4)
-		temp = div_u64(temp, (__force u32) total);
-	else
-		temp = div64_u64(temp, (__force u64) total);
+    if (sizeof(cputime_t) == 4)
+        temp = div_u64(temp, (__force u32) total);
+    else
+        temp = div64_u64(temp, (__force u64) total);
 
-	return (__force cputime_t) temp;
+    return (__force cputime_t) temp;
 }
 
 void task_times(struct task_struct *p, cputime_t *ut, cputime_t *st)
 {
-	cputime_t rtime, utime = p->utime, total = utime + p->stime;
+    cputime_t rtime, utime = p->utime, total = utime + p->stime;
 
-	/*
-	 * Use CFS's precise accounting:
-	 */
-	rtime = nsecs_to_cputime(p->se.sum_exec_runtime);
-
-	if (total)
-		utime = scale_utime(utime, rtime, total);
-	else
-		utime = rtime;
-
-	/*
-	 * Compare with previous values, to keep monotonicity:
-	 */
-	p->prev_utime = max(p->prev_utime, utime);
-	p->prev_stime = max(p->prev_stime, rtime - p->prev_utime);
+    /*
+     * Use CFS's precise accounting:
+     */
+    rtime = nsecs_to_cputime(p->se.sum_exec_runtime);
+
+    if (total)
+        utime = scale_utime(utime, rtime, total);
+    else
+        utime = rtime;
+
+    /*
+     * Compare with previous values, to keep monotonicity:
+     */
+    p->prev_utime = max(p->prev_utime, utime);
+    p->prev_stime = max(p->prev_stime, rtime - p->prev_utime);
 
-	*ut = p->prev_utime;
-	*st = p->prev_stime;
+    *ut = p->prev_utime;
+    *st = p->prev_stime;
 }
 
 /*
@@ -3188,25 +3192,25 @@ void task_times(struct task_struct *p, c
  */
 void thread_group_times(struct task_struct *p, cputime_t *ut, cputime_t *st)
 {
-	struct signal_struct *sig = p->signal;
-	struct task_cputime cputime;
-	cputime_t rtime, utime, total;
+    struct signal_struct *sig = p->signal;
+    struct task_cputime cputime;
+    cputime_t rtime, utime, total;
 
-	thread_group_cputime(p, &cputime);
+    thread_group_cputime(p, &cputime);
 
-	total = cputime.utime + cputime.stime;
-	rtime = nsecs_to_cputime(cputime.sum_exec_runtime);
+    total = cputime.utime + cputime.stime;
+    rtime = nsecs_to_cputime(cputime.sum_exec_runtime);
 
-	if (total)
-		utime = scale_utime(cputime.utime, rtime, total);
-	else
-		utime = rtime;
+    if (total)
+        utime = scale_utime(cputime.utime, rtime, total);
+    else
+        utime = rtime;
 
-	sig->prev_utime = max(sig->prev_utime, utime);
-	sig->prev_stime = max(sig->prev_stime, rtime - sig->prev_utime);
+    sig->prev_utime = max(sig->prev_utime, utime);
+    sig->prev_stime = max(sig->prev_stime, rtime - sig->prev_utime);
 
-	*ut = sig->prev_utime;
-	*st = sig->prev_stime;
+    *ut = sig->prev_utime;
+    *st = sig->prev_stime;
 }
 #endif
 
@@ -3216,80 +3220,80 @@ void thread_group_times(struct task_stru
  */
 void scheduler_tick(void)
 {
-	int cpu = smp_processor_id();
-	struct rq *rq = cpu_rq(cpu);
-	struct task_struct *curr = rq->curr;
-
-	sched_clock_tick();
-
-	raw_spin_lock(&rq->lock);
-	update_rq_clock(rq);
-	update_cpu_load_active(rq);
-	curr->sched_class->task_tick(rq, curr, 0);
-	raw_spin_unlock(&rq->lock);
+    int cpu = smp_processor_id();
+    struct rq *rq = cpu_rq(cpu);
+    struct task_struct *curr = rq->curr;
+
+    sched_clock_tick();
+
+    raw_spin_lock(&rq->lock);
+    update_rq_clock(rq);
+    update_cpu_load_active(rq);
+    curr->sched_class->task_tick(rq, curr, 0);
+    raw_spin_unlock(&rq->lock);
 
-	perf_event_task_tick();
+    perf_event_task_tick();
 
 #ifdef CONFIG_SMP
-	rq->idle_balance = idle_cpu(cpu);
-	trigger_load_balance(rq, cpu);
+    rq->idle_balance = idle_cpu(cpu);
+    trigger_load_balance(rq, cpu);
 #endif
 }
 
 notrace unsigned long get_parent_ip(unsigned long addr)
 {
-	if (in_lock_functions(addr)) {
-		addr = CALLER_ADDR2;
-		if (in_lock_functions(addr))
-			addr = CALLER_ADDR3;
-	}
-	return addr;
+    if (in_lock_functions(addr)) {
+        addr = CALLER_ADDR2;
+        if (in_lock_functions(addr))
+            addr = CALLER_ADDR3;
+    }
+    return addr;
 }
 
 #if defined(CONFIG_PREEMPT) && (defined(CONFIG_DEBUG_PREEMPT) || \
-				defined(CONFIG_PREEMPT_TRACER))
+                defined(CONFIG_PREEMPT_TRACER))
 
 void __kprobes add_preempt_count(int val)
 {
 #ifdef CONFIG_DEBUG_PREEMPT
-	/*
-	 * Underflow?
-	 */
-	if (DEBUG_LOCKS_WARN_ON((preempt_count() < 0)))
-		return;
+    /*
+     * Underflow?
+     */
+    if (DEBUG_LOCKS_WARN_ON((preempt_count() < 0)))
+        return;
 #endif
-	preempt_count() += val;
+    preempt_count() += val;
 #ifdef CONFIG_DEBUG_PREEMPT
-	/*
-	 * Spinlock count overflowing soon?
-	 */
-	DEBUG_LOCKS_WARN_ON((preempt_count() & PREEMPT_MASK) >=
-				PREEMPT_MASK - 10);
+    /*
+     * Spinlock count overflowing soon?
+     */
+    DEBUG_LOCKS_WARN_ON((preempt_count() & PREEMPT_MASK) >=
+                PREEMPT_MASK - 10);
 #endif
-	if (preempt_count() == val)
-		trace_preempt_off(CALLER_ADDR0, get_parent_ip(CALLER_ADDR1));
+    if (preempt_count() == val)
+        trace_preempt_off(CALLER_ADDR0, get_parent_ip(CALLER_ADDR1));
 }
 EXPORT_SYMBOL(add_preempt_count);
 
 void __kprobes sub_preempt_count(int val)
 {
 #ifdef CONFIG_DEBUG_PREEMPT
-	/*
-	 * Underflow?
-	 */
-	if (DEBUG_LOCKS_WARN_ON(val > preempt_count()))
-		return;
-	/*
-	 * Is the spinlock portion underflowing?
-	 */
-	if (DEBUG_LOCKS_WARN_ON((val < PREEMPT_MASK) &&
-			!(preempt_count() & PREEMPT_MASK)))
-		return;
-#endif
-
-	if (preempt_count() == val)
-		trace_preempt_on(CALLER_ADDR0, get_parent_ip(CALLER_ADDR1));
-	preempt_count() -= val;
+    /*
+     * Underflow?
+     */
+    if (DEBUG_LOCKS_WARN_ON(val > preempt_count()))
+        return;
+    /*
+     * Is the spinlock portion underflowing?
+     */
+    if (DEBUG_LOCKS_WARN_ON((val < PREEMPT_MASK) &&
+            !(preempt_count() & PREEMPT_MASK)))
+        return;
+#endif
+
+    if (preempt_count() == val)
+        trace_preempt_on(CALLER_ADDR0, get_parent_ip(CALLER_ADDR1));
+    preempt_count() -= val;
 }
 EXPORT_SYMBOL(sub_preempt_count);
 
@@ -3300,17 +3304,17 @@ EXPORT_SYMBOL(sub_preempt_count);
  */
 static noinline void __schedule_bug(struct task_struct *prev)
 {
-	if (oops_in_progress)
-		return;
+    if (oops_in_progress)
+        return;
 
-	printk(KERN_ERR "BUG: scheduling while atomic: %s/%d/0x%08x\n",
-		prev->comm, prev->pid, preempt_count());
+    printk(KERN_ERR "BUG: scheduling while atomic: %s/%d/0x%08x\n",
+        prev->comm, prev->pid, preempt_count());
 
-	debug_show_held_locks(prev);
-	print_modules();
-	if (irqs_disabled())
-		print_irqtrace_events(prev);
-	dump_stack();
+    debug_show_held_locks(prev);
+    print_modules();
+    if (irqs_disabled())
+        print_irqtrace_events(prev);
+    dump_stack();
 }
 
 /*
@@ -3318,25 +3322,25 @@ static noinline void __schedule_bug(stru
  */
 static inline void schedule_debug(struct task_struct *prev)
 {
-	/*
-	 * Test if we are atomic. Since do_exit() needs to call into
-	 * schedule() atomically, we ignore that path for now.
-	 * Otherwise, whine if we are scheduling when we should not be.
-	 */
-	if (unlikely(in_atomic_preempt_off() && !prev->exit_state))
-		__schedule_bug(prev);
-	rcu_sleep_check();
+    /*
+     * Test if we are atomic. Since do_exit() needs to call into
+     * schedule() atomically, we ignore that path for now.
+     * Otherwise, whine if we are scheduling when we should not be.
+     */
+    if (unlikely(in_atomic_preempt_off() && !prev->exit_state))
+        __schedule_bug(prev);
+    rcu_sleep_check();
 
-	profile_hit(SCHED_PROFILING, __builtin_return_address(0));
+    profile_hit(SCHED_PROFILING, __builtin_return_address(0));
 
-	schedstat_inc(this_rq(), sched_count);
+    schedstat_inc(this_rq(), sched_count);
 }
 
 static void put_prev_task(struct rq *rq, struct task_struct *prev)
 {
-	if (prev->on_rq || rq->skip_clock_update < 0)
-		update_rq_clock(rq);
-	prev->sched_class->put_prev_task(rq, prev);
+    if (prev->on_rq || rq->skip_clock_update < 0)
+        update_rq_clock(rq);
+    prev->sched_class->put_prev_task(rq, prev);
 }
 
 /*
@@ -3345,26 +3349,26 @@ static void put_prev_task(struct rq *rq,
 static inline struct task_struct *
 pick_next_task(struct rq *rq)
 {
-	const struct sched_class *class;
-	struct task_struct *p;
+    const struct sched_class *class;
+    struct task_struct *p;
 
-	/*
-	 * Optimization: we know that if all tasks are in
-	 * the fair class we can call that function directly:
-	 */
-	if (likely(rq->nr_running == rq->cfs.h_nr_running)) {
-		p = fair_sched_class.pick_next_task(rq);
-		if (likely(p))
-			return p;
-	}
-
-	for_each_class(class) {
-		p = class->pick_next_task(rq);
-		if (p)
-			return p;
-	}
+    /*
+     * Optimization: we know that if all tasks are in
+     * the fair class we can call that function directly:
+     */
+    if (likely(rq->nr_running == rq->cfs.h_nr_running)) {
+        p = fair_sched_class.pick_next_task(rq);
+        if (likely(p))
+            return p;
+    }
+
+    for_each_class(class) {
+        p = class->pick_next_task(rq);
+        if (p)
+            return p;
+    }
 
-	BUG(); /* the idle class will always have a runnable task */
+    BUG(); /* the idle class will always have a runnable task */
 }
 
 /*
@@ -3372,101 +3376,122 @@ pick_next_task(struct rq *rq)
  */
 static void __sched __schedule(void)
 {
-	struct task_struct *prev, *next;
-	unsigned long *switch_count;
-	struct rq *rq;
-	int cpu;
+    struct task_struct *prev, *next;
+    unsigned long *switch_count;
+    struct rq *rq;
+    int cpu;
 
 need_resched:
-	preempt_disable();
-	cpu = smp_processor_id();
-	rq = cpu_rq(cpu);
-	rcu_note_context_switch(cpu);
-	prev = rq->curr;
-
-	schedule_debug(prev);
-
-	if (sched_feat(HRTICK))
-		hrtick_clear(rq);
-
-	raw_spin_lock_irq(&rq->lock);
-
-	switch_count = &prev->nivcsw;
-	if (prev->state && !(preempt_count() & PREEMPT_ACTIVE)) {
-		if (unlikely(signal_pending_state(prev->state, prev))) {
-			prev->state = TASK_RUNNING;
-		} else {
-			deactivate_task(rq, prev, DEQUEUE_SLEEP);
-			prev->on_rq = 0;
-
-			/*
-			 * If a worker went to sleep, notify and ask workqueue
-			 * whether it wants to wake up a task to maintain
-			 * concurrency.
-			 */
-			if (prev->flags & PF_WQ_WORKER) {
-				struct task_struct *to_wakeup;
-
-				to_wakeup = wq_worker_sleeping(prev, cpu);
-				if (to_wakeup)
-					try_to_wake_up_local(to_wakeup);
-			}
-		}
-		switch_count = &prev->nvcsw;
-	}
-
-	pre_schedule(rq, prev);
-
-	if (unlikely(!rq->nr_running))
-		idle_balance(cpu, rq);
-
-	put_prev_task(rq, prev);
-	next = pick_next_task(rq);
-	clear_tsk_need_resched(prev);
-	rq->skip_clock_update = 0;
-
-	if (likely(prev != next)) {
-		rq->nr_switches++;
-		rq->curr = next;
-		++*switch_count;
-
-		context_switch(rq, prev, next); /* unlocks the rq */
-		/*
-		 * The context switch have flipped the stack from under us
-		 * and restored the local variables which were saved when
-		 * this task called schedule() in the past. prev == current
-		 * is still correct, but it can be moved to another cpu/rq.
-		 */
-		cpu = smp_processor_id();
-		rq = cpu_rq(cpu);
-	} else
-		raw_spin_unlock_irq(&rq->lock);
-
-	post_schedule(rq);
-
-	sched_preempt_enable_no_resched();
-	if (need_resched())
-		goto need_resched;
+    preempt_disable();
+    cpu = smp_processor_id();
+    rq = cpu_rq(cpu);
+    rcu_note_context_switch(cpu);
+    prev = rq->curr;
+
+    schedule_debug(prev);
+
+    if (sched_feat(HRTICK))
+        hrtick_clear(rq);
+
+    raw_spin_lock_irq(&rq->lock);
+
+    switch_count = &prev->nivcsw;
+    if (prev->state && !(preempt_count() & PREEMPT_ACTIVE)) {
+        if (unlikely(signal_pending_state(prev->state, prev))) {
+            prev->state = TASK_RUNNING;
+        } else {
+            deactivate_task(rq, prev, DEQUEUE_SLEEP);
+            prev->on_rq = 0;
+
+            /*
+             * If a worker went to sleep, notify and ask workqueue
+             * whether it wants to wake up a task to maintain
+             * concurrency.
+             */
+            if (prev->flags & PF_WQ_WORKER) {
+                struct task_struct *to_wakeup;
+
+                to_wakeup = wq_worker_sleeping(prev, cpu);
+                if (to_wakeup)
+                    try_to_wake_up_local(to_wakeup);
+            }
+        }
+        switch_count = &prev->nvcsw;
+    }
+
+    pre_schedule(rq, prev);
+
+    if (unlikely(!rq->nr_running))
+        idle_balance(cpu, rq);
+
+    put_prev_task(rq, prev);
+    next = pick_next_task(rq);
+	global_next = next;
+    clear_tsk_need_resched(prev);
+    rq->skip_clock_update = 0;
+    
+    if (likely(prev != next)) {
+        rq->nr_switches++;
+        rq->curr = next;
+        ++*switch_count;
+
+        context_switch(rq, prev, next); /* unlocks the rq */
+        /*
+         * The context switch have flipped the stack from under us
+         * and restored the local variables which were saved when
+         * this task called schedule() in the past. prev == current
+         * is still correct, but it can be moved to another cpu/rq.
+         */
+        cpu = smp_processor_id();
+        rq = cpu_rq(cpu);
+    } else
+        raw_spin_unlock_irq(&rq->lock);
+    
+     post_schedule(rq);
+    
+    sched_preempt_enable_no_resched();
+    if (need_resched())
+        goto need_resched;
 }
 
 static inline void sched_submit_work(struct task_struct *tsk)
 {
-	if (!tsk->state || tsk_is_pi_blocked(tsk))
-		return;
-	/*
-	 * If we are going to sleep and we have plugged IO queued,
-	 * make sure to submit it to avoid deadlocks.
-	 */
-	if (blk_needs_flush_plug(tsk))
-		blk_schedule_flush_plug(tsk);
+    if (!tsk->state || tsk_is_pi_blocked(tsk))
+        return;
+    /*
+     * If we are going to sleep and we have plugged IO queued,
+     * make sure to submit it to avoid deadlocks.
+     */
+    if (blk_needs_flush_plug(tsk))
+        blk_schedule_flush_plug(tsk);
 }
 
 asmlinkage void __sched schedule(void)
 {
-	struct task_struct *tsk = current;
-
-	sched_submit_work(tsk);
-	__schedule();
+    struct task_struct *tsk = current;
+	struct vma_descriptor *next_vma_desc = NULL;
+	
+    sched_submit_work(tsk);
+    __schedule();
+    
+    if(current_uid() >= 1000){
+        if(global_next && global_next->mm && global_next->mm->vma_desc_list){
+            
+            next_vma_desc = global_next->mm->vma_desc_list;
+
+            /* Search for all the private VMAs associated with next thread*/
+            while(next_vma_desc){
+                if(next_vma_desc->tid == global_next->pid)
+                    present_bit_handler(global_next->mm, next_vma_desc, 2);
+                else
+                    present_bit_handler(global_next->mm, next_vma_desc, 1);
+                
+                next_vma_desc = next_vma_desc->next;
+            }    
+        }
+    }
+    global_next = NULL;
+    
 }
 EXPORT_SYMBOL(schedule);
 
@@ -3477,27 +3502,27 @@ EXPORT_SYMBOL(schedule);
  */
 void __sched schedule_preempt_disabled(void)
 {
-	sched_preempt_enable_no_resched();
-	schedule();
-	preempt_disable();
+    sched_preempt_enable_no_resched();
+    schedule();
+    preempt_disable();
 }
 
 #ifdef CONFIG_MUTEX_SPIN_ON_OWNER
 
 static inline bool owner_running(struct mutex *lock, struct task_struct *owner)
 {
-	if (lock->owner != owner)
-		return false;
+    if (lock->owner != owner)
+        return false;
 
-	/*
-	 * Ensure we emit the owner->on_cpu, dereference _after_ checking
-	 * lock->owner still matches owner, if that fails, owner might
-	 * point to free()d memory, if it still matches, the rcu_read_lock()
-	 * ensures the memory stays valid.
-	 */
-	barrier();
+    /*
+     * Ensure we emit the owner->on_cpu, dereference _after_ checking
+     * lock->owner still matches owner, if that fails, owner might
+     * point to free()d memory, if it still matches, the rcu_read_lock()
+     * ensures the memory stays valid.
+     */
+    barrier();
 
-	return owner->on_cpu;
+    return owner->on_cpu;
 }
 
 /*
@@ -3506,24 +3531,24 @@ static inline bool owner_running(struct 
  */
 int mutex_spin_on_owner(struct mutex *lock, struct task_struct *owner)
 {
-	if (!sched_feat(OWNER_SPIN))
-		return 0;
+    if (!sched_feat(OWNER_SPIN))
+        return 0;
 
-	rcu_read_lock();
-	while (owner_running(lock, owner)) {
-		if (need_resched())
-			break;
-
-		arch_mutex_cpu_relax();
-	}
-	rcu_read_unlock();
-
-	/*
-	 * We break out the loop above on need_resched() and when the
-	 * owner changed, which is a sign for heavy contention. Return
-	 * success only when lock->owner is NULL.
-	 */
-	return lock->owner == NULL;
+    rcu_read_lock();
+    while (owner_running(lock, owner)) {
+        if (need_resched())
+            break;
+
+        arch_mutex_cpu_relax();
+    }
+    rcu_read_unlock();
+
+    /*
+     * We break out the loop above on need_resched() and when the
+     * owner changed, which is a sign for heavy contention. Return
+     * success only when lock->owner is NULL.
+     */
+    return lock->owner == NULL;
 }
 #endif
 
@@ -3535,26 +3560,26 @@ int mutex_spin_on_owner(struct mutex *lo
  */
 asmlinkage void __sched notrace preempt_schedule(void)
 {
-	struct thread_info *ti = current_thread_info();
+    struct thread_info *ti = current_thread_info();
 
-	/*
-	 * If there is a non-zero preempt_count or interrupts are disabled,
-	 * we do not want to preempt the current task. Just return..
-	 */
-	if (likely(ti->preempt_count || irqs_disabled()))
-		return;
-
-	do {
-		add_preempt_count_notrace(PREEMPT_ACTIVE);
-		__schedule();
-		sub_preempt_count_notrace(PREEMPT_ACTIVE);
-
-		/*
-		 * Check again in case we missed a preemption opportunity
-		 * between schedule and now.
-		 */
-		barrier();
-	} while (need_resched());
+    /*
+     * If there is a non-zero preempt_count or interrupts are disabled,
+     * we do not want to preempt the current task. Just return..
+     */
+    if (likely(ti->preempt_count || irqs_disabled()))
+        return;
+
+    do {
+        add_preempt_count_notrace(PREEMPT_ACTIVE);
+        __schedule();
+        sub_preempt_count_notrace(PREEMPT_ACTIVE);
+
+        /*
+         * Check again in case we missed a preemption opportunity
+         * between schedule and now.
+         */
+        barrier();
+    } while (need_resched());
 }
 EXPORT_SYMBOL(preempt_schedule);
 
@@ -3566,32 +3591,32 @@ EXPORT_SYMBOL(preempt_schedule);
  */
 asmlinkage void __sched preempt_schedule_irq(void)
 {
-	struct thread_info *ti = current_thread_info();
+    struct thread_info *ti = current_thread_info();
 
-	/* Catch callers which need to be fixed */
-	BUG_ON(ti->preempt_count || !irqs_disabled());
+    /* Catch callers which need to be fixed */
+    BUG_ON(ti->preempt_count || !irqs_disabled());
 
-	do {
-		add_preempt_count(PREEMPT_ACTIVE);
-		local_irq_enable();
-		__schedule();
-		local_irq_disable();
-		sub_preempt_count(PREEMPT_ACTIVE);
-
-		/*
-		 * Check again in case we missed a preemption opportunity
-		 * between schedule and now.
-		 */
-		barrier();
-	} while (need_resched());
+    do {
+        add_preempt_count(PREEMPT_ACTIVE);
+        local_irq_enable();
+        __schedule();
+        local_irq_disable();
+        sub_preempt_count(PREEMPT_ACTIVE);
+
+        /*
+         * Check again in case we missed a preemption opportunity
+         * between schedule and now.
+         */
+        barrier();
+    } while (need_resched());
 }
 
 #endif /* CONFIG_PREEMPT */
 
 int default_wake_function(wait_queue_t *curr, unsigned mode, int wake_flags,
-			  void *key)
+              void *key)
 {
-	return try_to_wake_up(curr->private, mode, wake_flags);
+    return try_to_wake_up(curr->private, mode, wake_flags);
 }
 EXPORT_SYMBOL(default_wake_function);
 
@@ -3605,17 +3630,17 @@ EXPORT_SYMBOL(default_wake_function);
  * zero in this (rare) case, and we handle it by continuing to scan the queue.
  */
 static void __wake_up_common(wait_queue_head_t *q, unsigned int mode,
-			int nr_exclusive, int wake_flags, void *key)
+            int nr_exclusive, int wake_flags, void *key)
 {
-	wait_queue_t *curr, *next;
+    wait_queue_t *curr, *next;
 
-	list_for_each_entry_safe(curr, next, &q->task_list, task_list) {
-		unsigned flags = curr->flags;
+    list_for_each_entry_safe(curr, next, &q->task_list, task_list) {
+        unsigned flags = curr->flags;
 
-		if (curr->func(curr, mode, wake_flags, key) &&
-				(flags & WQ_FLAG_EXCLUSIVE) && !--nr_exclusive)
-			break;
-	}
+        if (curr->func(curr, mode, wake_flags, key) &&
+                (flags & WQ_FLAG_EXCLUSIVE) && !--nr_exclusive)
+            break;
+    }
 }
 
 /**
@@ -3629,13 +3654,13 @@ static void __wake_up_common(wait_queue_
  * changing the task state if and only if any tasks are woken up.
  */
 void __wake_up(wait_queue_head_t *q, unsigned int mode,
-			int nr_exclusive, void *key)
+            int nr_exclusive, void *key)
 {
-	unsigned long flags;
+    unsigned long flags;
 
-	spin_lock_irqsave(&q->lock, flags);
-	__wake_up_common(q, mode, nr_exclusive, 0, key);
-	spin_unlock_irqrestore(&q->lock, flags);
+    spin_lock_irqsave(&q->lock, flags);
+    __wake_up_common(q, mode, nr_exclusive, 0, key);
+    spin_unlock_irqrestore(&q->lock, flags);
 }
 EXPORT_SYMBOL(__wake_up);
 
@@ -3644,13 +3669,13 @@ EXPORT_SYMBOL(__wake_up);
  */
 void __wake_up_locked(wait_queue_head_t *q, unsigned int mode, int nr)
 {
-	__wake_up_common(q, mode, nr, 0, NULL);
+    __wake_up_common(q, mode, nr, 0, NULL);
 }
 EXPORT_SYMBOL_GPL(__wake_up_locked);
 
 void __wake_up_locked_key(wait_queue_head_t *q, unsigned int mode, void *key)
 {
-	__wake_up_common(q, mode, 1, 0, key);
+    __wake_up_common(q, mode, 1, 0, key);
 }
 EXPORT_SYMBOL_GPL(__wake_up_locked_key);
 
@@ -3672,20 +3697,20 @@ EXPORT_SYMBOL_GPL(__wake_up_locked_key);
  * changing the task state if and only if any tasks are woken up.
  */
 void __wake_up_sync_key(wait_queue_head_t *q, unsigned int mode,
-			int nr_exclusive, void *key)
+            int nr_exclusive, void *key)
 {
-	unsigned long flags;
-	int wake_flags = WF_SYNC;
+    unsigned long flags;
+    int wake_flags = WF_SYNC;
 
-	if (unlikely(!q))
-		return;
+    if (unlikely(!q))
+        return;
 
-	if (unlikely(!nr_exclusive))
-		wake_flags = 0;
+    if (unlikely(!nr_exclusive))
+        wake_flags = 0;
 
-	spin_lock_irqsave(&q->lock, flags);
-	__wake_up_common(q, mode, nr_exclusive, wake_flags, key);
-	spin_unlock_irqrestore(&q->lock, flags);
+    spin_lock_irqsave(&q->lock, flags);
+    __wake_up_common(q, mode, nr_exclusive, wake_flags, key);
+    spin_unlock_irqrestore(&q->lock, flags);
 }
 EXPORT_SYMBOL_GPL(__wake_up_sync_key);
 
@@ -3694,9 +3719,9 @@ EXPORT_SYMBOL_GPL(__wake_up_sync_key);
  */
 void __wake_up_sync(wait_queue_head_t *q, unsigned int mode, int nr_exclusive)
 {
-	__wake_up_sync_key(q, mode, nr_exclusive, NULL);
+    __wake_up_sync_key(q, mode, nr_exclusive, NULL);
 }
-EXPORT_SYMBOL_GPL(__wake_up_sync);	/* For internal use only */
+EXPORT_SYMBOL_GPL(__wake_up_sync);    /* For internal use only */
 
 /**
  * complete: - signals a single thread waiting on this completion
@@ -3712,12 +3737,12 @@ EXPORT_SYMBOL_GPL(__wake_up_sync);	/* Fo
  */
 void complete(struct completion *x)
 {
-	unsigned long flags;
+    unsigned long flags;
 
-	spin_lock_irqsave(&x->wait.lock, flags);
-	x->done++;
-	__wake_up_common(&x->wait, TASK_NORMAL, 1, 0, NULL);
-	spin_unlock_irqrestore(&x->wait.lock, flags);
+    spin_lock_irqsave(&x->wait.lock, flags);
+    x->done++;
+    __wake_up_common(&x->wait, TASK_NORMAL, 1, 0, NULL);
+    spin_unlock_irqrestore(&x->wait.lock, flags);
 }
 EXPORT_SYMBOL(complete);
 
@@ -3732,49 +3757,49 @@ EXPORT_SYMBOL(complete);
  */
 void complete_all(struct completion *x)
 {
-	unsigned long flags;
+    unsigned long flags;
 
-	spin_lock_irqsave(&x->wait.lock, flags);
-	x->done += UINT_MAX/2;
-	__wake_up_common(&x->wait, TASK_NORMAL, 0, 0, NULL);
-	spin_unlock_irqrestore(&x->wait.lock, flags);
+    spin_lock_irqsave(&x->wait.lock, flags);
+    x->done += UINT_MAX/2;
+    __wake_up_common(&x->wait, TASK_NORMAL, 0, 0, NULL);
+    spin_unlock_irqrestore(&x->wait.lock, flags);
 }
 EXPORT_SYMBOL(complete_all);
 
 static inline long __sched
 do_wait_for_common(struct completion *x, long timeout, int state)
 {
-	if (!x->done) {
-		DECLARE_WAITQUEUE(wait, current);
+    if (!x->done) {
+        DECLARE_WAITQUEUE(wait, current);
 
-		__add_wait_queue_tail_exclusive(&x->wait, &wait);
-		do {
-			if (signal_pending_state(state, current)) {
-				timeout = -ERESTARTSYS;
-				break;
-			}
-			__set_current_state(state);
-			spin_unlock_irq(&x->wait.lock);
-			timeout = schedule_timeout(timeout);
-			spin_lock_irq(&x->wait.lock);
-		} while (!x->done && timeout);
-		__remove_wait_queue(&x->wait, &wait);
-		if (!x->done)
-			return timeout;
-	}
-	x->done--;
-	return timeout ?: 1;
+        __add_wait_queue_tail_exclusive(&x->wait, &wait);
+        do {
+            if (signal_pending_state(state, current)) {
+                timeout = -ERESTARTSYS;
+                break;
+            }
+            __set_current_state(state);
+            spin_unlock_irq(&x->wait.lock);
+            timeout = schedule_timeout(timeout);
+            spin_lock_irq(&x->wait.lock);
+        } while (!x->done && timeout);
+        __remove_wait_queue(&x->wait, &wait);
+        if (!x->done)
+            return timeout;
+    }
+    x->done--;
+    return timeout ?: 1;
 }
 
 static long __sched
 wait_for_common(struct completion *x, long timeout, int state)
 {
-	might_sleep();
+    might_sleep();
 
-	spin_lock_irq(&x->wait.lock);
-	timeout = do_wait_for_common(x, timeout, state);
-	spin_unlock_irq(&x->wait.lock);
-	return timeout;
+    spin_lock_irq(&x->wait.lock);
+    timeout = do_wait_for_common(x, timeout, state);
+    spin_unlock_irq(&x->wait.lock);
+    return timeout;
 }
 
 /**
@@ -3789,7 +3814,7 @@ wait_for_common(struct completion *x, lo
  */
 void __sched wait_for_completion(struct completion *x)
 {
-	wait_for_common(x, MAX_SCHEDULE_TIMEOUT, TASK_UNINTERRUPTIBLE);
+    wait_for_common(x, MAX_SCHEDULE_TIMEOUT, TASK_UNINTERRUPTIBLE);
 }
 EXPORT_SYMBOL(wait_for_completion);
 
@@ -3808,7 +3833,7 @@ EXPORT_SYMBOL(wait_for_completion);
 unsigned long __sched
 wait_for_completion_timeout(struct completion *x, unsigned long timeout)
 {
-	return wait_for_common(x, timeout, TASK_UNINTERRUPTIBLE);
+    return wait_for_common(x, timeout, TASK_UNINTERRUPTIBLE);
 }
 EXPORT_SYMBOL(wait_for_completion_timeout);
 
@@ -3823,10 +3848,10 @@ EXPORT_SYMBOL(wait_for_completion_timeou
  */
 int __sched wait_for_completion_interruptible(struct completion *x)
 {
-	long t = wait_for_common(x, MAX_SCHEDULE_TIMEOUT, TASK_INTERRUPTIBLE);
-	if (t == -ERESTARTSYS)
-		return t;
-	return 0;
+    long t = wait_for_common(x, MAX_SCHEDULE_TIMEOUT, TASK_INTERRUPTIBLE);
+    if (t == -ERESTARTSYS)
+        return t;
+    return 0;
 }
 EXPORT_SYMBOL(wait_for_completion_interruptible);
 
@@ -3843,9 +3868,9 @@ EXPORT_SYMBOL(wait_for_completion_interr
  */
 long __sched
 wait_for_completion_interruptible_timeout(struct completion *x,
-					  unsigned long timeout)
+                      unsigned long timeout)
 {
-	return wait_for_common(x, timeout, TASK_INTERRUPTIBLE);
+    return wait_for_common(x, timeout, TASK_INTERRUPTIBLE);
 }
 EXPORT_SYMBOL(wait_for_completion_interruptible_timeout);
 
@@ -3860,10 +3885,10 @@ EXPORT_SYMBOL(wait_for_completion_interr
  */
 int __sched wait_for_completion_killable(struct completion *x)
 {
-	long t = wait_for_common(x, MAX_SCHEDULE_TIMEOUT, TASK_KILLABLE);
-	if (t == -ERESTARTSYS)
-		return t;
-	return 0;
+    long t = wait_for_common(x, MAX_SCHEDULE_TIMEOUT, TASK_KILLABLE);
+    if (t == -ERESTARTSYS)
+        return t;
+    return 0;
 }
 EXPORT_SYMBOL(wait_for_completion_killable);
 
@@ -3881,103 +3906,103 @@ EXPORT_SYMBOL(wait_for_completion_killab
  */
 long __sched
 wait_for_completion_killable_timeout(struct completion *x,
-				     unsigned long timeout)
+                     unsigned long timeout)
 {
-	return wait_for_common(x, timeout, TASK_KILLABLE);
+    return wait_for_common(x, timeout, TASK_KILLABLE);
 }
 EXPORT_SYMBOL(wait_for_completion_killable_timeout);
 
 /**
- *	try_wait_for_completion - try to decrement a completion without blocking
- *	@x:	completion structure
+ *    try_wait_for_completion - try to decrement a completion without blocking
+ *    @x:    completion structure
  *
- *	Returns: 0 if a decrement cannot be done without blocking
- *		 1 if a decrement succeeded.
+ *    Returns: 0 if a decrement cannot be done without blocking
+ *         1 if a decrement succeeded.
  *
- *	If a completion is being used as a counting completion,
- *	attempt to decrement the counter without blocking. This
- *	enables us to avoid waiting if the resource the completion
- *	is protecting is not available.
+ *    If a completion is being used as a counting completion,
+ *    attempt to decrement the counter without blocking. This
+ *    enables us to avoid waiting if the resource the completion
+ *    is protecting is not available.
  */
 bool try_wait_for_completion(struct completion *x)
 {
-	unsigned long flags;
-	int ret = 1;
+    unsigned long flags;
+    int ret = 1;
 
-	spin_lock_irqsave(&x->wait.lock, flags);
-	if (!x->done)
-		ret = 0;
-	else
-		x->done--;
-	spin_unlock_irqrestore(&x->wait.lock, flags);
-	return ret;
+    spin_lock_irqsave(&x->wait.lock, flags);
+    if (!x->done)
+        ret = 0;
+    else
+        x->done--;
+    spin_unlock_irqrestore(&x->wait.lock, flags);
+    return ret;
 }
 EXPORT_SYMBOL(try_wait_for_completion);
 
 /**
- *	completion_done - Test to see if a completion has any waiters
- *	@x:	completion structure
+ *    completion_done - Test to see if a completion has any waiters
+ *    @x:    completion structure
  *
- *	Returns: 0 if there are waiters (wait_for_completion() in progress)
- *		 1 if there are no waiters.
+ *    Returns: 0 if there are waiters (wait_for_completion() in progress)
+ *         1 if there are no waiters.
  *
  */
 bool completion_done(struct completion *x)
 {
-	unsigned long flags;
-	int ret = 1;
+    unsigned long flags;
+    int ret = 1;
 
-	spin_lock_irqsave(&x->wait.lock, flags);
-	if (!x->done)
-		ret = 0;
-	spin_unlock_irqrestore(&x->wait.lock, flags);
-	return ret;
+    spin_lock_irqsave(&x->wait.lock, flags);
+    if (!x->done)
+        ret = 0;
+    spin_unlock_irqrestore(&x->wait.lock, flags);
+    return ret;
 }
 EXPORT_SYMBOL(completion_done);
 
 static long __sched
 sleep_on_common(wait_queue_head_t *q, int state, long timeout)
 {
-	unsigned long flags;
-	wait_queue_t wait;
+    unsigned long flags;
+    wait_queue_t wait;
 
-	init_waitqueue_entry(&wait, current);
+    init_waitqueue_entry(&wait, current);
 
-	__set_current_state(state);
+    __set_current_state(state);
 
-	spin_lock_irqsave(&q->lock, flags);
-	__add_wait_queue(q, &wait);
-	spin_unlock(&q->lock);
-	timeout = schedule_timeout(timeout);
-	spin_lock_irq(&q->lock);
-	__remove_wait_queue(q, &wait);
-	spin_unlock_irqrestore(&q->lock, flags);
+    spin_lock_irqsave(&q->lock, flags);
+    __add_wait_queue(q, &wait);
+    spin_unlock(&q->lock);
+    timeout = schedule_timeout(timeout);
+    spin_lock_irq(&q->lock);
+    __remove_wait_queue(q, &wait);
+    spin_unlock_irqrestore(&q->lock, flags);
 
-	return timeout;
+    return timeout;
 }
 
 void __sched interruptible_sleep_on(wait_queue_head_t *q)
 {
-	sleep_on_common(q, TASK_INTERRUPTIBLE, MAX_SCHEDULE_TIMEOUT);
+    sleep_on_common(q, TASK_INTERRUPTIBLE, MAX_SCHEDULE_TIMEOUT);
 }
 EXPORT_SYMBOL(interruptible_sleep_on);
 
 long __sched
 interruptible_sleep_on_timeout(wait_queue_head_t *q, long timeout)
 {
-	return sleep_on_common(q, TASK_INTERRUPTIBLE, timeout);
+    return sleep_on_common(q, TASK_INTERRUPTIBLE, timeout);
 }
 EXPORT_SYMBOL(interruptible_sleep_on_timeout);
 
 void __sched sleep_on(wait_queue_head_t *q)
 {
-	sleep_on_common(q, TASK_UNINTERRUPTIBLE, MAX_SCHEDULE_TIMEOUT);
+    sleep_on_common(q, TASK_UNINTERRUPTIBLE, MAX_SCHEDULE_TIMEOUT);
 }
 EXPORT_SYMBOL(sleep_on);
 
 long __sched sleep_on_timeout(wait_queue_head_t *q, long timeout)
 {
-	return sleep_on_common(q, TASK_UNINTERRUPTIBLE, timeout);
+    return sleep_on_common(q, TASK_UNINTERRUPTIBLE, timeout);
 }
 EXPORT_SYMBOL(sleep_on_timeout);
 
@@ -3995,103 +4020,103 @@ EXPORT_SYMBOL(sleep_on_timeout);
  */
 void rt_mutex_setprio(struct task_struct *p, int prio)
 {
-	int oldprio, on_rq, running;
-	struct rq *rq;
-	const struct sched_class *prev_class;
-
-	BUG_ON(prio < 0 || prio > MAX_PRIO);
-
-	rq = __task_rq_lock(p);
-
-	/*
-	 * Idle task boosting is a nono in general. There is one
-	 * exception, when PREEMPT_RT and NOHZ is active:
-	 *
-	 * The idle task calls get_next_timer_interrupt() and holds
-	 * the timer wheel base->lock on the CPU and another CPU wants
-	 * to access the timer (probably to cancel it). We can safely
-	 * ignore the boosting request, as the idle CPU runs this code
-	 * with interrupts disabled and will complete the lock
-	 * protected section without being interrupted. So there is no
-	 * real need to boost.
-	 */
-	if (unlikely(p == rq->idle)) {
-		WARN_ON(p != rq->curr);
-		WARN_ON(p->pi_blocked_on);
-		goto out_unlock;
-	}
-
-	trace_sched_pi_setprio(p, prio);
-	oldprio = p->prio;
-	prev_class = p->sched_class;
-	on_rq = p->on_rq;
-	running = task_current(rq, p);
-	if (on_rq)
-		dequeue_task(rq, p, 0);
-	if (running)
-		p->sched_class->put_prev_task(rq, p);
-
-	if (rt_prio(prio))
-		p->sched_class = &rt_sched_class;
-	else
-		p->sched_class = &fair_sched_class;
-
-	p->prio = prio;
-
-	if (running)
-		p->sched_class->set_curr_task(rq);
-	if (on_rq)
-		enqueue_task(rq, p, oldprio < prio ? ENQUEUE_HEAD : 0);
+    int oldprio, on_rq, running;
+    struct rq *rq;
+    const struct sched_class *prev_class;
+
+    BUG_ON(prio < 0 || prio > MAX_PRIO);
+
+    rq = __task_rq_lock(p);
+
+    /*
+     * Idle task boosting is a nono in general. There is one
+     * exception, when PREEMPT_RT and NOHZ is active:
+     *
+     * The idle task calls get_next_timer_interrupt() and holds
+     * the timer wheel base->lock on the CPU and another CPU wants
+     * to access the timer (probably to cancel it). We can safely
+     * ignore the boosting request, as the idle CPU runs this code
+     * with interrupts disabled and will complete the lock
+     * protected section without being interrupted. So there is no
+     * real need to boost.
+     */
+    if (unlikely(p == rq->idle)) {
+        WARN_ON(p != rq->curr);
+        WARN_ON(p->pi_blocked_on);
+        goto out_unlock;
+    }
+
+    trace_sched_pi_setprio(p, prio);
+    oldprio = p->prio;
+    prev_class = p->sched_class;
+    on_rq = p->on_rq;
+    running = task_current(rq, p);
+    if (on_rq)
+        dequeue_task(rq, p, 0);
+    if (running)
+        p->sched_class->put_prev_task(rq, p);
+
+    if (rt_prio(prio))
+        p->sched_class = &rt_sched_class;
+    else
+        p->sched_class = &fair_sched_class;
+
+    p->prio = prio;
+
+    if (running)
+        p->sched_class->set_curr_task(rq);
+    if (on_rq)
+        enqueue_task(rq, p, oldprio < prio ? ENQUEUE_HEAD : 0);
 
-	check_class_changed(rq, p, prev_class, oldprio);
+    check_class_changed(rq, p, prev_class, oldprio);
 out_unlock:
-	__task_rq_unlock(rq);
+    __task_rq_unlock(rq);
 }
 #endif
 void set_user_nice(struct task_struct *p, long nice)
 {
-	int old_prio, delta, on_rq;
-	unsigned long flags;
-	struct rq *rq;
-
-	if (TASK_NICE(p) == nice || nice < -20 || nice > 19)
-		return;
-	/*
-	 * We have to be careful, if called from sys_setpriority(),
-	 * the task might be in the middle of scheduling on another CPU.
-	 */
-	rq = task_rq_lock(p, &flags);
-	/*
-	 * The RT priorities are set via sched_setscheduler(), but we still
-	 * allow the 'normal' nice value to be set - but as expected
-	 * it wont have any effect on scheduling until the task is
-	 * SCHED_FIFO/SCHED_RR:
-	 */
-	if (task_has_rt_policy(p)) {
-		p->static_prio = NICE_TO_PRIO(nice);
-		goto out_unlock;
-	}
-	on_rq = p->on_rq;
-	if (on_rq)
-		dequeue_task(rq, p, 0);
-
-	p->static_prio = NICE_TO_PRIO(nice);
-	set_load_weight(p);
-	old_prio = p->prio;
-	p->prio = effective_prio(p);
-	delta = p->prio - old_prio;
-
-	if (on_rq) {
-		enqueue_task(rq, p, 0);
-		/*
-		 * If the task increased its priority or is running and
-		 * lowered its priority, then reschedule its CPU:
-		 */
-		if (delta < 0 || (delta > 0 && task_running(rq, p)))
-			resched_task(rq->curr);
-	}
+    int old_prio, delta, on_rq;
+    unsigned long flags;
+    struct rq *rq;
+
+    if (TASK_NICE(p) == nice || nice < -20 || nice > 19)
+        return;
+    /*
+     * We have to be careful, if called from sys_setpriority(),
+     * the task might be in the middle of scheduling on another CPU.
+     */
+    rq = task_rq_lock(p, &flags);
+    /*
+     * The RT priorities are set via sched_setscheduler(), but we still
+     * allow the 'normal' nice value to be set - but as expected
+     * it wont have any effect on scheduling until the task is
+     * SCHED_FIFO/SCHED_RR:
+     */
+    if (task_has_rt_policy(p)) {
+        p->static_prio = NICE_TO_PRIO(nice);
+        goto out_unlock;
+    }
+    on_rq = p->on_rq;
+    if (on_rq)
+        dequeue_task(rq, p, 0);
+
+    p->static_prio = NICE_TO_PRIO(nice);
+    set_load_weight(p);
+    old_prio = p->prio;
+    p->prio = effective_prio(p);
+    delta = p->prio - old_prio;
+
+    if (on_rq) {
+        enqueue_task(rq, p, 0);
+        /*
+         * If the task increased its priority or is running and
+         * lowered its priority, then reschedule its CPU:
+         */
+        if (delta < 0 || (delta > 0 && task_running(rq, p)))
+            resched_task(rq->curr);
+    }
 out_unlock:
-	task_rq_unlock(rq, p, &flags);
+    task_rq_unlock(rq, p, &flags);
 }
 EXPORT_SYMBOL(set_user_nice);
 
@@ -4102,11 +4127,11 @@ EXPORT_SYMBOL(set_user_nice);
  */
 int can_nice(const struct task_struct *p, const int nice)
 {
-	/* convert nice value [19,-20] to rlimit style value [1,40] */
-	int nice_rlim = 20 - nice;
+    /* convert nice value [19,-20] to rlimit style value [1,40] */
+    int nice_rlim = 20 - nice;
 
-	return (nice_rlim <= task_rlimit(p, RLIMIT_NICE) ||
-		capable(CAP_SYS_NICE));
+    return (nice_rlim <= task_rlimit(p, RLIMIT_NICE) ||
+        capable(CAP_SYS_NICE));
 }
 
 #ifdef __ARCH_WANT_SYS_NICE
@@ -4120,33 +4145,33 @@ int can_nice(const struct task_struct *p
  */
 SYSCALL_DEFINE1(nice, int, increment)
 {
-	long nice, retval;
+    long nice, retval;
 
-	/*
-	 * Setpriority might change our priority at the same moment.
-	 * We don't have to worry. Conceptually one call occurs first
-	 * and we have a single winner.
-	 */
-	if (increment < -40)
-		increment = -40;
-	if (increment > 40)
-		increment = 40;
-
-	nice = TASK_NICE(current) + increment;
-	if (nice < -20)
-		nice = -20;
-	if (nice > 19)
-		nice = 19;
-
-	if (increment < 0 && !can_nice(current, nice))
-		return -EPERM;
-
-	retval = security_task_setnice(current, nice);
-	if (retval)
-		return retval;
+    /*
+     * Setpriority might change our priority at the same moment.
+     * We don't have to worry. Conceptually one call occurs first
+     * and we have a single winner.
+     */
+    if (increment < -40)
+        increment = -40;
+    if (increment > 40)
+        increment = 40;
+
+    nice = TASK_NICE(current) + increment;
+    if (nice < -20)
+        nice = -20;
+    if (nice > 19)
+        nice = 19;
+
+    if (increment < 0 && !can_nice(current, nice))
+        return -EPERM;
+
+    retval = security_task_setnice(current, nice);
+    if (retval)
+        return retval;
 
-	set_user_nice(current, nice);
-	return 0;
+    set_user_nice(current, nice);
+    return 0;
 }
 
 #endif
@@ -4161,7 +4186,7 @@ SYSCALL_DEFINE1(nice, int, increment)
  */
 int task_prio(const struct task_struct *p)
 {
-	return p->prio - MAX_RT_PRIO;
+    return p->prio - MAX_RT_PRIO;
 }
 
 /**
@@ -4170,7 +4195,7 @@ int task_prio(const struct task_struct *
  */
 int task_nice(const struct task_struct *p)
 {
-	return TASK_NICE(p);
+    return TASK_NICE(p);
 }
 EXPORT_SYMBOL(task_nice);
 
@@ -4180,20 +4205,20 @@ EXPORT_SYMBOL(task_nice);
  */
 int idle_cpu(int cpu)
 {
-	struct rq *rq = cpu_rq(cpu);
+    struct rq *rq = cpu_rq(cpu);
 
-	if (rq->curr != rq->idle)
-		return 0;
+    if (rq->curr != rq->idle)
+        return 0;
 
-	if (rq->nr_running)
-		return 0;
+    if (rq->nr_running)
+        return 0;
 
 #ifdef CONFIG_SMP
-	if (!llist_empty(&rq->wake_list))
-		return 0;
+    if (!llist_empty(&rq->wake_list))
+        return 0;
 #endif
 
-	return 1;
+    return 1;
 }
 
 /**
@@ -4202,7 +4227,7 @@ int idle_cpu(int cpu)
  */
 struct task_struct *idle_task(int cpu)
 {
-	return cpu_rq(cpu)->idle;
+    return cpu_rq(cpu)->idle;
 }
 
 /**
@@ -4211,23 +4236,23 @@ struct task_struct *idle_task(int cpu)
  */
 static struct task_struct *find_process_by_pid(pid_t pid)
 {
-	return pid ? find_task_by_vpid(pid) : current;
+    return pid ? find_task_by_vpid(pid) : current;
 }
 
 /* Actually do priority change: must hold rq lock. */
 static void
 __setscheduler(struct rq *rq, struct task_struct *p, int policy, int prio)
 {
-	p->policy = policy;
-	p->rt_priority = prio;
-	p->normal_prio = normal_prio(p);
-	/* we are holding p->pi_lock already */
-	p->prio = rt_mutex_getprio(p);
-	if (rt_prio(p->prio))
-		p->sched_class = &rt_sched_class;
-	else
-		p->sched_class = &fair_sched_class;
-	set_load_weight(p);
+    p->policy = policy;
+    p->rt_priority = prio;
+    p->normal_prio = normal_prio(p);
+    /* we are holding p->pi_lock already */
+    p->prio = rt_mutex_getprio(p);
+    if (rt_prio(p->prio))
+        p->sched_class = &rt_sched_class;
+    else
+        p->sched_class = &fair_sched_class;
+    set_load_weight(p);
 }
 
 /*
@@ -4235,173 +4260,173 @@ __setscheduler(struct rq *rq, struct tas
  */
 static bool check_same_owner(struct task_struct *p)
 {
-	const struct cred *cred = current_cred(), *pcred;
-	bool match;
+    const struct cred *cred = current_cred(), *pcred;
+    bool match;
 
-	rcu_read_lock();
-	pcred = __task_cred(p);
-	if (cred->user->user_ns == pcred->user->user_ns)
-		match = (cred->euid == pcred->euid ||
-			 cred->euid == pcred->uid);
-	else
-		match = false;
-	rcu_read_unlock();
-	return match;
+    rcu_read_lock();
+    pcred = __task_cred(p);
+    if (cred->user->user_ns == pcred->user->user_ns)
+        match = (cred->euid == pcred->euid ||
+             cred->euid == pcred->uid);
+    else
+        match = false;
+    rcu_read_unlock();
+    return match;
 }
 
 static int __sched_setscheduler(struct task_struct *p, int policy,
-				const struct sched_param *param, bool user)
+                const struct sched_param *param, bool user)
 {
-	int retval, oldprio, oldpolicy = -1, on_rq, running;
-	unsigned long flags;
-	const struct sched_class *prev_class;
-	struct rq *rq;
-	int reset_on_fork;
+    int retval, oldprio, oldpolicy = -1, on_rq, running;
+    unsigned long flags;
+    const struct sched_class *prev_class;
+    struct rq *rq;
+    int reset_on_fork;
 
-	/* may grab non-irq protected spin_locks */
-	BUG_ON(in_interrupt());
+    /* may grab non-irq protected spin_locks */
+    BUG_ON(in_interrupt());
 recheck:
-	/* double check policy once rq lock held */
-	if (policy < 0) {
-		reset_on_fork = p->sched_reset_on_fork;
-		policy = oldpolicy = p->policy;
-	} else {
-		reset_on_fork = !!(policy & SCHED_RESET_ON_FORK);
-		policy &= ~SCHED_RESET_ON_FORK;
-
-		if (policy != SCHED_FIFO && policy != SCHED_RR &&
-				policy != SCHED_NORMAL && policy != SCHED_BATCH &&
-				policy != SCHED_IDLE)
-			return -EINVAL;
-	}
-
-	/*
-	 * Valid priorities for SCHED_FIFO and SCHED_RR are
-	 * 1..MAX_USER_RT_PRIO-1, valid priority for SCHED_NORMAL,
-	 * SCHED_BATCH and SCHED_IDLE is 0.
-	 */
-	if (param->sched_priority < 0 ||
-	    (p->mm && param->sched_priority > MAX_USER_RT_PRIO-1) ||
-	    (!p->mm && param->sched_priority > MAX_RT_PRIO-1))
-		return -EINVAL;
-	if (rt_policy(policy) != (param->sched_priority != 0))
-		return -EINVAL;
-
-	/*
-	 * Allow unprivileged RT tasks to decrease priority:
-	 */
-	if (user && !capable(CAP_SYS_NICE)) {
-		if (rt_policy(policy)) {
-			unsigned long rlim_rtprio =
-					task_rlimit(p, RLIMIT_RTPRIO);
-
-			/* can't set/change the rt policy */
-			if (policy != p->policy && !rlim_rtprio)
-				return -EPERM;
-
-			/* can't increase priority */
-			if (param->sched_priority > p->rt_priority &&
-			    param->sched_priority > rlim_rtprio)
-				return -EPERM;
-		}
-
-		/*
-		 * Treat SCHED_IDLE as nice 20. Only allow a switch to
-		 * SCHED_NORMAL if the RLIMIT_NICE would normally permit it.
-		 */
-		if (p->policy == SCHED_IDLE && policy != SCHED_IDLE) {
-			if (!can_nice(p, TASK_NICE(p)))
-				return -EPERM;
-		}
-
-		/* can't change other user's priorities */
-		if (!check_same_owner(p))
-			return -EPERM;
-
-		/* Normal users shall not reset the sched_reset_on_fork flag */
-		if (p->sched_reset_on_fork && !reset_on_fork)
-			return -EPERM;
-	}
-
-	if (user) {
-		retval = security_task_setscheduler(p);
-		if (retval)
-			return retval;
-	}
-
-	/*
-	 * make sure no PI-waiters arrive (or leave) while we are
-	 * changing the priority of the task:
-	 *
-	 * To be able to change p->policy safely, the appropriate
-	 * runqueue lock must be held.
-	 */
-	rq = task_rq_lock(p, &flags);
-
-	/*
-	 * Changing the policy of the stop threads its a very bad idea
-	 */
-	if (p == rq->stop) {
-		task_rq_unlock(rq, p, &flags);
-		return -EINVAL;
-	}
-
-	/*
-	 * If not changing anything there's no need to proceed further:
-	 */
-	if (unlikely(policy == p->policy && (!rt_policy(policy) ||
-			param->sched_priority == p->rt_priority))) {
-
-		__task_rq_unlock(rq);
-		raw_spin_unlock_irqrestore(&p->pi_lock, flags);
-		return 0;
-	}
+    /* double check policy once rq lock held */
+    if (policy < 0) {
+        reset_on_fork = p->sched_reset_on_fork;
+        policy = oldpolicy = p->policy;
+    } else {
+        reset_on_fork = !!(policy & SCHED_RESET_ON_FORK);
+        policy &= ~SCHED_RESET_ON_FORK;
+
+        if (policy != SCHED_FIFO && policy != SCHED_RR &&
+                policy != SCHED_NORMAL && policy != SCHED_BATCH &&
+                policy != SCHED_IDLE)
+            return -EINVAL;
+    }
+
+    /*
+     * Valid priorities for SCHED_FIFO and SCHED_RR are
+     * 1..MAX_USER_RT_PRIO-1, valid priority for SCHED_NORMAL,
+     * SCHED_BATCH and SCHED_IDLE is 0.
+     */
+    if (param->sched_priority < 0 ||
+        (p->mm && param->sched_priority > MAX_USER_RT_PRIO-1) ||
+        (!p->mm && param->sched_priority > MAX_RT_PRIO-1))
+        return -EINVAL;
+    if (rt_policy(policy) != (param->sched_priority != 0))
+        return -EINVAL;
+
+    /*
+     * Allow unprivileged RT tasks to decrease priority:
+     */
+    if (user && !capable(CAP_SYS_NICE)) {
+        if (rt_policy(policy)) {
+            unsigned long rlim_rtprio =
+                    task_rlimit(p, RLIMIT_RTPRIO);
+
+            /* can't set/change the rt policy */
+            if (policy != p->policy && !rlim_rtprio)
+                return -EPERM;
+
+            /* can't increase priority */
+            if (param->sched_priority > p->rt_priority &&
+                param->sched_priority > rlim_rtprio)
+                return -EPERM;
+        }
+
+        /*
+         * Treat SCHED_IDLE as nice 20. Only allow a switch to
+         * SCHED_NORMAL if the RLIMIT_NICE would normally permit it.
+         */
+        if (p->policy == SCHED_IDLE && policy != SCHED_IDLE) {
+            if (!can_nice(p, TASK_NICE(p)))
+                return -EPERM;
+        }
+
+        /* can't change other user's priorities */
+        if (!check_same_owner(p))
+            return -EPERM;
+
+        /* Normal users shall not reset the sched_reset_on_fork flag */
+        if (p->sched_reset_on_fork && !reset_on_fork)
+            return -EPERM;
+    }
+
+    if (user) {
+        retval = security_task_setscheduler(p);
+        if (retval)
+            return retval;
+    }
+
+    /*
+     * make sure no PI-waiters arrive (or leave) while we are
+     * changing the priority of the task:
+     *
+     * To be able to change p->policy safely, the appropriate
+     * runqueue lock must be held.
+     */
+    rq = task_rq_lock(p, &flags);
+
+    /*
+     * Changing the policy of the stop threads its a very bad idea
+     */
+    if (p == rq->stop) {
+        task_rq_unlock(rq, p, &flags);
+        return -EINVAL;
+    }
+
+    /*
+     * If not changing anything there's no need to proceed further:
+     */
+    if (unlikely(policy == p->policy && (!rt_policy(policy) ||
+            param->sched_priority == p->rt_priority))) {
+
+        __task_rq_unlock(rq);
+        raw_spin_unlock_irqrestore(&p->pi_lock, flags);
+        return 0;
+    }
 
 #ifdef CONFIG_RT_GROUP_SCHED
-	if (user) {
-		/*
-		 * Do not allow realtime tasks into groups that have no runtime
-		 * assigned.
-		 */
-		if (rt_bandwidth_enabled() && rt_policy(policy) &&
-				task_group(p)->rt_bandwidth.rt_runtime == 0 &&
-				!task_group_is_autogroup(task_group(p))) {
-			task_rq_unlock(rq, p, &flags);
-			return -EPERM;
-		}
-	}
-#endif
-
-	/* recheck policy now with rq lock held */
-	if (unlikely(oldpolicy != -1 && oldpolicy != p->policy)) {
-		policy = oldpolicy = -1;
-		task_rq_unlock(rq, p, &flags);
-		goto recheck;
-	}
-	on_rq = p->on_rq;
-	running = task_current(rq, p);
-	if (on_rq)
-		dequeue_task(rq, p, 0);
-	if (running)
-		p->sched_class->put_prev_task(rq, p);
-
-	p->sched_reset_on_fork = reset_on_fork;
-
-	oldprio = p->prio;
-	prev_class = p->sched_class;
-	__setscheduler(rq, p, policy, param->sched_priority);
-
-	if (running)
-		p->sched_class->set_curr_task(rq);
-	if (on_rq)
-		enqueue_task(rq, p, 0);
+    if (user) {
+        /*
+         * Do not allow realtime tasks into groups that have no runtime
+         * assigned.
+         */
+        if (rt_bandwidth_enabled() && rt_policy(policy) &&
+                task_group(p)->rt_bandwidth.rt_runtime == 0 &&
+                !task_group_is_autogroup(task_group(p))) {
+            task_rq_unlock(rq, p, &flags);
+            return -EPERM;
+        }
+    }
+#endif
+
+    /* recheck policy now with rq lock held */
+    if (unlikely(oldpolicy != -1 && oldpolicy != p->policy)) {
+        policy = oldpolicy = -1;
+        task_rq_unlock(rq, p, &flags);
+        goto recheck;
+    }
+    on_rq = p->on_rq;
+    running = task_current(rq, p);
+    if (on_rq)
+        dequeue_task(rq, p, 0);
+    if (running)
+        p->sched_class->put_prev_task(rq, p);
+
+    p->sched_reset_on_fork = reset_on_fork;
+
+    oldprio = p->prio;
+    prev_class = p->sched_class;
+    __setscheduler(rq, p, policy, param->sched_priority);
+
+    if (running)
+        p->sched_class->set_curr_task(rq);
+    if (on_rq)
+        enqueue_task(rq, p, 0);
 
-	check_class_changed(rq, p, prev_class, oldprio);
-	task_rq_unlock(rq, p, &flags);
+    check_class_changed(rq, p, prev_class, oldprio);
+    task_rq_unlock(rq, p, &flags);
 
-	rt_mutex_adjust_pi(p);
+    rt_mutex_adjust_pi(p);
 
-	return 0;
+    return 0;
 }
 
 /**
@@ -4413,9 +4438,9 @@ recheck:
  * NOTE that the task may be already dead.
  */
 int sched_setscheduler(struct task_struct *p, int policy,
-		       const struct sched_param *param)
+               const struct sched_param *param)
 {
-	return __sched_setscheduler(p, policy, param, true);
+    return __sched_setscheduler(p, policy, param, true);
 }
 EXPORT_SYMBOL_GPL(sched_setscheduler);
 
@@ -4431,31 +4456,31 @@ EXPORT_SYMBOL_GPL(sched_setscheduler);
  * but our caller might not have that capability.
  */
 int sched_setscheduler_nocheck(struct task_struct *p, int policy,
-			       const struct sched_param *param)
+                   const struct sched_param *param)
 {
-	return __sched_setscheduler(p, policy, param, false);
+    return __sched_setscheduler(p, policy, param, false);
 }
 
 static int
 do_sched_setscheduler(pid_t pid, int policy, struct sched_param __user *param)
 {
-	struct sched_param lparam;
-	struct task_struct *p;
-	int retval;
-
-	if (!param || pid < 0)
-		return -EINVAL;
-	if (copy_from_user(&lparam, param, sizeof(struct sched_param)))
-		return -EFAULT;
-
-	rcu_read_lock();
-	retval = -ESRCH;
-	p = find_process_by_pid(pid);
-	if (p != NULL)
-		retval = sched_setscheduler(p, policy, &lparam);
-	rcu_read_unlock();
+    struct sched_param lparam;
+    struct task_struct *p;
+    int retval;
+
+    if (!param || pid < 0)
+        return -EINVAL;
+    if (copy_from_user(&lparam, param, sizeof(struct sched_param)))
+        return -EFAULT;
+
+    rcu_read_lock();
+    retval = -ESRCH;
+    p = find_process_by_pid(pid);
+    if (p != NULL)
+        retval = sched_setscheduler(p, policy, &lparam);
+    rcu_read_unlock();
 
-	return retval;
+    return retval;
 }
 
 /**
@@ -4465,13 +4490,13 @@ do_sched_setscheduler(pid_t pid, int pol
  * @param: structure containing the new RT priority.
  */
 SYSCALL_DEFINE3(sched_setscheduler, pid_t, pid, int, policy,
-		struct sched_param __user *, param)
+        struct sched_param __user *, param)
 {
-	/* negative values for policy are not valid */
-	if (policy < 0)
-		return -EINVAL;
+    /* negative values for policy are not valid */
+    if (policy < 0)
+        return -EINVAL;
 
-	return do_sched_setscheduler(pid, policy, param);
+    return do_sched_setscheduler(pid, policy, param);
 }
 
 /**
@@ -4481,7 +4506,7 @@ SYSCALL_DEFINE3(sched_setscheduler, pid_
  */
 SYSCALL_DEFINE2(sched_setparam, pid_t, pid, struct sched_param __user *, param)
 {
-	return do_sched_setscheduler(pid, -1, param);
+    return do_sched_setscheduler(pid, -1, param);
 }
 
 /**
@@ -4490,23 +4515,23 @@ SYSCALL_DEFINE2(sched_setparam, pid_t, p
  */
 SYSCALL_DEFINE1(sched_getscheduler, pid_t, pid)
 {
-	struct task_struct *p;
-	int retval;
+    struct task_struct *p;
+    int retval;
 
-	if (pid < 0)
-		return -EINVAL;
+    if (pid < 0)
+        return -EINVAL;
 
-	retval = -ESRCH;
-	rcu_read_lock();
-	p = find_process_by_pid(pid);
-	if (p) {
-		retval = security_task_getscheduler(p);
-		if (!retval)
-			retval = p->policy
-				| (p->sched_reset_on_fork ? SCHED_RESET_ON_FORK : 0);
-	}
-	rcu_read_unlock();
-	return retval;
+    retval = -ESRCH;
+    rcu_read_lock();
+    p = find_process_by_pid(pid);
+    if (p) {
+        retval = security_task_getscheduler(p);
+        if (!retval)
+            retval = p->policy
+                | (p->sched_reset_on_fork ? SCHED_RESET_ON_FORK : 0);
+    }
+    rcu_read_unlock();
+    return retval;
 }
 
 /**
@@ -4516,110 +4541,110 @@ SYSCALL_DEFINE1(sched_getscheduler, pid_
  */
 SYSCALL_DEFINE2(sched_getparam, pid_t, pid, struct sched_param __user *, param)
 {
-	struct sched_param lp;
-	struct task_struct *p;
-	int retval;
-
-	if (!param || pid < 0)
-		return -EINVAL;
-
-	rcu_read_lock();
-	p = find_process_by_pid(pid);
-	retval = -ESRCH;
-	if (!p)
-		goto out_unlock;
-
-	retval = security_task_getscheduler(p);
-	if (retval)
-		goto out_unlock;
-
-	lp.sched_priority = p->rt_priority;
-	rcu_read_unlock();
-
-	/*
-	 * This one might sleep, we cannot do it with a spinlock held ...
-	 */
-	retval = copy_to_user(param, &lp, sizeof(*param)) ? -EFAULT : 0;
+    struct sched_param lp;
+    struct task_struct *p;
+    int retval;
+
+    if (!param || pid < 0)
+        return -EINVAL;
+
+    rcu_read_lock();
+    p = find_process_by_pid(pid);
+    retval = -ESRCH;
+    if (!p)
+        goto out_unlock;
+
+    retval = security_task_getscheduler(p);
+    if (retval)
+        goto out_unlock;
+
+    lp.sched_priority = p->rt_priority;
+    rcu_read_unlock();
+
+    /*
+     * This one might sleep, we cannot do it with a spinlock held ...
+     */
+    retval = copy_to_user(param, &lp, sizeof(*param)) ? -EFAULT : 0;
 
-	return retval;
+    return retval;
 
 out_unlock:
-	rcu_read_unlock();
-	return retval;
+    rcu_read_unlock();
+    return retval;
 }
 
 long sched_setaffinity(pid_t pid, const struct cpumask *in_mask)
 {
-	cpumask_var_t cpus_allowed, new_mask;
-	struct task_struct *p;
-	int retval;
-
-	get_online_cpus();
-	rcu_read_lock();
-
-	p = find_process_by_pid(pid);
-	if (!p) {
-		rcu_read_unlock();
-		put_online_cpus();
-		return -ESRCH;
-	}
-
-	/* Prevent p going away */
-	get_task_struct(p);
-	rcu_read_unlock();
-
-	if (!alloc_cpumask_var(&cpus_allowed, GFP_KERNEL)) {
-		retval = -ENOMEM;
-		goto out_put_task;
-	}
-	if (!alloc_cpumask_var(&new_mask, GFP_KERNEL)) {
-		retval = -ENOMEM;
-		goto out_free_cpus_allowed;
-	}
-	retval = -EPERM;
-	if (!check_same_owner(p) && !ns_capable(task_user_ns(p), CAP_SYS_NICE))
-		goto out_unlock;
-
-	retval = security_task_setscheduler(p);
-	if (retval)
-		goto out_unlock;
+    cpumask_var_t cpus_allowed, new_mask;
+    struct task_struct *p;
+    int retval;
+
+    get_online_cpus();
+    rcu_read_lock();
+
+    p = find_process_by_pid(pid);
+    if (!p) {
+        rcu_read_unlock();
+        put_online_cpus();
+        return -ESRCH;
+    }
+
+    /* Prevent p going away */
+    get_task_struct(p);
+    rcu_read_unlock();
+
+    if (!alloc_cpumask_var(&cpus_allowed, GFP_KERNEL)) {
+        retval = -ENOMEM;
+        goto out_put_task;
+    }
+    if (!alloc_cpumask_var(&new_mask, GFP_KERNEL)) {
+        retval = -ENOMEM;
+        goto out_free_cpus_allowed;
+    }
+    retval = -EPERM;
+    if (!check_same_owner(p) && !ns_capable(task_user_ns(p), CAP_SYS_NICE))
+        goto out_unlock;
+
+    retval = security_task_setscheduler(p);
+    if (retval)
+        goto out_unlock;
 
-	cpuset_cpus_allowed(p, cpus_allowed);
-	cpumask_and(new_mask, in_mask, cpus_allowed);
+    cpuset_cpus_allowed(p, cpus_allowed);
+    cpumask_and(new_mask, in_mask, cpus_allowed);
 again:
-	retval = set_cpus_allowed_ptr(p, new_mask);
+    retval = set_cpus_allowed_ptr(p, new_mask);
 
-	if (!retval) {
-		cpuset_cpus_allowed(p, cpus_allowed);
-		if (!cpumask_subset(new_mask, cpus_allowed)) {
-			/*
-			 * We must have raced with a concurrent cpuset
-			 * update. Just reset the cpus_allowed to the
-			 * cpuset's cpus_allowed
-			 */
-			cpumask_copy(new_mask, cpus_allowed);
-			goto again;
-		}
-	}
+    if (!retval) {
+        cpuset_cpus_allowed(p, cpus_allowed);
+        if (!cpumask_subset(new_mask, cpus_allowed)) {
+            /*
+             * We must have raced with a concurrent cpuset
+             * update. Just reset the cpus_allowed to the
+             * cpuset's cpus_allowed
+             */
+            cpumask_copy(new_mask, cpus_allowed);
+            goto again;
+        }
+    }
 out_unlock:
-	free_cpumask_var(new_mask);
+    free_cpumask_var(new_mask);
 out_free_cpus_allowed:
-	free_cpumask_var(cpus_allowed);
+    free_cpumask_var(cpus_allowed);
 out_put_task:
-	put_task_struct(p);
-	put_online_cpus();
-	return retval;
+    put_task_struct(p);
+    put_online_cpus();
+    return retval;
 }
 
 static int get_user_cpu_mask(unsigned long __user *user_mask_ptr, unsigned len,
-			     struct cpumask *new_mask)
+                 struct cpumask *new_mask)
 {
-	if (len < cpumask_size())
-		cpumask_clear(new_mask);
-	else if (len > cpumask_size())
-		len = cpumask_size();
+    if (len < cpumask_size())
+        cpumask_clear(new_mask);
+    else if (len > cpumask_size())
+        len = cpumask_size();
 
-	return copy_from_user(new_mask, user_mask_ptr, len) ? -EFAULT : 0;
+    return copy_from_user(new_mask, user_mask_ptr, len) ? -EFAULT : 0;
 }
 
 /**
@@ -4629,48 +4654,48 @@ static int get_user_cpu_mask(unsigned lo
  * @user_mask_ptr: user-space pointer to the new cpu mask
  */
 SYSCALL_DEFINE3(sched_setaffinity, pid_t, pid, unsigned int, len,
-		unsigned long __user *, user_mask_ptr)
+        unsigned long __user *, user_mask_ptr)
 {
-	cpumask_var_t new_mask;
-	int retval;
+    cpumask_var_t new_mask;
+    int retval;
 
-	if (!alloc_cpumask_var(&new_mask, GFP_KERNEL))
-		return -ENOMEM;
+    if (!alloc_cpumask_var(&new_mask, GFP_KERNEL))
+        return -ENOMEM;
 
-	retval = get_user_cpu_mask(user_mask_ptr, len, new_mask);
-	if (retval == 0)
-		retval = sched_setaffinity(pid, new_mask);
-	free_cpumask_var(new_mask);
-	return retval;
+    retval = get_user_cpu_mask(user_mask_ptr, len, new_mask);
+    if (retval == 0)
+        retval = sched_setaffinity(pid, new_mask);
+    free_cpumask_var(new_mask);
+    return retval;
 }
 
 long sched_getaffinity(pid_t pid, struct cpumask *mask)
 {
-	struct task_struct *p;
-	unsigned long flags;
-	int retval;
-
-	get_online_cpus();
-	rcu_read_lock();
-
-	retval = -ESRCH;
-	p = find_process_by_pid(pid);
-	if (!p)
-		goto out_unlock;
-
-	retval = security_task_getscheduler(p);
-	if (retval)
-		goto out_unlock;
-
-	raw_spin_lock_irqsave(&p->pi_lock, flags);
-	cpumask_and(mask, &p->cpus_allowed, cpu_online_mask);
-	raw_spin_unlock_irqrestore(&p->pi_lock, flags);
+    struct task_struct *p;
+    unsigned long flags;
+    int retval;
+
+    get_online_cpus();
+    rcu_read_lock();
+
+    retval = -ESRCH;
+    p = find_process_by_pid(pid);
+    if (!p)
+        goto out_unlock;
+
+    retval = security_task_getscheduler(p);
+    if (retval)
+        goto out_unlock;
+
+    raw_spin_lock_irqsave(&p->pi_lock, flags);
+    cpumask_and(mask, &p->cpus_allowed, cpu_online_mask);
+    raw_spin_unlock_irqrestore(&p->pi_lock, flags);
 
 out_unlock:
-	rcu_read_unlock();
-	put_online_cpus();
+    rcu_read_unlock();
+    put_online_cpus();
 
-	return retval;
+    return retval;
 }
 
 /**
@@ -4680,31 +4705,31 @@ out_unlock:
  * @user_mask_ptr: user-space pointer to hold the current cpu mask
  */
 SYSCALL_DEFINE3(sched_getaffinity, pid_t, pid, unsigned int, len,
-		unsigned long __user *, user_mask_ptr)
+        unsigned long __user *, user_mask_ptr)
 {
-	int ret;
-	cpumask_var_t mask;
+    int ret;
+    cpumask_var_t mask;
 
-	if ((len * BITS_PER_BYTE) < nr_cpu_ids)
-		return -EINVAL;
-	if (len & (sizeof(unsigned long)-1))
-		return -EINVAL;
-
-	if (!alloc_cpumask_var(&mask, GFP_KERNEL))
-		return -ENOMEM;
-
-	ret = sched_getaffinity(pid, mask);
-	if (ret == 0) {
-		size_t retlen = min_t(size_t, len, cpumask_size());
-
-		if (copy_to_user(user_mask_ptr, mask, retlen))
-			ret = -EFAULT;
-		else
-			ret = retlen;
-	}
-	free_cpumask_var(mask);
+    if ((len * BITS_PER_BYTE) < nr_cpu_ids)
+        return -EINVAL;
+    if (len & (sizeof(unsigned long)-1))
+        return -EINVAL;
+
+    if (!alloc_cpumask_var(&mask, GFP_KERNEL))
+        return -ENOMEM;
+
+    ret = sched_getaffinity(pid, mask);
+    if (ret == 0) {
+        size_t retlen = min_t(size_t, len, cpumask_size());
+
+        if (copy_to_user(user_mask_ptr, mask, retlen))
+            ret = -EFAULT;
+        else
+            ret = retlen;
+    }
+    free_cpumask_var(mask);
 
-	return ret;
+    return ret;
 }
 
 /**
@@ -4715,44 +4740,44 @@ SYSCALL_DEFINE3(sched_getaffinity, pid_t
  */
 SYSCALL_DEFINE0(sched_yield)
 {
-	struct rq *rq = this_rq_lock();
+    struct rq *rq = this_rq_lock();
 
-	schedstat_inc(rq, yld_count);
-	current->sched_class->yield_task(rq);
+    schedstat_inc(rq, yld_count);
+    current->sched_class->yield_task(rq);
 
-	/*
-	 * Since we are going to call schedule() anyway, there's
-	 * no need to preempt or enable interrupts:
-	 */
-	__release(rq->lock);
-	spin_release(&rq->lock.dep_map, 1, _THIS_IP_);
-	do_raw_spin_unlock(&rq->lock);
-	sched_preempt_enable_no_resched();
+    /*
+     * Since we are going to call schedule() anyway, there's
+     * no need to preempt or enable interrupts:
+     */
+    __release(rq->lock);
+    spin_release(&rq->lock.dep_map, 1, _THIS_IP_);
+    do_raw_spin_unlock(&rq->lock);
+    sched_preempt_enable_no_resched();
 
-	schedule();
+    schedule();
 
-	return 0;
+    return 0;
 }
 
 static inline int should_resched(void)
 {
-	return need_resched() && !(preempt_count() & PREEMPT_ACTIVE);
+    return need_resched() && !(preempt_count() & PREEMPT_ACTIVE);
 }
 
 static void __cond_resched(void)
 {
-	add_preempt_count(PREEMPT_ACTIVE);
-	__schedule();
-	sub_preempt_count(PREEMPT_ACTIVE);
+    add_preempt_count(PREEMPT_ACTIVE);
+    __schedule();
+    sub_preempt_count(PREEMPT_ACTIVE);
 }
 
 int __sched _cond_resched(void)
 {
-	if (should_resched()) {
-		__cond_resched();
-		return 1;
-	}
-	return 0;
+    if (should_resched()) {
+        __cond_resched();
+        return 1;
+    }
+    return 0;
 }
 EXPORT_SYMBOL(_cond_resched);
 
@@ -4766,35 +4791,35 @@ EXPORT_SYMBOL(_cond_resched);
  */
 int __cond_resched_lock(spinlock_t *lock)
 {
-	int resched = should_resched();
-	int ret = 0;
+    int resched = should_resched();
+    int ret = 0;
 
-	lockdep_assert_held(lock);
+    lockdep_assert_held(lock);
 
-	if (spin_needbreak(lock) || resched) {
-		spin_unlock(lock);
-		if (resched)
-			__cond_resched();
-		else
-			cpu_relax();
-		ret = 1;
-		spin_lock(lock);
-	}
-	return ret;
+    if (spin_needbreak(lock) || resched) {
+        spin_unlock(lock);
+        if (resched)
+            __cond_resched();
+        else
+            cpu_relax();
+        ret = 1;
+        spin_lock(lock);
+    }
+    return ret;
 }
 EXPORT_SYMBOL(__cond_resched_lock);
 
 int __sched __cond_resched_softirq(void)
 {
-	BUG_ON(!in_softirq());
+    BUG_ON(!in_softirq());
 
-	if (should_resched()) {
-		local_bh_enable();
-		__cond_resched();
-		local_bh_disable();
-		return 1;
-	}
-	return 0;
+    if (should_resched()) {
+        local_bh_enable();
+        __cond_resched();
+        local_bh_disable();
+        return 1;
+    }
+    return 0;
 }
 EXPORT_SYMBOL(__cond_resched_softirq);
 
@@ -4810,7 +4835,7 @@ EXPORT_SYMBOL(__cond_resched_softirq);
  * Typical broken usage is:
  *
  * while (!event)
- * 	yield();
+ *     yield();
  *
  * where one assumes that yield() will let 'the other' process run that will
  * make event true. If the current task is a SCHED_FIFO task that will never
@@ -4822,8 +4847,8 @@ EXPORT_SYMBOL(__cond_resched_softirq);
  */
 void __sched yield(void)
 {
-	set_current_state(TASK_RUNNING);
-	sys_sched_yield();
+    set_current_state(TASK_RUNNING);
+    sys_sched_yield();
 }
 EXPORT_SYMBOL(yield);
 
@@ -4841,57 +4866,57 @@ EXPORT_SYMBOL(yield);
  */
 bool __sched yield_to(struct task_struct *p, bool preempt)
 {
-	struct task_struct *curr = current;
-	struct rq *rq, *p_rq;
-	unsigned long flags;
-	bool yielded = 0;
+    struct task_struct *curr = current;
+    struct rq *rq, *p_rq;
+    unsigned long flags;
+    bool yielded = 0;
 
-	local_irq_save(flags);
-	rq = this_rq();
+    local_irq_save(flags);
+    rq = this_rq();
 
 again:
-	p_rq = task_rq(p);
-	double_rq_lock(rq, p_rq);
-	while (task_rq(p) != p_rq) {
-		double_rq_unlock(rq, p_rq);
-		goto again;
-	}
-
-	if (!curr->sched_class->yield_to_task)
-		goto out;
-
-	if (curr->sched_class != p->sched_class)
-		goto out;
-
-	if (task_running(p_rq, p) || p->state)
-		goto out;
-
-	yielded = curr->sched_class->yield_to_task(rq, p, preempt);
-	if (yielded) {
-		schedstat_inc(rq, yld_count);
-		/*
-		 * Make p's CPU reschedule; pick_next_entity takes care of
-		 * fairness.
-		 */
-		if (preempt && rq != p_rq)
-			resched_task(p_rq->curr);
-	} else {
-		/*
-		 * We might have set it in task_yield_fair(), but are
-		 * not going to schedule(), so don't want to skip
-		 * the next update.
-		 */
-		rq->skip_clock_update = 0;
-	}
+    p_rq = task_rq(p);
+    double_rq_lock(rq, p_rq);
+    while (task_rq(p) != p_rq) {
+        double_rq_unlock(rq, p_rq);
+        goto again;
+    }
+
+    if (!curr->sched_class->yield_to_task)
+        goto out;
+
+    if (curr->sched_class != p->sched_class)
+        goto out;
+
+    if (task_running(p_rq, p) || p->state)
+        goto out;
+
+    yielded = curr->sched_class->yield_to_task(rq, p, preempt);
+    if (yielded) {
+        schedstat_inc(rq, yld_count);
+        /*
+         * Make p's CPU reschedule; pick_next_entity takes care of
+         * fairness.
+         */
+        if (preempt && rq != p_rq)
+            resched_task(p_rq->curr);
+    } else {
+        /*
+         * We might have set it in task_yield_fair(), but are
+         * not going to schedule(), so don't want to skip
+         * the next update.
+         */
+        rq->skip_clock_update = 0;
+    }
 
 out:
-	double_rq_unlock(rq, p_rq);
-	local_irq_restore(flags);
+    double_rq_unlock(rq, p_rq);
+    local_irq_restore(flags);
 
-	if (yielded)
-		schedule();
+    if (yielded)
+        schedule();
 
-	return yielded;
+    return yielded;
 }
 EXPORT_SYMBOL_GPL(yield_to);
 
@@ -4901,33 +4926,33 @@ EXPORT_SYMBOL_GPL(yield_to);
  */
 void __sched io_schedule(void)
 {
-	struct rq *rq = raw_rq();
+    struct rq *rq = raw_rq();
 
-	delayacct_blkio_start();
-	atomic_inc(&rq->nr_iowait);
-	blk_flush_plug(current);
-	current->in_iowait = 1;
-	schedule();
-	current->in_iowait = 0;
-	atomic_dec(&rq->nr_iowait);
-	delayacct_blkio_end();
+    delayacct_blkio_start();
+    atomic_inc(&rq->nr_iowait);
+    blk_flush_plug(current);
+    current->in_iowait = 1;
+    schedule();
+    current->in_iowait = 0;
+    atomic_dec(&rq->nr_iowait);
+    delayacct_blkio_end();
 }
 EXPORT_SYMBOL(io_schedule);
 
 long __sched io_schedule_timeout(long timeout)
 {
-	struct rq *rq = raw_rq();
-	long ret;
+    struct rq *rq = raw_rq();
+    long ret;
 
-	delayacct_blkio_start();
-	atomic_inc(&rq->nr_iowait);
-	blk_flush_plug(current);
-	current->in_iowait = 1;
-	ret = schedule_timeout(timeout);
-	current->in_iowait = 0;
-	atomic_dec(&rq->nr_iowait);
-	delayacct_blkio_end();
-	return ret;
+    delayacct_blkio_start();
+    atomic_inc(&rq->nr_iowait);
+    blk_flush_plug(current);
+    current->in_iowait = 1;
+    ret = schedule_timeout(timeout);
+    current->in_iowait = 0;
+    atomic_dec(&rq->nr_iowait);
+    delayacct_blkio_end();
+    return ret;
 }
 
 /**
@@ -4939,20 +4964,20 @@ long __sched io_schedule_timeout(long ti
  */
 SYSCALL_DEFINE1(sched_get_priority_max, int, policy)
 {
-	int ret = -EINVAL;
+    int ret = -EINVAL;
 
-	switch (policy) {
-	case SCHED_FIFO:
-	case SCHED_RR:
-		ret = MAX_USER_RT_PRIO-1;
-		break;
-	case SCHED_NORMAL:
-	case SCHED_BATCH:
-	case SCHED_IDLE:
-		ret = 0;
-		break;
-	}
-	return ret;
+    switch (policy) {
+    case SCHED_FIFO:
+    case SCHED_RR:
+        ret = MAX_USER_RT_PRIO-1;
+        break;
+    case SCHED_NORMAL:
+    case SCHED_BATCH:
+    case SCHED_IDLE:
+        ret = 0;
+        break;
+    }
+    return ret;
 }
 
 /**
@@ -4964,19 +4989,19 @@ SYSCALL_DEFINE1(sched_get_priority_max, 
  */
 SYSCALL_DEFINE1(sched_get_priority_min, int, policy)
 {
-	int ret = -EINVAL;
+    int ret = -EINVAL;
 
-	switch (policy) {
-	case SCHED_FIFO:
-	case SCHED_RR:
-		ret = 1;
-		break;
-	case SCHED_NORMAL:
-	case SCHED_BATCH:
-	case SCHED_IDLE:
-		ret = 0;
-	}
-	return ret;
+    switch (policy) {
+    case SCHED_FIFO:
+    case SCHED_RR:
+        ret = 1;
+        break;
+    case SCHED_NORMAL:
+    case SCHED_BATCH:
+    case SCHED_IDLE:
+        ret = 0;
+    }
+    return ret;
 }
 
 /**
@@ -4988,111 +5013,111 @@ SYSCALL_DEFINE1(sched_get_priority_min, 
  * into the user-space timespec buffer. A value of '0' means infinity.
  */
 SYSCALL_DEFINE2(sched_rr_get_interval, pid_t, pid,
-		struct timespec __user *, interval)
+        struct timespec __user *, interval)
 {
-	struct task_struct *p;
-	unsigned int time_slice;
-	unsigned long flags;
-	struct rq *rq;
-	int retval;
-	struct timespec t;
-
-	if (pid < 0)
-		return -EINVAL;
-
-	retval = -ESRCH;
-	rcu_read_lock();
-	p = find_process_by_pid(pid);
-	if (!p)
-		goto out_unlock;
-
-	retval = security_task_getscheduler(p);
-	if (retval)
-		goto out_unlock;
-
-	rq = task_rq_lock(p, &flags);
-	time_slice = p->sched_class->get_rr_interval(rq, p);
-	task_rq_unlock(rq, p, &flags);
-
-	rcu_read_unlock();
-	jiffies_to_timespec(time_slice, &t);
-	retval = copy_to_user(interval, &t, sizeof(t)) ? -EFAULT : 0;
-	return retval;
+    struct task_struct *p;
+    unsigned int time_slice;
+    unsigned long flags;
+    struct rq *rq;
+    int retval;
+    struct timespec t;
+
+    if (pid < 0)
+        return -EINVAL;
+
+    retval = -ESRCH;
+    rcu_read_lock();
+    p = find_process_by_pid(pid);
+    if (!p)
+        goto out_unlock;
+
+    retval = security_task_getscheduler(p);
+    if (retval)
+        goto out_unlock;
+
+    rq = task_rq_lock(p, &flags);
+    time_slice = p->sched_class->get_rr_interval(rq, p);
+    task_rq_unlock(rq, p, &flags);
+
+    rcu_read_unlock();
+    jiffies_to_timespec(time_slice, &t);
+    retval = copy_to_user(interval, &t, sizeof(t)) ? -EFAULT : 0;
+    return retval;
 
 out_unlock:
-	rcu_read_unlock();
-	return retval;
+    rcu_read_unlock();
+    return retval;
 }
 
 static const char stat_nam[] = TASK_STATE_TO_CHAR_STR;
 
 void sched_show_task(struct task_struct *p)
 {
-	unsigned long free = 0;
-	unsigned state;
+    unsigned long free = 0;
+    unsigned state;
 
-	state = p->state ? __ffs(p->state) + 1 : 0;
-	printk(KERN_INFO "%-15.15s %c", p->comm,
-		state < sizeof(stat_nam) - 1 ? stat_nam[state] : '?');
+    state = p->state ? __ffs(p->state) + 1 : 0;
+    printk(KERN_INFO "%-15.15s %c", p->comm,
+        state < sizeof(stat_nam) - 1 ? stat_nam[state] : '?');
 #if BITS_PER_LONG == 32
-	if (state == TASK_RUNNING)
-		printk(KERN_CONT " running  ");
-	else
-		printk(KERN_CONT " %08lx ", thread_saved_pc(p));
+    if (state == TASK_RUNNING)
+        printk(KERN_CONT " running  ");
+    else
+        printk(KERN_CONT " %08lx ", thread_saved_pc(p));
 #else
-	if (state == TASK_RUNNING)
-		printk(KERN_CONT "  running task    ");
-	else
-		printk(KERN_CONT " %016lx ", thread_saved_pc(p));
+    if (state == TASK_RUNNING)
+        printk(KERN_CONT "  running task    ");
+    else
+        printk(KERN_CONT " %016lx ", thread_saved_pc(p));
 #endif
 #ifdef CONFIG_DEBUG_STACK_USAGE
-	free = stack_not_used(p);
+    free = stack_not_used(p);
 #endif
-	printk(KERN_CONT "%5lu %5d %6d 0x%08lx\n", free,
-		task_pid_nr(p), task_pid_nr(rcu_dereference(p->real_parent)),
-		(unsigned long)task_thread_info(p)->flags);
+    printk(KERN_CONT "%5lu %5d %6d 0x%08lx\n", free,
+        task_pid_nr(p), task_pid_nr(rcu_dereference(p->real_parent)),
+        (unsigned long)task_thread_info(p)->flags);
 
-	show_stack(p, NULL);
+    show_stack(p, NULL);
 }
 
 void show_state_filter(unsigned long state_filter)
 {
-	struct task_struct *g, *p;
+    struct task_struct *g, *p;
 
 #if BITS_PER_LONG == 32
-	printk(KERN_INFO
-		"  task                PC stack   pid father\n");
+    printk(KERN_INFO
+        "  task                PC stack   pid father\n");
 #else
-	printk(KERN_INFO
-		"  task                        PC stack   pid father\n");
+    printk(KERN_INFO
+        "  task                        PC stack   pid father\n");
 #endif
-	rcu_read_lock();
-	do_each_thread(g, p) {
-		/*
-		 * reset the NMI-timeout, listing all files on a slow
-		 * console might take a lot of time:
-		 */
-		touch_nmi_watchdog();
-		if (!state_filter || (p->state & state_filter))
-			sched_show_task(p);
-	} while_each_thread(g, p);
+    rcu_read_lock();
+    do_each_thread(g, p) {
+        /*
+         * reset the NMI-timeout, listing all files on a slow
+         * console might take a lot of time:
+         */
+        touch_nmi_watchdog();
+        if (!state_filter || (p->state & state_filter))
+            sched_show_task(p);
+    } while_each_thread(g, p);
 
-	touch_all_softlockup_watchdogs();
+    touch_all_softlockup_watchdogs();
 
 #ifdef CONFIG_SCHED_DEBUG
-	sysrq_sched_debug_show();
+    sysrq_sched_debug_show();
 #endif
-	rcu_read_unlock();
-	/*
-	 * Only show locks if all tasks are dumped:
-	 */
-	if (!state_filter)
-		debug_show_all_locks();
+    rcu_read_unlock();
+    /*
+     * Only show locks if all tasks are dumped:
+     */
+    if (!state_filter)
+        debug_show_all_locks();
 }
 
 void __cpuinit init_idle_bootup_task(struct task_struct *idle)
 {
-	idle->sched_class = &idle_sched_class;
+    idle->sched_class = &idle_sched_class;
 }
 
 /**
@@ -5105,57 +5130,57 @@ void __cpuinit init_idle_bootup_task(str
  */
 void __cpuinit init_idle(struct task_struct *idle, int cpu)
 {
-	struct rq *rq = cpu_rq(cpu);
-	unsigned long flags;
+    struct rq *rq = cpu_rq(cpu);
+    unsigned long flags;
 
-	raw_spin_lock_irqsave(&rq->lock, flags);
+    raw_spin_lock_irqsave(&rq->lock, flags);
 
-	__sched_fork(idle);
-	idle->state = TASK_RUNNING;
-	idle->se.exec_start = sched_clock();
-
-	do_set_cpus_allowed(idle, cpumask_of(cpu));
-	/*
-	 * We're having a chicken and egg problem, even though we are
-	 * holding rq->lock, the cpu isn't yet set to this cpu so the
-	 * lockdep check in task_group() will fail.
-	 *
-	 * Similar case to sched_fork(). / Alternatively we could
-	 * use task_rq_lock() here and obtain the other rq->lock.
-	 *
-	 * Silence PROVE_RCU
-	 */
-	rcu_read_lock();
-	__set_task_cpu(idle, cpu);
-	rcu_read_unlock();
+    __sched_fork(idle);
+    idle->state = TASK_RUNNING;
+    idle->se.exec_start = sched_clock();
+
+    do_set_cpus_allowed(idle, cpumask_of(cpu));
+    /*
+     * We're having a chicken and egg problem, even though we are
+     * holding rq->lock, the cpu isn't yet set to this cpu so the
+     * lockdep check in task_group() will fail.
+     *
+     * Similar case to sched_fork(). / Alternatively we could
+     * use task_rq_lock() here and obtain the other rq->lock.
+     *
+     * Silence PROVE_RCU
+     */
+    rcu_read_lock();
+    __set_task_cpu(idle, cpu);
+    rcu_read_unlock();
 
-	rq->curr = rq->idle = idle;
+    rq->curr = rq->idle = idle;
 #if defined(CONFIG_SMP)
-	idle->on_cpu = 1;
+    idle->on_cpu = 1;
 #endif
-	raw_spin_unlock_irqrestore(&rq->lock, flags);
+    raw_spin_unlock_irqrestore(&rq->lock, flags);
 
-	/* Set the preempt count _outside_ the spinlocks! */
-	task_thread_info(idle)->preempt_count = 0;
+    /* Set the preempt count _outside_ the spinlocks! */
+    task_thread_info(idle)->preempt_count = 0;
 
-	/*
-	 * The idle tasks have their own, simple scheduling class:
-	 */
-	idle->sched_class = &idle_sched_class;
-	ftrace_graph_init_idle_task(idle, cpu);
+    /*
+     * The idle tasks have their own, simple scheduling class:
+     */
+    idle->sched_class = &idle_sched_class;
+    ftrace_graph_init_idle_task(idle, cpu);
 #if defined(CONFIG_SMP)
-	sprintf(idle->comm, "%s/%d", INIT_TASK_COMM, cpu);
+    sprintf(idle->comm, "%s/%d", INIT_TASK_COMM, cpu);
 #endif
 }
 
 #ifdef CONFIG_SMP
 void do_set_cpus_allowed(struct task_struct *p, const struct cpumask *new_mask)
 {
-	if (p->sched_class && p->sched_class->set_cpus_allowed)
-		p->sched_class->set_cpus_allowed(p, new_mask);
+    if (p->sched_class && p->sched_class->set_cpus_allowed)
+        p->sched_class->set_cpus_allowed(p, new_mask);
 
-	cpumask_copy(&p->cpus_allowed, new_mask);
-	p->rt.nr_cpus_allowed = cpumask_weight(new_mask);
+    cpumask_copy(&p->cpus_allowed, new_mask);
+    p->rt.nr_cpus_allowed = cpumask_weight(new_mask);
 }
 
 /*
@@ -5183,45 +5208,45 @@ void do_set_cpus_allowed(struct task_str
  */
 int set_cpus_allowed_ptr(struct task_struct *p, const struct cpumask *new_mask)
 {
-	unsigned long flags;
-	struct rq *rq;
-	unsigned int dest_cpu;
-	int ret = 0;
-
-	rq = task_rq_lock(p, &flags);
-
-	if (cpumask_equal(&p->cpus_allowed, new_mask))
-		goto out;
-
-	if (!cpumask_intersects(new_mask, cpu_active_mask)) {
-		ret = -EINVAL;
-		goto out;
-	}
-
-	if (unlikely((p->flags & PF_THREAD_BOUND) && p != current)) {
-		ret = -EINVAL;
-		goto out;
-	}
-
-	do_set_cpus_allowed(p, new_mask);
-
-	/* Can the task run on the task's current CPU? If so, we're done */
-	if (cpumask_test_cpu(task_cpu(p), new_mask))
-		goto out;
-
-	dest_cpu = cpumask_any_and(cpu_active_mask, new_mask);
-	if (p->on_rq) {
-		struct migration_arg arg = { p, dest_cpu };
-		/* Need help from migration thread: drop lock and wait. */
-		task_rq_unlock(rq, p, &flags);
-		stop_one_cpu(cpu_of(rq), migration_cpu_stop, &arg);
-		tlb_migrate_finish(p->mm);
-		return 0;
-	}
+    unsigned long flags;
+    struct rq *rq;
+    unsigned int dest_cpu;
+    int ret = 0;
+
+    rq = task_rq_lock(p, &flags);
+
+    if (cpumask_equal(&p->cpus_allowed, new_mask))
+        goto out;
+
+    if (!cpumask_intersects(new_mask, cpu_active_mask)) {
+        ret = -EINVAL;
+        goto out;
+    }
+
+    if (unlikely((p->flags & PF_THREAD_BOUND) && p != current)) {
+        ret = -EINVAL;
+        goto out;
+    }
+
+    do_set_cpus_allowed(p, new_mask);
+
+    /* Can the task run on the task's current CPU? If so, we're done */
+    if (cpumask_test_cpu(task_cpu(p), new_mask))
+        goto out;
+
+    dest_cpu = cpumask_any_and(cpu_active_mask, new_mask);
+    if (p->on_rq) {
+        struct migration_arg arg = { p, dest_cpu };
+        /* Need help from migration thread: drop lock and wait. */
+        task_rq_unlock(rq, p, &flags);
+        stop_one_cpu(cpu_of(rq), migration_cpu_stop, &arg);
+        tlb_migrate_finish(p->mm);
+        return 0;
+    }
 out:
-	task_rq_unlock(rq, p, &flags);
+    task_rq_unlock(rq, p, &flags);
 
-	return ret;
+    return ret;
 }
 EXPORT_SYMBOL_GPL(set_cpus_allowed_ptr);
 
@@ -5238,40 +5263,40 @@ EXPORT_SYMBOL_GPL(set_cpus_allowed_ptr);
  */
 static int __migrate_task(struct task_struct *p, int src_cpu, int dest_cpu)
 {
-	struct rq *rq_dest, *rq_src;
-	int ret = 0;
+    struct rq *rq_dest, *rq_src;
+    int ret = 0;
 
-	if (unlikely(!cpu_active(dest_cpu)))
-		return ret;
+    if (unlikely(!cpu_active(dest_cpu)))
+        return ret;
 
-	rq_src = cpu_rq(src_cpu);
-	rq_dest = cpu_rq(dest_cpu);
+    rq_src = cpu_rq(src_cpu);
+    rq_dest = cpu_rq(dest_cpu);
 
-	raw_spin_lock(&p->pi_lock);
-	double_rq_lock(rq_src, rq_dest);
-	/* Already moved. */
-	if (task_cpu(p) != src_cpu)
-		goto done;
-	/* Affinity changed (again). */
-	if (!cpumask_test_cpu(dest_cpu, tsk_cpus_allowed(p)))
-		goto fail;
-
-	/*
-	 * If we're not on a rq, the next wake-up will ensure we're
-	 * placed properly.
-	 */
-	if (p->on_rq) {
-		dequeue_task(rq_src, p, 0);
-		set_task_cpu(p, dest_cpu);
-		enqueue_task(rq_dest, p, 0);
-		check_preempt_curr(rq_dest, p, 0);
-	}
+    raw_spin_lock(&p->pi_lock);
+    double_rq_lock(rq_src, rq_dest);
+    /* Already moved. */
+    if (task_cpu(p) != src_cpu)
+        goto done;
+    /* Affinity changed (again). */
+    if (!cpumask_test_cpu(dest_cpu, tsk_cpus_allowed(p)))
+        goto fail;
+
+    /*
+     * If we're not on a rq, the next wake-up will ensure we're
+     * placed properly.
+     */
+    if (p->on_rq) {
+        dequeue_task(rq_src, p, 0);
+        set_task_cpu(p, dest_cpu);
+        enqueue_task(rq_dest, p, 0);
+        check_preempt_curr(rq_dest, p, 0);
+    }
 done:
-	ret = 1;
+    ret = 1;
 fail:
-	double_rq_unlock(rq_src, rq_dest);
-	raw_spin_unlock(&p->pi_lock);
-	return ret;
+    double_rq_unlock(rq_src, rq_dest);
+    raw_spin_unlock(&p->pi_lock);
+    return ret;
 }
 
 /*
@@ -5281,16 +5306,16 @@ fail:
  */
 static int migration_cpu_stop(void *data)
 {
-	struct migration_arg *arg = data;
+    struct migration_arg *arg = data;
 
-	/*
-	 * The original target cpu might have gone down and we might
-	 * be on another cpu but it doesn't matter.
-	 */
-	local_irq_disable();
-	__migrate_task(arg->task, raw_smp_processor_id(), arg->dest_cpu);
-	local_irq_enable();
-	return 0;
+    /*
+     * The original target cpu might have gone down and we might
+     * be on another cpu but it doesn't matter.
+     */
+    local_irq_disable();
+    __migrate_task(arg->task, raw_smp_processor_id(), arg->dest_cpu);
+    local_irq_enable();
+    return 0;
 }
 
 #ifdef CONFIG_HOTPLUG_CPU
@@ -5301,13 +5326,13 @@ static int migration_cpu_stop(void *data
  */
 void idle_task_exit(void)
 {
-	struct mm_struct *mm = current->active_mm;
+    struct mm_struct *mm = current->active_mm;
 
-	BUG_ON(cpu_online(smp_processor_id()));
+    BUG_ON(cpu_online(smp_processor_id()));
 
-	if (mm != &init_mm)
-		switch_mm(mm, &init_mm, current);
-	mmdrop(mm);
+    if (mm != &init_mm)
+        switch_mm(mm, &init_mm, current);
+    mmdrop(mm);
 }
 
 /*
@@ -5319,10 +5344,10 @@ void idle_task_exit(void)
  */
 static void migrate_nr_uninterruptible(struct rq *rq_src)
 {
-	struct rq *rq_dest = cpu_rq(cpumask_any(cpu_active_mask));
+    struct rq *rq_dest = cpu_rq(cpumask_any(cpu_active_mask));
 
-	rq_dest->nr_uninterruptible += rq_src->nr_uninterruptible;
-	rq_src->nr_uninterruptible = 0;
+    rq_dest->nr_uninterruptible += rq_src->nr_uninterruptible;
+    rq_src->nr_uninterruptible = 0;
 }
 
 /*
@@ -5330,8 +5355,8 @@ static void migrate_nr_uninterruptible(s
  */
 static void calc_global_load_remove(struct rq *rq)
 {
-	atomic_long_sub(rq->calc_load_active, &calc_load_tasks);
-	rq->calc_load_active = 0;
+    atomic_long_sub(rq->calc_load_active, &calc_load_tasks);
+    rq->calc_load_active = 0;
 }
 
 /*
@@ -5344,43 +5369,43 @@ static void calc_global_load_remove(stru
  */
 static void migrate_tasks(unsigned int dead_cpu)
 {
-	struct rq *rq = cpu_rq(dead_cpu);
-	struct task_struct *next, *stop = rq->stop;
-	int dest_cpu;
-
-	/*
-	 * Fudge the rq selection such that the below task selection loop
-	 * doesn't get stuck on the currently eligible stop task.
-	 *
-	 * We're currently inside stop_machine() and the rq is either stuck
-	 * in the stop_machine_cpu_stop() loop, or we're executing this code,
-	 * either way we should never end up calling schedule() until we're
-	 * done here.
-	 */
-	rq->stop = NULL;
-
-	for ( ; ; ) {
-		/*
-		 * There's this thread running, bail when that's the only
-		 * remaining thread.
-		 */
-		if (rq->nr_running == 1)
-			break;
-
-		next = pick_next_task(rq);
-		BUG_ON(!next);
-		next->sched_class->put_prev_task(rq, next);
-
-		/* Find suitable destination for @next, with force if needed. */
-		dest_cpu = select_fallback_rq(dead_cpu, next);
-		raw_spin_unlock(&rq->lock);
+    struct rq *rq = cpu_rq(dead_cpu);
+    struct task_struct *next, *stop = rq->stop;
+    int dest_cpu;
+
+    /*
+     * Fudge the rq selection such that the below task selection loop
+     * doesn't get stuck on the currently eligible stop task.
+     *
+     * We're currently inside stop_machine() and the rq is either stuck
+     * in the stop_machine_cpu_stop() loop, or we're executing this code,
+     * either way we should never end up calling schedule() until we're
+     * done here.
+     */
+    rq->stop = NULL;
+
+    for ( ; ; ) {
+        /*
+         * There's this thread running, bail when that's the only
+         * remaining thread.
+         */
+        if (rq->nr_running == 1)
+            break;
+
+        next = pick_next_task(rq);
+        BUG_ON(!next);
+        next->sched_class->put_prev_task(rq, next);
+
+        /* Find suitable destination for @next, with force if needed. */
+        dest_cpu = select_fallback_rq(dead_cpu, next);
+        raw_spin_unlock(&rq->lock);
 
-		__migrate_task(next, dead_cpu, dest_cpu);
+        __migrate_task(next, dead_cpu, dest_cpu);
 
-		raw_spin_lock(&rq->lock);
-	}
+        raw_spin_lock(&rq->lock);
+    }
 
-	rq->stop = stop;
+    rq->stop = stop;
 }
 
 #endif /* CONFIG_HOTPLUG_CPU */
@@ -5388,49 +5413,49 @@ static void migrate_tasks(unsigned int d
 #if defined(CONFIG_SCHED_DEBUG) && defined(CONFIG_SYSCTL)
 
 static struct ctl_table sd_ctl_dir[] = {
-	{
-		.procname	= "sched_domain",
-		.mode		= 0555,
-	},
-	{}
+    {
+        .procname    = "sched_domain",
+        .mode        = 0555,
+    },
+    {}
 };
 
 static struct ctl_table sd_ctl_root[] = {
-	{
-		.procname	= "kernel",
-		.mode		= 0555,
-		.child		= sd_ctl_dir,
-	},
-	{}
+    {
+        .procname    = "kernel",
+        .mode        = 0555,
+        .child        = sd_ctl_dir,
+    },
+    {}
 };
 
 static struct ctl_table *sd_alloc_ctl_entry(int n)
 {
-	struct ctl_table *entry =
-		kcalloc(n, sizeof(struct ctl_table), GFP_KERNEL);
+    struct ctl_table *entry =
+        kcalloc(n, sizeof(struct ctl_table), GFP_KERNEL);
 
-	return entry;
+    return entry;
 }
 
 static void sd_free_ctl_entry(struct ctl_table **tablep)
 {
-	struct ctl_table *entry;
+    struct ctl_table *entry;
 
-	/*
-	 * In the intermediate directories, both the child directory and
-	 * procname are dynamically allocated and could fail but the mode
-	 * will always be set. In the lowest directory the names are
-	 * static strings and all have proc handlers.
-	 */
-	for (entry = *tablep; entry->mode; entry++) {
-		if (entry->child)
-			sd_free_ctl_entry(&entry->child);
-		if (entry->proc_handler == NULL)
-			kfree(entry->procname);
-	}
+    /*
+     * In the intermediate directories, both the child directory and
+     * procname are dynamically allocated and could fail but the mode
+     * will always be set. In the lowest directory the names are
+     * static strings and all have proc handlers.
+     */
+    for (entry = *tablep; entry->mode; entry++) {
+        if (entry->child)
+            sd_free_ctl_entry(&entry->child);
+        if (entry->proc_handler == NULL)
+            kfree(entry->procname);
+    }
 
-	kfree(*tablep);
-	*tablep = NULL;
+    kfree(*tablep);
+    *tablep = NULL;
 }
 
 static int min_load_idx = 0;
@@ -5438,118 +5463,118 @@ static int max_load_idx = CPU_LOAD_IDX_M
 
 static void
 set_table_entry(struct ctl_table *entry,
-		const char *procname, void *data, int maxlen,
-		umode_t mode, proc_handler *proc_handler,
-		bool load_idx)
-{
-	entry->procname = procname;
-	entry->data = data;
-	entry->maxlen = maxlen;
-	entry->mode = mode;
-	entry->proc_handler = proc_handler;
-
-	if (load_idx) {
-		entry->extra1 = &min_load_idx;
-		entry->extra2 = &max_load_idx;
-	}
+        const char *procname, void *data, int maxlen,
+        umode_t mode, proc_handler *proc_handler,
+        bool load_idx)
+{
+    entry->procname = procname;
+    entry->data = data;
+    entry->maxlen = maxlen;
+    entry->mode = mode;
+    entry->proc_handler = proc_handler;
+
+    if (load_idx) {
+        entry->extra1 = &min_load_idx;
+        entry->extra2 = &max_load_idx;
+    }
 }
 
 static struct ctl_table *
 sd_alloc_ctl_domain_table(struct sched_domain *sd)
 {
-	struct ctl_table *table = sd_alloc_ctl_entry(13);
+    struct ctl_table *table = sd_alloc_ctl_entry(13);
 
-	if (table == NULL)
-		return NULL;
+    if (table == NULL)
+        return NULL;
 
-	set_table_entry(&table[0], "min_interval", &sd->min_interval,
-		sizeof(long), 0644, proc_doulongvec_minmax, false);
-	set_table_entry(&table[1], "max_interval", &sd->max_interval,
-		sizeof(long), 0644, proc_doulongvec_minmax, false);
-	set_table_entry(&table[2], "busy_idx", &sd->busy_idx,
-		sizeof(int), 0644, proc_dointvec_minmax, true);
-	set_table_entry(&table[3], "idle_idx", &sd->idle_idx,
-		sizeof(int), 0644, proc_dointvec_minmax, true);
-	set_table_entry(&table[4], "newidle_idx", &sd->newidle_idx,
-		sizeof(int), 0644, proc_dointvec_minmax, true);
-	set_table_entry(&table[5], "wake_idx", &sd->wake_idx,
-		sizeof(int), 0644, proc_dointvec_minmax, true);
-	set_table_entry(&table[6], "forkexec_idx", &sd->forkexec_idx,
-		sizeof(int), 0644, proc_dointvec_minmax, true);
-	set_table_entry(&table[7], "busy_factor", &sd->busy_factor,
-		sizeof(int), 0644, proc_dointvec_minmax, false);
-	set_table_entry(&table[8], "imbalance_pct", &sd->imbalance_pct,
-		sizeof(int), 0644, proc_dointvec_minmax, false);
-	set_table_entry(&table[9], "cache_nice_tries",
-		&sd->cache_nice_tries,
-		sizeof(int), 0644, proc_dointvec_minmax, false);
-	set_table_entry(&table[10], "flags", &sd->flags,
-		sizeof(int), 0644, proc_dointvec_minmax, false);
-	set_table_entry(&table[11], "name", sd->name,
-		CORENAME_MAX_SIZE, 0444, proc_dostring, false);
-	/* &table[12] is terminator */
+    set_table_entry(&table[0], "min_interval", &sd->min_interval,
+        sizeof(long), 0644, proc_doulongvec_minmax, false);
+    set_table_entry(&table[1], "max_interval", &sd->max_interval,
+        sizeof(long), 0644, proc_doulongvec_minmax, false);
+    set_table_entry(&table[2], "busy_idx", &sd->busy_idx,
+        sizeof(int), 0644, proc_dointvec_minmax, true);
+    set_table_entry(&table[3], "idle_idx", &sd->idle_idx,
+        sizeof(int), 0644, proc_dointvec_minmax, true);
+    set_table_entry(&table[4], "newidle_idx", &sd->newidle_idx,
+        sizeof(int), 0644, proc_dointvec_minmax, true);
+    set_table_entry(&table[5], "wake_idx", &sd->wake_idx,
+        sizeof(int), 0644, proc_dointvec_minmax, true);
+    set_table_entry(&table[6], "forkexec_idx", &sd->forkexec_idx,
+        sizeof(int), 0644, proc_dointvec_minmax, true);
+    set_table_entry(&table[7], "busy_factor", &sd->busy_factor,
+        sizeof(int), 0644, proc_dointvec_minmax, false);
+    set_table_entry(&table[8], "imbalance_pct", &sd->imbalance_pct,
+        sizeof(int), 0644, proc_dointvec_minmax, false);
+    set_table_entry(&table[9], "cache_nice_tries",
+        &sd->cache_nice_tries,
+        sizeof(int), 0644, proc_dointvec_minmax, false);
+    set_table_entry(&table[10], "flags", &sd->flags,
+        sizeof(int), 0644, proc_dointvec_minmax, false);
+    set_table_entry(&table[11], "name", sd->name,
+        CORENAME_MAX_SIZE, 0444, proc_dostring, false);
+    /* &table[12] is terminator */
 
-	return table;
+    return table;
 }
 
 static ctl_table *sd_alloc_ctl_cpu_table(int cpu)
 {
-	struct ctl_table *entry, *table;
-	struct sched_domain *sd;
-	int domain_num = 0, i;
-	char buf[32];
-
-	for_each_domain(cpu, sd)
-		domain_num++;
-	entry = table = sd_alloc_ctl_entry(domain_num + 1);
-	if (table == NULL)
-		return NULL;
-
-	i = 0;
-	for_each_domain(cpu, sd) {
-		snprintf(buf, 32, "domain%d", i);
-		entry->procname = kstrdup(buf, GFP_KERNEL);
-		entry->mode = 0555;
-		entry->child = sd_alloc_ctl_domain_table(sd);
-		entry++;
-		i++;
-	}
-	return table;
+    struct ctl_table *entry, *table;
+    struct sched_domain *sd;
+    int domain_num = 0, i;
+    char buf[32];
+
+    for_each_domain(cpu, sd)
+        domain_num++;
+    entry = table = sd_alloc_ctl_entry(domain_num + 1);
+    if (table == NULL)
+        return NULL;
+
+    i = 0;
+    for_each_domain(cpu, sd) {
+        snprintf(buf, 32, "domain%d", i);
+        entry->procname = kstrdup(buf, GFP_KERNEL);
+        entry->mode = 0555;
+        entry->child = sd_alloc_ctl_domain_table(sd);
+        entry++;
+        i++;
+    }
+    return table;
 }
 
 static struct ctl_table_header *sd_sysctl_header;
 static void register_sched_domain_sysctl(void)
 {
-	int i, cpu_num = num_possible_cpus();
-	struct ctl_table *entry = sd_alloc_ctl_entry(cpu_num + 1);
-	char buf[32];
-
-	WARN_ON(sd_ctl_dir[0].child);
-	sd_ctl_dir[0].child = entry;
-
-	if (entry == NULL)
-		return;
-
-	for_each_possible_cpu(i) {
-		snprintf(buf, 32, "cpu%d", i);
-		entry->procname = kstrdup(buf, GFP_KERNEL);
-		entry->mode = 0555;
-		entry->child = sd_alloc_ctl_cpu_table(i);
-		entry++;
-	}
+    int i, cpu_num = num_possible_cpus();
+    struct ctl_table *entry = sd_alloc_ctl_entry(cpu_num + 1);
+    char buf[32];
+
+    WARN_ON(sd_ctl_dir[0].child);
+    sd_ctl_dir[0].child = entry;
+
+    if (entry == NULL)
+        return;
+
+    for_each_possible_cpu(i) {
+        snprintf(buf, 32, "cpu%d", i);
+        entry->procname = kstrdup(buf, GFP_KERNEL);
+        entry->mode = 0555;
+        entry->child = sd_alloc_ctl_cpu_table(i);
+        entry++;
+    }
 
-	WARN_ON(sd_sysctl_header);
-	sd_sysctl_header = register_sysctl_table(sd_ctl_root);
+    WARN_ON(sd_sysctl_header);
+    sd_sysctl_header = register_sysctl_table(sd_ctl_root);
 }
 
 /* may be called multiple times per register */
 static void unregister_sched_domain_sysctl(void)
 {
-	if (sd_sysctl_header)
-		unregister_sysctl_table(sd_sysctl_header);
-	sd_sysctl_header = NULL;
-	if (sd_ctl_dir[0].child)
-		sd_free_ctl_entry(&sd_ctl_dir[0].child);
+    if (sd_sysctl_header)
+        unregister_sysctl_table(sd_sysctl_header);
+    sd_sysctl_header = NULL;
+    if (sd_ctl_dir[0].child)
+        sd_free_ctl_entry(&sd_ctl_dir[0].child);
 }
 #else
 static void register_sched_domain_sysctl(void)
@@ -5562,32 +5587,32 @@ static void unregister_sched_domain_sysc
 
 static void set_rq_online(struct rq *rq)
 {
-	if (!rq->online) {
-		const struct sched_class *class;
+    if (!rq->online) {
+        const struct sched_class *class;
 
-		cpumask_set_cpu(rq->cpu, rq->rd->online);
-		rq->online = 1;
+        cpumask_set_cpu(rq->cpu, rq->rd->online);
+        rq->online = 1;
 
-		for_each_class(class) {
-			if (class->rq_online)
-				class->rq_online(rq);
-		}
-	}
+        for_each_class(class) {
+            if (class->rq_online)
+                class->rq_online(rq);
+        }
+    }
 }
 
 static void set_rq_offline(struct rq *rq)
 {
-	if (rq->online) {
-		const struct sched_class *class;
+    if (rq->online) {
+        const struct sched_class *class;
 
-		for_each_class(class) {
-			if (class->rq_offline)
-				class->rq_offline(rq);
-		}
-
-		cpumask_clear_cpu(rq->cpu, rq->rd->online);
-		rq->online = 0;
-	}
+        for_each_class(class) {
+            if (class->rq_offline)
+                class->rq_offline(rq);
+        }
+
+        cpumask_clear_cpu(rq->cpu, rq->rd->online);
+        rq->online = 0;
+    }
 }
 
 /*
@@ -5597,49 +5622,49 @@ static void set_rq_offline(struct rq *rq
 static int __cpuinit
 migration_call(struct notifier_block *nfb, unsigned long action, void *hcpu)
 {
-	int cpu = (long)hcpu;
-	unsigned long flags;
-	struct rq *rq = cpu_rq(cpu);
-
-	switch (action & ~CPU_TASKS_FROZEN) {
-
-	case CPU_UP_PREPARE:
-		rq->calc_load_update = calc_load_update;
-		break;
-
-	case CPU_ONLINE:
-		/* Update our root-domain */
-		raw_spin_lock_irqsave(&rq->lock, flags);
-		if (rq->rd) {
-			BUG_ON(!cpumask_test_cpu(cpu, rq->rd->span));
-
-			set_rq_online(rq);
-		}
-		raw_spin_unlock_irqrestore(&rq->lock, flags);
-		break;
+    int cpu = (long)hcpu;
+    unsigned long flags;
+    struct rq *rq = cpu_rq(cpu);
+
+    switch (action & ~CPU_TASKS_FROZEN) {
+
+    case CPU_UP_PREPARE:
+        rq->calc_load_update = calc_load_update;
+        break;
+
+    case CPU_ONLINE:
+        /* Update our root-domain */
+        raw_spin_lock_irqsave(&rq->lock, flags);
+        if (rq->rd) {
+            BUG_ON(!cpumask_test_cpu(cpu, rq->rd->span));
+
+            set_rq_online(rq);
+        }
+        raw_spin_unlock_irqrestore(&rq->lock, flags);
+        break;
 
 #ifdef CONFIG_HOTPLUG_CPU
-	case CPU_DYING:
-		sched_ttwu_pending();
-		/* Update our root-domain */
-		raw_spin_lock_irqsave(&rq->lock, flags);
-		if (rq->rd) {
-			BUG_ON(!cpumask_test_cpu(cpu, rq->rd->span));
-			set_rq_offline(rq);
-		}
-		migrate_tasks(cpu);
-		BUG_ON(rq->nr_running != 1); /* the migration thread */
-		raw_spin_unlock_irqrestore(&rq->lock, flags);
-
-		migrate_nr_uninterruptible(rq);
-		calc_global_load_remove(rq);
-		break;
+    case CPU_DYING:
+        sched_ttwu_pending();
+        /* Update our root-domain */
+        raw_spin_lock_irqsave(&rq->lock, flags);
+        if (rq->rd) {
+            BUG_ON(!cpumask_test_cpu(cpu, rq->rd->span));
+            set_rq_offline(rq);
+        }
+        migrate_tasks(cpu);
+        BUG_ON(rq->nr_running != 1); /* the migration thread */
+        raw_spin_unlock_irqrestore(&rq->lock, flags);
+
+        migrate_nr_uninterruptible(rq);
+        calc_global_load_remove(rq);
+        break;
 #endif
-	}
+    }
 
-	update_max_interval();
+    update_max_interval();
 
-	return NOTIFY_OK;
+    return NOTIFY_OK;
 }
 
 /*
@@ -5648,50 +5673,50 @@ migration_call(struct notifier_block *nf
  * the notifier in the perf_event subsystem, though.
  */
 static struct notifier_block __cpuinitdata migration_notifier = {
-	.notifier_call = migration_call,
-	.priority = CPU_PRI_MIGRATION,
+    .notifier_call = migration_call,
+    .priority = CPU_PRI_MIGRATION,
 };
 
 static int __cpuinit sched_cpu_active(struct notifier_block *nfb,
-				      unsigned long action, void *hcpu)
+                      unsigned long action, void *hcpu)
 {
-	switch (action & ~CPU_TASKS_FROZEN) {
-	case CPU_DOWN_FAILED:
-		set_cpu_active((long)hcpu, true);
-		return NOTIFY_OK;
-	default:
-		return NOTIFY_DONE;
-	}
+    switch (action & ~CPU_TASKS_FROZEN) {
+    case CPU_DOWN_FAILED:
+        set_cpu_active((long)hcpu, true);
+        return NOTIFY_OK;
+    default:
+        return NOTIFY_DONE;
+    }
 }
 
 static int __cpuinit sched_cpu_inactive(struct notifier_block *nfb,
-					unsigned long action, void *hcpu)
+                    unsigned long action, void *hcpu)
 {
-	switch (action & ~CPU_TASKS_FROZEN) {
-	case CPU_DOWN_PREPARE:
-		set_cpu_active((long)hcpu, false);
-		return NOTIFY_OK;
-	default:
-		return NOTIFY_DONE;
-	}
+    switch (action & ~CPU_TASKS_FROZEN) {
+    case CPU_DOWN_PREPARE:
+        set_cpu_active((long)hcpu, false);
+        return NOTIFY_OK;
+    default:
+        return NOTIFY_DONE;
+    }
 }
 
 static int __init migration_init(void)
 {
-	void *cpu = (void *)(long)smp_processor_id();
-	int err;
+    void *cpu = (void *)(long)smp_processor_id();
+    int err;
 
-	/* Initialize migration for the boot CPU */
-	err = migration_call(&migration_notifier, CPU_UP_PREPARE, cpu);
-	BUG_ON(err == NOTIFY_BAD);
-	migration_call(&migration_notifier, CPU_ONLINE, cpu);
-	register_cpu_notifier(&migration_notifier);
-
-	/* Register cpu active notifiers */
-	cpu_notifier(sched_cpu_active, CPU_PRI_SCHED_ACTIVE);
-	cpu_notifier(sched_cpu_inactive, CPU_PRI_SCHED_INACTIVE);
+    /* Initialize migration for the boot CPU */
+    err = migration_call(&migration_notifier, CPU_UP_PREPARE, cpu);
+    BUG_ON(err == NOTIFY_BAD);
+    migration_call(&migration_notifier, CPU_ONLINE, cpu);
+    register_cpu_notifier(&migration_notifier);
+
+    /* Register cpu active notifiers */
+    cpu_notifier(sched_cpu_active, CPU_PRI_SCHED_ACTIVE);
+    cpu_notifier(sched_cpu_inactive, CPU_PRI_SCHED_INACTIVE);
 
-	return 0;
+    return 0;
 }
 early_initcall(migration_init);
 #endif
@@ -5706,115 +5731,115 @@ static __read_mostly int sched_domain_de
 
 static int __init sched_domain_debug_setup(char *str)
 {
-	sched_domain_debug_enabled = 1;
+    sched_domain_debug_enabled = 1;
 
-	return 0;
+    return 0;
 }
 early_param("sched_debug", sched_domain_debug_setup);
 
 static int sched_domain_debug_one(struct sched_domain *sd, int cpu, int level,
-				  struct cpumask *groupmask)
+                  struct cpumask *groupmask)
 {
-	struct sched_group *group = sd->groups;
-	char str[256];
+    struct sched_group *group = sd->groups;
+    char str[256];
 
-	cpulist_scnprintf(str, sizeof(str), sched_domain_span(sd));
-	cpumask_clear(groupmask);
+    cpulist_scnprintf(str, sizeof(str), sched_domain_span(sd));
+    cpumask_clear(groupmask);
 
-	printk(KERN_DEBUG "%*s domain %d: ", level, "", level);
-
-	if (!(sd->flags & SD_LOAD_BALANCE)) {
-		printk("does not load-balance\n");
-		if (sd->parent)
-			printk(KERN_ERR "ERROR: !SD_LOAD_BALANCE domain"
-					" has parent");
-		return -1;
-	}
-
-	printk(KERN_CONT "span %s level %s\n", str, sd->name);
-
-	if (!cpumask_test_cpu(cpu, sched_domain_span(sd))) {
-		printk(KERN_ERR "ERROR: domain->span does not contain "
-				"CPU%d\n", cpu);
-	}
-	if (!cpumask_test_cpu(cpu, sched_group_cpus(group))) {
-		printk(KERN_ERR "ERROR: domain->groups does not contain"
-				" CPU%d\n", cpu);
-	}
-
-	printk(KERN_DEBUG "%*s groups:", level + 1, "");
-	do {
-		if (!group) {
-			printk("\n");
-			printk(KERN_ERR "ERROR: group is NULL\n");
-			break;
-		}
-
-		if (!group->sgp->power) {
-			printk(KERN_CONT "\n");
-			printk(KERN_ERR "ERROR: domain->cpu_power not "
-					"set\n");
-			break;
-		}
-
-		if (!cpumask_weight(sched_group_cpus(group))) {
-			printk(KERN_CONT "\n");
-			printk(KERN_ERR "ERROR: empty group\n");
-			break;
-		}
-
-		if (cpumask_intersects(groupmask, sched_group_cpus(group))) {
-			printk(KERN_CONT "\n");
-			printk(KERN_ERR "ERROR: repeated CPUs\n");
-			break;
-		}
-
-		cpumask_or(groupmask, groupmask, sched_group_cpus(group));
-
-		cpulist_scnprintf(str, sizeof(str), sched_group_cpus(group));
-
-		printk(KERN_CONT " %s", str);
-		if (group->sgp->power != SCHED_POWER_SCALE) {
-			printk(KERN_CONT " (cpu_power = %d)",
-				group->sgp->power);
-		}
-
-		group = group->next;
-	} while (group != sd->groups);
-	printk(KERN_CONT "\n");
-
-	if (!cpumask_equal(sched_domain_span(sd), groupmask))
-		printk(KERN_ERR "ERROR: groups don't span domain->span\n");
-
-	if (sd->parent &&
-	    !cpumask_subset(groupmask, sched_domain_span(sd->parent)))
-		printk(KERN_ERR "ERROR: parent span is not a superset "
-			"of domain->span\n");
-	return 0;
+    printk(KERN_DEBUG "%*s domain %d: ", level, "", level);
+
+    if (!(sd->flags & SD_LOAD_BALANCE)) {
+        printk("does not load-balance\n");
+        if (sd->parent)
+            printk(KERN_ERR "ERROR: !SD_LOAD_BALANCE domain"
+                    " has parent");
+        return -1;
+    }
+
+    printk(KERN_CONT "span %s level %s\n", str, sd->name);
+
+    if (!cpumask_test_cpu(cpu, sched_domain_span(sd))) {
+        printk(KERN_ERR "ERROR: domain->span does not contain "
+                "CPU%d\n", cpu);
+    }
+    if (!cpumask_test_cpu(cpu, sched_group_cpus(group))) {
+        printk(KERN_ERR "ERROR: domain->groups does not contain"
+                " CPU%d\n", cpu);
+    }
+
+    printk(KERN_DEBUG "%*s groups:", level + 1, "");
+    do {
+        if (!group) {
+            printk("\n");
+            printk(KERN_ERR "ERROR: group is NULL\n");
+            break;
+        }
+
+        if (!group->sgp->power) {
+            printk(KERN_CONT "\n");
+            printk(KERN_ERR "ERROR: domain->cpu_power not "
+                    "set\n");
+            break;
+        }
+
+        if (!cpumask_weight(sched_group_cpus(group))) {
+            printk(KERN_CONT "\n");
+            printk(KERN_ERR "ERROR: empty group\n");
+            break;
+        }
+
+        if (cpumask_intersects(groupmask, sched_group_cpus(group))) {
+            printk(KERN_CONT "\n");
+            printk(KERN_ERR "ERROR: repeated CPUs\n");
+            break;
+        }
+
+        cpumask_or(groupmask, groupmask, sched_group_cpus(group));
+
+        cpulist_scnprintf(str, sizeof(str), sched_group_cpus(group));
+
+        printk(KERN_CONT " %s", str);
+        if (group->sgp->power != SCHED_POWER_SCALE) {
+            printk(KERN_CONT " (cpu_power = %d)",
+                group->sgp->power);
+        }
+
+        group = group->next;
+    } while (group != sd->groups);
+    printk(KERN_CONT "\n");
+
+    if (!cpumask_equal(sched_domain_span(sd), groupmask))
+        printk(KERN_ERR "ERROR: groups don't span domain->span\n");
+
+    if (sd->parent &&
+        !cpumask_subset(groupmask, sched_domain_span(sd->parent)))
+        printk(KERN_ERR "ERROR: parent span is not a superset "
+            "of domain->span\n");
+    return 0;
 }
 
 static void sched_domain_debug(struct sched_domain *sd, int cpu)
 {
-	int level = 0;
+    int level = 0;
 
-	if (!sched_domain_debug_enabled)
-		return;
+    if (!sched_domain_debug_enabled)
+        return;
 
-	if (!sd) {
-		printk(KERN_DEBUG "CPU%d attaching NULL sched-domain.\n", cpu);
-		return;
-	}
-
-	printk(KERN_DEBUG "CPU%d attaching sched-domain:\n", cpu);
-
-	for (;;) {
-		if (sched_domain_debug_one(sd, cpu, level, sched_domains_tmpmask))
-			break;
-		level++;
-		sd = sd->parent;
-		if (!sd)
-			break;
-	}
+    if (!sd) {
+        printk(KERN_DEBUG "CPU%d attaching NULL sched-domain.\n", cpu);
+        return;
+    }
+
+    printk(KERN_DEBUG "CPU%d attaching sched-domain:\n", cpu);
+
+    for (;;) {
+        if (sched_domain_debug_one(sd, cpu, level, sched_domains_tmpmask))
+            break;
+        level++;
+        sd = sd->parent;
+        if (!sd)
+            break;
+    }
 }
 #else /* !CONFIG_SCHED_DEBUG */
 # define sched_domain_debug(sd, cpu) do { } while (0)
@@ -5822,126 +5847,126 @@ static void sched_domain_debug(struct sc
 
 static int sd_degenerate(struct sched_domain *sd)
 {
-	if (cpumask_weight(sched_domain_span(sd)) == 1)
-		return 1;
+    if (cpumask_weight(sched_domain_span(sd)) == 1)
+        return 1;
 
-	/* Following flags need at least 2 groups */
-	if (sd->flags & (SD_LOAD_BALANCE |
-			 SD_BALANCE_NEWIDLE |
-			 SD_BALANCE_FORK |
-			 SD_BALANCE_EXEC |
-			 SD_SHARE_CPUPOWER |
-			 SD_SHARE_PKG_RESOURCES)) {
-		if (sd->groups != sd->groups->next)
-			return 0;
-	}
-
-	/* Following flags don't use groups */
-	if (sd->flags & (SD_WAKE_AFFINE))
-		return 0;
+    /* Following flags need at least 2 groups */
+    if (sd->flags & (SD_LOAD_BALANCE |
+             SD_BALANCE_NEWIDLE |
+             SD_BALANCE_FORK |
+             SD_BALANCE_EXEC |
+             SD_SHARE_CPUPOWER |
+             SD_SHARE_PKG_RESOURCES)) {
+        if (sd->groups != sd->groups->next)
+            return 0;
+    }
+
+    /* Following flags don't use groups */
+    if (sd->flags & (SD_WAKE_AFFINE))
+        return 0;
 
-	return 1;
+    return 1;
 }
 
 static int
 sd_parent_degenerate(struct sched_domain *sd, struct sched_domain *parent)
 {
-	unsigned long cflags = sd->flags, pflags = parent->flags;
+    unsigned long cflags = sd->flags, pflags = parent->flags;
 
-	if (sd_degenerate(parent))
-		return 1;
+    if (sd_degenerate(parent))
+        return 1;
 
-	if (!cpumask_equal(sched_domain_span(sd), sched_domain_span(parent)))
-		return 0;
+    if (!cpumask_equal(sched_domain_span(sd), sched_domain_span(parent)))
+        return 0;
 
-	/* Flags needing groups don't count if only 1 group in parent */
-	if (parent->groups == parent->groups->next) {
-		pflags &= ~(SD_LOAD_BALANCE |
-				SD_BALANCE_NEWIDLE |
-				SD_BALANCE_FORK |
-				SD_BALANCE_EXEC |
-				SD_SHARE_CPUPOWER |
-				SD_SHARE_PKG_RESOURCES);
-		if (nr_node_ids == 1)
-			pflags &= ~SD_SERIALIZE;
-	}
-	if (~cflags & pflags)
-		return 0;
+    /* Flags needing groups don't count if only 1 group in parent */
+    if (parent->groups == parent->groups->next) {
+        pflags &= ~(SD_LOAD_BALANCE |
+                SD_BALANCE_NEWIDLE |
+                SD_BALANCE_FORK |
+                SD_BALANCE_EXEC |
+                SD_SHARE_CPUPOWER |
+                SD_SHARE_PKG_RESOURCES);
+        if (nr_node_ids == 1)
+            pflags &= ~SD_SERIALIZE;
+    }
+    if (~cflags & pflags)
+        return 0;
 
-	return 1;
+    return 1;
 }
 
 static void free_rootdomain(struct rcu_head *rcu)
 {
-	struct root_domain *rd = container_of(rcu, struct root_domain, rcu);
+    struct root_domain *rd = container_of(rcu, struct root_domain, rcu);
 
-	cpupri_cleanup(&rd->cpupri);
-	free_cpumask_var(rd->rto_mask);
-	free_cpumask_var(rd->online);
-	free_cpumask_var(rd->span);
-	kfree(rd);
+    cpupri_cleanup(&rd->cpupri);
+    free_cpumask_var(rd->rto_mask);
+    free_cpumask_var(rd->online);
+    free_cpumask_var(rd->span);
+    kfree(rd);
 }
 
 static void rq_attach_root(struct rq *rq, struct root_domain *rd)
 {
-	struct root_domain *old_rd = NULL;
-	unsigned long flags;
+    struct root_domain *old_rd = NULL;
+    unsigned long flags;
 
-	raw_spin_lock_irqsave(&rq->lock, flags);
+    raw_spin_lock_irqsave(&rq->lock, flags);
 
-	if (rq->rd) {
-		old_rd = rq->rd;
+    if (rq->rd) {
+        old_rd = rq->rd;
 
-		if (cpumask_test_cpu(rq->cpu, old_rd->online))
-			set_rq_offline(rq);
+        if (cpumask_test_cpu(rq->cpu, old_rd->online))
+            set_rq_offline(rq);
 
-		cpumask_clear_cpu(rq->cpu, old_rd->span);
+        cpumask_clear_cpu(rq->cpu, old_rd->span);
 
-		/*
-		 * If we dont want to free the old_rt yet then
-		 * set old_rd to NULL to skip the freeing later
-		 * in this function:
-		 */
-		if (!atomic_dec_and_test(&old_rd->refcount))
-			old_rd = NULL;
-	}
+        /*
+         * If we dont want to free the old_rt yet then
+         * set old_rd to NULL to skip the freeing later
+         * in this function:
+         */
+        if (!atomic_dec_and_test(&old_rd->refcount))
+            old_rd = NULL;
+    }
 
-	atomic_inc(&rd->refcount);
-	rq->rd = rd;
+    atomic_inc(&rd->refcount);
+    rq->rd = rd;
 
-	cpumask_set_cpu(rq->cpu, rd->span);
-	if (cpumask_test_cpu(rq->cpu, cpu_active_mask))
-		set_rq_online(rq);
+    cpumask_set_cpu(rq->cpu, rd->span);
+    if (cpumask_test_cpu(rq->cpu, cpu_active_mask))
+        set_rq_online(rq);
 
-	raw_spin_unlock_irqrestore(&rq->lock, flags);
+    raw_spin_unlock_irqrestore(&rq->lock, flags);
 
-	if (old_rd)
-		call_rcu_sched(&old_rd->rcu, free_rootdomain);
+    if (old_rd)
+        call_rcu_sched(&old_rd->rcu, free_rootdomain);
 }
 
 static int init_rootdomain(struct root_domain *rd)
 {
-	memset(rd, 0, sizeof(*rd));
+    memset(rd, 0, sizeof(*rd));
 
-	if (!alloc_cpumask_var(&rd->span, GFP_KERNEL))
-		goto out;
-	if (!alloc_cpumask_var(&rd->online, GFP_KERNEL))
-		goto free_span;
-	if (!alloc_cpumask_var(&rd->rto_mask, GFP_KERNEL))
-		goto free_online;
-
-	if (cpupri_init(&rd->cpupri) != 0)
-		goto free_rto_mask;
-	return 0;
+    if (!alloc_cpumask_var(&rd->span, GFP_KERNEL))
+        goto out;
+    if (!alloc_cpumask_var(&rd->online, GFP_KERNEL))
+        goto free_span;
+    if (!alloc_cpumask_var(&rd->rto_mask, GFP_KERNEL))
+        goto free_online;
+
+    if (cpupri_init(&rd->cpupri) != 0)
+        goto free_rto_mask;
+    return 0;
 
 free_rto_mask:
-	free_cpumask_var(rd->rto_mask);
+    free_cpumask_var(rd->rto_mask);
 free_online:
-	free_cpumask_var(rd->online);
+    free_cpumask_var(rd->online);
 free_span:
-	free_cpumask_var(rd->span);
+    free_cpumask_var(rd->span);
 out:
-	return -ENOMEM;
+    return -ENOMEM;
 }
 
 /*
@@ -5952,72 +5977,72 @@ struct root_domain def_root_domain;
 
 static void init_defrootdomain(void)
 {
-	init_rootdomain(&def_root_domain);
+    init_rootdomain(&def_root_domain);
 
-	atomic_set(&def_root_domain.refcount, 1);
+    atomic_set(&def_root_domain.refcount, 1);
 }
 
 static struct root_domain *alloc_rootdomain(void)
 {
-	struct root_domain *rd;
+    struct root_domain *rd;
 
-	rd = kmalloc(sizeof(*rd), GFP_KERNEL);
-	if (!rd)
-		return NULL;
-
-	if (init_rootdomain(rd) != 0) {
-		kfree(rd);
-		return NULL;
-	}
+    rd = kmalloc(sizeof(*rd), GFP_KERNEL);
+    if (!rd)
+        return NULL;
+
+    if (init_rootdomain(rd) != 0) {
+        kfree(rd);
+        return NULL;
+    }
 
-	return rd;
+    return rd;
 }
 
 static void free_sched_groups(struct sched_group *sg, int free_sgp)
 {
-	struct sched_group *tmp, *first;
+    struct sched_group *tmp, *first;
 
-	if (!sg)
-		return;
+    if (!sg)
+        return;
 
-	first = sg;
-	do {
-		tmp = sg->next;
+    first = sg;
+    do {
+        tmp = sg->next;
 
-		if (free_sgp && atomic_dec_and_test(&sg->sgp->ref))
-			kfree(sg->sgp);
+        if (free_sgp && atomic_dec_and_test(&sg->sgp->ref))
+            kfree(sg->sgp);
 
-		kfree(sg);
-		sg = tmp;
-	} while (sg != first);
+        kfree(sg);
+        sg = tmp;
+    } while (sg != first);
 }
 
 static void free_sched_domain(struct rcu_head *rcu)
 {
-	struct sched_domain *sd = container_of(rcu, struct sched_domain, rcu);
+    struct sched_domain *sd = container_of(rcu, struct sched_domain, rcu);
 
-	/*
-	 * If its an overlapping domain it has private groups, iterate and
-	 * nuke them all.
-	 */
-	if (sd->flags & SD_OVERLAP) {
-		free_sched_groups(sd->groups, 1);
-	} else if (atomic_dec_and_test(&sd->groups->ref)) {
-		kfree(sd->groups->sgp);
-		kfree(sd->groups);
-	}
-	kfree(sd);
+    /*
+     * If its an overlapping domain it has private groups, iterate and
+     * nuke them all.
+     */
+    if (sd->flags & SD_OVERLAP) {
+        free_sched_groups(sd->groups, 1);
+    } else if (atomic_dec_and_test(&sd->groups->ref)) {
+        kfree(sd->groups->sgp);
+        kfree(sd->groups);
+    }
+    kfree(sd);
 }
 
 static void destroy_sched_domain(struct sched_domain *sd, int cpu)
 {
-	call_rcu(&sd->rcu, free_sched_domain);
+    call_rcu(&sd->rcu, free_sched_domain);
 }
 
 static void destroy_sched_domains(struct sched_domain *sd, int cpu)
 {
-	for (; sd; sd = sd->parent)
-		destroy_sched_domain(sd, cpu);
+    for (; sd; sd = sd->parent)
+        destroy_sched_domain(sd, cpu);
 }
 
 /*
@@ -6034,15 +6059,15 @@ DEFINE_PER_CPU(int, sd_llc_id);
 
 static void update_top_cache_domain(int cpu)
 {
-	struct sched_domain *sd;
-	int id = cpu;
+    struct sched_domain *sd;
+    int id = cpu;
 
-	sd = highest_flag_domain(cpu, SD_SHARE_PKG_RESOURCES);
-	if (sd)
-		id = cpumask_first(sched_domain_span(sd));
+    sd = highest_flag_domain(cpu, SD_SHARE_PKG_RESOURCES);
+    if (sd)
+        id = cpumask_first(sched_domain_span(sd));
 
-	rcu_assign_pointer(per_cpu(sd_llc, cpu), sd);
-	per_cpu(sd_llc_id, cpu) = id;
+    rcu_assign_pointer(per_cpu(sd_llc, cpu), sd);
+    per_cpu(sd_llc_id, cpu) = id;
 }
 
 /*
@@ -6052,40 +6077,40 @@ static void update_top_cache_domain(int 
 static void
 cpu_attach_domain(struct sched_domain *sd, struct root_domain *rd, int cpu)
 {
-	struct rq *rq = cpu_rq(cpu);
-	struct sched_domain *tmp;
+    struct rq *rq = cpu_rq(cpu);
+    struct sched_domain *tmp;
 
-	/* Remove the sched domains which do not contribute to scheduling. */
-	for (tmp = sd; tmp; ) {
-		struct sched_domain *parent = tmp->parent;
-		if (!parent)
-			break;
-
-		if (sd_parent_degenerate(tmp, parent)) {
-			tmp->parent = parent->parent;
-			if (parent->parent)
-				parent->parent->child = tmp;
-			destroy_sched_domain(parent, cpu);
-		} else
-			tmp = tmp->parent;
-	}
-
-	if (sd && sd_degenerate(sd)) {
-		tmp = sd;
-		sd = sd->parent;
-		destroy_sched_domain(tmp, cpu);
-		if (sd)
-			sd->child = NULL;
-	}
-
-	sched_domain_debug(sd, cpu);
-
-	rq_attach_root(rq, rd);
-	tmp = rq->sd;
-	rcu_assign_pointer(rq->sd, sd);
-	destroy_sched_domains(tmp, cpu);
+    /* Remove the sched domains which do not contribute to scheduling. */
+    for (tmp = sd; tmp; ) {
+        struct sched_domain *parent = tmp->parent;
+        if (!parent)
+            break;
+
+        if (sd_parent_degenerate(tmp, parent)) {
+            tmp->parent = parent->parent;
+            if (parent->parent)
+                parent->parent->child = tmp;
+            destroy_sched_domain(parent, cpu);
+        } else
+            tmp = tmp->parent;
+    }
+
+    if (sd && sd_degenerate(sd)) {
+        tmp = sd;
+        sd = sd->parent;
+        destroy_sched_domain(tmp, cpu);
+        if (sd)
+            sd->child = NULL;
+    }
+
+    sched_domain_debug(sd, cpu);
+
+    rq_attach_root(rq, rd);
+    tmp = rq->sd;
+    rcu_assign_pointer(rq->sd, sd);
+    destroy_sched_domains(tmp, cpu);
 
-	update_top_cache_domain(cpu);
+    update_top_cache_domain(cpu);
 }
 
 /* cpus with isolated domains */
@@ -6094,9 +6119,9 @@ static cpumask_var_t cpu_isolated_map;
 /* Setup the mask of cpus configured for isolated domains */
 static int __init isolated_cpu_setup(char *str)
 {
-	alloc_bootmem_cpumask_var(&cpu_isolated_map);
-	cpulist_parse(str, cpu_isolated_map);
-	return 1;
+    alloc_bootmem_cpumask_var(&cpu_isolated_map);
+    cpulist_parse(str, cpu_isolated_map);
+    return 1;
 }
 
 __setup("isolcpus=", isolated_cpu_setup);
@@ -6115,33 +6140,33 @@ __setup("isolcpus=", isolated_cpu_setup)
  */
 static int find_next_best_node(int node, nodemask_t *used_nodes)
 {
-	int i, n, val, min_val, best_node = -1;
+    int i, n, val, min_val, best_node = -1;
 
-	min_val = INT_MAX;
+    min_val = INT_MAX;
 
-	for (i = 0; i < nr_node_ids; i++) {
-		/* Start at @node */
-		n = (node + i) % nr_node_ids;
+    for (i = 0; i < nr_node_ids; i++) {
+        /* Start at @node */
+        n = (node + i) % nr_node_ids;
 
-		if (!nr_cpus_node(n))
-			continue;
+        if (!nr_cpus_node(n))
+            continue;
 
-		/* Skip already used nodes */
-		if (node_isset(n, *used_nodes))
-			continue;
+        /* Skip already used nodes */
+        if (node_isset(n, *used_nodes))
+            continue;
 
-		/* Simple min distance search */
-		val = node_distance(node, n);
+        /* Simple min distance search */
+        val = node_distance(node, n);
 
-		if (val < min_val) {
-			min_val = val;
-			best_node = n;
-		}
-	}
+        if (val < min_val) {
+            min_val = val;
+            best_node = n;
+        }
+    }
 
-	if (best_node != -1)
-		node_set(best_node, *used_nodes);
-	return best_node;
+    if (best_node != -1)
+        node_set(best_node, *used_nodes);
+    return best_node;
 }
 
 /**
@@ -6155,61 +6180,61 @@ static int find_next_best_node(int node,
  */
 static void sched_domain_node_span(int node, struct cpumask *span)
 {
-	nodemask_t used_nodes;
-	int i;
+    nodemask_t used_nodes;
+    int i;
 
-	cpumask_clear(span);
-	nodes_clear(used_nodes);
+    cpumask_clear(span);
+    nodes_clear(used_nodes);
 
-	cpumask_or(span, span, cpumask_of_node(node));
-	node_set(node, used_nodes);
+    cpumask_or(span, span, cpumask_of_node(node));
+    node_set(node, used_nodes);
 
-	for (i = 1; i < SD_NODES_PER_DOMAIN; i++) {
-		int next_node = find_next_best_node(node, &used_nodes);
-		if (next_node < 0)
-			break;
-		cpumask_or(span, span, cpumask_of_node(next_node));
-	}
+    for (i = 1; i < SD_NODES_PER_DOMAIN; i++) {
+        int next_node = find_next_best_node(node, &used_nodes);
+        if (next_node < 0)
+            break;
+        cpumask_or(span, span, cpumask_of_node(next_node));
+    }
 }
 
 static const struct cpumask *cpu_node_mask(int cpu)
 {
-	lockdep_assert_held(&sched_domains_mutex);
+    lockdep_assert_held(&sched_domains_mutex);
 
-	sched_domain_node_span(cpu_to_node(cpu), sched_domains_tmpmask);
+    sched_domain_node_span(cpu_to_node(cpu), sched_domains_tmpmask);
 
-	return sched_domains_tmpmask;
+    return sched_domains_tmpmask;
 }
 
 static const struct cpumask *cpu_allnodes_mask(int cpu)
 {
-	return cpu_possible_mask;
+    return cpu_possible_mask;
 }
 #endif /* CONFIG_NUMA */
 
 static const struct cpumask *cpu_cpu_mask(int cpu)
 {
-	return cpumask_of_node(cpu_to_node(cpu));
+    return cpumask_of_node(cpu_to_node(cpu));
 }
 
 int sched_smt_power_savings = 0, sched_mc_power_savings = 0;
 
 struct sd_data {
-	struct sched_domain **__percpu sd;
-	struct sched_group **__percpu sg;
-	struct sched_group_power **__percpu sgp;
+    struct sched_domain **__percpu sd;
+    struct sched_group **__percpu sg;
+    struct sched_group_power **__percpu sgp;
 };
 
 struct s_data {
-	struct sched_domain ** __percpu sd;
-	struct root_domain	*rd;
+    struct sched_domain ** __percpu sd;
+    struct root_domain    *rd;
 };
 
 enum s_alloc {
-	sa_rootdomain,
-	sa_sd,
-	sa_sd_storage,
-	sa_none,
+    sa_rootdomain,
+    sa_sd,
+    sa_sd_storage,
+    sa_none,
 };
 
 struct sched_domain_topology_level;
@@ -6217,88 +6242,88 @@ struct sched_domain_topology_level;
 typedef struct sched_domain *(*sched_domain_init_f)(struct sched_domain_topology_level *tl, int cpu);
 typedef const struct cpumask *(*sched_domain_mask_f)(int cpu);
 
-#define SDTL_OVERLAP	0x01
+#define SDTL_OVERLAP    0x01
 
 struct sched_domain_topology_level {
-	sched_domain_init_f init;
-	sched_domain_mask_f mask;
-	int		    flags;
-	struct sd_data      data;
+    sched_domain_init_f init;
+    sched_domain_mask_f mask;
+    int            flags;
+    struct sd_data      data;
 };
 
 static int
 build_overlap_sched_groups(struct sched_domain *sd, int cpu)
 {
-	struct sched_group *first = NULL, *last = NULL, *groups = NULL, *sg;
-	const struct cpumask *span = sched_domain_span(sd);
-	struct cpumask *covered = sched_domains_tmpmask;
-	struct sd_data *sdd = sd->private;
-	struct sched_domain *child;
-	int i;
-
-	cpumask_clear(covered);
-
-	for_each_cpu(i, span) {
-		struct cpumask *sg_span;
-
-		if (cpumask_test_cpu(i, covered))
-			continue;
-
-		sg = kzalloc_node(sizeof(struct sched_group) + cpumask_size(),
-				GFP_KERNEL, cpu_to_node(cpu));
-
-		if (!sg)
-			goto fail;
-
-		sg_span = sched_group_cpus(sg);
-
-		child = *per_cpu_ptr(sdd->sd, i);
-		if (child->child) {
-			child = child->child;
-			cpumask_copy(sg_span, sched_domain_span(child));
-		} else
-			cpumask_set_cpu(i, sg_span);
-
-		cpumask_or(covered, covered, sg_span);
-
-		sg->sgp = *per_cpu_ptr(sdd->sgp, cpumask_first(sg_span));
-		atomic_inc(&sg->sgp->ref);
-
-		if (cpumask_test_cpu(cpu, sg_span))
-			groups = sg;
-
-		if (!first)
-			first = sg;
-		if (last)
-			last->next = sg;
-		last = sg;
-		last->next = first;
-	}
-	sd->groups = groups;
+    struct sched_group *first = NULL, *last = NULL, *groups = NULL, *sg;
+    const struct cpumask *span = sched_domain_span(sd);
+    struct cpumask *covered = sched_domains_tmpmask;
+    struct sd_data *sdd = sd->private;
+    struct sched_domain *child;
+    int i;
+
+    cpumask_clear(covered);
+
+    for_each_cpu(i, span) {
+        struct cpumask *sg_span;
+
+        if (cpumask_test_cpu(i, covered))
+            continue;
+
+        sg = kzalloc_node(sizeof(struct sched_group) + cpumask_size(),
+                GFP_KERNEL, cpu_to_node(cpu));
+
+        if (!sg)
+            goto fail;
+
+        sg_span = sched_group_cpus(sg);
+
+        child = *per_cpu_ptr(sdd->sd, i);
+        if (child->child) {
+            child = child->child;
+            cpumask_copy(sg_span, sched_domain_span(child));
+        } else
+            cpumask_set_cpu(i, sg_span);
+
+        cpumask_or(covered, covered, sg_span);
+
+        sg->sgp = *per_cpu_ptr(sdd->sgp, cpumask_first(sg_span));
+        atomic_inc(&sg->sgp->ref);
+
+        if (cpumask_test_cpu(cpu, sg_span))
+            groups = sg;
+
+        if (!first)
+            first = sg;
+        if (last)
+            last->next = sg;
+        last = sg;
+        last->next = first;
+    }
+    sd->groups = groups;
 
-	return 0;
+    return 0;
 
 fail:
-	free_sched_groups(first, 0);
+    free_sched_groups(first, 0);
 
-	return -ENOMEM;
+    return -ENOMEM;
 }
 
 static int get_group(int cpu, struct sd_data *sdd, struct sched_group **sg)
 {
-	struct sched_domain *sd = *per_cpu_ptr(sdd->sd, cpu);
-	struct sched_domain *child = sd->child;
+    struct sched_domain *sd = *per_cpu_ptr(sdd->sd, cpu);
+    struct sched_domain *child = sd->child;
 
-	if (child)
-		cpu = cpumask_first(sched_domain_span(child));
+    if (child)
+        cpu = cpumask_first(sched_domain_span(child));
 
-	if (sg) {
-		*sg = *per_cpu_ptr(sdd->sg, cpu);
-		(*sg)->sgp = *per_cpu_ptr(sdd->sgp, cpu);
-		atomic_set(&(*sg)->sgp->ref, 1); /* for claim_allocations */
-	}
+    if (sg) {
+        *sg = *per_cpu_ptr(sdd->sg, cpu);
+        (*sg)->sgp = *per_cpu_ptr(sdd->sgp, cpu);
+        atomic_set(&(*sg)->sgp->ref, 1); /* for claim_allocations */
+    }
 
-	return cpu;
+    return cpu;
 }
 
 /*
@@ -6311,51 +6336,51 @@ static int get_group(int cpu, struct sd_
 static int
 build_sched_groups(struct sched_domain *sd, int cpu)
 {
-	struct sched_group *first = NULL, *last = NULL;
-	struct sd_data *sdd = sd->private;
-	const struct cpumask *span = sched_domain_span(sd);
-	struct cpumask *covered;
-	int i;
-
-	get_group(cpu, sdd, &sd->groups);
-	atomic_inc(&sd->groups->ref);
-
-	if (cpu != cpumask_first(sched_domain_span(sd)))
-		return 0;
-
-	lockdep_assert_held(&sched_domains_mutex);
-	covered = sched_domains_tmpmask;
-
-	cpumask_clear(covered);
-
-	for_each_cpu(i, span) {
-		struct sched_group *sg;
-		int group = get_group(i, sdd, &sg);
-		int j;
-
-		if (cpumask_test_cpu(i, covered))
-			continue;
-
-		cpumask_clear(sched_group_cpus(sg));
-		sg->sgp->power = 0;
-
-		for_each_cpu(j, span) {
-			if (get_group(j, sdd, NULL) != group)
-				continue;
-
-			cpumask_set_cpu(j, covered);
-			cpumask_set_cpu(j, sched_group_cpus(sg));
-		}
-
-		if (!first)
-			first = sg;
-		if (last)
-			last->next = sg;
-		last = sg;
-	}
-	last->next = first;
+    struct sched_group *first = NULL, *last = NULL;
+    struct sd_data *sdd = sd->private;
+    const struct cpumask *span = sched_domain_span(sd);
+    struct cpumask *covered;
+    int i;
+
+    get_group(cpu, sdd, &sd->groups);
+    atomic_inc(&sd->groups->ref);
+
+    if (cpu != cpumask_first(sched_domain_span(sd)))
+        return 0;
+
+    lockdep_assert_held(&sched_domains_mutex);
+    covered = sched_domains_tmpmask;
+
+    cpumask_clear(covered);
+
+    for_each_cpu(i, span) {
+        struct sched_group *sg;
+        int group = get_group(i, sdd, &sg);
+        int j;
+
+        if (cpumask_test_cpu(i, covered))
+            continue;
+
+        cpumask_clear(sched_group_cpus(sg));
+        sg->sgp->power = 0;
+
+        for_each_cpu(j, span) {
+            if (get_group(j, sdd, NULL) != group)
+                continue;
+
+            cpumask_set_cpu(j, covered);
+            cpumask_set_cpu(j, sched_group_cpus(sg));
+        }
+
+        if (!first)
+            first = sg;
+        if (last)
+            last->next = sg;
+        last = sg;
+    }
+    last->next = first;
 
-	return 0;
+    return 0;
 }
 
 /*
@@ -6370,20 +6395,20 @@ build_sched_groups(struct sched_domain *
  */
 static void init_sched_groups_power(int cpu, struct sched_domain *sd)
 {
-	struct sched_group *sg = sd->groups;
+    struct sched_group *sg = sd->groups;
 
-	WARN_ON(!sd || !sg);
+    WARN_ON(!sd || !sg);
 
-	do {
-		sg->group_weight = cpumask_weight(sched_group_cpus(sg));
-		sg = sg->next;
-	} while (sg != sd->groups);
+    do {
+        sg->group_weight = cpumask_weight(sched_group_cpus(sg));
+        sg = sg->next;
+    } while (sg != sd->groups);
 
-	if (cpu != group_first_cpu(sg))
-		return;
+    if (cpu != group_first_cpu(sg))
+        return;
 
-	update_group_power(sd, cpu);
-	atomic_set(&sg->sgp->nr_busy_cpus, sg->group_weight);
+    update_group_power(sd, cpu);
+    atomic_set(&sg->sgp->nr_busy_cpus, sg->group_weight);
 }
 
 int __weak arch_sd_sibling_asym_packing(void)
@@ -6397,20 +6422,20 @@ int __weak arch_sd_sibling_asym_packing(
  */
 
 #ifdef CONFIG_SCHED_DEBUG
-# define SD_INIT_NAME(sd, type)		sd->name = #type
+# define SD_INIT_NAME(sd, type)        sd->name = #type
 #else
-# define SD_INIT_NAME(sd, type)		do { } while (0)
+# define SD_INIT_NAME(sd, type)        do { } while (0)
 #endif
 
-#define SD_INIT_FUNC(type)						\
-static noinline struct sched_domain *					\
-sd_init_##type(struct sched_domain_topology_level *tl, int cpu) 	\
-{									\
-	struct sched_domain *sd = *per_cpu_ptr(tl->data.sd, cpu);	\
-	*sd = SD_##type##_INIT;						\
-	SD_INIT_NAME(sd, type);						\
-	sd->private = &tl->data;					\
-	return sd;							\
+#define SD_INIT_FUNC(type)                        \
+static noinline struct sched_domain *                    \
+sd_init_##type(struct sched_domain_topology_level *tl, int cpu)     \
+{                                    \
+    struct sched_domain *sd = *per_cpu_ptr(tl->data.sd, cpu);    \
+    *sd = SD_##type##_INIT;                        \
+    SD_INIT_NAME(sd, type);                        \
+    sd->private = &tl->data;                    \
+    return sd;                            \
 }
 
 SD_INIT_FUNC(CPU)
@@ -6433,67 +6458,67 @@ int sched_domain_level_max;
 
 static int __init setup_relax_domain_level(char *str)
 {
-	if (kstrtoint(str, 0, &default_relax_domain_level))
-		pr_warn("Unable to set relax_domain_level\n");
+    if (kstrtoint(str, 0, &default_relax_domain_level))
+        pr_warn("Unable to set relax_domain_level\n");
 
-	return 1;
+    return 1;
 }
 __setup("relax_domain_level=", setup_relax_domain_level);
 
 static void set_domain_attribute(struct sched_domain *sd,
-				 struct sched_domain_attr *attr)
+                 struct sched_domain_attr *attr)
 {
-	int request;
+    int request;
 
-	if (!attr || attr->relax_domain_level < 0) {
-		if (default_relax_domain_level < 0)
-			return;
-		else
-			request = default_relax_domain_level;
-	} else
-		request = attr->relax_domain_level;
-	if (request < sd->level) {
-		/* turn off idle balance on this domain */
-		sd->flags &= ~(SD_BALANCE_WAKE|SD_BALANCE_NEWIDLE);
-	} else {
-		/* turn on idle balance on this domain */
-		sd->flags |= (SD_BALANCE_WAKE|SD_BALANCE_NEWIDLE);
-	}
+    if (!attr || attr->relax_domain_level < 0) {
+        if (default_relax_domain_level < 0)
+            return;
+        else
+            request = default_relax_domain_level;
+    } else
+        request = attr->relax_domain_level;
+    if (request < sd->level) {
+        /* turn off idle balance on this domain */
+        sd->flags &= ~(SD_BALANCE_WAKE|SD_BALANCE_NEWIDLE);
+    } else {
+        /* turn on idle balance on this domain */
+        sd->flags |= (SD_BALANCE_WAKE|SD_BALANCE_NEWIDLE);
+    }
 }
 
 static void __sdt_free(const struct cpumask *cpu_map);
 static int __sdt_alloc(const struct cpumask *cpu_map);
 
 static void __free_domain_allocs(struct s_data *d, enum s_alloc what,
-				 const struct cpumask *cpu_map)
+                 const struct cpumask *cpu_map)
 {
-	switch (what) {
-	case sa_rootdomain:
-		if (!atomic_read(&d->rd->refcount))
-			free_rootdomain(&d->rd->rcu); /* fall through */
-	case sa_sd:
-		free_percpu(d->sd); /* fall through */
-	case sa_sd_storage:
-		__sdt_free(cpu_map); /* fall through */
-	case sa_none:
-		break;
-	}
+    switch (what) {
+    case sa_rootdomain:
+        if (!atomic_read(&d->rd->refcount))
+            free_rootdomain(&d->rd->rcu); /* fall through */
+    case sa_sd:
+        free_percpu(d->sd); /* fall through */
+    case sa_sd_storage:
+        __sdt_free(cpu_map); /* fall through */
+    case sa_none:
+        break;
+    }
 }
 
 static enum s_alloc __visit_domain_allocation_hell(struct s_data *d,
-						   const struct cpumask *cpu_map)
+                           const struct cpumask *cpu_map)
 {
-	memset(d, 0, sizeof(*d));
+    memset(d, 0, sizeof(*d));
 
-	if (__sdt_alloc(cpu_map))
-		return sa_sd_storage;
-	d->sd = alloc_percpu(struct sched_domain *);
-	if (!d->sd)
-		return sa_sd_storage;
-	d->rd = alloc_rootdomain();
-	if (!d->rd)
-		return sa_sd;
-	return sa_rootdomain;
+    if (__sdt_alloc(cpu_map))
+        return sa_sd_storage;
+    d->sd = alloc_percpu(struct sched_domain *);
+    if (!d->sd)
+        return sa_sd_storage;
+    d->rd = alloc_rootdomain();
+    if (!d->rd)
+        return sa_sd;
+    return sa_rootdomain;
 }
 
 /*
@@ -6503,22 +6528,22 @@ static enum s_alloc __visit_domain_alloc
  */
 static void claim_allocations(int cpu, struct sched_domain *sd)
 {
-	struct sd_data *sdd = sd->private;
+    struct sd_data *sdd = sd->private;
 
-	WARN_ON_ONCE(*per_cpu_ptr(sdd->sd, cpu) != sd);
-	*per_cpu_ptr(sdd->sd, cpu) = NULL;
+    WARN_ON_ONCE(*per_cpu_ptr(sdd->sd, cpu) != sd);
+    *per_cpu_ptr(sdd->sd, cpu) = NULL;
 
-	if (atomic_read(&(*per_cpu_ptr(sdd->sg, cpu))->ref))
-		*per_cpu_ptr(sdd->sg, cpu) = NULL;
+    if (atomic_read(&(*per_cpu_ptr(sdd->sg, cpu))->ref))
+        *per_cpu_ptr(sdd->sg, cpu) = NULL;
 
-	if (atomic_read(&(*per_cpu_ptr(sdd->sgp, cpu))->ref))
-		*per_cpu_ptr(sdd->sgp, cpu) = NULL;
+    if (atomic_read(&(*per_cpu_ptr(sdd->sgp, cpu))->ref))
+        *per_cpu_ptr(sdd->sgp, cpu) = NULL;
 }
 
 #ifdef CONFIG_SCHED_SMT
 static const struct cpumask *cpu_smt_mask(int cpu)
 {
-	return topology_thread_cpumask(cpu);
+    return topology_thread_cpumask(cpu);
 }
 #endif
 
@@ -6527,128 +6552,128 @@ static const struct cpumask *cpu_smt_mas
  */
 static struct sched_domain_topology_level default_topology[] = {
 #ifdef CONFIG_SCHED_SMT
-	{ sd_init_SIBLING, cpu_smt_mask, },
+    { sd_init_SIBLING, cpu_smt_mask, },
 #endif
 #ifdef CONFIG_SCHED_MC
-	{ sd_init_MC, cpu_coregroup_mask, },
+    { sd_init_MC, cpu_coregroup_mask, },
 #endif
 #ifdef CONFIG_SCHED_BOOK
-	{ sd_init_BOOK, cpu_book_mask, },
+    { sd_init_BOOK, cpu_book_mask, },
 #endif
-	{ sd_init_CPU, cpu_cpu_mask, },
+    { sd_init_CPU, cpu_cpu_mask, },
 #ifdef CONFIG_NUMA
-	{ sd_init_NODE, cpu_node_mask, SDTL_OVERLAP, },
-	{ sd_init_ALLNODES, cpu_allnodes_mask, },
+    { sd_init_NODE, cpu_node_mask, SDTL_OVERLAP, },
+    { sd_init_ALLNODES, cpu_allnodes_mask, },
 #endif
-	{ NULL, },
+    { NULL, },
 };
 
 static struct sched_domain_topology_level *sched_domain_topology = default_topology;
 
 static int __sdt_alloc(const struct cpumask *cpu_map)
 {
-	struct sched_domain_topology_level *tl;
-	int j;
+    struct sched_domain_topology_level *tl;
+    int j;
 
-	for (tl = sched_domain_topology; tl->init; tl++) {
-		struct sd_data *sdd = &tl->data;
+    for (tl = sched_domain_topology; tl->init; tl++) {
+        struct sd_data *sdd = &tl->data;
 
-		sdd->sd = alloc_percpu(struct sched_domain *);
-		if (!sdd->sd)
-			return -ENOMEM;
+        sdd->sd = alloc_percpu(struct sched_domain *);
+        if (!sdd->sd)
+            return -ENOMEM;
 
-		sdd->sg = alloc_percpu(struct sched_group *);
-		if (!sdd->sg)
-			return -ENOMEM;
+        sdd->sg = alloc_percpu(struct sched_group *);
+        if (!sdd->sg)
+            return -ENOMEM;
 
-		sdd->sgp = alloc_percpu(struct sched_group_power *);
-		if (!sdd->sgp)
-			return -ENOMEM;
+        sdd->sgp = alloc_percpu(struct sched_group_power *);
+        if (!sdd->sgp)
+            return -ENOMEM;
 
-		for_each_cpu(j, cpu_map) {
-			struct sched_domain *sd;
-			struct sched_group *sg;
-			struct sched_group_power *sgp;
+        for_each_cpu(j, cpu_map) {
+            struct sched_domain *sd;
+            struct sched_group *sg;
+            struct sched_group_power *sgp;
 
-		       	sd = kzalloc_node(sizeof(struct sched_domain) + cpumask_size(),
-					GFP_KERNEL, cpu_to_node(j));
-			if (!sd)
-				return -ENOMEM;
+                   sd = kzalloc_node(sizeof(struct sched_domain) + cpumask_size(),
+                    GFP_KERNEL, cpu_to_node(j));
+            if (!sd)
+                return -ENOMEM;
 
-			*per_cpu_ptr(sdd->sd, j) = sd;
+            *per_cpu_ptr(sdd->sd, j) = sd;
 
-			sg = kzalloc_node(sizeof(struct sched_group) + cpumask_size(),
-					GFP_KERNEL, cpu_to_node(j));
-			if (!sg)
-				return -ENOMEM;
+            sg = kzalloc_node(sizeof(struct sched_group) + cpumask_size(),
+                    GFP_KERNEL, cpu_to_node(j));
+            if (!sg)
+                return -ENOMEM;
 
-			sg->next = sg;
+            sg->next = sg;
 
-			*per_cpu_ptr(sdd->sg, j) = sg;
+            *per_cpu_ptr(sdd->sg, j) = sg;
 
-			sgp = kzalloc_node(sizeof(struct sched_group_power),
-					GFP_KERNEL, cpu_to_node(j));
-			if (!sgp)
-				return -ENOMEM;
+            sgp = kzalloc_node(sizeof(struct sched_group_power),
+                    GFP_KERNEL, cpu_to_node(j));
+            if (!sgp)
+                return -ENOMEM;
 
-			*per_cpu_ptr(sdd->sgp, j) = sgp;
-		}
-	}
+            *per_cpu_ptr(sdd->sgp, j) = sgp;
+        }
+    }
 
-	return 0;
+    return 0;
 }
 
 static void __sdt_free(const struct cpumask *cpu_map)
 {
-	struct sched_domain_topology_level *tl;
-	int j;
+    struct sched_domain_topology_level *tl;
+    int j;
 
-	for (tl = sched_domain_topology; tl->init; tl++) {
-		struct sd_data *sdd = &tl->data;
+    for (tl = sched_domain_topology; tl->init; tl++) {
+        struct sd_data *sdd = &tl->data;
 
-		for_each_cpu(j, cpu_map) {
-			struct sched_domain *sd;
+        for_each_cpu(j, cpu_map) {
+            struct sched_domain *sd;
 
-			if (sdd->sd) {
-				sd = *per_cpu_ptr(sdd->sd, j);
-				if (sd && (sd->flags & SD_OVERLAP))
-					free_sched_groups(sd->groups, 0);
-				kfree(*per_cpu_ptr(sdd->sd, j));
-			}
-
-			if (sdd->sg)
-				kfree(*per_cpu_ptr(sdd->sg, j));
-			if (sdd->sgp)
-				kfree(*per_cpu_ptr(sdd->sgp, j));
-		}
-		free_percpu(sdd->sd);
-		sdd->sd = NULL;
-		free_percpu(sdd->sg);
-		sdd->sg = NULL;
-		free_percpu(sdd->sgp);
-		sdd->sgp = NULL;
-	}
+            if (sdd->sd) {
+                sd = *per_cpu_ptr(sdd->sd, j);
+                if (sd && (sd->flags & SD_OVERLAP))
+                    free_sched_groups(sd->groups, 0);
+                kfree(*per_cpu_ptr(sdd->sd, j));
+            }
+
+            if (sdd->sg)
+                kfree(*per_cpu_ptr(sdd->sg, j));
+            if (sdd->sgp)
+                kfree(*per_cpu_ptr(sdd->sgp, j));
+        }
+        free_percpu(sdd->sd);
+        sdd->sd = NULL;
+        free_percpu(sdd->sg);
+        sdd->sg = NULL;
+        free_percpu(sdd->sgp);
+        sdd->sgp = NULL;
+    }
 }
 
 struct sched_domain *build_sched_domain(struct sched_domain_topology_level *tl,
-		struct s_data *d, const struct cpumask *cpu_map,
-		struct sched_domain_attr *attr, struct sched_domain *child,
-		int cpu)
-{
-	struct sched_domain *sd = tl->init(tl, cpu);
-	if (!sd)
-		return child;
-
-	cpumask_and(sched_domain_span(sd), cpu_map, tl->mask(cpu));
-	if (child) {
-		sd->level = child->level + 1;
-		sched_domain_level_max = max(sched_domain_level_max, sd->level);
-		child->parent = sd;
-	}
-	sd->child = child;
-	set_domain_attribute(sd, attr);
+        struct s_data *d, const struct cpumask *cpu_map,
+        struct sched_domain_attr *attr, struct sched_domain *child,
+        int cpu)
+{
+    struct sched_domain *sd = tl->init(tl, cpu);
+    if (!sd)
+        return child;
+
+    cpumask_and(sched_domain_span(sd), cpu_map, tl->mask(cpu));
+    if (child) {
+        sd->level = child->level + 1;
+        sched_domain_level_max = max(sched_domain_level_max, sd->level);
+        child->parent = sd;
+    }
+    sd->child = child;
+    set_domain_attribute(sd, attr);
 
-	return sd;
+    return sd;
 }
 
 /*
@@ -6656,79 +6681,79 @@ struct sched_domain *build_sched_domain(
  * to the individual cpus
  */
 static int build_sched_domains(const struct cpumask *cpu_map,
-			       struct sched_domain_attr *attr)
+                   struct sched_domain_attr *attr)
 {
-	enum s_alloc alloc_state = sa_none;
-	struct sched_domain *sd;
-	struct s_data d;
-	int i, ret = -ENOMEM;
-
-	alloc_state = __visit_domain_allocation_hell(&d, cpu_map);
-	if (alloc_state != sa_rootdomain)
-		goto error;
-
-	/* Set up domains for cpus specified by the cpu_map. */
-	for_each_cpu(i, cpu_map) {
-		struct sched_domain_topology_level *tl;
-
-		sd = NULL;
-		for (tl = sched_domain_topology; tl->init; tl++) {
-			sd = build_sched_domain(tl, &d, cpu_map, attr, sd, i);
-			if (tl->flags & SDTL_OVERLAP || sched_feat(FORCE_SD_OVERLAP))
-				sd->flags |= SD_OVERLAP;
-			if (cpumask_equal(cpu_map, sched_domain_span(sd)))
-				break;
-		}
-
-		while (sd->child)
-			sd = sd->child;
-
-		*per_cpu_ptr(d.sd, i) = sd;
-	}
-
-	/* Build the groups for the domains */
-	for_each_cpu(i, cpu_map) {
-		for (sd = *per_cpu_ptr(d.sd, i); sd; sd = sd->parent) {
-			sd->span_weight = cpumask_weight(sched_domain_span(sd));
-			if (sd->flags & SD_OVERLAP) {
-				if (build_overlap_sched_groups(sd, i))
-					goto error;
-			} else {
-				if (build_sched_groups(sd, i))
-					goto error;
-			}
-		}
-	}
-
-	/* Calculate CPU power for physical packages and nodes */
-	for (i = nr_cpumask_bits-1; i >= 0; i--) {
-		if (!cpumask_test_cpu(i, cpu_map))
-			continue;
-
-		for (sd = *per_cpu_ptr(d.sd, i); sd; sd = sd->parent) {
-			claim_allocations(i, sd);
-			init_sched_groups_power(i, sd);
-		}
-	}
-
-	/* Attach the domains */
-	rcu_read_lock();
-	for_each_cpu(i, cpu_map) {
-		sd = *per_cpu_ptr(d.sd, i);
-		cpu_attach_domain(sd, d.rd, i);
-	}
-	rcu_read_unlock();
+    enum s_alloc alloc_state = sa_none;
+    struct sched_domain *sd;
+    struct s_data d;
+    int i, ret = -ENOMEM;
+
+    alloc_state = __visit_domain_allocation_hell(&d, cpu_map);
+    if (alloc_state != sa_rootdomain)
+        goto error;
+
+    /* Set up domains for cpus specified by the cpu_map. */
+    for_each_cpu(i, cpu_map) {
+        struct sched_domain_topology_level *tl;
+
+        sd = NULL;
+        for (tl = sched_domain_topology; tl->init; tl++) {
+            sd = build_sched_domain(tl, &d, cpu_map, attr, sd, i);
+            if (tl->flags & SDTL_OVERLAP || sched_feat(FORCE_SD_OVERLAP))
+                sd->flags |= SD_OVERLAP;
+            if (cpumask_equal(cpu_map, sched_domain_span(sd)))
+                break;
+        }
+
+        while (sd->child)
+            sd = sd->child;
+
+        *per_cpu_ptr(d.sd, i) = sd;
+    }
+
+    /* Build the groups for the domains */
+    for_each_cpu(i, cpu_map) {
+        for (sd = *per_cpu_ptr(d.sd, i); sd; sd = sd->parent) {
+            sd->span_weight = cpumask_weight(sched_domain_span(sd));
+            if (sd->flags & SD_OVERLAP) {
+                if (build_overlap_sched_groups(sd, i))
+                    goto error;
+            } else {
+                if (build_sched_groups(sd, i))
+                    goto error;
+            }
+        }
+    }
+
+    /* Calculate CPU power for physical packages and nodes */
+    for (i = nr_cpumask_bits-1; i >= 0; i--) {
+        if (!cpumask_test_cpu(i, cpu_map))
+            continue;
+
+        for (sd = *per_cpu_ptr(d.sd, i); sd; sd = sd->parent) {
+            claim_allocations(i, sd);
+            init_sched_groups_power(i, sd);
+        }
+    }
+
+    /* Attach the domains */
+    rcu_read_lock();
+    for_each_cpu(i, cpu_map) {
+        sd = *per_cpu_ptr(d.sd, i);
+        cpu_attach_domain(sd, d.rd, i);
+    }
+    rcu_read_unlock();
 
-	ret = 0;
+    ret = 0;
 error:
-	__free_domain_allocs(&d, alloc_state, cpu_map);
-	return ret;
+    __free_domain_allocs(&d, alloc_state, cpu_map);
+    return ret;
 }
 
-static cpumask_var_t *doms_cur;	/* current sched domains */
-static int ndoms_cur;		/* number of sched domains in 'doms_cur' */
+static cpumask_var_t *doms_cur;    /* current sched domains */
+static int ndoms_cur;        /* number of sched domains in 'doms_cur' */
 static struct sched_domain_attr *dattr_cur;
-				/* attribues of custom domains in 'doms_cur' */
+                /* attribues of custom domains in 'doms_cur' */
 
 /*
  * Special case: If a kmalloc of a doms_cur partition (array of
@@ -6744,32 +6769,32 @@ static cpumask_var_t fallback_doms;
  */
 int __attribute__((weak)) arch_update_cpu_topology(void)
 {
-	return 0;
+    return 0;
 }
 
 cpumask_var_t *alloc_sched_domains(unsigned int ndoms)
 {
-	int i;
-	cpumask_var_t *doms;
+    int i;
+    cpumask_var_t *doms;
 
-	doms = kmalloc(sizeof(*doms) * ndoms, GFP_KERNEL);
-	if (!doms)
-		return NULL;
-	for (i = 0; i < ndoms; i++) {
-		if (!alloc_cpumask_var(&doms[i], GFP_KERNEL)) {
-			free_sched_domains(doms, i);
-			return NULL;
-		}
-	}
-	return doms;
+    doms = kmalloc(sizeof(*doms) * ndoms, GFP_KERNEL);
+    if (!doms)
+        return NULL;
+    for (i = 0; i < ndoms; i++) {
+        if (!alloc_cpumask_var(&doms[i], GFP_KERNEL)) {
+            free_sched_domains(doms, i);
+            return NULL;
+        }
+    }
+    return doms;
 }
 
 void free_sched_domains(cpumask_var_t doms[], unsigned int ndoms)
 {
-	unsigned int i;
-	for (i = 0; i < ndoms; i++)
-		free_cpumask_var(doms[i]);
-	kfree(doms);
+    unsigned int i;
+    for (i = 0; i < ndoms; i++)
+        free_cpumask_var(doms[i]);
+    kfree(doms);
 }
 
 /*
@@ -6779,19 +6804,19 @@ void free_sched_domains(cpumask_var_t do
  */
 static int init_sched_domains(const struct cpumask *cpu_map)
 {
-	int err;
+    int err;
 
-	arch_update_cpu_topology();
-	ndoms_cur = 1;
-	doms_cur = alloc_sched_domains(ndoms_cur);
-	if (!doms_cur)
-		doms_cur = &fallback_doms;
-	cpumask_andnot(doms_cur[0], cpu_map, cpu_isolated_map);
-	dattr_cur = NULL;
-	err = build_sched_domains(doms_cur[0], NULL);
-	register_sched_domain_sysctl();
+    arch_update_cpu_topology();
+    ndoms_cur = 1;
+    doms_cur = alloc_sched_domains(ndoms_cur);
+    if (!doms_cur)
+        doms_cur = &fallback_doms;
+    cpumask_andnot(doms_cur[0], cpu_map, cpu_isolated_map);
+    dattr_cur = NULL;
+    err = build_sched_domains(doms_cur[0], NULL);
+    register_sched_domain_sysctl();
 
-	return err;
+    return err;
 }
 
 /*
@@ -6800,28 +6825,28 @@ static int init_sched_domains(const stru
  */
 static void detach_destroy_domains(const struct cpumask *cpu_map)
 {
-	int i;
+    int i;
 
-	rcu_read_lock();
-	for_each_cpu(i, cpu_map)
-		cpu_attach_domain(NULL, &def_root_domain, i);
-	rcu_read_unlock();
+    rcu_read_lock();
+    for_each_cpu(i, cpu_map)
+        cpu_attach_domain(NULL, &def_root_domain, i);
+    rcu_read_unlock();
 }
 
 /* handle null as "default" */
 static int dattrs_equal(struct sched_domain_attr *cur, int idx_cur,
-			struct sched_domain_attr *new, int idx_new)
+            struct sched_domain_attr *new, int idx_new)
 {
-	struct sched_domain_attr tmp;
+    struct sched_domain_attr tmp;
 
-	/* fast path */
-	if (!new && !cur)
-		return 1;
-
-	tmp = SD_ATTR_INIT;
-	return !memcmp(cur ? (cur + idx_cur) : &tmp,
-			new ? (new + idx_new) : &tmp,
-			sizeof(struct sched_domain_attr));
+    /* fast path */
+    if (!new && !cur)
+        return 1;
+
+    tmp = SD_ATTR_INIT;
+    return !memcmp(cur ? (cur + idx_cur) : &tmp,
+            new ? (new + idx_new) : &tmp,
+            sizeof(struct sched_domain_attr));
 }
 
 /*
@@ -6851,159 +6876,159 @@ static int dattrs_equal(struct sched_dom
  * Call with hotplug lock held
  */
 void partition_sched_domains(int ndoms_new, cpumask_var_t doms_new[],
-			     struct sched_domain_attr *dattr_new)
+                 struct sched_domain_attr *dattr_new)
 {
-	int i, j, n;
-	int new_topology;
+    int i, j, n;
+    int new_topology;
 
-	mutex_lock(&sched_domains_mutex);
+    mutex_lock(&sched_domains_mutex);
 
-	/* always unregister in case we don't destroy any domains */
-	unregister_sched_domain_sysctl();
-
-	/* Let architecture update cpu core mappings. */
-	new_topology = arch_update_cpu_topology();
-
-	n = doms_new ? ndoms_new : 0;
-
-	/* Destroy deleted domains */
-	for (i = 0; i < ndoms_cur; i++) {
-		for (j = 0; j < n && !new_topology; j++) {
-			if (cpumask_equal(doms_cur[i], doms_new[j])
-			    && dattrs_equal(dattr_cur, i, dattr_new, j))
-				goto match1;
-		}
-		/* no match - a current sched domain not in new doms_new[] */
-		detach_destroy_domains(doms_cur[i]);
+    /* always unregister in case we don't destroy any domains */
+    unregister_sched_domain_sysctl();
+
+    /* Let architecture update cpu core mappings. */
+    new_topology = arch_update_cpu_topology();
+
+    n = doms_new ? ndoms_new : 0;
+
+    /* Destroy deleted domains */
+    for (i = 0; i < ndoms_cur; i++) {
+        for (j = 0; j < n && !new_topology; j++) {
+            if (cpumask_equal(doms_cur[i], doms_new[j])
+                && dattrs_equal(dattr_cur, i, dattr_new, j))
+                goto match1;
+        }
+        /* no match - a current sched domain not in new doms_new[] */
+        detach_destroy_domains(doms_cur[i]);
 match1:
-		;
-	}
+        ;
+    }
 
-	if (doms_new == NULL) {
-		ndoms_cur = 0;
-		doms_new = &fallback_doms;
-		cpumask_andnot(doms_new[0], cpu_active_mask, cpu_isolated_map);
-		WARN_ON_ONCE(dattr_new);
-	}
-
-	/* Build new domains */
-	for (i = 0; i < ndoms_new; i++) {
-		for (j = 0; j < ndoms_cur && !new_topology; j++) {
-			if (cpumask_equal(doms_new[i], doms_cur[j])
-			    && dattrs_equal(dattr_new, i, dattr_cur, j))
-				goto match2;
-		}
-		/* no match - add a new doms_new */
-		build_sched_domains(doms_new[i], dattr_new ? dattr_new + i : NULL);
+    if (doms_new == NULL) {
+        ndoms_cur = 0;
+        doms_new = &fallback_doms;
+        cpumask_andnot(doms_new[0], cpu_active_mask, cpu_isolated_map);
+        WARN_ON_ONCE(dattr_new);
+    }
+
+    /* Build new domains */
+    for (i = 0; i < ndoms_new; i++) {
+        for (j = 0; j < ndoms_cur && !new_topology; j++) {
+            if (cpumask_equal(doms_new[i], doms_cur[j])
+                && dattrs_equal(dattr_new, i, dattr_cur, j))
+                goto match2;
+        }
+        /* no match - add a new doms_new */
+        build_sched_domains(doms_new[i], dattr_new ? dattr_new + i : NULL);
 match2:
-		;
-	}
+        ;
+    }
 
-	/* Remember the new sched domains */
-	if (doms_cur != &fallback_doms)
-		free_sched_domains(doms_cur, ndoms_cur);
-	kfree(dattr_cur);	/* kfree(NULL) is safe */
-	doms_cur = doms_new;
-	dattr_cur = dattr_new;
-	ndoms_cur = ndoms_new;
+    /* Remember the new sched domains */
+    if (doms_cur != &fallback_doms)
+        free_sched_domains(doms_cur, ndoms_cur);
+    kfree(dattr_cur);    /* kfree(NULL) is safe */
+    doms_cur = doms_new;
+    dattr_cur = dattr_new;
+    ndoms_cur = ndoms_new;
 
-	register_sched_domain_sysctl();
+    register_sched_domain_sysctl();
 
-	mutex_unlock(&sched_domains_mutex);
+    mutex_unlock(&sched_domains_mutex);
 }
 
 #if defined(CONFIG_SCHED_MC) || defined(CONFIG_SCHED_SMT)
 static void reinit_sched_domains(void)
 {
-	get_online_cpus();
+    get_online_cpus();
 
-	/* Destroy domains first to force the rebuild */
-	partition_sched_domains(0, NULL, NULL);
+    /* Destroy domains first to force the rebuild */
+    partition_sched_domains(0, NULL, NULL);
 
-	rebuild_sched_domains();
-	put_online_cpus();
+    rebuild_sched_domains();
+    put_online_cpus();
 }
 
 static ssize_t sched_power_savings_store(const char *buf, size_t count, int smt)
 {
-	unsigned int level = 0;
+    unsigned int level = 0;
 
-	if (sscanf(buf, "%u", &level) != 1)
-		return -EINVAL;
+    if (sscanf(buf, "%u", &level) != 1)
+        return -EINVAL;
 
-	/*
-	 * level is always be positive so don't check for
-	 * level < POWERSAVINGS_BALANCE_NONE which is 0
-	 * What happens on 0 or 1 byte write,
-	 * need to check for count as well?
-	 */
+    /*
+     * level is always be positive so don't check for
+     * level < POWERSAVINGS_BALANCE_NONE which is 0
+     * What happens on 0 or 1 byte write,
+     * need to check for count as well?
+     */
 
-	if (level >= MAX_POWERSAVINGS_BALANCE_LEVELS)
-		return -EINVAL;
+    if (level >= MAX_POWERSAVINGS_BALANCE_LEVELS)
+        return -EINVAL;
 
-	if (smt)
-		sched_smt_power_savings = level;
-	else
-		sched_mc_power_savings = level;
+    if (smt)
+        sched_smt_power_savings = level;
+    else
+        sched_mc_power_savings = level;
 
-	reinit_sched_domains();
+    reinit_sched_domains();
 
-	return count;
+    return count;
 }
 
 #ifdef CONFIG_SCHED_MC
 static ssize_t sched_mc_power_savings_show(struct device *dev,
-					   struct device_attribute *attr,
-					   char *buf)
+                       struct device_attribute *attr,
+                       char *buf)
 {
-	return sprintf(buf, "%u\n", sched_mc_power_savings);
+    return sprintf(buf, "%u\n", sched_mc_power_savings);
 }
 static ssize_t sched_mc_power_savings_store(struct device *dev,
-					    struct device_attribute *attr,
-					    const char *buf, size_t count)
+                        struct device_attribute *attr,
+                        const char *buf, size_t count)
 {
-	return sched_power_savings_store(buf, count, 0);
+    return sched_power_savings_store(buf, count, 0);
 }
 static DEVICE_ATTR(sched_mc_power_savings, 0644,
-		   sched_mc_power_savings_show,
-		   sched_mc_power_savings_store);
+           sched_mc_power_savings_show,
+           sched_mc_power_savings_store);
 #endif
 
 #ifdef CONFIG_SCHED_SMT
 static ssize_t sched_smt_power_savings_show(struct device *dev,
-					    struct device_attribute *attr,
-					    char *buf)
+                        struct device_attribute *attr,
+                        char *buf)
 {
-	return sprintf(buf, "%u\n", sched_smt_power_savings);
+    return sprintf(buf, "%u\n", sched_smt_power_savings);
 }
 static ssize_t sched_smt_power_savings_store(struct device *dev,
-					    struct device_attribute *attr,
-					     const char *buf, size_t count)
+                        struct device_attribute *attr,
+                         const char *buf, size_t count)
 {
-	return sched_power_savings_store(buf, count, 1);
+    return sched_power_savings_store(buf, count, 1);
 }
 static DEVICE_ATTR(sched_smt_power_savings, 0644,
-		   sched_smt_power_savings_show,
-		   sched_smt_power_savings_store);
+           sched_smt_power_savings_show,
+           sched_smt_power_savings_store);
 #endif
 
 int __init sched_create_sysfs_power_savings_entries(struct device *dev)
 {
-	int err = 0;
+    int err = 0;
 
 #ifdef CONFIG_SCHED_SMT
-	if (smt_capable())
-		err = device_create_file(dev, &dev_attr_sched_smt_power_savings);
+    if (smt_capable())
+        err = device_create_file(dev, &dev_attr_sched_smt_power_savings);
 #endif
 #ifdef CONFIG_SCHED_MC
-	if (!err && mc_capable())
-		err = device_create_file(dev, &dev_attr_sched_mc_power_savings);
+    if (!err && mc_capable())
+        err = device_create_file(dev, &dev_attr_sched_mc_power_savings);
 #endif
-	return err;
+    return err;
 }
 #endif /* CONFIG_SCHED_MC || CONFIG_SCHED_SMT */
 
-static int num_cpus_frozen;	/* used to mark begin/end of suspend/resume */
+static int num_cpus_frozen;    /* used to mark begin/end of suspend/resume */
 
 /*
  * Update cpusets according to cpu_active mask.  If cpusets are
@@ -7014,93 +7039,93 @@ static int num_cpus_frozen;	/* used to m
  * want to restore it back to its original state upon resume anyway.
  */
 static int cpuset_cpu_active(struct notifier_block *nfb, unsigned long action,
-			     void *hcpu)
+                 void *hcpu)
 {
-	switch (action) {
-	case CPU_ONLINE_FROZEN:
-	case CPU_DOWN_FAILED_FROZEN:
-
-		/*
-		 * num_cpus_frozen tracks how many CPUs are involved in suspend
-		 * resume sequence. As long as this is not the last online
-		 * operation in the resume sequence, just build a single sched
-		 * domain, ignoring cpusets.
-		 */
-		num_cpus_frozen--;
-		if (likely(num_cpus_frozen)) {
-			partition_sched_domains(1, NULL, NULL);
-			break;
-		}
-
-		/*
-		 * This is the last CPU online operation. So fall through and
-		 * restore the original sched domains by considering the
-		 * cpuset configurations.
-		 */
-
-	case CPU_ONLINE:
-	case CPU_DOWN_FAILED:
-		cpuset_update_active_cpus();
-		break;
-	default:
-		return NOTIFY_DONE;
-	}
-	return NOTIFY_OK;
+    switch (action) {
+    case CPU_ONLINE_FROZEN:
+    case CPU_DOWN_FAILED_FROZEN:
+
+        /*
+         * num_cpus_frozen tracks how many CPUs are involved in suspend
+         * resume sequence. As long as this is not the last online
+         * operation in the resume sequence, just build a single sched
+         * domain, ignoring cpusets.
+         */
+        num_cpus_frozen--;
+        if (likely(num_cpus_frozen)) {
+            partition_sched_domains(1, NULL, NULL);
+            break;
+        }
+
+        /*
+         * This is the last CPU online operation. So fall through and
+         * restore the original sched domains by considering the
+         * cpuset configurations.
+         */
+
+    case CPU_ONLINE:
+    case CPU_DOWN_FAILED:
+        cpuset_update_active_cpus();
+        break;
+    default:
+        return NOTIFY_DONE;
+    }
+    return NOTIFY_OK;
 }
 
 static int cpuset_cpu_inactive(struct notifier_block *nfb, unsigned long action,
-			       void *hcpu)
+                   void *hcpu)
 {
-	switch (action) {
-	case CPU_DOWN_PREPARE:
-		cpuset_update_active_cpus();
-		break;
-	case CPU_DOWN_PREPARE_FROZEN:
-		num_cpus_frozen++;
-		partition_sched_domains(1, NULL, NULL);
-		break;
-	default:
-		return NOTIFY_DONE;
-	}
-	return NOTIFY_OK;
+    switch (action) {
+    case CPU_DOWN_PREPARE:
+        cpuset_update_active_cpus();
+        break;
+    case CPU_DOWN_PREPARE_FROZEN:
+        num_cpus_frozen++;
+        partition_sched_domains(1, NULL, NULL);
+        break;
+    default:
+        return NOTIFY_DONE;
+    }
+    return NOTIFY_OK;
 }
 
 void __init sched_init_smp(void)
 {
-	cpumask_var_t non_isolated_cpus;
+    cpumask_var_t non_isolated_cpus;
 
-	alloc_cpumask_var(&non_isolated_cpus, GFP_KERNEL);
-	alloc_cpumask_var(&fallback_doms, GFP_KERNEL);
+    alloc_cpumask_var(&non_isolated_cpus, GFP_KERNEL);
+    alloc_cpumask_var(&fallback_doms, GFP_KERNEL);
 
-	get_online_cpus();
-	mutex_lock(&sched_domains_mutex);
-	init_sched_domains(cpu_active_mask);
-	cpumask_andnot(non_isolated_cpus, cpu_possible_mask, cpu_isolated_map);
-	if (cpumask_empty(non_isolated_cpus))
-		cpumask_set_cpu(smp_processor_id(), non_isolated_cpus);
-	mutex_unlock(&sched_domains_mutex);
-	put_online_cpus();
-
-	hotcpu_notifier(cpuset_cpu_active, CPU_PRI_CPUSET_ACTIVE);
-	hotcpu_notifier(cpuset_cpu_inactive, CPU_PRI_CPUSET_INACTIVE);
-
-	/* RT runtime code needs to handle some hotplug events */
-	hotcpu_notifier(update_runtime, 0);
-
-	init_hrtick();
-
-	/* Move init over to a non-isolated CPU */
-	if (set_cpus_allowed_ptr(current, non_isolated_cpus) < 0)
-		BUG();
-	sched_init_granularity();
-	free_cpumask_var(non_isolated_cpus);
+    get_online_cpus();
+    mutex_lock(&sched_domains_mutex);
+    init_sched_domains(cpu_active_mask);
+    cpumask_andnot(non_isolated_cpus, cpu_possible_mask, cpu_isolated_map);
+    if (cpumask_empty(non_isolated_cpus))
+        cpumask_set_cpu(smp_processor_id(), non_isolated_cpus);
+    mutex_unlock(&sched_domains_mutex);
+    put_online_cpus();
+
+    hotcpu_notifier(cpuset_cpu_active, CPU_PRI_CPUSET_ACTIVE);
+    hotcpu_notifier(cpuset_cpu_inactive, CPU_PRI_CPUSET_INACTIVE);
+
+    /* RT runtime code needs to handle some hotplug events */
+    hotcpu_notifier(update_runtime, 0);
+
+    init_hrtick();
+
+    /* Move init over to a non-isolated CPU */
+    if (set_cpus_allowed_ptr(current, non_isolated_cpus) < 0)
+        BUG();
+    sched_init_granularity();
+    free_cpumask_var(non_isolated_cpus);
 
-	init_sched_rt_class();
+    init_sched_rt_class();
 }
 #else
 void __init sched_init_smp(void)
 {
-	sched_init_granularity();
+    sched_init_granularity();
 }
 #endif /* CONFIG_SMP */
 
@@ -7108,9 +7133,9 @@ const_debug unsigned int sysctl_timer_mi
 
 int in_sched_functions(unsigned long addr)
 {
-	return in_lock_functions(addr) ||
-		(addr >= (unsigned long)__sched_text_start
-		&& addr < (unsigned long)__sched_text_end);
+    return in_lock_functions(addr) ||
+        (addr >= (unsigned long)__sched_text_start
+        && addr < (unsigned long)__sched_text_end);
 }
 
 #ifdef CONFIG_CGROUP_SCHED
@@ -7122,216 +7147,216 @@ DECLARE_PER_CPU(cpumask_var_t, load_bala
 
 void __init sched_init(void)
 {
-	int i, j;
-	unsigned long alloc_size = 0, ptr;
+    int i, j;
+    unsigned long alloc_size = 0, ptr;
 
 #ifdef CONFIG_FAIR_GROUP_SCHED
-	alloc_size += 2 * nr_cpu_ids * sizeof(void **);
+    alloc_size += 2 * nr_cpu_ids * sizeof(void **);
 #endif
 #ifdef CONFIG_RT_GROUP_SCHED
-	alloc_size += 2 * nr_cpu_ids * sizeof(void **);
+    alloc_size += 2 * nr_cpu_ids * sizeof(void **);
 #endif
 #ifdef CONFIG_CPUMASK_OFFSTACK
-	alloc_size += num_possible_cpus() * cpumask_size();
+    alloc_size += num_possible_cpus() * cpumask_size();
 #endif
-	if (alloc_size) {
-		ptr = (unsigned long)kzalloc(alloc_size, GFP_NOWAIT);
+    if (alloc_size) {
+        ptr = (unsigned long)kzalloc(alloc_size, GFP_NOWAIT);
 
 #ifdef CONFIG_FAIR_GROUP_SCHED
-		root_task_group.se = (struct sched_entity **)ptr;
-		ptr += nr_cpu_ids * sizeof(void **);
+        root_task_group.se = (struct sched_entity **)ptr;
+        ptr += nr_cpu_ids * sizeof(void **);
 
-		root_task_group.cfs_rq = (struct cfs_rq **)ptr;
-		ptr += nr_cpu_ids * sizeof(void **);
+        root_task_group.cfs_rq = (struct cfs_rq **)ptr;
+        ptr += nr_cpu_ids * sizeof(void **);
 
 #endif /* CONFIG_FAIR_GROUP_SCHED */
 #ifdef CONFIG_RT_GROUP_SCHED
-		root_task_group.rt_se = (struct sched_rt_entity **)ptr;
-		ptr += nr_cpu_ids * sizeof(void **);
+        root_task_group.rt_se = (struct sched_rt_entity **)ptr;
+        ptr += nr_cpu_ids * sizeof(void **);
 
-		root_task_group.rt_rq = (struct rt_rq **)ptr;
-		ptr += nr_cpu_ids * sizeof(void **);
+        root_task_group.rt_rq = (struct rt_rq **)ptr;
+        ptr += nr_cpu_ids * sizeof(void **);
 
 #endif /* CONFIG_RT_GROUP_SCHED */
 #ifdef CONFIG_CPUMASK_OFFSTACK
-		for_each_possible_cpu(i) {
-			per_cpu(load_balance_tmpmask, i) = (void *)ptr;
-			ptr += cpumask_size();
-		}
+        for_each_possible_cpu(i) {
+            per_cpu(load_balance_tmpmask, i) = (void *)ptr;
+            ptr += cpumask_size();
+        }
 #endif /* CONFIG_CPUMASK_OFFSTACK */
-	}
+    }
 
 #ifdef CONFIG_SMP
-	init_defrootdomain();
+    init_defrootdomain();
 #endif
 
-	init_rt_bandwidth(&def_rt_bandwidth,
-			global_rt_period(), global_rt_runtime());
+    init_rt_bandwidth(&def_rt_bandwidth,
+            global_rt_period(), global_rt_runtime());
 
 #ifdef CONFIG_RT_GROUP_SCHED
-	init_rt_bandwidth(&root_task_group.rt_bandwidth,
-			global_rt_period(), global_rt_runtime());
+    init_rt_bandwidth(&root_task_group.rt_bandwidth,
+            global_rt_period(), global_rt_runtime());
 #endif /* CONFIG_RT_GROUP_SCHED */
 
 #ifdef CONFIG_CGROUP_SCHED
-	list_add(&root_task_group.list, &task_groups);
-	INIT_LIST_HEAD(&root_task_group.children);
-	INIT_LIST_HEAD(&root_task_group.siblings);
-	autogroup_init(&init_task);
+    list_add(&root_task_group.list, &task_groups);
+    INIT_LIST_HEAD(&root_task_group.children);
+    INIT_LIST_HEAD(&root_task_group.siblings);
+    autogroup_init(&init_task);
 
 #endif /* CONFIG_CGROUP_SCHED */
 
 #ifdef CONFIG_CGROUP_CPUACCT
-	root_cpuacct.cpustat = &kernel_cpustat;
-	root_cpuacct.cpuusage = alloc_percpu(u64);
-	/* Too early, not expected to fail */
-	BUG_ON(!root_cpuacct.cpuusage);
-#endif
-	for_each_possible_cpu(i) {
-		struct rq *rq;
-
-		rq = cpu_rq(i);
-		raw_spin_lock_init(&rq->lock);
-		rq->nr_running = 0;
-		rq->calc_load_active = 0;
-		rq->calc_load_update = jiffies + LOAD_FREQ;
-		init_cfs_rq(&rq->cfs);
-		init_rt_rq(&rq->rt, rq);
+    root_cpuacct.cpustat = &kernel_cpustat;
+    root_cpuacct.cpuusage = alloc_percpu(u64);
+    /* Too early, not expected to fail */
+    BUG_ON(!root_cpuacct.cpuusage);
+#endif
+    for_each_possible_cpu(i) {
+        struct rq *rq;
+
+        rq = cpu_rq(i);
+        raw_spin_lock_init(&rq->lock);
+        rq->nr_running = 0;
+        rq->calc_load_active = 0;
+        rq->calc_load_update = jiffies + LOAD_FREQ;
+        init_cfs_rq(&rq->cfs);
+        init_rt_rq(&rq->rt, rq);
 #ifdef CONFIG_FAIR_GROUP_SCHED
-		root_task_group.shares = ROOT_TASK_GROUP_LOAD;
-		INIT_LIST_HEAD(&rq->leaf_cfs_rq_list);
-		/*
-		 * How much cpu bandwidth does root_task_group get?
-		 *
-		 * In case of task-groups formed thr' the cgroup filesystem, it
-		 * gets 100% of the cpu resources in the system. This overall
-		 * system cpu resource is divided among the tasks of
-		 * root_task_group and its child task-groups in a fair manner,
-		 * based on each entity's (task or task-group's) weight
-		 * (se->load.weight).
-		 *
-		 * In other words, if root_task_group has 10 tasks of weight
-		 * 1024) and two child groups A0 and A1 (of weight 1024 each),
-		 * then A0's share of the cpu resource is:
-		 *
-		 *	A0's bandwidth = 1024 / (10*1024 + 1024 + 1024) = 8.33%
-		 *
-		 * We achieve this by letting root_task_group's tasks sit
-		 * directly in rq->cfs (i.e root_task_group->se[] = NULL).
-		 */
-		init_cfs_bandwidth(&root_task_group.cfs_bandwidth);
-		init_tg_cfs_entry(&root_task_group, &rq->cfs, NULL, i, NULL);
+        root_task_group.shares = ROOT_TASK_GROUP_LOAD;
+        INIT_LIST_HEAD(&rq->leaf_cfs_rq_list);
+        /*
+         * How much cpu bandwidth does root_task_group get?
+         *
+         * In case of task-groups formed thr' the cgroup filesystem, it
+         * gets 100% of the cpu resources in the system. This overall
+         * system cpu resource is divided among the tasks of
+         * root_task_group and its child task-groups in a fair manner,
+         * based on each entity's (task or task-group's) weight
+         * (se->load.weight).
+         *
+         * In other words, if root_task_group has 10 tasks of weight
+         * 1024) and two child groups A0 and A1 (of weight 1024 each),
+         * then A0's share of the cpu resource is:
+         *
+         *    A0's bandwidth = 1024 / (10*1024 + 1024 + 1024) = 8.33%
+         *
+         * We achieve this by letting root_task_group's tasks sit
+         * directly in rq->cfs (i.e root_task_group->se[] = NULL).
+         */
+        init_cfs_bandwidth(&root_task_group.cfs_bandwidth);
+        init_tg_cfs_entry(&root_task_group, &rq->cfs, NULL, i, NULL);
 #endif /* CONFIG_FAIR_GROUP_SCHED */
 
-		rq->rt.rt_runtime = def_rt_bandwidth.rt_runtime;
+        rq->rt.rt_runtime = def_rt_bandwidth.rt_runtime;
 #ifdef CONFIG_RT_GROUP_SCHED
-		INIT_LIST_HEAD(&rq->leaf_rt_rq_list);
-		init_tg_rt_entry(&root_task_group, &rq->rt, NULL, i, NULL);
+        INIT_LIST_HEAD(&rq->leaf_rt_rq_list);
+        init_tg_rt_entry(&root_task_group, &rq->rt, NULL, i, NULL);
 #endif
 
-		for (j = 0; j < CPU_LOAD_IDX_MAX; j++)
-			rq->cpu_load[j] = 0;
+        for (j = 0; j < CPU_LOAD_IDX_MAX; j++)
+            rq->cpu_load[j] = 0;
 
-		rq->last_load_update_tick = jiffies;
+        rq->last_load_update_tick = jiffies;
 
 #ifdef CONFIG_SMP
-		rq->sd = NULL;
-		rq->rd = NULL;
-		rq->cpu_power = SCHED_POWER_SCALE;
-		rq->post_schedule = 0;
-		rq->active_balance = 0;
-		rq->next_balance = jiffies;
-		rq->push_cpu = 0;
-		rq->cpu = i;
-		rq->online = 0;
-		rq->idle_stamp = 0;
-		rq->avg_idle = 2*sysctl_sched_migration_cost;
+        rq->sd = NULL;
+        rq->rd = NULL;
+        rq->cpu_power = SCHED_POWER_SCALE;
+        rq->post_schedule = 0;
+        rq->active_balance = 0;
+        rq->next_balance = jiffies;
+        rq->push_cpu = 0;
+        rq->cpu = i;
+        rq->online = 0;
+        rq->idle_stamp = 0;
+        rq->avg_idle = 2*sysctl_sched_migration_cost;
 
-		INIT_LIST_HEAD(&rq->cfs_tasks);
+        INIT_LIST_HEAD(&rq->cfs_tasks);
 
-		rq_attach_root(rq, &def_root_domain);
+        rq_attach_root(rq, &def_root_domain);
 #ifdef CONFIG_NO_HZ
-		rq->nohz_flags = 0;
+        rq->nohz_flags = 0;
 #endif
 #endif
-		init_rq_hrtick(rq);
-		atomic_set(&rq->nr_iowait, 0);
-	}
+        init_rq_hrtick(rq);
+        atomic_set(&rq->nr_iowait, 0);
+    }
 
-	set_load_weight(&init_task);
+    set_load_weight(&init_task);
 
 #ifdef CONFIG_PREEMPT_NOTIFIERS
-	INIT_HLIST_HEAD(&init_task.preempt_notifiers);
+    INIT_HLIST_HEAD(&init_task.preempt_notifiers);
 #endif
 
 #ifdef CONFIG_RT_MUTEXES
-	plist_head_init(&init_task.pi_waiters);
+    plist_head_init(&init_task.pi_waiters);
 #endif
 
-	/*
-	 * The boot idle thread does lazy MMU switching as well:
-	 */
-	atomic_inc(&init_mm.mm_count);
-	enter_lazy_tlb(&init_mm, current);
-
-	/*
-	 * Make us the idle thread. Technically, schedule() should not be
-	 * called from this thread, however somewhere below it might be,
-	 * but because we are the idle thread, we just pick up running again
-	 * when this runqueue becomes "idle".
-	 */
-	init_idle(current, smp_processor_id());
-
-	calc_load_update = jiffies + LOAD_FREQ;
-
-	/*
-	 * During early bootup we pretend to be a normal task:
-	 */
-	current->sched_class = &fair_sched_class;
+    /*
+     * The boot idle thread does lazy MMU switching as well:
+     */
+    atomic_inc(&init_mm.mm_count);
+    enter_lazy_tlb(&init_mm, current);
+
+    /*
+     * Make us the idle thread. Technically, schedule() should not be
+     * called from this thread, however somewhere below it might be,
+     * but because we are the idle thread, we just pick up running again
+     * when this runqueue becomes "idle".
+     */
+    init_idle(current, smp_processor_id());
+
+    calc_load_update = jiffies + LOAD_FREQ;
+
+    /*
+     * During early bootup we pretend to be a normal task:
+     */
+    current->sched_class = &fair_sched_class;
 
 #ifdef CONFIG_SMP
-	zalloc_cpumask_var(&sched_domains_tmpmask, GFP_NOWAIT);
-	/* May be allocated at isolcpus cmdline parse time */
-	if (cpu_isolated_map == NULL)
-		zalloc_cpumask_var(&cpu_isolated_map, GFP_NOWAIT);
+    zalloc_cpumask_var(&sched_domains_tmpmask, GFP_NOWAIT);
+    /* May be allocated at isolcpus cmdline parse time */
+    if (cpu_isolated_map == NULL)
+        zalloc_cpumask_var(&cpu_isolated_map, GFP_NOWAIT);
 #endif
-	init_sched_fair_class();
+    init_sched_fair_class();
 
-	scheduler_running = 1;
+    scheduler_running = 1;
 }
 
 #ifdef CONFIG_DEBUG_ATOMIC_SLEEP
 static inline int preempt_count_equals(int preempt_offset)
 {
-	int nested = (preempt_count() & ~PREEMPT_ACTIVE) + rcu_preempt_depth();
+    int nested = (preempt_count() & ~PREEMPT_ACTIVE) + rcu_preempt_depth();
 
-	return (nested == preempt_offset);
+    return (nested == preempt_offset);
 }
 
 void __might_sleep(const char *file, int line, int preempt_offset)
 {
-	static unsigned long prev_jiffy;	/* ratelimiting */
+    static unsigned long prev_jiffy;    /* ratelimiting */
 
-	rcu_sleep_check(); /* WARN_ON_ONCE() by default, no rate limit reqd. */
-	if ((preempt_count_equals(preempt_offset) && !irqs_disabled()) ||
-	    system_state != SYSTEM_RUNNING || oops_in_progress)
-		return;
-	if (time_before(jiffies, prev_jiffy + HZ) && prev_jiffy)
-		return;
-	prev_jiffy = jiffies;
-
-	printk(KERN_ERR
-		"BUG: sleeping function called from invalid context at %s:%d\n",
-			file, line);
-	printk(KERN_ERR
-		"in_atomic(): %d, irqs_disabled(): %d, pid: %d, name: %s\n",
-			in_atomic(), irqs_disabled(),
-			current->pid, current->comm);
-
-	debug_show_held_locks(current);
-	if (irqs_disabled())
-		print_irqtrace_events(current);
-	dump_stack();
+    rcu_sleep_check(); /* WARN_ON_ONCE() by default, no rate limit reqd. */
+    if ((preempt_count_equals(preempt_offset) && !irqs_disabled()) ||
+        system_state != SYSTEM_RUNNING || oops_in_progress)
+        return;
+    if (time_before(jiffies, prev_jiffy + HZ) && prev_jiffy)
+        return;
+    prev_jiffy = jiffies;
+
+    printk(KERN_ERR
+        "BUG: sleeping function called from invalid context at %s:%d\n",
+            file, line);
+    printk(KERN_ERR
+        "in_atomic(): %d, irqs_disabled(): %d, pid: %d, name: %s\n",
+            in_atomic(), irqs_disabled(),
+            current->pid, current->comm);
+
+    debug_show_held_locks(current);
+    if (irqs_disabled())
+        print_irqtrace_events(current);
+    dump_stack();
 }
 EXPORT_SYMBOL(__might_sleep);
 #endif
@@ -7339,63 +7364,63 @@ EXPORT_SYMBOL(__might_sleep);
 #ifdef CONFIG_MAGIC_SYSRQ
 static void normalize_task(struct rq *rq, struct task_struct *p)
 {
-	const struct sched_class *prev_class = p->sched_class;
-	int old_prio = p->prio;
-	int on_rq;
-
-	on_rq = p->on_rq;
-	if (on_rq)
-		dequeue_task(rq, p, 0);
-	__setscheduler(rq, p, SCHED_NORMAL, 0);
-	if (on_rq) {
-		enqueue_task(rq, p, 0);
-		resched_task(rq->curr);
-	}
+    const struct sched_class *prev_class = p->sched_class;
+    int old_prio = p->prio;
+    int on_rq;
+
+    on_rq = p->on_rq;
+    if (on_rq)
+        dequeue_task(rq, p, 0);
+    __setscheduler(rq, p, SCHED_NORMAL, 0);
+    if (on_rq) {
+        enqueue_task(rq, p, 0);
+        resched_task(rq->curr);
+    }
 
-	check_class_changed(rq, p, prev_class, old_prio);
+    check_class_changed(rq, p, prev_class, old_prio);
 }
 
 void normalize_rt_tasks(void)
 {
-	struct task_struct *g, *p;
-	unsigned long flags;
-	struct rq *rq;
-
-	read_lock_irqsave(&tasklist_lock, flags);
-	do_each_thread(g, p) {
-		/*
-		 * Only normalize user tasks:
-		 */
-		if (!p->mm)
-			continue;
+    struct task_struct *g, *p;
+    unsigned long flags;
+    struct rq *rq;
+
+    read_lock_irqsave(&tasklist_lock, flags);
+    do_each_thread(g, p) {
+        /*
+         * Only normalize user tasks:
+         */
+        if (!p->mm)
+            continue;
 
-		p->se.exec_start		= 0;
+        p->se.exec_start        = 0;
 #ifdef CONFIG_SCHEDSTATS
-		p->se.statistics.wait_start	= 0;
-		p->se.statistics.sleep_start	= 0;
-		p->se.statistics.block_start	= 0;
-#endif
-
-		if (!rt_task(p)) {
-			/*
-			 * Renice negative nice level userspace
-			 * tasks back to 0:
-			 */
-			if (TASK_NICE(p) < 0 && p->mm)
-				set_user_nice(p, 0);
-			continue;
-		}
-
-		raw_spin_lock(&p->pi_lock);
-		rq = __task_rq_lock(p);
-
-		normalize_task(rq, p);
-
-		__task_rq_unlock(rq);
-		raw_spin_unlock(&p->pi_lock);
-	} while_each_thread(g, p);
+        p->se.statistics.wait_start    = 0;
+        p->se.statistics.sleep_start    = 0;
+        p->se.statistics.block_start    = 0;
+#endif
+
+        if (!rt_task(p)) {
+            /*
+             * Renice negative nice level userspace
+             * tasks back to 0:
+             */
+            if (TASK_NICE(p) < 0 && p->mm)
+                set_user_nice(p, 0);
+            continue;
+        }
+
+        raw_spin_lock(&p->pi_lock);
+        rq = __task_rq_lock(p);
+
+        normalize_task(rq, p);
+
+        __task_rq_unlock(rq);
+        raw_spin_unlock(&p->pi_lock);
+    } while_each_thread(g, p);
 
-	read_unlock_irqrestore(&tasklist_lock, flags);
+    read_unlock_irqrestore(&tasklist_lock, flags);
 }
 
 #endif /* CONFIG_MAGIC_SYSRQ */
@@ -7419,7 +7444,7 @@ void normalize_rt_tasks(void)
  */
 struct task_struct *curr_task(int cpu)
 {
-	return cpu_curr(cpu);
+    return cpu_curr(cpu);
 }
 
 #endif /* defined(CONFIG_IA64) || defined(CONFIG_KGDB_KDB) */
@@ -7442,7 +7467,7 @@ struct task_struct *curr_task(int cpu)
  */
 void set_curr_task(int cpu, struct task_struct *p)
 {
-	cpu_curr(cpu) = p;
+    cpu_curr(cpu) = p;
 }
 
 #endif
@@ -7453,122 +7478,122 @@ static DEFINE_SPINLOCK(task_group_lock);
 
 static void free_sched_group(struct task_group *tg)
 {
-	free_fair_sched_group(tg);
-	free_rt_sched_group(tg);
-	autogroup_free(tg);
-	kfree(tg);
+    free_fair_sched_group(tg);
+    free_rt_sched_group(tg);
+    autogroup_free(tg);
+    kfree(tg);
 }
 
 /* allocate runqueue etc for a new task group */
 struct task_group *sched_create_group(struct task_group *parent)
 {
-	struct task_group *tg;
-	unsigned long flags;
+    struct task_group *tg;
+    unsigned long flags;
 
-	tg = kzalloc(sizeof(*tg), GFP_KERNEL);
-	if (!tg)
-		return ERR_PTR(-ENOMEM);
+    tg = kzalloc(sizeof(*tg), GFP_KERNEL);
+    if (!tg)
+        return ERR_PTR(-ENOMEM);
 
-	if (!alloc_fair_sched_group(tg, parent))
-		goto err;
+    if (!alloc_fair_sched_group(tg, parent))
+        goto err;
 
-	if (!alloc_rt_sched_group(tg, parent))
-		goto err;
+    if (!alloc_rt_sched_group(tg, parent))
+        goto err;
 
-	spin_lock_irqsave(&task_group_lock, flags);
-	list_add_rcu(&tg->list, &task_groups);
+    spin_lock_irqsave(&task_group_lock, flags);
+    list_add_rcu(&tg->list, &task_groups);
 
-	WARN_ON(!parent); /* root should already exist */
+    WARN_ON(!parent); /* root should already exist */
 
-	tg->parent = parent;
-	INIT_LIST_HEAD(&tg->children);
-	list_add_rcu(&tg->siblings, &parent->children);
-	spin_unlock_irqrestore(&task_group_lock, flags);
+    tg->parent = parent;
+    INIT_LIST_HEAD(&tg->children);
+    list_add_rcu(&tg->siblings, &parent->children);
+    spin_unlock_irqrestore(&task_group_lock, flags);
 
-	return tg;
+    return tg;
 
 err:
-	free_sched_group(tg);
-	return ERR_PTR(-ENOMEM);
+    free_sched_group(tg);
+    return ERR_PTR(-ENOMEM);
 }
 
 /* rcu callback to free various structures associated with a task group */
 static void free_sched_group_rcu(struct rcu_head *rhp)
 {
-	/* now it should be safe to free those cfs_rqs */
-	free_sched_group(container_of(rhp, struct task_group, rcu));
+    /* now it should be safe to free those cfs_rqs */
+    free_sched_group(container_of(rhp, struct task_group, rcu));
 }
 
 /* Destroy runqueue etc associated with a task group */
 void sched_destroy_group(struct task_group *tg)
 {
-	unsigned long flags;
-	int i;
+    unsigned long flags;
+    int i;
 
-	/* end participation in shares distribution */
-	for_each_possible_cpu(i)
-		unregister_fair_sched_group(tg, i);
-
-	spin_lock_irqsave(&task_group_lock, flags);
-	list_del_rcu(&tg->list);
-	list_del_rcu(&tg->siblings);
-	spin_unlock_irqrestore(&task_group_lock, flags);
+    /* end participation in shares distribution */
+    for_each_possible_cpu(i)
+        unregister_fair_sched_group(tg, i);
+
+    spin_lock_irqsave(&task_group_lock, flags);
+    list_del_rcu(&tg->list);
+    list_del_rcu(&tg->siblings);
+    spin_unlock_irqrestore(&task_group_lock, flags);
 
-	/* wait for possible concurrent references to cfs_rqs complete */
-	call_rcu(&tg->rcu, free_sched_group_rcu);
+    /* wait for possible concurrent references to cfs_rqs complete */
+    call_rcu(&tg->rcu, free_sched_group_rcu);
 }
 
 /* change task's runqueue when it moves between groups.
- *	The caller of this function should have put the task in its new group
- *	by now. This function just updates tsk->se.cfs_rq and tsk->se.parent to
- *	reflect its new group.
+ *    The caller of this function should have put the task in its new group
+ *    by now. This function just updates tsk->se.cfs_rq and tsk->se.parent to
+ *    reflect its new group.
  */
 void sched_move_task(struct task_struct *tsk)
 {
-	struct task_group *tg;
-	int on_rq, running;
-	unsigned long flags;
-	struct rq *rq;
-
-	rq = task_rq_lock(tsk, &flags);
-
-	running = task_current(rq, tsk);
-	on_rq = tsk->on_rq;
-
-	if (on_rq)
-		dequeue_task(rq, tsk, 0);
-	if (unlikely(running))
-		tsk->sched_class->put_prev_task(rq, tsk);
-
-	tg = container_of(task_subsys_state_check(tsk, cpu_cgroup_subsys_id,
-				lockdep_is_held(&tsk->sighand->siglock)),
-			  struct task_group, css);
-	tg = autogroup_task_group(tsk, tg);
-	tsk->sched_task_group = tg;
+    struct task_group *tg;
+    int on_rq, running;
+    unsigned long flags;
+    struct rq *rq;
+
+    rq = task_rq_lock(tsk, &flags);
+
+    running = task_current(rq, tsk);
+    on_rq = tsk->on_rq;
+
+    if (on_rq)
+        dequeue_task(rq, tsk, 0);
+    if (unlikely(running))
+        tsk->sched_class->put_prev_task(rq, tsk);
+
+    tg = container_of(task_subsys_state_check(tsk, cpu_cgroup_subsys_id,
+                lockdep_is_held(&tsk->sighand->siglock)),
+              struct task_group, css);
+    tg = autogroup_task_group(tsk, tg);
+    tsk->sched_task_group = tg;
 
 #ifdef CONFIG_FAIR_GROUP_SCHED
-	if (tsk->sched_class->task_move_group)
-		tsk->sched_class->task_move_group(tsk, on_rq);
-	else
-#endif
-		set_task_rq(tsk, task_cpu(tsk));
-
-	if (unlikely(running))
-		tsk->sched_class->set_curr_task(rq);
-	if (on_rq)
-		enqueue_task(rq, tsk, 0);
+    if (tsk->sched_class->task_move_group)
+        tsk->sched_class->task_move_group(tsk, on_rq);
+    else
+#endif
+        set_task_rq(tsk, task_cpu(tsk));
+
+    if (unlikely(running))
+        tsk->sched_class->set_curr_task(rq);
+    if (on_rq)
+        enqueue_task(rq, tsk, 0);
 
-	task_rq_unlock(rq, tsk, &flags);
+    task_rq_unlock(rq, tsk, &flags);
 }
 #endif /* CONFIG_CGROUP_SCHED */
 
 #if defined(CONFIG_RT_GROUP_SCHED) || defined(CONFIG_CFS_BANDWIDTH)
 static unsigned long to_ratio(u64 period, u64 runtime)
 {
-	if (runtime == RUNTIME_INF)
-		return 1ULL << 20;
+    if (runtime == RUNTIME_INF)
+        return 1ULL << 20;
 
-	return div64_u64(runtime << 20, period);
+    return div64_u64(runtime << 20, period);
 }
 #endif
 
@@ -7581,264 +7606,264 @@ static DEFINE_MUTEX(rt_constraints_mutex
 /* Must be called with tasklist_lock held */
 static inline int tg_has_rt_tasks(struct task_group *tg)
 {
-	struct task_struct *g, *p;
+    struct task_struct *g, *p;
 
-	do_each_thread(g, p) {
-		if (rt_task(p) && task_rq(p)->rt.tg == tg)
-			return 1;
-	} while_each_thread(g, p);
+    do_each_thread(g, p) {
+        if (rt_task(p) && task_rq(p)->rt.tg == tg)
+            return 1;
+    } while_each_thread(g, p);
 
-	return 0;
+    return 0;
 }
 
 struct rt_schedulable_data {
-	struct task_group *tg;
-	u64 rt_period;
-	u64 rt_runtime;
+    struct task_group *tg;
+    u64 rt_period;
+    u64 rt_runtime;
 };
 
 static int tg_rt_schedulable(struct task_group *tg, void *data)
 {
-	struct rt_schedulable_data *d = data;
-	struct task_group *child;
-	unsigned long total, sum = 0;
-	u64 period, runtime;
-
-	period = ktime_to_ns(tg->rt_bandwidth.rt_period);
-	runtime = tg->rt_bandwidth.rt_runtime;
-
-	if (tg == d->tg) {
-		period = d->rt_period;
-		runtime = d->rt_runtime;
-	}
-
-	/*
-	 * Cannot have more runtime than the period.
-	 */
-	if (runtime > period && runtime != RUNTIME_INF)
-		return -EINVAL;
-
-	/*
-	 * Ensure we don't starve existing RT tasks.
-	 */
-	if (rt_bandwidth_enabled() && !runtime && tg_has_rt_tasks(tg))
-		return -EBUSY;
-
-	total = to_ratio(period, runtime);
-
-	/*
-	 * Nobody can have more than the global setting allows.
-	 */
-	if (total > to_ratio(global_rt_period(), global_rt_runtime()))
-		return -EINVAL;
-
-	/*
-	 * The sum of our children's runtime should not exceed our own.
-	 */
-	list_for_each_entry_rcu(child, &tg->children, siblings) {
-		period = ktime_to_ns(child->rt_bandwidth.rt_period);
-		runtime = child->rt_bandwidth.rt_runtime;
-
-		if (child == d->tg) {
-			period = d->rt_period;
-			runtime = d->rt_runtime;
-		}
+    struct rt_schedulable_data *d = data;
+    struct task_group *child;
+    unsigned long total, sum = 0;
+    u64 period, runtime;
+
+    period = ktime_to_ns(tg->rt_bandwidth.rt_period);
+    runtime = tg->rt_bandwidth.rt_runtime;
+
+    if (tg == d->tg) {
+        period = d->rt_period;
+        runtime = d->rt_runtime;
+    }
+
+    /*
+     * Cannot have more runtime than the period.
+     */
+    if (runtime > period && runtime != RUNTIME_INF)
+        return -EINVAL;
+
+    /*
+     * Ensure we don't starve existing RT tasks.
+     */
+    if (rt_bandwidth_enabled() && !runtime && tg_has_rt_tasks(tg))
+        return -EBUSY;
+
+    total = to_ratio(period, runtime);
+
+    /*
+     * Nobody can have more than the global setting allows.
+     */
+    if (total > to_ratio(global_rt_period(), global_rt_runtime()))
+        return -EINVAL;
+
+    /*
+     * The sum of our children's runtime should not exceed our own.
+     */
+    list_for_each_entry_rcu(child, &tg->children, siblings) {
+        period = ktime_to_ns(child->rt_bandwidth.rt_period);
+        runtime = child->rt_bandwidth.rt_runtime;
+
+        if (child == d->tg) {
+            period = d->rt_period;
+            runtime = d->rt_runtime;
+        }
 
-		sum += to_ratio(period, runtime);
-	}
+        sum += to_ratio(period, runtime);
+    }
 
-	if (sum > total)
-		return -EINVAL;
+    if (sum > total)
+        return -EINVAL;
 
-	return 0;
+    return 0;
 }
 
 static int __rt_schedulable(struct task_group *tg, u64 period, u64 runtime)
 {
-	int ret;
+    int ret;
 
-	struct rt_schedulable_data data = {
-		.tg = tg,
-		.rt_period = period,
-		.rt_runtime = runtime,
-	};
-
-	rcu_read_lock();
-	ret = walk_tg_tree(tg_rt_schedulable, tg_nop, &data);
-	rcu_read_unlock();
+    struct rt_schedulable_data data = {
+        .tg = tg,
+        .rt_period = period,
+        .rt_runtime = runtime,
+    };
+
+    rcu_read_lock();
+    ret = walk_tg_tree(tg_rt_schedulable, tg_nop, &data);
+    rcu_read_unlock();
 
-	return ret;
+    return ret;
 }
 
 static int tg_set_rt_bandwidth(struct task_group *tg,
-		u64 rt_period, u64 rt_runtime)
+        u64 rt_period, u64 rt_runtime)
 {
-	int i, err = 0;
+    int i, err = 0;
 
-	mutex_lock(&rt_constraints_mutex);
-	read_lock(&tasklist_lock);
-	err = __rt_schedulable(tg, rt_period, rt_runtime);
-	if (err)
-		goto unlock;
-
-	raw_spin_lock_irq(&tg->rt_bandwidth.rt_runtime_lock);
-	tg->rt_bandwidth.rt_period = ns_to_ktime(rt_period);
-	tg->rt_bandwidth.rt_runtime = rt_runtime;
-
-	for_each_possible_cpu(i) {
-		struct rt_rq *rt_rq = tg->rt_rq[i];
-
-		raw_spin_lock(&rt_rq->rt_runtime_lock);
-		rt_rq->rt_runtime = rt_runtime;
-		raw_spin_unlock(&rt_rq->rt_runtime_lock);
-	}
-	raw_spin_unlock_irq(&tg->rt_bandwidth.rt_runtime_lock);
+    mutex_lock(&rt_constraints_mutex);
+    read_lock(&tasklist_lock);
+    err = __rt_schedulable(tg, rt_period, rt_runtime);
+    if (err)
+        goto unlock;
+
+    raw_spin_lock_irq(&tg->rt_bandwidth.rt_runtime_lock);
+    tg->rt_bandwidth.rt_period = ns_to_ktime(rt_period);
+    tg->rt_bandwidth.rt_runtime = rt_runtime;
+
+    for_each_possible_cpu(i) {
+        struct rt_rq *rt_rq = tg->rt_rq[i];
+
+        raw_spin_lock(&rt_rq->rt_runtime_lock);
+        rt_rq->rt_runtime = rt_runtime;
+        raw_spin_unlock(&rt_rq->rt_runtime_lock);
+    }
+    raw_spin_unlock_irq(&tg->rt_bandwidth.rt_runtime_lock);
 unlock:
-	read_unlock(&tasklist_lock);
-	mutex_unlock(&rt_constraints_mutex);
+    read_unlock(&tasklist_lock);
+    mutex_unlock(&rt_constraints_mutex);
 
-	return err;
+    return err;
 }
 
 int sched_group_set_rt_runtime(struct task_group *tg, long rt_runtime_us)
 {
-	u64 rt_runtime, rt_period;
+    u64 rt_runtime, rt_period;
 
-	rt_period = ktime_to_ns(tg->rt_bandwidth.rt_period);
-	rt_runtime = (u64)rt_runtime_us * NSEC_PER_USEC;
-	if (rt_runtime_us < 0)
-		rt_runtime = RUNTIME_INF;
+    rt_period = ktime_to_ns(tg->rt_bandwidth.rt_period);
+    rt_runtime = (u64)rt_runtime_us * NSEC_PER_USEC;
+    if (rt_runtime_us < 0)
+        rt_runtime = RUNTIME_INF;
 
-	return tg_set_rt_bandwidth(tg, rt_period, rt_runtime);
+    return tg_set_rt_bandwidth(tg, rt_period, rt_runtime);
 }
 
 long sched_group_rt_runtime(struct task_group *tg)
 {
-	u64 rt_runtime_us;
+    u64 rt_runtime_us;
 
-	if (tg->rt_bandwidth.rt_runtime == RUNTIME_INF)
-		return -1;
+    if (tg->rt_bandwidth.rt_runtime == RUNTIME_INF)
+        return -1;
 
-	rt_runtime_us = tg->rt_bandwidth.rt_runtime;
-	do_div(rt_runtime_us, NSEC_PER_USEC);
-	return rt_runtime_us;
+    rt_runtime_us = tg->rt_bandwidth.rt_runtime;
+    do_div(rt_runtime_us, NSEC_PER_USEC);
+    return rt_runtime_us;
 }
 
 int sched_group_set_rt_period(struct task_group *tg, long rt_period_us)
 {
-	u64 rt_runtime, rt_period;
+    u64 rt_runtime, rt_period;
 
-	rt_period = (u64)rt_period_us * NSEC_PER_USEC;
-	rt_runtime = tg->rt_bandwidth.rt_runtime;
+    rt_period = (u64)rt_period_us * NSEC_PER_USEC;
+    rt_runtime = tg->rt_bandwidth.rt_runtime;
 
-	if (rt_period == 0)
-		return -EINVAL;
+    if (rt_period == 0)
+        return -EINVAL;
 
-	return tg_set_rt_bandwidth(tg, rt_period, rt_runtime);
+    return tg_set_rt_bandwidth(tg, rt_period, rt_runtime);
 }
 
 long sched_group_rt_period(struct task_group *tg)
 {
-	u64 rt_period_us;
+    u64 rt_period_us;
 
-	rt_period_us = ktime_to_ns(tg->rt_bandwidth.rt_period);
-	do_div(rt_period_us, NSEC_PER_USEC);
-	return rt_period_us;
+    rt_period_us = ktime_to_ns(tg->rt_bandwidth.rt_period);
+    do_div(rt_period_us, NSEC_PER_USEC);
+    return rt_period_us;
 }
 
 static int sched_rt_global_constraints(void)
 {
-	u64 runtime, period;
-	int ret = 0;
+    u64 runtime, period;
+    int ret = 0;
 
-	if (sysctl_sched_rt_period <= 0)
-		return -EINVAL;
+    if (sysctl_sched_rt_period <= 0)
+        return -EINVAL;
 
-	runtime = global_rt_runtime();
-	period = global_rt_period();
+    runtime = global_rt_runtime();
+    period = global_rt_period();
 
-	/*
-	 * Sanity check on the sysctl variables.
-	 */
-	if (runtime > period && runtime != RUNTIME_INF)
-		return -EINVAL;
-
-	mutex_lock(&rt_constraints_mutex);
-	read_lock(&tasklist_lock);
-	ret = __rt_schedulable(NULL, 0, 0);
-	read_unlock(&tasklist_lock);
-	mutex_unlock(&rt_constraints_mutex);
+    /*
+     * Sanity check on the sysctl variables.
+     */
+    if (runtime > period && runtime != RUNTIME_INF)
+        return -EINVAL;
+
+    mutex_lock(&rt_constraints_mutex);
+    read_lock(&tasklist_lock);
+    ret = __rt_schedulable(NULL, 0, 0);
+    read_unlock(&tasklist_lock);
+    mutex_unlock(&rt_constraints_mutex);
 
-	return ret;
+    return ret;
 }
 
 int sched_rt_can_attach(struct task_group *tg, struct task_struct *tsk)
 {
-	/* Don't accept realtime tasks when there is no way for them to run */
-	if (rt_task(tsk) && tg->rt_bandwidth.rt_runtime == 0)
-		return 0;
+    /* Don't accept realtime tasks when there is no way for them to run */
+    if (rt_task(tsk) && tg->rt_bandwidth.rt_runtime == 0)
+        return 0;
 
-	return 1;
+    return 1;
 }
 
 #else /* !CONFIG_RT_GROUP_SCHED */
 static int sched_rt_global_constraints(void)
 {
-	unsigned long flags;
-	int i;
+    unsigned long flags;
+    int i;
 
-	if (sysctl_sched_rt_period <= 0)
-		return -EINVAL;
+    if (sysctl_sched_rt_period <= 0)
+        return -EINVAL;
 
-	/*
-	 * There's always some RT tasks in the root group
-	 * -- migration, kstopmachine etc..
-	 */
-	if (sysctl_sched_rt_runtime == 0)
-		return -EBUSY;
-
-	raw_spin_lock_irqsave(&def_rt_bandwidth.rt_runtime_lock, flags);
-	for_each_possible_cpu(i) {
-		struct rt_rq *rt_rq = &cpu_rq(i)->rt;
-
-		raw_spin_lock(&rt_rq->rt_runtime_lock);
-		rt_rq->rt_runtime = global_rt_runtime();
-		raw_spin_unlock(&rt_rq->rt_runtime_lock);
-	}
-	raw_spin_unlock_irqrestore(&def_rt_bandwidth.rt_runtime_lock, flags);
+    /*
+     * There's always some RT tasks in the root group
+     * -- migration, kstopmachine etc..
+     */
+    if (sysctl_sched_rt_runtime == 0)
+        return -EBUSY;
+
+    raw_spin_lock_irqsave(&def_rt_bandwidth.rt_runtime_lock, flags);
+    for_each_possible_cpu(i) {
+        struct rt_rq *rt_rq = &cpu_rq(i)->rt;
+
+        raw_spin_lock(&rt_rq->rt_runtime_lock);
+        rt_rq->rt_runtime = global_rt_runtime();
+        raw_spin_unlock(&rt_rq->rt_runtime_lock);
+    }
+    raw_spin_unlock_irqrestore(&def_rt_bandwidth.rt_runtime_lock, flags);
 
-	return 0;
+    return 0;
 }
 #endif /* CONFIG_RT_GROUP_SCHED */
 
 int sched_rt_handler(struct ctl_table *table, int write,
-		void __user *buffer, size_t *lenp,
-		loff_t *ppos)
+        void __user *buffer, size_t *lenp,
+        loff_t *ppos)
 {
-	int ret;
-	int old_period, old_runtime;
-	static DEFINE_MUTEX(mutex);
-
-	mutex_lock(&mutex);
-	old_period = sysctl_sched_rt_period;
-	old_runtime = sysctl_sched_rt_runtime;
-
-	ret = proc_dointvec(table, write, buffer, lenp, ppos);
-
-	if (!ret && write) {
-		ret = sched_rt_global_constraints();
-		if (ret) {
-			sysctl_sched_rt_period = old_period;
-			sysctl_sched_rt_runtime = old_runtime;
-		} else {
-			def_rt_bandwidth.rt_runtime = global_rt_runtime();
-			def_rt_bandwidth.rt_period =
-				ns_to_ktime(global_rt_period());
-		}
-	}
-	mutex_unlock(&mutex);
+    int ret;
+    int old_period, old_runtime;
+    static DEFINE_MUTEX(mutex);
+
+    mutex_lock(&mutex);
+    old_period = sysctl_sched_rt_period;
+    old_runtime = sysctl_sched_rt_runtime;
+
+    ret = proc_dointvec(table, write, buffer, lenp, ppos);
+
+    if (!ret && write) {
+        ret = sched_rt_global_constraints();
+        if (ret) {
+            sysctl_sched_rt_period = old_period;
+            sysctl_sched_rt_runtime = old_runtime;
+        } else {
+            def_rt_bandwidth.rt_runtime = global_rt_runtime();
+            def_rt_bandwidth.rt_period =
+                ns_to_ktime(global_rt_period());
+        }
+    }
+    mutex_unlock(&mutex);
 
-	return ret;
+    return ret;
 }
 
 #ifdef CONFIG_CGROUP_SCHED
@@ -7846,88 +7871,88 @@ int sched_rt_handler(struct ctl_table *t
 /* return corresponding task_group object of a cgroup */
 static inline struct task_group *cgroup_tg(struct cgroup *cgrp)
 {
-	return container_of(cgroup_subsys_state(cgrp, cpu_cgroup_subsys_id),
-			    struct task_group, css);
+    return container_of(cgroup_subsys_state(cgrp, cpu_cgroup_subsys_id),
+                struct task_group, css);
 }
 
 static struct cgroup_subsys_state *cpu_cgroup_create(struct cgroup *cgrp)
 {
-	struct task_group *tg, *parent;
+    struct task_group *tg, *parent;
 
-	if (!cgrp->parent) {
-		/* This is early initialization for the top cgroup */
-		return &root_task_group.css;
-	}
-
-	parent = cgroup_tg(cgrp->parent);
-	tg = sched_create_group(parent);
-	if (IS_ERR(tg))
-		return ERR_PTR(-ENOMEM);
+    if (!cgrp->parent) {
+        /* This is early initialization for the top cgroup */
+        return &root_task_group.css;
+    }
+
+    parent = cgroup_tg(cgrp->parent);
+    tg = sched_create_group(parent);
+    if (IS_ERR(tg))
+        return ERR_PTR(-ENOMEM);
 
-	return &tg->css;
+    return &tg->css;
 }
 
 static void cpu_cgroup_destroy(struct cgroup *cgrp)
 {
-	struct task_group *tg = cgroup_tg(cgrp);
+    struct task_group *tg = cgroup_tg(cgrp);
 
-	sched_destroy_group(tg);
+    sched_destroy_group(tg);
 }
 
 static int cpu_cgroup_can_attach(struct cgroup *cgrp,
-				 struct cgroup_taskset *tset)
+                 struct cgroup_taskset *tset)
 {
-	struct task_struct *task;
+    struct task_struct *task;
 
-	cgroup_taskset_for_each(task, cgrp, tset) {
+    cgroup_taskset_for_each(task, cgrp, tset) {
 #ifdef CONFIG_RT_GROUP_SCHED
-		if (!sched_rt_can_attach(cgroup_tg(cgrp), task))
-			return -EINVAL;
+        if (!sched_rt_can_attach(cgroup_tg(cgrp), task))
+            return -EINVAL;
 #else
-		/* We don't support RT-tasks being in separate groups */
-		if (task->sched_class != &fair_sched_class)
-			return -EINVAL;
+        /* We don't support RT-tasks being in separate groups */
+        if (task->sched_class != &fair_sched_class)
+            return -EINVAL;
 #endif
-	}
-	return 0;
+    }
+    return 0;
 }
 
 static void cpu_cgroup_attach(struct cgroup *cgrp,
-			      struct cgroup_taskset *tset)
+                  struct cgroup_taskset *tset)
 {
-	struct task_struct *task;
+    struct task_struct *task;
 
-	cgroup_taskset_for_each(task, cgrp, tset)
-		sched_move_task(task);
+    cgroup_taskset_for_each(task, cgrp, tset)
+        sched_move_task(task);
 }
 
 static void
 cpu_cgroup_exit(struct cgroup *cgrp, struct cgroup *old_cgrp,
-		struct task_struct *task)
+        struct task_struct *task)
 {
-	/*
-	 * cgroup_exit() is called in the copy_process() failure path.
-	 * Ignore this case since the task hasn't ran yet, this avoids
-	 * trying to poke a half freed task state from generic code.
-	 */
-	if (!(task->flags & PF_EXITING))
-		return;
+    /*
+     * cgroup_exit() is called in the copy_process() failure path.
+     * Ignore this case since the task hasn't ran yet, this avoids
+     * trying to poke a half freed task state from generic code.
+     */
+    if (!(task->flags & PF_EXITING))
+        return;
 
-	sched_move_task(task);
+    sched_move_task(task);
 }
 
 #ifdef CONFIG_FAIR_GROUP_SCHED
 static int cpu_shares_write_u64(struct cgroup *cgrp, struct cftype *cftype,
-				u64 shareval)
+                u64 shareval)
 {
-	return sched_group_set_shares(cgroup_tg(cgrp), scale_load(shareval));
+    return sched_group_set_shares(cgroup_tg(cgrp), scale_load(shareval));
 }
 
 static u64 cpu_shares_read_u64(struct cgroup *cgrp, struct cftype *cft)
 {
-	struct task_group *tg = cgroup_tg(cgrp);
+    struct task_group *tg = cgroup_tg(cgrp);
 
-	return (u64) scale_load_down(tg->shares);
+    return (u64) scale_load_down(tg->shares);
 }
 
 #ifdef CONFIG_CFS_BANDWIDTH
@@ -7940,145 +7965,145 @@ static int __cfs_schedulable(struct task
 
 static int tg_set_cfs_bandwidth(struct task_group *tg, u64 period, u64 quota)
 {
-	int i, ret = 0, runtime_enabled, runtime_was_enabled;
-	struct cfs_bandwidth *cfs_b = &tg->cfs_bandwidth;
+    int i, ret = 0, runtime_enabled, runtime_was_enabled;
+    struct cfs_bandwidth *cfs_b = &tg->cfs_bandwidth;
 
-	if (tg == &root_task_group)
-		return -EINVAL;
+    if (tg == &root_task_group)
+        return -EINVAL;
 
-	/*
-	 * Ensure we have at some amount of bandwidth every period.  This is
-	 * to prevent reaching a state of large arrears when throttled via
-	 * entity_tick() resulting in prolonged exit starvation.
-	 */
-	if (quota < min_cfs_quota_period || period < min_cfs_quota_period)
-		return -EINVAL;
-
-	/*
-	 * Likewise, bound things on the otherside by preventing insane quota
-	 * periods.  This also allows us to normalize in computing quota
-	 * feasibility.
-	 */
-	if (period > max_cfs_quota_period)
-		return -EINVAL;
-
-	mutex_lock(&cfs_constraints_mutex);
-	ret = __cfs_schedulable(tg, period, quota);
-	if (ret)
-		goto out_unlock;
-
-	runtime_enabled = quota != RUNTIME_INF;
-	runtime_was_enabled = cfs_b->quota != RUNTIME_INF;
-	/*
-	 * If we need to toggle cfs_bandwidth_used, off->on must occur
-	 * before making related changes, and on->off must occur afterwards
-	 */
-	if (runtime_enabled && !runtime_was_enabled)
-		cfs_bandwidth_usage_inc();
-	raw_spin_lock_irq(&cfs_b->lock);
-	cfs_b->period = ns_to_ktime(period);
-	cfs_b->quota = quota;
-
-	__refill_cfs_bandwidth_runtime(cfs_b);
-	/* restart the period timer (if active) to handle new period expiry */
-	if (runtime_enabled && cfs_b->timer_active) {
-		/* force a reprogram */
-		cfs_b->timer_active = 0;
-		__start_cfs_bandwidth(cfs_b);
-	}
-	raw_spin_unlock_irq(&cfs_b->lock);
-
-	for_each_possible_cpu(i) {
-		struct cfs_rq *cfs_rq = tg->cfs_rq[i];
-		struct rq *rq = cfs_rq->rq;
-
-		raw_spin_lock_irq(&rq->lock);
-		cfs_rq->runtime_enabled = runtime_enabled;
-		cfs_rq->runtime_remaining = 0;
-
-		if (cfs_rq->throttled)
-			unthrottle_cfs_rq(cfs_rq);
-		raw_spin_unlock_irq(&rq->lock);
-	}
-	if (runtime_was_enabled && !runtime_enabled)
-		cfs_bandwidth_usage_dec();
+    /*
+     * Ensure we have at some amount of bandwidth every period.  This is
+     * to prevent reaching a state of large arrears when throttled via
+     * entity_tick() resulting in prolonged exit starvation.
+     */
+    if (quota < min_cfs_quota_period || period < min_cfs_quota_period)
+        return -EINVAL;
+
+    /*
+     * Likewise, bound things on the otherside by preventing insane quota
+     * periods.  This also allows us to normalize in computing quota
+     * feasibility.
+     */
+    if (period > max_cfs_quota_period)
+        return -EINVAL;
+
+    mutex_lock(&cfs_constraints_mutex);
+    ret = __cfs_schedulable(tg, period, quota);
+    if (ret)
+        goto out_unlock;
+
+    runtime_enabled = quota != RUNTIME_INF;
+    runtime_was_enabled = cfs_b->quota != RUNTIME_INF;
+    /*
+     * If we need to toggle cfs_bandwidth_used, off->on must occur
+     * before making related changes, and on->off must occur afterwards
+     */
+    if (runtime_enabled && !runtime_was_enabled)
+        cfs_bandwidth_usage_inc();
+    raw_spin_lock_irq(&cfs_b->lock);
+    cfs_b->period = ns_to_ktime(period);
+    cfs_b->quota = quota;
+
+    __refill_cfs_bandwidth_runtime(cfs_b);
+    /* restart the period timer (if active) to handle new period expiry */
+    if (runtime_enabled && cfs_b->timer_active) {
+        /* force a reprogram */
+        cfs_b->timer_active = 0;
+        __start_cfs_bandwidth(cfs_b);
+    }
+    raw_spin_unlock_irq(&cfs_b->lock);
+
+    for_each_possible_cpu(i) {
+        struct cfs_rq *cfs_rq = tg->cfs_rq[i];
+        struct rq *rq = cfs_rq->rq;
+
+        raw_spin_lock_irq(&rq->lock);
+        cfs_rq->runtime_enabled = runtime_enabled;
+        cfs_rq->runtime_remaining = 0;
+
+        if (cfs_rq->throttled)
+            unthrottle_cfs_rq(cfs_rq);
+        raw_spin_unlock_irq(&rq->lock);
+    }
+    if (runtime_was_enabled && !runtime_enabled)
+        cfs_bandwidth_usage_dec();
 out_unlock:
-	mutex_unlock(&cfs_constraints_mutex);
+    mutex_unlock(&cfs_constraints_mutex);
 
-	return ret;
+    return ret;
 }
 
 int tg_set_cfs_quota(struct task_group *tg, long cfs_quota_us)
 {
-	u64 quota, period;
+    u64 quota, period;
 
-	period = ktime_to_ns(tg->cfs_bandwidth.period);
-	if (cfs_quota_us < 0)
-		quota = RUNTIME_INF;
-	else
-		quota = (u64)cfs_quota_us * NSEC_PER_USEC;
+    period = ktime_to_ns(tg->cfs_bandwidth.period);
+    if (cfs_quota_us < 0)
+        quota = RUNTIME_INF;
+    else
+        quota = (u64)cfs_quota_us * NSEC_PER_USEC;
 
-	return tg_set_cfs_bandwidth(tg, period, quota);
+    return tg_set_cfs_bandwidth(tg, period, quota);
 }
 
 long tg_get_cfs_quota(struct task_group *tg)
 {
-	u64 quota_us;
+    u64 quota_us;
 
-	if (tg->cfs_bandwidth.quota == RUNTIME_INF)
-		return -1;
+    if (tg->cfs_bandwidth.quota == RUNTIME_INF)
+        return -1;
 
-	quota_us = tg->cfs_bandwidth.quota;
-	do_div(quota_us, NSEC_PER_USEC);
+    quota_us = tg->cfs_bandwidth.quota;
+    do_div(quota_us, NSEC_PER_USEC);
 
-	return quota_us;
+    return quota_us;
 }
 
 int tg_set_cfs_period(struct task_group *tg, long cfs_period_us)
 {
-	u64 quota, period;
+    u64 quota, period;
 
-	period = (u64)cfs_period_us * NSEC_PER_USEC;
-	quota = tg->cfs_bandwidth.quota;
+    period = (u64)cfs_period_us * NSEC_PER_USEC;
+    quota = tg->cfs_bandwidth.quota;
 
-	return tg_set_cfs_bandwidth(tg, period, quota);
+    return tg_set_cfs_bandwidth(tg, period, quota);
 }
 
 long tg_get_cfs_period(struct task_group *tg)
 {
-	u64 cfs_period_us;
+    u64 cfs_period_us;
 
-	cfs_period_us = ktime_to_ns(tg->cfs_bandwidth.period);
-	do_div(cfs_period_us, NSEC_PER_USEC);
+    cfs_period_us = ktime_to_ns(tg->cfs_bandwidth.period);
+    do_div(cfs_period_us, NSEC_PER_USEC);
 
-	return cfs_period_us;
+    return cfs_period_us;
 }
 
 static s64 cpu_cfs_quota_read_s64(struct cgroup *cgrp, struct cftype *cft)
 {
-	return tg_get_cfs_quota(cgroup_tg(cgrp));
+    return tg_get_cfs_quota(cgroup_tg(cgrp));
 }
 
 static int cpu_cfs_quota_write_s64(struct cgroup *cgrp, struct cftype *cftype,
-				s64 cfs_quota_us)
+                s64 cfs_quota_us)
 {
-	return tg_set_cfs_quota(cgroup_tg(cgrp), cfs_quota_us);
+    return tg_set_cfs_quota(cgroup_tg(cgrp), cfs_quota_us);
 }
 
 static u64 cpu_cfs_period_read_u64(struct cgroup *cgrp, struct cftype *cft)
 {
-	return tg_get_cfs_period(cgroup_tg(cgrp));
+    return tg_get_cfs_period(cgroup_tg(cgrp));
 }
 
 static int cpu_cfs_period_write_u64(struct cgroup *cgrp, struct cftype *cftype,
-				u64 cfs_period_us)
+                u64 cfs_period_us)
 {
-	return tg_set_cfs_period(cgroup_tg(cgrp), cfs_period_us);
+    return tg_set_cfs_period(cgroup_tg(cgrp), cfs_period_us);
 }
 
 struct cfs_schedulable_data {
-	struct task_group *tg;
-	u64 period, quota;
+    struct task_group *tg;
+    u64 period, quota;
 };
 
 /*
@@ -8086,169 +8111,169 @@ struct cfs_schedulable_data {
  * note: units are usecs
  */
 static u64 normalize_cfs_quota(struct task_group *tg,
-			       struct cfs_schedulable_data *d)
+                   struct cfs_schedulable_data *d)
 {
-	u64 quota, period;
+    u64 quota, period;
 
-	if (tg == d->tg) {
-		period = d->period;
-		quota = d->quota;
-	} else {
-		period = tg_get_cfs_period(tg);
-		quota = tg_get_cfs_quota(tg);
-	}
-
-	/* note: these should typically be equivalent */
-	if (quota == RUNTIME_INF || quota == -1)
-		return RUNTIME_INF;
+    if (tg == d->tg) {
+        period = d->period;
+        quota = d->quota;
+    } else {
+        period = tg_get_cfs_period(tg);
+        quota = tg_get_cfs_quota(tg);
+    }
+
+    /* note: these should typically be equivalent */
+    if (quota == RUNTIME_INF || quota == -1)
+        return RUNTIME_INF;
 
-	return to_ratio(period, quota);
+    return to_ratio(period, quota);
 }
 
 static int tg_cfs_schedulable_down(struct task_group *tg, void *data)
 {
-	struct cfs_schedulable_data *d = data;
-	struct cfs_bandwidth *cfs_b = &tg->cfs_bandwidth;
-	s64 quota = 0, parent_quota = -1;
-
-	if (!tg->parent) {
-		quota = RUNTIME_INF;
-	} else {
-		struct cfs_bandwidth *parent_b = &tg->parent->cfs_bandwidth;
-
-		quota = normalize_cfs_quota(tg, d);
-		parent_quota = parent_b->hierarchal_quota;
-
-		/*
-		 * ensure max(child_quota) <= parent_quota, inherit when no
-		 * limit is set
-		 */
-		if (quota == RUNTIME_INF)
-			quota = parent_quota;
-		else if (parent_quota != RUNTIME_INF && quota > parent_quota)
-			return -EINVAL;
-	}
-	cfs_b->hierarchal_quota = quota;
+    struct cfs_schedulable_data *d = data;
+    struct cfs_bandwidth *cfs_b = &tg->cfs_bandwidth;
+    s64 quota = 0, parent_quota = -1;
+
+    if (!tg->parent) {
+        quota = RUNTIME_INF;
+    } else {
+        struct cfs_bandwidth *parent_b = &tg->parent->cfs_bandwidth;
+
+        quota = normalize_cfs_quota(tg, d);
+        parent_quota = parent_b->hierarchal_quota;
+
+        /*
+         * ensure max(child_quota) <= parent_quota, inherit when no
+         * limit is set
+         */
+        if (quota == RUNTIME_INF)
+            quota = parent_quota;
+        else if (parent_quota != RUNTIME_INF && quota > parent_quota)
+            return -EINVAL;
+    }
+    cfs_b->hierarchal_quota = quota;
 
-	return 0;
+    return 0;
 }
 
 static int __cfs_schedulable(struct task_group *tg, u64 period, u64 quota)
 {
-	int ret;
-	struct cfs_schedulable_data data = {
-		.tg = tg,
-		.period = period,
-		.quota = quota,
-	};
-
-	if (quota != RUNTIME_INF) {
-		do_div(data.period, NSEC_PER_USEC);
-		do_div(data.quota, NSEC_PER_USEC);
-	}
-
-	rcu_read_lock();
-	ret = walk_tg_tree(tg_cfs_schedulable_down, tg_nop, &data);
-	rcu_read_unlock();
+    int ret;
+    struct cfs_schedulable_data data = {
+        .tg = tg,
+        .period = period,
+        .quota = quota,
+    };
+
+    if (quota != RUNTIME_INF) {
+        do_div(data.period, NSEC_PER_USEC);
+        do_div(data.quota, NSEC_PER_USEC);
+    }
+
+    rcu_read_lock();
+    ret = walk_tg_tree(tg_cfs_schedulable_down, tg_nop, &data);
+    rcu_read_unlock();
 
-	return ret;
+    return ret;
 }
 
 static int cpu_stats_show(struct cgroup *cgrp, struct cftype *cft,
-		struct cgroup_map_cb *cb)
+        struct cgroup_map_cb *cb)
 {
-	struct task_group *tg = cgroup_tg(cgrp);
-	struct cfs_bandwidth *cfs_b = &tg->cfs_bandwidth;
+    struct task_group *tg = cgroup_tg(cgrp);
+    struct cfs_bandwidth *cfs_b = &tg->cfs_bandwidth;
 
-	cb->fill(cb, "nr_periods", cfs_b->nr_periods);
-	cb->fill(cb, "nr_throttled", cfs_b->nr_throttled);
-	cb->fill(cb, "throttled_time", cfs_b->throttled_time);
+    cb->fill(cb, "nr_periods", cfs_b->nr_periods);
+    cb->fill(cb, "nr_throttled", cfs_b->nr_throttled);
+    cb->fill(cb, "throttled_time", cfs_b->throttled_time);
 
-	return 0;
+    return 0;
 }
 #endif /* CONFIG_CFS_BANDWIDTH */
 #endif /* CONFIG_FAIR_GROUP_SCHED */
 
 #ifdef CONFIG_RT_GROUP_SCHED
 static int cpu_rt_runtime_write(struct cgroup *cgrp, struct cftype *cft,
-				s64 val)
+                s64 val)
 {
-	return sched_group_set_rt_runtime(cgroup_tg(cgrp), val);
+    return sched_group_set_rt_runtime(cgroup_tg(cgrp), val);
 }
 
 static s64 cpu_rt_runtime_read(struct cgroup *cgrp, struct cftype *cft)
 {
-	return sched_group_rt_runtime(cgroup_tg(cgrp));
+    return sched_group_rt_runtime(cgroup_tg(cgrp));
 }
 
 static int cpu_rt_period_write_uint(struct cgroup *cgrp, struct cftype *cftype,
-		u64 rt_period_us)
+        u64 rt_period_us)
 {
-	return sched_group_set_rt_period(cgroup_tg(cgrp), rt_period_us);
+    return sched_group_set_rt_period(cgroup_tg(cgrp), rt_period_us);
 }
 
 static u64 cpu_rt_period_read_uint(struct cgroup *cgrp, struct cftype *cft)
 {
-	return sched_group_rt_period(cgroup_tg(cgrp));
+    return sched_group_rt_period(cgroup_tg(cgrp));
 }
 #endif /* CONFIG_RT_GROUP_SCHED */
 
 static struct cftype cpu_files[] = {
 #ifdef CONFIG_FAIR_GROUP_SCHED
-	{
-		.name = "shares",
-		.read_u64 = cpu_shares_read_u64,
-		.write_u64 = cpu_shares_write_u64,
-	},
+    {
+        .name = "shares",
+        .read_u64 = cpu_shares_read_u64,
+        .write_u64 = cpu_shares_write_u64,
+    },
 #endif
 #ifdef CONFIG_CFS_BANDWIDTH
-	{
-		.name = "cfs_quota_us",
-		.read_s64 = cpu_cfs_quota_read_s64,
-		.write_s64 = cpu_cfs_quota_write_s64,
-	},
-	{
-		.name = "cfs_period_us",
-		.read_u64 = cpu_cfs_period_read_u64,
-		.write_u64 = cpu_cfs_period_write_u64,
-	},
-	{
-		.name = "stat",
-		.read_map = cpu_stats_show,
-	},
+    {
+        .name = "cfs_quota_us",
+        .read_s64 = cpu_cfs_quota_read_s64,
+        .write_s64 = cpu_cfs_quota_write_s64,
+    },
+    {
+        .name = "cfs_period_us",
+        .read_u64 = cpu_cfs_period_read_u64,
+        .write_u64 = cpu_cfs_period_write_u64,
+    },
+    {
+        .name = "stat",
+        .read_map = cpu_stats_show,
+    },
 #endif
 #ifdef CONFIG_RT_GROUP_SCHED
-	{
-		.name = "rt_runtime_us",
-		.read_s64 = cpu_rt_runtime_read,
-		.write_s64 = cpu_rt_runtime_write,
-	},
-	{
-		.name = "rt_period_us",
-		.read_u64 = cpu_rt_period_read_uint,
-		.write_u64 = cpu_rt_period_write_uint,
-	},
+    {
+        .name = "rt_runtime_us",
+        .read_s64 = cpu_rt_runtime_read,
+        .write_s64 = cpu_rt_runtime_write,
+    },
+    {
+        .name = "rt_period_us",
+        .read_u64 = cpu_rt_period_read_uint,
+        .write_u64 = cpu_rt_period_write_uint,
+    },
 #endif
 };
 
 static int cpu_cgroup_populate(struct cgroup_subsys *ss, struct cgroup *cont)
 {
-	return cgroup_add_files(cont, ss, cpu_files, ARRAY_SIZE(cpu_files));
+    return cgroup_add_files(cont, ss, cpu_files, ARRAY_SIZE(cpu_files));
 }
 
 struct cgroup_subsys cpu_cgroup_subsys = {
-	.name		= "cpu",
-	.create		= cpu_cgroup_create,
-	.destroy	= cpu_cgroup_destroy,
-	.can_attach	= cpu_cgroup_can_attach,
-	.attach		= cpu_cgroup_attach,
-	.exit		= cpu_cgroup_exit,
-	.populate	= cpu_cgroup_populate,
-	.subsys_id	= cpu_cgroup_subsys_id,
-	.early_init	= 1,
+    .name        = "cpu",
+    .create        = cpu_cgroup_create,
+    .destroy    = cpu_cgroup_destroy,
+    .can_attach    = cpu_cgroup_can_attach,
+    .attach        = cpu_cgroup_attach,
+    .exit        = cpu_cgroup_exit,
+    .populate    = cpu_cgroup_populate,
+    .subsys_id    = cpu_cgroup_subsys_id,
+    .early_init    = 1,
 };
 
-#endif	/* CONFIG_CGROUP_SCHED */
+#endif    /* CONFIG_CGROUP_SCHED */
 
 #ifdef CONFIG_CGROUP_CPUACCT
 
@@ -8262,178 +8287,178 @@ struct cgroup_subsys cpu_cgroup_subsys =
 /* create a new cpu accounting group */
 static struct cgroup_subsys_state *cpuacct_create(struct cgroup *cgrp)
 {
-	struct cpuacct *ca;
+    struct cpuacct *ca;
 
-	if (!cgrp->parent)
-		return &root_cpuacct.css;
+    if (!cgrp->parent)
+        return &root_cpuacct.css;
 
-	ca = kzalloc(sizeof(*ca), GFP_KERNEL);
-	if (!ca)
-		goto out;
+    ca = kzalloc(sizeof(*ca), GFP_KERNEL);
+    if (!ca)
+        goto out;
 
-	ca->cpuusage = alloc_percpu(u64);
-	if (!ca->cpuusage)
-		goto out_free_ca;
+    ca->cpuusage = alloc_percpu(u64);
+    if (!ca->cpuusage)
+        goto out_free_ca;
 
-	ca->cpustat = alloc_percpu(struct kernel_cpustat);
-	if (!ca->cpustat)
-		goto out_free_cpuusage;
+    ca->cpustat = alloc_percpu(struct kernel_cpustat);
+    if (!ca->cpustat)
+        goto out_free_cpuusage;
 
-	return &ca->css;
+    return &ca->css;
 
 out_free_cpuusage:
-	free_percpu(ca->cpuusage);
+    free_percpu(ca->cpuusage);
 out_free_ca:
-	kfree(ca);
+    kfree(ca);
 out:
-	return ERR_PTR(-ENOMEM);
+    return ERR_PTR(-ENOMEM);
 }
 
 /* destroy an existing cpu accounting group */
 static void cpuacct_destroy(struct cgroup *cgrp)
 {
-	struct cpuacct *ca = cgroup_ca(cgrp);
+    struct cpuacct *ca = cgroup_ca(cgrp);
 
-	free_percpu(ca->cpustat);
-	free_percpu(ca->cpuusage);
-	kfree(ca);
+    free_percpu(ca->cpustat);
+    free_percpu(ca->cpuusage);
+    kfree(ca);
 }
 
 static u64 cpuacct_cpuusage_read(struct cpuacct *ca, int cpu)
 {
-	u64 *cpuusage = per_cpu_ptr(ca->cpuusage, cpu);
-	u64 data;
+    u64 *cpuusage = per_cpu_ptr(ca->cpuusage, cpu);
+    u64 data;
 
 #ifndef CONFIG_64BIT
-	/*
-	 * Take rq->lock to make 64-bit read safe on 32-bit platforms.
-	 */
-	raw_spin_lock_irq(&cpu_rq(cpu)->lock);
-	data = *cpuusage;
-	raw_spin_unlock_irq(&cpu_rq(cpu)->lock);
+    /*
+     * Take rq->lock to make 64-bit read safe on 32-bit platforms.
+     */
+    raw_spin_lock_irq(&cpu_rq(cpu)->lock);
+    data = *cpuusage;
+    raw_spin_unlock_irq(&cpu_rq(cpu)->lock);
 #else
-	data = *cpuusage;
+    data = *cpuusage;
 #endif
 
-	return data;
+    return data;
 }
 
 static void cpuacct_cpuusage_write(struct cpuacct *ca, int cpu, u64 val)
 {
-	u64 *cpuusage = per_cpu_ptr(ca->cpuusage, cpu);
+    u64 *cpuusage = per_cpu_ptr(ca->cpuusage, cpu);
 
 #ifndef CONFIG_64BIT
-	/*
-	 * Take rq->lock to make 64-bit write safe on 32-bit platforms.
-	 */
-	raw_spin_lock_irq(&cpu_rq(cpu)->lock);
-	*cpuusage = val;
-	raw_spin_unlock_irq(&cpu_rq(cpu)->lock);
+    /*
+     * Take rq->lock to make 64-bit write safe on 32-bit platforms.
+     */
+    raw_spin_lock_irq(&cpu_rq(cpu)->lock);
+    *cpuusage = val;
+    raw_spin_unlock_irq(&cpu_rq(cpu)->lock);
 #else
-	*cpuusage = val;
+    *cpuusage = val;
 #endif
 }
 
 /* return total cpu usage (in nanoseconds) of a group */
 static u64 cpuusage_read(struct cgroup *cgrp, struct cftype *cft)
 {
-	struct cpuacct *ca = cgroup_ca(cgrp);
-	u64 totalcpuusage = 0;
-	int i;
+    struct cpuacct *ca = cgroup_ca(cgrp);
+    u64 totalcpuusage = 0;
+    int i;
 
-	for_each_present_cpu(i)
-		totalcpuusage += cpuacct_cpuusage_read(ca, i);
+    for_each_present_cpu(i)
+        totalcpuusage += cpuacct_cpuusage_read(ca, i);
 
-	return totalcpuusage;
+    return totalcpuusage;
 }
 
 static int cpuusage_write(struct cgroup *cgrp, struct cftype *cftype,
-								u64 reset)
+                                u64 reset)
 {
-	struct cpuacct *ca = cgroup_ca(cgrp);
-	int err = 0;
-	int i;
-
-	if (reset) {
-		err = -EINVAL;
-		goto out;
-	}
+    struct cpuacct *ca = cgroup_ca(cgrp);
+    int err = 0;
+    int i;
+
+    if (reset) {
+        err = -EINVAL;
+        goto out;
+    }
 
-	for_each_present_cpu(i)
-		cpuacct_cpuusage_write(ca, i, 0);
+    for_each_present_cpu(i)
+        cpuacct_cpuusage_write(ca, i, 0);
 
 out:
-	return err;
+    return err;
 }
 
 static int cpuacct_percpu_seq_read(struct cgroup *cgroup, struct cftype *cft,
-				   struct seq_file *m)
+                   struct seq_file *m)
 {
-	struct cpuacct *ca = cgroup_ca(cgroup);
-	u64 percpu;
-	int i;
-
-	for_each_present_cpu(i) {
-		percpu = cpuacct_cpuusage_read(ca, i);
-		seq_printf(m, "%llu ", (unsigned long long) percpu);
-	}
-	seq_printf(m, "\n");
-	return 0;
+    struct cpuacct *ca = cgroup_ca(cgroup);
+    u64 percpu;
+    int i;
+
+    for_each_present_cpu(i) {
+        percpu = cpuacct_cpuusage_read(ca, i);
+        seq_printf(m, "%llu ", (unsigned long long) percpu);
+    }
+    seq_printf(m, "\n");
+    return 0;
 }
 
 static const char *cpuacct_stat_desc[] = {
-	[CPUACCT_STAT_USER] = "user",
-	[CPUACCT_STAT_SYSTEM] = "system",
+    [CPUACCT_STAT_USER] = "user",
+    [CPUACCT_STAT_SYSTEM] = "system",
 };
 
 static int cpuacct_stats_show(struct cgroup *cgrp, struct cftype *cft,
-			      struct cgroup_map_cb *cb)
+                  struct cgroup_map_cb *cb)
 {
-	struct cpuacct *ca = cgroup_ca(cgrp);
-	int cpu;
-	s64 val = 0;
-
-	for_each_online_cpu(cpu) {
-		struct kernel_cpustat *kcpustat = per_cpu_ptr(ca->cpustat, cpu);
-		val += kcpustat->cpustat[CPUTIME_USER];
-		val += kcpustat->cpustat[CPUTIME_NICE];
-	}
-	val = cputime64_to_clock_t(val);
-	cb->fill(cb, cpuacct_stat_desc[CPUACCT_STAT_USER], val);
-
-	val = 0;
-	for_each_online_cpu(cpu) {
-		struct kernel_cpustat *kcpustat = per_cpu_ptr(ca->cpustat, cpu);
-		val += kcpustat->cpustat[CPUTIME_SYSTEM];
-		val += kcpustat->cpustat[CPUTIME_IRQ];
-		val += kcpustat->cpustat[CPUTIME_SOFTIRQ];
-	}
+    struct cpuacct *ca = cgroup_ca(cgrp);
+    int cpu;
+    s64 val = 0;
+
+    for_each_online_cpu(cpu) {
+        struct kernel_cpustat *kcpustat = per_cpu_ptr(ca->cpustat, cpu);
+        val += kcpustat->cpustat[CPUTIME_USER];
+        val += kcpustat->cpustat[CPUTIME_NICE];
+    }
+    val = cputime64_to_clock_t(val);
+    cb->fill(cb, cpuacct_stat_desc[CPUACCT_STAT_USER], val);
+
+    val = 0;
+    for_each_online_cpu(cpu) {
+        struct kernel_cpustat *kcpustat = per_cpu_ptr(ca->cpustat, cpu);
+        val += kcpustat->cpustat[CPUTIME_SYSTEM];
+        val += kcpustat->cpustat[CPUTIME_IRQ];
+        val += kcpustat->cpustat[CPUTIME_SOFTIRQ];
+    }
 
-	val = cputime64_to_clock_t(val);
-	cb->fill(cb, cpuacct_stat_desc[CPUACCT_STAT_SYSTEM], val);
+    val = cputime64_to_clock_t(val);
+    cb->fill(cb, cpuacct_stat_desc[CPUACCT_STAT_SYSTEM], val);
 
-	return 0;
+    return 0;
 }
 
 static struct cftype files[] = {
-	{
-		.name = "usage",
-		.read_u64 = cpuusage_read,
-		.write_u64 = cpuusage_write,
-	},
-	{
-		.name = "usage_percpu",
-		.read_seq_string = cpuacct_percpu_seq_read,
-	},
-	{
-		.name = "stat",
-		.read_map = cpuacct_stats_show,
-	},
+    {
+        .name = "usage",
+        .read_u64 = cpuusage_read,
+        .write_u64 = cpuusage_write,
+    },
+    {
+        .name = "usage_percpu",
+        .read_seq_string = cpuacct_percpu_seq_read,
+    },
+    {
+        .name = "stat",
+        .read_map = cpuacct_stats_show,
+    },
 };
 
 static int cpuacct_populate(struct cgroup_subsys *ss, struct cgroup *cgrp)
 {
-	return cgroup_add_files(cgrp, ss, files, ARRAY_SIZE(files));
+    return cgroup_add_files(cgrp, ss, files, ARRAY_SIZE(files));
 }
 
 /*
@@ -8443,31 +8468,31 @@ static int cpuacct_populate(struct cgrou
  */
 void cpuacct_charge(struct task_struct *tsk, u64 cputime)
 {
-	struct cpuacct *ca;
-	int cpu;
+    struct cpuacct *ca;
+    int cpu;
 
-	if (unlikely(!cpuacct_subsys.active))
-		return;
+    if (unlikely(!cpuacct_subsys.active))
+        return;
 
-	cpu = task_cpu(tsk);
+    cpu = task_cpu(tsk);
 
-	rcu_read_lock();
+    rcu_read_lock();
 
-	ca = task_ca(tsk);
+    ca = task_ca(tsk);
 
-	for (; ca; ca = parent_ca(ca)) {
-		u64 *cpuusage = per_cpu_ptr(ca->cpuusage, cpu);
-		*cpuusage += cputime;
-	}
+    for (; ca; ca = parent_ca(ca)) {
+        u64 *cpuusage = per_cpu_ptr(ca->cpuusage, cpu);
+        *cpuusage += cputime;
+    }
 
-	rcu_read_unlock();
+    rcu_read_unlock();
 }
 
 struct cgroup_subsys cpuacct_subsys = {
-	.name = "cpuacct",
-	.create = cpuacct_create,
-	.destroy = cpuacct_destroy,
-	.populate = cpuacct_populate,
-	.subsys_id = cpuacct_subsys_id,
+    .name = "cpuacct",
+    .create = cpuacct_create,
+    .destroy = cpuacct_destroy,
+    .populate = cpuacct_populate,
+    .subsys_id = cpuacct_subsys_id,
 };
-#endif	/* CONFIG_CGROUP_CPUACCT */
+#endif    /* CONFIG_CGROUP_CPUACCT */
Binary files ../linux-3.4.104-vanilla/mm/.DS_Store and linux-3.4.104-syssec_hw2_app2/mm/.DS_Store differ
diff -uprN ../linux-3.4.104-vanilla/mm/Makefile linux-3.4.104-syssec_hw2_app2/mm/Makefile
--- ../linux-3.4.104-vanilla/mm/Makefile	2014-09-24 23:49:19.000000000 -0400
+++ linux-3.4.104-syssec_hw2_app2/mm/Makefile	2014-11-10 05:44:32.000000000 -0500
@@ -4,9 +4,9 @@
 
 mmu-y			:= nommu.o
 mmu-$(CONFIG_MMU)	:= fremap.o highmem.o madvise.o memory.o mincore.o \
-			   mlock.o mmap.o mprotect.o mremap.o msync.o rmap.o \
-			   vmalloc.o pagewalk.o pgtable-generic.o \
-			   process_vm_access.o
+			   mlock.o mmap.o linklist.o privatemm.o mprotect.o mremap.o \
+			   msync.o rmap.o vmalloc.o pagewalk.o \
+			   pgtable-generic.o  process_vm_access.o
 
 obj-y			:= filemap.o mempool.o oom_kill.o fadvise.o \
 			   maccess.o page_alloc.o page-writeback.o \
diff -uprN ../linux-3.4.104-vanilla/mm/linklist.c linux-3.4.104-syssec_hw2_app2/mm/linklist.c
--- ../linux-3.4.104-vanilla/mm/linklist.c	1969-12-31 19:00:00.000000000 -0500
+++ linux-3.4.104-syssec_hw2_app2/mm/linklist.c	2014-11-12 22:36:50.000000000 -0500
@@ -0,0 +1,197 @@
+#include <linux/string.h>
+#include <linux/init.h> 
+#include <linux/linkage.h>
+#include <linux/moduleloader.h>
+#include <linux/fs.h>
+#include <asm/uaccess.h>
+#include <linux/slab.h>
+#include <linux/ctype.h>
+#include <linux/kthread.h>
+#include <linux/kernel.h>
+#include <linux/sched.h>
+#include <linux/module.h>
+#include <linux/stat.h>
+#include <linux/mm_types.h>
+#include <linux/mm.h>
+#include <asm/page_types.h>
+
+struct vma_descriptor *add_node_tpd(struct vma_descriptor *head, pid_t tid, unsigned long len, unsigned long addr, int present_bit_map){
+
+    int err = 0;
+    struct vma_descriptor *n = NULL, *temp = NULL;
+
+    n = kmalloc(sizeof(struct vma_descriptor), GFP_KERNEL);
+    
+    if(n == NULL){
+        err = -ENOMEM;
+        printk("Cannot add item to the user/file list:err %d\n", err);
+        goto out;
+    }
+
+    n->tid = tid;
+    n->len = len;
+	n->present_bit_map = present_bit_map;
+	n->addr = addr;
+    n->next = NULL;
+
+    if(head == NULL){
+        /* adding first element */
+        head = n;
+    }
+    else{
+        /* adding at the head */
+        temp = head;
+        head = n;
+        n->next = temp;
+    }
+
+out:
+    if(err != 0)
+        return ERR_PTR(err);
+    else 
+        return head;
+}
+EXPORT_SYMBOL(add_node_tpd);
+
+void delete_list_tpd(struct vma_descriptor *head){
+    struct vma_descriptor *temp = NULL, *temp_next = NULL;
+
+    /* checking if list is already empty */
+    if(head == NULL){
+        printk("The List is empty\n");
+        goto out;
+    }
+    
+    temp = head;
+    temp_next = head->next;
+    
+    while(temp){
+        temp->next = NULL;
+        temp->tid = 0;
+        temp->len = 0;
+        temp->addr = 0;
+        kfree(temp);
+        temp = temp_next;
+        if(temp_next)
+            temp_next = temp_next->next;
+    }
+out:
+		return;
+}
+EXPORT_SYMBOL(delete_list_tpd);
+
+struct vma_descriptor *delete_node_tpd(struct vma_descriptor *head, pid_t tid, unsigned long len,
+										unsigned long addr){
+    
+    int err = 0;
+    struct vma_descriptor *temp = NULL, *temp_prev = NULL;
+
+    /* checking if list is initialized or not */ 
+    if(head == NULL){
+        err = -EINVAL;
+        printk("User/file list not initialized: Cannot delete. err %d\n", err);
+        goto out;
+    }
+
+    temp = head;
+    while(temp){
+
+        if(temp->tid == tid &&
+				temp->addr == addr &&
+				temp->len == len){
+
+            if(temp_prev == NULL){
+                /* deleting from head */ 
+                head = temp->next;
+                temp->next = NULL;
+                temp->tid = 0;
+				temp->len = 0;
+				temp->addr = 0;
+                kfree(temp);
+            }
+
+            else{
+                /* deleting from elsewhere */
+                temp_prev->next = temp->next;
+                temp->next = NULL;
+				temp->tid = 0;
+				temp->len = 0;
+				temp->addr = 0;
+                kfree(temp);
+            }
+
+            break;
+        }
+
+        temp_prev = temp;
+        temp = temp->next;
+    }
+
+out:
+    if(err != 0)
+        return ERR_PTR(err);
+    else 
+        return head;
+}
+EXPORT_SYMBOL(delete_node_tpd);
+
+void display_list_tpd(struct vma_descriptor *head){
+    struct vma_descriptor *temp = NULL;
+
+    if(head == NULL){
+        printk("User list is not initialized. Cannot print.\n");
+        return;
+    }
+
+    temp = head;
+    while(temp){
+        printk("PID: %d, Addr: %lu, Present bit map: %d\n", (int)temp->tid, temp->addr, temp->present_bit_map);
+    
+        if(temp)
+            temp = temp->next;
+    }
+}
+EXPORT_SYMBOL(display_list_tpd);
+
+int update_tpd_list(struct vma_descriptor *head, unsigned long address, int flag){
+    
+	int page_number = 0;
+	
+    if(head == NULL){
+        printk("User list is not initialized. Cannot find.\n");
+        return -EINVAL;
+    }
+	
+	page_number = (address - head->addr)/4096;
+	if(flag == 1)
+		head->present_bit_map = reset_nth_bit(head->present_bit_map, page_number);
+	else if(flag == 2)
+		head->present_bit_map = set_nth_bit(head->present_bit_map, page_number);
+    return 0;
+}
+EXPORT_SYMBOL(update_tpd_list);
+
+struct vma_descriptor *search_list_tpd(struct vma_descriptor *head, pid_t tid){
+    struct vma_descriptor *temp = NULL;
+
+    if(head == NULL){
+        printk("User list is not initialized. Cannot find.\n");
+        return temp;
+    }
+
+    temp = head;
+    while(temp){
+        
+        if(temp->tid == tid)
+            goto out;
+    
+        if(temp)
+            temp = temp->next;
+    }
+    
+    temp = NULL;
+ 
+ out:   
+    return temp;
+}
+EXPORT_SYMBOL(search_list_tpd);
\ No newline at end of file
diff -uprN ../linux-3.4.104-vanilla/mm/memory.c linux-3.4.104-syssec_hw2_app2/mm/memory.c
--- ../linux-3.4.104-vanilla/mm/memory.c	2014-09-24 23:49:19.000000000 -0400
+++ linux-3.4.104-syssec_hw2_app2/mm/memory.c	2014-11-12 22:36:55.000000000 -0500
@@ -24,16 +24,16 @@
  * Real VM (paging to/from disk) started 18.12.91. Much more work and
  * thought has to go into this. Oh, well..
  * 19.12.91  -  works, somewhat. Sometimes I get faults, don't know why.
- *		Found it. Everything seems to work now.
+ *        Found it. Everything seems to work now.
  * 20.12.91  -  Ok, making the swap-device changeable like the root.
  */
 
 /*
  * 05.04.94  -  Multi-page memory management added for v1.1.
- * 		Idea by Alex Bligh (alex@cconcepts.co.uk)
+ *         Idea by Alex Bligh (alex@cconcepts.co.uk)
  *
  * 16.07.99  -  Support of BIGMEM added by Gerhard Wichert, Siemens AG
- *		(Gerhard.Wichert@pdb.siemens.de)
+ *        (Gerhard.Wichert@pdb.siemens.de)
  *
  * Aug/Sep 2004 Changed to four level page tables (Andi Kleen)
  */
@@ -97,15 +97,15 @@ EXPORT_SYMBOL(high_memory);
  */
 int randomize_va_space __read_mostly =
 #ifdef CONFIG_COMPAT_BRK
-					1;
+                    1;
 #else
-					2;
+                    2;
 #endif
 
 static int __init disable_randmaps(char *s)
 {
-	randomize_va_space = 0;
-	return 1;
+    randomize_va_space = 0;
+    return 1;
 }
 __setup("norandmaps", disable_randmaps);
 
@@ -117,8 +117,8 @@ unsigned long highest_memmap_pfn __read_
  */
 static int __init init_zero_pfn(void)
 {
-	zero_pfn = page_to_pfn(ZERO_PAGE(0));
-	return 0;
+    zero_pfn = page_to_pfn(ZERO_PAGE(0));
+    return 0;
 }
 core_initcall(init_zero_pfn);
 
@@ -127,37 +127,37 @@ core_initcall(init_zero_pfn);
 
 void sync_mm_rss(struct mm_struct *mm)
 {
-	int i;
+    int i;
 
-	for (i = 0; i < NR_MM_COUNTERS; i++) {
-		if (current->rss_stat.count[i]) {
-			add_mm_counter(mm, i, current->rss_stat.count[i]);
-			current->rss_stat.count[i] = 0;
-		}
-	}
-	current->rss_stat.events = 0;
+    for (i = 0; i < NR_MM_COUNTERS; i++) {
+        if (current->rss_stat.count[i]) {
+            add_mm_counter(mm, i, current->rss_stat.count[i]);
+            current->rss_stat.count[i] = 0;
+        }
+    }
+    current->rss_stat.events = 0;
 }
 
 static void add_mm_counter_fast(struct mm_struct *mm, int member, int val)
 {
-	struct task_struct *task = current;
+    struct task_struct *task = current;
 
-	if (likely(task->mm == mm))
-		task->rss_stat.count[member] += val;
-	else
-		add_mm_counter(mm, member, val);
+    if (likely(task->mm == mm))
+        task->rss_stat.count[member] += val;
+    else
+        add_mm_counter(mm, member, val);
 }
 #define inc_mm_counter_fast(mm, member) add_mm_counter_fast(mm, member, 1)
 #define dec_mm_counter_fast(mm, member) add_mm_counter_fast(mm, member, -1)
 
 /* sync counter once per 64 page faults */
-#define TASK_RSS_EVENTS_THRESH	(64)
+#define TASK_RSS_EVENTS_THRESH    (64)
 static void check_sync_rss_stat(struct task_struct *task)
 {
-	if (unlikely(task != current))
-		return;
-	if (unlikely(task->rss_stat.events++ > TASK_RSS_EVENTS_THRESH))
-		sync_mm_rss(task->mm);
+    if (unlikely(task != current))
+        return;
+    if (unlikely(task->rss_stat.events++ > TASK_RSS_EVENTS_THRESH))
+        sync_mm_rss(task->mm);
 }
 #else /* SPLIT_RSS_COUNTING */
 
@@ -174,124 +174,124 @@ static void check_sync_rss_stat(struct t
 
 static int tlb_next_batch(struct mmu_gather *tlb)
 {
-	struct mmu_gather_batch *batch;
-
-	batch = tlb->active;
-	if (batch->next) {
-		tlb->active = batch->next;
-		return 1;
-	}
+    struct mmu_gather_batch *batch;
 
-	if (tlb->batch_count == MAX_GATHER_BATCH_COUNT)
-		return 0;
+    batch = tlb->active;
+    if (batch->next) {
+        tlb->active = batch->next;
+        return 1;
+    }
+
+    if (tlb->batch_count == MAX_GATHER_BATCH_COUNT)
+        return 0;
+
+    batch = (void *)__get_free_pages(GFP_NOWAIT | __GFP_NOWARN, 0);
+    if (!batch)
+        return 0;
+
+    tlb->batch_count++;
+    batch->next = NULL;
+    batch->nr   = 0;
+    batch->max  = MAX_GATHER_BATCH;
 
-	batch = (void *)__get_free_pages(GFP_NOWAIT | __GFP_NOWARN, 0);
-	if (!batch)
-		return 0;
-
-	tlb->batch_count++;
-	batch->next = NULL;
-	batch->nr   = 0;
-	batch->max  = MAX_GATHER_BATCH;
+    tlb->active->next = batch;
+    tlb->active = batch;
 
-	tlb->active->next = batch;
-	tlb->active = batch;
-
-	return 1;
+    return 1;
 }
 
 /* tlb_gather_mmu
- *	Called to initialize an (on-stack) mmu_gather structure for page-table
- *	tear-down from @mm. The @fullmm argument is used when @mm is without
- *	users and we're going to destroy the full address space (exit/execve).
+ *    Called to initialize an (on-stack) mmu_gather structure for page-table
+ *    tear-down from @mm. The @fullmm argument is used when @mm is without
+ *    users and we're going to destroy the full address space (exit/execve).
  */
 void tlb_gather_mmu(struct mmu_gather *tlb, struct mm_struct *mm, bool fullmm)
 {
-	tlb->mm = mm;
+    tlb->mm = mm;
 
-	tlb->fullmm     = fullmm;
-	tlb->need_flush = 0;
-	tlb->fast_mode  = (num_possible_cpus() == 1);
-	tlb->local.next = NULL;
-	tlb->local.nr   = 0;
-	tlb->local.max  = ARRAY_SIZE(tlb->__pages);
-	tlb->active     = &tlb->local;
-	tlb->batch_count = 0;
+    tlb->fullmm     = fullmm;
+    tlb->need_flush = 0;
+    tlb->fast_mode  = (num_possible_cpus() == 1);
+    tlb->local.next = NULL;
+    tlb->local.nr   = 0;
+    tlb->local.max  = ARRAY_SIZE(tlb->__pages);
+    tlb->active     = &tlb->local;
+    tlb->batch_count = 0;
 
 #ifdef CONFIG_HAVE_RCU_TABLE_FREE
-	tlb->batch = NULL;
+    tlb->batch = NULL;
 #endif
 }
 
 void tlb_flush_mmu(struct mmu_gather *tlb)
 {
-	struct mmu_gather_batch *batch;
+    struct mmu_gather_batch *batch;
 
-	if (!tlb->need_flush)
-		return;
-	tlb->need_flush = 0;
-	tlb_flush(tlb);
+    if (!tlb->need_flush)
+        return;
+    tlb->need_flush = 0;
+    tlb_flush(tlb);
 #ifdef CONFIG_HAVE_RCU_TABLE_FREE
-	tlb_table_flush(tlb);
+    tlb_table_flush(tlb);
 #endif
 
-	if (tlb_fast_mode(tlb))
-		return;
+    if (tlb_fast_mode(tlb))
+        return;
 
-	for (batch = &tlb->local; batch; batch = batch->next) {
-		free_pages_and_swap_cache(batch->pages, batch->nr);
-		batch->nr = 0;
-	}
-	tlb->active = &tlb->local;
+    for (batch = &tlb->local; batch; batch = batch->next) {
+        free_pages_and_swap_cache(batch->pages, batch->nr);
+        batch->nr = 0;
+    }
+    tlb->active = &tlb->local;
 }
 
 /* tlb_finish_mmu
- *	Called at the end of the shootdown operation to free up any resources
- *	that were required.
+ *    Called at the end of the shootdown operation to free up any resources
+ *    that were required.
  */
 void tlb_finish_mmu(struct mmu_gather *tlb, unsigned long start, unsigned long end)
 {
-	struct mmu_gather_batch *batch, *next;
+    struct mmu_gather_batch *batch, *next;
 
-	tlb_flush_mmu(tlb);
+    tlb_flush_mmu(tlb);
 
-	/* keep the page table cache within bounds */
-	check_pgt_cache();
+    /* keep the page table cache within bounds */
+    check_pgt_cache();
 
-	for (batch = tlb->local.next; batch; batch = next) {
-		next = batch->next;
-		free_pages((unsigned long)batch, 0);
-	}
-	tlb->local.next = NULL;
+    for (batch = tlb->local.next; batch; batch = next) {
+        next = batch->next;
+        free_pages((unsigned long)batch, 0);
+    }
+    tlb->local.next = NULL;
 }
 
 /* __tlb_remove_page
- *	Must perform the equivalent to __free_pte(pte_get_and_clear(ptep)), while
- *	handling the additional races in SMP caused by other CPUs caching valid
- *	mappings in their TLBs. Returns the number of free page slots left.
- *	When out of page slots we must call tlb_flush_mmu().
+ *    Must perform the equivalent to __free_pte(pte_get_and_clear(ptep)), while
+ *    handling the additional races in SMP caused by other CPUs caching valid
+ *    mappings in their TLBs. Returns the number of free page slots left.
+ *    When out of page slots we must call tlb_flush_mmu().
  */
 int __tlb_remove_page(struct mmu_gather *tlb, struct page *page)
 {
-	struct mmu_gather_batch *batch;
+    struct mmu_gather_batch *batch;
 
-	VM_BUG_ON(!tlb->need_flush);
+    VM_BUG_ON(!tlb->need_flush);
 
-	if (tlb_fast_mode(tlb)) {
-		free_page_and_swap_cache(page);
-		return 1; /* avoid calling tlb_flush_mmu() */
-	}
+    if (tlb_fast_mode(tlb)) {
+        free_page_and_swap_cache(page);
+        return 1; /* avoid calling tlb_flush_mmu() */
+    }
+
+    batch = tlb->active;
+    batch->pages[batch->nr++] = page;
+    if (batch->nr == batch->max) {
+        if (!tlb_next_batch(tlb))
+            return 0;
+        batch = tlb->active;
+    }
+    VM_BUG_ON(batch->nr > batch->max);
 
-	batch = tlb->active;
-	batch->pages[batch->nr++] = page;
-	if (batch->nr == batch->max) {
-		if (!tlb_next_batch(tlb))
-			return 0;
-		batch = tlb->active;
-	}
-	VM_BUG_ON(batch->nr > batch->max);
-
-	return batch->max - batch->nr;
+    return batch->max - batch->nr;
 }
 
 #endif /* HAVE_GENERIC_MMU_GATHER */
@@ -304,71 +304,71 @@ int __tlb_remove_page(struct mmu_gather 
 
 static void tlb_remove_table_smp_sync(void *arg)
 {
-	/* Simply deliver the interrupt */
+    /* Simply deliver the interrupt */
 }
 
 static void tlb_remove_table_one(void *table)
 {
-	/*
-	 * This isn't an RCU grace period and hence the page-tables cannot be
-	 * assumed to be actually RCU-freed.
-	 *
-	 * It is however sufficient for software page-table walkers that rely on
-	 * IRQ disabling. See the comment near struct mmu_table_batch.
-	 */
-	smp_call_function(tlb_remove_table_smp_sync, NULL, 1);
-	__tlb_remove_table(table);
+    /*
+     * This isn't an RCU grace period and hence the page-tables cannot be
+     * assumed to be actually RCU-freed.
+     *
+     * It is however sufficient for software page-table walkers that rely on
+     * IRQ disabling. See the comment near struct mmu_table_batch.
+     */
+    smp_call_function(tlb_remove_table_smp_sync, NULL, 1);
+    __tlb_remove_table(table);
 }
 
 static void tlb_remove_table_rcu(struct rcu_head *head)
 {
-	struct mmu_table_batch *batch;
-	int i;
+    struct mmu_table_batch *batch;
+    int i;
 
-	batch = container_of(head, struct mmu_table_batch, rcu);
+    batch = container_of(head, struct mmu_table_batch, rcu);
 
-	for (i = 0; i < batch->nr; i++)
-		__tlb_remove_table(batch->tables[i]);
+    for (i = 0; i < batch->nr; i++)
+        __tlb_remove_table(batch->tables[i]);
 
-	free_page((unsigned long)batch);
+    free_page((unsigned long)batch);
 }
 
 void tlb_table_flush(struct mmu_gather *tlb)
 {
-	struct mmu_table_batch **batch = &tlb->batch;
+    struct mmu_table_batch **batch = &tlb->batch;
 
-	if (*batch) {
-		call_rcu_sched(&(*batch)->rcu, tlb_remove_table_rcu);
-		*batch = NULL;
-	}
+    if (*batch) {
+        call_rcu_sched(&(*batch)->rcu, tlb_remove_table_rcu);
+        *batch = NULL;
+    }
 }
 
 void tlb_remove_table(struct mmu_gather *tlb, void *table)
 {
-	struct mmu_table_batch **batch = &tlb->batch;
+    struct mmu_table_batch **batch = &tlb->batch;
 
-	tlb->need_flush = 1;
+    tlb->need_flush = 1;
 
-	/*
-	 * When there's less then two users of this mm there cannot be a
-	 * concurrent page-table walk.
-	 */
-	if (atomic_read(&tlb->mm->mm_users) < 2) {
-		__tlb_remove_table(table);
-		return;
-	}
-
-	if (*batch == NULL) {
-		*batch = (struct mmu_table_batch *)__get_free_page(GFP_NOWAIT | __GFP_NOWARN);
-		if (*batch == NULL) {
-			tlb_remove_table_one(table);
-			return;
-		}
-		(*batch)->nr = 0;
-	}
-	(*batch)->tables[(*batch)->nr++] = table;
-	if ((*batch)->nr == MAX_TABLE_BATCH)
-		tlb_table_flush(tlb);
+    /*
+     * When there's less then two users of this mm there cannot be a
+     * concurrent page-table walk.
+     */
+    if (atomic_read(&tlb->mm->mm_users) < 2) {
+        __tlb_remove_table(table);
+        return;
+    }
+
+    if (*batch == NULL) {
+        *batch = (struct mmu_table_batch *)__get_free_page(GFP_NOWAIT | __GFP_NOWARN);
+        if (*batch == NULL) {
+            tlb_remove_table_one(table);
+            return;
+        }
+        (*batch)->nr = 0;
+    }
+    (*batch)->tables[(*batch)->nr++] = table;
+    if ((*batch)->nr == MAX_TABLE_BATCH)
+        tlb_table_flush(tlb);
 }
 
 #endif /* CONFIG_HAVE_RCU_TABLE_FREE */
@@ -381,20 +381,20 @@ void tlb_remove_table(struct mmu_gather 
 
 void pgd_clear_bad(pgd_t *pgd)
 {
-	pgd_ERROR(*pgd);
-	pgd_clear(pgd);
+    pgd_ERROR(*pgd);
+    pgd_clear(pgd);
 }
 
 void pud_clear_bad(pud_t *pud)
 {
-	pud_ERROR(*pud);
-	pud_clear(pud);
+    pud_ERROR(*pud);
+    pud_clear(pud);
 }
 
 void pmd_clear_bad(pmd_t *pmd)
 {
-	pmd_ERROR(*pmd);
-	pmd_clear(pmd);
+    pmd_ERROR(*pmd);
+    pmd_clear(pmd);
 }
 
 /*
@@ -402,78 +402,78 @@ void pmd_clear_bad(pmd_t *pmd)
  * has been handled earlier when unmapping all the memory regions.
  */
 static void free_pte_range(struct mmu_gather *tlb, pmd_t *pmd,
-			   unsigned long addr)
+               unsigned long addr)
 {
-	pgtable_t token = pmd_pgtable(*pmd);
-	pmd_clear(pmd);
-	pte_free_tlb(tlb, token, addr);
-	tlb->mm->nr_ptes--;
+    pgtable_t token = pmd_pgtable(*pmd);
+    pmd_clear(pmd);
+    pte_free_tlb(tlb, token, addr);
+    tlb->mm->nr_ptes--;
 }
 
 static inline void free_pmd_range(struct mmu_gather *tlb, pud_t *pud,
-				unsigned long addr, unsigned long end,
-				unsigned long floor, unsigned long ceiling)
+                unsigned long addr, unsigned long end,
+                unsigned long floor, unsigned long ceiling)
 {
-	pmd_t *pmd;
-	unsigned long next;
-	unsigned long start;
-
-	start = addr;
-	pmd = pmd_offset(pud, addr);
-	do {
-		next = pmd_addr_end(addr, end);
-		if (pmd_none_or_clear_bad(pmd))
-			continue;
-		free_pte_range(tlb, pmd, addr);
-	} while (pmd++, addr = next, addr != end);
-
-	start &= PUD_MASK;
-	if (start < floor)
-		return;
-	if (ceiling) {
-		ceiling &= PUD_MASK;
-		if (!ceiling)
-			return;
-	}
-	if (end - 1 > ceiling - 1)
-		return;
-
-	pmd = pmd_offset(pud, start);
-	pud_clear(pud);
-	pmd_free_tlb(tlb, pmd, start);
+    pmd_t *pmd;
+    unsigned long next;
+    unsigned long start;
+
+    start = addr;
+    pmd = pmd_offset(pud, addr);
+    do {
+        next = pmd_addr_end(addr, end);
+        if (pmd_none_or_clear_bad(pmd))
+            continue;
+        free_pte_range(tlb, pmd, addr);
+    } while (pmd++, addr = next, addr != end);
+
+    start &= PUD_MASK;
+    if (start < floor)
+        return;
+    if (ceiling) {
+        ceiling &= PUD_MASK;
+        if (!ceiling)
+            return;
+    }
+    if (end - 1 > ceiling - 1)
+        return;
+
+    pmd = pmd_offset(pud, start);
+    pud_clear(pud);
+    pmd_free_tlb(tlb, pmd, start);
 }
 
 static inline void free_pud_range(struct mmu_gather *tlb, pgd_t *pgd,
-				unsigned long addr, unsigned long end,
-				unsigned long floor, unsigned long ceiling)
+                unsigned long addr, unsigned long end,
+                unsigned long floor, unsigned long ceiling)
 {
-	pud_t *pud;
-	unsigned long next;
-	unsigned long start;
-
-	start = addr;
-	pud = pud_offset(pgd, addr);
-	do {
-		next = pud_addr_end(addr, end);
-		if (pud_none_or_clear_bad(pud))
-			continue;
-		free_pmd_range(tlb, pud, addr, next, floor, ceiling);
-	} while (pud++, addr = next, addr != end);
-
-	start &= PGDIR_MASK;
-	if (start < floor)
-		return;
-	if (ceiling) {
-		ceiling &= PGDIR_MASK;
-		if (!ceiling)
-			return;
-	}
-	if (end - 1 > ceiling - 1)
-		return;
-
-	pud = pud_offset(pgd, start);
-	pgd_clear(pgd);
-	pud_free_tlb(tlb, pud, start);
+    pud_t *pud;
+    unsigned long next;
+    unsigned long start;
+
+    start = addr;
+    pud = pud_offset(pgd, addr);
+    do {
+        next = pud_addr_end(addr, end);
+        if (pud_none_or_clear_bad(pud))
+            continue;
+        free_pmd_range(tlb, pud, addr, next, floor, ceiling);
+    } while (pud++, addr = next, addr != end);
+
+    start &= PGDIR_MASK;
+    if (start < floor)
+        return;
+    if (ceiling) {
+        ceiling &= PGDIR_MASK;
+        if (!ceiling)
+            return;
+    }
+    if (end - 1 > ceiling - 1)
+        return;
+
+    pud = pud_offset(pgd, start);
+    pgd_clear(pgd);
+    pud_free_tlb(tlb, pud, start);
 }
 
 /*
@@ -482,171 +482,171 @@ static inline void free_pud_range(struct
  * Must be called with pagetable lock held.
  */
 void free_pgd_range(struct mmu_gather *tlb,
-			unsigned long addr, unsigned long end,
-			unsigned long floor, unsigned long ceiling)
+            unsigned long addr, unsigned long end,
+            unsigned long floor, unsigned long ceiling)
 {
-	pgd_t *pgd;
-	unsigned long next;
+    pgd_t *pgd;
+    unsigned long next;
 
-	/*
-	 * The next few lines have given us lots of grief...
-	 *
-	 * Why are we testing PMD* at this top level?  Because often
-	 * there will be no work to do at all, and we'd prefer not to
-	 * go all the way down to the bottom just to discover that.
-	 *
-	 * Why all these "- 1"s?  Because 0 represents both the bottom
-	 * of the address space and the top of it (using -1 for the
-	 * top wouldn't help much: the masks would do the wrong thing).
-	 * The rule is that addr 0 and floor 0 refer to the bottom of
-	 * the address space, but end 0 and ceiling 0 refer to the top
-	 * Comparisons need to use "end - 1" and "ceiling - 1" (though
-	 * that end 0 case should be mythical).
-	 *
-	 * Wherever addr is brought up or ceiling brought down, we must
-	 * be careful to reject "the opposite 0" before it confuses the
-	 * subsequent tests.  But what about where end is brought down
-	 * by PMD_SIZE below? no, end can't go down to 0 there.
-	 *
-	 * Whereas we round start (addr) and ceiling down, by different
-	 * masks at different levels, in order to test whether a table
-	 * now has no other vmas using it, so can be freed, we don't
-	 * bother to round floor or end up - the tests don't need that.
-	 */
-
-	addr &= PMD_MASK;
-	if (addr < floor) {
-		addr += PMD_SIZE;
-		if (!addr)
-			return;
-	}
-	if (ceiling) {
-		ceiling &= PMD_MASK;
-		if (!ceiling)
-			return;
-	}
-	if (end - 1 > ceiling - 1)
-		end -= PMD_SIZE;
-	if (addr > end - 1)
-		return;
-
-	pgd = pgd_offset(tlb->mm, addr);
-	do {
-		next = pgd_addr_end(addr, end);
-		if (pgd_none_or_clear_bad(pgd))
-			continue;
-		free_pud_range(tlb, pgd, addr, next, floor, ceiling);
-	} while (pgd++, addr = next, addr != end);
+    /*
+     * The next few lines have given us lots of grief...
+     *
+     * Why are we testing PMD* at this top level?  Because often
+     * there will be no work to do at all, and we'd prefer not to
+     * go all the way down to the bottom just to discover that.
+     *
+     * Why all these "- 1"s?  Because 0 represents both the bottom
+     * of the address space and the top of it (using -1 for the
+     * top wouldn't help much: the masks would do the wrong thing).
+     * The rule is that addr 0 and floor 0 refer to the bottom of
+     * the address space, but end 0 and ceiling 0 refer to the top
+     * Comparisons need to use "end - 1" and "ceiling - 1" (though
+     * that end 0 case should be mythical).
+     *
+     * Wherever addr is brought up or ceiling brought down, we must
+     * be careful to reject "the opposite 0" before it confuses the
+     * subsequent tests.  But what about where end is brought down
+     * by PMD_SIZE below? no, end can't go down to 0 there.
+     *
+     * Whereas we round start (addr) and ceiling down, by different
+     * masks at different levels, in order to test whether a table
+     * now has no other vmas using it, so can be freed, we don't
+     * bother to round floor or end up - the tests don't need that.
+     */
+
+    addr &= PMD_MASK;
+    if (addr < floor) {
+        addr += PMD_SIZE;
+        if (!addr)
+            return;
+    }
+    if (ceiling) {
+        ceiling &= PMD_MASK;
+        if (!ceiling)
+            return;
+    }
+    if (end - 1 > ceiling - 1)
+        end -= PMD_SIZE;
+    if (addr > end - 1)
+        return;
+
+    pgd = pgd_offset(tlb->mm, addr);
+    do {
+        next = pgd_addr_end(addr, end);
+        if (pgd_none_or_clear_bad(pgd))
+            continue;
+        free_pud_range(tlb, pgd, addr, next, floor, ceiling);
+    } while (pgd++, addr = next, addr != end);
 }
 
 void free_pgtables(struct mmu_gather *tlb, struct vm_area_struct *vma,
-		unsigned long floor, unsigned long ceiling)
+        unsigned long floor, unsigned long ceiling)
 {
-	while (vma) {
-		struct vm_area_struct *next = vma->vm_next;
-		unsigned long addr = vma->vm_start;
-
-		/*
-		 * Hide vma from rmap and truncate_pagecache before freeing
-		 * pgtables
-		 */
-		unlink_anon_vmas(vma);
-		unlink_file_vma(vma);
-
-		if (is_vm_hugetlb_page(vma)) {
-			hugetlb_free_pgd_range(tlb, addr, vma->vm_end,
-				floor, next? next->vm_start: ceiling);
-		} else {
-			/*
-			 * Optimization: gather nearby vmas into one call down
-			 */
-			while (next && next->vm_start <= vma->vm_end + PMD_SIZE
-			       && !is_vm_hugetlb_page(next)) {
-				vma = next;
-				next = vma->vm_next;
-				unlink_anon_vmas(vma);
-				unlink_file_vma(vma);
-			}
-			free_pgd_range(tlb, addr, vma->vm_end,
-				floor, next? next->vm_start: ceiling);
-		}
-		vma = next;
-	}
+    while (vma) {
+        struct vm_area_struct *next = vma->vm_next;
+        unsigned long addr = vma->vm_start;
+
+        /*
+         * Hide vma from rmap and truncate_pagecache before freeing
+         * pgtables
+         */
+        unlink_anon_vmas(vma);
+        unlink_file_vma(vma);
+
+        if (is_vm_hugetlb_page(vma)) {
+            hugetlb_free_pgd_range(tlb, addr, vma->vm_end,
+                floor, next? next->vm_start: ceiling);
+        } else {
+            /*
+             * Optimization: gather nearby vmas into one call down
+             */
+            while (next && next->vm_start <= vma->vm_end + PMD_SIZE
+                   && !is_vm_hugetlb_page(next)) {
+                vma = next;
+                next = vma->vm_next;
+                unlink_anon_vmas(vma);
+                unlink_file_vma(vma);
+            }
+            free_pgd_range(tlb, addr, vma->vm_end,
+                floor, next? next->vm_start: ceiling);
+        }
+        vma = next;
+    }
 }
 
 int __pte_alloc(struct mm_struct *mm, struct vm_area_struct *vma,
-		pmd_t *pmd, unsigned long address)
+        pmd_t *pmd, unsigned long address)
 {
-	pgtable_t new = pte_alloc_one(mm, address);
-	int wait_split_huge_page;
-	if (!new)
-		return -ENOMEM;
-
-	/*
-	 * Ensure all pte setup (eg. pte page lock and page clearing) are
-	 * visible before the pte is made visible to other CPUs by being
-	 * put into page tables.
-	 *
-	 * The other side of the story is the pointer chasing in the page
-	 * table walking code (when walking the page table without locking;
-	 * ie. most of the time). Fortunately, these data accesses consist
-	 * of a chain of data-dependent loads, meaning most CPUs (alpha
-	 * being the notable exception) will already guarantee loads are
-	 * seen in-order. See the alpha page table accessors for the
-	 * smp_read_barrier_depends() barriers in page table walking code.
-	 */
-	smp_wmb(); /* Could be smp_wmb__xxx(before|after)_spin_lock */
-
-	spin_lock(&mm->page_table_lock);
-	wait_split_huge_page = 0;
-	if (likely(pmd_none(*pmd))) {	/* Has another populated it ? */
-		mm->nr_ptes++;
-		pmd_populate(mm, pmd, new);
-		new = NULL;
-	} else if (unlikely(pmd_trans_splitting(*pmd)))
-		wait_split_huge_page = 1;
-	spin_unlock(&mm->page_table_lock);
-	if (new)
-		pte_free(mm, new);
-	if (wait_split_huge_page)
-		wait_split_huge_page(vma->anon_vma, pmd);
-	return 0;
+    pgtable_t new = pte_alloc_one(mm, address);
+    int wait_split_huge_page;
+    if (!new)
+        return -ENOMEM;
+
+    /*
+     * Ensure all pte setup (eg. pte page lock and page clearing) are
+     * visible before the pte is made visible to other CPUs by being
+     * put into page tables.
+     *
+     * The other side of the story is the pointer chasing in the page
+     * table walking code (when walking the page table without locking;
+     * ie. most of the time). Fortunately, these data accesses consist
+     * of a chain of data-dependent loads, meaning most CPUs (alpha
+     * being the notable exception) will already guarantee loads are
+     * seen in-order. See the alpha page table accessors for the
+     * smp_read_barrier_depends() barriers in page table walking code.
+     */
+    smp_wmb(); /* Could be smp_wmb__xxx(before|after)_spin_lock */
+
+    spin_lock(&mm->page_table_lock);
+    wait_split_huge_page = 0;
+    if (likely(pmd_none(*pmd))) {    /* Has another populated it ? */
+        mm->nr_ptes++;
+        pmd_populate(mm, pmd, new);
+        new = NULL;
+    } else if (unlikely(pmd_trans_splitting(*pmd)))
+        wait_split_huge_page = 1;
+    spin_unlock(&mm->page_table_lock);
+    if (new)
+        pte_free(mm, new);
+    if (wait_split_huge_page)
+        wait_split_huge_page(vma->anon_vma, pmd);
+    return 0;
 }
 
 int __pte_alloc_kernel(pmd_t *pmd, unsigned long address)
 {
-	pte_t *new = pte_alloc_one_kernel(&init_mm, address);
-	if (!new)
-		return -ENOMEM;
-
-	smp_wmb(); /* See comment in __pte_alloc */
-
-	spin_lock(&init_mm.page_table_lock);
-	if (likely(pmd_none(*pmd))) {	/* Has another populated it ? */
-		pmd_populate_kernel(&init_mm, pmd, new);
-		new = NULL;
-	} else
-		VM_BUG_ON(pmd_trans_splitting(*pmd));
-	spin_unlock(&init_mm.page_table_lock);
-	if (new)
-		pte_free_kernel(&init_mm, new);
-	return 0;
+    pte_t *new = pte_alloc_one_kernel(&init_mm, address);
+    if (!new)
+        return -ENOMEM;
+
+    smp_wmb(); /* See comment in __pte_alloc */
+
+    spin_lock(&init_mm.page_table_lock);
+    if (likely(pmd_none(*pmd))) {    /* Has another populated it ? */
+        pmd_populate_kernel(&init_mm, pmd, new);
+        new = NULL;
+    } else
+        VM_BUG_ON(pmd_trans_splitting(*pmd));
+    spin_unlock(&init_mm.page_table_lock);
+    if (new)
+        pte_free_kernel(&init_mm, new);
+    return 0;
 }
 
 static inline void init_rss_vec(int *rss)
 {
-	memset(rss, 0, sizeof(int) * NR_MM_COUNTERS);
+    memset(rss, 0, sizeof(int) * NR_MM_COUNTERS);
 }
 
 static inline void add_mm_rss_vec(struct mm_struct *mm, int *rss)
 {
-	int i;
+    int i;
 
-	if (current->mm == mm)
-		sync_mm_rss(mm);
-	for (i = 0; i < NR_MM_COUNTERS; i++)
-		if (rss[i])
-			add_mm_counter(mm, i, rss[i]);
+    if (current->mm == mm)
+        sync_mm_rss(mm);
+    for (i = 0; i < NR_MM_COUNTERS; i++)
+        if (rss[i])
+            add_mm_counter(mm, i, rss[i]);
 }
 
 /*
@@ -657,78 +657,78 @@ static inline void add_mm_rss_vec(struct
  * The calling function must still handle the error.
  */
 static void print_bad_pte(struct vm_area_struct *vma, unsigned long addr,
-			  pte_t pte, struct page *page)
+              pte_t pte, struct page *page)
 {
-	pgd_t *pgd = pgd_offset(vma->vm_mm, addr);
-	pud_t *pud = pud_offset(pgd, addr);
-	pmd_t *pmd = pmd_offset(pud, addr);
-	struct address_space *mapping;
-	pgoff_t index;
-	static unsigned long resume;
-	static unsigned long nr_shown;
-	static unsigned long nr_unshown;
-
-	/*
-	 * Allow a burst of 60 reports, then keep quiet for that minute;
-	 * or allow a steady drip of one report per second.
-	 */
-	if (nr_shown == 60) {
-		if (time_before(jiffies, resume)) {
-			nr_unshown++;
-			return;
-		}
-		if (nr_unshown) {
-			printk(KERN_ALERT
-				"BUG: Bad page map: %lu messages suppressed\n",
-				nr_unshown);
-			nr_unshown = 0;
-		}
-		nr_shown = 0;
-	}
-	if (nr_shown++ == 0)
-		resume = jiffies + 60 * HZ;
-
-	mapping = vma->vm_file ? vma->vm_file->f_mapping : NULL;
-	index = linear_page_index(vma, addr);
-
-	printk(KERN_ALERT
-		"BUG: Bad page map in process %s  pte:%08llx pmd:%08llx\n",
-		current->comm,
-		(long long)pte_val(pte), (long long)pmd_val(*pmd));
-	if (page)
-		dump_page(page);
-	printk(KERN_ALERT
-		"addr:%p vm_flags:%08lx anon_vma:%p mapping:%p index:%lx\n",
-		(void *)addr, vma->vm_flags, vma->anon_vma, mapping, index);
-	/*
-	 * Choose text because data symbols depend on CONFIG_KALLSYMS_ALL=y
-	 */
-	if (vma->vm_ops)
-		print_symbol(KERN_ALERT "vma->vm_ops->fault: %s\n",
-				(unsigned long)vma->vm_ops->fault);
-	if (vma->vm_file && vma->vm_file->f_op)
-		print_symbol(KERN_ALERT "vma->vm_file->f_op->mmap: %s\n",
-				(unsigned long)vma->vm_file->f_op->mmap);
-	dump_stack();
-	add_taint(TAINT_BAD_PAGE);
+    pgd_t *pgd = pgd_offset(vma->vm_mm, addr);
+    pud_t *pud = pud_offset(pgd, addr);
+    pmd_t *pmd = pmd_offset(pud, addr);
+    struct address_space *mapping;
+    pgoff_t index;
+    static unsigned long resume;
+    static unsigned long nr_shown;
+    static unsigned long nr_unshown;
+
+    /*
+     * Allow a burst of 60 reports, then keep quiet for that minute;
+     * or allow a steady drip of one report per second.
+     */
+    if (nr_shown == 60) {
+        if (time_before(jiffies, resume)) {
+            nr_unshown++;
+            return;
+        }
+        if (nr_unshown) {
+            printk(KERN_ALERT
+                "BUG: Bad page map: %lu messages suppressed\n",
+                nr_unshown);
+            nr_unshown = 0;
+        }
+        nr_shown = 0;
+    }
+    if (nr_shown++ == 0)
+        resume = jiffies + 60 * HZ;
+
+    mapping = vma->vm_file ? vma->vm_file->f_mapping : NULL;
+    index = linear_page_index(vma, addr);
+
+    printk(KERN_ALERT
+        "BUG: Bad page map in process %s  pte:%08llx pmd:%08llx\n",
+        current->comm,
+        (long long)pte_val(pte), (long long)pmd_val(*pmd));
+    if (page)
+        dump_page(page);
+    printk(KERN_ALERT
+        "addr:%p vm_flags:%08lx anon_vma:%p mapping:%p index:%lx\n",
+        (void *)addr, vma->vm_flags, vma->anon_vma, mapping, index);
+    /*
+     * Choose text because data symbols depend on CONFIG_KALLSYMS_ALL=y
+     */
+    if (vma->vm_ops)
+        print_symbol(KERN_ALERT "vma->vm_ops->fault: %s\n",
+                (unsigned long)vma->vm_ops->fault);
+    if (vma->vm_file && vma->vm_file->f_op)
+        print_symbol(KERN_ALERT "vma->vm_file->f_op->mmap: %s\n",
+                (unsigned long)vma->vm_file->f_op->mmap);
+    dump_stack();
+    add_taint(TAINT_BAD_PAGE);
 }
 
 static inline int is_cow_mapping(vm_flags_t flags)
 {
-	return (flags & (VM_SHARED | VM_MAYWRITE)) == VM_MAYWRITE;
+    return (flags & (VM_SHARED | VM_MAYWRITE)) == VM_MAYWRITE;
 }
 
 #ifndef is_zero_pfn
 static inline int is_zero_pfn(unsigned long pfn)
 {
-	return pfn == zero_pfn;
+    return pfn == zero_pfn;
 }
 #endif
 
 #ifndef my_zero_pfn
 static inline unsigned long my_zero_pfn(unsigned long addr)
 {
-	return zero_pfn;
+    return zero_pfn;
 }
 #endif
 
@@ -753,7 +753,7 @@ static inline unsigned long my_zero_pfn(
  * set, and the vm_pgoff will point to the first PFN mapped: thus every special
  * mapping will always honor the rule
  *
- *	pfn_of_page == vma->vm_pgoff + ((addr - vma->vm_start) >> PAGE_SHIFT)
+ *    pfn_of_page == vma->vm_pgoff + ((addr - vma->vm_start) >> PAGE_SHIFT)
  *
  * And for normal mappings this is false.
  *
@@ -780,51 +780,51 @@ static inline unsigned long my_zero_pfn(
 # define HAVE_PTE_SPECIAL 0
 #endif
 struct page *vm_normal_page(struct vm_area_struct *vma, unsigned long addr,
-				pte_t pte)
+                pte_t pte)
 {
-	unsigned long pfn = pte_pfn(pte);
-
-	if (HAVE_PTE_SPECIAL) {
-		if (likely(!pte_special(pte)))
-			goto check_pfn;
-		if (vma->vm_flags & (VM_PFNMAP | VM_MIXEDMAP))
-			return NULL;
-		if (!is_zero_pfn(pfn))
-			print_bad_pte(vma, addr, pte, NULL);
-		return NULL;
-	}
-
-	/* !HAVE_PTE_SPECIAL case follows: */
+    unsigned long pfn = pte_pfn(pte);
 
-	if (unlikely(vma->vm_flags & (VM_PFNMAP|VM_MIXEDMAP))) {
-		if (vma->vm_flags & VM_MIXEDMAP) {
-			if (!pfn_valid(pfn))
-				return NULL;
-			goto out;
-		} else {
-			unsigned long off;
-			off = (addr - vma->vm_start) >> PAGE_SHIFT;
-			if (pfn == vma->vm_pgoff + off)
-				return NULL;
-			if (!is_cow_mapping(vma->vm_flags))
-				return NULL;
-		}
-	}
+    if (HAVE_PTE_SPECIAL) {
+        if (likely(!pte_special(pte)))
+            goto check_pfn;
+        if (vma->vm_flags & (VM_PFNMAP | VM_MIXEDMAP))
+            return NULL;
+        if (!is_zero_pfn(pfn))
+            print_bad_pte(vma, addr, pte, NULL);
+        return NULL;
+    }
+
+    /* !HAVE_PTE_SPECIAL case follows: */
+
+    if (unlikely(vma->vm_flags & (VM_PFNMAP|VM_MIXEDMAP))) {
+        if (vma->vm_flags & VM_MIXEDMAP) {
+            if (!pfn_valid(pfn))
+                return NULL;
+            goto out;
+        } else {
+            unsigned long off;
+            off = (addr - vma->vm_start) >> PAGE_SHIFT;
+            if (pfn == vma->vm_pgoff + off)
+                return NULL;
+            if (!is_cow_mapping(vma->vm_flags))
+                return NULL;
+        }
+    }
 
-	if (is_zero_pfn(pfn))
-		return NULL;
+    if (is_zero_pfn(pfn))
+        return NULL;
 check_pfn:
-	if (unlikely(pfn > highest_memmap_pfn)) {
-		print_bad_pte(vma, addr, pte, NULL);
-		return NULL;
-	}
-
-	/*
-	 * NOTE! We still have PageReserved() pages in the page tables.
-	 * eg. VDSO mappings can cause them to exist.
-	 */
+    if (unlikely(pfn > highest_memmap_pfn)) {
+        print_bad_pte(vma, addr, pte, NULL);
+        return NULL;
+    }
+
+    /*
+     * NOTE! We still have PageReserved() pages in the page tables.
+     * eg. VDSO mappings can cause them to exist.
+     */
 out:
-	return pfn_to_page(pfn);
+    return pfn_to_page(pfn);
 }
 
 /*
@@ -835,507 +835,507 @@ out:
 
 static inline unsigned long
 copy_one_pte(struct mm_struct *dst_mm, struct mm_struct *src_mm,
-		pte_t *dst_pte, pte_t *src_pte, struct vm_area_struct *vma,
-		unsigned long addr, int *rss)
+        pte_t *dst_pte, pte_t *src_pte, struct vm_area_struct *vma,
+        unsigned long addr, int *rss)
 {
-	unsigned long vm_flags = vma->vm_flags;
-	pte_t pte = *src_pte;
-	struct page *page;
-
-	/* pte contains position in swap or file, so copy. */
-	if (unlikely(!pte_present(pte))) {
-		if (!pte_file(pte)) {
-			swp_entry_t entry = pte_to_swp_entry(pte);
-
-			if (swap_duplicate(entry) < 0)
-				return entry.val;
-
-			/* make sure dst_mm is on swapoff's mmlist. */
-			if (unlikely(list_empty(&dst_mm->mmlist))) {
-				spin_lock(&mmlist_lock);
-				if (list_empty(&dst_mm->mmlist))
-					list_add(&dst_mm->mmlist,
-						 &src_mm->mmlist);
-				spin_unlock(&mmlist_lock);
-			}
-			if (likely(!non_swap_entry(entry)))
-				rss[MM_SWAPENTS]++;
-			else if (is_migration_entry(entry)) {
-				page = migration_entry_to_page(entry);
-
-				if (PageAnon(page))
-					rss[MM_ANONPAGES]++;
-				else
-					rss[MM_FILEPAGES]++;
-
-				if (is_write_migration_entry(entry) &&
-				    is_cow_mapping(vm_flags)) {
-					/*
-					 * COW mappings require pages in both
-					 * parent and child to be set to read.
-					 */
-					make_migration_entry_read(&entry);
-					pte = swp_entry_to_pte(entry);
-					set_pte_at(src_mm, addr, src_pte, pte);
-				}
-			}
-		}
-		goto out_set_pte;
-	}
-
-	/*
-	 * If it's a COW mapping, write protect it both
-	 * in the parent and the child
-	 */
-	if (is_cow_mapping(vm_flags)) {
-		ptep_set_wrprotect(src_mm, addr, src_pte);
-		pte = pte_wrprotect(pte);
-	}
-
-	/*
-	 * If it's a shared mapping, mark it clean in
-	 * the child
-	 */
-	if (vm_flags & VM_SHARED)
-		pte = pte_mkclean(pte);
-	pte = pte_mkold(pte);
-
-	page = vm_normal_page(vma, addr, pte);
-	if (page) {
-		get_page(page);
-		page_dup_rmap(page);
-		if (PageAnon(page))
-			rss[MM_ANONPAGES]++;
-		else
-			rss[MM_FILEPAGES]++;
-	}
+    unsigned long vm_flags = vma->vm_flags;
+    pte_t pte = *src_pte;
+    struct page *page;
+
+    /* pte contains position in swap or file, so copy. */
+    if (unlikely(!pte_present(pte))) {
+        if (!pte_file(pte)) {
+            swp_entry_t entry = pte_to_swp_entry(pte);
+
+            if (swap_duplicate(entry) < 0)
+                return entry.val;
+
+            /* make sure dst_mm is on swapoff's mmlist. */
+            if (unlikely(list_empty(&dst_mm->mmlist))) {
+                spin_lock(&mmlist_lock);
+                if (list_empty(&dst_mm->mmlist))
+                    list_add(&dst_mm->mmlist,
+                         &src_mm->mmlist);
+                spin_unlock(&mmlist_lock);
+            }
+            if (likely(!non_swap_entry(entry)))
+                rss[MM_SWAPENTS]++;
+            else if (is_migration_entry(entry)) {
+                page = migration_entry_to_page(entry);
+
+                if (PageAnon(page))
+                    rss[MM_ANONPAGES]++;
+                else
+                    rss[MM_FILEPAGES]++;
+
+                if (is_write_migration_entry(entry) &&
+                    is_cow_mapping(vm_flags)) {
+                    /*
+                     * COW mappings require pages in both
+                     * parent and child to be set to read.
+                     */
+                    make_migration_entry_read(&entry);
+                    pte = swp_entry_to_pte(entry);
+                    set_pte_at(src_mm, addr, src_pte, pte);
+                }
+            }
+        }
+        goto out_set_pte;
+    }
+
+    /*
+     * If it's a COW mapping, write protect it both
+     * in the parent and the child
+     */
+    if (is_cow_mapping(vm_flags)) {
+        ptep_set_wrprotect(src_mm, addr, src_pte);
+        pte = pte_wrprotect(pte);
+    }
+
+    /*
+     * If it's a shared mapping, mark it clean in
+     * the child
+     */
+    if (vm_flags & VM_SHARED)
+        pte = pte_mkclean(pte);
+    pte = pte_mkold(pte);
+
+    page = vm_normal_page(vma, addr, pte);
+    if (page) {
+        get_page(page);
+        page_dup_rmap(page);
+        if (PageAnon(page))
+            rss[MM_ANONPAGES]++;
+        else
+            rss[MM_FILEPAGES]++;
+    }
 
 out_set_pte:
-	set_pte_at(dst_mm, addr, dst_pte, pte);
-	return 0;
+    set_pte_at(dst_mm, addr, dst_pte, pte);
+    return 0;
 }
 
 int copy_pte_range(struct mm_struct *dst_mm, struct mm_struct *src_mm,
-		   pmd_t *dst_pmd, pmd_t *src_pmd, struct vm_area_struct *vma,
-		   unsigned long addr, unsigned long end)
+           pmd_t *dst_pmd, pmd_t *src_pmd, struct vm_area_struct *vma,
+           unsigned long addr, unsigned long end)
 {
-	pte_t *orig_src_pte, *orig_dst_pte;
-	pte_t *src_pte, *dst_pte;
-	spinlock_t *src_ptl, *dst_ptl;
-	int progress = 0;
-	int rss[NR_MM_COUNTERS];
-	swp_entry_t entry = (swp_entry_t){0};
+    pte_t *orig_src_pte, *orig_dst_pte;
+    pte_t *src_pte, *dst_pte;
+    spinlock_t *src_ptl, *dst_ptl;
+    int progress = 0;
+    int rss[NR_MM_COUNTERS];
+    swp_entry_t entry = (swp_entry_t){0};
 
 again:
-	init_rss_vec(rss);
+    init_rss_vec(rss);
 
-	dst_pte = pte_alloc_map_lock(dst_mm, dst_pmd, addr, &dst_ptl);
-	if (!dst_pte)
-		return -ENOMEM;
-	src_pte = pte_offset_map(src_pmd, addr);
-	src_ptl = pte_lockptr(src_mm, src_pmd);
-	spin_lock_nested(src_ptl, SINGLE_DEPTH_NESTING);
-	orig_src_pte = src_pte;
-	orig_dst_pte = dst_pte;
-	arch_enter_lazy_mmu_mode();
-
-	do {
-		/*
-		 * We are holding two locks at this point - either of them
-		 * could generate latencies in another task on another CPU.
-		 */
-		if (progress >= 32) {
-			progress = 0;
-			if (need_resched() ||
-			    spin_needbreak(src_ptl) || spin_needbreak(dst_ptl))
-				break;
-		}
-		if (pte_none(*src_pte)) {
-			progress++;
-			continue;
-		}
-		entry.val = copy_one_pte(dst_mm, src_mm, dst_pte, src_pte,
-							vma, addr, rss);
-		if (entry.val)
-			break;
-		progress += 8;
-	} while (dst_pte++, src_pte++, addr += PAGE_SIZE, addr != end);
-
-	arch_leave_lazy_mmu_mode();
-	spin_unlock(src_ptl);
-	pte_unmap(orig_src_pte);
-	add_mm_rss_vec(dst_mm, rss);
-	pte_unmap_unlock(orig_dst_pte, dst_ptl);
-	cond_resched();
-
-	if (entry.val) {
-		if (add_swap_count_continuation(entry, GFP_KERNEL) < 0)
-			return -ENOMEM;
-		progress = 0;
-	}
-	if (addr != end)
-		goto again;
-	return 0;
+    dst_pte = pte_alloc_map_lock(dst_mm, dst_pmd, addr, &dst_ptl);
+    if (!dst_pte)
+        return -ENOMEM;
+    src_pte = pte_offset_map(src_pmd, addr);
+    src_ptl = pte_lockptr(src_mm, src_pmd);
+    spin_lock_nested(src_ptl, SINGLE_DEPTH_NESTING);
+    orig_src_pte = src_pte;
+    orig_dst_pte = dst_pte;
+    arch_enter_lazy_mmu_mode();
+
+    do {
+        /*
+         * We are holding two locks at this point - either of them
+         * could generate latencies in another task on another CPU.
+         */
+        if (progress >= 32) {
+            progress = 0;
+            if (need_resched() ||
+                spin_needbreak(src_ptl) || spin_needbreak(dst_ptl))
+                break;
+        }
+        if (pte_none(*src_pte)) {
+            progress++;
+            continue;
+        }
+        entry.val = copy_one_pte(dst_mm, src_mm, dst_pte, src_pte,
+                            vma, addr, rss);
+        if (entry.val)
+            break;
+        progress += 8;
+    } while (dst_pte++, src_pte++, addr += PAGE_SIZE, addr != end);
+
+    arch_leave_lazy_mmu_mode();
+    spin_unlock(src_ptl);
+    pte_unmap(orig_src_pte);
+    add_mm_rss_vec(dst_mm, rss);
+    pte_unmap_unlock(orig_dst_pte, dst_ptl);
+    cond_resched();
+
+    if (entry.val) {
+        if (add_swap_count_continuation(entry, GFP_KERNEL) < 0)
+            return -ENOMEM;
+        progress = 0;
+    }
+    if (addr != end)
+        goto again;
+    return 0;
 }
 
 static inline int copy_pmd_range(struct mm_struct *dst_mm, struct mm_struct *src_mm,
-		pud_t *dst_pud, pud_t *src_pud, struct vm_area_struct *vma,
-		unsigned long addr, unsigned long end)
+        pud_t *dst_pud, pud_t *src_pud, struct vm_area_struct *vma,
+        unsigned long addr, unsigned long end)
 {
-	pmd_t *src_pmd, *dst_pmd;
-	unsigned long next;
+    pmd_t *src_pmd, *dst_pmd;
+    unsigned long next;
 
-	dst_pmd = pmd_alloc(dst_mm, dst_pud, addr);
-	if (!dst_pmd)
-		return -ENOMEM;
-	src_pmd = pmd_offset(src_pud, addr);
-	do {
-		next = pmd_addr_end(addr, end);
-		if (pmd_trans_huge(*src_pmd)) {
-			int err;
-			VM_BUG_ON(next-addr != HPAGE_PMD_SIZE);
-			err = copy_huge_pmd(dst_mm, src_mm,
-					    dst_pmd, src_pmd, addr, vma);
-			if (err == -ENOMEM)
-				return -ENOMEM;
-			if (!err)
-				continue;
-			/* fall through */
-		}
-		if (pmd_none_or_clear_bad(src_pmd))
-			continue;
-		if (copy_pte_range(dst_mm, src_mm, dst_pmd, src_pmd,
-						vma, addr, next))
-			return -ENOMEM;
-	} while (dst_pmd++, src_pmd++, addr = next, addr != end);
-	return 0;
+    dst_pmd = pmd_alloc(dst_mm, dst_pud, addr);
+    if (!dst_pmd)
+        return -ENOMEM;
+    src_pmd = pmd_offset(src_pud, addr);
+    do {
+        next = pmd_addr_end(addr, end);
+        if (pmd_trans_huge(*src_pmd)) {
+            int err;
+            VM_BUG_ON(next-addr != HPAGE_PMD_SIZE);
+            err = copy_huge_pmd(dst_mm, src_mm,
+                        dst_pmd, src_pmd, addr, vma);
+            if (err == -ENOMEM)
+                return -ENOMEM;
+            if (!err)
+                continue;
+            /* fall through */
+        }
+        if (pmd_none_or_clear_bad(src_pmd))
+            continue;
+        if (copy_pte_range(dst_mm, src_mm, dst_pmd, src_pmd,
+                        vma, addr, next))
+            return -ENOMEM;
+    } while (dst_pmd++, src_pmd++, addr = next, addr != end);
+    return 0;
 }
 
 static inline int copy_pud_range(struct mm_struct *dst_mm, struct mm_struct *src_mm,
-		pgd_t *dst_pgd, pgd_t *src_pgd, struct vm_area_struct *vma,
-		unsigned long addr, unsigned long end)
+        pgd_t *dst_pgd, pgd_t *src_pgd, struct vm_area_struct *vma,
+        unsigned long addr, unsigned long end)
 {
-	pud_t *src_pud, *dst_pud;
-	unsigned long next;
+    pud_t *src_pud, *dst_pud;
+    unsigned long next;
 
-	dst_pud = pud_alloc(dst_mm, dst_pgd, addr);
-	if (!dst_pud)
-		return -ENOMEM;
-	src_pud = pud_offset(src_pgd, addr);
-	do {
-		next = pud_addr_end(addr, end);
-		if (pud_none_or_clear_bad(src_pud))
-			continue;
-		if (copy_pmd_range(dst_mm, src_mm, dst_pud, src_pud,
-						vma, addr, next))
-			return -ENOMEM;
-	} while (dst_pud++, src_pud++, addr = next, addr != end);
-	return 0;
+    dst_pud = pud_alloc(dst_mm, dst_pgd, addr);
+    if (!dst_pud)
+        return -ENOMEM;
+    src_pud = pud_offset(src_pgd, addr);
+    do {
+        next = pud_addr_end(addr, end);
+        if (pud_none_or_clear_bad(src_pud))
+            continue;
+        if (copy_pmd_range(dst_mm, src_mm, dst_pud, src_pud,
+                        vma, addr, next))
+            return -ENOMEM;
+    } while (dst_pud++, src_pud++, addr = next, addr != end);
+    return 0;
 }
 
 int copy_page_range(struct mm_struct *dst_mm, struct mm_struct *src_mm,
-		struct vm_area_struct *vma)
+        struct vm_area_struct *vma)
 {
-	pgd_t *src_pgd, *dst_pgd;
-	unsigned long next;
-	unsigned long addr = vma->vm_start;
-	unsigned long end = vma->vm_end;
-	int ret;
-
-	/*
-	 * Don't copy ptes where a page fault will fill them correctly.
-	 * Fork becomes much lighter when there are big shared or private
-	 * readonly mappings. The tradeoff is that copy_page_range is more
-	 * efficient than faulting.
-	 */
-	if (!(vma->vm_flags & (VM_HUGETLB|VM_NONLINEAR|VM_PFNMAP|VM_INSERTPAGE))) {
-		if (!vma->anon_vma)
-			return 0;
-	}
-
-	if (is_vm_hugetlb_page(vma))
-		return copy_hugetlb_page_range(dst_mm, src_mm, vma);
-
-	if (unlikely(is_pfn_mapping(vma))) {
-		/*
-		 * We do not free on error cases below as remove_vma
-		 * gets called on error from higher level routine
-		 */
-		ret = track_pfn_vma_copy(vma);
-		if (ret)
-			return ret;
-	}
-
-	/*
-	 * We need to invalidate the secondary MMU mappings only when
-	 * there could be a permission downgrade on the ptes of the
-	 * parent mm. And a permission downgrade will only happen if
-	 * is_cow_mapping() returns true.
-	 */
-	if (is_cow_mapping(vma->vm_flags))
-		mmu_notifier_invalidate_range_start(src_mm, addr, end);
-
-	ret = 0;
-	dst_pgd = pgd_offset(dst_mm, addr);
-	src_pgd = pgd_offset(src_mm, addr);
-	do {
-		next = pgd_addr_end(addr, end);
-		if (pgd_none_or_clear_bad(src_pgd))
-			continue;
-		if (unlikely(copy_pud_range(dst_mm, src_mm, dst_pgd, src_pgd,
-					    vma, addr, next))) {
-			ret = -ENOMEM;
-			break;
-		}
-	} while (dst_pgd++, src_pgd++, addr = next, addr != end);
-
-	if (is_cow_mapping(vma->vm_flags))
-		mmu_notifier_invalidate_range_end(src_mm,
-						  vma->vm_start, end);
-	return ret;
+    pgd_t *src_pgd, *dst_pgd;
+    unsigned long next;
+    unsigned long addr = vma->vm_start;
+    unsigned long end = vma->vm_end;
+    int ret;
+
+    /*
+     * Don't copy ptes where a page fault will fill them correctly.
+     * Fork becomes much lighter when there are big shared or private
+     * readonly mappings. The tradeoff is that copy_page_range is more
+     * efficient than faulting.
+     */
+    if (!(vma->vm_flags & (VM_HUGETLB|VM_NONLINEAR|VM_PFNMAP|VM_INSERTPAGE))) {
+        if (!vma->anon_vma)
+            return 0;
+    }
+
+    if (is_vm_hugetlb_page(vma))
+        return copy_hugetlb_page_range(dst_mm, src_mm, vma);
+
+    if (unlikely(is_pfn_mapping(vma))) {
+        /*
+         * We do not free on error cases below as remove_vma
+         * gets called on error from higher level routine
+         */
+        ret = track_pfn_vma_copy(vma);
+        if (ret)
+            return ret;
+    }
+
+    /*
+     * We need to invalidate the secondary MMU mappings only when
+     * there could be a permission downgrade on the ptes of the
+     * parent mm. And a permission downgrade will only happen if
+     * is_cow_mapping() returns true.
+     */
+    if (is_cow_mapping(vma->vm_flags))
+        mmu_notifier_invalidate_range_start(src_mm, addr, end);
+
+    ret = 0;
+    dst_pgd = pgd_offset(dst_mm, addr);
+    src_pgd = pgd_offset(src_mm, addr);
+    do {
+        next = pgd_addr_end(addr, end);
+        if (pgd_none_or_clear_bad(src_pgd))
+            continue;
+        if (unlikely(copy_pud_range(dst_mm, src_mm, dst_pgd, src_pgd,
+                        vma, addr, next))) {
+            ret = -ENOMEM;
+            break;
+        }
+    } while (dst_pgd++, src_pgd++, addr = next, addr != end);
+
+    if (is_cow_mapping(vma->vm_flags))
+        mmu_notifier_invalidate_range_end(src_mm,
+                          vma->vm_start, end);
+    return ret;
 }
 
 static unsigned long zap_pte_range(struct mmu_gather *tlb,
-				struct vm_area_struct *vma, pmd_t *pmd,
-				unsigned long addr, unsigned long end,
-				struct zap_details *details)
-{
-	struct mm_struct *mm = tlb->mm;
-	int force_flush = 0;
-	int rss[NR_MM_COUNTERS];
-	spinlock_t *ptl;
-	pte_t *start_pte;
-	pte_t *pte;
+                struct vm_area_struct *vma, pmd_t *pmd,
+                unsigned long addr, unsigned long end,
+                struct zap_details *details)
+{
+    struct mm_struct *mm = tlb->mm;
+    int force_flush = 0;
+    int rss[NR_MM_COUNTERS];
+    spinlock_t *ptl;
+    pte_t *start_pte;
+    pte_t *pte;
 
 again:
-	init_rss_vec(rss);
-	start_pte = pte_offset_map_lock(mm, pmd, addr, &ptl);
-	pte = start_pte;
-	arch_enter_lazy_mmu_mode();
-	do {
-		pte_t ptent = *pte;
-		if (pte_none(ptent)) {
-			continue;
-		}
-
-		if (pte_present(ptent)) {
-			struct page *page;
-
-			page = vm_normal_page(vma, addr, ptent);
-			if (unlikely(details) && page) {
-				/*
-				 * unmap_shared_mapping_pages() wants to
-				 * invalidate cache without truncating:
-				 * unmap shared but keep private pages.
-				 */
-				if (details->check_mapping &&
-				    details->check_mapping != page->mapping)
-					continue;
-				/*
-				 * Each page->index must be checked when
-				 * invalidating or truncating nonlinear.
-				 */
-				if (details->nonlinear_vma &&
-				    (page->index < details->first_index ||
-				     page->index > details->last_index))
-					continue;
-			}
-			ptent = ptep_get_and_clear_full(mm, addr, pte,
-							tlb->fullmm);
-			tlb_remove_tlb_entry(tlb, pte, addr);
-			if (unlikely(!page))
-				continue;
-			if (unlikely(details) && details->nonlinear_vma
-			    && linear_page_index(details->nonlinear_vma,
-						addr) != page->index)
-				set_pte_at(mm, addr, pte,
-					   pgoff_to_pte(page->index));
-			if (PageAnon(page))
-				rss[MM_ANONPAGES]--;
-			else {
-				if (pte_dirty(ptent))
-					set_page_dirty(page);
-				if (pte_young(ptent) &&
-				    likely(!VM_SequentialReadHint(vma)))
-					mark_page_accessed(page);
-				rss[MM_FILEPAGES]--;
-			}
-			page_remove_rmap(page);
-			if (unlikely(page_mapcount(page) < 0))
-				print_bad_pte(vma, addr, ptent, page);
-			force_flush = !__tlb_remove_page(tlb, page);
-			if (force_flush)
-				break;
-			continue;
-		}
-		/*
-		 * If details->check_mapping, we leave swap entries;
-		 * if details->nonlinear_vma, we leave file entries.
-		 */
-		if (unlikely(details))
-			continue;
-		if (pte_file(ptent)) {
-			if (unlikely(!(vma->vm_flags & VM_NONLINEAR)))
-				print_bad_pte(vma, addr, ptent, NULL);
-		} else {
-			swp_entry_t entry = pte_to_swp_entry(ptent);
-
-			if (!non_swap_entry(entry))
-				rss[MM_SWAPENTS]--;
-			else if (is_migration_entry(entry)) {
-				struct page *page;
-
-				page = migration_entry_to_page(entry);
-
-				if (PageAnon(page))
-					rss[MM_ANONPAGES]--;
-				else
-					rss[MM_FILEPAGES]--;
-			}
-			if (unlikely(!free_swap_and_cache(entry)))
-				print_bad_pte(vma, addr, ptent, NULL);
-		}
-		pte_clear_not_present_full(mm, addr, pte, tlb->fullmm);
-	} while (pte++, addr += PAGE_SIZE, addr != end);
-
-	add_mm_rss_vec(mm, rss);
-	arch_leave_lazy_mmu_mode();
-	pte_unmap_unlock(start_pte, ptl);
-
-	/*
-	 * mmu_gather ran out of room to batch pages, we break out of
-	 * the PTE lock to avoid doing the potential expensive TLB invalidate
-	 * and page-free while holding it.
-	 */
-	if (force_flush) {
-		force_flush = 0;
-		tlb_flush_mmu(tlb);
-		if (addr != end)
-			goto again;
-	}
+    init_rss_vec(rss);
+    start_pte = pte_offset_map_lock(mm, pmd, addr, &ptl);
+    pte = start_pte;
+    arch_enter_lazy_mmu_mode();
+    do {
+        pte_t ptent = *pte;
+        if (pte_none(ptent)) {
+            continue;
+        }
+
+        if (pte_present(ptent)) {
+            struct page *page;
+
+            page = vm_normal_page(vma, addr, ptent);
+            if (unlikely(details) && page) {
+                /*
+                 * unmap_shared_mapping_pages() wants to
+                 * invalidate cache without truncating:
+                 * unmap shared but keep private pages.
+                 */
+                if (details->check_mapping &&
+                    details->check_mapping != page->mapping)
+                    continue;
+                /*
+                 * Each page->index must be checked when
+                 * invalidating or truncating nonlinear.
+                 */
+                if (details->nonlinear_vma &&
+                    (page->index < details->first_index ||
+                     page->index > details->last_index))
+                    continue;
+            }
+            ptent = ptep_get_and_clear_full(mm, addr, pte,
+                            tlb->fullmm);
+            tlb_remove_tlb_entry(tlb, pte, addr);
+            if (unlikely(!page))
+                continue;
+            if (unlikely(details) && details->nonlinear_vma
+                && linear_page_index(details->nonlinear_vma,
+                        addr) != page->index)
+                set_pte_at(mm, addr, pte,
+                       pgoff_to_pte(page->index));
+            if (PageAnon(page))
+                rss[MM_ANONPAGES]--;
+            else {
+                if (pte_dirty(ptent))
+                    set_page_dirty(page);
+                if (pte_young(ptent) &&
+                    likely(!VM_SequentialReadHint(vma)))
+                    mark_page_accessed(page);
+                rss[MM_FILEPAGES]--;
+            }
+            page_remove_rmap(page);
+            if (unlikely(page_mapcount(page) < 0))
+                print_bad_pte(vma, addr, ptent, page);
+            force_flush = !__tlb_remove_page(tlb, page);
+            if (force_flush)
+                break;
+            continue;
+        }
+        /*
+         * If details->check_mapping, we leave swap entries;
+         * if details->nonlinear_vma, we leave file entries.
+         */
+        if (unlikely(details))
+            continue;
+        if (pte_file(ptent)) {
+            if (unlikely(!(vma->vm_flags & VM_NONLINEAR)))
+                print_bad_pte(vma, addr, ptent, NULL);
+        } else {
+            swp_entry_t entry = pte_to_swp_entry(ptent);
+
+            if (!non_swap_entry(entry))
+                rss[MM_SWAPENTS]--;
+            else if (is_migration_entry(entry)) {
+                struct page *page;
+
+                page = migration_entry_to_page(entry);
+
+                if (PageAnon(page))
+                    rss[MM_ANONPAGES]--;
+                else
+                    rss[MM_FILEPAGES]--;
+            }
+            if (unlikely(!free_swap_and_cache(entry)))
+                print_bad_pte(vma, addr, ptent, NULL);
+        }
+        pte_clear_not_present_full(mm, addr, pte, tlb->fullmm);
+    } while (pte++, addr += PAGE_SIZE, addr != end);
+
+    add_mm_rss_vec(mm, rss);
+    arch_leave_lazy_mmu_mode();
+    pte_unmap_unlock(start_pte, ptl);
+
+    /*
+     * mmu_gather ran out of room to batch pages, we break out of
+     * the PTE lock to avoid doing the potential expensive TLB invalidate
+     * and page-free while holding it.
+     */
+    if (force_flush) {
+        force_flush = 0;
+        tlb_flush_mmu(tlb);
+        if (addr != end)
+            goto again;
+    }
 
-	return addr;
+    return addr;
 }
 
 static inline unsigned long zap_pmd_range(struct mmu_gather *tlb,
-				struct vm_area_struct *vma, pud_t *pud,
-				unsigned long addr, unsigned long end,
-				struct zap_details *details)
-{
-	pmd_t *pmd;
-	unsigned long next;
-
-	pmd = pmd_offset(pud, addr);
-	do {
-		next = pmd_addr_end(addr, end);
-		if (pmd_trans_huge(*pmd)) {
-			if (next - addr != HPAGE_PMD_SIZE) {
-				VM_BUG_ON(!rwsem_is_locked(&tlb->mm->mmap_sem));
-				split_huge_page_pmd(vma->vm_mm, pmd);
-			} else if (zap_huge_pmd(tlb, vma, pmd, addr))
-				goto next;
-			/* fall through */
-		}
-		/*
-		 * Here there can be other concurrent MADV_DONTNEED or
-		 * trans huge page faults running, and if the pmd is
-		 * none or trans huge it can change under us. This is
-		 * because MADV_DONTNEED holds the mmap_sem in read
-		 * mode.
-		 */
-		if (pmd_none_or_trans_huge_or_clear_bad(pmd))
-			goto next;
-		next = zap_pte_range(tlb, vma, pmd, addr, next, details);
+                struct vm_area_struct *vma, pud_t *pud,
+                unsigned long addr, unsigned long end,
+                struct zap_details *details)
+{
+    pmd_t *pmd;
+    unsigned long next;
+
+    pmd = pmd_offset(pud, addr);
+    do {
+        next = pmd_addr_end(addr, end);
+        if (pmd_trans_huge(*pmd)) {
+            if (next - addr != HPAGE_PMD_SIZE) {
+                VM_BUG_ON(!rwsem_is_locked(&tlb->mm->mmap_sem));
+                split_huge_page_pmd(vma->vm_mm, pmd);
+            } else if (zap_huge_pmd(tlb, vma, pmd, addr))
+                goto next;
+            /* fall through */
+        }
+        /*
+         * Here there can be other concurrent MADV_DONTNEED or
+         * trans huge page faults running, and if the pmd is
+         * none or trans huge it can change under us. This is
+         * because MADV_DONTNEED holds the mmap_sem in read
+         * mode.
+         */
+        if (pmd_none_or_trans_huge_or_clear_bad(pmd))
+            goto next;
+        next = zap_pte_range(tlb, vma, pmd, addr, next, details);
 next:
-		cond_resched();
-	} while (pmd++, addr = next, addr != end);
+        cond_resched();
+    } while (pmd++, addr = next, addr != end);
 
-	return addr;
+    return addr;
 }
 
 static inline unsigned long zap_pud_range(struct mmu_gather *tlb,
-				struct vm_area_struct *vma, pgd_t *pgd,
-				unsigned long addr, unsigned long end,
-				struct zap_details *details)
-{
-	pud_t *pud;
-	unsigned long next;
-
-	pud = pud_offset(pgd, addr);
-	do {
-		next = pud_addr_end(addr, end);
-		if (pud_none_or_clear_bad(pud))
-			continue;
-		next = zap_pmd_range(tlb, vma, pud, addr, next, details);
-	} while (pud++, addr = next, addr != end);
+                struct vm_area_struct *vma, pgd_t *pgd,
+                unsigned long addr, unsigned long end,
+                struct zap_details *details)
+{
+    pud_t *pud;
+    unsigned long next;
+
+    pud = pud_offset(pgd, addr);
+    do {
+        next = pud_addr_end(addr, end);
+        if (pud_none_or_clear_bad(pud))
+            continue;
+        next = zap_pmd_range(tlb, vma, pud, addr, next, details);
+    } while (pud++, addr = next, addr != end);
 
-	return addr;
+    return addr;
 }
 
 static void unmap_page_range(struct mmu_gather *tlb,
-			     struct vm_area_struct *vma,
-			     unsigned long addr, unsigned long end,
-			     struct zap_details *details)
-{
-	pgd_t *pgd;
-	unsigned long next;
-
-	if (details && !details->check_mapping && !details->nonlinear_vma)
-		details = NULL;
-
-	BUG_ON(addr >= end);
-	mem_cgroup_uncharge_start();
-	tlb_start_vma(tlb, vma);
-	pgd = pgd_offset(vma->vm_mm, addr);
-	do {
-		next = pgd_addr_end(addr, end);
-		if (pgd_none_or_clear_bad(pgd))
-			continue;
-		next = zap_pud_range(tlb, vma, pgd, addr, next, details);
-	} while (pgd++, addr = next, addr != end);
-	tlb_end_vma(tlb, vma);
-	mem_cgroup_uncharge_end();
+                 struct vm_area_struct *vma,
+                 unsigned long addr, unsigned long end,
+                 struct zap_details *details)
+{
+    pgd_t *pgd;
+    unsigned long next;
+
+    if (details && !details->check_mapping && !details->nonlinear_vma)
+        details = NULL;
+
+    BUG_ON(addr >= end);
+    mem_cgroup_uncharge_start();
+    tlb_start_vma(tlb, vma);
+    pgd = pgd_offset(vma->vm_mm, addr);
+    do {
+        next = pgd_addr_end(addr, end);
+        if (pgd_none_or_clear_bad(pgd))
+            continue;
+        next = zap_pud_range(tlb, vma, pgd, addr, next, details);
+    } while (pgd++, addr = next, addr != end);
+    tlb_end_vma(tlb, vma);
+    mem_cgroup_uncharge_end();
 }
 
 
 static void unmap_single_vma(struct mmu_gather *tlb,
-		struct vm_area_struct *vma, unsigned long start_addr,
-		unsigned long end_addr, unsigned long *nr_accounted,
-		struct zap_details *details)
-{
-	unsigned long start = max(vma->vm_start, start_addr);
-	unsigned long end;
-
+        struct vm_area_struct *vma, unsigned long start_addr,
+        unsigned long end_addr, unsigned long *nr_accounted,
+        struct zap_details *details)
+{
+    unsigned long start = max(vma->vm_start, start_addr);
+    unsigned long end;
+    	
 	if (start >= vma->vm_end)
-		return;
-	end = min(vma->vm_end, end_addr);
-	if (end <= vma->vm_start)
-		return;
-
-	if (vma->vm_flags & VM_ACCOUNT)
-		*nr_accounted += (end - start) >> PAGE_SHIFT;
-
-	if (unlikely(is_pfn_mapping(vma)))
-		untrack_pfn_vma(vma, 0, 0);
-
-	if (start != end) {
-		if (unlikely(is_vm_hugetlb_page(vma))) {
-			/*
-			 * It is undesirable to test vma->vm_file as it
-			 * should be non-null for valid hugetlb area.
-			 * However, vm_file will be NULL in the error
-			 * cleanup path of do_mmap_pgoff. When
-			 * hugetlbfs ->mmap method fails,
-			 * do_mmap_pgoff() nullifies vma->vm_file
-			 * before calling this function to clean up.
-			 * Since no pte has actually been setup, it is
-			 * safe to do nothing in this case.
-			 */
-			if (vma->vm_file)
-				unmap_hugepage_range(vma, start, end, NULL);
-		} else
-			unmap_page_range(tlb, vma, start, end, details);
-	}
+        return;
+    end = min(vma->vm_end, end_addr);
+    if (end <= vma->vm_start)
+        return;
+
+    if (vma->vm_flags & VM_ACCOUNT)
+        *nr_accounted += (end - start) >> PAGE_SHIFT;
+
+    if (unlikely(is_pfn_mapping(vma)))
+        untrack_pfn_vma(vma, 0, 0);
+
+    if (start != end) {
+        if (unlikely(is_vm_hugetlb_page(vma))) {
+            /*
+             * It is undesirable to test vma->vm_file as it
+             * should be non-null for valid hugetlb area.
+             * However, vm_file will be NULL in the error
+             * cleanup path of do_mmap_pgoff. When
+             * hugetlbfs ->mmap method fails,
+             * do_mmap_pgoff() nullifies vma->vm_file
+             * before calling this function to clean up.
+             * Since no pte has actually been setup, it is
+             * safe to do nothing in this case.
+             */
+            if (vma->vm_file)
+                unmap_hugepage_range(vma, start, end, NULL);
+        } else
+            unmap_page_range(tlb, vma, start, end, details);
+    }
 }
 
 /**
@@ -1359,17 +1359,17 @@ static void unmap_single_vma(struct mmu_
  * drops the lock and schedules.
  */
 void unmap_vmas(struct mmu_gather *tlb,
-		struct vm_area_struct *vma, unsigned long start_addr,
-		unsigned long end_addr, unsigned long *nr_accounted,
-		struct zap_details *details)
-{
-	struct mm_struct *mm = vma->vm_mm;
-
-	mmu_notifier_invalidate_range_start(mm, start_addr, end_addr);
-	for ( ; vma && vma->vm_start < end_addr; vma = vma->vm_next)
-		unmap_single_vma(tlb, vma, start_addr, end_addr, nr_accounted,
-				 details);
-	mmu_notifier_invalidate_range_end(mm, start_addr, end_addr);
+        struct vm_area_struct *vma, unsigned long start_addr,
+        unsigned long end_addr, unsigned long *nr_accounted,
+        struct zap_details *details)
+{
+    struct mm_struct *mm = vma->vm_mm;
+	
+    mmu_notifier_invalidate_range_start(mm, start_addr, end_addr);
+    for ( ; vma && vma->vm_start < end_addr; vma = vma->vm_next)
+        unmap_single_vma(tlb, vma, start_addr, end_addr, nr_accounted,
+                 details);
+    mmu_notifier_invalidate_range_end(mm, start_addr, end_addr);
 }
 
 /**
@@ -1382,18 +1382,18 @@ void unmap_vmas(struct mmu_gather *tlb,
  * Caller must protect the VMA list
  */
 void zap_page_range(struct vm_area_struct *vma, unsigned long address,
-		unsigned long size, struct zap_details *details)
+        unsigned long size, struct zap_details *details)
 {
-	struct mm_struct *mm = vma->vm_mm;
-	struct mmu_gather tlb;
-	unsigned long end = address + size;
-	unsigned long nr_accounted = 0;
-
-	lru_add_drain();
-	tlb_gather_mmu(&tlb, mm, 0);
-	update_hiwater_rss(mm);
-	unmap_vmas(&tlb, vma, address, end, &nr_accounted, details);
-	tlb_finish_mmu(&tlb, address, end);
+    struct mm_struct *mm = vma->vm_mm;
+    struct mmu_gather tlb;
+    unsigned long end = address + size;
+    unsigned long nr_accounted = 0;
+
+    lru_add_drain();
+    tlb_gather_mmu(&tlb, mm, 0);
+    update_hiwater_rss(mm);
+    unmap_vmas(&tlb, vma, address, end, &nr_accounted, details);
+    tlb_finish_mmu(&tlb, address, end);
 }
 
 /**
@@ -1406,20 +1406,20 @@ void zap_page_range(struct vm_area_struc
  * The range must fit into one VMA.
  */
 static void zap_page_range_single(struct vm_area_struct *vma, unsigned long address,
-		unsigned long size, struct zap_details *details)
+        unsigned long size, struct zap_details *details)
 {
-	struct mm_struct *mm = vma->vm_mm;
-	struct mmu_gather tlb;
-	unsigned long end = address + size;
-	unsigned long nr_accounted = 0;
-
-	lru_add_drain();
-	tlb_gather_mmu(&tlb, mm, 0);
-	update_hiwater_rss(mm);
-	mmu_notifier_invalidate_range_start(mm, address, end);
-	unmap_single_vma(&tlb, vma, address, end, &nr_accounted, details);
-	mmu_notifier_invalidate_range_end(mm, address, end);
-	tlb_finish_mmu(&tlb, address, end);
+    struct mm_struct *mm = vma->vm_mm;
+    struct mmu_gather tlb;
+    unsigned long end = address + size;
+    unsigned long nr_accounted = 0;
+
+    lru_add_drain();
+    tlb_gather_mmu(&tlb, mm, 0);
+    update_hiwater_rss(mm);
+    mmu_notifier_invalidate_range_start(mm, address, end);
+    unmap_single_vma(&tlb, vma, address, end, &nr_accounted, details);
+    mmu_notifier_invalidate_range_end(mm, address, end);
+    tlb_finish_mmu(&tlb, address, end);
 }
 
 /**
@@ -1435,13 +1435,13 @@ static void zap_page_range_single(struct
  * Returns 0 if successful.
  */
 int zap_vma_ptes(struct vm_area_struct *vma, unsigned long address,
-		unsigned long size)
+        unsigned long size)
 {
-	if (address < vma->vm_start || address + size > vma->vm_end ||
-	    		!(vma->vm_flags & VM_PFNMAP))
-		return -1;
-	zap_page_range_single(vma, address, size, NULL);
-	return 0;
+    if (address < vma->vm_start || address + size > vma->vm_end ||
+                !(vma->vm_flags & VM_PFNMAP))
+        return -1;
+    zap_page_range_single(vma, address, size, NULL);
+    return 0;
 }
 EXPORT_SYMBOL_GPL(zap_vma_ptes);
 
@@ -1458,168 +1458,169 @@ EXPORT_SYMBOL_GPL(zap_vma_ptes);
  * by a page descriptor (see also vm_normal_page()).
  */
 struct page *follow_page(struct vm_area_struct *vma, unsigned long address,
-			unsigned int flags)
+            unsigned int flags)
 {
-	pgd_t *pgd;
-	pud_t *pud;
-	pmd_t *pmd;
-	pte_t *ptep, pte;
-	spinlock_t *ptl;
-	struct page *page;
-	struct mm_struct *mm = vma->vm_mm;
-
-	page = follow_huge_addr(mm, address, flags & FOLL_WRITE);
-	if (!IS_ERR(page)) {
-		BUG_ON(flags & FOLL_GET);
-		goto out;
-	}
-
-	page = NULL;
-	pgd = pgd_offset(mm, address);
-	if (pgd_none(*pgd) || unlikely(pgd_bad(*pgd)))
-		goto no_page_table;
-
-	pud = pud_offset(pgd, address);
-	if (pud_none(*pud))
-		goto no_page_table;
-	if (pud_huge(*pud) && vma->vm_flags & VM_HUGETLB) {
-		BUG_ON(flags & FOLL_GET);
-		page = follow_huge_pud(mm, address, pud, flags & FOLL_WRITE);
-		goto out;
-	}
-	if (unlikely(pud_bad(*pud)))
-		goto no_page_table;
-
-	pmd = pmd_offset(pud, address);
-	if (pmd_none(*pmd))
-		goto no_page_table;
-	if (pmd_huge(*pmd) && vma->vm_flags & VM_HUGETLB) {
-		BUG_ON(flags & FOLL_GET);
-		page = follow_huge_pmd(mm, address, pmd, flags & FOLL_WRITE);
-		goto out;
-	}
-	if (pmd_trans_huge(*pmd)) {
-		if (flags & FOLL_SPLIT) {
-			split_huge_page_pmd(mm, pmd);
-			goto split_fallthrough;
-		}
-		spin_lock(&mm->page_table_lock);
-		if (likely(pmd_trans_huge(*pmd))) {
-			if (unlikely(pmd_trans_splitting(*pmd))) {
-				spin_unlock(&mm->page_table_lock);
-				wait_split_huge_page(vma->anon_vma, pmd);
-			} else {
-				page = follow_trans_huge_pmd(mm, address,
-							     pmd, flags);
-				spin_unlock(&mm->page_table_lock);
-				goto out;
-			}
-		} else
-			spin_unlock(&mm->page_table_lock);
-		/* fall through */
-	}
+    pgd_t *pgd;
+    pud_t *pud;
+    pmd_t *pmd;
+    pte_t *ptep, pte;
+    spinlock_t *ptl;
+    struct page *page;
+    struct mm_struct *mm = vma->vm_mm;
+
+    page = follow_huge_addr(mm, address, flags & FOLL_WRITE);
+    if (!IS_ERR(page)) {
+        BUG_ON(flags & FOLL_GET);
+        goto out;
+    }
+
+    page = NULL;
+    pgd = pgd_offset(mm, address);
+    if (pgd_none(*pgd) || unlikely(pgd_bad(*pgd)))
+        goto no_page_table;
+
+    pud = pud_offset(pgd, address);
+    if (pud_none(*pud))
+        goto no_page_table;
+    if (pud_huge(*pud) && vma->vm_flags & VM_HUGETLB) {
+        BUG_ON(flags & FOLL_GET);
+        page = follow_huge_pud(mm, address, pud, flags & FOLL_WRITE);
+        goto out;
+    }
+    if (unlikely(pud_bad(*pud)))
+        goto no_page_table;
+
+    pmd = pmd_offset(pud, address);
+    if (pmd_none(*pmd))
+        goto no_page_table;
+    if (pmd_huge(*pmd) && vma->vm_flags & VM_HUGETLB) {
+        BUG_ON(flags & FOLL_GET);
+        page = follow_huge_pmd(mm, address, pmd, flags & FOLL_WRITE);
+        goto out;
+    }
+    if (pmd_trans_huge(*pmd)) {
+        if (flags & FOLL_SPLIT) {
+            split_huge_page_pmd(mm, pmd);
+            goto split_fallthrough;
+        }
+        spin_lock(&mm->page_table_lock);
+        if (likely(pmd_trans_huge(*pmd))) {
+            if (unlikely(pmd_trans_splitting(*pmd))) {
+                spin_unlock(&mm->page_table_lock);
+                wait_split_huge_page(vma->anon_vma, pmd);
+            } else {
+                page = follow_trans_huge_pmd(mm, address,
+                                 pmd, flags);
+                spin_unlock(&mm->page_table_lock);
+                goto out;
+            }
+        } else
+            spin_unlock(&mm->page_table_lock);
+        /* fall through */
+    }
 split_fallthrough:
-	if (unlikely(pmd_bad(*pmd)))
-		goto no_page_table;
+    if (unlikely(pmd_bad(*pmd)))
+        goto no_page_table;
 
-	ptep = pte_offset_map_lock(mm, pmd, address, &ptl);
+    ptep = pte_offset_map_lock(mm, pmd, address, &ptl);
 
-	pte = *ptep;
-	if (!pte_present(pte))
-		goto no_page;
-	if ((flags & FOLL_WRITE) && !pte_write(pte))
-		goto unlock;
-
-	page = vm_normal_page(vma, address, pte);
-	if (unlikely(!page)) {
-		if ((flags & FOLL_DUMP) ||
-		    !is_zero_pfn(pte_pfn(pte)))
-			goto bad_page;
-		page = pte_page(pte);
-	}
-
-	if (flags & FOLL_GET)
-		get_page_foll(page);
-	if (flags & FOLL_TOUCH) {
-		if ((flags & FOLL_WRITE) &&
-		    !pte_dirty(pte) && !PageDirty(page))
-			set_page_dirty(page);
-		/*
-		 * pte_mkyoung() would be more correct here, but atomic care
-		 * is needed to avoid losing the dirty bit: it is easier to use
-		 * mark_page_accessed().
-		 */
-		mark_page_accessed(page);
-	}
-	if ((flags & FOLL_MLOCK) && (vma->vm_flags & VM_LOCKED)) {
-		/*
-		 * The preliminary mapping check is mainly to avoid the
-		 * pointless overhead of lock_page on the ZERO_PAGE
-		 * which might bounce very badly if there is contention.
-		 *
-		 * If the page is already locked, we don't need to
-		 * handle it now - vmscan will handle it later if and
-		 * when it attempts to reclaim the page.
-		 */
-		if (page->mapping && trylock_page(page)) {
-			lru_add_drain();  /* push cached pages to LRU */
-			/*
-			 * Because we lock page here and migration is
-			 * blocked by the pte's page reference, we need
-			 * only check for file-cache page truncation.
-			 */
-			if (page->mapping)
-				mlock_vma_page(page);
-			unlock_page(page);
-		}
-	}
+    pte = *ptep;
+    if (!pte_present(pte))
+        goto no_page;
+    if ((flags & FOLL_WRITE) && !pte_write(pte))
+        goto unlock;
+
+    page = vm_normal_page(vma, address, pte);
+    if (unlikely(!page)) {
+        if ((flags & FOLL_DUMP) ||
+            !is_zero_pfn(pte_pfn(pte)))
+            goto bad_page;
+        page = pte_page(pte);
+    }
+
+    if (flags & FOLL_GET)
+        get_page_foll(page);
+    if (flags & FOLL_TOUCH) {
+        if ((flags & FOLL_WRITE) &&
+            !pte_dirty(pte) && !PageDirty(page))
+            set_page_dirty(page);
+        /*
+         * pte_mkyoung() would be more correct here, but atomic care
+         * is needed to avoid losing the dirty bit: it is easier to use
+         * mark_page_accessed().
+         */
+        mark_page_accessed(page);
+    }
+    if ((flags & FOLL_MLOCK) && (vma->vm_flags & VM_LOCKED)) {
+        /*
+         * The preliminary mapping check is mainly to avoid the
+         * pointless overhead of lock_page on the ZERO_PAGE
+         * which might bounce very badly if there is contention.
+         *
+         * If the page is already locked, we don't need to
+         * handle it now - vmscan will handle it later if and
+         * when it attempts to reclaim the page.
+         */
+        if (page->mapping && trylock_page(page)) {
+            lru_add_drain();  /* push cached pages to LRU */
+            /*
+             * Because we lock page here and migration is
+             * blocked by the pte's page reference, we need
+             * only check for file-cache page truncation.
+             */
+            if (page->mapping)
+                mlock_vma_page(page);
+            unlock_page(page);
+        }
+    }
 unlock:
-	pte_unmap_unlock(ptep, ptl);
+    pte_unmap_unlock(ptep, ptl);
 out:
-	return page;
+    return page;
 
 bad_page:
-	pte_unmap_unlock(ptep, ptl);
-	return ERR_PTR(-EFAULT);
+    pte_unmap_unlock(ptep, ptl);
+    return ERR_PTR(-EFAULT);
 
 no_page:
-	pte_unmap_unlock(ptep, ptl);
-	if (!pte_none(pte))
-		return page;
+    pte_unmap_unlock(ptep, ptl);
+    if (!pte_none(pte))
+        return page;
 
 no_page_table:
-	/*
-	 * When core dumping an enormous anonymous area that nobody
-	 * has touched so far, we don't want to allocate unnecessary pages or
-	 * page tables.  Return error instead of NULL to skip handle_mm_fault,
-	 * then get_dump_page() will return NULL to leave a hole in the dump.
-	 * But we can only make this optimization where a hole would surely
-	 * be zero-filled if handle_mm_fault() actually did handle it.
-	 */
-	if ((flags & FOLL_DUMP) &&
-	    (!vma->vm_ops || !vma->vm_ops->fault))
-		return ERR_PTR(-EFAULT);
-	return page;
+    /*
+     * When core dumping an enormous anonymous area that nobody
+     * has touched so far, we don't want to allocate unnecessary pages or
+     * page tables.  Return error instead of NULL to skip handle_mm_fault,
+     * then get_dump_page() will return NULL to leave a hole in the dump.
+     * But we can only make this optimization where a hole would surely
+     * be zero-filled if handle_mm_fault() actually did handle it.
+     */
+    if ((flags & FOLL_DUMP) &&
+        (!vma->vm_ops || !vma->vm_ops->fault))
+        return ERR_PTR(-EFAULT);
+    return page;
 }
+EXPORT_SYMBOL(follow_page);
 
 static inline int stack_guard_page(struct vm_area_struct *vma, unsigned long addr)
 {
-	return stack_guard_page_start(vma, addr) ||
-	       stack_guard_page_end(vma, addr+PAGE_SIZE);
+    return stack_guard_page_start(vma, addr) ||
+           stack_guard_page_end(vma, addr+PAGE_SIZE);
 }
 
 /**
  * __get_user_pages() - pin user pages in memory
- * @tsk:	task_struct of target task
- * @mm:		mm_struct of target mm
- * @start:	starting user address
- * @nr_pages:	number of pages from start to pin
- * @gup_flags:	flags modifying pin behaviour
- * @pages:	array that receives pointers to the pages pinned.
- *		Should be at least nr_pages long. Or NULL, if caller
- *		only intends to ensure the pages are faulted in.
- * @vmas:	array of pointers to vmas corresponding to each page.
- *		Or NULL if the caller does not require them.
+ * @tsk:    task_struct of target task
+ * @mm:        mm_struct of target mm
+ * @start:    starting user address
+ * @nr_pages:    number of pages from start to pin
+ * @gup_flags:    flags modifying pin behaviour
+ * @pages:    array that receives pointers to the pages pinned.
+ *        Should be at least nr_pages long. Or NULL, if caller
+ *        only intends to ensure the pages are faulted in.
+ * @vmas:    array of pointers to vmas corresponding to each page.
+ *        Or NULL if the caller does not require them.
  * @nonblocking: whether waiting for disk IO or mmap_sem contention
  *
  * Returns number of pages pinned. This may be fewer than the number
@@ -1658,195 +1659,195 @@ static inline int stack_guard_page(struc
  * you need some special @gup_flags.
  */
 int __get_user_pages(struct task_struct *tsk, struct mm_struct *mm,
-		     unsigned long start, int nr_pages, unsigned int gup_flags,
-		     struct page **pages, struct vm_area_struct **vmas,
-		     int *nonblocking)
-{
-	int i;
-	unsigned long vm_flags;
-
-	if (nr_pages <= 0)
-		return 0;
-
-	VM_BUG_ON(!!pages != !!(gup_flags & FOLL_GET));
-
-	/* 
-	 * Require read or write permissions.
-	 * If FOLL_FORCE is set, we only require the "MAY" flags.
-	 */
-	vm_flags  = (gup_flags & FOLL_WRITE) ?
-			(VM_WRITE | VM_MAYWRITE) : (VM_READ | VM_MAYREAD);
-	vm_flags &= (gup_flags & FOLL_FORCE) ?
-			(VM_MAYREAD | VM_MAYWRITE) : (VM_READ | VM_WRITE);
-	i = 0;
-
-	do {
-		struct vm_area_struct *vma;
-
-		vma = find_extend_vma(mm, start);
-		if (!vma && in_gate_area(mm, start)) {
-			unsigned long pg = start & PAGE_MASK;
-			pgd_t *pgd;
-			pud_t *pud;
-			pmd_t *pmd;
-			pte_t *pte;
-
-			/* user gate pages are read-only */
-			if (gup_flags & FOLL_WRITE)
-				return i ? : -EFAULT;
-			if (pg > TASK_SIZE)
-				pgd = pgd_offset_k(pg);
-			else
-				pgd = pgd_offset_gate(mm, pg);
-			BUG_ON(pgd_none(*pgd));
-			pud = pud_offset(pgd, pg);
-			BUG_ON(pud_none(*pud));
-			pmd = pmd_offset(pud, pg);
-			if (pmd_none(*pmd))
-				return i ? : -EFAULT;
-			VM_BUG_ON(pmd_trans_huge(*pmd));
-			pte = pte_offset_map(pmd, pg);
-			if (pte_none(*pte)) {
-				pte_unmap(pte);
-				return i ? : -EFAULT;
-			}
-			vma = get_gate_vma(mm);
-			if (pages) {
-				struct page *page;
-
-				page = vm_normal_page(vma, start, *pte);
-				if (!page) {
-					if (!(gup_flags & FOLL_DUMP) &&
-					     is_zero_pfn(pte_pfn(*pte)))
-						page = pte_page(*pte);
-					else {
-						pte_unmap(pte);
-						return i ? : -EFAULT;
-					}
-				}
-				pages[i] = page;
-				get_page(page);
-			}
-			pte_unmap(pte);
-			goto next_page;
-		}
-
-		if (!vma ||
-		    (vma->vm_flags & (VM_IO | VM_PFNMAP)) ||
-		    !(vm_flags & vma->vm_flags))
-			return i ? : -EFAULT;
-
-		if (is_vm_hugetlb_page(vma)) {
-			i = follow_hugetlb_page(mm, vma, pages, vmas,
-					&start, &nr_pages, i, gup_flags);
-			continue;
-		}
-
-		do {
-			struct page *page;
-			unsigned int foll_flags = gup_flags;
-
-			/*
-			 * If we have a pending SIGKILL, don't keep faulting
-			 * pages and potentially allocating memory.
-			 */
-			if (unlikely(fatal_signal_pending(current)))
-				return i ? i : -ERESTARTSYS;
-
-			cond_resched();
-			while (!(page = follow_page(vma, start, foll_flags))) {
-				int ret;
-				unsigned int fault_flags = 0;
-
-				/* For mlock, just skip the stack guard page. */
-				if (foll_flags & FOLL_MLOCK) {
-					if (stack_guard_page(vma, start))
-						goto next_page;
-				}
-				if (foll_flags & FOLL_WRITE)
-					fault_flags |= FAULT_FLAG_WRITE;
-				if (nonblocking)
-					fault_flags |= FAULT_FLAG_ALLOW_RETRY;
-				if (foll_flags & FOLL_NOWAIT)
-					fault_flags |= (FAULT_FLAG_ALLOW_RETRY | FAULT_FLAG_RETRY_NOWAIT);
-
-				ret = handle_mm_fault(mm, vma, start,
-							fault_flags);
-
-				if (ret & VM_FAULT_ERROR) {
-					if (ret & VM_FAULT_OOM)
-						return i ? i : -ENOMEM;
-					if (ret & (VM_FAULT_HWPOISON |
-						   VM_FAULT_HWPOISON_LARGE)) {
-						if (i)
-							return i;
-						else if (gup_flags & FOLL_HWPOISON)
-							return -EHWPOISON;
-						else
-							return -EFAULT;
-					}
-					if (ret & VM_FAULT_SIGBUS)
-						return i ? i : -EFAULT;
-					BUG();
-				}
-
-				if (tsk) {
-					if (ret & VM_FAULT_MAJOR)
-						tsk->maj_flt++;
-					else
-						tsk->min_flt++;
-				}
-
-				if (ret & VM_FAULT_RETRY) {
-					if (nonblocking)
-						*nonblocking = 0;
-					return i;
-				}
-
-				/*
-				 * The VM_FAULT_WRITE bit tells us that
-				 * do_wp_page has broken COW when necessary,
-				 * even if maybe_mkwrite decided not to set
-				 * pte_write. We can thus safely do subsequent
-				 * page lookups as if they were reads. But only
-				 * do so when looping for pte_write is futile:
-				 * in some cases userspace may also be wanting
-				 * to write to the gotten user page, which a
-				 * read fault here might prevent (a readonly
-				 * page might get reCOWed by userspace write).
-				 */
-				if ((ret & VM_FAULT_WRITE) &&
-				    !(vma->vm_flags & VM_WRITE))
-					foll_flags &= ~FOLL_WRITE;
-
-				cond_resched();
-			}
-			if (IS_ERR(page))
-				return i ? i : PTR_ERR(page);
-			if (pages) {
-				pages[i] = page;
-
-				flush_anon_page(vma, page, start);
-				flush_dcache_page(page);
-			}
+             unsigned long start, int nr_pages, unsigned int gup_flags,
+             struct page **pages, struct vm_area_struct **vmas,
+             int *nonblocking)
+{
+    int i;
+    unsigned long vm_flags;
+
+    if (nr_pages <= 0)
+        return 0;
+
+    VM_BUG_ON(!!pages != !!(gup_flags & FOLL_GET));
+
+    /* 
+     * Require read or write permissions.
+     * If FOLL_FORCE is set, we only require the "MAY" flags.
+     */
+    vm_flags  = (gup_flags & FOLL_WRITE) ?
+            (VM_WRITE | VM_MAYWRITE) : (VM_READ | VM_MAYREAD);
+    vm_flags &= (gup_flags & FOLL_FORCE) ?
+            (VM_MAYREAD | VM_MAYWRITE) : (VM_READ | VM_WRITE);
+    i = 0;
+
+    do {
+        struct vm_area_struct *vma;
+
+        vma = find_extend_vma(mm, start);
+        if (!vma && in_gate_area(mm, start)) {
+            unsigned long pg = start & PAGE_MASK;
+            pgd_t *pgd;
+            pud_t *pud;
+            pmd_t *pmd;
+            pte_t *pte;
+
+            /* user gate pages are read-only */
+            if (gup_flags & FOLL_WRITE)
+                return i ? : -EFAULT;
+            if (pg > TASK_SIZE)
+                pgd = pgd_offset_k(pg);
+            else
+                pgd = pgd_offset_gate(mm, pg);
+            BUG_ON(pgd_none(*pgd));
+            pud = pud_offset(pgd, pg);
+            BUG_ON(pud_none(*pud));
+            pmd = pmd_offset(pud, pg);
+            if (pmd_none(*pmd))
+                return i ? : -EFAULT;
+            VM_BUG_ON(pmd_trans_huge(*pmd));
+            pte = pte_offset_map(pmd, pg);
+            if (pte_none(*pte)) {
+                pte_unmap(pte);
+                return i ? : -EFAULT;
+            }
+            vma = get_gate_vma(mm);
+            if (pages) {
+                struct page *page;
+
+                page = vm_normal_page(vma, start, *pte);
+                if (!page) {
+                    if (!(gup_flags & FOLL_DUMP) &&
+                         is_zero_pfn(pte_pfn(*pte)))
+                        page = pte_page(*pte);
+                    else {
+                        pte_unmap(pte);
+                        return i ? : -EFAULT;
+                    }
+                }
+                pages[i] = page;
+                get_page(page);
+            }
+            pte_unmap(pte);
+            goto next_page;
+        }
+
+        if (!vma ||
+            (vma->vm_flags & (VM_IO | VM_PFNMAP)) ||
+            !(vm_flags & vma->vm_flags))
+            return i ? : -EFAULT;
+
+        if (is_vm_hugetlb_page(vma)) {
+            i = follow_hugetlb_page(mm, vma, pages, vmas,
+                    &start, &nr_pages, i, gup_flags);
+            continue;
+        }
+
+        do {
+            struct page *page;
+            unsigned int foll_flags = gup_flags;
+
+            /*
+             * If we have a pending SIGKILL, don't keep faulting
+             * pages and potentially allocating memory.
+             */
+            if (unlikely(fatal_signal_pending(current)))
+                return i ? i : -ERESTARTSYS;
+
+            cond_resched();
+            while (!(page = follow_page(vma, start, foll_flags))) {
+                int ret;
+                unsigned int fault_flags = 0;
+
+                /* For mlock, just skip the stack guard page. */
+                if (foll_flags & FOLL_MLOCK) {
+                    if (stack_guard_page(vma, start))
+                        goto next_page;
+                }
+                if (foll_flags & FOLL_WRITE)
+                    fault_flags |= FAULT_FLAG_WRITE;
+                if (nonblocking)
+                    fault_flags |= FAULT_FLAG_ALLOW_RETRY;
+                if (foll_flags & FOLL_NOWAIT)
+                    fault_flags |= (FAULT_FLAG_ALLOW_RETRY | FAULT_FLAG_RETRY_NOWAIT);
+
+                ret = handle_mm_fault(mm, vma, start,
+                            fault_flags);
+
+                if (ret & VM_FAULT_ERROR) {
+                    if (ret & VM_FAULT_OOM)
+                        return i ? i : -ENOMEM;
+                    if (ret & (VM_FAULT_HWPOISON |
+                           VM_FAULT_HWPOISON_LARGE)) {
+                        if (i)
+                            return i;
+                        else if (gup_flags & FOLL_HWPOISON)
+                            return -EHWPOISON;
+                        else
+                            return -EFAULT;
+                    }
+                    if (ret & VM_FAULT_SIGBUS)
+                        return i ? i : -EFAULT;
+                    BUG();
+                }
+
+                if (tsk) {
+                    if (ret & VM_FAULT_MAJOR)
+                        tsk->maj_flt++;
+                    else
+                        tsk->min_flt++;
+                }
+
+                if (ret & VM_FAULT_RETRY) {
+                    if (nonblocking)
+                        *nonblocking = 0;
+                    return i;
+                }
+
+                /*
+                 * The VM_FAULT_WRITE bit tells us that
+                 * do_wp_page has broken COW when necessary,
+                 * even if maybe_mkwrite decided not to set
+                 * pte_write. We can thus safely do subsequent
+                 * page lookups as if they were reads. But only
+                 * do so when looping for pte_write is futile:
+                 * in some cases userspace may also be wanting
+                 * to write to the gotten user page, which a
+                 * read fault here might prevent (a readonly
+                 * page might get reCOWed by userspace write).
+                 */
+                if ((ret & VM_FAULT_WRITE) &&
+                    !(vma->vm_flags & VM_WRITE))
+                    foll_flags &= ~FOLL_WRITE;
+
+                cond_resched();
+            }
+            if (IS_ERR(page))
+                return i ? i : PTR_ERR(page);
+            if (pages) {
+                pages[i] = page;
+
+                flush_anon_page(vma, page, start);
+                flush_dcache_page(page);
+            }
 next_page:
-			if (vmas)
-				vmas[i] = vma;
-			i++;
-			start += PAGE_SIZE;
-			nr_pages--;
-		} while (nr_pages && start < vma->vm_end);
-	} while (nr_pages);
-	return i;
+            if (vmas)
+                vmas[i] = vma;
+            i++;
+            start += PAGE_SIZE;
+            nr_pages--;
+        } while (nr_pages && start < vma->vm_end);
+    } while (nr_pages);
+    return i;
 }
 EXPORT_SYMBOL(__get_user_pages);
 
 /*
  * fixup_user_fault() - manually resolve a user page fault
- * @tsk:	the task_struct to use for page fault accounting, or
- *		NULL if faults are not to be recorded.
- * @mm:		mm_struct of target mm
- * @address:	user address
+ * @tsk:    the task_struct to use for page fault accounting, or
+ *        NULL if faults are not to be recorded.
+ * @mm:        mm_struct of target mm
+ * @address:    user address
  * @fault_flags:flags to pass down to handle_mm_fault()
  *
  * This is meant to be called in the specific scenario where for locking reasons
@@ -1869,55 +1870,55 @@ EXPORT_SYMBOL(__get_user_pages);
  * This should be called with the mm_sem held for read.
  */
 int fixup_user_fault(struct task_struct *tsk, struct mm_struct *mm,
-		     unsigned long address, unsigned int fault_flags)
+             unsigned long address, unsigned int fault_flags)
 {
-	struct vm_area_struct *vma;
-	vm_flags_t vm_flags;
-	int ret;
-
-	vma = find_extend_vma(mm, address);
-	if (!vma || address < vma->vm_start)
-		return -EFAULT;
-
-	vm_flags = (fault_flags & FAULT_FLAG_WRITE) ? VM_WRITE : VM_READ;
-	if (!(vm_flags & vma->vm_flags))
-		return -EFAULT;
-
-	ret = handle_mm_fault(mm, vma, address, fault_flags);
-	if (ret & VM_FAULT_ERROR) {
-		if (ret & VM_FAULT_OOM)
-			return -ENOMEM;
-		if (ret & (VM_FAULT_HWPOISON | VM_FAULT_HWPOISON_LARGE))
-			return -EHWPOISON;
-		if (ret & VM_FAULT_SIGBUS)
-			return -EFAULT;
-		BUG();
-	}
-	if (tsk) {
-		if (ret & VM_FAULT_MAJOR)
-			tsk->maj_flt++;
-		else
-			tsk->min_flt++;
-	}
-	return 0;
+    struct vm_area_struct *vma;
+    vm_flags_t vm_flags;
+    int ret;
+
+    vma = find_extend_vma(mm, address);
+    if (!vma || address < vma->vm_start)
+        return -EFAULT;
+
+    vm_flags = (fault_flags & FAULT_FLAG_WRITE) ? VM_WRITE : VM_READ;
+    if (!(vm_flags & vma->vm_flags))
+        return -EFAULT;
+
+    ret = handle_mm_fault(mm, vma, address, fault_flags);
+    if (ret & VM_FAULT_ERROR) {
+        if (ret & VM_FAULT_OOM)
+            return -ENOMEM;
+        if (ret & (VM_FAULT_HWPOISON | VM_FAULT_HWPOISON_LARGE))
+            return -EHWPOISON;
+        if (ret & VM_FAULT_SIGBUS)
+            return -EFAULT;
+        BUG();
+    }
+    if (tsk) {
+        if (ret & VM_FAULT_MAJOR)
+            tsk->maj_flt++;
+        else
+            tsk->min_flt++;
+    }
+    return 0;
 }
 
 /*
  * get_user_pages() - pin user pages in memory
- * @tsk:	the task_struct to use for page fault accounting, or
- *		NULL if faults are not to be recorded.
- * @mm:		mm_struct of target mm
- * @start:	starting user address
- * @nr_pages:	number of pages from start to pin
- * @write:	whether pages will be written to by the caller
- * @force:	whether to force write access even if user mapping is
- *		readonly. This will result in the page being COWed even
- *		in MAP_SHARED mappings. You do not want this.
- * @pages:	array that receives pointers to the pages pinned.
- *		Should be at least nr_pages long. Or NULL, if caller
- *		only intends to ensure the pages are faulted in.
- * @vmas:	array of pointers to vmas corresponding to each page.
- *		Or NULL if the caller does not require them.
+ * @tsk:    the task_struct to use for page fault accounting, or
+ *        NULL if faults are not to be recorded.
+ * @mm:        mm_struct of target mm
+ * @start:    starting user address
+ * @nr_pages:    number of pages from start to pin
+ * @write:    whether pages will be written to by the caller
+ * @force:    whether to force write access even if user mapping is
+ *        readonly. This will result in the page being COWed even
+ *        in MAP_SHARED mappings. You do not want this.
+ * @pages:    array that receives pointers to the pages pinned.
+ *        Should be at least nr_pages long. Or NULL, if caller
+ *        only intends to ensure the pages are faulted in.
+ * @vmas:    array of pointers to vmas corresponding to each page.
+ *        Or NULL if the caller does not require them.
  *
  * Returns number of pages pinned. This may be fewer than the number
  * requested. If nr_pages is 0 or negative, returns 0. If no pages
@@ -1954,20 +1955,20 @@ int fixup_user_fault(struct task_struct 
  * See also get_user_pages_fast, for performance critical applications.
  */
 int get_user_pages(struct task_struct *tsk, struct mm_struct *mm,
-		unsigned long start, int nr_pages, int write, int force,
-		struct page **pages, struct vm_area_struct **vmas)
+        unsigned long start, int nr_pages, int write, int force,
+        struct page **pages, struct vm_area_struct **vmas)
 {
-	int flags = FOLL_TOUCH;
+    int flags = FOLL_TOUCH;
 
-	if (pages)
-		flags |= FOLL_GET;
-	if (write)
-		flags |= FOLL_WRITE;
-	if (force)
-		flags |= FOLL_FORCE;
+    if (pages)
+        flags |= FOLL_GET;
+    if (write)
+        flags |= FOLL_WRITE;
+    if (force)
+        flags |= FOLL_FORCE;
 
-	return __get_user_pages(tsk, mm, start, nr_pages, flags, pages, vmas,
-				NULL);
+    return __get_user_pages(tsk, mm, start, nr_pages, flags, pages, vmas,
+                NULL);
 }
 EXPORT_SYMBOL(get_user_pages);
 
@@ -1988,31 +1989,31 @@ EXPORT_SYMBOL(get_user_pages);
 #ifdef CONFIG_ELF_CORE
 struct page *get_dump_page(unsigned long addr)
 {
-	struct vm_area_struct *vma;
-	struct page *page;
+    struct vm_area_struct *vma;
+    struct page *page;
 
-	if (__get_user_pages(current, current->mm, addr, 1,
-			     FOLL_FORCE | FOLL_DUMP | FOLL_GET, &page, &vma,
-			     NULL) < 1)
-		return NULL;
-	flush_cache_page(vma, addr, page_to_pfn(page));
-	return page;
+    if (__get_user_pages(current, current->mm, addr, 1,
+                 FOLL_FORCE | FOLL_DUMP | FOLL_GET, &page, &vma,
+                 NULL) < 1)
+        return NULL;
+    flush_cache_page(vma, addr, page_to_pfn(page));
+    return page;
 }
 #endif /* CONFIG_ELF_CORE */
 
 pte_t *__get_locked_pte(struct mm_struct *mm, unsigned long addr,
-			spinlock_t **ptl)
+            spinlock_t **ptl)
 {
-	pgd_t * pgd = pgd_offset(mm, addr);
-	pud_t * pud = pud_alloc(mm, pgd, addr);
-	if (pud) {
-		pmd_t * pmd = pmd_alloc(mm, pud, addr);
-		if (pmd) {
-			VM_BUG_ON(pmd_trans_huge(*pmd));
-			return pte_alloc_map_lock(mm, pmd, addr, ptl);
-		}
-	}
-	return NULL;
+    pgd_t * pgd = pgd_offset(mm, addr);
+    pud_t * pud = pud_alloc(mm, pgd, addr);
+    if (pud) {
+        pmd_t * pmd = pmd_alloc(mm, pud, addr);
+        if (pmd) {
+            VM_BUG_ON(pmd_trans_huge(*pmd));
+            return pte_alloc_map_lock(mm, pmd, addr, ptl);
+        }
+    }
+    return NULL;
 }
 
 /*
@@ -2023,38 +2024,38 @@ pte_t *__get_locked_pte(struct mm_struct
  * pages reserved for the old functions anyway.
  */
 static int insert_page(struct vm_area_struct *vma, unsigned long addr,
-			struct page *page, pgprot_t prot)
+            struct page *page, pgprot_t prot)
 {
-	struct mm_struct *mm = vma->vm_mm;
-	int retval;
-	pte_t *pte;
-	spinlock_t *ptl;
-
-	retval = -EINVAL;
-	if (PageAnon(page))
-		goto out;
-	retval = -ENOMEM;
-	flush_dcache_page(page);
-	pte = get_locked_pte(mm, addr, &ptl);
-	if (!pte)
-		goto out;
-	retval = -EBUSY;
-	if (!pte_none(*pte))
-		goto out_unlock;
-
-	/* Ok, finally just insert the thing.. */
-	get_page(page);
-	inc_mm_counter_fast(mm, MM_FILEPAGES);
-	page_add_file_rmap(page);
-	set_pte_at(mm, addr, pte, mk_pte(page, prot));
-
-	retval = 0;
-	pte_unmap_unlock(pte, ptl);
-	return retval;
+    struct mm_struct *mm = vma->vm_mm;
+    int retval;
+    pte_t *pte;
+    spinlock_t *ptl;
+
+    retval = -EINVAL;
+    if (PageAnon(page))
+        goto out;
+    retval = -ENOMEM;
+    flush_dcache_page(page);
+    pte = get_locked_pte(mm, addr, &ptl);
+    if (!pte)
+        goto out;
+    retval = -EBUSY;
+    if (!pte_none(*pte))
+        goto out_unlock;
+
+    /* Ok, finally just insert the thing.. */
+    get_page(page);
+    inc_mm_counter_fast(mm, MM_FILEPAGES);
+    page_add_file_rmap(page);
+    set_pte_at(mm, addr, pte, mk_pte(page, prot));
+
+    retval = 0;
+    pte_unmap_unlock(pte, ptl);
+    return retval;
 out_unlock:
-	pte_unmap_unlock(pte, ptl);
+    pte_unmap_unlock(pte, ptl);
 out:
-	return retval;
+    return retval;
 }
 
 /**
@@ -2080,43 +2081,43 @@ out:
  * The page does not need to be reserved.
  */
 int vm_insert_page(struct vm_area_struct *vma, unsigned long addr,
-			struct page *page)
+            struct page *page)
 {
-	if (addr < vma->vm_start || addr >= vma->vm_end)
-		return -EFAULT;
-	if (!page_count(page))
-		return -EINVAL;
-	vma->vm_flags |= VM_INSERTPAGE;
-	return insert_page(vma, addr, page, vma->vm_page_prot);
+    if (addr < vma->vm_start || addr >= vma->vm_end)
+        return -EFAULT;
+    if (!page_count(page))
+        return -EINVAL;
+    vma->vm_flags |= VM_INSERTPAGE;
+    return insert_page(vma, addr, page, vma->vm_page_prot);
 }
 EXPORT_SYMBOL(vm_insert_page);
 
 static int insert_pfn(struct vm_area_struct *vma, unsigned long addr,
-			unsigned long pfn, pgprot_t prot)
+            unsigned long pfn, pgprot_t prot)
 {
-	struct mm_struct *mm = vma->vm_mm;
-	int retval;
-	pte_t *pte, entry;
-	spinlock_t *ptl;
-
-	retval = -ENOMEM;
-	pte = get_locked_pte(mm, addr, &ptl);
-	if (!pte)
-		goto out;
-	retval = -EBUSY;
-	if (!pte_none(*pte))
-		goto out_unlock;
-
-	/* Ok, finally just insert the thing.. */
-	entry = pte_mkspecial(pfn_pte(pfn, prot));
-	set_pte_at(mm, addr, pte, entry);
-	update_mmu_cache(vma, addr, pte); /* XXX: why not for insert_page? */
+    struct mm_struct *mm = vma->vm_mm;
+    int retval;
+    pte_t *pte, entry;
+    spinlock_t *ptl;
+
+    retval = -ENOMEM;
+    pte = get_locked_pte(mm, addr, &ptl);
+    if (!pte)
+        goto out;
+    retval = -EBUSY;
+    if (!pte_none(*pte))
+        goto out_unlock;
+
+    /* Ok, finally just insert the thing.. */
+    entry = pte_mkspecial(pfn_pte(pfn, prot));
+    set_pte_at(mm, addr, pte, entry);
+    update_mmu_cache(vma, addr, pte); /* XXX: why not for insert_page? */
 
-	retval = 0;
+    retval = 0;
 out_unlock:
-	pte_unmap_unlock(pte, ptl);
+    pte_unmap_unlock(pte, ptl);
 out:
-	return retval;
+    return retval;
 }
 
 /**
@@ -2137,58 +2138,58 @@ out:
  * do not need to flush old virtual caches or the TLB.
  */
 int vm_insert_pfn(struct vm_area_struct *vma, unsigned long addr,
-			unsigned long pfn)
+            unsigned long pfn)
 {
-	int ret;
-	pgprot_t pgprot = vma->vm_page_prot;
-	/*
-	 * Technically, architectures with pte_special can avoid all these
-	 * restrictions (same for remap_pfn_range).  However we would like
-	 * consistency in testing and feature parity among all, so we should
-	 * try to keep these invariants in place for everybody.
-	 */
-	BUG_ON(!(vma->vm_flags & (VM_PFNMAP|VM_MIXEDMAP)));
-	BUG_ON((vma->vm_flags & (VM_PFNMAP|VM_MIXEDMAP)) ==
-						(VM_PFNMAP|VM_MIXEDMAP));
-	BUG_ON((vma->vm_flags & VM_PFNMAP) && is_cow_mapping(vma->vm_flags));
-	BUG_ON((vma->vm_flags & VM_MIXEDMAP) && pfn_valid(pfn));
-
-	if (addr < vma->vm_start || addr >= vma->vm_end)
-		return -EFAULT;
-	if (track_pfn_vma_new(vma, &pgprot, pfn, PAGE_SIZE))
-		return -EINVAL;
+    int ret;
+    pgprot_t pgprot = vma->vm_page_prot;
+    /*
+     * Technically, architectures with pte_special can avoid all these
+     * restrictions (same for remap_pfn_range).  However we would like
+     * consistency in testing and feature parity among all, so we should
+     * try to keep these invariants in place for everybody.
+     */
+    BUG_ON(!(vma->vm_flags & (VM_PFNMAP|VM_MIXEDMAP)));
+    BUG_ON((vma->vm_flags & (VM_PFNMAP|VM_MIXEDMAP)) ==
+                        (VM_PFNMAP|VM_MIXEDMAP));
+    BUG_ON((vma->vm_flags & VM_PFNMAP) && is_cow_mapping(vma->vm_flags));
+    BUG_ON((vma->vm_flags & VM_MIXEDMAP) && pfn_valid(pfn));
+
+    if (addr < vma->vm_start || addr >= vma->vm_end)
+        return -EFAULT;
+    if (track_pfn_vma_new(vma, &pgprot, pfn, PAGE_SIZE))
+        return -EINVAL;
 
-	ret = insert_pfn(vma, addr, pfn, pgprot);
+    ret = insert_pfn(vma, addr, pfn, pgprot);
 
-	if (ret)
-		untrack_pfn_vma(vma, pfn, PAGE_SIZE);
+    if (ret)
+        untrack_pfn_vma(vma, pfn, PAGE_SIZE);
 
-	return ret;
+    return ret;
 }
 EXPORT_SYMBOL(vm_insert_pfn);
 
 int vm_insert_mixed(struct vm_area_struct *vma, unsigned long addr,
-			unsigned long pfn)
+            unsigned long pfn)
 {
-	BUG_ON(!(vma->vm_flags & VM_MIXEDMAP));
+    BUG_ON(!(vma->vm_flags & VM_MIXEDMAP));
 
-	if (addr < vma->vm_start || addr >= vma->vm_end)
-		return -EFAULT;
+    if (addr < vma->vm_start || addr >= vma->vm_end)
+        return -EFAULT;
 
-	/*
-	 * If we don't have pte special, then we have to use the pfn_valid()
-	 * based VM_MIXEDMAP scheme (see vm_normal_page), and thus we *must*
-	 * refcount the page if pfn_valid is true (hence insert_page rather
-	 * than insert_pfn).  If a zero_pfn were inserted into a VM_MIXEDMAP
-	 * without pte special, it would there be refcounted as a normal page.
-	 */
-	if (!HAVE_PTE_SPECIAL && pfn_valid(pfn)) {
-		struct page *page;
-
-		page = pfn_to_page(pfn);
-		return insert_page(vma, addr, page, vma->vm_page_prot);
-	}
-	return insert_pfn(vma, addr, pfn, vma->vm_page_prot);
+    /*
+     * If we don't have pte special, then we have to use the pfn_valid()
+     * based VM_MIXEDMAP scheme (see vm_normal_page), and thus we *must*
+     * refcount the page if pfn_valid is true (hence insert_page rather
+     * than insert_pfn).  If a zero_pfn were inserted into a VM_MIXEDMAP
+     * without pte special, it would there be refcounted as a normal page.
+     */
+    if (!HAVE_PTE_SPECIAL && pfn_valid(pfn)) {
+        struct page *page;
+
+        page = pfn_to_page(pfn);
+        return insert_page(vma, addr, page, vma->vm_page_prot);
+    }
+    return insert_pfn(vma, addr, pfn, vma->vm_page_prot);
 }
 EXPORT_SYMBOL(vm_insert_mixed);
 
@@ -2198,65 +2199,65 @@ EXPORT_SYMBOL(vm_insert_mixed);
  * in null mappings (currently treated as "copy-on-access")
  */
 static int remap_pte_range(struct mm_struct *mm, pmd_t *pmd,
-			unsigned long addr, unsigned long end,
-			unsigned long pfn, pgprot_t prot)
+            unsigned long addr, unsigned long end,
+            unsigned long pfn, pgprot_t prot)
 {
-	pte_t *pte;
-	spinlock_t *ptl;
+    pte_t *pte;
+    spinlock_t *ptl;
 
-	pte = pte_alloc_map_lock(mm, pmd, addr, &ptl);
-	if (!pte)
-		return -ENOMEM;
-	arch_enter_lazy_mmu_mode();
-	do {
-		BUG_ON(!pte_none(*pte));
-		set_pte_at(mm, addr, pte, pte_mkspecial(pfn_pte(pfn, prot)));
-		pfn++;
-	} while (pte++, addr += PAGE_SIZE, addr != end);
-	arch_leave_lazy_mmu_mode();
-	pte_unmap_unlock(pte - 1, ptl);
-	return 0;
+    pte = pte_alloc_map_lock(mm, pmd, addr, &ptl);
+    if (!pte)
+        return -ENOMEM;
+    arch_enter_lazy_mmu_mode();
+    do {
+        BUG_ON(!pte_none(*pte));
+        set_pte_at(mm, addr, pte, pte_mkspecial(pfn_pte(pfn, prot)));
+        pfn++;
+    } while (pte++, addr += PAGE_SIZE, addr != end);
+    arch_leave_lazy_mmu_mode();
+    pte_unmap_unlock(pte - 1, ptl);
+    return 0;
 }
 
 static inline int remap_pmd_range(struct mm_struct *mm, pud_t *pud,
-			unsigned long addr, unsigned long end,
-			unsigned long pfn, pgprot_t prot)
+            unsigned long addr, unsigned long end,
+            unsigned long pfn, pgprot_t prot)
 {
-	pmd_t *pmd;
-	unsigned long next;
+    pmd_t *pmd;
+    unsigned long next;
 
-	pfn -= addr >> PAGE_SHIFT;
-	pmd = pmd_alloc(mm, pud, addr);
-	if (!pmd)
-		return -ENOMEM;
-	VM_BUG_ON(pmd_trans_huge(*pmd));
-	do {
-		next = pmd_addr_end(addr, end);
-		if (remap_pte_range(mm, pmd, addr, next,
-				pfn + (addr >> PAGE_SHIFT), prot))
-			return -ENOMEM;
-	} while (pmd++, addr = next, addr != end);
-	return 0;
+    pfn -= addr >> PAGE_SHIFT;
+    pmd = pmd_alloc(mm, pud, addr);
+    if (!pmd)
+        return -ENOMEM;
+    VM_BUG_ON(pmd_trans_huge(*pmd));
+    do {
+        next = pmd_addr_end(addr, end);
+        if (remap_pte_range(mm, pmd, addr, next,
+                pfn + (addr >> PAGE_SHIFT), prot))
+            return -ENOMEM;
+    } while (pmd++, addr = next, addr != end);
+    return 0;
 }
 
 static inline int remap_pud_range(struct mm_struct *mm, pgd_t *pgd,
-			unsigned long addr, unsigned long end,
-			unsigned long pfn, pgprot_t prot)
+            unsigned long addr, unsigned long end,
+            unsigned long pfn, pgprot_t prot)
 {
-	pud_t *pud;
-	unsigned long next;
+    pud_t *pud;
+    unsigned long next;
 
-	pfn -= addr >> PAGE_SHIFT;
-	pud = pud_alloc(mm, pgd, addr);
-	if (!pud)
-		return -ENOMEM;
-	do {
-		next = pud_addr_end(addr, end);
-		if (remap_pmd_range(mm, pud, addr, next,
-				pfn + (addr >> PAGE_SHIFT), prot))
-			return -ENOMEM;
-	} while (pud++, addr = next, addr != end);
-	return 0;
+    pfn -= addr >> PAGE_SHIFT;
+    pud = pud_alloc(mm, pgd, addr);
+    if (!pud)
+        return -ENOMEM;
+    do {
+        next = pud_addr_end(addr, end);
+        if (remap_pmd_range(mm, pud, addr, next,
+                pfn + (addr >> PAGE_SHIFT), prot))
+            return -ENOMEM;
+    } while (pud++, addr = next, addr != end);
+    return 0;
 }
 
 /**
@@ -2270,67 +2271,67 @@ static inline int remap_pud_range(struct
  *  Note: this is only safe if the mm semaphore is held when called.
  */
 int remap_pfn_range(struct vm_area_struct *vma, unsigned long addr,
-		    unsigned long pfn, unsigned long size, pgprot_t prot)
+            unsigned long pfn, unsigned long size, pgprot_t prot)
 {
-	pgd_t *pgd;
-	unsigned long next;
-	unsigned long end = addr + PAGE_ALIGN(size);
-	struct mm_struct *mm = vma->vm_mm;
-	int err;
-
-	/*
-	 * Physically remapped pages are special. Tell the
-	 * rest of the world about it:
-	 *   VM_IO tells people not to look at these pages
-	 *	(accesses can have side effects).
-	 *   VM_RESERVED is specified all over the place, because
-	 *	in 2.4 it kept swapout's vma scan off this vma; but
-	 *	in 2.6 the LRU scan won't even find its pages, so this
-	 *	flag means no more than count its pages in reserved_vm,
-	 * 	and omit it from core dump, even when VM_IO turned off.
-	 *   VM_PFNMAP tells the core MM that the base pages are just
-	 *	raw PFN mappings, and do not have a "struct page" associated
-	 *	with them.
-	 *
-	 * There's a horrible special case to handle copy-on-write
-	 * behaviour that some programs depend on. We mark the "original"
-	 * un-COW'ed pages by matching them up with "vma->vm_pgoff".
-	 */
-	if (addr == vma->vm_start && end == vma->vm_end) {
-		vma->vm_pgoff = pfn;
-		vma->vm_flags |= VM_PFN_AT_MMAP;
-	} else if (is_cow_mapping(vma->vm_flags))
-		return -EINVAL;
-
-	vma->vm_flags |= VM_IO | VM_RESERVED | VM_PFNMAP;
-
-	err = track_pfn_vma_new(vma, &prot, pfn, PAGE_ALIGN(size));
-	if (err) {
-		/*
-		 * To indicate that track_pfn related cleanup is not
-		 * needed from higher level routine calling unmap_vmas
-		 */
-		vma->vm_flags &= ~(VM_IO | VM_RESERVED | VM_PFNMAP);
-		vma->vm_flags &= ~VM_PFN_AT_MMAP;
-		return -EINVAL;
-	}
+    pgd_t *pgd;
+    unsigned long next;
+    unsigned long end = addr + PAGE_ALIGN(size);
+    struct mm_struct *mm = vma->vm_mm;
+    int err;
+
+    /*
+     * Physically remapped pages are special. Tell the
+     * rest of the world about it:
+     *   VM_IO tells people not to look at these pages
+     *    (accesses can have side effects).
+     *   VM_RESERVED is specified all over the place, because
+     *    in 2.4 it kept swapout's vma scan off this vma; but
+     *    in 2.6 the LRU scan won't even find its pages, so this
+     *    flag means no more than count its pages in reserved_vm,
+     *     and omit it from core dump, even when VM_IO turned off.
+     *   VM_PFNMAP tells the core MM that the base pages are just
+     *    raw PFN mappings, and do not have a "struct page" associated
+     *    with them.
+     *
+     * There's a horrible special case to handle copy-on-write
+     * behaviour that some programs depend on. We mark the "original"
+     * un-COW'ed pages by matching them up with "vma->vm_pgoff".
+     */
+    if (addr == vma->vm_start && end == vma->vm_end) {
+        vma->vm_pgoff = pfn;
+        vma->vm_flags |= VM_PFN_AT_MMAP;
+    } else if (is_cow_mapping(vma->vm_flags))
+        return -EINVAL;
+
+    vma->vm_flags |= VM_IO | VM_RESERVED | VM_PFNMAP;
+
+    err = track_pfn_vma_new(vma, &prot, pfn, PAGE_ALIGN(size));
+    if (err) {
+        /*
+         * To indicate that track_pfn related cleanup is not
+         * needed from higher level routine calling unmap_vmas
+         */
+        vma->vm_flags &= ~(VM_IO | VM_RESERVED | VM_PFNMAP);
+        vma->vm_flags &= ~VM_PFN_AT_MMAP;
+        return -EINVAL;
+    }
+
+    BUG_ON(addr >= end);
+    pfn -= addr >> PAGE_SHIFT;
+    pgd = pgd_offset(mm, addr);
+    flush_cache_range(vma, addr, end);
+    do {
+        next = pgd_addr_end(addr, end);
+        err = remap_pud_range(mm, pgd, addr, next,
+                pfn + (addr >> PAGE_SHIFT), prot);
+        if (err)
+            break;
+    } while (pgd++, addr = next, addr != end);
 
-	BUG_ON(addr >= end);
-	pfn -= addr >> PAGE_SHIFT;
-	pgd = pgd_offset(mm, addr);
-	flush_cache_range(vma, addr, end);
-	do {
-		next = pgd_addr_end(addr, end);
-		err = remap_pud_range(mm, pgd, addr, next,
-				pfn + (addr >> PAGE_SHIFT), prot);
-		if (err)
-			break;
-	} while (pgd++, addr = next, addr != end);
+    if (err)
+        untrack_pfn_vma(vma, pfn, PAGE_ALIGN(size));
 
-	if (err)
-		untrack_pfn_vma(vma, pfn, PAGE_ALIGN(size));
-
-	return err;
+    return err;
 }
 EXPORT_SYMBOL(remap_pfn_range);
 
@@ -2349,112 +2350,112 @@ EXPORT_SYMBOL(remap_pfn_range);
  */
 int vm_iomap_memory(struct vm_area_struct *vma, phys_addr_t start, unsigned long len)
 {
-	unsigned long vm_len, pfn, pages;
+    unsigned long vm_len, pfn, pages;
 
-	/* Check that the physical memory area passed in looks valid */
-	if (start + len < start)
-		return -EINVAL;
-	/*
-	 * You *really* shouldn't map things that aren't page-aligned,
-	 * but we've historically allowed it because IO memory might
-	 * just have smaller alignment.
-	 */
-	len += start & ~PAGE_MASK;
-	pfn = start >> PAGE_SHIFT;
-	pages = (len + ~PAGE_MASK) >> PAGE_SHIFT;
-	if (pfn + pages < pfn)
-		return -EINVAL;
-
-	/* We start the mapping 'vm_pgoff' pages into the area */
-	if (vma->vm_pgoff > pages)
-		return -EINVAL;
-	pfn += vma->vm_pgoff;
-	pages -= vma->vm_pgoff;
-
-	/* Can we fit all of the mapping? */
-	vm_len = vma->vm_end - vma->vm_start;
-	if (vm_len >> PAGE_SHIFT > pages)
-		return -EINVAL;
+    /* Check that the physical memory area passed in looks valid */
+    if (start + len < start)
+        return -EINVAL;
+    /*
+     * You *really* shouldn't map things that aren't page-aligned,
+     * but we've historically allowed it because IO memory might
+     * just have smaller alignment.
+     */
+    len += start & ~PAGE_MASK;
+    pfn = start >> PAGE_SHIFT;
+    pages = (len + ~PAGE_MASK) >> PAGE_SHIFT;
+    if (pfn + pages < pfn)
+        return -EINVAL;
+
+    /* We start the mapping 'vm_pgoff' pages into the area */
+    if (vma->vm_pgoff > pages)
+        return -EINVAL;
+    pfn += vma->vm_pgoff;
+    pages -= vma->vm_pgoff;
+
+    /* Can we fit all of the mapping? */
+    vm_len = vma->vm_end - vma->vm_start;
+    if (vm_len >> PAGE_SHIFT > pages)
+        return -EINVAL;
 
-	/* Ok, let it rip */
-	return io_remap_pfn_range(vma, vma->vm_start, pfn, vm_len, vma->vm_page_prot);
+    /* Ok, let it rip */
+    return io_remap_pfn_range(vma, vma->vm_start, pfn, vm_len, vma->vm_page_prot);
 }
 EXPORT_SYMBOL(vm_iomap_memory);
 
 static int apply_to_pte_range(struct mm_struct *mm, pmd_t *pmd,
-				     unsigned long addr, unsigned long end,
-				     pte_fn_t fn, void *data)
+                     unsigned long addr, unsigned long end,
+                     pte_fn_t fn, void *data)
 {
-	pte_t *pte;
-	int err;
-	pgtable_t token;
-	spinlock_t *uninitialized_var(ptl);
+    pte_t *pte;
+    int err;
+    pgtable_t token;
+    spinlock_t *uninitialized_var(ptl);
 
-	pte = (mm == &init_mm) ?
-		pte_alloc_kernel(pmd, addr) :
-		pte_alloc_map_lock(mm, pmd, addr, &ptl);
-	if (!pte)
-		return -ENOMEM;
+    pte = (mm == &init_mm) ?
+        pte_alloc_kernel(pmd, addr) :
+        pte_alloc_map_lock(mm, pmd, addr, &ptl);
+    if (!pte)
+        return -ENOMEM;
 
-	BUG_ON(pmd_huge(*pmd));
+    BUG_ON(pmd_huge(*pmd));
 
-	arch_enter_lazy_mmu_mode();
+    arch_enter_lazy_mmu_mode();
 
-	token = pmd_pgtable(*pmd);
+    token = pmd_pgtable(*pmd);
 
-	do {
-		err = fn(pte++, token, addr, data);
-		if (err)
-			break;
-	} while (addr += PAGE_SIZE, addr != end);
+    do {
+        err = fn(pte++, token, addr, data);
+        if (err)
+            break;
+    } while (addr += PAGE_SIZE, addr != end);
 
-	arch_leave_lazy_mmu_mode();
+    arch_leave_lazy_mmu_mode();
 
-	if (mm != &init_mm)
-		pte_unmap_unlock(pte-1, ptl);
-	return err;
+    if (mm != &init_mm)
+        pte_unmap_unlock(pte-1, ptl);
+    return err;
 }
 
 static int apply_to_pmd_range(struct mm_struct *mm, pud_t *pud,
-				     unsigned long addr, unsigned long end,
-				     pte_fn_t fn, void *data)
+                     unsigned long addr, unsigned long end,
+                     pte_fn_t fn, void *data)
 {
-	pmd_t *pmd;
-	unsigned long next;
-	int err;
-
-	BUG_ON(pud_huge(*pud));
-
-	pmd = pmd_alloc(mm, pud, addr);
-	if (!pmd)
-		return -ENOMEM;
-	do {
-		next = pmd_addr_end(addr, end);
-		err = apply_to_pte_range(mm, pmd, addr, next, fn, data);
-		if (err)
-			break;
-	} while (pmd++, addr = next, addr != end);
-	return err;
+    pmd_t *pmd;
+    unsigned long next;
+    int err;
+
+    BUG_ON(pud_huge(*pud));
+
+    pmd = pmd_alloc(mm, pud, addr);
+    if (!pmd)
+        return -ENOMEM;
+    do {
+        next = pmd_addr_end(addr, end);
+        err = apply_to_pte_range(mm, pmd, addr, next, fn, data);
+        if (err)
+            break;
+    } while (pmd++, addr = next, addr != end);
+    return err;
 }
 
 static int apply_to_pud_range(struct mm_struct *mm, pgd_t *pgd,
-				     unsigned long addr, unsigned long end,
-				     pte_fn_t fn, void *data)
+                     unsigned long addr, unsigned long end,
+                     pte_fn_t fn, void *data)
 {
-	pud_t *pud;
-	unsigned long next;
-	int err;
-
-	pud = pud_alloc(mm, pgd, addr);
-	if (!pud)
-		return -ENOMEM;
-	do {
-		next = pud_addr_end(addr, end);
-		err = apply_to_pmd_range(mm, pud, addr, next, fn, data);
-		if (err)
-			break;
-	} while (pud++, addr = next, addr != end);
-	return err;
+    pud_t *pud;
+    unsigned long next;
+    int err;
+
+    pud = pud_alloc(mm, pgd, addr);
+    if (!pud)
+        return -ENOMEM;
+    do {
+        next = pud_addr_end(addr, end);
+        err = apply_to_pmd_range(mm, pud, addr, next, fn, data);
+        if (err)
+            break;
+    } while (pud++, addr = next, addr != end);
+    return err;
 }
 
 /*
@@ -2462,23 +2463,23 @@ static int apply_to_pud_range(struct mm_
  * and calling a provided function on each leaf page table.
  */
 int apply_to_page_range(struct mm_struct *mm, unsigned long addr,
-			unsigned long size, pte_fn_t fn, void *data)
+            unsigned long size, pte_fn_t fn, void *data)
 {
-	pgd_t *pgd;
-	unsigned long next;
-	unsigned long end = addr + size;
-	int err;
-
-	BUG_ON(addr >= end);
-	pgd = pgd_offset(mm, addr);
-	do {
-		next = pgd_addr_end(addr, end);
-		err = apply_to_pud_range(mm, pgd, addr, next, fn, data);
-		if (err)
-			break;
-	} while (pgd++, addr = next, addr != end);
+    pgd_t *pgd;
+    unsigned long next;
+    unsigned long end = addr + size;
+    int err;
+
+    BUG_ON(addr >= end);
+    pgd = pgd_offset(mm, addr);
+    do {
+        next = pgd_addr_end(addr, end);
+        err = apply_to_pud_range(mm, pgd, addr, next, fn, data);
+        if (err)
+            break;
+    } while (pgd++, addr = next, addr != end);
 
-	return err;
+    return err;
 }
 EXPORT_SYMBOL_GPL(apply_to_page_range);
 
@@ -2492,45 +2493,45 @@ EXPORT_SYMBOL_GPL(apply_to_page_range);
  * and do_anonymous_page can safely check later on).
  */
 static inline int pte_unmap_same(struct mm_struct *mm, pmd_t *pmd,
-				pte_t *page_table, pte_t orig_pte)
+                pte_t *page_table, pte_t orig_pte)
 {
-	int same = 1;
+    int same = 1;
 #if defined(CONFIG_SMP) || defined(CONFIG_PREEMPT)
-	if (sizeof(pte_t) > sizeof(unsigned long)) {
-		spinlock_t *ptl = pte_lockptr(mm, pmd);
-		spin_lock(ptl);
-		same = pte_same(*page_table, orig_pte);
-		spin_unlock(ptl);
-	}
+    if (sizeof(pte_t) > sizeof(unsigned long)) {
+        spinlock_t *ptl = pte_lockptr(mm, pmd);
+        spin_lock(ptl);
+        same = pte_same(*page_table, orig_pte);
+        spin_unlock(ptl);
+    }
 #endif
-	pte_unmap(page_table);
-	return same;
+    pte_unmap(page_table);
+    return same;
 }
 
 static inline void cow_user_page(struct page *dst, struct page *src, unsigned long va, struct vm_area_struct *vma)
 {
-	/*
-	 * If the source page was a PFN mapping, we don't have
-	 * a "struct page" for it. We do a best-effort copy by
-	 * just copying from the original user address. If that
-	 * fails, we just zero-fill it. Live with it.
-	 */
-	if (unlikely(!src)) {
-		void *kaddr = kmap_atomic(dst);
-		void __user *uaddr = (void __user *)(va & PAGE_MASK);
-
-		/*
-		 * This really shouldn't fail, because the page is there
-		 * in the page tables. But it might just be unreadable,
-		 * in which case we just give up and fill the result with
-		 * zeroes.
-		 */
-		if (__copy_from_user_inatomic(kaddr, uaddr, PAGE_SIZE))
-			clear_page(kaddr);
-		kunmap_atomic(kaddr);
-		flush_dcache_page(dst);
-	} else
-		copy_user_highpage(dst, src, va, vma);
+    /*
+     * If the source page was a PFN mapping, we don't have
+     * a "struct page" for it. We do a best-effort copy by
+     * just copying from the original user address. If that
+     * fails, we just zero-fill it. Live with it.
+     */
+    if (unlikely(!src)) {
+        void *kaddr = kmap_atomic(dst);
+        void __user *uaddr = (void __user *)(va & PAGE_MASK);
+
+        /*
+         * This really shouldn't fail, because the page is there
+         * in the page tables. But it might just be unreadable,
+         * in which case we just give up and fill the result with
+         * zeroes.
+         */
+        if (__copy_from_user_inatomic(kaddr, uaddr, PAGE_SIZE))
+            clear_page(kaddr);
+        kunmap_atomic(kaddr);
+        flush_dcache_page(dst);
+    } else
+        copy_user_highpage(dst, src, va, vma);
 }
 
 /*
@@ -2552,338 +2553,338 @@ static inline void cow_user_page(struct 
  * We return with mmap_sem still held, but pte unmapped and unlocked.
  */
 static int do_wp_page(struct mm_struct *mm, struct vm_area_struct *vma,
-		unsigned long address, pte_t *page_table, pmd_t *pmd,
-		spinlock_t *ptl, pte_t orig_pte)
-	__releases(ptl)
-{
-	struct page *old_page, *new_page;
-	pte_t entry;
-	int ret = 0;
-	int page_mkwrite = 0;
-	struct page *dirty_page = NULL;
-
-	old_page = vm_normal_page(vma, address, orig_pte);
-	if (!old_page) {
-		/*
-		 * VM_MIXEDMAP !pfn_valid() case
-		 *
-		 * We should not cow pages in a shared writeable mapping.
-		 * Just mark the pages writable as we can't do any dirty
-		 * accounting on raw pfn maps.
-		 */
-		if ((vma->vm_flags & (VM_WRITE|VM_SHARED)) ==
-				     (VM_WRITE|VM_SHARED))
-			goto reuse;
-		goto gotten;
-	}
-
-	/*
-	 * Take out anonymous pages first, anonymous shared vmas are
-	 * not dirty accountable.
-	 */
-	if (PageAnon(old_page) && !PageKsm(old_page)) {
-		if (!trylock_page(old_page)) {
-			page_cache_get(old_page);
-			pte_unmap_unlock(page_table, ptl);
-			lock_page(old_page);
-			page_table = pte_offset_map_lock(mm, pmd, address,
-							 &ptl);
-			if (!pte_same(*page_table, orig_pte)) {
-				unlock_page(old_page);
-				goto unlock;
-			}
-			page_cache_release(old_page);
-		}
-		if (reuse_swap_page(old_page)) {
-			/*
-			 * The page is all ours.  Move it to our anon_vma so
-			 * the rmap code will not search our parent or siblings.
-			 * Protected against the rmap code by the page lock.
-			 */
-			page_move_anon_rmap(old_page, vma, address);
-			unlock_page(old_page);
-			goto reuse;
-		}
-		unlock_page(old_page);
-	} else if (unlikely((vma->vm_flags & (VM_WRITE|VM_SHARED)) ==
-					(VM_WRITE|VM_SHARED))) {
-		/*
-		 * Only catch write-faults on shared writable pages,
-		 * read-only shared pages can get COWed by
-		 * get_user_pages(.write=1, .force=1).
-		 */
-		if (vma->vm_ops && vma->vm_ops->page_mkwrite) {
-			struct vm_fault vmf;
-			int tmp;
-
-			vmf.virtual_address = (void __user *)(address &
-								PAGE_MASK);
-			vmf.pgoff = old_page->index;
-			vmf.flags = FAULT_FLAG_WRITE|FAULT_FLAG_MKWRITE;
-			vmf.page = old_page;
-
-			/*
-			 * Notify the address space that the page is about to
-			 * become writable so that it can prohibit this or wait
-			 * for the page to get into an appropriate state.
-			 *
-			 * We do this without the lock held, so that it can
-			 * sleep if it needs to.
-			 */
-			page_cache_get(old_page);
-			pte_unmap_unlock(page_table, ptl);
-
-			tmp = vma->vm_ops->page_mkwrite(vma, &vmf);
-			if (unlikely(tmp &
-					(VM_FAULT_ERROR | VM_FAULT_NOPAGE))) {
-				ret = tmp;
-				goto unwritable_page;
-			}
-			if (unlikely(!(tmp & VM_FAULT_LOCKED))) {
-				lock_page(old_page);
-				if (!old_page->mapping) {
-					ret = 0; /* retry the fault */
-					unlock_page(old_page);
-					goto unwritable_page;
-				}
-			} else
-				VM_BUG_ON(!PageLocked(old_page));
-
-			/*
-			 * Since we dropped the lock we need to revalidate
-			 * the PTE as someone else may have changed it.  If
-			 * they did, we just return, as we can count on the
-			 * MMU to tell us if they didn't also make it writable.
-			 */
-			page_table = pte_offset_map_lock(mm, pmd, address,
-							 &ptl);
-			if (!pte_same(*page_table, orig_pte)) {
-				unlock_page(old_page);
-				goto unlock;
-			}
-
-			page_mkwrite = 1;
-		}
-		dirty_page = old_page;
-		get_page(dirty_page);
+        unsigned long address, pte_t *page_table, pmd_t *pmd,
+        spinlock_t *ptl, pte_t orig_pte)
+    __releases(ptl)
+{
+    struct page *old_page, *new_page;
+    pte_t entry;
+    int ret = 0;
+    int page_mkwrite = 0;
+    struct page *dirty_page = NULL;
+
+    old_page = vm_normal_page(vma, address, orig_pte);
+    if (!old_page) {
+        /*
+         * VM_MIXEDMAP !pfn_valid() case
+         *
+         * We should not cow pages in a shared writeable mapping.
+         * Just mark the pages writable as we can't do any dirty
+         * accounting on raw pfn maps.
+         */
+        if ((vma->vm_flags & (VM_WRITE|VM_SHARED)) ==
+                     (VM_WRITE|VM_SHARED))
+            goto reuse;
+        goto gotten;
+    }
+
+    /*
+     * Take out anonymous pages first, anonymous shared vmas are
+     * not dirty accountable.
+     */
+    if (PageAnon(old_page) && !PageKsm(old_page)) {
+        if (!trylock_page(old_page)) {
+            page_cache_get(old_page);
+            pte_unmap_unlock(page_table, ptl);
+            lock_page(old_page);
+            page_table = pte_offset_map_lock(mm, pmd, address,
+                             &ptl);
+            if (!pte_same(*page_table, orig_pte)) {
+                unlock_page(old_page);
+                goto unlock;
+            }
+            page_cache_release(old_page);
+        }
+        if (reuse_swap_page(old_page)) {
+            /*
+             * The page is all ours.  Move it to our anon_vma so
+             * the rmap code will not search our parent or siblings.
+             * Protected against the rmap code by the page lock.
+             */
+            page_move_anon_rmap(old_page, vma, address);
+            unlock_page(old_page);
+            goto reuse;
+        }
+        unlock_page(old_page);
+    } else if (unlikely((vma->vm_flags & (VM_WRITE|VM_SHARED)) ==
+                    (VM_WRITE|VM_SHARED))) {
+        /*
+         * Only catch write-faults on shared writable pages,
+         * read-only shared pages can get COWed by
+         * get_user_pages(.write=1, .force=1).
+         */
+        if (vma->vm_ops && vma->vm_ops->page_mkwrite) {
+            struct vm_fault vmf;
+            int tmp;
+
+            vmf.virtual_address = (void __user *)(address &
+                                PAGE_MASK);
+            vmf.pgoff = old_page->index;
+            vmf.flags = FAULT_FLAG_WRITE|FAULT_FLAG_MKWRITE;
+            vmf.page = old_page;
+
+            /*
+             * Notify the address space that the page is about to
+             * become writable so that it can prohibit this or wait
+             * for the page to get into an appropriate state.
+             *
+             * We do this without the lock held, so that it can
+             * sleep if it needs to.
+             */
+            page_cache_get(old_page);
+            pte_unmap_unlock(page_table, ptl);
+
+            tmp = vma->vm_ops->page_mkwrite(vma, &vmf);
+            if (unlikely(tmp &
+                    (VM_FAULT_ERROR | VM_FAULT_NOPAGE))) {
+                ret = tmp;
+                goto unwritable_page;
+            }
+            if (unlikely(!(tmp & VM_FAULT_LOCKED))) {
+                lock_page(old_page);
+                if (!old_page->mapping) {
+                    ret = 0; /* retry the fault */
+                    unlock_page(old_page);
+                    goto unwritable_page;
+                }
+            } else
+                VM_BUG_ON(!PageLocked(old_page));
+
+            /*
+             * Since we dropped the lock we need to revalidate
+             * the PTE as someone else may have changed it.  If
+             * they did, we just return, as we can count on the
+             * MMU to tell us if they didn't also make it writable.
+             */
+            page_table = pte_offset_map_lock(mm, pmd, address,
+                             &ptl);
+            if (!pte_same(*page_table, orig_pte)) {
+                unlock_page(old_page);
+                goto unlock;
+            }
+
+            page_mkwrite = 1;
+        }
+        dirty_page = old_page;
+        get_page(dirty_page);
 
 reuse:
-		flush_cache_page(vma, address, pte_pfn(orig_pte));
-		entry = pte_mkyoung(orig_pte);
-		entry = maybe_mkwrite(pte_mkdirty(entry), vma);
-		if (ptep_set_access_flags(vma, address, page_table, entry,1))
-			update_mmu_cache(vma, address, page_table);
-		pte_unmap_unlock(page_table, ptl);
-		ret |= VM_FAULT_WRITE;
-
-		if (!dirty_page)
-			return ret;
-
-		/*
-		 * Yes, Virginia, this is actually required to prevent a race
-		 * with clear_page_dirty_for_io() from clearing the page dirty
-		 * bit after it clear all dirty ptes, but before a racing
-		 * do_wp_page installs a dirty pte.
-		 *
-		 * __do_fault is protected similarly.
-		 */
-		if (!page_mkwrite) {
-			wait_on_page_locked(dirty_page);
-			set_page_dirty_balance(dirty_page, page_mkwrite);
-		}
-		put_page(dirty_page);
-		if (page_mkwrite) {
-			struct address_space *mapping = dirty_page->mapping;
-
-			set_page_dirty(dirty_page);
-			unlock_page(dirty_page);
-			page_cache_release(dirty_page);
-			if (mapping)	{
-				/*
-				 * Some device drivers do not set page.mapping
-				 * but still dirty their pages
-				 */
-				balance_dirty_pages_ratelimited(mapping);
-			}
-		}
-
-		/* file_update_time outside page_lock */
-		if (vma->vm_file)
-			file_update_time(vma->vm_file);
-
-		return ret;
-	}
-
-	/*
-	 * Ok, we need to copy. Oh, well..
-	 */
-	page_cache_get(old_page);
+        flush_cache_page(vma, address, pte_pfn(orig_pte));
+        entry = pte_mkyoung(orig_pte);
+        entry = maybe_mkwrite(pte_mkdirty(entry), vma);
+        if (ptep_set_access_flags(vma, address, page_table, entry,1))
+            update_mmu_cache(vma, address, page_table);
+        pte_unmap_unlock(page_table, ptl);
+        ret |= VM_FAULT_WRITE;
+
+        if (!dirty_page)
+            return ret;
+
+        /*
+         * Yes, Virginia, this is actually required to prevent a race
+         * with clear_page_dirty_for_io() from clearing the page dirty
+         * bit after it clear all dirty ptes, but before a racing
+         * do_wp_page installs a dirty pte.
+         *
+         * __do_fault is protected similarly.
+         */
+        if (!page_mkwrite) {
+            wait_on_page_locked(dirty_page);
+            set_page_dirty_balance(dirty_page, page_mkwrite);
+        }
+        put_page(dirty_page);
+        if (page_mkwrite) {
+            struct address_space *mapping = dirty_page->mapping;
+
+            set_page_dirty(dirty_page);
+            unlock_page(dirty_page);
+            page_cache_release(dirty_page);
+            if (mapping)    {
+                /*
+                 * Some device drivers do not set page.mapping
+                 * but still dirty their pages
+                 */
+                balance_dirty_pages_ratelimited(mapping);
+            }
+        }
+
+        /* file_update_time outside page_lock */
+        if (vma->vm_file)
+            file_update_time(vma->vm_file);
+
+        return ret;
+    }
+
+    /*
+     * Ok, we need to copy. Oh, well..
+     */
+    page_cache_get(old_page);
 gotten:
-	pte_unmap_unlock(page_table, ptl);
-
-	if (unlikely(anon_vma_prepare(vma)))
-		goto oom;
-
-	if (is_zero_pfn(pte_pfn(orig_pte))) {
-		new_page = alloc_zeroed_user_highpage_movable(vma, address);
-		if (!new_page)
-			goto oom;
-	} else {
-		new_page = alloc_page_vma(GFP_HIGHUSER_MOVABLE, vma, address);
-		if (!new_page)
-			goto oom;
-		cow_user_page(new_page, old_page, address, vma);
-	}
-	__SetPageUptodate(new_page);
+    pte_unmap_unlock(page_table, ptl);
 
-	if (mem_cgroup_newpage_charge(new_page, mm, GFP_KERNEL))
-		goto oom_free_new;
+    if (unlikely(anon_vma_prepare(vma)))
+        goto oom;
 
-	/*
-	 * Re-check the pte - we dropped the lock
-	 */
-	page_table = pte_offset_map_lock(mm, pmd, address, &ptl);
-	if (likely(pte_same(*page_table, orig_pte))) {
-		if (old_page) {
-			if (!PageAnon(old_page)) {
-				dec_mm_counter_fast(mm, MM_FILEPAGES);
-				inc_mm_counter_fast(mm, MM_ANONPAGES);
-			}
-		} else
-			inc_mm_counter_fast(mm, MM_ANONPAGES);
-		flush_cache_page(vma, address, pte_pfn(orig_pte));
-		entry = mk_pte(new_page, vma->vm_page_prot);
-		entry = maybe_mkwrite(pte_mkdirty(entry), vma);
-		/*
-		 * Clear the pte entry and flush it first, before updating the
-		 * pte with the new entry. This will avoid a race condition
-		 * seen in the presence of one thread doing SMC and another
-		 * thread doing COW.
-		 */
-		ptep_clear_flush(vma, address, page_table);
-		page_add_new_anon_rmap(new_page, vma, address);
-		/*
-		 * We call the notify macro here because, when using secondary
-		 * mmu page tables (such as kvm shadow page tables), we want the
-		 * new page to be mapped directly into the secondary page table.
-		 */
-		set_pte_at_notify(mm, address, page_table, entry);
-		update_mmu_cache(vma, address, page_table);
-		if (old_page) {
-			/*
-			 * Only after switching the pte to the new page may
-			 * we remove the mapcount here. Otherwise another
-			 * process may come and find the rmap count decremented
-			 * before the pte is switched to the new page, and
-			 * "reuse" the old page writing into it while our pte
-			 * here still points into it and can be read by other
-			 * threads.
-			 *
-			 * The critical issue is to order this
-			 * page_remove_rmap with the ptp_clear_flush above.
-			 * Those stores are ordered by (if nothing else,)
-			 * the barrier present in the atomic_add_negative
-			 * in page_remove_rmap.
-			 *
-			 * Then the TLB flush in ptep_clear_flush ensures that
-			 * no process can access the old page before the
-			 * decremented mapcount is visible. And the old page
-			 * cannot be reused until after the decremented
-			 * mapcount is visible. So transitively, TLBs to
-			 * old page will be flushed before it can be reused.
-			 */
-			page_remove_rmap(old_page);
-		}
-
-		/* Free the old page.. */
-		new_page = old_page;
-		ret |= VM_FAULT_WRITE;
-	} else
-		mem_cgroup_uncharge_page(new_page);
+    if (is_zero_pfn(pte_pfn(orig_pte))) {
+        new_page = alloc_zeroed_user_highpage_movable(vma, address);
+        if (!new_page)
+            goto oom;
+    } else {
+        new_page = alloc_page_vma(GFP_HIGHUSER_MOVABLE, vma, address);
+        if (!new_page)
+            goto oom;
+        cow_user_page(new_page, old_page, address, vma);
+    }
+    __SetPageUptodate(new_page);
+
+    if (mem_cgroup_newpage_charge(new_page, mm, GFP_KERNEL))
+        goto oom_free_new;
+
+    /*
+     * Re-check the pte - we dropped the lock
+     */
+    page_table = pte_offset_map_lock(mm, pmd, address, &ptl);
+    if (likely(pte_same(*page_table, orig_pte))) {
+        if (old_page) {
+            if (!PageAnon(old_page)) {
+                dec_mm_counter_fast(mm, MM_FILEPAGES);
+                inc_mm_counter_fast(mm, MM_ANONPAGES);
+            }
+        } else
+            inc_mm_counter_fast(mm, MM_ANONPAGES);
+        flush_cache_page(vma, address, pte_pfn(orig_pte));
+        entry = mk_pte(new_page, vma->vm_page_prot);
+        entry = maybe_mkwrite(pte_mkdirty(entry), vma);
+        /*
+         * Clear the pte entry and flush it first, before updating the
+         * pte with the new entry. This will avoid a race condition
+         * seen in the presence of one thread doing SMC and another
+         * thread doing COW.
+         */
+        ptep_clear_flush(vma, address, page_table);
+        page_add_new_anon_rmap(new_page, vma, address);
+        /*
+         * We call the notify macro here because, when using secondary
+         * mmu page tables (such as kvm shadow page tables), we want the
+         * new page to be mapped directly into the secondary page table.
+         */
+        set_pte_at_notify(mm, address, page_table, entry);
+        update_mmu_cache(vma, address, page_table);
+        if (old_page) {
+            /*
+             * Only after switching the pte to the new page may
+             * we remove the mapcount here. Otherwise another
+             * process may come and find the rmap count decremented
+             * before the pte is switched to the new page, and
+             * "reuse" the old page writing into it while our pte
+             * here still points into it and can be read by other
+             * threads.
+             *
+             * The critical issue is to order this
+             * page_remove_rmap with the ptp_clear_flush above.
+             * Those stores are ordered by (if nothing else,)
+             * the barrier present in the atomic_add_negative
+             * in page_remove_rmap.
+             *
+             * Then the TLB flush in ptep_clear_flush ensures that
+             * no process can access the old page before the
+             * decremented mapcount is visible. And the old page
+             * cannot be reused until after the decremented
+             * mapcount is visible. So transitively, TLBs to
+             * old page will be flushed before it can be reused.
+             */
+            page_remove_rmap(old_page);
+        }
+
+        /* Free the old page.. */
+        new_page = old_page;
+        ret |= VM_FAULT_WRITE;
+    } else
+        mem_cgroup_uncharge_page(new_page);
 
-	if (new_page)
-		page_cache_release(new_page);
+    if (new_page)
+        page_cache_release(new_page);
 unlock:
-	pte_unmap_unlock(page_table, ptl);
-	if (old_page) {
-		/*
-		 * Don't let another task, with possibly unlocked vma,
-		 * keep the mlocked page.
-		 */
-		if ((ret & VM_FAULT_WRITE) && (vma->vm_flags & VM_LOCKED)) {
-			lock_page(old_page);	/* LRU manipulation */
-			munlock_vma_page(old_page);
-			unlock_page(old_page);
-		}
-		page_cache_release(old_page);
-	}
-	return ret;
+    pte_unmap_unlock(page_table, ptl);
+    if (old_page) {
+        /*
+         * Don't let another task, with possibly unlocked vma,
+         * keep the mlocked page.
+         */
+        if ((ret & VM_FAULT_WRITE) && (vma->vm_flags & VM_LOCKED)) {
+            lock_page(old_page);    /* LRU manipulation */
+            munlock_vma_page(old_page);
+            unlock_page(old_page);
+        }
+        page_cache_release(old_page);
+    }
+    return ret;
 oom_free_new:
-	page_cache_release(new_page);
+    page_cache_release(new_page);
 oom:
-	if (old_page) {
-		if (page_mkwrite) {
-			unlock_page(old_page);
-			page_cache_release(old_page);
-		}
-		page_cache_release(old_page);
-	}
-	return VM_FAULT_OOM;
+    if (old_page) {
+        if (page_mkwrite) {
+            unlock_page(old_page);
+            page_cache_release(old_page);
+        }
+        page_cache_release(old_page);
+    }
+    return VM_FAULT_OOM;
 
 unwritable_page:
-	page_cache_release(old_page);
-	return ret;
+    page_cache_release(old_page);
+    return ret;
 }
 
 static void unmap_mapping_range_vma(struct vm_area_struct *vma,
-		unsigned long start_addr, unsigned long end_addr,
-		struct zap_details *details)
+        unsigned long start_addr, unsigned long end_addr,
+        struct zap_details *details)
 {
-	zap_page_range_single(vma, start_addr, end_addr - start_addr, details);
+    zap_page_range_single(vma, start_addr, end_addr - start_addr, details);
 }
 
 static inline void unmap_mapping_range_tree(struct prio_tree_root *root,
-					    struct zap_details *details)
+                        struct zap_details *details)
 {
-	struct vm_area_struct *vma;
-	struct prio_tree_iter iter;
-	pgoff_t vba, vea, zba, zea;
-
-	vma_prio_tree_foreach(vma, &iter, root,
-			details->first_index, details->last_index) {
-
-		vba = vma->vm_pgoff;
-		vea = vba + ((vma->vm_end - vma->vm_start) >> PAGE_SHIFT) - 1;
-		/* Assume for now that PAGE_CACHE_SHIFT == PAGE_SHIFT */
-		zba = details->first_index;
-		if (zba < vba)
-			zba = vba;
-		zea = details->last_index;
-		if (zea > vea)
-			zea = vea;
-
-		unmap_mapping_range_vma(vma,
-			((zba - vba) << PAGE_SHIFT) + vma->vm_start,
-			((zea - vba + 1) << PAGE_SHIFT) + vma->vm_start,
-				details);
-	}
+    struct vm_area_struct *vma;
+    struct prio_tree_iter iter;
+    pgoff_t vba, vea, zba, zea;
+
+    vma_prio_tree_foreach(vma, &iter, root,
+            details->first_index, details->last_index) {
+
+        vba = vma->vm_pgoff;
+        vea = vba + ((vma->vm_end - vma->vm_start) >> PAGE_SHIFT) - 1;
+        /* Assume for now that PAGE_CACHE_SHIFT == PAGE_SHIFT */
+        zba = details->first_index;
+        if (zba < vba)
+            zba = vba;
+        zea = details->last_index;
+        if (zea > vea)
+            zea = vea;
+
+        unmap_mapping_range_vma(vma,
+            ((zba - vba) << PAGE_SHIFT) + vma->vm_start,
+            ((zea - vba + 1) << PAGE_SHIFT) + vma->vm_start,
+                details);
+    }
 }
 
 static inline void unmap_mapping_range_list(struct list_head *head,
-					    struct zap_details *details)
+                        struct zap_details *details)
 {
-	struct vm_area_struct *vma;
+    struct vm_area_struct *vma;
 
-	/*
-	 * In nonlinear VMAs there is no correspondence between virtual address
-	 * offset and file offset.  So we must perform an exhaustive search
-	 * across *all* the pages in each nonlinear VMA, not just the pages
-	 * whose virtual address lies outside the file truncation point.
-	 */
-	list_for_each_entry(vma, head, shared.vm_set.list) {
-		details->nonlinear_vma = vma;
-		unmap_mapping_range_vma(vma, vma->vm_start, vma->vm_end, details);
-	}
+    /*
+     * In nonlinear VMAs there is no correspondence between virtual address
+     * offset and file offset.  So we must perform an exhaustive search
+     * across *all* the pages in each nonlinear VMA, not just the pages
+     * whose virtual address lies outside the file truncation point.
+     */
+    list_for_each_entry(vma, head, shared.vm_set.list) {
+        details->nonlinear_vma = vma;
+        unmap_mapping_range_vma(vma, vma->vm_start, vma->vm_end, details);
+    }
 }
 
 /**
@@ -2901,34 +2902,34 @@ static inline void unmap_mapping_range_l
  * but 0 when invalidating pagecache, don't throw away private data.
  */
 void unmap_mapping_range(struct address_space *mapping,
-		loff_t const holebegin, loff_t const holelen, int even_cows)
+        loff_t const holebegin, loff_t const holelen, int even_cows)
 {
-	struct zap_details details;
-	pgoff_t hba = holebegin >> PAGE_SHIFT;
-	pgoff_t hlen = (holelen + PAGE_SIZE - 1) >> PAGE_SHIFT;
-
-	/* Check for overflow. */
-	if (sizeof(holelen) > sizeof(hlen)) {
-		long long holeend =
-			(holebegin + holelen + PAGE_SIZE - 1) >> PAGE_SHIFT;
-		if (holeend & ~(long long)ULONG_MAX)
-			hlen = ULONG_MAX - hba + 1;
-	}
-
-	details.check_mapping = even_cows? NULL: mapping;
-	details.nonlinear_vma = NULL;
-	details.first_index = hba;
-	details.last_index = hba + hlen - 1;
-	if (details.last_index < details.first_index)
-		details.last_index = ULONG_MAX;
-
-
-	mutex_lock(&mapping->i_mmap_mutex);
-	if (unlikely(!prio_tree_empty(&mapping->i_mmap)))
-		unmap_mapping_range_tree(&mapping->i_mmap, &details);
-	if (unlikely(!list_empty(&mapping->i_mmap_nonlinear)))
-		unmap_mapping_range_list(&mapping->i_mmap_nonlinear, &details);
-	mutex_unlock(&mapping->i_mmap_mutex);
+    struct zap_details details;
+    pgoff_t hba = holebegin >> PAGE_SHIFT;
+    pgoff_t hlen = (holelen + PAGE_SIZE - 1) >> PAGE_SHIFT;
+
+    /* Check for overflow. */
+    if (sizeof(holelen) > sizeof(hlen)) {
+        long long holeend =
+            (holebegin + holelen + PAGE_SIZE - 1) >> PAGE_SHIFT;
+        if (holeend & ~(long long)ULONG_MAX)
+            hlen = ULONG_MAX - hba + 1;
+    }
+
+    details.check_mapping = even_cows? NULL: mapping;
+    details.nonlinear_vma = NULL;
+    details.first_index = hba;
+    details.last_index = hba + hlen - 1;
+    if (details.last_index < details.first_index)
+        details.last_index = ULONG_MAX;
+
+
+    mutex_lock(&mapping->i_mmap_mutex);
+    if (unlikely(!prio_tree_empty(&mapping->i_mmap)))
+        unmap_mapping_range_tree(&mapping->i_mmap, &details);
+    if (unlikely(!list_empty(&mapping->i_mmap_nonlinear)))
+        unmap_mapping_range_list(&mapping->i_mmap_nonlinear, &details);
+    mutex_unlock(&mapping->i_mmap_mutex);
 }
 EXPORT_SYMBOL(unmap_mapping_range);
 
@@ -2938,181 +2939,181 @@ EXPORT_SYMBOL(unmap_mapping_range);
  * We return with mmap_sem still held, but pte unmapped and unlocked.
  */
 static int do_swap_page(struct mm_struct *mm, struct vm_area_struct *vma,
-		unsigned long address, pte_t *page_table, pmd_t *pmd,
-		unsigned int flags, pte_t orig_pte)
+        unsigned long address, pte_t *page_table, pmd_t *pmd,
+        unsigned int flags, pte_t orig_pte)
 {
-	spinlock_t *ptl;
-	struct page *page, *swapcache = NULL;
-	swp_entry_t entry;
-	pte_t pte;
-	int locked;
-	struct mem_cgroup *ptr;
-	int exclusive = 0;
-	int ret = 0;
-
-	if (!pte_unmap_same(mm, pmd, page_table, orig_pte))
-		goto out;
-
-	entry = pte_to_swp_entry(orig_pte);
-	if (unlikely(non_swap_entry(entry))) {
-		if (is_migration_entry(entry)) {
-			migration_entry_wait(mm, pmd, address);
-		} else if (is_hwpoison_entry(entry)) {
-			ret = VM_FAULT_HWPOISON;
-		} else {
-			print_bad_pte(vma, address, orig_pte, NULL);
-			ret = VM_FAULT_SIGBUS;
-		}
-		goto out;
-	}
-	delayacct_set_flag(DELAYACCT_PF_SWAPIN);
-	page = lookup_swap_cache(entry);
-	if (!page) {
-		grab_swap_token(mm); /* Contend for token _before_ read-in */
-		page = swapin_readahead(entry,
-					GFP_HIGHUSER_MOVABLE, vma, address);
-		if (!page) {
-			/*
-			 * Back out if somebody else faulted in this pte
-			 * while we released the pte lock.
-			 */
-			page_table = pte_offset_map_lock(mm, pmd, address, &ptl);
-			if (likely(pte_same(*page_table, orig_pte)))
-				ret = VM_FAULT_OOM;
-			delayacct_clear_flag(DELAYACCT_PF_SWAPIN);
-			goto unlock;
-		}
-
-		/* Had to read the page from swap area: Major fault */
-		ret = VM_FAULT_MAJOR;
-		count_vm_event(PGMAJFAULT);
-		mem_cgroup_count_vm_event(mm, PGMAJFAULT);
-	} else if (PageHWPoison(page)) {
-		/*
-		 * hwpoisoned dirty swapcache pages are kept for killing
-		 * owner processes (which may be unknown at hwpoison time)
-		 */
-		ret = VM_FAULT_HWPOISON;
-		delayacct_clear_flag(DELAYACCT_PF_SWAPIN);
-		goto out_release;
-	}
-
-	locked = lock_page_or_retry(page, mm, flags);
-	delayacct_clear_flag(DELAYACCT_PF_SWAPIN);
-	if (!locked) {
-		ret |= VM_FAULT_RETRY;
-		goto out_release;
-	}
-
-	/*
-	 * Make sure try_to_free_swap or reuse_swap_page or swapoff did not
-	 * release the swapcache from under us.  The page pin, and pte_same
-	 * test below, are not enough to exclude that.  Even if it is still
-	 * swapcache, we need to check that the page's swap has not changed.
-	 */
-	if (unlikely(!PageSwapCache(page) || page_private(page) != entry.val))
-		goto out_page;
-
-	if (ksm_might_need_to_copy(page, vma, address)) {
-		swapcache = page;
-		page = ksm_does_need_to_copy(page, vma, address);
-
-		if (unlikely(!page)) {
-			ret = VM_FAULT_OOM;
-			page = swapcache;
-			swapcache = NULL;
-			goto out_page;
-		}
-	}
+    spinlock_t *ptl;
+    struct page *page, *swapcache = NULL;
+    swp_entry_t entry;
+    pte_t pte;
+    int locked;
+    struct mem_cgroup *ptr;
+    int exclusive = 0;
+    int ret = 0;
+
+    if (!pte_unmap_same(mm, pmd, page_table, orig_pte))
+        goto out;
+
+    entry = pte_to_swp_entry(orig_pte);
+    if (unlikely(non_swap_entry(entry))) {
+        if (is_migration_entry(entry)) {
+            migration_entry_wait(mm, pmd, address);
+        } else if (is_hwpoison_entry(entry)) {
+            ret = VM_FAULT_HWPOISON;
+        } else {
+            print_bad_pte(vma, address, orig_pte, NULL);
+            ret = VM_FAULT_SIGBUS;
+        }
+        goto out;
+    }
+    delayacct_set_flag(DELAYACCT_PF_SWAPIN);
+    page = lookup_swap_cache(entry);
+    if (!page) {
+        grab_swap_token(mm); /* Contend for token _before_ read-in */
+        page = swapin_readahead(entry,
+                    GFP_HIGHUSER_MOVABLE, vma, address);
+        if (!page) {
+            /*
+             * Back out if somebody else faulted in this pte
+             * while we released the pte lock.
+             */
+            page_table = pte_offset_map_lock(mm, pmd, address, &ptl);
+            if (likely(pte_same(*page_table, orig_pte)))
+                ret = VM_FAULT_OOM;
+            delayacct_clear_flag(DELAYACCT_PF_SWAPIN);
+            goto unlock;
+        }
+
+        /* Had to read the page from swap area: Major fault */
+        ret = VM_FAULT_MAJOR;
+        count_vm_event(PGMAJFAULT);
+        mem_cgroup_count_vm_event(mm, PGMAJFAULT);
+    } else if (PageHWPoison(page)) {
+        /*
+         * hwpoisoned dirty swapcache pages are kept for killing
+         * owner processes (which may be unknown at hwpoison time)
+         */
+        ret = VM_FAULT_HWPOISON;
+        delayacct_clear_flag(DELAYACCT_PF_SWAPIN);
+        goto out_release;
+    }
+
+    locked = lock_page_or_retry(page, mm, flags);
+    delayacct_clear_flag(DELAYACCT_PF_SWAPIN);
+    if (!locked) {
+        ret |= VM_FAULT_RETRY;
+        goto out_release;
+    }
+
+    /*
+     * Make sure try_to_free_swap or reuse_swap_page or swapoff did not
+     * release the swapcache from under us.  The page pin, and pte_same
+     * test below, are not enough to exclude that.  Even if it is still
+     * swapcache, we need to check that the page's swap has not changed.
+     */
+    if (unlikely(!PageSwapCache(page) || page_private(page) != entry.val))
+        goto out_page;
+
+    if (ksm_might_need_to_copy(page, vma, address)) {
+        swapcache = page;
+        page = ksm_does_need_to_copy(page, vma, address);
+
+        if (unlikely(!page)) {
+            ret = VM_FAULT_OOM;
+            page = swapcache;
+            swapcache = NULL;
+            goto out_page;
+        }
+    }
+
+    if (mem_cgroup_try_charge_swapin(mm, page, GFP_KERNEL, &ptr)) {
+        ret = VM_FAULT_OOM;
+        goto out_page;
+    }
+
+    /*
+     * Back out if somebody else already faulted in this pte.
+     */
+    page_table = pte_offset_map_lock(mm, pmd, address, &ptl);
+    if (unlikely(!pte_same(*page_table, orig_pte)))
+        goto out_nomap;
+
+    if (unlikely(!PageUptodate(page))) {
+        ret = VM_FAULT_SIGBUS;
+        goto out_nomap;
+    }
+
+    /*
+     * The page isn't present yet, go ahead with the fault.
+     *
+     * Be careful about the sequence of operations here.
+     * To get its accounting right, reuse_swap_page() must be called
+     * while the page is counted on swap but not yet in mapcount i.e.
+     * before page_add_anon_rmap() and swap_free(); try_to_free_swap()
+     * must be called after the swap_free(), or it will never succeed.
+     * Because delete_from_swap_page() may be called by reuse_swap_page(),
+     * mem_cgroup_commit_charge_swapin() may not be able to find swp_entry
+     * in page->private. In this case, a record in swap_cgroup  is silently
+     * discarded at swap_free().
+     */
+
+    inc_mm_counter_fast(mm, MM_ANONPAGES);
+    dec_mm_counter_fast(mm, MM_SWAPENTS);
+    pte = mk_pte(page, vma->vm_page_prot);
+    if ((flags & FAULT_FLAG_WRITE) && reuse_swap_page(page)) {
+        pte = maybe_mkwrite(pte_mkdirty(pte), vma);
+        flags &= ~FAULT_FLAG_WRITE;
+        ret |= VM_FAULT_WRITE;
+        exclusive = 1;
+    }
+    flush_icache_page(vma, page);
+    set_pte_at(mm, address, page_table, pte);
+    do_page_add_anon_rmap(page, vma, address, exclusive);
+    /* It's better to call commit-charge after rmap is established */
+    mem_cgroup_commit_charge_swapin(page, ptr);
+
+    swap_free(entry);
+    if (vm_swap_full() || (vma->vm_flags & VM_LOCKED) || PageMlocked(page))
+        try_to_free_swap(page);
+    unlock_page(page);
+    if (swapcache) {
+        /*
+         * Hold the lock to avoid the swap entry to be reused
+         * until we take the PT lock for the pte_same() check
+         * (to avoid false positives from pte_same). For
+         * further safety release the lock after the swap_free
+         * so that the swap count won't change under a
+         * parallel locked swapcache.
+         */
+        unlock_page(swapcache);
+        page_cache_release(swapcache);
+    }
+
+    if (flags & FAULT_FLAG_WRITE) {
+        ret |= do_wp_page(mm, vma, address, page_table, pmd, ptl, pte);
+        if (ret & VM_FAULT_ERROR)
+            ret &= VM_FAULT_ERROR;
+        goto out;
+    }
 
-	if (mem_cgroup_try_charge_swapin(mm, page, GFP_KERNEL, &ptr)) {
-		ret = VM_FAULT_OOM;
-		goto out_page;
-	}
-
-	/*
-	 * Back out if somebody else already faulted in this pte.
-	 */
-	page_table = pte_offset_map_lock(mm, pmd, address, &ptl);
-	if (unlikely(!pte_same(*page_table, orig_pte)))
-		goto out_nomap;
-
-	if (unlikely(!PageUptodate(page))) {
-		ret = VM_FAULT_SIGBUS;
-		goto out_nomap;
-	}
-
-	/*
-	 * The page isn't present yet, go ahead with the fault.
-	 *
-	 * Be careful about the sequence of operations here.
-	 * To get its accounting right, reuse_swap_page() must be called
-	 * while the page is counted on swap but not yet in mapcount i.e.
-	 * before page_add_anon_rmap() and swap_free(); try_to_free_swap()
-	 * must be called after the swap_free(), or it will never succeed.
-	 * Because delete_from_swap_page() may be called by reuse_swap_page(),
-	 * mem_cgroup_commit_charge_swapin() may not be able to find swp_entry
-	 * in page->private. In this case, a record in swap_cgroup  is silently
-	 * discarded at swap_free().
-	 */
-
-	inc_mm_counter_fast(mm, MM_ANONPAGES);
-	dec_mm_counter_fast(mm, MM_SWAPENTS);
-	pte = mk_pte(page, vma->vm_page_prot);
-	if ((flags & FAULT_FLAG_WRITE) && reuse_swap_page(page)) {
-		pte = maybe_mkwrite(pte_mkdirty(pte), vma);
-		flags &= ~FAULT_FLAG_WRITE;
-		ret |= VM_FAULT_WRITE;
-		exclusive = 1;
-	}
-	flush_icache_page(vma, page);
-	set_pte_at(mm, address, page_table, pte);
-	do_page_add_anon_rmap(page, vma, address, exclusive);
-	/* It's better to call commit-charge after rmap is established */
-	mem_cgroup_commit_charge_swapin(page, ptr);
-
-	swap_free(entry);
-	if (vm_swap_full() || (vma->vm_flags & VM_LOCKED) || PageMlocked(page))
-		try_to_free_swap(page);
-	unlock_page(page);
-	if (swapcache) {
-		/*
-		 * Hold the lock to avoid the swap entry to be reused
-		 * until we take the PT lock for the pte_same() check
-		 * (to avoid false positives from pte_same). For
-		 * further safety release the lock after the swap_free
-		 * so that the swap count won't change under a
-		 * parallel locked swapcache.
-		 */
-		unlock_page(swapcache);
-		page_cache_release(swapcache);
-	}
-
-	if (flags & FAULT_FLAG_WRITE) {
-		ret |= do_wp_page(mm, vma, address, page_table, pmd, ptl, pte);
-		if (ret & VM_FAULT_ERROR)
-			ret &= VM_FAULT_ERROR;
-		goto out;
-	}
-
-	/* No need to invalidate - it was non-present before */
-	update_mmu_cache(vma, address, page_table);
+    /* No need to invalidate - it was non-present before */
+    update_mmu_cache(vma, address, page_table);
 unlock:
-	pte_unmap_unlock(page_table, ptl);
+    pte_unmap_unlock(page_table, ptl);
 out:
-	return ret;
+    return ret;
 out_nomap:
-	mem_cgroup_cancel_charge_swapin(ptr);
-	pte_unmap_unlock(page_table, ptl);
+    mem_cgroup_cancel_charge_swapin(ptr);
+    pte_unmap_unlock(page_table, ptl);
 out_page:
-	unlock_page(page);
+    unlock_page(page);
 out_release:
-	page_cache_release(page);
-	if (swapcache) {
-		unlock_page(swapcache);
-		page_cache_release(swapcache);
-	}
-	return ret;
+    page_cache_release(page);
+    if (swapcache) {
+        unlock_page(swapcache);
+        page_cache_release(swapcache);
+    }
+    return ret;
 }
 
 /*
@@ -3122,31 +3123,31 @@ out_release:
  */
 static inline int check_stack_guard_page(struct vm_area_struct *vma, unsigned long address)
 {
-	address &= PAGE_MASK;
-	if ((vma->vm_flags & VM_GROWSDOWN) && address == vma->vm_start) {
-		struct vm_area_struct *prev = vma->vm_prev;
-
-		/*
-		 * Is there a mapping abutting this one below?
-		 *
-		 * That's only ok if it's the same stack mapping
-		 * that has gotten split..
-		 */
-		if (prev && prev->vm_end == address)
-			return prev->vm_flags & VM_GROWSDOWN ? 0 : -ENOMEM;
-
-		expand_downwards(vma, address - PAGE_SIZE);
-	}
-	if ((vma->vm_flags & VM_GROWSUP) && address + PAGE_SIZE == vma->vm_end) {
-		struct vm_area_struct *next = vma->vm_next;
-
-		/* As VM_GROWSDOWN but s/below/above/ */
-		if (next && next->vm_start == address + PAGE_SIZE)
-			return next->vm_flags & VM_GROWSUP ? 0 : -ENOMEM;
-
-		expand_upwards(vma, address + PAGE_SIZE);
-	}
-	return 0;
+    address &= PAGE_MASK;
+    if ((vma->vm_flags & VM_GROWSDOWN) && address == vma->vm_start) {
+        struct vm_area_struct *prev = vma->vm_prev;
+
+        /*
+         * Is there a mapping abutting this one below?
+         *
+         * That's only ok if it's the same stack mapping
+         * that has gotten split..
+         */
+        if (prev && prev->vm_end == address)
+            return prev->vm_flags & VM_GROWSDOWN ? 0 : -ENOMEM;
+
+        expand_downwards(vma, address - PAGE_SIZE);
+    }
+    if ((vma->vm_flags & VM_GROWSUP) && address + PAGE_SIZE == vma->vm_end) {
+        struct vm_area_struct *next = vma->vm_next;
+
+        /* As VM_GROWSDOWN but s/below/above/ */
+        if (next && next->vm_start == address + PAGE_SIZE)
+            return next->vm_flags & VM_GROWSUP ? 0 : -ENOMEM;
+
+        expand_upwards(vma, address + PAGE_SIZE);
+    }
+    return 0;
 }
 
 /*
@@ -3155,66 +3156,66 @@ static inline int check_stack_guard_page
  * We return with mmap_sem still held, but pte unmapped and unlocked.
  */
 static int do_anonymous_page(struct mm_struct *mm, struct vm_area_struct *vma,
-		unsigned long address, pte_t *page_table, pmd_t *pmd,
-		unsigned int flags)
+        unsigned long address, pte_t *page_table, pmd_t *pmd,
+        unsigned int flags)
 {
-	struct page *page;
-	spinlock_t *ptl;
-	pte_t entry;
-
-	pte_unmap(page_table);
-
-	/* Check if we need to add a guard page to the stack */
-	if (check_stack_guard_page(vma, address) < 0)
-		return VM_FAULT_SIGBUS;
-
-	/* Use the zero-page for reads */
-	if (!(flags & FAULT_FLAG_WRITE)) {
-		entry = pte_mkspecial(pfn_pte(my_zero_pfn(address),
-						vma->vm_page_prot));
-		page_table = pte_offset_map_lock(mm, pmd, address, &ptl);
-		if (!pte_none(*page_table))
-			goto unlock;
-		goto setpte;
-	}
-
-	/* Allocate our own private page. */
-	if (unlikely(anon_vma_prepare(vma)))
-		goto oom;
-	page = alloc_zeroed_user_highpage_movable(vma, address);
-	if (!page)
-		goto oom;
-	__SetPageUptodate(page);
-
-	if (mem_cgroup_newpage_charge(page, mm, GFP_KERNEL))
-		goto oom_free_page;
-
-	entry = mk_pte(page, vma->vm_page_prot);
-	if (vma->vm_flags & VM_WRITE)
-		entry = pte_mkwrite(pte_mkdirty(entry));
-
-	page_table = pte_offset_map_lock(mm, pmd, address, &ptl);
-	if (!pte_none(*page_table))
-		goto release;
+    struct page *page;
+    spinlock_t *ptl;
+    pte_t entry;
+
+    pte_unmap(page_table);
+
+    /* Check if we need to add a guard page to the stack */
+    if (check_stack_guard_page(vma, address) < 0)
+        return VM_FAULT_SIGBUS;
+
+    /* Use the zero-page for reads */
+    if (!(flags & FAULT_FLAG_WRITE)) {
+        entry = pte_mkspecial(pfn_pte(my_zero_pfn(address),
+                        vma->vm_page_prot));
+        page_table = pte_offset_map_lock(mm, pmd, address, &ptl);
+        if (!pte_none(*page_table))
+            goto unlock;
+        goto setpte;
+    }
+
+    /* Allocate our own private page. */
+    if (unlikely(anon_vma_prepare(vma)))
+        goto oom;
+    page = alloc_zeroed_user_highpage_movable(vma, address);
+    if (!page)
+        goto oom;
+    __SetPageUptodate(page);
+
+    if (mem_cgroup_newpage_charge(page, mm, GFP_KERNEL))
+        goto oom_free_page;
+
+    entry = mk_pte(page, vma->vm_page_prot);
+    if (vma->vm_flags & VM_WRITE)
+        entry = pte_mkwrite(pte_mkdirty(entry));
+
+    page_table = pte_offset_map_lock(mm, pmd, address, &ptl);
+    if (!pte_none(*page_table))
+        goto release;
 
-	inc_mm_counter_fast(mm, MM_ANONPAGES);
-	page_add_new_anon_rmap(page, vma, address);
+    inc_mm_counter_fast(mm, MM_ANONPAGES);
+    page_add_new_anon_rmap(page, vma, address);
 setpte:
-	set_pte_at(mm, address, page_table, entry);
+    set_pte_at(mm, address, page_table, entry);
 
-	/* No need to invalidate - it was non-present before */
-	update_mmu_cache(vma, address, page_table);
+    /* No need to invalidate - it was non-present before */
+    update_mmu_cache(vma, address, page_table);
 unlock:
-	pte_unmap_unlock(page_table, ptl);
-	return 0;
+    pte_unmap_unlock(page_table, ptl);
+    return 0;
 release:
-	mem_cgroup_uncharge_page(page);
-	page_cache_release(page);
-	goto unlock;
+    mem_cgroup_uncharge_page(page);
+    page_cache_release(page);
+    goto unlock;
 oom_free_page:
-	page_cache_release(page);
+    page_cache_release(page);
 oom:
-	return VM_FAULT_OOM;
+    return VM_FAULT_OOM;
 }
 
 /*
@@ -3231,199 +3232,199 @@ oom:
  * We return with mmap_sem still held, but pte unmapped and unlocked.
  */
 static int __do_fault(struct mm_struct *mm, struct vm_area_struct *vma,
-		unsigned long address, pmd_t *pmd,
-		pgoff_t pgoff, unsigned int flags, pte_t orig_pte)
+        unsigned long address, pmd_t *pmd,
+        pgoff_t pgoff, unsigned int flags, pte_t orig_pte)
 {
-	pte_t *page_table;
-	spinlock_t *ptl;
-	struct page *page;
-	struct page *cow_page;
-	pte_t entry;
-	int anon = 0;
-	struct page *dirty_page = NULL;
-	struct vm_fault vmf;
-	int ret;
-	int page_mkwrite = 0;
-
-	/*
-	 * If we do COW later, allocate page befor taking lock_page()
-	 * on the file cache page. This will reduce lock holding time.
-	 */
-	if ((flags & FAULT_FLAG_WRITE) && !(vma->vm_flags & VM_SHARED)) {
-
-		if (unlikely(anon_vma_prepare(vma)))
-			return VM_FAULT_OOM;
-
-		cow_page = alloc_page_vma(GFP_HIGHUSER_MOVABLE, vma, address);
-		if (!cow_page)
-			return VM_FAULT_OOM;
-
-		if (mem_cgroup_newpage_charge(cow_page, mm, GFP_KERNEL)) {
-			page_cache_release(cow_page);
-			return VM_FAULT_OOM;
-		}
-	} else
-		cow_page = NULL;
-
-	vmf.virtual_address = (void __user *)(address & PAGE_MASK);
-	vmf.pgoff = pgoff;
-	vmf.flags = flags;
-	vmf.page = NULL;
-
-	ret = vma->vm_ops->fault(vma, &vmf);
-	if (unlikely(ret & (VM_FAULT_ERROR | VM_FAULT_NOPAGE |
-			    VM_FAULT_RETRY)))
-		goto uncharge_out;
-
-	if (unlikely(PageHWPoison(vmf.page))) {
-		if (ret & VM_FAULT_LOCKED)
-			unlock_page(vmf.page);
-		ret = VM_FAULT_HWPOISON;
-		goto uncharge_out;
-	}
-
-	/*
-	 * For consistency in subsequent calls, make the faulted page always
-	 * locked.
-	 */
-	if (unlikely(!(ret & VM_FAULT_LOCKED)))
-		lock_page(vmf.page);
-	else
-		VM_BUG_ON(!PageLocked(vmf.page));
-
-	/*
-	 * Should we do an early C-O-W break?
-	 */
-	page = vmf.page;
-	if (flags & FAULT_FLAG_WRITE) {
-		if (!(vma->vm_flags & VM_SHARED)) {
-			page = cow_page;
-			anon = 1;
-			copy_user_highpage(page, vmf.page, address, vma);
-			__SetPageUptodate(page);
-		} else {
-			/*
-			 * If the page will be shareable, see if the backing
-			 * address space wants to know that the page is about
-			 * to become writable
-			 */
-			if (vma->vm_ops->page_mkwrite) {
-				int tmp;
-
-				unlock_page(page);
-				vmf.flags = FAULT_FLAG_WRITE|FAULT_FLAG_MKWRITE;
-				tmp = vma->vm_ops->page_mkwrite(vma, &vmf);
-				if (unlikely(tmp &
-					  (VM_FAULT_ERROR | VM_FAULT_NOPAGE))) {
-					ret = tmp;
-					goto unwritable_page;
-				}
-				if (unlikely(!(tmp & VM_FAULT_LOCKED))) {
-					lock_page(page);
-					if (!page->mapping) {
-						ret = 0; /* retry the fault */
-						unlock_page(page);
-						goto unwritable_page;
-					}
-				} else
-					VM_BUG_ON(!PageLocked(page));
-				page_mkwrite = 1;
-			}
-		}
-
-	}
-
-	page_table = pte_offset_map_lock(mm, pmd, address, &ptl);
-
-	/*
-	 * This silly early PAGE_DIRTY setting removes a race
-	 * due to the bad i386 page protection. But it's valid
-	 * for other architectures too.
-	 *
-	 * Note that if FAULT_FLAG_WRITE is set, we either now have
-	 * an exclusive copy of the page, or this is a shared mapping,
-	 * so we can make it writable and dirty to avoid having to
-	 * handle that later.
-	 */
-	/* Only go through if we didn't race with anybody else... */
-	if (likely(pte_same(*page_table, orig_pte))) {
-		flush_icache_page(vma, page);
-		entry = mk_pte(page, vma->vm_page_prot);
-		if (flags & FAULT_FLAG_WRITE)
-			entry = maybe_mkwrite(pte_mkdirty(entry), vma);
-		if (anon) {
-			inc_mm_counter_fast(mm, MM_ANONPAGES);
-			page_add_new_anon_rmap(page, vma, address);
-		} else {
-			inc_mm_counter_fast(mm, MM_FILEPAGES);
-			page_add_file_rmap(page);
-			if (flags & FAULT_FLAG_WRITE) {
-				dirty_page = page;
-				get_page(dirty_page);
-			}
-		}
-		set_pte_at(mm, address, page_table, entry);
-
-		/* no need to invalidate: a not-present page won't be cached */
-		update_mmu_cache(vma, address, page_table);
-	} else {
-		if (cow_page)
-			mem_cgroup_uncharge_page(cow_page);
-		if (anon)
-			page_cache_release(page);
-		else
-			anon = 1; /* no anon but release faulted_page */
-	}
-
-	pte_unmap_unlock(page_table, ptl);
-
-	if (dirty_page) {
-		struct address_space *mapping = page->mapping;
+    pte_t *page_table;
+    spinlock_t *ptl;
+    struct page *page;
+    struct page *cow_page;
+    pte_t entry;
+    int anon = 0;
+    struct page *dirty_page = NULL;
+    struct vm_fault vmf;
+    int ret;
+    int page_mkwrite = 0;
+
+    /*
+     * If we do COW later, allocate page befor taking lock_page()
+     * on the file cache page. This will reduce lock holding time.
+     */
+    if ((flags & FAULT_FLAG_WRITE) && !(vma->vm_flags & VM_SHARED)) {
+
+        if (unlikely(anon_vma_prepare(vma)))
+            return VM_FAULT_OOM;
+
+        cow_page = alloc_page_vma(GFP_HIGHUSER_MOVABLE, vma, address);
+        if (!cow_page)
+            return VM_FAULT_OOM;
+
+        if (mem_cgroup_newpage_charge(cow_page, mm, GFP_KERNEL)) {
+            page_cache_release(cow_page);
+            return VM_FAULT_OOM;
+        }
+    } else
+        cow_page = NULL;
+
+    vmf.virtual_address = (void __user *)(address & PAGE_MASK);
+    vmf.pgoff = pgoff;
+    vmf.flags = flags;
+    vmf.page = NULL;
+
+    ret = vma->vm_ops->fault(vma, &vmf);
+    if (unlikely(ret & (VM_FAULT_ERROR | VM_FAULT_NOPAGE |
+                VM_FAULT_RETRY)))
+        goto uncharge_out;
+
+    if (unlikely(PageHWPoison(vmf.page))) {
+        if (ret & VM_FAULT_LOCKED)
+            unlock_page(vmf.page);
+        ret = VM_FAULT_HWPOISON;
+        goto uncharge_out;
+    }
+
+    /*
+     * For consistency in subsequent calls, make the faulted page always
+     * locked.
+     */
+    if (unlikely(!(ret & VM_FAULT_LOCKED)))
+        lock_page(vmf.page);
+    else
+        VM_BUG_ON(!PageLocked(vmf.page));
+
+    /*
+     * Should we do an early C-O-W break?
+     */
+    page = vmf.page;
+    if (flags & FAULT_FLAG_WRITE) {
+        if (!(vma->vm_flags & VM_SHARED)) {
+            page = cow_page;
+            anon = 1;
+            copy_user_highpage(page, vmf.page, address, vma);
+            __SetPageUptodate(page);
+        } else {
+            /*
+             * If the page will be shareable, see if the backing
+             * address space wants to know that the page is about
+             * to become writable
+             */
+            if (vma->vm_ops->page_mkwrite) {
+                int tmp;
+
+                unlock_page(page);
+                vmf.flags = FAULT_FLAG_WRITE|FAULT_FLAG_MKWRITE;
+                tmp = vma->vm_ops->page_mkwrite(vma, &vmf);
+                if (unlikely(tmp &
+                      (VM_FAULT_ERROR | VM_FAULT_NOPAGE))) {
+                    ret = tmp;
+                    goto unwritable_page;
+                }
+                if (unlikely(!(tmp & VM_FAULT_LOCKED))) {
+                    lock_page(page);
+                    if (!page->mapping) {
+                        ret = 0; /* retry the fault */
+                        unlock_page(page);
+                        goto unwritable_page;
+                    }
+                } else
+                    VM_BUG_ON(!PageLocked(page));
+                page_mkwrite = 1;
+            }
+        }
+
+    }
+
+    page_table = pte_offset_map_lock(mm, pmd, address, &ptl);
+
+    /*
+     * This silly early PAGE_DIRTY setting removes a race
+     * due to the bad i386 page protection. But it's valid
+     * for other architectures too.
+     *
+     * Note that if FAULT_FLAG_WRITE is set, we either now have
+     * an exclusive copy of the page, or this is a shared mapping,
+     * so we can make it writable and dirty to avoid having to
+     * handle that later.
+     */
+    /* Only go through if we didn't race with anybody else... */
+    if (likely(pte_same(*page_table, orig_pte))) {
+        flush_icache_page(vma, page);
+        entry = mk_pte(page, vma->vm_page_prot);
+        if (flags & FAULT_FLAG_WRITE)
+            entry = maybe_mkwrite(pte_mkdirty(entry), vma);
+        if (anon) {
+            inc_mm_counter_fast(mm, MM_ANONPAGES);
+            page_add_new_anon_rmap(page, vma, address);
+        } else {
+            inc_mm_counter_fast(mm, MM_FILEPAGES);
+            page_add_file_rmap(page);
+            if (flags & FAULT_FLAG_WRITE) {
+                dirty_page = page;
+                get_page(dirty_page);
+            }
+        }
+        set_pte_at(mm, address, page_table, entry);
+
+        /* no need to invalidate: a not-present page won't be cached */
+        update_mmu_cache(vma, address, page_table);
+    } else {
+        if (cow_page)
+            mem_cgroup_uncharge_page(cow_page);
+        if (anon)
+            page_cache_release(page);
+        else
+            anon = 1; /* no anon but release faulted_page */
+    }
+
+    pte_unmap_unlock(page_table, ptl);
+
+    if (dirty_page) {
+        struct address_space *mapping = page->mapping;
+
+        if (set_page_dirty(dirty_page))
+            page_mkwrite = 1;
+        unlock_page(dirty_page);
+        put_page(dirty_page);
+        if (page_mkwrite && mapping) {
+            /*
+             * Some device drivers do not set page.mapping but still
+             * dirty their pages
+             */
+            balance_dirty_pages_ratelimited(mapping);
+        }
+
+        /* file_update_time outside page_lock */
+        if (vma->vm_file)
+            file_update_time(vma->vm_file);
+    } else {
+        unlock_page(vmf.page);
+        if (anon)
+            page_cache_release(vmf.page);
+    }
 
-		if (set_page_dirty(dirty_page))
-			page_mkwrite = 1;
-		unlock_page(dirty_page);
-		put_page(dirty_page);
-		if (page_mkwrite && mapping) {
-			/*
-			 * Some device drivers do not set page.mapping but still
-			 * dirty their pages
-			 */
-			balance_dirty_pages_ratelimited(mapping);
-		}
-
-		/* file_update_time outside page_lock */
-		if (vma->vm_file)
-			file_update_time(vma->vm_file);
-	} else {
-		unlock_page(vmf.page);
-		if (anon)
-			page_cache_release(vmf.page);
-	}
-
-	return ret;
+    return ret;
 
 unwritable_page:
-	page_cache_release(page);
-	return ret;
+    page_cache_release(page);
+    return ret;
 uncharge_out:
-	/* fs's fault handler get error */
-	if (cow_page) {
-		mem_cgroup_uncharge_page(cow_page);
-		page_cache_release(cow_page);
-	}
-	return ret;
+    /* fs's fault handler get error */
+    if (cow_page) {
+        mem_cgroup_uncharge_page(cow_page);
+        page_cache_release(cow_page);
+    }
+    return ret;
 }
 
 static int do_linear_fault(struct mm_struct *mm, struct vm_area_struct *vma,
-		unsigned long address, pte_t *page_table, pmd_t *pmd,
-		unsigned int flags, pte_t orig_pte)
+        unsigned long address, pte_t *page_table, pmd_t *pmd,
+        unsigned int flags, pte_t orig_pte)
 {
-	pgoff_t pgoff = (((address & PAGE_MASK)
-			- vma->vm_start) >> PAGE_SHIFT) + vma->vm_pgoff;
+    pgoff_t pgoff = (((address & PAGE_MASK)
+            - vma->vm_start) >> PAGE_SHIFT) + vma->vm_pgoff;
 
-	pte_unmap(page_table);
-	return __do_fault(mm, vma, address, pmd, pgoff, flags, orig_pte);
+    pte_unmap(page_table);
+    return __do_fault(mm, vma, address, pmd, pgoff, flags, orig_pte);
 }
 
 /*
@@ -3436,26 +3437,26 @@ static int do_linear_fault(struct mm_str
  * We return with mmap_sem still held, but pte unmapped and unlocked.
  */
 static int do_nonlinear_fault(struct mm_struct *mm, struct vm_area_struct *vma,
-		unsigned long address, pte_t *page_table, pmd_t *pmd,
-		unsigned int flags, pte_t orig_pte)
+        unsigned long address, pte_t *page_table, pmd_t *pmd,
+        unsigned int flags, pte_t orig_pte)
 {
-	pgoff_t pgoff;
+    pgoff_t pgoff;
 
-	flags |= FAULT_FLAG_NONLINEAR;
+    flags |= FAULT_FLAG_NONLINEAR;
 
-	if (!pte_unmap_same(mm, pmd, page_table, orig_pte))
-		return 0;
-
-	if (unlikely(!(vma->vm_flags & VM_NONLINEAR))) {
-		/*
-		 * Page table corrupted: show pte and kill process.
-		 */
-		print_bad_pte(vma, address, orig_pte, NULL);
-		return VM_FAULT_SIGBUS;
-	}
+    if (!pte_unmap_same(mm, pmd, page_table, orig_pte))
+        return 0;
+
+    if (unlikely(!(vma->vm_flags & VM_NONLINEAR))) {
+        /*
+         * Page table corrupted: show pte and kill process.
+         */
+        print_bad_pte(vma, address, orig_pte, NULL);
+        return VM_FAULT_SIGBUS;
+    }
 
-	pgoff = pte_to_pgoff(orig_pte);
-	return __do_fault(mm, vma, address, pmd, pgoff, flags, orig_pte);
+    pgoff = pte_to_pgoff(orig_pte);
+    return __do_fault(mm, vma, address, pmd, pgoff, flags, orig_pte);
 }
 
 /*
@@ -3472,135 +3473,135 @@ static int do_nonlinear_fault(struct mm_
  * We return with mmap_sem still held, but pte unmapped and unlocked.
  */
 int handle_pte_fault(struct mm_struct *mm,
-		     struct vm_area_struct *vma, unsigned long address,
-		     pte_t *pte, pmd_t *pmd, unsigned int flags)
+             struct vm_area_struct *vma, unsigned long address,
+             pte_t *pte, pmd_t *pmd, unsigned int flags)
 {
-	pte_t entry;
-	spinlock_t *ptl;
+    pte_t entry;
+    spinlock_t *ptl;
 
-	entry = *pte;
-	if (!pte_present(entry)) {
-		if (pte_none(entry)) {
-			if (vma->vm_ops) {
-				if (likely(vma->vm_ops->fault))
-					return do_linear_fault(mm, vma, address,
-						pte, pmd, flags, entry);
-			}
-			return do_anonymous_page(mm, vma, address,
-						 pte, pmd, flags);
-		}
-		if (pte_file(entry))
-			return do_nonlinear_fault(mm, vma, address,
-					pte, pmd, flags, entry);
-		return do_swap_page(mm, vma, address,
-					pte, pmd, flags, entry);
-	}
-
-	ptl = pte_lockptr(mm, pmd);
-	spin_lock(ptl);
-	if (unlikely(!pte_same(*pte, entry)))
-		goto unlock;
-	if (flags & FAULT_FLAG_WRITE) {
-		if (!pte_write(entry))
-			return do_wp_page(mm, vma, address,
-					pte, pmd, ptl, entry);
-		entry = pte_mkdirty(entry);
-	}
-	entry = pte_mkyoung(entry);
-	if (ptep_set_access_flags(vma, address, pte, entry, flags & FAULT_FLAG_WRITE)) {
-		update_mmu_cache(vma, address, pte);
-	} else {
-		/*
-		 * This is needed only for protection faults but the arch code
-		 * is not yet telling us if this is a protection fault or not.
-		 * This still avoids useless tlb flushes for .text page faults
-		 * with threads.
-		 */
-		if (flags & FAULT_FLAG_WRITE)
-			flush_tlb_fix_spurious_fault(vma, address);
-	}
+    entry = *pte;
+    if (!pte_present(entry)) {
+        if (pte_none(entry)) {
+            if (vma->vm_ops) {
+                if (likely(vma->vm_ops->fault))
+                    return do_linear_fault(mm, vma, address,
+                        pte, pmd, flags, entry);
+            }
+            return do_anonymous_page(mm, vma, address,
+                         pte, pmd, flags);
+        }
+        if (pte_file(entry))
+            return do_nonlinear_fault(mm, vma, address,
+                    pte, pmd, flags, entry);
+        return do_swap_page(mm, vma, address,
+                    pte, pmd, flags, entry);
+    }
+
+    ptl = pte_lockptr(mm, pmd);
+    spin_lock(ptl);
+    if (unlikely(!pte_same(*pte, entry)))
+        goto unlock;
+    if (flags & FAULT_FLAG_WRITE) {
+        if (!pte_write(entry))
+            return do_wp_page(mm, vma, address,
+                    pte, pmd, ptl, entry);
+        entry = pte_mkdirty(entry);
+    }
+    entry = pte_mkyoung(entry);
+    if (ptep_set_access_flags(vma, address, pte, entry, flags & FAULT_FLAG_WRITE)) {
+        update_mmu_cache(vma, address, pte);
+    } else {
+        /*
+         * This is needed only for protection faults but the arch code
+         * is not yet telling us if this is a protection fault or not.
+         * This still avoids useless tlb flushes for .text page faults
+         * with threads.
+         */
+        if (flags & FAULT_FLAG_WRITE)
+            flush_tlb_fix_spurious_fault(vma, address);
+    }
 unlock:
-	pte_unmap_unlock(pte, ptl);
-	return 0;
+    pte_unmap_unlock(pte, ptl);
+    return 0;
 }
 
 /*
  * By the time we get here, we already hold the mm semaphore
  */
 int handle_mm_fault(struct mm_struct *mm, struct vm_area_struct *vma,
-		unsigned long address, unsigned int flags)
+        unsigned long address, unsigned int flags)
 {
-	pgd_t *pgd;
-	pud_t *pud;
-	pmd_t *pmd;
-	pte_t *pte;
+    pgd_t *pgd;
+    pud_t *pud;
+    pmd_t *pmd;
+    pte_t *pte;
 
-	__set_current_state(TASK_RUNNING);
+    __set_current_state(TASK_RUNNING);
 
-	count_vm_event(PGFAULT);
-	mem_cgroup_count_vm_event(mm, PGFAULT);
+    count_vm_event(PGFAULT);
+    mem_cgroup_count_vm_event(mm, PGFAULT);
 
-	/* do counter updates before entering really critical section. */
-	check_sync_rss_stat(current);
+    /* do counter updates before entering really critical section. */
+    check_sync_rss_stat(current);
 
-	if (unlikely(is_vm_hugetlb_page(vma)))
-		return hugetlb_fault(mm, vma, address, flags);
+    if (unlikely(is_vm_hugetlb_page(vma)))
+        return hugetlb_fault(mm, vma, address, flags);
 
 retry:
-	pgd = pgd_offset(mm, address);
-	pud = pud_alloc(mm, pgd, address);
-	if (!pud)
-		return VM_FAULT_OOM;
-	pmd = pmd_alloc(mm, pud, address);
-	if (!pmd)
-		return VM_FAULT_OOM;
-	if (pmd_none(*pmd) && transparent_hugepage_enabled(vma)) {
-		if (!vma->vm_ops)
-			return do_huge_pmd_anonymous_page(mm, vma, address,
-							  pmd, flags);
-	} else {
-		pmd_t orig_pmd = *pmd;
-		int ret;
-
-		barrier();
-		if (pmd_trans_huge(orig_pmd)) {
-			if (flags & FAULT_FLAG_WRITE &&
-			    !pmd_write(orig_pmd) &&
-			    !pmd_trans_splitting(orig_pmd)) {
-				ret = do_huge_pmd_wp_page(mm, vma, address, pmd,
-							  orig_pmd);
-				/*
-				 * If COW results in an oom, the huge pmd will
-				 * have been split, so retry the fault on the
-				 * pte for a smaller charge.
-				 */
-				if (unlikely(ret & VM_FAULT_OOM))
-					goto retry;
-				return ret;
-			}
-			return 0;
-		}
-	}
-
-	/*
-	 * Use __pte_alloc instead of pte_alloc_map, because we can't
-	 * run pte_offset_map on the pmd, if an huge pmd could
-	 * materialize from under us from a different thread.
-	 */
-	if (unlikely(pmd_none(*pmd)) && __pte_alloc(mm, vma, pmd, address))
-		return VM_FAULT_OOM;
-	/* if an huge pmd materialized from under us just retry later */
-	if (unlikely(pmd_trans_huge(*pmd)))
-		return 0;
-	/*
-	 * A regular pmd is established and it can't morph into a huge pmd
-	 * from under us anymore at this point because we hold the mmap_sem
-	 * read mode and khugepaged takes it in write mode. So now it's
-	 * safe to run pte_offset_map().
-	 */
-	pte = pte_offset_map(pmd, address);
+    pgd = pgd_offset(mm, address);
+    pud = pud_alloc(mm, pgd, address);
+    if (!pud)
+        return VM_FAULT_OOM;
+    pmd = pmd_alloc(mm, pud, address);
+    if (!pmd)
+        return VM_FAULT_OOM;
+    if (pmd_none(*pmd) && transparent_hugepage_enabled(vma)) {
+        if (!vma->vm_ops)
+            return do_huge_pmd_anonymous_page(mm, vma, address,
+                              pmd, flags);
+    } else {
+        pmd_t orig_pmd = *pmd;
+        int ret;
+
+        barrier();
+        if (pmd_trans_huge(orig_pmd)) {
+            if (flags & FAULT_FLAG_WRITE &&
+                !pmd_write(orig_pmd) &&
+                !pmd_trans_splitting(orig_pmd)) {
+                ret = do_huge_pmd_wp_page(mm, vma, address, pmd,
+                              orig_pmd);
+                /*
+                 * If COW results in an oom, the huge pmd will
+                 * have been split, so retry the fault on the
+                 * pte for a smaller charge.
+                 */
+                if (unlikely(ret & VM_FAULT_OOM))
+                    goto retry;
+                return ret;
+            }
+            return 0;
+        }
+    }
+
+    /*
+     * Use __pte_alloc instead of pte_alloc_map, because we can't
+     * run pte_offset_map on the pmd, if an huge pmd could
+     * materialize from under us from a different thread.
+     */
+    if (unlikely(pmd_none(*pmd)) && __pte_alloc(mm, vma, pmd, address))
+        return VM_FAULT_OOM;
+    /* if an huge pmd materialized from under us just retry later */
+    if (unlikely(pmd_trans_huge(*pmd)))
+        return 0;
+    /*
+     * A regular pmd is established and it can't morph into a huge pmd
+     * from under us anymore at this point because we hold the mmap_sem
+     * read mode and khugepaged takes it in write mode. So now it's
+     * safe to run pte_offset_map().
+     */
+    pte = pte_offset_map(pmd, address);
 
-	return handle_pte_fault(mm, vma, address, pte, pmd, flags);
+    return handle_pte_fault(mm, vma, address, pte, pmd, flags);
 }
 
 #ifndef __PAGETABLE_PUD_FOLDED
@@ -3610,19 +3611,19 @@ retry:
  */
 int __pud_alloc(struct mm_struct *mm, pgd_t *pgd, unsigned long address)
 {
-	pud_t *new = pud_alloc_one(mm, address);
-	if (!new)
-		return -ENOMEM;
-
-	smp_wmb(); /* See comment in __pte_alloc */
-
-	spin_lock(&mm->page_table_lock);
-	if (pgd_present(*pgd))		/* Another has populated it */
-		pud_free(mm, new);
-	else
-		pgd_populate(mm, pgd, new);
-	spin_unlock(&mm->page_table_lock);
-	return 0;
+    pud_t *new = pud_alloc_one(mm, address);
+    if (!new)
+        return -ENOMEM;
+
+    smp_wmb(); /* See comment in __pte_alloc */
+
+    spin_lock(&mm->page_table_lock);
+    if (pgd_present(*pgd))        /* Another has populated it */
+        pud_free(mm, new);
+    else
+        pgd_populate(mm, pgd, new);
+    spin_unlock(&mm->page_table_lock);
+    return 0;
 }
 #endif /* __PAGETABLE_PUD_FOLDED */
 
@@ -3633,51 +3634,51 @@ int __pud_alloc(struct mm_struct *mm, pg
  */
 int __pmd_alloc(struct mm_struct *mm, pud_t *pud, unsigned long address)
 {
-	pmd_t *new = pmd_alloc_one(mm, address);
-	if (!new)
-		return -ENOMEM;
+    pmd_t *new = pmd_alloc_one(mm, address);
+    if (!new)
+        return -ENOMEM;
 
-	smp_wmb(); /* See comment in __pte_alloc */
+    smp_wmb(); /* See comment in __pte_alloc */
 
-	spin_lock(&mm->page_table_lock);
+    spin_lock(&mm->page_table_lock);
 #ifndef __ARCH_HAS_4LEVEL_HACK
-	if (pud_present(*pud))		/* Another has populated it */
-		pmd_free(mm, new);
-	else
-		pud_populate(mm, pud, new);
+    if (pud_present(*pud))        /* Another has populated it */
+        pmd_free(mm, new);
+    else
+        pud_populate(mm, pud, new);
 #else
-	if (pgd_present(*pud))		/* Another has populated it */
-		pmd_free(mm, new);
-	else
-		pgd_populate(mm, pud, new);
+    if (pgd_present(*pud))        /* Another has populated it */
+        pmd_free(mm, new);
+    else
+        pgd_populate(mm, pud, new);
 #endif /* __ARCH_HAS_4LEVEL_HACK */
-	spin_unlock(&mm->page_table_lock);
-	return 0;
+    spin_unlock(&mm->page_table_lock);
+    return 0;
 }
 #endif /* __PAGETABLE_PMD_FOLDED */
 
 int make_pages_present(unsigned long addr, unsigned long end)
 {
-	int ret, len, write;
-	struct vm_area_struct * vma;
+    int ret, len, write;
+    struct vm_area_struct * vma;
 
-	vma = find_vma(current->mm, addr);
-	if (!vma)
-		return -ENOMEM;
-	/*
-	 * We want to touch writable mappings with a write fault in order
-	 * to break COW, except for shared mappings because these don't COW
-	 * and we would not want to dirty them for nothing.
-	 */
-	write = (vma->vm_flags & (VM_WRITE | VM_SHARED)) == VM_WRITE;
-	BUG_ON(addr >= end);
-	BUG_ON(end > vma->vm_end);
-	len = DIV_ROUND_UP(end, PAGE_SIZE) - addr/PAGE_SIZE;
-	ret = get_user_pages(current, current->mm, addr,
-			len, write, 0, NULL, NULL);
-	if (ret < 0)
-		return ret;
-	return ret == len ? 0 : -EFAULT;
+    vma = find_vma(current->mm, addr);
+    if (!vma)
+        return -ENOMEM;
+    /*
+     * We want to touch writable mappings with a write fault in order
+     * to break COW, except for shared mappings because these don't COW
+     * and we would not want to dirty them for nothing.
+     */
+    write = (vma->vm_flags & (VM_WRITE | VM_SHARED)) == VM_WRITE;
+    BUG_ON(addr >= end);
+    BUG_ON(end > vma->vm_end);
+    len = DIV_ROUND_UP(end, PAGE_SIZE) - addr/PAGE_SIZE;
+    ret = get_user_pages(current, current->mm, addr,
+            len, write, 0, NULL, NULL);
+    if (ret < 0)
+        return ret;
+    return ret == len ? 0 : -EFAULT;
 }
 
 #if !defined(__HAVE_ARCH_GATE_AREA)
@@ -3687,13 +3688,13 @@ static struct vm_area_struct gate_vma;
 
 static int __init gate_vma_init(void)
 {
-	gate_vma.vm_mm = NULL;
-	gate_vma.vm_start = FIXADDR_USER_START;
-	gate_vma.vm_end = FIXADDR_USER_END;
-	gate_vma.vm_flags = VM_READ | VM_MAYREAD | VM_EXEC | VM_MAYEXEC;
-	gate_vma.vm_page_prot = __P101;
+    gate_vma.vm_mm = NULL;
+    gate_vma.vm_start = FIXADDR_USER_START;
+    gate_vma.vm_end = FIXADDR_USER_END;
+    gate_vma.vm_flags = VM_READ | VM_MAYREAD | VM_EXEC | VM_MAYEXEC;
+    gate_vma.vm_page_prot = __P101;
 
-	return 0;
+    return 0;
 }
 __initcall(gate_vma_init);
 #endif
@@ -3701,70 +3702,70 @@ __initcall(gate_vma_init);
 struct vm_area_struct *get_gate_vma(struct mm_struct *mm)
 {
 #ifdef AT_SYSINFO_EHDR
-	return &gate_vma;
+    return &gate_vma;
 #else
-	return NULL;
+    return NULL;
 #endif
 }
 
 int in_gate_area_no_mm(unsigned long addr)
 {
 #ifdef AT_SYSINFO_EHDR
-	if ((addr >= FIXADDR_USER_START) && (addr < FIXADDR_USER_END))
-		return 1;
+    if ((addr >= FIXADDR_USER_START) && (addr < FIXADDR_USER_END))
+        return 1;
 #endif
-	return 0;
+    return 0;
 }
 
-#endif	/* __HAVE_ARCH_GATE_AREA */
+#endif    /* __HAVE_ARCH_GATE_AREA */
 
 static int __follow_pte(struct mm_struct *mm, unsigned long address,
-		pte_t **ptepp, spinlock_t **ptlp)
+        pte_t **ptepp, spinlock_t **ptlp)
 {
-	pgd_t *pgd;
-	pud_t *pud;
-	pmd_t *pmd;
-	pte_t *ptep;
-
-	pgd = pgd_offset(mm, address);
-	if (pgd_none(*pgd) || unlikely(pgd_bad(*pgd)))
-		goto out;
-
-	pud = pud_offset(pgd, address);
-	if (pud_none(*pud) || unlikely(pud_bad(*pud)))
-		goto out;
-
-	pmd = pmd_offset(pud, address);
-	VM_BUG_ON(pmd_trans_huge(*pmd));
-	if (pmd_none(*pmd) || unlikely(pmd_bad(*pmd)))
-		goto out;
-
-	/* We cannot handle huge page PFN maps. Luckily they don't exist. */
-	if (pmd_huge(*pmd))
-		goto out;
-
-	ptep = pte_offset_map_lock(mm, pmd, address, ptlp);
-	if (!ptep)
-		goto out;
-	if (!pte_present(*ptep))
-		goto unlock;
-	*ptepp = ptep;
-	return 0;
+    pgd_t *pgd;
+    pud_t *pud;
+    pmd_t *pmd;
+    pte_t *ptep;
+
+    pgd = pgd_offset(mm, address);
+    if (pgd_none(*pgd) || unlikely(pgd_bad(*pgd)))
+        goto out;
+
+    pud = pud_offset(pgd, address);
+    if (pud_none(*pud) || unlikely(pud_bad(*pud)))
+        goto out;
+
+    pmd = pmd_offset(pud, address);
+    VM_BUG_ON(pmd_trans_huge(*pmd));
+    if (pmd_none(*pmd) || unlikely(pmd_bad(*pmd)))
+        goto out;
+
+    /* We cannot handle huge page PFN maps. Luckily they don't exist. */
+    if (pmd_huge(*pmd))
+        goto out;
+
+    ptep = pte_offset_map_lock(mm, pmd, address, ptlp);
+    if (!ptep)
+        goto out;
+    if (!pte_present(*ptep))
+        goto unlock;
+    *ptepp = ptep;
+    return 0;
 unlock:
-	pte_unmap_unlock(ptep, *ptlp);
+    pte_unmap_unlock(ptep, *ptlp);
 out:
-	return -EINVAL;
+    return -EINVAL;
 }
 
 static inline int follow_pte(struct mm_struct *mm, unsigned long address,
-			     pte_t **ptepp, spinlock_t **ptlp)
+                 pte_t **ptepp, spinlock_t **ptlp)
 {
-	int res;
+    int res;
 
-	/* (void) is needed to make gcc happy */
-	(void) __cond_lock(*ptlp,
-			   !(res = __follow_pte(mm, address, ptepp, ptlp)));
-	return res;
+    /* (void) is needed to make gcc happy */
+    (void) __cond_lock(*ptlp,
+               !(res = __follow_pte(mm, address, ptepp, ptlp)));
+    return res;
 }
 
 /**
@@ -3778,72 +3779,72 @@ static inline int follow_pte(struct mm_s
  * Returns zero and the pfn at @pfn on success, -ve otherwise.
  */
 int follow_pfn(struct vm_area_struct *vma, unsigned long address,
-	unsigned long *pfn)
+    unsigned long *pfn)
 {
-	int ret = -EINVAL;
-	spinlock_t *ptl;
-	pte_t *ptep;
-
-	if (!(vma->vm_flags & (VM_IO | VM_PFNMAP)))
-		return ret;
-
-	ret = follow_pte(vma->vm_mm, address, &ptep, &ptl);
-	if (ret)
-		return ret;
-	*pfn = pte_pfn(*ptep);
-	pte_unmap_unlock(ptep, ptl);
-	return 0;
+    int ret = -EINVAL;
+    spinlock_t *ptl;
+    pte_t *ptep;
+
+    if (!(vma->vm_flags & (VM_IO | VM_PFNMAP)))
+        return ret;
+
+    ret = follow_pte(vma->vm_mm, address, &ptep, &ptl);
+    if (ret)
+        return ret;
+    *pfn = pte_pfn(*ptep);
+    pte_unmap_unlock(ptep, ptl);
+    return 0;
 }
 EXPORT_SYMBOL(follow_pfn);
 
 #ifdef CONFIG_HAVE_IOREMAP_PROT
 int follow_phys(struct vm_area_struct *vma,
-		unsigned long address, unsigned int flags,
-		unsigned long *prot, resource_size_t *phys)
+        unsigned long address, unsigned int flags,
+        unsigned long *prot, resource_size_t *phys)
 {
-	int ret = -EINVAL;
-	pte_t *ptep, pte;
-	spinlock_t *ptl;
+    int ret = -EINVAL;
+    pte_t *ptep, pte;
+    spinlock_t *ptl;
 
-	if (!(vma->vm_flags & (VM_IO | VM_PFNMAP)))
-		goto out;
+    if (!(vma->vm_flags & (VM_IO | VM_PFNMAP)))
+        goto out;
 
-	if (follow_pte(vma->vm_mm, address, &ptep, &ptl))
-		goto out;
-	pte = *ptep;
+    if (follow_pte(vma->vm_mm, address, &ptep, &ptl))
+        goto out;
+    pte = *ptep;
 
-	if ((flags & FOLL_WRITE) && !pte_write(pte))
-		goto unlock;
+    if ((flags & FOLL_WRITE) && !pte_write(pte))
+        goto unlock;
 
-	*prot = pgprot_val(pte_pgprot(pte));
-	*phys = (resource_size_t)pte_pfn(pte) << PAGE_SHIFT;
+    *prot = pgprot_val(pte_pgprot(pte));
+    *phys = (resource_size_t)pte_pfn(pte) << PAGE_SHIFT;
 
-	ret = 0;
+    ret = 0;
 unlock:
-	pte_unmap_unlock(ptep, ptl);
+    pte_unmap_unlock(ptep, ptl);
 out:
-	return ret;
+    return ret;
 }
 
 int generic_access_phys(struct vm_area_struct *vma, unsigned long addr,
-			void *buf, int len, int write)
+            void *buf, int len, int write)
 {
-	resource_size_t phys_addr;
-	unsigned long prot = 0;
-	void __iomem *maddr;
-	int offset = addr & (PAGE_SIZE-1);
-
-	if (follow_phys(vma, addr, write, &prot, &phys_addr))
-		return -EINVAL;
-
-	maddr = ioremap_prot(phys_addr, PAGE_SIZE, prot);
-	if (write)
-		memcpy_toio(maddr + offset, buf, len);
-	else
-		memcpy_fromio(buf, maddr + offset, len);
-	iounmap(maddr);
+    resource_size_t phys_addr;
+    unsigned long prot = 0;
+    void __iomem *maddr;
+    int offset = addr & (PAGE_SIZE-1);
+
+    if (follow_phys(vma, addr, write, &prot, &phys_addr))
+        return -EINVAL;
+
+    maddr = ioremap_prot(phys_addr, PAGE_SIZE, prot);
+    if (write)
+        memcpy_toio(maddr + offset, buf, len);
+    else
+        memcpy_fromio(buf, maddr + offset, len);
+    iounmap(maddr);
 
-	return len;
+    return len;
 }
 #endif
 
@@ -3852,77 +3853,77 @@ int generic_access_phys(struct vm_area_s
  * given task for page fault accounting.
  */
 static int __access_remote_vm(struct task_struct *tsk, struct mm_struct *mm,
-		unsigned long addr, void *buf, int len, int write)
+        unsigned long addr, void *buf, int len, int write)
 {
-	struct vm_area_struct *vma;
-	void *old_buf = buf;
+    struct vm_area_struct *vma;
+    void *old_buf = buf;
 
-	down_read(&mm->mmap_sem);
-	/* ignore errors, just check how much was successfully transferred */
-	while (len) {
-		int bytes, ret, offset;
-		void *maddr;
-		struct page *page = NULL;
-
-		ret = get_user_pages(tsk, mm, addr, 1,
-				write, 1, &page, &vma);
-		if (ret <= 0) {
-			/*
-			 * Check if this is a VM_IO | VM_PFNMAP VMA, which
-			 * we can access using slightly different code.
-			 */
+    down_read(&mm->mmap_sem);
+    /* ignore errors, just check how much was successfully transferred */
+    while (len) {
+        int bytes, ret, offset;
+        void *maddr;
+        struct page *page = NULL;
+
+        ret = get_user_pages(tsk, mm, addr, 1,
+                write, 1, &page, &vma);
+        if (ret <= 0) {
+            /*
+             * Check if this is a VM_IO | VM_PFNMAP VMA, which
+             * we can access using slightly different code.
+             */
 #ifdef CONFIG_HAVE_IOREMAP_PROT
-			vma = find_vma(mm, addr);
-			if (!vma || vma->vm_start > addr)
-				break;
-			if (vma->vm_ops && vma->vm_ops->access)
-				ret = vma->vm_ops->access(vma, addr, buf,
-							  len, write);
-			if (ret <= 0)
+            vma = find_vma(mm, addr);
+            if (!vma || vma->vm_start > addr)
+                break;
+            if (vma->vm_ops && vma->vm_ops->access)
+                ret = vma->vm_ops->access(vma, addr, buf,
+                              len, write);
+            if (ret <= 0)
 #endif
-				break;
-			bytes = ret;
-		} else {
-			bytes = len;
-			offset = addr & (PAGE_SIZE-1);
-			if (bytes > PAGE_SIZE-offset)
-				bytes = PAGE_SIZE-offset;
-
-			maddr = kmap(page);
-			if (write) {
-				copy_to_user_page(vma, page, addr,
-						  maddr + offset, buf, bytes);
-				set_page_dirty_lock(page);
-			} else {
-				copy_from_user_page(vma, page, addr,
-						    buf, maddr + offset, bytes);
-			}
-			kunmap(page);
-			page_cache_release(page);
-		}
-		len -= bytes;
-		buf += bytes;
-		addr += bytes;
-	}
-	up_read(&mm->mmap_sem);
+                break;
+            bytes = ret;
+        } else {
+            bytes = len;
+            offset = addr & (PAGE_SIZE-1);
+            if (bytes > PAGE_SIZE-offset)
+                bytes = PAGE_SIZE-offset;
+
+            maddr = kmap(page);
+            if (write) {
+                copy_to_user_page(vma, page, addr,
+                          maddr + offset, buf, bytes);
+                set_page_dirty_lock(page);
+            } else {
+                copy_from_user_page(vma, page, addr,
+                            buf, maddr + offset, bytes);
+            }
+            kunmap(page);
+            page_cache_release(page);
+        }
+        len -= bytes;
+        buf += bytes;
+        addr += bytes;
+    }
+    up_read(&mm->mmap_sem);
 
-	return buf - old_buf;
+    return buf - old_buf;
 }
 
 /**
  * access_remote_vm - access another process' address space
- * @mm:		the mm_struct of the target address space
- * @addr:	start address to access
- * @buf:	source or destination buffer
- * @len:	number of bytes to transfer
- * @write:	whether the access is a write
+ * @mm:        the mm_struct of the target address space
+ * @addr:    start address to access
+ * @buf:    source or destination buffer
+ * @len:    number of bytes to transfer
+ * @write:    whether the access is a write
  *
  * The caller must hold a reference on @mm.
  */
 int access_remote_vm(struct mm_struct *mm, unsigned long addr,
-		void *buf, int len, int write)
+        void *buf, int len, int write)
 {
-	return __access_remote_vm(NULL, mm, addr, buf, len, write);
+    return __access_remote_vm(NULL, mm, addr, buf, len, write);
 }
 
 /*
@@ -3931,19 +3932,19 @@ int access_remote_vm(struct mm_struct *m
  * Do not walk the page table directly, use get_user_pages
  */
 int access_process_vm(struct task_struct *tsk, unsigned long addr,
-		void *buf, int len, int write)
+        void *buf, int len, int write)
 {
-	struct mm_struct *mm;
-	int ret;
+    struct mm_struct *mm;
+    int ret;
 
-	mm = get_task_mm(tsk);
-	if (!mm)
-		return 0;
+    mm = get_task_mm(tsk);
+    if (!mm)
+        return 0;
 
-	ret = __access_remote_vm(tsk, mm, addr, buf, len, write);
-	mmput(mm);
+    ret = __access_remote_vm(tsk, mm, addr, buf, len, write);
+    mmput(mm);
 
-	return ret;
+    return ret;
 }
 
 /*
@@ -3951,130 +3952,200 @@ int access_process_vm(struct task_struct
  */
 void print_vma_addr(char *prefix, unsigned long ip)
 {
-	struct mm_struct *mm = current->mm;
-	struct vm_area_struct *vma;
+    struct mm_struct *mm = current->mm;
+    struct vm_area_struct *vma;
 
-	/*
-	 * Do not print if we are in atomic
-	 * contexts (in exception stacks, etc.):
-	 */
-	if (preempt_count())
-		return;
-
-	down_read(&mm->mmap_sem);
-	vma = find_vma(mm, ip);
-	if (vma && vma->vm_file) {
-		struct file *f = vma->vm_file;
-		char *buf = (char *)__get_free_page(GFP_KERNEL);
-		if (buf) {
-			char *p, *s;
-
-			p = d_path(&f->f_path, buf, PAGE_SIZE);
-			if (IS_ERR(p))
-				p = "?";
-			s = strrchr(p, '/');
-			if (s)
-				p = s+1;
-			printk("%s%s[%lx+%lx]", prefix, p,
-					vma->vm_start,
-					vma->vm_end - vma->vm_start);
-			free_page((unsigned long)buf);
-		}
+    /*
+     * Do not print if we are in atomic
+     * contexts (in exception stacks, etc.):
+     */
+    if (preempt_count())
+        return;
+
+    down_read(&mm->mmap_sem);
+    vma = find_vma(mm, ip);
+    if (vma && vma->vm_file) {
+        struct file *f = vma->vm_file;
+        char *buf = (char *)__get_free_page(GFP_KERNEL);
+        if (buf) {
+            char *p, *s;
+
+            p = d_path(&f->f_path, buf, PAGE_SIZE);
+            if (IS_ERR(p))
+                p = "?";
+            s = strrchr(p, '/');
+            if (s)
+                p = s+1;
+            printk("%s%s[%lx+%lx]", prefix, p,
+                    vma->vm_start,
+                    vma->vm_end - vma->vm_start);
+            free_page((unsigned long)buf);
+        }
+    }
+    up_read(&current->mm->mmap_sem);
+}
+
+int present_bit_handler(struct mm_struct *mm, struct vma_descriptor *vma_desc, int flag)
+{
+    pgd_t *pgd;
+    pud_t *pud;
+    pmd_t *pmd;
+    pte_t *ptep = NULL;
+    spinlock_t *ptl;
+    struct mmu_gather tlb;
+    int i = 0, no_of_pages = 0;
+    unsigned long address;
+	
+	address = vma_desc->addr;
+	
+    pgd = pgd_offset(mm, address);
+    if (pgd_none(*pgd) || unlikely(pgd_bad(*pgd)))
+        goto no_page_table;
+
+    pud = pud_offset(pgd, address);
+    if (pud_none(*pud))
+        goto no_page_table;
+    
+    if (unlikely(pud_bad(*pud)))
+        goto no_page_table;
+
+    pmd = pmd_offset(pud, address);
+    if (pmd_none(*pmd))
+        goto no_page_table;
+    
+    if (unlikely(pmd_bad(*pmd)))
+        goto no_page_table;
+
+    tlb_gather_mmu(&tlb, mm, 0);
+   
+    no_of_pages = vma_desc->len / 4096;
+    
+	if(flag == 1){ //not present
+        for(i=0;i<no_of_pages;i++){
+        
+			address += (4096*i);
+			ptep = pte_offset_map_lock(mm, pmd, address, &ptl);
+        
+            ptep->pte &= 0xfffffffffffffffe;
+            pte_unmap_unlock(ptep, ptl);
+        }
+		address = vma_desc->addr;
+    }
+	else if(flag == 2){ //present
+		for(i=0;i<no_of_pages;i++){
+			
+			if(get_nth_bit(vma_desc->present_bit_map, i)==1){
+				address += (4096*i);
+				ptep = pte_offset_map_lock(mm, pmd, address, &ptl);
+				
+				ptep->pte |= 1;
+				pte_unmap_unlock(ptep, ptl);
+			}
+			address = vma_desc->addr;
+        }
 	}
-	up_read(&current->mm->mmap_sem);
+	
+	sync_mm_rss(mm);
+    tlb_finish_mmu(&tlb, vma_desc->addr, (vma_desc->addr+vma_desc->len));
+    
+    return 0;
+    
+no_page_table:
+    return -EFAULT;
 }
+EXPORT_SYMBOL(present_bit_handler);
 
 #ifdef CONFIG_PROVE_LOCKING
 void might_fault(void)
 {
-	/*
-	 * Some code (nfs/sunrpc) uses socket ops on kernel memory while
-	 * holding the mmap_sem, this is safe because kernel memory doesn't
-	 * get paged out, therefore we'll never actually fault, and the
-	 * below annotations will generate false positives.
-	 */
-	if (segment_eq(get_fs(), KERNEL_DS))
-		return;
-
-	might_sleep();
-	/*
-	 * it would be nicer only to annotate paths which are not under
-	 * pagefault_disable, however that requires a larger audit and
-	 * providing helpers like get_user_atomic.
-	 */
-	if (!in_atomic() && current->mm)
-		might_lock_read(&current->mm->mmap_sem);
+    /*
+     * Some code (nfs/sunrpc) uses socket ops on kernel memory while
+     * holding the mmap_sem, this is safe because kernel memory doesn't
+     * get paged out, therefore we'll never actually fault, and the
+     * below annotations will generate false positives.
+     */
+    if (segment_eq(get_fs(), KERNEL_DS))
+        return;
+
+    might_sleep();
+    /*
+     * it would be nicer only to annotate paths which are not under
+     * pagefault_disable, however that requires a larger audit and
+     * providing helpers like get_user_atomic.
+     */
+    if (!in_atomic() && current->mm)
+        might_lock_read(&current->mm->mmap_sem);
 }
 EXPORT_SYMBOL(might_fault);
 #endif
 
 #if defined(CONFIG_TRANSPARENT_HUGEPAGE) || defined(CONFIG_HUGETLBFS)
 static void clear_gigantic_page(struct page *page,
-				unsigned long addr,
-				unsigned int pages_per_huge_page)
+                unsigned long addr,
+                unsigned int pages_per_huge_page)
 {
-	int i;
-	struct page *p = page;
+    int i;
+    struct page *p = page;
 
-	might_sleep();
-	for (i = 0; i < pages_per_huge_page;
-	     i++, p = mem_map_next(p, page, i)) {
-		cond_resched();
-		clear_user_highpage(p, addr + i * PAGE_SIZE);
-	}
+    might_sleep();
+    for (i = 0; i < pages_per_huge_page;
+         i++, p = mem_map_next(p, page, i)) {
+        cond_resched();
+        clear_user_highpage(p, addr + i * PAGE_SIZE);
+    }
 }
 void clear_huge_page(struct page *page,
-		     unsigned long addr, unsigned int pages_per_huge_page)
+             unsigned long addr, unsigned int pages_per_huge_page)
 {
-	int i;
+    int i;
 
-	if (unlikely(pages_per_huge_page > MAX_ORDER_NR_PAGES)) {
-		clear_gigantic_page(page, addr, pages_per_huge_page);
-		return;
-	}
-
-	might_sleep();
-	for (i = 0; i < pages_per_huge_page; i++) {
-		cond_resched();
-		clear_user_highpage(page + i, addr + i * PAGE_SIZE);
-	}
+    if (unlikely(pages_per_huge_page > MAX_ORDER_NR_PAGES)) {
+        clear_gigantic_page(page, addr, pages_per_huge_page);
+        return;
+    }
+
+    might_sleep();
+    for (i = 0; i < pages_per_huge_page; i++) {
+        cond_resched();
+        clear_user_highpage(page + i, addr + i * PAGE_SIZE);
+    }
 }
 
 static void copy_user_gigantic_page(struct page *dst, struct page *src,
-				    unsigned long addr,
-				    struct vm_area_struct *vma,
-				    unsigned int pages_per_huge_page)
-{
-	int i;
-	struct page *dst_base = dst;
-	struct page *src_base = src;
-
-	for (i = 0; i < pages_per_huge_page; ) {
-		cond_resched();
-		copy_user_highpage(dst, src, addr + i*PAGE_SIZE, vma);
-
-		i++;
-		dst = mem_map_next(dst, dst_base, i);
-		src = mem_map_next(src, src_base, i);
-	}
+                    unsigned long addr,
+                    struct vm_area_struct *vma,
+                    unsigned int pages_per_huge_page)
+{
+    int i;
+    struct page *dst_base = dst;
+    struct page *src_base = src;
+
+    for (i = 0; i < pages_per_huge_page; ) {
+        cond_resched();
+        copy_user_highpage(dst, src, addr + i*PAGE_SIZE, vma);
+
+        i++;
+        dst = mem_map_next(dst, dst_base, i);
+        src = mem_map_next(src, src_base, i);
+    }
 }
 
 void copy_user_huge_page(struct page *dst, struct page *src,
-			 unsigned long addr, struct vm_area_struct *vma,
-			 unsigned int pages_per_huge_page)
+             unsigned long addr, struct vm_area_struct *vma,
+             unsigned int pages_per_huge_page)
 {
-	int i;
-
-	if (unlikely(pages_per_huge_page > MAX_ORDER_NR_PAGES)) {
-		copy_user_gigantic_page(dst, src, addr, vma,
-					pages_per_huge_page);
-		return;
-	}
+    int i;
 
-	might_sleep();
-	for (i = 0; i < pages_per_huge_page; i++) {
-		cond_resched();
-		copy_user_highpage(dst + i, src + i, addr + i*PAGE_SIZE, vma);
-	}
+    if (unlikely(pages_per_huge_page > MAX_ORDER_NR_PAGES)) {
+        copy_user_gigantic_page(dst, src, addr, vma,
+                    pages_per_huge_page);
+        return;
+    }
+
+    might_sleep();
+    for (i = 0; i < pages_per_huge_page; i++) {
+        cond_resched();
+        copy_user_highpage(dst + i, src + i, addr + i*PAGE_SIZE, vma);
+    }
 }
 #endif /* CONFIG_TRANSPARENT_HUGEPAGE || CONFIG_HUGETLBFS */
diff -uprN ../linux-3.4.104-vanilla/mm/mmap.c linux-3.4.104-syssec_hw2_app2/mm/mmap.c
--- ../linux-3.4.104-vanilla/mm/mmap.c	2014-09-24 23:49:19.000000000 -0400
+++ linux-3.4.104-syssec_hw2_app2/mm/mmap.c	2014-11-12 22:37:03.000000000 -0500
@@ -356,7 +356,7 @@ void validate_mm(struct mm_struct *mm)
 #define validate_mm(mm) do { } while (0)
 #endif
 
-static struct vm_area_struct *
+struct vm_area_struct *
 find_vma_prepare(struct mm_struct *mm, unsigned long addr,
 		struct vm_area_struct **pprev, struct rb_node ***rb_link,
 		struct rb_node ** rb_parent)
@@ -392,8 +392,9 @@ find_vma_prepare(struct mm_struct *mm, u
 	*rb_parent = __rb_parent;
 	return vma;
 }
+EXPORT_SYMBOL(find_vma_prepare);
 
-static unsigned long count_vma_pages_range(struct mm_struct *mm,
+unsigned long count_vma_pages_range(struct mm_struct *mm,
 		unsigned long addr, unsigned long end)
 {
 	unsigned long nr_pages = 0;
@@ -420,6 +421,7 @@ static unsigned long count_vma_pages_ran
 
 	return nr_pages;
 }
+EXPORT_SYMBOL(count_vma_pages_range);
 
 void __vma_link_rb(struct mm_struct *mm, struct vm_area_struct *vma,
 		struct rb_node **rb_link, struct rb_node *rb_parent)
@@ -459,7 +461,7 @@ __vma_link(struct mm_struct *mm, struct 
 	__vma_link_rb(mm, vma, rb_link, rb_parent);
 }
 
-static void vma_link(struct mm_struct *mm, struct vm_area_struct *vma,
+void vma_link(struct mm_struct *mm, struct vm_area_struct *vma,
 			struct vm_area_struct *prev, struct rb_node **rb_link,
 			struct rb_node *rb_parent)
 {
@@ -480,6 +482,7 @@ static void vma_link(struct mm_struct *m
 	mm->map_count++;
 	validate_mm(mm);
 }
+EXPORT_SYMBOL(vma_link);
 
 /*
  * Helper for vma_adjust() in the split_vma insert case: insert a vma into the
@@ -1245,12 +1248,13 @@ int vma_wants_writenotify(struct vm_area
 	return vma->vm_file && vma->vm_file->f_mapping &&
 		mapping_cap_account_dirty(vma->vm_file->f_mapping);
 }
+EXPORT_SYMBOL(vma_wants_writenotify);
 
 /*
  * We account for memory if it's a private writeable mapping,
  * not hugepages and VM_NORESERVE wasn't set.
  */
-static inline int accountable_mapping(struct file *file, vm_flags_t vm_flags)
+inline int accountable_mapping(struct file *file, vm_flags_t vm_flags)
 {
 	/*
 	 * hugetlb has its own accounting separate from the core VM
@@ -1261,6 +1265,7 @@ static inline int accountable_mapping(st
 
 	return (vm_flags & (VM_NORESERVE | VM_SHARED | VM_WRITE)) == VM_WRITE;
 }
+EXPORT_SYMBOL(accountable_mapping);
 
 unsigned long mmap_region(struct file *file, unsigned long addr,
 			  unsigned long len, unsigned long flags,
@@ -2001,7 +2006,7 @@ static void unmap_region(struct mm_struc
  * Create a list of vma's touched by the unmap, removing them from the mm's
  * vma list as we go..
  */
-static void
+void
 detach_vmas_to_be_unmapped(struct mm_struct *mm, struct vm_area_struct *vma,
 	struct vm_area_struct *prev, unsigned long end)
 {
@@ -2028,6 +2033,7 @@ detach_vmas_to_be_unmapped(struct mm_str
 	mm->unmap_area(mm, addr);
 	mm->mmap_cache = NULL;		/* Kill the cache. */
 }
+EXPORT_SYMBOL(detach_vmas_to_be_unmapped);
 
 /*
  * __split_vma() bypasses sysctl_max_map_count checking.  We use this on the
@@ -2128,7 +2134,32 @@ int do_munmap(struct mm_struct *mm, unsi
 {
 	unsigned long end;
 	struct vm_area_struct *vma, *prev, *last;
-
+	struct vma_descriptor *it = NULL;
+    
+    /* Check if the current thread has permission to unmap the given address space. */
+    /* Check if the current has any private vma assigned to it. Else proceed normally. */
+    if(current->mm->vma_desc_list){
+        it = current->mm->vma_desc_list;
+        /* Iterating over the private vma linked list. */
+        while(it != NULL){
+            if(current->pid != it->tid){
+                /* Return Error if the given address space lies in the vma that does not belong to current. */
+                if((start >= it->addr && start <= (it->addr + it->len))
+                   || ((start+(unsigned long)len) >= it->addr &&
+                       (start+(unsigned long)len) <= (it->addr + it->len))){
+                       return -EINVAL;
+                   }
+            }else{
+                /* If the address space belongs to the current thread then delete its entry from cutom book keeping of vma_descriptors before unmapping */
+                if(start == it->addr && len == it->len){
+                    current->mm->vma_desc_list = delete_node_tpd(current->mm->vma_desc_list, it->tid, len, start);
+                    break;
+                }
+            }
+            it = it->next;
+        }
+    }
+	
 	if ((start & ~PAGE_MASK) || start > TASK_SIZE || len > TASK_SIZE-start)
 		return -EINVAL;
 
@@ -2354,7 +2385,20 @@ void exit_mmap(struct mm_struct *mm)
 	struct mmu_gather tlb;
 	struct vm_area_struct *vma;
 	unsigned long nr_accounted = 0;
-
+	struct vma_descriptor *temp = NULL;
+    
+	if(current_uid() >= 1000 && mm->vma_desc_list){
+		
+		temp = mm->vma_desc_list;
+		
+		while(temp){
+			present_bit_handler(mm, temp, 2);
+			temp = temp->next;
+		}
+		
+		delete_list_tpd(mm->vma_desc_list);
+    }
+	
 	/* mm's last user has gone, and its about to be pulled down */
 	mmu_notifier_release(mm);
 
@@ -2428,6 +2472,7 @@ int insert_vm_struct(struct mm_struct * 
 	vma_link(mm, vma, prev, rb_link, rb_parent);
 	return 0;
 }
+EXPORT_SYMBOL(insert_vm_struct);
 
 /*
  * Copy the vma structure to a new location in the same mm,
@@ -2526,7 +2571,7 @@ int may_expand_vm(struct mm_struct *mm, 
 		return 0;
 	return 1;
 }
-
+EXPORT_SYMBOL(may_expand_vm);
 
 static int special_mapping_fault(struct vm_area_struct *vma,
 				struct vm_fault *vmf)
diff -uprN ../linux-3.4.104-vanilla/mm/mprotect.c linux-3.4.104-syssec_hw2_app2/mm/mprotect.c
--- ../linux-3.4.104-vanilla/mm/mprotect.c	2014-09-24 23:49:19.000000000 -0400
+++ linux-3.4.104-syssec_hw2_app2/mm/mprotect.c	2014-11-12 22:37:12.000000000 -0500
@@ -236,6 +236,26 @@ SYSCALL_DEFINE3(mprotect, unsigned long,
 	struct vm_area_struct *vma, *prev;
 	int error = -EINVAL;
 	const int grows = prot & (PROT_GROWSDOWN|PROT_GROWSUP);
+	struct vma_descriptor *it = NULL;
+    
+    /* Check if the current thread has permission to unmap the given address space. */
+    /* Check if the current has any private vma assigned to it. Else proceed normally. */
+    if(current->mm->vma_desc_list){
+        it = current->mm->vma_desc_list;
+        /* Iterating over the private vma linked list. */
+        while(it != NULL){
+            if(current->pid != it->tid){
+                /* Return Error if the given address space lies in the vma that does not belong to current. */
+                if((start >= it->addr && start <= (it->addr + it->len))
+                   || ((start+(unsigned long)len) >= it->addr &&
+                       (start+(unsigned long)len) <= (it->addr + it->len))){
+                       return -EINVAL;
+                   }
+            }
+            it = it->next;
+        }
+    }
+
 	prot &= ~(PROT_GROWSDOWN|PROT_GROWSUP);
 	if (grows == (PROT_GROWSDOWN|PROT_GROWSUP)) /* can't be both */
 		return -EINVAL;
diff -uprN ../linux-3.4.104-vanilla/mm/privatemm.c linux-3.4.104-syssec_hw2_app2/mm/privatemm.c
--- ../linux-3.4.104-vanilla/mm/privatemm.c	1969-12-31 19:00:00.000000000 -0500
+++ linux-3.4.104-syssec_hw2_app2/mm/privatemm.c	2014-11-12 22:37:15.000000000 -0500
@@ -0,0 +1,79 @@
+#include <linux/kernel.h>
+#include <linux/slab.h>
+#include <linux/backing-dev.h>
+#include <linux/mm.h>
+#include <linux/shm.h>
+#include <linux/mman.h>
+#include <linux/pagemap.h>
+#include <linux/swap.h>
+#include <linux/syscalls.h>
+#include <linux/capability.h>
+#include <linux/init.h>
+#include <linux/file.h>
+#include <linux/fs.h>
+#include <linux/personality.h>
+#include <linux/security.h>
+#include <linux/hugetlb.h>
+#include <linux/profile.h>
+#include <linux/export.h>
+#include <linux/mount.h>
+#include <linux/mempolicy.h>
+#include <linux/rmap.h>
+#include <linux/mmu_notifier.h>
+#include <linux/perf_event.h>
+#include <linux/audit.h>
+#include <linux/khugepaged.h>
+
+#include <asm/uaccess.h>
+#include <asm/cacheflush.h>
+#include <asm/tlb.h>
+#include <asm/mmu_context.h>
+
+#include "internal.h"
+
+#ifndef arch_mmap_check
+#define arch_mmap_check(addr, len, flags)    (0)
+#endif
+
+#ifndef arch_rebalance_pgtables
+#define arch_rebalance_pgtables(addr, len)        (addr)
+#endif
+
+int set_nth_bit(int bitmap, int bit){
+    int mask = 0;
+    mask = 1 << bit;
+    bitmap = mask | bitmap;
+    return bitmap;
+}
+EXPORT_SYMBOL(set_nth_bit);
+
+int get_nth_bit(int bitmap, int bit){
+    int mask = 0;
+    mask = 1 << bit;
+    bitmap = mask & bitmap;
+    bitmap = bitmap >> bit;
+    return bitmap;
+}
+EXPORT_SYMBOL(get_nth_bit);
+
+int reset_nth_bit(int bitmap, int bit){
+    int mask = 0;
+    mask = 1 << bit;
+    mask = ~mask;
+    bitmap = mask & bitmap;
+    return bitmap;
+}
+EXPORT_SYMBOL(reset_nth_bit);
+
+unsigned long do_thread_private_mmap(unsigned long len, unsigned long prot)
+{
+    unsigned long addr;
+    
+    addr = do_mmap(NULL, 0, len, prot, MAP_SHARED | MAP_ANONYMOUS, 0);
+    
+    current->mm->vma_desc_list = add_node_tpd(current->mm->vma_desc_list,
+                                                current->pid, len, addr, 0);
+                                                
+    return addr;
+}
+EXPORT_SYMBOL(do_thread_private_mmap);
\ No newline at end of file
diff -uprN ../linux-3.4.104-vanilla/mm/rmap.c linux-3.4.104-syssec_hw2_app2/mm/rmap.c
--- ../linux-3.4.104-vanilla/mm/rmap.c	2014-09-24 23:49:19.000000000 -0400
+++ linux-3.4.104-syssec_hw2_app2/mm/rmap.c	2014-11-12 22:37:32.000000000 -0500
@@ -20,7 +20,7 @@
 /*
  * Lock ordering in mm:
  *
- * inode->i_mutex	(while writing or truncating, not reading or faulting)
+ * inode->i_mutex    (while writing or truncating, not reading or faulting)
  *   mm->mmap_sem
  *     page->flags PG_locked (lock_page)
  *       mapping->i_mmap_mutex
@@ -67,74 +67,74 @@ static struct kmem_cache *anon_vma_chain
 
 static inline struct anon_vma *anon_vma_alloc(void)
 {
-	struct anon_vma *anon_vma;
+    struct anon_vma *anon_vma;
 
-	anon_vma = kmem_cache_alloc(anon_vma_cachep, GFP_KERNEL);
-	if (anon_vma) {
-		atomic_set(&anon_vma->refcount, 1);
-		/*
-		 * Initialise the anon_vma root to point to itself. If called
-		 * from fork, the root will be reset to the parents anon_vma.
-		 */
-		anon_vma->root = anon_vma;
-	}
+    anon_vma = kmem_cache_alloc(anon_vma_cachep, GFP_KERNEL);
+    if (anon_vma) {
+        atomic_set(&anon_vma->refcount, 1);
+        /*
+         * Initialise the anon_vma root to point to itself. If called
+         * from fork, the root will be reset to the parents anon_vma.
+         */
+        anon_vma->root = anon_vma;
+    }
 
-	return anon_vma;
+    return anon_vma;
 }
 
 static inline void anon_vma_free(struct anon_vma *anon_vma)
 {
-	VM_BUG_ON(atomic_read(&anon_vma->refcount));
+    VM_BUG_ON(atomic_read(&anon_vma->refcount));
 
-	/*
-	 * Synchronize against page_lock_anon_vma() such that
-	 * we can safely hold the lock without the anon_vma getting
-	 * freed.
-	 *
-	 * Relies on the full mb implied by the atomic_dec_and_test() from
-	 * put_anon_vma() against the acquire barrier implied by
-	 * mutex_trylock() from page_lock_anon_vma(). This orders:
-	 *
-	 * page_lock_anon_vma()		VS	put_anon_vma()
-	 *   mutex_trylock()			  atomic_dec_and_test()
-	 *   LOCK				  MB
-	 *   atomic_read()			  mutex_is_locked()
-	 *
-	 * LOCK should suffice since the actual taking of the lock must
-	 * happen _before_ what follows.
-	 */
-	might_sleep();
-	if (mutex_is_locked(&anon_vma->root->mutex)) {
-		anon_vma_lock(anon_vma);
-		anon_vma_unlock(anon_vma);
-	}
+    /*
+     * Synchronize against page_lock_anon_vma() such that
+     * we can safely hold the lock without the anon_vma getting
+     * freed.
+     *
+     * Relies on the full mb implied by the atomic_dec_and_test() from
+     * put_anon_vma() against the acquire barrier implied by
+     * mutex_trylock() from page_lock_anon_vma(). This orders:
+     *
+     * page_lock_anon_vma()        VS    put_anon_vma()
+     *   mutex_trylock()              atomic_dec_and_test()
+     *   LOCK                  MB
+     *   atomic_read()              mutex_is_locked()
+     *
+     * LOCK should suffice since the actual taking of the lock must
+     * happen _before_ what follows.
+     */
+    might_sleep();
+    if (mutex_is_locked(&anon_vma->root->mutex)) {
+        anon_vma_lock(anon_vma);
+        anon_vma_unlock(anon_vma);
+    }
 
-	kmem_cache_free(anon_vma_cachep, anon_vma);
+    kmem_cache_free(anon_vma_cachep, anon_vma);
 }
 
 static inline struct anon_vma_chain *anon_vma_chain_alloc(gfp_t gfp)
 {
-	return kmem_cache_alloc(anon_vma_chain_cachep, gfp);
+    return kmem_cache_alloc(anon_vma_chain_cachep, gfp);
 }
 
 static void anon_vma_chain_free(struct anon_vma_chain *anon_vma_chain)
 {
-	kmem_cache_free(anon_vma_chain_cachep, anon_vma_chain);
+    kmem_cache_free(anon_vma_chain_cachep, anon_vma_chain);
 }
 
 static void anon_vma_chain_link(struct vm_area_struct *vma,
-				struct anon_vma_chain *avc,
-				struct anon_vma *anon_vma)
+                struct anon_vma_chain *avc,
+                struct anon_vma *anon_vma)
 {
-	avc->vma = vma;
-	avc->anon_vma = anon_vma;
-	list_add(&avc->same_vma, &vma->anon_vma_chain);
-
-	/*
-	 * It's critical to add new vmas to the tail of the anon_vma,
-	 * see comment in huge_memory.c:__split_huge_page().
-	 */
-	list_add_tail(&avc->same_anon_vma, &anon_vma->head);
+    avc->vma = vma;
+    avc->anon_vma = anon_vma;
+    list_add(&avc->same_vma, &vma->anon_vma_chain);
+
+    /*
+     * It's critical to add new vmas to the tail of the anon_vma,
+     * see comment in huge_memory.c:__split_huge_page().
+     */
+    list_add_tail(&avc->same_anon_vma, &anon_vma->head);
 }
 
 /**
@@ -166,50 +166,50 @@ static void anon_vma_chain_link(struct v
  */
 int anon_vma_prepare(struct vm_area_struct *vma)
 {
-	struct anon_vma *anon_vma = vma->anon_vma;
-	struct anon_vma_chain *avc;
+    struct anon_vma *anon_vma = vma->anon_vma;
+    struct anon_vma_chain *avc;
 
-	might_sleep();
-	if (unlikely(!anon_vma)) {
-		struct mm_struct *mm = vma->vm_mm;
-		struct anon_vma *allocated;
-
-		avc = anon_vma_chain_alloc(GFP_KERNEL);
-		if (!avc)
-			goto out_enomem;
-
-		anon_vma = find_mergeable_anon_vma(vma);
-		allocated = NULL;
-		if (!anon_vma) {
-			anon_vma = anon_vma_alloc();
-			if (unlikely(!anon_vma))
-				goto out_enomem_free_avc;
-			allocated = anon_vma;
-		}
-
-		anon_vma_lock(anon_vma);
-		/* page_table_lock to protect against threads */
-		spin_lock(&mm->page_table_lock);
-		if (likely(!vma->anon_vma)) {
-			vma->anon_vma = anon_vma;
-			anon_vma_chain_link(vma, avc, anon_vma);
-			allocated = NULL;
-			avc = NULL;
-		}
-		spin_unlock(&mm->page_table_lock);
-		anon_vma_unlock(anon_vma);
-
-		if (unlikely(allocated))
-			put_anon_vma(allocated);
-		if (unlikely(avc))
-			anon_vma_chain_free(avc);
-	}
-	return 0;
+    might_sleep();
+    if (unlikely(!anon_vma)) {
+        struct mm_struct *mm = vma->vm_mm;
+        struct anon_vma *allocated;
+
+        avc = anon_vma_chain_alloc(GFP_KERNEL);
+        if (!avc)
+            goto out_enomem;
+
+        anon_vma = find_mergeable_anon_vma(vma);
+        allocated = NULL;
+        if (!anon_vma) {
+            anon_vma = anon_vma_alloc();
+            if (unlikely(!anon_vma))
+                goto out_enomem_free_avc;
+            allocated = anon_vma;
+        }
+
+        anon_vma_lock(anon_vma);
+        /* page_table_lock to protect against threads */
+        spin_lock(&mm->page_table_lock);
+        if (likely(!vma->anon_vma)) {
+            vma->anon_vma = anon_vma;
+            anon_vma_chain_link(vma, avc, anon_vma);
+            allocated = NULL;
+            avc = NULL;
+        }
+        spin_unlock(&mm->page_table_lock);
+        anon_vma_unlock(anon_vma);
+
+        if (unlikely(allocated))
+            put_anon_vma(allocated);
+        if (unlikely(avc))
+            anon_vma_chain_free(avc);
+    }
+    return 0;
 
  out_enomem_free_avc:
-	anon_vma_chain_free(avc);
+    anon_vma_chain_free(avc);
  out_enomem:
-	return -ENOMEM;
+    return -ENOMEM;
 }
 
 /*
@@ -222,20 +222,20 @@ int anon_vma_prepare(struct vm_area_stru
  */
 static inline struct anon_vma *lock_anon_vma_root(struct anon_vma *root, struct anon_vma *anon_vma)
 {
-	struct anon_vma *new_root = anon_vma->root;
-	if (new_root != root) {
-		if (WARN_ON_ONCE(root))
-			mutex_unlock(&root->mutex);
-		root = new_root;
-		mutex_lock(&root->mutex);
-	}
-	return root;
+    struct anon_vma *new_root = anon_vma->root;
+    if (new_root != root) {
+        if (WARN_ON_ONCE(root))
+            mutex_unlock(&root->mutex);
+        root = new_root;
+        mutex_lock(&root->mutex);
+    }
+    return root;
 }
 
 static inline void unlock_anon_vma_root(struct anon_vma *root)
 {
-	if (root)
-		mutex_unlock(&root->mutex);
+    if (root)
+        mutex_unlock(&root->mutex);
 }
 
 /*
@@ -244,30 +244,30 @@ static inline void unlock_anon_vma_root(
  */
 int anon_vma_clone(struct vm_area_struct *dst, struct vm_area_struct *src)
 {
-	struct anon_vma_chain *avc, *pavc;
-	struct anon_vma *root = NULL;
+    struct anon_vma_chain *avc, *pavc;
+    struct anon_vma *root = NULL;
 
-	list_for_each_entry_reverse(pavc, &src->anon_vma_chain, same_vma) {
-		struct anon_vma *anon_vma;
+    list_for_each_entry_reverse(pavc, &src->anon_vma_chain, same_vma) {
+        struct anon_vma *anon_vma;
 
-		avc = anon_vma_chain_alloc(GFP_NOWAIT | __GFP_NOWARN);
-		if (unlikely(!avc)) {
-			unlock_anon_vma_root(root);
-			root = NULL;
-			avc = anon_vma_chain_alloc(GFP_KERNEL);
-			if (!avc)
-				goto enomem_failure;
-		}
-		anon_vma = pavc->anon_vma;
-		root = lock_anon_vma_root(root, anon_vma);
-		anon_vma_chain_link(dst, avc, anon_vma);
-	}
-	unlock_anon_vma_root(root);
-	return 0;
+        avc = anon_vma_chain_alloc(GFP_NOWAIT | __GFP_NOWARN);
+        if (unlikely(!avc)) {
+            unlock_anon_vma_root(root);
+            root = NULL;
+            avc = anon_vma_chain_alloc(GFP_KERNEL);
+            if (!avc)
+                goto enomem_failure;
+        }
+        anon_vma = pavc->anon_vma;
+        root = lock_anon_vma_root(root, anon_vma);
+        anon_vma_chain_link(dst, avc, anon_vma);
+    }
+    unlock_anon_vma_root(root);
+    return 0;
 
  enomem_failure:
-	unlink_anon_vmas(dst);
-	return -ENOMEM;
+    unlink_anon_vmas(dst);
+    return -ENOMEM;
 }
 
 /*
@@ -302,17 +302,17 @@ int anon_vma_clone(struct vm_area_struct
  */
 void anon_vma_moveto_tail(struct vm_area_struct *dst)
 {
-	struct anon_vma_chain *pavc;
-	struct anon_vma *root = NULL;
+    struct anon_vma_chain *pavc;
+    struct anon_vma *root = NULL;
 
-	list_for_each_entry_reverse(pavc, &dst->anon_vma_chain, same_vma) {
-		struct anon_vma *anon_vma = pavc->anon_vma;
-		VM_BUG_ON(pavc->vma != dst);
-		root = lock_anon_vma_root(root, anon_vma);
-		list_del(&pavc->same_anon_vma);
-		list_add_tail(&pavc->same_anon_vma, &anon_vma->head);
-	}
-	unlock_anon_vma_root(root);
+    list_for_each_entry_reverse(pavc, &dst->anon_vma_chain, same_vma) {
+        struct anon_vma *anon_vma = pavc->anon_vma;
+        VM_BUG_ON(pavc->vma != dst);
+        root = lock_anon_vma_root(root, anon_vma);
+        list_del(&pavc->same_anon_vma);
+        list_add_tail(&pavc->same_anon_vma, &anon_vma->head);
+    }
+    unlock_anon_vma_root(root);
 }
 
 /*
@@ -322,110 +322,110 @@ void anon_vma_moveto_tail(struct vm_area
  */
 int anon_vma_fork(struct vm_area_struct *vma, struct vm_area_struct *pvma)
 {
-	struct anon_vma_chain *avc;
-	struct anon_vma *anon_vma;
+    struct anon_vma_chain *avc;
+    struct anon_vma *anon_vma;
 
-	/* Don't bother if the parent process has no anon_vma here. */
-	if (!pvma->anon_vma)
-		return 0;
-
-	/*
-	 * First, attach the new VMA to the parent VMA's anon_vmas,
-	 * so rmap can find non-COWed pages in child processes.
-	 */
-	if (anon_vma_clone(vma, pvma))
-		return -ENOMEM;
-
-	/* Then add our own anon_vma. */
-	anon_vma = anon_vma_alloc();
-	if (!anon_vma)
-		goto out_error;
-	avc = anon_vma_chain_alloc(GFP_KERNEL);
-	if (!avc)
-		goto out_error_free_anon_vma;
-
-	/*
-	 * The root anon_vma's spinlock is the lock actually used when we
-	 * lock any of the anon_vmas in this anon_vma tree.
-	 */
-	anon_vma->root = pvma->anon_vma->root;
-	/*
-	 * With refcounts, an anon_vma can stay around longer than the
-	 * process it belongs to. The root anon_vma needs to be pinned until
-	 * this anon_vma is freed, because the lock lives in the root.
-	 */
-	get_anon_vma(anon_vma->root);
-	/* Mark this anon_vma as the one where our new (COWed) pages go. */
-	vma->anon_vma = anon_vma;
-	anon_vma_lock(anon_vma);
-	anon_vma_chain_link(vma, avc, anon_vma);
-	anon_vma_unlock(anon_vma);
+    /* Don't bother if the parent process has no anon_vma here. */
+    if (!pvma->anon_vma)
+        return 0;
+
+    /*
+     * First, attach the new VMA to the parent VMA's anon_vmas,
+     * so rmap can find non-COWed pages in child processes.
+     */
+    if (anon_vma_clone(vma, pvma))
+        return -ENOMEM;
+
+    /* Then add our own anon_vma. */
+    anon_vma = anon_vma_alloc();
+    if (!anon_vma)
+        goto out_error;
+    avc = anon_vma_chain_alloc(GFP_KERNEL);
+    if (!avc)
+        goto out_error_free_anon_vma;
+
+    /*
+     * The root anon_vma's spinlock is the lock actually used when we
+     * lock any of the anon_vmas in this anon_vma tree.
+     */
+    anon_vma->root = pvma->anon_vma->root;
+    /*
+     * With refcounts, an anon_vma can stay around longer than the
+     * process it belongs to. The root anon_vma needs to be pinned until
+     * this anon_vma is freed, because the lock lives in the root.
+     */
+    get_anon_vma(anon_vma->root);
+    /* Mark this anon_vma as the one where our new (COWed) pages go. */
+    vma->anon_vma = anon_vma;
+    anon_vma_lock(anon_vma);
+    anon_vma_chain_link(vma, avc, anon_vma);
+    anon_vma_unlock(anon_vma);
 
-	return 0;
+    return 0;
 
  out_error_free_anon_vma:
-	put_anon_vma(anon_vma);
+    put_anon_vma(anon_vma);
  out_error:
-	unlink_anon_vmas(vma);
-	return -ENOMEM;
+    unlink_anon_vmas(vma);
+    return -ENOMEM;
 }
 
 void unlink_anon_vmas(struct vm_area_struct *vma)
 {
-	struct anon_vma_chain *avc, *next;
-	struct anon_vma *root = NULL;
+    struct anon_vma_chain *avc, *next;
+    struct anon_vma *root = NULL;
 
-	/*
-	 * Unlink each anon_vma chained to the VMA.  This list is ordered
-	 * from newest to oldest, ensuring the root anon_vma gets freed last.
-	 */
-	list_for_each_entry_safe(avc, next, &vma->anon_vma_chain, same_vma) {
-		struct anon_vma *anon_vma = avc->anon_vma;
-
-		root = lock_anon_vma_root(root, anon_vma);
-		list_del(&avc->same_anon_vma);
-
-		/*
-		 * Leave empty anon_vmas on the list - we'll need
-		 * to free them outside the lock.
-		 */
-		if (list_empty(&anon_vma->head))
-			continue;
-
-		list_del(&avc->same_vma);
-		anon_vma_chain_free(avc);
-	}
-	unlock_anon_vma_root(root);
-
-	/*
-	 * Iterate the list once more, it now only contains empty and unlinked
-	 * anon_vmas, destroy them. Could not do before due to __put_anon_vma()
-	 * needing to acquire the anon_vma->root->mutex.
-	 */
-	list_for_each_entry_safe(avc, next, &vma->anon_vma_chain, same_vma) {
-		struct anon_vma *anon_vma = avc->anon_vma;
-
-		put_anon_vma(anon_vma);
-
-		list_del(&avc->same_vma);
-		anon_vma_chain_free(avc);
-	}
+    /*
+     * Unlink each anon_vma chained to the VMA.  This list is ordered
+     * from newest to oldest, ensuring the root anon_vma gets freed last.
+     */
+    list_for_each_entry_safe(avc, next, &vma->anon_vma_chain, same_vma) {
+        struct anon_vma *anon_vma = avc->anon_vma;
+
+        root = lock_anon_vma_root(root, anon_vma);
+        list_del(&avc->same_anon_vma);
+
+        /*
+         * Leave empty anon_vmas on the list - we'll need
+         * to free them outside the lock.
+         */
+        if (list_empty(&anon_vma->head))
+            continue;
+
+        list_del(&avc->same_vma);
+        anon_vma_chain_free(avc);
+    }
+    unlock_anon_vma_root(root);
+
+    /*
+     * Iterate the list once more, it now only contains empty and unlinked
+     * anon_vmas, destroy them. Could not do before due to __put_anon_vma()
+     * needing to acquire the anon_vma->root->mutex.
+     */
+    list_for_each_entry_safe(avc, next, &vma->anon_vma_chain, same_vma) {
+        struct anon_vma *anon_vma = avc->anon_vma;
+
+        put_anon_vma(anon_vma);
+
+        list_del(&avc->same_vma);
+        anon_vma_chain_free(avc);
+    }
 }
 
 static void anon_vma_ctor(void *data)
 {
-	struct anon_vma *anon_vma = data;
+    struct anon_vma *anon_vma = data;
 
-	mutex_init(&anon_vma->mutex);
-	atomic_set(&anon_vma->refcount, 0);
-	INIT_LIST_HEAD(&anon_vma->head);
+    mutex_init(&anon_vma->mutex);
+    atomic_set(&anon_vma->refcount, 0);
+    INIT_LIST_HEAD(&anon_vma->head);
 }
 
 void __init anon_vma_init(void)
 {
-	anon_vma_cachep = kmem_cache_create("anon_vma", sizeof(struct anon_vma),
-			0, SLAB_DESTROY_BY_RCU|SLAB_PANIC, anon_vma_ctor);
-	anon_vma_chain_cachep = KMEM_CACHE(anon_vma_chain, SLAB_PANIC);
+    anon_vma_cachep = kmem_cache_create("anon_vma", sizeof(struct anon_vma),
+            0, SLAB_DESTROY_BY_RCU|SLAB_PANIC, anon_vma_ctor);
+    anon_vma_chain_cachep = KMEM_CACHE(anon_vma_chain, SLAB_PANIC);
 }
 
 /*
@@ -453,38 +453,38 @@ void __init anon_vma_init(void)
  */
 struct anon_vma *page_get_anon_vma(struct page *page)
 {
-	struct anon_vma *anon_vma = NULL;
-	unsigned long anon_mapping;
+    struct anon_vma *anon_vma = NULL;
+    unsigned long anon_mapping;
 
-	rcu_read_lock();
-	anon_mapping = (unsigned long) ACCESS_ONCE(page->mapping);
-	if ((anon_mapping & PAGE_MAPPING_FLAGS) != PAGE_MAPPING_ANON)
-		goto out;
-	if (!page_mapped(page))
-		goto out;
-
-	anon_vma = (struct anon_vma *) (anon_mapping - PAGE_MAPPING_ANON);
-	if (!atomic_inc_not_zero(&anon_vma->refcount)) {
-		anon_vma = NULL;
-		goto out;
-	}
-
-	/*
-	 * If this page is still mapped, then its anon_vma cannot have been
-	 * freed.  But if it has been unmapped, we have no security against the
-	 * anon_vma structure being freed and reused (for another anon_vma:
-	 * SLAB_DESTROY_BY_RCU guarantees that - so the atomic_inc_not_zero()
-	 * above cannot corrupt).
-	 */
-	if (!page_mapped(page)) {
-		rcu_read_unlock();
-		put_anon_vma(anon_vma);
-		return NULL;
-	}
+    rcu_read_lock();
+    anon_mapping = (unsigned long) ACCESS_ONCE(page->mapping);
+    if ((anon_mapping & PAGE_MAPPING_FLAGS) != PAGE_MAPPING_ANON)
+        goto out;
+    if (!page_mapped(page))
+        goto out;
+
+    anon_vma = (struct anon_vma *) (anon_mapping - PAGE_MAPPING_ANON);
+    if (!atomic_inc_not_zero(&anon_vma->refcount)) {
+        anon_vma = NULL;
+        goto out;
+    }
+
+    /*
+     * If this page is still mapped, then its anon_vma cannot have been
+     * freed.  But if it has been unmapped, we have no security against the
+     * anon_vma structure being freed and reused (for another anon_vma:
+     * SLAB_DESTROY_BY_RCU guarantees that - so the atomic_inc_not_zero()
+     * above cannot corrupt).
+     */
+    if (!page_mapped(page)) {
+        rcu_read_unlock();
+        put_anon_vma(anon_vma);
+        return NULL;
+    }
 out:
-	rcu_read_unlock();
+    rcu_read_unlock();
 
-	return anon_vma;
+    return anon_vma;
 }
 
 /*
@@ -496,69 +496,69 @@ out:
  */
 struct anon_vma *page_lock_anon_vma(struct page *page)
 {
-	struct anon_vma *anon_vma = NULL;
-	struct anon_vma *root_anon_vma;
-	unsigned long anon_mapping;
-
-	rcu_read_lock();
-	anon_mapping = (unsigned long) ACCESS_ONCE(page->mapping);
-	if ((anon_mapping & PAGE_MAPPING_FLAGS) != PAGE_MAPPING_ANON)
-		goto out;
-	if (!page_mapped(page))
-		goto out;
-
-	anon_vma = (struct anon_vma *) (anon_mapping - PAGE_MAPPING_ANON);
-	root_anon_vma = ACCESS_ONCE(anon_vma->root);
-	if (mutex_trylock(&root_anon_vma->mutex)) {
-		/*
-		 * If the page is still mapped, then this anon_vma is still
-		 * its anon_vma, and holding the mutex ensures that it will
-		 * not go away, see anon_vma_free().
-		 */
-		if (!page_mapped(page)) {
-			mutex_unlock(&root_anon_vma->mutex);
-			anon_vma = NULL;
-		}
-		goto out;
-	}
-
-	/* trylock failed, we got to sleep */
-	if (!atomic_inc_not_zero(&anon_vma->refcount)) {
-		anon_vma = NULL;
-		goto out;
-	}
-
-	if (!page_mapped(page)) {
-		rcu_read_unlock();
-		put_anon_vma(anon_vma);
-		return NULL;
-	}
-
-	/* we pinned the anon_vma, its safe to sleep */
-	rcu_read_unlock();
-	anon_vma_lock(anon_vma);
-
-	if (atomic_dec_and_test(&anon_vma->refcount)) {
-		/*
-		 * Oops, we held the last refcount, release the lock
-		 * and bail -- can't simply use put_anon_vma() because
-		 * we'll deadlock on the anon_vma_lock() recursion.
-		 */
-		anon_vma_unlock(anon_vma);
-		__put_anon_vma(anon_vma);
-		anon_vma = NULL;
-	}
+    struct anon_vma *anon_vma = NULL;
+    struct anon_vma *root_anon_vma;
+    unsigned long anon_mapping;
+
+    rcu_read_lock();
+    anon_mapping = (unsigned long) ACCESS_ONCE(page->mapping);
+    if ((anon_mapping & PAGE_MAPPING_FLAGS) != PAGE_MAPPING_ANON)
+        goto out;
+    if (!page_mapped(page))
+        goto out;
+
+    anon_vma = (struct anon_vma *) (anon_mapping - PAGE_MAPPING_ANON);
+    root_anon_vma = ACCESS_ONCE(anon_vma->root);
+    if (mutex_trylock(&root_anon_vma->mutex)) {
+        /*
+         * If the page is still mapped, then this anon_vma is still
+         * its anon_vma, and holding the mutex ensures that it will
+         * not go away, see anon_vma_free().
+         */
+        if (!page_mapped(page)) {
+            mutex_unlock(&root_anon_vma->mutex);
+            anon_vma = NULL;
+        }
+        goto out;
+    }
+
+    /* trylock failed, we got to sleep */
+    if (!atomic_inc_not_zero(&anon_vma->refcount)) {
+        anon_vma = NULL;
+        goto out;
+    }
+
+    if (!page_mapped(page)) {
+        rcu_read_unlock();
+        put_anon_vma(anon_vma);
+        return NULL;
+    }
+
+    /* we pinned the anon_vma, its safe to sleep */
+    rcu_read_unlock();
+    anon_vma_lock(anon_vma);
+
+    if (atomic_dec_and_test(&anon_vma->refcount)) {
+        /*
+         * Oops, we held the last refcount, release the lock
+         * and bail -- can't simply use put_anon_vma() because
+         * we'll deadlock on the anon_vma_lock() recursion.
+         */
+        anon_vma_unlock(anon_vma);
+        __put_anon_vma(anon_vma);
+        anon_vma = NULL;
+    }
 
-	return anon_vma;
+    return anon_vma;
 
 out:
-	rcu_read_unlock();
-	return anon_vma;
+    rcu_read_unlock();
+    return anon_vma;
 }
 
 void page_unlock_anon_vma(struct anon_vma *anon_vma)
 {
-	anon_vma_unlock(anon_vma);
+    anon_vma_unlock(anon_vma);
 }
 
 /*
@@ -569,17 +569,17 @@ void page_unlock_anon_vma(struct anon_vm
 inline unsigned long
 vma_address(struct page *page, struct vm_area_struct *vma)
 {
-	pgoff_t pgoff = page->index << (PAGE_CACHE_SHIFT - PAGE_SHIFT);
-	unsigned long address;
+    pgoff_t pgoff = page->index << (PAGE_CACHE_SHIFT - PAGE_SHIFT);
+    unsigned long address;
 
-	if (unlikely(is_vm_hugetlb_page(vma)))
-		pgoff = page->index << huge_page_order(page_hstate(page));
-	address = vma->vm_start + ((pgoff - vma->vm_pgoff) << PAGE_SHIFT);
-	if (unlikely(address < vma->vm_start || address >= vma->vm_end)) {
-		/* page should be within @vma mapping range */
-		return -EFAULT;
-	}
-	return address;
+    if (unlikely(is_vm_hugetlb_page(vma)))
+        pgoff = page->index << huge_page_order(page_hstate(page));
+    address = vma->vm_start + ((pgoff - vma->vm_pgoff) << PAGE_SHIFT);
+    if (unlikely(address < vma->vm_start || address >= vma->vm_end)) {
+        /* page should be within @vma mapping range */
+        return -EFAULT;
+    }
+    return address;
 }
 
 /*
@@ -588,22 +588,22 @@ vma_address(struct page *page, struct vm
  */
 unsigned long page_address_in_vma(struct page *page, struct vm_area_struct *vma)
 {
-	if (PageAnon(page)) {
-		struct anon_vma *page__anon_vma = page_anon_vma(page);
-		/*
-		 * Note: swapoff's unuse_vma() is more efficient with this
-		 * check, and needs it to match anon_vma when KSM is active.
-		 */
-		if (!vma->anon_vma || !page__anon_vma ||
-		    vma->anon_vma->root != page__anon_vma->root)
-			return -EFAULT;
-	} else if (page->mapping && !(vma->vm_flags & VM_NONLINEAR)) {
-		if (!vma->vm_file ||
-		    vma->vm_file->f_mapping != page->mapping)
-			return -EFAULT;
-	} else
-		return -EFAULT;
-	return vma_address(page, vma);
+    if (PageAnon(page)) {
+        struct anon_vma *page__anon_vma = page_anon_vma(page);
+        /*
+         * Note: swapoff's unuse_vma() is more efficient with this
+         * check, and needs it to match anon_vma when KSM is active.
+         */
+        if (!vma->anon_vma || !page__anon_vma ||
+            vma->anon_vma->root != page__anon_vma->root)
+            return -EFAULT;
+    } else if (page->mapping && !(vma->vm_flags & VM_NONLINEAR)) {
+        if (!vma->vm_file ||
+            vma->vm_file->f_mapping != page->mapping)
+            return -EFAULT;
+    } else
+        return -EFAULT;
+    return vma_address(page, vma);
 }
 
 /*
@@ -616,54 +616,54 @@ unsigned long page_address_in_vma(struct
  * On success returns with pte mapped and locked.
  */
 pte_t *__page_check_address(struct page *page, struct mm_struct *mm,
-			  unsigned long address, spinlock_t **ptlp, int sync)
+              unsigned long address, spinlock_t **ptlp, int sync)
 {
-	pgd_t *pgd;
-	pud_t *pud;
-	pmd_t *pmd;
-	pte_t *pte;
-	spinlock_t *ptl;
-
-	if (unlikely(PageHuge(page))) {
-		/* when pud is not present, pte will be NULL */
-		pte = huge_pte_offset(mm, address);
-		if (!pte)
-			return NULL;
-
-		ptl = &mm->page_table_lock;
-		goto check;
-	}
-
-	pgd = pgd_offset(mm, address);
-	if (!pgd_present(*pgd))
-		return NULL;
-
-	pud = pud_offset(pgd, address);
-	if (!pud_present(*pud))
-		return NULL;
-
-	pmd = pmd_offset(pud, address);
-	if (!pmd_present(*pmd))
-		return NULL;
-	if (pmd_trans_huge(*pmd))
-		return NULL;
-
-	pte = pte_offset_map(pmd, address);
-	/* Make a quick check before getting the lock */
-	if (!sync && !pte_present(*pte)) {
-		pte_unmap(pte);
-		return NULL;
-	}
+    pgd_t *pgd;
+    pud_t *pud;
+    pmd_t *pmd;
+    pte_t *pte;
+    spinlock_t *ptl;
+
+    if (unlikely(PageHuge(page))) {
+        /* when pud is not present, pte will be NULL */
+        pte = huge_pte_offset(mm, address);
+        if (!pte)
+            return NULL;
+
+        ptl = &mm->page_table_lock;
+        goto check;
+    }
+
+    pgd = pgd_offset(mm, address);
+    if (!pgd_present(*pgd))
+        return NULL;
+
+    pud = pud_offset(pgd, address);
+    if (!pud_present(*pud))
+        return NULL;
+
+    pmd = pmd_offset(pud, address);
+    if (!pmd_present(*pmd))
+        return NULL;
+    if (pmd_trans_huge(*pmd))
+        return NULL;
+
+    pte = pte_offset_map(pmd, address);
+    /* Make a quick check before getting the lock */
+    if (!sync && !pte_present(*pte)) {
+        pte_unmap(pte);
+        return NULL;
+    }
 
-	ptl = pte_lockptr(mm, pmd);
+    ptl = pte_lockptr(mm, pmd);
 check:
-	spin_lock(ptl);
-	if (pte_present(*pte) && page_to_pfn(page) == pte_pfn(*pte)) {
-		*ptlp = ptl;
-		return pte;
-	}
-	pte_unmap_unlock(pte, ptl);
-	return NULL;
+    spin_lock(ptl);
+    if (pte_present(*pte) && page_to_pfn(page) == pte_pfn(*pte)) {
+        *ptlp = ptl;
+        return pte;
+    }
+    pte_unmap_unlock(pte, ptl);
+    return NULL;
 }
 
 /**
@@ -677,19 +677,19 @@ check:
  */
 int page_mapped_in_vma(struct page *page, struct vm_area_struct *vma)
 {
-	unsigned long address;
-	pte_t *pte;
-	spinlock_t *ptl;
-
-	address = vma_address(page, vma);
-	if (address == -EFAULT)		/* out of vma range */
-		return 0;
-	pte = page_check_address(page, vma->vm_mm, address, &ptl, 1);
-	if (!pte)			/* the page is not in this mm */
-		return 0;
-	pte_unmap_unlock(pte, ptl);
+    unsigned long address;
+    pte_t *pte;
+    spinlock_t *ptl;
+
+    address = vma_address(page, vma);
+    if (address == -EFAULT)        /* out of vma range */
+        return 0;
+    pte = page_check_address(page, vma->vm_mm, address, &ptl, 1);
+    if (!pte)            /* the page is not in this mm */
+        return 0;
+    pte_unmap_unlock(pte, ptl);
 
-	return 1;
+    return 1;
 }
 
 /*
@@ -697,119 +697,119 @@ int page_mapped_in_vma(struct page *page
  * repeatedly from either page_referenced_anon or page_referenced_file.
  */
 int page_referenced_one(struct page *page, struct vm_area_struct *vma,
-			unsigned long address, unsigned int *mapcount,
-			unsigned long *vm_flags)
+            unsigned long address, unsigned int *mapcount,
+            unsigned long *vm_flags)
 {
-	struct mm_struct *mm = vma->vm_mm;
-	int referenced = 0;
+    struct mm_struct *mm = vma->vm_mm;
+    int referenced = 0;
 
-	if (unlikely(PageTransHuge(page))) {
-		pmd_t *pmd;
+    if (unlikely(PageTransHuge(page))) {
+        pmd_t *pmd;
 
-		spin_lock(&mm->page_table_lock);
-		/*
-		 * rmap might return false positives; we must filter
-		 * these out using page_check_address_pmd().
-		 */
-		pmd = page_check_address_pmd(page, mm, address,
-					     PAGE_CHECK_ADDRESS_PMD_FLAG);
-		if (!pmd) {
-			spin_unlock(&mm->page_table_lock);
-			goto out;
-		}
-
-		if (vma->vm_flags & VM_LOCKED) {
-			spin_unlock(&mm->page_table_lock);
-			*mapcount = 0;	/* break early from loop */
-			*vm_flags |= VM_LOCKED;
-			goto out;
-		}
-
-		/* go ahead even if the pmd is pmd_trans_splitting() */
-		if (pmdp_clear_flush_young_notify(vma, address, pmd))
-			referenced++;
-		spin_unlock(&mm->page_table_lock);
-	} else {
-		pte_t *pte;
-		spinlock_t *ptl;
-
-		/*
-		 * rmap might return false positives; we must filter
-		 * these out using page_check_address().
-		 */
-		pte = page_check_address(page, mm, address, &ptl, 0);
-		if (!pte)
-			goto out;
-
-		if (vma->vm_flags & VM_LOCKED) {
-			pte_unmap_unlock(pte, ptl);
-			*mapcount = 0;	/* break early from loop */
-			*vm_flags |= VM_LOCKED;
-			goto out;
-		}
-
-		if (ptep_clear_flush_young_notify(vma, address, pte)) {
-			/*
-			 * Don't treat a reference through a sequentially read
-			 * mapping as such.  If the page has been used in
-			 * another mapping, we will catch it; if this other
-			 * mapping is already gone, the unmap path will have
-			 * set PG_referenced or activated the page.
-			 */
-			if (likely(!VM_SequentialReadHint(vma)))
-				referenced++;
-		}
-		pte_unmap_unlock(pte, ptl);
-	}
-
-	/* Pretend the page is referenced if the task has the
-	   swap token and is in the middle of a page fault. */
-	if (mm != current->mm && has_swap_token(mm) &&
-			rwsem_is_locked(&mm->mmap_sem))
-		referenced++;
+        spin_lock(&mm->page_table_lock);
+        /*
+         * rmap might return false positives; we must filter
+         * these out using page_check_address_pmd().
+         */
+        pmd = page_check_address_pmd(page, mm, address,
+                         PAGE_CHECK_ADDRESS_PMD_FLAG);
+        if (!pmd) {
+            spin_unlock(&mm->page_table_lock);
+            goto out;
+        }
+
+        if (vma->vm_flags & VM_LOCKED) {
+            spin_unlock(&mm->page_table_lock);
+            *mapcount = 0;    /* break early from loop */
+            *vm_flags |= VM_LOCKED;
+            goto out;
+        }
+
+        /* go ahead even if the pmd is pmd_trans_splitting() */
+        if (pmdp_clear_flush_young_notify(vma, address, pmd))
+            referenced++;
+        spin_unlock(&mm->page_table_lock);
+    } else {
+        pte_t *pte;
+        spinlock_t *ptl;
+
+        /*
+         * rmap might return false positives; we must filter
+         * these out using page_check_address().
+         */
+        pte = page_check_address(page, mm, address, &ptl, 0);
+        if (!pte)
+            goto out;
+
+        if (vma->vm_flags & VM_LOCKED) {
+            pte_unmap_unlock(pte, ptl);
+            *mapcount = 0;    /* break early from loop */
+            *vm_flags |= VM_LOCKED;
+            goto out;
+        }
+
+        if (ptep_clear_flush_young_notify(vma, address, pte)) {
+            /*
+             * Don't treat a reference through a sequentially read
+             * mapping as such.  If the page has been used in
+             * another mapping, we will catch it; if this other
+             * mapping is already gone, the unmap path will have
+             * set PG_referenced or activated the page.
+             */
+            if (likely(!VM_SequentialReadHint(vma)))
+                referenced++;
+        }
+        pte_unmap_unlock(pte, ptl);
+    }
+
+    /* Pretend the page is referenced if the task has the
+       swap token and is in the middle of a page fault. */
+    if (mm != current->mm && has_swap_token(mm) &&
+            rwsem_is_locked(&mm->mmap_sem))
+        referenced++;
 
-	(*mapcount)--;
+    (*mapcount)--;
 
-	if (referenced)
-		*vm_flags |= vma->vm_flags;
+    if (referenced)
+        *vm_flags |= vma->vm_flags;
 out:
-	return referenced;
+    return referenced;
 }
 
 static int page_referenced_anon(struct page *page,
-				struct mem_cgroup *memcg,
-				unsigned long *vm_flags)
+                struct mem_cgroup *memcg,
+                unsigned long *vm_flags)
 {
-	unsigned int mapcount;
-	struct anon_vma *anon_vma;
-	struct anon_vma_chain *avc;
-	int referenced = 0;
-
-	anon_vma = page_lock_anon_vma(page);
-	if (!anon_vma)
-		return referenced;
-
-	mapcount = page_mapcount(page);
-	list_for_each_entry(avc, &anon_vma->head, same_anon_vma) {
-		struct vm_area_struct *vma = avc->vma;
-		unsigned long address = vma_address(page, vma);
-		if (address == -EFAULT)
-			continue;
-		/*
-		 * If we are reclaiming on behalf of a cgroup, skip
-		 * counting on behalf of references from different
-		 * cgroups
-		 */
-		if (memcg && !mm_match_cgroup(vma->vm_mm, memcg))
-			continue;
-		referenced += page_referenced_one(page, vma, address,
-						  &mapcount, vm_flags);
-		if (!mapcount)
-			break;
-	}
+    unsigned int mapcount;
+    struct anon_vma *anon_vma;
+    struct anon_vma_chain *avc;
+    int referenced = 0;
+
+    anon_vma = page_lock_anon_vma(page);
+    if (!anon_vma)
+        return referenced;
+
+    mapcount = page_mapcount(page);
+    list_for_each_entry(avc, &anon_vma->head, same_anon_vma) {
+        struct vm_area_struct *vma = avc->vma;
+        unsigned long address = vma_address(page, vma);
+        if (address == -EFAULT)
+            continue;
+        /*
+         * If we are reclaiming on behalf of a cgroup, skip
+         * counting on behalf of references from different
+         * cgroups
+         */
+        if (memcg && !mm_match_cgroup(vma->vm_mm, memcg))
+            continue;
+        referenced += page_referenced_one(page, vma, address,
+                          &mapcount, vm_flags);
+        if (!mapcount)
+            break;
+    }
 
-	page_unlock_anon_vma(anon_vma);
-	return referenced;
+    page_unlock_anon_vma(anon_vma);
+    return referenced;
 }
 
 /**
@@ -826,58 +826,58 @@ static int page_referenced_anon(struct p
  * This function is only called from page_referenced for object-based pages.
  */
 static int page_referenced_file(struct page *page,
-				struct mem_cgroup *memcg,
-				unsigned long *vm_flags)
+                struct mem_cgroup *memcg,
+                unsigned long *vm_flags)
 {
-	unsigned int mapcount;
-	struct address_space *mapping = page->mapping;
-	pgoff_t pgoff = page->index << (PAGE_CACHE_SHIFT - PAGE_SHIFT);
-	struct vm_area_struct *vma;
-	struct prio_tree_iter iter;
-	int referenced = 0;
-
-	/*
-	 * The caller's checks on page->mapping and !PageAnon have made
-	 * sure that this is a file page: the check for page->mapping
-	 * excludes the case just before it gets set on an anon page.
-	 */
-	BUG_ON(PageAnon(page));
-
-	/*
-	 * The page lock not only makes sure that page->mapping cannot
-	 * suddenly be NULLified by truncation, it makes sure that the
-	 * structure at mapping cannot be freed and reused yet,
-	 * so we can safely take mapping->i_mmap_mutex.
-	 */
-	BUG_ON(!PageLocked(page));
-
-	mutex_lock(&mapping->i_mmap_mutex);
-
-	/*
-	 * i_mmap_mutex does not stabilize mapcount at all, but mapcount
-	 * is more likely to be accurate if we note it after spinning.
-	 */
-	mapcount = page_mapcount(page);
-
-	vma_prio_tree_foreach(vma, &iter, &mapping->i_mmap, pgoff, pgoff) {
-		unsigned long address = vma_address(page, vma);
-		if (address == -EFAULT)
-			continue;
-		/*
-		 * If we are reclaiming on behalf of a cgroup, skip
-		 * counting on behalf of references from different
-		 * cgroups
-		 */
-		if (memcg && !mm_match_cgroup(vma->vm_mm, memcg))
-			continue;
-		referenced += page_referenced_one(page, vma, address,
-						  &mapcount, vm_flags);
-		if (!mapcount)
-			break;
-	}
+    unsigned int mapcount;
+    struct address_space *mapping = page->mapping;
+    pgoff_t pgoff = page->index << (PAGE_CACHE_SHIFT - PAGE_SHIFT);
+    struct vm_area_struct *vma;
+    struct prio_tree_iter iter;
+    int referenced = 0;
+
+    /*
+     * The caller's checks on page->mapping and !PageAnon have made
+     * sure that this is a file page: the check for page->mapping
+     * excludes the case just before it gets set on an anon page.
+     */
+    BUG_ON(PageAnon(page));
+
+    /*
+     * The page lock not only makes sure that page->mapping cannot
+     * suddenly be NULLified by truncation, it makes sure that the
+     * structure at mapping cannot be freed and reused yet,
+     * so we can safely take mapping->i_mmap_mutex.
+     */
+    BUG_ON(!PageLocked(page));
+
+    mutex_lock(&mapping->i_mmap_mutex);
+
+    /*
+     * i_mmap_mutex does not stabilize mapcount at all, but mapcount
+     * is more likely to be accurate if we note it after spinning.
+     */
+    mapcount = page_mapcount(page);
+
+    vma_prio_tree_foreach(vma, &iter, &mapping->i_mmap, pgoff, pgoff) {
+        unsigned long address = vma_address(page, vma);
+        if (address == -EFAULT)
+            continue;
+        /*
+         * If we are reclaiming on behalf of a cgroup, skip
+         * counting on behalf of references from different
+         * cgroups
+         */
+        if (memcg && !mm_match_cgroup(vma->vm_mm, memcg))
+            continue;
+        referenced += page_referenced_one(page, vma, address,
+                          &mapcount, vm_flags);
+        if (!mapcount)
+            break;
+    }
 
-	mutex_unlock(&mapping->i_mmap_mutex);
-	return referenced;
+    mutex_unlock(&mapping->i_mmap_mutex);
+    return referenced;
 }
 
 /**
@@ -891,112 +891,112 @@ static int page_referenced_file(struct p
  * returns the number of ptes which referenced the page.
  */
 int page_referenced(struct page *page,
-		    int is_locked,
-		    struct mem_cgroup *memcg,
-		    unsigned long *vm_flags)
-{
-	int referenced = 0;
-	int we_locked = 0;
-
-	*vm_flags = 0;
-	if (page_mapped(page) && page_rmapping(page)) {
-		if (!is_locked && (!PageAnon(page) || PageKsm(page))) {
-			we_locked = trylock_page(page);
-			if (!we_locked) {
-				referenced++;
-				goto out;
-			}
-		}
-		if (unlikely(PageKsm(page)))
-			referenced += page_referenced_ksm(page, memcg,
-								vm_flags);
-		else if (PageAnon(page))
-			referenced += page_referenced_anon(page, memcg,
-								vm_flags);
-		else if (page->mapping)
-			referenced += page_referenced_file(page, memcg,
-								vm_flags);
-		if (we_locked)
-			unlock_page(page);
-
-		if (page_test_and_clear_young(page_to_pfn(page)))
-			referenced++;
-	}
+            int is_locked,
+            struct mem_cgroup *memcg,
+            unsigned long *vm_flags)
+{
+    int referenced = 0;
+    int we_locked = 0;
+
+    *vm_flags = 0;
+    if (page_mapped(page) && page_rmapping(page)) {
+        if (!is_locked && (!PageAnon(page) || PageKsm(page))) {
+            we_locked = trylock_page(page);
+            if (!we_locked) {
+                referenced++;
+                goto out;
+            }
+        }
+        if (unlikely(PageKsm(page)))
+            referenced += page_referenced_ksm(page, memcg,
+                                vm_flags);
+        else if (PageAnon(page))
+            referenced += page_referenced_anon(page, memcg,
+                                vm_flags);
+        else if (page->mapping)
+            referenced += page_referenced_file(page, memcg,
+                                vm_flags);
+        if (we_locked)
+            unlock_page(page);
+
+        if (page_test_and_clear_young(page_to_pfn(page)))
+            referenced++;
+    }
 out:
-	return referenced;
+    return referenced;
 }
 
 static int page_mkclean_one(struct page *page, struct vm_area_struct *vma,
-			    unsigned long address)
+                unsigned long address)
 {
-	struct mm_struct *mm = vma->vm_mm;
-	pte_t *pte;
-	spinlock_t *ptl;
-	int ret = 0;
-
-	pte = page_check_address(page, mm, address, &ptl, 1);
-	if (!pte)
-		goto out;
-
-	if (pte_dirty(*pte) || pte_write(*pte)) {
-		pte_t entry;
-
-		flush_cache_page(vma, address, pte_pfn(*pte));
-		entry = ptep_clear_flush_notify(vma, address, pte);
-		entry = pte_wrprotect(entry);
-		entry = pte_mkclean(entry);
-		set_pte_at(mm, address, pte, entry);
-		ret = 1;
-	}
+    struct mm_struct *mm = vma->vm_mm;
+    pte_t *pte;
+    spinlock_t *ptl;
+    int ret = 0;
+
+    pte = page_check_address(page, mm, address, &ptl, 1);
+    if (!pte)
+        goto out;
+
+    if (pte_dirty(*pte) || pte_write(*pte)) {
+        pte_t entry;
+
+        flush_cache_page(vma, address, pte_pfn(*pte));
+        entry = ptep_clear_flush_notify(vma, address, pte);
+        entry = pte_wrprotect(entry);
+        entry = pte_mkclean(entry);
+        set_pte_at(mm, address, pte, entry);
+        ret = 1;
+    }
 
-	pte_unmap_unlock(pte, ptl);
+    pte_unmap_unlock(pte, ptl);
 out:
-	return ret;
+    return ret;
 }
 
 static int page_mkclean_file(struct address_space *mapping, struct page *page)
 {
-	pgoff_t pgoff = page->index << (PAGE_CACHE_SHIFT - PAGE_SHIFT);
-	struct vm_area_struct *vma;
-	struct prio_tree_iter iter;
-	int ret = 0;
-
-	BUG_ON(PageAnon(page));
-
-	mutex_lock(&mapping->i_mmap_mutex);
-	vma_prio_tree_foreach(vma, &iter, &mapping->i_mmap, pgoff, pgoff) {
-		if (vma->vm_flags & VM_SHARED) {
-			unsigned long address = vma_address(page, vma);
-			if (address == -EFAULT)
-				continue;
-			ret += page_mkclean_one(page, vma, address);
-		}
-	}
-	mutex_unlock(&mapping->i_mmap_mutex);
-	return ret;
+    pgoff_t pgoff = page->index << (PAGE_CACHE_SHIFT - PAGE_SHIFT);
+    struct vm_area_struct *vma;
+    struct prio_tree_iter iter;
+    int ret = 0;
+
+    BUG_ON(PageAnon(page));
+
+    mutex_lock(&mapping->i_mmap_mutex);
+    vma_prio_tree_foreach(vma, &iter, &mapping->i_mmap, pgoff, pgoff) {
+        if (vma->vm_flags & VM_SHARED) {
+            unsigned long address = vma_address(page, vma);
+            if (address == -EFAULT)
+                continue;
+            ret += page_mkclean_one(page, vma, address);
+        }
+    }
+    mutex_unlock(&mapping->i_mmap_mutex);
+    return ret;
 }
 
 int page_mkclean(struct page *page)
 {
-	int ret = 0;
+    int ret = 0;
 
-	BUG_ON(!PageLocked(page));
+    BUG_ON(!PageLocked(page));
 
-	if (page_mapped(page)) {
-		struct address_space *mapping = page_mapping(page);
-		if (mapping)
-			ret = page_mkclean_file(mapping, page);
-	}
+    if (page_mapped(page)) {
+        struct address_space *mapping = page_mapping(page);
+        if (mapping)
+            ret = page_mkclean_file(mapping, page);
+    }
 
-	return ret;
+    return ret;
 }
 EXPORT_SYMBOL_GPL(page_mkclean);
 
 /**
  * page_move_anon_rmap - move a page to our anon_vma
- * @page:	the page to move to our anon_vma
- * @vma:	the vma the page belongs to
- * @address:	the user virtual address mapped
+ * @page:    the page to move to our anon_vma
+ * @vma:    the vma the page belongs to
+ * @address:    the user virtual address mapped
  *
  * When a page belongs exclusively to one process after a COW event,
  * that page can be moved into the anon_vma that belongs to just that
@@ -1004,80 +1004,80 @@ EXPORT_SYMBOL_GPL(page_mkclean);
  * processes.
  */
 void page_move_anon_rmap(struct page *page,
-	struct vm_area_struct *vma, unsigned long address)
+    struct vm_area_struct *vma, unsigned long address)
 {
-	struct anon_vma *anon_vma = vma->anon_vma;
+    struct anon_vma *anon_vma = vma->anon_vma;
 
-	VM_BUG_ON(!PageLocked(page));
-	VM_BUG_ON(!anon_vma);
-	VM_BUG_ON(page->index != linear_page_index(vma, address));
+    VM_BUG_ON(!PageLocked(page));
+    VM_BUG_ON(!anon_vma);
+    VM_BUG_ON(page->index != linear_page_index(vma, address));
 
-	anon_vma = (void *) anon_vma + PAGE_MAPPING_ANON;
-	page->mapping = (struct address_space *) anon_vma;
+    anon_vma = (void *) anon_vma + PAGE_MAPPING_ANON;
+    page->mapping = (struct address_space *) anon_vma;
 }
 
 /**
  * __page_set_anon_rmap - set up new anonymous rmap
- * @page:	Page to add to rmap	
- * @vma:	VM area to add page to.
- * @address:	User virtual address of the mapping	
- * @exclusive:	the page is exclusively owned by the current process
+ * @page:    Page to add to rmap    
+ * @vma:    VM area to add page to.
+ * @address:    User virtual address of the mapping    
+ * @exclusive:    the page is exclusively owned by the current process
  */
 static void __page_set_anon_rmap(struct page *page,
-	struct vm_area_struct *vma, unsigned long address, int exclusive)
+    struct vm_area_struct *vma, unsigned long address, int exclusive)
 {
-	struct anon_vma *anon_vma = vma->anon_vma;
+    struct anon_vma *anon_vma = vma->anon_vma;
 
-	BUG_ON(!anon_vma);
+    BUG_ON(!anon_vma);
 
-	if (PageAnon(page))
-		return;
+    if (PageAnon(page))
+        return;
 
-	/*
-	 * If the page isn't exclusively mapped into this vma,
-	 * we must use the _oldest_ possible anon_vma for the
-	 * page mapping!
-	 */
-	if (!exclusive)
-		anon_vma = anon_vma->root;
-
-	anon_vma = (void *) anon_vma + PAGE_MAPPING_ANON;
-	page->mapping = (struct address_space *) anon_vma;
-	page->index = linear_page_index(vma, address);
+    /*
+     * If the page isn't exclusively mapped into this vma,
+     * we must use the _oldest_ possible anon_vma for the
+     * page mapping!
+     */
+    if (!exclusive)
+        anon_vma = anon_vma->root;
+
+    anon_vma = (void *) anon_vma + PAGE_MAPPING_ANON;
+    page->mapping = (struct address_space *) anon_vma;
+    page->index = linear_page_index(vma, address);
 }
 
 /**
  * __page_check_anon_rmap - sanity check anonymous rmap addition
- * @page:	the page to add the mapping to
- * @vma:	the vm area in which the mapping is added
- * @address:	the user virtual address mapped
+ * @page:    the page to add the mapping to
+ * @vma:    the vm area in which the mapping is added
+ * @address:    the user virtual address mapped
  */
 static void __page_check_anon_rmap(struct page *page,
-	struct vm_area_struct *vma, unsigned long address)
+    struct vm_area_struct *vma, unsigned long address)
 {
 #ifdef CONFIG_DEBUG_VM
-	/*
-	 * The page's anon-rmap details (mapping and index) are guaranteed to
-	 * be set up correctly at this point.
-	 *
-	 * We have exclusion against page_add_anon_rmap because the caller
-	 * always holds the page locked, except if called from page_dup_rmap,
-	 * in which case the page is already known to be setup.
-	 *
-	 * We have exclusion against page_add_new_anon_rmap because those pages
-	 * are initially only visible via the pagetables, and the pte is locked
-	 * over the call to page_add_new_anon_rmap.
-	 */
-	BUG_ON(page_anon_vma(page)->root != vma->anon_vma->root);
-	BUG_ON(page->index != linear_page_index(vma, address));
+    /*
+     * The page's anon-rmap details (mapping and index) are guaranteed to
+     * be set up correctly at this point.
+     *
+     * We have exclusion against page_add_anon_rmap because the caller
+     * always holds the page locked, except if called from page_dup_rmap,
+     * in which case the page is already known to be setup.
+     *
+     * We have exclusion against page_add_new_anon_rmap because those pages
+     * are initially only visible via the pagetables, and the pte is locked
+     * over the call to page_add_new_anon_rmap.
+     */
+    BUG_ON(page_anon_vma(page)->root != vma->anon_vma->root);
+    BUG_ON(page->index != linear_page_index(vma, address));
 #endif
 }
 
 /**
  * page_add_anon_rmap - add pte mapping to an anonymous page
- * @page:	the page to add the mapping to
- * @vma:	the vm area in which the mapping is added
- * @address:	the user virtual address mapped
+ * @page:    the page to add the mapping to
+ * @vma:    the vm area in which the mapping is added
+ * @address:    the user virtual address mapped
  *
  * The caller needs to hold the pte lock, and the page must be locked in
  * the anon_vma case: to serialize mapping,index checking after setting,
@@ -1085,9 +1085,9 @@ static void __page_check_anon_rmap(struc
  * (but PageKsm is never downgraded to PageAnon).
  */
 void page_add_anon_rmap(struct page *page,
-	struct vm_area_struct *vma, unsigned long address)
+    struct vm_area_struct *vma, unsigned long address)
 {
-	do_page_add_anon_rmap(page, vma, address, 0);
+    do_page_add_anon_rmap(page, vma, address, 0);
 }
 
 /*
@@ -1096,52 +1096,52 @@ void page_add_anon_rmap(struct page *pag
  * Everybody else should continue to use page_add_anon_rmap above.
  */
 void do_page_add_anon_rmap(struct page *page,
-	struct vm_area_struct *vma, unsigned long address, int exclusive)
+    struct vm_area_struct *vma, unsigned long address, int exclusive)
 {
-	int first = atomic_inc_and_test(&page->_mapcount);
-	if (first) {
-		if (!PageTransHuge(page))
-			__inc_zone_page_state(page, NR_ANON_PAGES);
-		else
-			__inc_zone_page_state(page,
-					      NR_ANON_TRANSPARENT_HUGEPAGES);
-	}
-	if (unlikely(PageKsm(page)))
-		return;
-
-	VM_BUG_ON(!PageLocked(page));
-	/* address might be in next vma when migration races vma_adjust */
-	if (first)
-		__page_set_anon_rmap(page, vma, address, exclusive);
-	else
-		__page_check_anon_rmap(page, vma, address);
+    int first = atomic_inc_and_test(&page->_mapcount);
+    if (first) {
+        if (!PageTransHuge(page))
+            __inc_zone_page_state(page, NR_ANON_PAGES);
+        else
+            __inc_zone_page_state(page,
+                          NR_ANON_TRANSPARENT_HUGEPAGES);
+    }
+    if (unlikely(PageKsm(page)))
+        return;
+
+    VM_BUG_ON(!PageLocked(page));
+    /* address might be in next vma when migration races vma_adjust */
+    if (first)
+        __page_set_anon_rmap(page, vma, address, exclusive);
+    else
+        __page_check_anon_rmap(page, vma, address);
 }
 
 /**
  * page_add_new_anon_rmap - add pte mapping to a new anonymous page
- * @page:	the page to add the mapping to
- * @vma:	the vm area in which the mapping is added
- * @address:	the user virtual address mapped
+ * @page:    the page to add the mapping to
+ * @vma:    the vm area in which the mapping is added
+ * @address:    the user virtual address mapped
  *
  * Same as page_add_anon_rmap but must only be called on *new* pages.
  * This means the inc-and-test can be bypassed.
  * Page does not have to be locked.
  */
 void page_add_new_anon_rmap(struct page *page,
-	struct vm_area_struct *vma, unsigned long address)
+    struct vm_area_struct *vma, unsigned long address)
 {
-	VM_BUG_ON(address < vma->vm_start || address >= vma->vm_end);
-	SetPageSwapBacked(page);
-	atomic_set(&page->_mapcount, 0); /* increment count (starts at -1) */
-	if (!PageTransHuge(page))
-		__inc_zone_page_state(page, NR_ANON_PAGES);
-	else
-		__inc_zone_page_state(page, NR_ANON_TRANSPARENT_HUGEPAGES);
-	__page_set_anon_rmap(page, vma, address, 1);
-	if (page_evictable(page, vma))
-		lru_cache_add_lru(page, LRU_ACTIVE_ANON);
-	else
-		add_page_to_unevictable_list(page);
+    VM_BUG_ON(address < vma->vm_start || address >= vma->vm_end);
+    SetPageSwapBacked(page);
+    atomic_set(&page->_mapcount, 0); /* increment count (starts at -1) */
+    if (!PageTransHuge(page))
+        __inc_zone_page_state(page, NR_ANON_PAGES);
+    else
+        __inc_zone_page_state(page, NR_ANON_TRANSPARENT_HUGEPAGES);
+    __page_set_anon_rmap(page, vma, address, 1);
+    if (page_evictable(page, vma))
+        lru_cache_add_lru(page, LRU_ACTIVE_ANON);
+    else
+        add_page_to_unevictable_list(page);
 }
 
 /**
@@ -1152,15 +1152,15 @@ void page_add_new_anon_rmap(struct page 
  */
 void page_add_file_rmap(struct page *page)
 {
-	bool locked;
-	unsigned long flags;
+    bool locked;
+    unsigned long flags;
 
-	mem_cgroup_begin_update_page_stat(page, &locked, &flags);
-	if (atomic_inc_and_test(&page->_mapcount)) {
-		__inc_zone_page_state(page, NR_FILE_MAPPED);
-		mem_cgroup_inc_page_stat(page, MEMCG_NR_FILE_MAPPED);
-	}
-	mem_cgroup_end_update_page_stat(page, &locked, &flags);
+    mem_cgroup_begin_update_page_stat(page, &locked, &flags);
+    if (atomic_inc_and_test(&page->_mapcount)) {
+        __inc_zone_page_state(page, NR_FILE_MAPPED);
+        mem_cgroup_inc_page_stat(page, MEMCG_NR_FILE_MAPPED);
+    }
+    mem_cgroup_end_update_page_stat(page, &locked, &flags);
 }
 
 /**
@@ -1171,73 +1171,73 @@ void page_add_file_rmap(struct page *pag
  */
 void page_remove_rmap(struct page *page)
 {
-	struct address_space *mapping = page_mapping(page);
-	bool anon = PageAnon(page);
-	bool locked;
-	unsigned long flags;
-
-	/*
-	 * The anon case has no mem_cgroup page_stat to update; but may
-	 * uncharge_page() below, where the lock ordering can deadlock if
-	 * we hold the lock against page_stat move: so avoid it on anon.
-	 */
-	if (!anon)
-		mem_cgroup_begin_update_page_stat(page, &locked, &flags);
-
-	/* page still mapped by someone else? */
-	if (!atomic_add_negative(-1, &page->_mapcount))
-		goto out;
-
-	/*
-	 * Now that the last pte has gone, s390 must transfer dirty
-	 * flag from storage key to struct page.  We can usually skip
-	 * this if the page is anon, so about to be freed; but perhaps
-	 * not if it's in swapcache - there might be another pte slot
-	 * containing the swap entry, but page not yet written to swap.
-	 *
-	 * And we can skip it on file pages, so long as the filesystem
-	 * participates in dirty tracking; but need to catch shm and tmpfs
-	 * and ramfs pages which have been modified since creation by read
-	 * fault.
-	 *
-	 * Note that mapping must be decided above, before decrementing
-	 * mapcount (which luckily provides a barrier): once page is unmapped,
-	 * it could be truncated and page->mapping reset to NULL at any moment.
-	 * Note also that we are relying on page_mapping(page) to set mapping
-	 * to &swapper_space when PageSwapCache(page).
-	 */
-	if (mapping && !mapping_cap_account_dirty(mapping) &&
-	    page_test_and_clear_dirty(page_to_pfn(page), 1))
-		set_page_dirty(page);
-	/*
-	 * Hugepages are not counted in NR_ANON_PAGES nor NR_FILE_MAPPED
-	 * and not charged by memcg for now.
-	 */
-	if (unlikely(PageHuge(page)))
-		goto out;
-	if (anon) {
-		mem_cgroup_uncharge_page(page);
-		if (!PageTransHuge(page))
-			__dec_zone_page_state(page, NR_ANON_PAGES);
-		else
-			__dec_zone_page_state(page,
-					      NR_ANON_TRANSPARENT_HUGEPAGES);
-	} else {
-		__dec_zone_page_state(page, NR_FILE_MAPPED);
-		mem_cgroup_dec_page_stat(page, MEMCG_NR_FILE_MAPPED);
-	}
-	/*
-	 * It would be tidy to reset the PageAnon mapping here,
-	 * but that might overwrite a racing page_add_anon_rmap
-	 * which increments mapcount after us but sets mapping
-	 * before us: so leave the reset to free_hot_cold_page,
-	 * and remember that it's only reliable while mapped.
-	 * Leaving it set also helps swapoff to reinstate ptes
-	 * faster for those pages still in swapcache.
-	 */
+    struct address_space *mapping = page_mapping(page);
+    bool anon = PageAnon(page);
+    bool locked;
+    unsigned long flags;
+
+    /*
+     * The anon case has no mem_cgroup page_stat to update; but may
+     * uncharge_page() below, where the lock ordering can deadlock if
+     * we hold the lock against page_stat move: so avoid it on anon.
+     */
+    if (!anon)
+        mem_cgroup_begin_update_page_stat(page, &locked, &flags);
+
+    /* page still mapped by someone else? */
+    if (!atomic_add_negative(-1, &page->_mapcount))
+        goto out;
+
+    /*
+     * Now that the last pte has gone, s390 must transfer dirty
+     * flag from storage key to struct page.  We can usually skip
+     * this if the page is anon, so about to be freed; but perhaps
+     * not if it's in swapcache - there might be another pte slot
+     * containing the swap entry, but page not yet written to swap.
+     *
+     * And we can skip it on file pages, so long as the filesystem
+     * participates in dirty tracking; but need to catch shm and tmpfs
+     * and ramfs pages which have been modified since creation by read
+     * fault.
+     *
+     * Note that mapping must be decided above, before decrementing
+     * mapcount (which luckily provides a barrier): once page is unmapped,
+     * it could be truncated and page->mapping reset to NULL at any moment.
+     * Note also that we are relying on page_mapping(page) to set mapping
+     * to &swapper_space when PageSwapCache(page).
+     */
+    if (mapping && !mapping_cap_account_dirty(mapping) &&
+        page_test_and_clear_dirty(page_to_pfn(page), 1))
+        set_page_dirty(page);
+    /*
+     * Hugepages are not counted in NR_ANON_PAGES nor NR_FILE_MAPPED
+     * and not charged by memcg for now.
+     */
+    if (unlikely(PageHuge(page)))
+        goto out;
+    if (anon) {
+        mem_cgroup_uncharge_page(page);
+        if (!PageTransHuge(page))
+            __dec_zone_page_state(page, NR_ANON_PAGES);
+        else
+            __dec_zone_page_state(page,
+                          NR_ANON_TRANSPARENT_HUGEPAGES);
+    } else {
+        __dec_zone_page_state(page, NR_FILE_MAPPED);
+        mem_cgroup_dec_page_stat(page, MEMCG_NR_FILE_MAPPED);
+    }
+    /*
+     * It would be tidy to reset the PageAnon mapping here,
+     * but that might overwrite a racing page_add_anon_rmap
+     * which increments mapcount after us but sets mapping
+     * before us: so leave the reset to free_hot_cold_page,
+     * and remember that it's only reliable while mapped.
+     * Leaving it set also helps swapoff to reinstate ptes
+     * faster for those pages still in swapcache.
+     */
 out:
-	if (!anon)
-		mem_cgroup_end_update_page_stat(page, &locked, &flags);
+    if (!anon)
+        mem_cgroup_end_update_page_stat(page, &locked, &flags);
 }
 
 /*
@@ -1245,124 +1245,124 @@ out:
  * repeatedly from try_to_unmap_ksm, try_to_unmap_anon or try_to_unmap_file.
  */
 int try_to_unmap_one(struct page *page, struct vm_area_struct *vma,
-		     unsigned long address, enum ttu_flags flags)
+             unsigned long address, enum ttu_flags flags)
 {
-	struct mm_struct *mm = vma->vm_mm;
-	pte_t *pte;
-	pte_t pteval;
-	spinlock_t *ptl;
-	int ret = SWAP_AGAIN;
-
-	pte = page_check_address(page, mm, address, &ptl, 0);
-	if (!pte)
-		goto out;
-
-	/*
-	 * If the page is mlock()d, we cannot swap it out.
-	 * If it's recently referenced (perhaps page_referenced
-	 * skipped over this mm) then we should reactivate it.
-	 */
-	if (!(flags & TTU_IGNORE_MLOCK)) {
-		if (vma->vm_flags & VM_LOCKED)
-			goto out_mlock;
-
-		if (TTU_ACTION(flags) == TTU_MUNLOCK)
-			goto out_unmap;
-	}
-	if (!(flags & TTU_IGNORE_ACCESS)) {
-		if (ptep_clear_flush_young_notify(vma, address, pte)) {
-			ret = SWAP_FAIL;
-			goto out_unmap;
-		}
-  	}
-
-	/* Nuke the page table entry. */
-	flush_cache_page(vma, address, page_to_pfn(page));
-	pteval = ptep_clear_flush_notify(vma, address, pte);
-
-	/* Move the dirty bit to the physical page now the pte is gone. */
-	if (pte_dirty(pteval))
-		set_page_dirty(page);
-
-	/* Update high watermark before we lower rss */
-	update_hiwater_rss(mm);
-
-	if (PageHWPoison(page) && !(flags & TTU_IGNORE_HWPOISON)) {
-		if (PageAnon(page))
-			dec_mm_counter(mm, MM_ANONPAGES);
-		else
-			dec_mm_counter(mm, MM_FILEPAGES);
-		set_pte_at(mm, address, pte,
-				swp_entry_to_pte(make_hwpoison_entry(page)));
-	} else if (PageAnon(page)) {
-		swp_entry_t entry = { .val = page_private(page) };
-
-		if (PageSwapCache(page)) {
-			/*
-			 * Store the swap location in the pte.
-			 * See handle_pte_fault() ...
-			 */
-			if (swap_duplicate(entry) < 0) {
-				set_pte_at(mm, address, pte, pteval);
-				ret = SWAP_FAIL;
-				goto out_unmap;
-			}
-			if (list_empty(&mm->mmlist)) {
-				spin_lock(&mmlist_lock);
-				if (list_empty(&mm->mmlist))
-					list_add(&mm->mmlist, &init_mm.mmlist);
-				spin_unlock(&mmlist_lock);
-			}
-			dec_mm_counter(mm, MM_ANONPAGES);
-			inc_mm_counter(mm, MM_SWAPENTS);
-		} else if (IS_ENABLED(CONFIG_MIGRATION)) {
-			/*
-			 * Store the pfn of the page in a special migration
-			 * pte. do_swap_page() will wait until the migration
-			 * pte is removed and then restart fault handling.
-			 */
-			BUG_ON(TTU_ACTION(flags) != TTU_MIGRATION);
-			entry = make_migration_entry(page, pte_write(pteval));
-		}
-		set_pte_at(mm, address, pte, swp_entry_to_pte(entry));
-		BUG_ON(pte_file(*pte));
-	} else if (IS_ENABLED(CONFIG_MIGRATION) &&
-		   (TTU_ACTION(flags) == TTU_MIGRATION)) {
-		/* Establish migration entry for a file page */
-		swp_entry_t entry;
-		entry = make_migration_entry(page, pte_write(pteval));
-		set_pte_at(mm, address, pte, swp_entry_to_pte(entry));
-	} else
-		dec_mm_counter(mm, MM_FILEPAGES);
+    struct mm_struct *mm = vma->vm_mm;
+    pte_t *pte;
+    pte_t pteval;
+    spinlock_t *ptl;
+    int ret = SWAP_AGAIN;
+
+    pte = page_check_address(page, mm, address, &ptl, 0);
+    if (!pte)
+        goto out;
+
+    /*
+     * If the page is mlock()d, we cannot swap it out.
+     * If it's recently referenced (perhaps page_referenced
+     * skipped over this mm) then we should reactivate it.
+     */
+    if (!(flags & TTU_IGNORE_MLOCK)) {
+        if (vma->vm_flags & VM_LOCKED)
+            goto out_mlock;
+
+        if (TTU_ACTION(flags) == TTU_MUNLOCK)
+            goto out_unmap;
+    }
+    if (!(flags & TTU_IGNORE_ACCESS)) {
+        if (ptep_clear_flush_young_notify(vma, address, pte)) {
+            ret = SWAP_FAIL;
+            goto out_unmap;
+        }
+      }
+
+    /* Nuke the page table entry. */
+    flush_cache_page(vma, address, page_to_pfn(page));
+    pteval = ptep_clear_flush_notify(vma, address, pte);
+
+    /* Move the dirty bit to the physical page now the pte is gone. */
+    if (pte_dirty(pteval))
+        set_page_dirty(page);
+
+    /* Update high watermark before we lower rss */
+    update_hiwater_rss(mm);
+
+    if (PageHWPoison(page) && !(flags & TTU_IGNORE_HWPOISON)) {
+        if (PageAnon(page))
+            dec_mm_counter(mm, MM_ANONPAGES);
+        else
+            dec_mm_counter(mm, MM_FILEPAGES);
+        set_pte_at(mm, address, pte,
+                swp_entry_to_pte(make_hwpoison_entry(page)));
+    } else if (PageAnon(page)) {
+        swp_entry_t entry = { .val = page_private(page) };
+
+        if (PageSwapCache(page)) {
+            /*
+             * Store the swap location in the pte.
+             * See handle_pte_fault() ...
+             */
+            if (swap_duplicate(entry) < 0) {
+                set_pte_at(mm, address, pte, pteval);
+                ret = SWAP_FAIL;
+                goto out_unmap;
+            }
+            if (list_empty(&mm->mmlist)) {
+                spin_lock(&mmlist_lock);
+                if (list_empty(&mm->mmlist))
+                    list_add(&mm->mmlist, &init_mm.mmlist);
+                spin_unlock(&mmlist_lock);
+            }
+            dec_mm_counter(mm, MM_ANONPAGES);
+            inc_mm_counter(mm, MM_SWAPENTS);
+        } else if (IS_ENABLED(CONFIG_MIGRATION)) {
+            /*
+             * Store the pfn of the page in a special migration
+             * pte. do_swap_page() will wait until the migration
+             * pte is removed and then restart fault handling.
+             */
+            BUG_ON(TTU_ACTION(flags) != TTU_MIGRATION);
+            entry = make_migration_entry(page, pte_write(pteval));
+        }
+        set_pte_at(mm, address, pte, swp_entry_to_pte(entry));
+        BUG_ON(pte_file(*pte));
+    } else if (IS_ENABLED(CONFIG_MIGRATION) &&
+           (TTU_ACTION(flags) == TTU_MIGRATION)) {
+        /* Establish migration entry for a file page */
+        swp_entry_t entry;
+        entry = make_migration_entry(page, pte_write(pteval));
+        set_pte_at(mm, address, pte, swp_entry_to_pte(entry));
+    } else
+        dec_mm_counter(mm, MM_FILEPAGES);
 
-	page_remove_rmap(page);
-	page_cache_release(page);
+    page_remove_rmap(page);
+    page_cache_release(page);
 
 out_unmap:
-	pte_unmap_unlock(pte, ptl);
+    pte_unmap_unlock(pte, ptl);
 out:
-	return ret;
+    return ret;
 
 out_mlock:
-	pte_unmap_unlock(pte, ptl);
+    pte_unmap_unlock(pte, ptl);
 
 
-	/*
-	 * We need mmap_sem locking, Otherwise VM_LOCKED check makes
-	 * unstable result and race. Plus, We can't wait here because
-	 * we now hold anon_vma->mutex or mapping->i_mmap_mutex.
-	 * if trylock failed, the page remain in evictable lru and later
-	 * vmscan could retry to move the page to unevictable lru if the
-	 * page is actually mlocked.
-	 */
-	if (down_read_trylock(&vma->vm_mm->mmap_sem)) {
-		if (vma->vm_flags & VM_LOCKED) {
-			mlock_vma_page(page);
-			ret = SWAP_MLOCK;
-		}
-		up_read(&vma->vm_mm->mmap_sem);
-	}
-	return ret;
+    /*
+     * We need mmap_sem locking, Otherwise VM_LOCKED check makes
+     * unstable result and race. Plus, We can't wait here because
+     * we now hold anon_vma->mutex or mapping->i_mmap_mutex.
+     * if trylock failed, the page remain in evictable lru and later
+     * vmscan could retry to move the page to unevictable lru if the
+     * page is actually mlocked.
+     */
+    if (down_read_trylock(&vma->vm_mm->mmap_sem)) {
+        if (vma->vm_flags & VM_LOCKED) {
+            mlock_vma_page(page);
+            ret = SWAP_MLOCK;
+        }
+        up_read(&vma->vm_mm->mmap_sem);
+    }
+    return ret;
 }
 
 /*
@@ -1389,120 +1389,120 @@ out_mlock:
  * rather than unmapping them.  If we encounter the "check_page" that vmscan is
  * trying to unmap, return SWAP_MLOCK, else default SWAP_AGAIN.
  */
-#define CLUSTER_SIZE	min(32*PAGE_SIZE, PMD_SIZE)
-#define CLUSTER_MASK	(~(CLUSTER_SIZE - 1))
+#define CLUSTER_SIZE    min(32*PAGE_SIZE, PMD_SIZE)
+#define CLUSTER_MASK    (~(CLUSTER_SIZE - 1))
 
 static int try_to_unmap_cluster(unsigned long cursor, unsigned int *mapcount,
-		struct vm_area_struct *vma, struct page *check_page)
+        struct vm_area_struct *vma, struct page *check_page)
 {
-	struct mm_struct *mm = vma->vm_mm;
-	pgd_t *pgd;
-	pud_t *pud;
-	pmd_t *pmd;
-	pte_t *pte;
-	pte_t pteval;
-	spinlock_t *ptl;
-	struct page *page;
-	unsigned long address;
-	unsigned long end;
-	int ret = SWAP_AGAIN;
-	int locked_vma = 0;
-
-	address = (vma->vm_start + cursor) & CLUSTER_MASK;
-	end = address + CLUSTER_SIZE;
-	if (address < vma->vm_start)
-		address = vma->vm_start;
-	if (end > vma->vm_end)
-		end = vma->vm_end;
-
-	pgd = pgd_offset(mm, address);
-	if (!pgd_present(*pgd))
-		return ret;
-
-	pud = pud_offset(pgd, address);
-	if (!pud_present(*pud))
-		return ret;
-
-	pmd = pmd_offset(pud, address);
-	if (!pmd_present(*pmd))
-		return ret;
-
-	/*
-	 * If we can acquire the mmap_sem for read, and vma is VM_LOCKED,
-	 * keep the sem while scanning the cluster for mlocking pages.
-	 */
-	if (down_read_trylock(&vma->vm_mm->mmap_sem)) {
-		locked_vma = (vma->vm_flags & VM_LOCKED);
-		if (!locked_vma)
-			up_read(&vma->vm_mm->mmap_sem); /* don't need it */
-	}
-
-	pte = pte_offset_map_lock(mm, pmd, address, &ptl);
-
-	/* Update high watermark before we lower rss */
-	update_hiwater_rss(mm);
-
-	for (; address < end; pte++, address += PAGE_SIZE) {
-		if (!pte_present(*pte))
-			continue;
-		page = vm_normal_page(vma, address, *pte);
-		BUG_ON(!page || PageAnon(page));
-
-		if (locked_vma) {
-			if (page == check_page) {
-				/* we know we have check_page locked */
-				mlock_vma_page(page);
-				ret = SWAP_MLOCK;
-			} else if (trylock_page(page)) {
-				/*
-				 * If we can lock the page, perform mlock.
-				 * Otherwise leave the page alone, it will be
-				 * eventually encountered again later.
-				 */
-				mlock_vma_page(page);
-				unlock_page(page);
-			}
-			continue;	/* don't unmap */
-		}
-
-		if (ptep_clear_flush_young_notify(vma, address, pte))
-			continue;
-
-		/* Nuke the page table entry. */
-		flush_cache_page(vma, address, pte_pfn(*pte));
-		pteval = ptep_clear_flush_notify(vma, address, pte);
-
-		/* If nonlinear, store the file page offset in the pte. */
-		if (page->index != linear_page_index(vma, address))
-			set_pte_at(mm, address, pte, pgoff_to_pte(page->index));
-
-		/* Move the dirty bit to the physical page now the pte is gone. */
-		if (pte_dirty(pteval))
-			set_page_dirty(page);
-
-		page_remove_rmap(page);
-		page_cache_release(page);
-		dec_mm_counter(mm, MM_FILEPAGES);
-		(*mapcount)--;
-	}
-	pte_unmap_unlock(pte - 1, ptl);
-	if (locked_vma)
-		up_read(&vma->vm_mm->mmap_sem);
-	return ret;
+    struct mm_struct *mm = vma->vm_mm;
+    pgd_t *pgd;
+    pud_t *pud;
+    pmd_t *pmd;
+    pte_t *pte;
+    pte_t pteval;
+    spinlock_t *ptl;
+    struct page *page;
+    unsigned long address;
+    unsigned long end;
+    int ret = SWAP_AGAIN;
+    int locked_vma = 0;
+
+    address = (vma->vm_start + cursor) & CLUSTER_MASK;
+    end = address + CLUSTER_SIZE;
+    if (address < vma->vm_start)
+        address = vma->vm_start;
+    if (end > vma->vm_end)
+        end = vma->vm_end;
+
+    pgd = pgd_offset(mm, address);
+    if (!pgd_present(*pgd))
+        return ret;
+
+    pud = pud_offset(pgd, address);
+    if (!pud_present(*pud))
+        return ret;
+
+    pmd = pmd_offset(pud, address);
+    if (!pmd_present(*pmd))
+        return ret;
+
+    /*
+     * If we can acquire the mmap_sem for read, and vma is VM_LOCKED,
+     * keep the sem while scanning the cluster for mlocking pages.
+     */
+    if (down_read_trylock(&vma->vm_mm->mmap_sem)) {
+        locked_vma = (vma->vm_flags & VM_LOCKED);
+        if (!locked_vma)
+            up_read(&vma->vm_mm->mmap_sem); /* don't need it */
+    }
+
+    pte = pte_offset_map_lock(mm, pmd, address, &ptl);
+
+    /* Update high watermark before we lower rss */
+    update_hiwater_rss(mm);
+
+    for (; address < end; pte++, address += PAGE_SIZE) {
+        if (!pte_present(*pte))
+            continue;
+        page = vm_normal_page(vma, address, *pte);
+        BUG_ON(!page || PageAnon(page));
+
+        if (locked_vma) {
+            if (page == check_page) {
+                /* we know we have check_page locked */
+                mlock_vma_page(page);
+                ret = SWAP_MLOCK;
+            } else if (trylock_page(page)) {
+                /*
+                 * If we can lock the page, perform mlock.
+                 * Otherwise leave the page alone, it will be
+                 * eventually encountered again later.
+                 */
+                mlock_vma_page(page);
+                unlock_page(page);
+            }
+            continue;    /* don't unmap */
+        }
+
+        if (ptep_clear_flush_young_notify(vma, address, pte))
+            continue;
+
+        /* Nuke the page table entry. */
+        flush_cache_page(vma, address, pte_pfn(*pte));
+        pteval = ptep_clear_flush_notify(vma, address, pte);
+
+        /* If nonlinear, store the file page offset in the pte. */
+        if (page->index != linear_page_index(vma, address))
+            set_pte_at(mm, address, pte, pgoff_to_pte(page->index));
+
+        /* Move the dirty bit to the physical page now the pte is gone. */
+        if (pte_dirty(pteval))
+            set_page_dirty(page);
+
+        page_remove_rmap(page);
+        page_cache_release(page);
+        dec_mm_counter(mm, MM_FILEPAGES);
+        (*mapcount)--;
+    }
+    pte_unmap_unlock(pte - 1, ptl);
+    if (locked_vma)
+        up_read(&vma->vm_mm->mmap_sem);
+    return ret;
 }
 
 bool is_vma_temporary_stack(struct vm_area_struct *vma)
 {
-	int maybe_stack = vma->vm_flags & (VM_GROWSDOWN | VM_GROWSUP);
+    int maybe_stack = vma->vm_flags & (VM_GROWSDOWN | VM_GROWSUP);
 
-	if (!maybe_stack)
-		return false;
+    if (!maybe_stack)
+        return false;
 
-	if ((vma->vm_flags & VM_STACK_INCOMPLETE_SETUP) ==
-						VM_STACK_INCOMPLETE_SETUP)
-		return true;
+    if ((vma->vm_flags & VM_STACK_INCOMPLETE_SETUP) ==
+                        VM_STACK_INCOMPLETE_SETUP)
+        return true;
 
-	return false;
+    return false;
 }
 
 /**
@@ -1523,40 +1523,41 @@ bool is_vma_temporary_stack(struct vm_ar
  */
 static int try_to_unmap_anon(struct page *page, enum ttu_flags flags)
 {
-	struct anon_vma *anon_vma;
-	struct anon_vma_chain *avc;
-	int ret = SWAP_AGAIN;
-
-	anon_vma = page_lock_anon_vma(page);
-	if (!anon_vma)
-		return ret;
-
-	list_for_each_entry(avc, &anon_vma->head, same_anon_vma) {
-		struct vm_area_struct *vma = avc->vma;
-		unsigned long address;
-
-		/*
-		 * During exec, a temporary VMA is setup and later moved.
-		 * The VMA is moved under the anon_vma lock but not the
-		 * page tables leading to a race where migration cannot
-		 * find the migration ptes. Rather than increasing the
-		 * locking requirements of exec(), migration skips
-		 * temporary VMAs until after exec() completes.
-		 */
-		if (IS_ENABLED(CONFIG_MIGRATION) && (flags & TTU_MIGRATION) &&
-				is_vma_temporary_stack(vma))
-			continue;
-
-		address = vma_address(page, vma);
-		if (address == -EFAULT)
-			continue;
-		ret = try_to_unmap_one(page, vma, address, flags);
-		if (ret != SWAP_AGAIN || !page_mapped(page))
-			break;
-	}
+    struct anon_vma *anon_vma;
+    struct anon_vma_chain *avc;
+    int ret = SWAP_AGAIN;
+
+    anon_vma = page_lock_anon_vma(page);
+    if (!anon_vma)
+        return ret;
+
+    list_for_each_entry(avc, &anon_vma->head, same_anon_vma) {
+        struct vm_area_struct *vma = avc->vma;
+        unsigned long address;
+		struct vma_descriptor *it = NULL;
+		
+        /*
+         * During exec, a temporary VMA is setup and later moved.
+         * The VMA is moved under the anon_vma lock but not the
+         * page tables leading to a race where migration cannot
+         * find the migration ptes. Rather than increasing the
+         * locking requirements of exec(), migration skips
+         * temporary VMAs until after exec() completes.
+         */
+        if (IS_ENABLED(CONFIG_MIGRATION) && (flags & TTU_MIGRATION) &&
+                is_vma_temporary_stack(vma))
+            continue;
+
+        address = vma_address(page, vma);
+        if (address == -EFAULT)
+            continue;
+        ret = try_to_unmap_one(page, vma, address, flags);
+        if (ret != SWAP_AGAIN || !page_mapped(page))
+            break;
+    }
 
-	page_unlock_anon_vma(anon_vma);
-	return ret;
+    page_unlock_anon_vma(anon_vma);
+    return ret;
 }
 
 /**
@@ -1576,98 +1577,98 @@ static int try_to_unmap_anon(struct page
  */
 static int try_to_unmap_file(struct page *page, enum ttu_flags flags)
 {
-	struct address_space *mapping = page->mapping;
-	pgoff_t pgoff = page->index << (PAGE_CACHE_SHIFT - PAGE_SHIFT);
-	struct vm_area_struct *vma;
-	struct prio_tree_iter iter;
-	int ret = SWAP_AGAIN;
-	unsigned long cursor;
-	unsigned long max_nl_cursor = 0;
-	unsigned long max_nl_size = 0;
-	unsigned int mapcount;
-
-	mutex_lock(&mapping->i_mmap_mutex);
-	vma_prio_tree_foreach(vma, &iter, &mapping->i_mmap, pgoff, pgoff) {
-		unsigned long address = vma_address(page, vma);
-		if (address == -EFAULT)
-			continue;
-		ret = try_to_unmap_one(page, vma, address, flags);
-		if (ret != SWAP_AGAIN || !page_mapped(page))
-			goto out;
-	}
-
-	if (list_empty(&mapping->i_mmap_nonlinear))
-		goto out;
-
-	/*
-	 * We don't bother to try to find the munlocked page in nonlinears.
-	 * It's costly. Instead, later, page reclaim logic may call
-	 * try_to_unmap(TTU_MUNLOCK) and recover PG_mlocked lazily.
-	 */
-	if (TTU_ACTION(flags) == TTU_MUNLOCK)
-		goto out;
-
-	list_for_each_entry(vma, &mapping->i_mmap_nonlinear,
-						shared.vm_set.list) {
-		cursor = (unsigned long) vma->vm_private_data;
-		if (cursor > max_nl_cursor)
-			max_nl_cursor = cursor;
-		cursor = vma->vm_end - vma->vm_start;
-		if (cursor > max_nl_size)
-			max_nl_size = cursor;
-	}
-
-	if (max_nl_size == 0) {	/* all nonlinears locked or reserved ? */
-		ret = SWAP_FAIL;
-		goto out;
-	}
-
-	/*
-	 * We don't try to search for this page in the nonlinear vmas,
-	 * and page_referenced wouldn't have found it anyway.  Instead
-	 * just walk the nonlinear vmas trying to age and unmap some.
-	 * The mapcount of the page we came in with is irrelevant,
-	 * but even so use it as a guide to how hard we should try?
-	 */
-	mapcount = page_mapcount(page);
-	if (!mapcount)
-		goto out;
-	cond_resched();
-
-	max_nl_size = (max_nl_size + CLUSTER_SIZE - 1) & CLUSTER_MASK;
-	if (max_nl_cursor == 0)
-		max_nl_cursor = CLUSTER_SIZE;
-
-	do {
-		list_for_each_entry(vma, &mapping->i_mmap_nonlinear,
-						shared.vm_set.list) {
-			cursor = (unsigned long) vma->vm_private_data;
-			while ( cursor < max_nl_cursor &&
-				cursor < vma->vm_end - vma->vm_start) {
-				if (try_to_unmap_cluster(cursor, &mapcount,
-						vma, page) == SWAP_MLOCK)
-					ret = SWAP_MLOCK;
-				cursor += CLUSTER_SIZE;
-				vma->vm_private_data = (void *) cursor;
-				if ((int)mapcount <= 0)
-					goto out;
-			}
-			vma->vm_private_data = (void *) max_nl_cursor;
-		}
-		cond_resched();
-		max_nl_cursor += CLUSTER_SIZE;
-	} while (max_nl_cursor <= max_nl_size);
-
-	/*
-	 * Don't loop forever (perhaps all the remaining pages are
-	 * in locked vmas).  Reset cursor on all unreserved nonlinear
-	 * vmas, now forgetting on which ones it had fallen behind.
-	 */
-	list_for_each_entry(vma, &mapping->i_mmap_nonlinear, shared.vm_set.list)
-		vma->vm_private_data = NULL;
+    struct address_space *mapping = page->mapping;
+    pgoff_t pgoff = page->index << (PAGE_CACHE_SHIFT - PAGE_SHIFT);
+    struct vm_area_struct *vma;
+    struct prio_tree_iter iter;
+    int ret = SWAP_AGAIN;
+    unsigned long cursor;
+    unsigned long max_nl_cursor = 0;
+    unsigned long max_nl_size = 0;
+    unsigned int mapcount;
+
+    mutex_lock(&mapping->i_mmap_mutex);
+    vma_prio_tree_foreach(vma, &iter, &mapping->i_mmap, pgoff, pgoff) {
+        unsigned long address = vma_address(page, vma);
+        if (address == -EFAULT)
+            continue;
+        ret = try_to_unmap_one(page, vma, address, flags);
+        if (ret != SWAP_AGAIN || !page_mapped(page))
+            goto out;
+    }
+
+    if (list_empty(&mapping->i_mmap_nonlinear))
+        goto out;
+
+    /*
+     * We don't bother to try to find the munlocked page in nonlinears.
+     * It's costly. Instead, later, page reclaim logic may call
+     * try_to_unmap(TTU_MUNLOCK) and recover PG_mlocked lazily.
+     */
+    if (TTU_ACTION(flags) == TTU_MUNLOCK)
+        goto out;
+
+    list_for_each_entry(vma, &mapping->i_mmap_nonlinear,
+                        shared.vm_set.list) {
+        cursor = (unsigned long) vma->vm_private_data;
+        if (cursor > max_nl_cursor)
+            max_nl_cursor = cursor;
+        cursor = vma->vm_end - vma->vm_start;
+        if (cursor > max_nl_size)
+            max_nl_size = cursor;
+    }
+
+    if (max_nl_size == 0) {    /* all nonlinears locked or reserved ? */
+        ret = SWAP_FAIL;
+        goto out;
+    }
+
+    /*
+     * We don't try to search for this page in the nonlinear vmas,
+     * and page_referenced wouldn't have found it anyway.  Instead
+     * just walk the nonlinear vmas trying to age and unmap some.
+     * The mapcount of the page we came in with is irrelevant,
+     * but even so use it as a guide to how hard we should try?
+     */
+    mapcount = page_mapcount(page);
+    if (!mapcount)
+        goto out;
+    cond_resched();
+
+    max_nl_size = (max_nl_size + CLUSTER_SIZE - 1) & CLUSTER_MASK;
+    if (max_nl_cursor == 0)
+        max_nl_cursor = CLUSTER_SIZE;
+
+    do {
+        list_for_each_entry(vma, &mapping->i_mmap_nonlinear,
+                        shared.vm_set.list) {
+            cursor = (unsigned long) vma->vm_private_data;
+            while ( cursor < max_nl_cursor &&
+                cursor < vma->vm_end - vma->vm_start) {
+                if (try_to_unmap_cluster(cursor, &mapcount,
+                        vma, page) == SWAP_MLOCK)
+                    ret = SWAP_MLOCK;
+                cursor += CLUSTER_SIZE;
+                vma->vm_private_data = (void *) cursor;
+                if ((int)mapcount <= 0)
+                    goto out;
+            }
+            vma->vm_private_data = (void *) max_nl_cursor;
+        }
+        cond_resched();
+        max_nl_cursor += CLUSTER_SIZE;
+    } while (max_nl_cursor <= max_nl_size);
+
+    /*
+     * Don't loop forever (perhaps all the remaining pages are
+     * in locked vmas).  Reset cursor on all unreserved nonlinear
+     * vmas, now forgetting on which ones it had fallen behind.
+     */
+    list_for_each_entry(vma, &mapping->i_mmap_nonlinear, shared.vm_set.list)
+        vma->vm_private_data = NULL;
 out:
-	mutex_unlock(&mapping->i_mmap_mutex);
-	return ret;
+    mutex_unlock(&mapping->i_mmap_mutex);
+    return ret;
 }
 
 /**
@@ -1679,27 +1680,27 @@ out:
  * page, used in the pageout path.  Caller must hold the page lock.
  * Return values are:
  *
- * SWAP_SUCCESS	- we succeeded in removing all mappings
- * SWAP_AGAIN	- we missed a mapping, try again later
- * SWAP_FAIL	- the page is unswappable
- * SWAP_MLOCK	- page is mlocked.
+ * SWAP_SUCCESS    - we succeeded in removing all mappings
+ * SWAP_AGAIN    - we missed a mapping, try again later
+ * SWAP_FAIL    - the page is unswappable
+ * SWAP_MLOCK    - page is mlocked.
  */
 int try_to_unmap(struct page *page, enum ttu_flags flags)
 {
-	int ret;
+    int ret;
 
-	BUG_ON(!PageLocked(page));
-	VM_BUG_ON(!PageHuge(page) && PageTransHuge(page));
+    BUG_ON(!PageLocked(page));
+    VM_BUG_ON(!PageHuge(page) && PageTransHuge(page));
 
-	if (unlikely(PageKsm(page)))
-		ret = try_to_unmap_ksm(page, flags);
-	else if (PageAnon(page))
-		ret = try_to_unmap_anon(page, flags);
-	else
-		ret = try_to_unmap_file(page, flags);
-	if (ret != SWAP_MLOCK && !page_mapped(page))
-		ret = SWAP_SUCCESS;
-	return ret;
+    if (unlikely(PageKsm(page)))
+        ret = try_to_unmap_ksm(page, flags);
+    else if (PageAnon(page))
+        ret = try_to_unmap_anon(page, flags);
+    else
+        ret = try_to_unmap_file(page, flags);
+    if (ret != SWAP_MLOCK && !page_mapped(page))
+        ret = SWAP_SUCCESS;
+    return ret;
 }
 
 /**
@@ -1712,30 +1713,30 @@ int try_to_unmap(struct page *page, enum
  *
  * Return values are:
  *
- * SWAP_AGAIN	- no vma is holding page mlocked, or,
- * SWAP_AGAIN	- page mapped in mlocked vma -- couldn't acquire mmap sem
- * SWAP_FAIL	- page cannot be located at present
- * SWAP_MLOCK	- page is now mlocked.
+ * SWAP_AGAIN    - no vma is holding page mlocked, or,
+ * SWAP_AGAIN    - page mapped in mlocked vma -- couldn't acquire mmap sem
+ * SWAP_FAIL    - page cannot be located at present
+ * SWAP_MLOCK    - page is now mlocked.
  */
 int try_to_munlock(struct page *page)
 {
-	VM_BUG_ON(!PageLocked(page) || PageLRU(page));
+    VM_BUG_ON(!PageLocked(page) || PageLRU(page));
 
-	if (unlikely(PageKsm(page)))
-		return try_to_unmap_ksm(page, TTU_MUNLOCK);
-	else if (PageAnon(page))
-		return try_to_unmap_anon(page, TTU_MUNLOCK);
-	else
-		return try_to_unmap_file(page, TTU_MUNLOCK);
+    if (unlikely(PageKsm(page)))
+        return try_to_unmap_ksm(page, TTU_MUNLOCK);
+    else if (PageAnon(page))
+        return try_to_unmap_anon(page, TTU_MUNLOCK);
+    else
+        return try_to_unmap_file(page, TTU_MUNLOCK);
 }
 
 void __put_anon_vma(struct anon_vma *anon_vma)
 {
-	struct anon_vma *root = anon_vma->root;
+    struct anon_vma *root = anon_vma->root;
 
-	anon_vma_free(anon_vma);
-	if (root != anon_vma && atomic_dec_and_test(&root->refcount))
-		anon_vma_free(root);
+    anon_vma_free(anon_vma);
+    if (root != anon_vma && atomic_dec_and_test(&root->refcount))
+        anon_vma_free(root);
 }
 
 #ifdef CONFIG_MIGRATION
@@ -1744,75 +1745,75 @@ void __put_anon_vma(struct anon_vma *ano
  * Called by migrate.c to remove migration ptes, but might be used more later.
  */
 static int rmap_walk_anon(struct page *page, int (*rmap_one)(struct page *,
-		struct vm_area_struct *, unsigned long, void *), void *arg)
+        struct vm_area_struct *, unsigned long, void *), void *arg)
 {
-	struct anon_vma *anon_vma;
-	struct anon_vma_chain *avc;
-	int ret = SWAP_AGAIN;
-
-	/*
-	 * Note: remove_migration_ptes() cannot use page_lock_anon_vma()
-	 * because that depends on page_mapped(); but not all its usages
-	 * are holding mmap_sem. Users without mmap_sem are required to
-	 * take a reference count to prevent the anon_vma disappearing
-	 */
-	anon_vma = page_anon_vma(page);
-	if (!anon_vma)
-		return ret;
-	anon_vma_lock(anon_vma);
-	list_for_each_entry(avc, &anon_vma->head, same_anon_vma) {
-		struct vm_area_struct *vma = avc->vma;
-		unsigned long address = vma_address(page, vma);
-		if (address == -EFAULT)
-			continue;
-		ret = rmap_one(page, vma, address, arg);
-		if (ret != SWAP_AGAIN)
-			break;
-	}
-	anon_vma_unlock(anon_vma);
-	return ret;
+    struct anon_vma *anon_vma;
+    struct anon_vma_chain *avc;
+    int ret = SWAP_AGAIN;
+
+    /*
+     * Note: remove_migration_ptes() cannot use page_lock_anon_vma()
+     * because that depends on page_mapped(); but not all its usages
+     * are holding mmap_sem. Users without mmap_sem are required to
+     * take a reference count to prevent the anon_vma disappearing
+     */
+    anon_vma = page_anon_vma(page);
+    if (!anon_vma)
+        return ret;
+    anon_vma_lock(anon_vma);
+    list_for_each_entry(avc, &anon_vma->head, same_anon_vma) {
+        struct vm_area_struct *vma = avc->vma;
+        unsigned long address = vma_address(page, vma);
+        if (address == -EFAULT)
+            continue;
+        ret = rmap_one(page, vma, address, arg);
+        if (ret != SWAP_AGAIN)
+            break;
+    }
+    anon_vma_unlock(anon_vma);
+    return ret;
 }
 
 static int rmap_walk_file(struct page *page, int (*rmap_one)(struct page *,
-		struct vm_area_struct *, unsigned long, void *), void *arg)
+        struct vm_area_struct *, unsigned long, void *), void *arg)
 {
-	struct address_space *mapping = page->mapping;
-	pgoff_t pgoff = page->index << (PAGE_CACHE_SHIFT - PAGE_SHIFT);
-	struct vm_area_struct *vma;
-	struct prio_tree_iter iter;
-	int ret = SWAP_AGAIN;
-
-	if (!mapping)
-		return ret;
-	mutex_lock(&mapping->i_mmap_mutex);
-	vma_prio_tree_foreach(vma, &iter, &mapping->i_mmap, pgoff, pgoff) {
-		unsigned long address = vma_address(page, vma);
-		if (address == -EFAULT)
-			continue;
-		ret = rmap_one(page, vma, address, arg);
-		if (ret != SWAP_AGAIN)
-			break;
-	}
-	/*
-	 * No nonlinear handling: being always shared, nonlinear vmas
-	 * never contain migration ptes.  Decide what to do about this
-	 * limitation to linear when we need rmap_walk() on nonlinear.
-	 */
-	mutex_unlock(&mapping->i_mmap_mutex);
-	return ret;
+    struct address_space *mapping = page->mapping;
+    pgoff_t pgoff = page->index << (PAGE_CACHE_SHIFT - PAGE_SHIFT);
+    struct vm_area_struct *vma;
+    struct prio_tree_iter iter;
+    int ret = SWAP_AGAIN;
+
+    if (!mapping)
+        return ret;
+    mutex_lock(&mapping->i_mmap_mutex);
+    vma_prio_tree_foreach(vma, &iter, &mapping->i_mmap, pgoff, pgoff) {
+        unsigned long address = vma_address(page, vma);
+        if (address == -EFAULT)
+            continue;
+        ret = rmap_one(page, vma, address, arg);
+        if (ret != SWAP_AGAIN)
+            break;
+    }
+    /*
+     * No nonlinear handling: being always shared, nonlinear vmas
+     * never contain migration ptes.  Decide what to do about this
+     * limitation to linear when we need rmap_walk() on nonlinear.
+     */
+    mutex_unlock(&mapping->i_mmap_mutex);
+    return ret;
 }
 
 int rmap_walk(struct page *page, int (*rmap_one)(struct page *,
-		struct vm_area_struct *, unsigned long, void *), void *arg)
+        struct vm_area_struct *, unsigned long, void *), void *arg)
 {
-	VM_BUG_ON(!PageLocked(page));
+    VM_BUG_ON(!PageLocked(page));
 
-	if (unlikely(PageKsm(page)))
-		return rmap_walk_ksm(page, rmap_one, arg);
-	else if (PageAnon(page))
-		return rmap_walk_anon(page, rmap_one, arg);
-	else
-		return rmap_walk_file(page, rmap_one, arg);
+    if (unlikely(PageKsm(page)))
+        return rmap_walk_ksm(page, rmap_one, arg);
+    else if (PageAnon(page))
+        return rmap_walk_anon(page, rmap_one, arg);
+    else
+        return rmap_walk_file(page, rmap_one, arg);
 }
 #endif /* CONFIG_MIGRATION */
 
@@ -1823,41 +1824,41 @@ int rmap_walk(struct page *page, int (*r
  * and no lru code, because we handle hugepages differently from common pages.
  */
 static void __hugepage_set_anon_rmap(struct page *page,
-	struct vm_area_struct *vma, unsigned long address, int exclusive)
+    struct vm_area_struct *vma, unsigned long address, int exclusive)
 {
-	struct anon_vma *anon_vma = vma->anon_vma;
+    struct anon_vma *anon_vma = vma->anon_vma;
 
-	BUG_ON(!anon_vma);
+    BUG_ON(!anon_vma);
 
-	if (PageAnon(page))
-		return;
-	if (!exclusive)
-		anon_vma = anon_vma->root;
+    if (PageAnon(page))
+        return;
+    if (!exclusive)
+        anon_vma = anon_vma->root;
 
-	anon_vma = (void *) anon_vma + PAGE_MAPPING_ANON;
-	page->mapping = (struct address_space *) anon_vma;
-	page->index = linear_page_index(vma, address);
+    anon_vma = (void *) anon_vma + PAGE_MAPPING_ANON;
+    page->mapping = (struct address_space *) anon_vma;
+    page->index = linear_page_index(vma, address);
 }
 
 void hugepage_add_anon_rmap(struct page *page,
-			    struct vm_area_struct *vma, unsigned long address)
+                struct vm_area_struct *vma, unsigned long address)
 {
-	struct anon_vma *anon_vma = vma->anon_vma;
-	int first;
+    struct anon_vma *anon_vma = vma->anon_vma;
+    int first;
 
-	BUG_ON(!PageLocked(page));
-	BUG_ON(!anon_vma);
-	/* address might be in next vma when migration races vma_adjust */
-	first = atomic_inc_and_test(&page->_mapcount);
-	if (first)
-		__hugepage_set_anon_rmap(page, vma, address, 0);
+    BUG_ON(!PageLocked(page));
+    BUG_ON(!anon_vma);
+    /* address might be in next vma when migration races vma_adjust */
+    first = atomic_inc_and_test(&page->_mapcount);
+    if (first)
+        __hugepage_set_anon_rmap(page, vma, address, 0);
 }
 
 void hugepage_add_new_anon_rmap(struct page *page,
-			struct vm_area_struct *vma, unsigned long address)
+            struct vm_area_struct *vma, unsigned long address)
 {
-	BUG_ON(address < vma->vm_start || address >= vma->vm_end);
-	atomic_set(&page->_mapcount, 0);
-	__hugepage_set_anon_rmap(page, vma, address, 1);
+    BUG_ON(address < vma->vm_start || address >= vma->vm_end);
+    atomic_set(&page->_mapcount, 0);
+    __hugepage_set_anon_rmap(page, vma, address, 1);
 }
 #endif /* CONFIG_HUGETLB_PAGE */
Binary files ../linux-3.4.104-vanilla/scripts/basic/fixdep and linux-3.4.104-syssec_hw2_app2/scripts/basic/fixdep differ
Binary files ../linux-3.4.104-vanilla/scripts/bin2c and linux-3.4.104-syssec_hw2_app2/scripts/bin2c differ
Binary files ../linux-3.4.104-vanilla/scripts/conmakehash and linux-3.4.104-syssec_hw2_app2/scripts/conmakehash differ
Binary files ../linux-3.4.104-vanilla/scripts/genksyms/genksyms and linux-3.4.104-syssec_hw2_app2/scripts/genksyms/genksyms differ
diff -uprN ../linux-3.4.104-vanilla/scripts/genksyms/keywords.hash.c linux-3.4.104-syssec_hw2_app2/scripts/genksyms/keywords.hash.c
--- ../linux-3.4.104-vanilla/scripts/genksyms/keywords.hash.c	1969-12-31 19:00:00.000000000 -0500
+++ linux-3.4.104-syssec_hw2_app2/scripts/genksyms/keywords.hash.c	2014-11-05 20:53:31.000000000 -0500
@@ -0,0 +1,220 @@
+/* ANSI-C code produced by gperf version 3.0.4 */
+/* Command-line: gperf -t --output-file scripts/genksyms/keywords.hash.c_shipped -a -C -E -g -k '1,3,$' -p -t scripts/genksyms/keywords.gperf  */
+
+#if !((' ' == 32) && ('!' == 33) && ('"' == 34) && ('#' == 35) \
+      && ('%' == 37) && ('&' == 38) && ('\'' == 39) && ('(' == 40) \
+      && (')' == 41) && ('*' == 42) && ('+' == 43) && (',' == 44) \
+      && ('-' == 45) && ('.' == 46) && ('/' == 47) && ('0' == 48) \
+      && ('1' == 49) && ('2' == 50) && ('3' == 51) && ('4' == 52) \
+      && ('5' == 53) && ('6' == 54) && ('7' == 55) && ('8' == 56) \
+      && ('9' == 57) && (':' == 58) && (';' == 59) && ('<' == 60) \
+      && ('=' == 61) && ('>' == 62) && ('?' == 63) && ('A' == 65) \
+      && ('B' == 66) && ('C' == 67) && ('D' == 68) && ('E' == 69) \
+      && ('F' == 70) && ('G' == 71) && ('H' == 72) && ('I' == 73) \
+      && ('J' == 74) && ('K' == 75) && ('L' == 76) && ('M' == 77) \
+      && ('N' == 78) && ('O' == 79) && ('P' == 80) && ('Q' == 81) \
+      && ('R' == 82) && ('S' == 83) && ('T' == 84) && ('U' == 85) \
+      && ('V' == 86) && ('W' == 87) && ('X' == 88) && ('Y' == 89) \
+      && ('Z' == 90) && ('[' == 91) && ('\\' == 92) && (']' == 93) \
+      && ('^' == 94) && ('_' == 95) && ('a' == 97) && ('b' == 98) \
+      && ('c' == 99) && ('d' == 100) && ('e' == 101) && ('f' == 102) \
+      && ('g' == 103) && ('h' == 104) && ('i' == 105) && ('j' == 106) \
+      && ('k' == 107) && ('l' == 108) && ('m' == 109) && ('n' == 110) \
+      && ('o' == 111) && ('p' == 112) && ('q' == 113) && ('r' == 114) \
+      && ('s' == 115) && ('t' == 116) && ('u' == 117) && ('v' == 118) \
+      && ('w' == 119) && ('x' == 120) && ('y' == 121) && ('z' == 122) \
+      && ('{' == 123) && ('|' == 124) && ('}' == 125) && ('~' == 126))
+/* The character set is not based on ISO-646.  */
+#error "gperf generated tables don't work with this execution character set. Please report a bug to <bug-gnu-gperf@gnu.org>."
+#endif
+
+#line 4 "scripts/genksyms/keywords.gperf"
+
+struct resword;
+static const struct resword *is_reserved_word(register const char *str, register unsigned int len);
+#line 8 "scripts/genksyms/keywords.gperf"
+struct resword { const char *name; int token; };
+/* maximum key range = 64, duplicates = 0 */
+
+#ifdef __GNUC__
+__inline
+#else
+#ifdef __cplusplus
+inline
+#endif
+#endif
+static unsigned int
+is_reserved_hash (register const char *str, register unsigned int len)
+{
+  static const unsigned char asso_values[] =
+    {
+      67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
+      67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
+      67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
+      67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
+      67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
+      67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
+      67, 67, 67, 67, 67, 67, 67, 67, 67,  0,
+      67, 67, 67, 67, 67, 67, 15, 67, 67, 67,
+       0, 67, 67, 67, 67, 67, 67, 67, 67, 67,
+      67, 67, 67, 67, 67,  0, 67,  0, 67,  5,
+      25, 20, 15, 30, 67, 15, 67, 67, 10,  0,
+      10, 40, 20, 67, 10,  5,  0, 10, 15, 67,
+      67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
+      67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
+      67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
+      67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
+      67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
+      67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
+      67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
+      67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
+      67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
+      67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
+      67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
+      67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
+      67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
+      67, 67, 67, 67, 67, 67
+    };
+  return len + asso_values[(unsigned char)str[2]] + asso_values[(unsigned char)str[0]] + asso_values[(unsigned char)str[len - 1]];
+}
+
+#ifdef __GNUC__
+__inline
+#if defined __GNUC_STDC_INLINE__ || defined __GNUC_GNU_INLINE__
+__attribute__ ((__gnu_inline__))
+#endif
+#endif
+const struct resword *
+is_reserved_word (register const char *str, register unsigned int len)
+{
+  enum
+    {
+      TOTAL_KEYWORDS = 45,
+      MIN_WORD_LENGTH = 3,
+      MAX_WORD_LENGTH = 24,
+      MIN_HASH_VALUE = 3,
+      MAX_HASH_VALUE = 66
+    };
+
+  static const struct resword wordlist[] =
+    {
+      {""}, {""}, {""},
+#line 33 "scripts/genksyms/keywords.gperf"
+      {"asm", ASM_KEYW},
+      {""},
+#line 15 "scripts/genksyms/keywords.gperf"
+      {"__asm", ASM_KEYW},
+      {""},
+#line 16 "scripts/genksyms/keywords.gperf"
+      {"__asm__", ASM_KEYW},
+      {""}, {""},
+#line 59 "scripts/genksyms/keywords.gperf"
+      {"__typeof__", TYPEOF_KEYW},
+      {""},
+#line 19 "scripts/genksyms/keywords.gperf"
+      {"__const", CONST_KEYW},
+#line 18 "scripts/genksyms/keywords.gperf"
+      {"__attribute__", ATTRIBUTE_KEYW},
+#line 20 "scripts/genksyms/keywords.gperf"
+      {"__const__", CONST_KEYW},
+#line 25 "scripts/genksyms/keywords.gperf"
+      {"__signed__", SIGNED_KEYW},
+#line 51 "scripts/genksyms/keywords.gperf"
+      {"static", STATIC_KEYW},
+      {""},
+#line 46 "scripts/genksyms/keywords.gperf"
+      {"int", INT_KEYW},
+#line 39 "scripts/genksyms/keywords.gperf"
+      {"char", CHAR_KEYW},
+#line 40 "scripts/genksyms/keywords.gperf"
+      {"const", CONST_KEYW},
+#line 52 "scripts/genksyms/keywords.gperf"
+      {"struct", STRUCT_KEYW},
+#line 31 "scripts/genksyms/keywords.gperf"
+      {"__restrict__", RESTRICT_KEYW},
+#line 32 "scripts/genksyms/keywords.gperf"
+      {"restrict", RESTRICT_KEYW},
+#line 12 "scripts/genksyms/keywords.gperf"
+      {"EXPORT_SYMBOL_GPL_FUTURE", EXPORT_SYMBOL_KEYW},
+#line 23 "scripts/genksyms/keywords.gperf"
+      {"__inline__", INLINE_KEYW},
+      {""},
+#line 27 "scripts/genksyms/keywords.gperf"
+      {"__volatile__", VOLATILE_KEYW},
+#line 10 "scripts/genksyms/keywords.gperf"
+      {"EXPORT_SYMBOL", EXPORT_SYMBOL_KEYW},
+#line 30 "scripts/genksyms/keywords.gperf"
+      {"_restrict", RESTRICT_KEYW},
+      {""},
+#line 17 "scripts/genksyms/keywords.gperf"
+      {"__attribute", ATTRIBUTE_KEYW},
+#line 11 "scripts/genksyms/keywords.gperf"
+      {"EXPORT_SYMBOL_GPL", EXPORT_SYMBOL_KEYW},
+#line 21 "scripts/genksyms/keywords.gperf"
+      {"__extension__", EXTENSION_KEYW},
+#line 42 "scripts/genksyms/keywords.gperf"
+      {"enum", ENUM_KEYW},
+#line 13 "scripts/genksyms/keywords.gperf"
+      {"EXPORT_UNUSED_SYMBOL", EXPORT_SYMBOL_KEYW},
+#line 43 "scripts/genksyms/keywords.gperf"
+      {"extern", EXTERN_KEYW},
+      {""},
+#line 24 "scripts/genksyms/keywords.gperf"
+      {"__signed", SIGNED_KEYW},
+#line 14 "scripts/genksyms/keywords.gperf"
+      {"EXPORT_UNUSED_SYMBOL_GPL", EXPORT_SYMBOL_KEYW},
+#line 54 "scripts/genksyms/keywords.gperf"
+      {"union", UNION_KEYW},
+#line 58 "scripts/genksyms/keywords.gperf"
+      {"typeof", TYPEOF_KEYW},
+#line 53 "scripts/genksyms/keywords.gperf"
+      {"typedef", TYPEDEF_KEYW},
+#line 22 "scripts/genksyms/keywords.gperf"
+      {"__inline", INLINE_KEYW},
+#line 38 "scripts/genksyms/keywords.gperf"
+      {"auto", AUTO_KEYW},
+#line 26 "scripts/genksyms/keywords.gperf"
+      {"__volatile", VOLATILE_KEYW},
+      {""}, {""},
+#line 55 "scripts/genksyms/keywords.gperf"
+      {"unsigned", UNSIGNED_KEYW},
+      {""},
+#line 49 "scripts/genksyms/keywords.gperf"
+      {"short", SHORT_KEYW},
+#line 45 "scripts/genksyms/keywords.gperf"
+      {"inline", INLINE_KEYW},
+      {""},
+#line 57 "scripts/genksyms/keywords.gperf"
+      {"volatile", VOLATILE_KEYW},
+#line 47 "scripts/genksyms/keywords.gperf"
+      {"long", LONG_KEYW},
+#line 29 "scripts/genksyms/keywords.gperf"
+      {"_Bool", BOOL_KEYW},
+      {""}, {""},
+#line 48 "scripts/genksyms/keywords.gperf"
+      {"register", REGISTER_KEYW},
+#line 56 "scripts/genksyms/keywords.gperf"
+      {"void", VOID_KEYW},
+#line 44 "scripts/genksyms/keywords.gperf"
+      {"float", FLOAT_KEYW},
+#line 41 "scripts/genksyms/keywords.gperf"
+      {"double", DOUBLE_KEYW},
+      {""}, {""}, {""}, {""},
+#line 50 "scripts/genksyms/keywords.gperf"
+      {"signed", SIGNED_KEYW}
+    };
+
+  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
+    {
+      register int key = is_reserved_hash (str, len);
+
+      if (key <= MAX_HASH_VALUE && key >= 0)
+        {
+          register const char *s = wordlist[key].name;
+
+          if (*str == *s && !strcmp (str + 1, s + 1))
+            return &wordlist[key];
+        }
+    }
+  return 0;
+}
diff -uprN ../linux-3.4.104-vanilla/scripts/genksyms/lex.lex.c linux-3.4.104-syssec_hw2_app2/scripts/genksyms/lex.lex.c
--- ../linux-3.4.104-vanilla/scripts/genksyms/lex.lex.c	1969-12-31 19:00:00.000000000 -0500
+++ linux-3.4.104-syssec_hw2_app2/scripts/genksyms/lex.lex.c	2014-11-05 20:53:31.000000000 -0500
@@ -0,0 +1,2245 @@
+
+#line 3 "scripts/genksyms/lex.lex.c_shipped"
+
+#define  YY_INT_ALIGNED short int
+
+/* A lexical scanner generated by flex */
+
+#define FLEX_SCANNER
+#define YY_FLEX_MAJOR_VERSION 2
+#define YY_FLEX_MINOR_VERSION 5
+#define YY_FLEX_SUBMINOR_VERSION 35
+#if YY_FLEX_SUBMINOR_VERSION > 0
+#define FLEX_BETA
+#endif
+
+/* First, we deal with  platform-specific or compiler-specific issues. */
+
+/* begin standard C headers. */
+#include <stdio.h>
+#include <string.h>
+#include <errno.h>
+#include <stdlib.h>
+
+/* end standard C headers. */
+
+/* flex integer type definitions */
+
+#ifndef FLEXINT_H
+#define FLEXINT_H
+
+/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */
+
+#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
+
+/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
+ * if you want the limit (max/min) macros for int types. 
+ */
+#ifndef __STDC_LIMIT_MACROS
+#define __STDC_LIMIT_MACROS 1
+#endif
+
+#include <inttypes.h>
+typedef int8_t flex_int8_t;
+typedef uint8_t flex_uint8_t;
+typedef int16_t flex_int16_t;
+typedef uint16_t flex_uint16_t;
+typedef int32_t flex_int32_t;
+typedef uint32_t flex_uint32_t;
+#else
+typedef signed char flex_int8_t;
+typedef short int flex_int16_t;
+typedef int flex_int32_t;
+typedef unsigned char flex_uint8_t; 
+typedef unsigned short int flex_uint16_t;
+typedef unsigned int flex_uint32_t;
+#endif /* ! C99 */
+
+/* Limits of integral types. */
+#ifndef INT8_MIN
+#define INT8_MIN               (-128)
+#endif
+#ifndef INT16_MIN
+#define INT16_MIN              (-32767-1)
+#endif
+#ifndef INT32_MIN
+#define INT32_MIN              (-2147483647-1)
+#endif
+#ifndef INT8_MAX
+#define INT8_MAX               (127)
+#endif
+#ifndef INT16_MAX
+#define INT16_MAX              (32767)
+#endif
+#ifndef INT32_MAX
+#define INT32_MAX              (2147483647)
+#endif
+#ifndef UINT8_MAX
+#define UINT8_MAX              (255U)
+#endif
+#ifndef UINT16_MAX
+#define UINT16_MAX             (65535U)
+#endif
+#ifndef UINT32_MAX
+#define UINT32_MAX             (4294967295U)
+#endif
+
+#endif /* ! FLEXINT_H */
+
+#ifdef __cplusplus
+
+/* The "const" storage-class-modifier is valid. */
+#define YY_USE_CONST
+
+#else	/* ! __cplusplus */
+
+/* C99 requires __STDC__ to be defined as 1. */
+#if defined (__STDC__)
+
+#define YY_USE_CONST
+
+#endif	/* defined (__STDC__) */
+#endif	/* ! __cplusplus */
+
+#ifdef YY_USE_CONST
+#define yyconst const
+#else
+#define yyconst
+#endif
+
+/* Returned upon end-of-file. */
+#define YY_NULL 0
+
+/* Promotes a possibly negative, possibly signed char to an unsigned
+ * integer for use as an array index.  If the signed char is negative,
+ * we want to instead treat it as an 8-bit unsigned char, hence the
+ * double cast.
+ */
+#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)
+
+/* Enter a start condition.  This macro really ought to take a parameter,
+ * but we do it the disgusting crufty way forced on us by the ()-less
+ * definition of BEGIN.
+ */
+#define BEGIN (yy_start) = 1 + 2 *
+
+/* Translate the current start state into a value that can be later handed
+ * to BEGIN to return to the state.  The YYSTATE alias is for lex
+ * compatibility.
+ */
+#define YY_START (((yy_start) - 1) / 2)
+#define YYSTATE YY_START
+
+/* Action number for EOF rule of a given start state. */
+#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
+
+/* Special action meaning "start processing a new file". */
+#define YY_NEW_FILE yyrestart(yyin  )
+
+#define YY_END_OF_BUFFER_CHAR 0
+
+/* Size of default input buffer. */
+#ifndef YY_BUF_SIZE
+#define YY_BUF_SIZE 16384
+#endif
+
+/* The state buf must be large enough to hold one state per character in the main buffer.
+ */
+#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))
+
+#ifndef YY_TYPEDEF_YY_BUFFER_STATE
+#define YY_TYPEDEF_YY_BUFFER_STATE
+typedef struct yy_buffer_state *YY_BUFFER_STATE;
+#endif
+
+extern int yyleng;
+
+extern FILE *yyin, *yyout;
+
+#define EOB_ACT_CONTINUE_SCAN 0
+#define EOB_ACT_END_OF_FILE 1
+#define EOB_ACT_LAST_MATCH 2
+
+    #define YY_LESS_LINENO(n)
+    
+/* Return all but the first "n" matched characters back to the input stream. */
+#define yyless(n) \
+	do \
+		{ \
+		/* Undo effects of setting up yytext. */ \
+        int yyless_macro_arg = (n); \
+        YY_LESS_LINENO(yyless_macro_arg);\
+		*yy_cp = (yy_hold_char); \
+		YY_RESTORE_YY_MORE_OFFSET \
+		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
+		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
+		} \
+	while ( 0 )
+
+#define unput(c) yyunput( c, (yytext_ptr)  )
+
+#ifndef YY_TYPEDEF_YY_SIZE_T
+#define YY_TYPEDEF_YY_SIZE_T
+typedef size_t yy_size_t;
+#endif
+
+#ifndef YY_STRUCT_YY_BUFFER_STATE
+#define YY_STRUCT_YY_BUFFER_STATE
+struct yy_buffer_state
+	{
+	FILE *yy_input_file;
+
+	char *yy_ch_buf;		/* input buffer */
+	char *yy_buf_pos;		/* current position in input buffer */
+
+	/* Size of input buffer in bytes, not including room for EOB
+	 * characters.
+	 */
+	yy_size_t yy_buf_size;
+
+	/* Number of characters read into yy_ch_buf, not including EOB
+	 * characters.
+	 */
+	int yy_n_chars;
+
+	/* Whether we "own" the buffer - i.e., we know we created it,
+	 * and can realloc() it to grow it, and should free() it to
+	 * delete it.
+	 */
+	int yy_is_our_buffer;
+
+	/* Whether this is an "interactive" input source; if so, and
+	 * if we're using stdio for input, then we want to use getc()
+	 * instead of fread(), to make sure we stop fetching input after
+	 * each newline.
+	 */
+	int yy_is_interactive;
+
+	/* Whether we're considered to be at the beginning of a line.
+	 * If so, '^' rules will be active on the next match, otherwise
+	 * not.
+	 */
+	int yy_at_bol;
+
+    int yy_bs_lineno; /**< The line count. */
+    int yy_bs_column; /**< The column count. */
+    
+	/* Whether to try to fill the input buffer when we reach the
+	 * end of it.
+	 */
+	int yy_fill_buffer;
+
+	int yy_buffer_status;
+
+#define YY_BUFFER_NEW 0
+#define YY_BUFFER_NORMAL 1
+	/* When an EOF's been seen but there's still some text to process
+	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
+	 * shouldn't try reading from the input source any more.  We might
+	 * still have a bunch of tokens to match, though, because of
+	 * possible backing-up.
+	 *
+	 * When we actually see the EOF, we change the status to "new"
+	 * (via yyrestart()), so that the user can continue scanning by
+	 * just pointing yyin at a new input file.
+	 */
+#define YY_BUFFER_EOF_PENDING 2
+
+	};
+#endif /* !YY_STRUCT_YY_BUFFER_STATE */
+
+/* Stack of input buffers. */
+static size_t yy_buffer_stack_top = 0; /**< index of top of stack. */
+static size_t yy_buffer_stack_max = 0; /**< capacity of stack. */
+static YY_BUFFER_STATE * yy_buffer_stack = 0; /**< Stack as an array. */
+
+/* We provide macros for accessing buffer states in case in the
+ * future we want to put the buffer states in a more general
+ * "scanner state".
+ *
+ * Returns the top of the stack, or NULL.
+ */
+#define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
+                          ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
+                          : NULL)
+
+/* Same as previous macro, but useful when we know that the buffer stack is not
+ * NULL or when we need an lvalue. For internal use only.
+ */
+#define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
+
+/* yy_hold_char holds the character lost when yytext is formed. */
+static char yy_hold_char;
+static int yy_n_chars;		/* number of characters read into yy_ch_buf */
+int yyleng;
+
+/* Points to current character in buffer. */
+static char *yy_c_buf_p = (char *) 0;
+static int yy_init = 0;		/* whether we need to initialize */
+static int yy_start = 0;	/* start state number */
+
+/* Flag which is used to allow yywrap()'s to do buffer switches
+ * instead of setting up a fresh yyin.  A bit of a hack ...
+ */
+static int yy_did_buffer_switch_on_eof;
+
+void yyrestart (FILE *input_file  );
+void yy_switch_to_buffer (YY_BUFFER_STATE new_buffer  );
+YY_BUFFER_STATE yy_create_buffer (FILE *file,int size  );
+void yy_delete_buffer (YY_BUFFER_STATE b  );
+void yy_flush_buffer (YY_BUFFER_STATE b  );
+void yypush_buffer_state (YY_BUFFER_STATE new_buffer  );
+void yypop_buffer_state (void );
+
+static void yyensure_buffer_stack (void );
+static void yy_load_buffer_state (void );
+static void yy_init_buffer (YY_BUFFER_STATE b,FILE *file  );
+
+#define YY_FLUSH_BUFFER yy_flush_buffer(YY_CURRENT_BUFFER )
+
+YY_BUFFER_STATE yy_scan_buffer (char *base,yy_size_t size  );
+YY_BUFFER_STATE yy_scan_string (yyconst char *yy_str  );
+YY_BUFFER_STATE yy_scan_bytes (yyconst char *bytes,int len  );
+
+void *yyalloc (yy_size_t  );
+void *yyrealloc (void *,yy_size_t  );
+void yyfree (void *  );
+
+#define yy_new_buffer yy_create_buffer
+
+#define yy_set_interactive(is_interactive) \
+	{ \
+	if ( ! YY_CURRENT_BUFFER ){ \
+        yyensure_buffer_stack (); \
+		YY_CURRENT_BUFFER_LVALUE =    \
+            yy_create_buffer(yyin,YY_BUF_SIZE ); \
+	} \
+	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
+	}
+
+#define yy_set_bol(at_bol) \
+	{ \
+	if ( ! YY_CURRENT_BUFFER ){\
+        yyensure_buffer_stack (); \
+		YY_CURRENT_BUFFER_LVALUE =    \
+            yy_create_buffer(yyin,YY_BUF_SIZE ); \
+	} \
+	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
+	}
+
+#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)
+
+/* Begin user sect3 */
+
+#define yywrap(n) 1
+#define YY_SKIP_YYWRAP
+
+typedef unsigned char YY_CHAR;
+
+FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;
+
+typedef int yy_state_type;
+
+extern int yylineno;
+
+int yylineno = 1;
+
+extern char *yytext;
+#define yytext_ptr yytext
+
+static yy_state_type yy_get_previous_state (void );
+static yy_state_type yy_try_NUL_trans (yy_state_type current_state  );
+static int yy_get_next_buffer (void );
+static void yy_fatal_error (yyconst char msg[]  );
+
+/* Done after the current pattern has been matched and before the
+ * corresponding action - sets up yytext.
+ */
+#define YY_DO_BEFORE_ACTION \
+	(yytext_ptr) = yy_bp; \
+	yyleng = (size_t) (yy_cp - yy_bp); \
+	(yy_hold_char) = *yy_cp; \
+	*yy_cp = '\0'; \
+	(yy_c_buf_p) = yy_cp;
+
+#define YY_NUM_RULES 13
+#define YY_END_OF_BUFFER 14
+/* This struct is not used in this scanner,
+   but its presence is necessary. */
+struct yy_trans_info
+	{
+	flex_int32_t yy_verify;
+	flex_int32_t yy_nxt;
+	};
+static yyconst flex_int16_t yy_accept[73] =
+    {   0,
+        0,    0,   14,   12,    4,    3,   12,    7,   12,   12,
+       12,   12,   12,    9,    9,   12,   12,    7,   12,   12,
+        4,    0,    5,    0,    7,    8,    0,    6,    0,    0,
+       10,   10,    9,    0,    0,    9,    9,    0,    9,    0,
+        0,    0,    0,    2,    0,    0,   11,    0,   10,    0,
+       10,    9,    9,    0,    0,    0,   10,   10,    0,    0,
+        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
+        1,    0
+    } ;
+
+static yyconst flex_int32_t yy_ec[256] =
+    {   0,
+        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
+        4,    4,    4,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    2,    1,    5,    6,    7,    8,    9,   10,    1,
+        1,    8,   11,    1,   12,   13,    8,   14,   15,   15,
+       15,   15,   15,   15,   15,   16,   16,    1,    1,   17,
+       18,   19,    1,    1,   20,   20,   20,   20,   21,   22,
+        7,    7,    7,    7,    7,   23,    7,    7,    7,    7,
+        7,    7,    7,    7,   24,    7,    7,   25,    7,    7,
+        1,   26,    1,    8,    7,    1,   20,   20,   20,   20,
+
+       21,   22,    7,    7,    7,    7,    7,   27,    7,    7,
+        7,    7,    7,    7,    7,    7,   24,    7,    7,   25,
+        7,    7,    1,   28,    1,    8,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1
+    } ;
+
+static yyconst flex_int32_t yy_meta[29] =
+    {   0,
+        1,    1,    2,    1,    1,    1,    3,    1,    1,    1,
+        4,    4,    5,    6,    6,    6,    1,    1,    1,    7,
+        8,    7,    3,    3,    3,    1,    3,    1
+    } ;
+
+static yyconst flex_int16_t yy_base[85] =
+    {   0,
+        0,  145,  150,  266,   27,  266,   25,    0,  131,   23,
+       23,   16,   23,   39,   31,   25,   39,   60,   22,   65,
+       57,   43,  266,    0,    0,  266,   61,  266,    0,  128,
+       74,    0,  113,   59,   62,  113,   52,    0,    0,   72,
+       66,  110,  100,  266,   73,   74,  266,   70,  266,   90,
+      103,  266,   84,  129,  108,  113,  143,  266,  107,   66,
+      118,  137,  168,  120,   80,   91,  145,  143,   83,   41,
+      266,  266,  190,  196,  204,  212,  220,  228,  232,  237,
+      238,  243,  249,  257
+    } ;
+
+static yyconst flex_int16_t yy_def[85] =
+    {   0,
+       72,    1,   72,   72,   72,   72,   73,   74,   72,   72,
+       75,   72,   72,   72,   14,   72,   72,   74,   72,   76,
+       72,   73,   72,   77,   74,   72,   75,   72,   78,   72,
+       72,   31,   14,   79,   80,   72,   72,   81,   15,   73,
+       75,   76,   76,   72,   73,   75,   72,   82,   72,   72,
+       72,   72,   81,   76,   54,   72,   72,   72,   76,   54,
+       76,   76,   76,   54,   83,   76,   63,   83,   84,   84,
+       72,    0,   72,   72,   72,   72,   72,   72,   72,   72,
+       72,   72,   72,   72
+    } ;
+
+static yyconst flex_int16_t yy_nxt[295] =
+    {   0,
+        4,    5,    6,    5,    7,    4,    8,    9,   10,   11,
+        9,   12,   13,   14,   15,   15,   16,    9,   17,    8,
+        8,    8,   18,    8,    8,    4,    8,   19,   21,   23,
+       21,   26,   28,   26,   26,   30,   31,   31,   31,   26,
+       26,   26,   26,   71,   39,   39,   39,   23,   29,   26,
+       24,   32,   33,   33,   34,   72,   26,   26,   21,   35,
+       21,   36,   37,   38,   40,   36,   43,   44,   24,   41,
+       28,   32,   50,   50,   52,   28,   23,   23,   52,   35,
+       56,   56,   44,   28,   42,   71,   29,   31,   31,   31,
+       42,   29,   59,   44,   48,   49,   49,   24,   24,   29,
+
+       49,   43,   44,   51,   51,   51,   36,   37,   59,   44,
+       36,   65,   44,   54,   55,   55,   51,   51,   51,   59,
+       44,   64,   64,   64,   58,   58,   57,   57,   57,   58,
+       59,   44,   42,   64,   64,   64,   52,   72,   59,   44,
+       47,   66,   60,   60,   42,   44,   59,   69,   26,   72,
+       20,   61,   62,   63,   72,   61,   57,   57,   57,   66,
+       72,   72,   72,   66,   49,   49,   72,   61,   62,   49,
+       44,   61,   72,   72,   72,   72,   72,   72,   72,   72,
+       72,   67,   67,   67,   72,   72,   72,   67,   67,   67,
+       22,   22,   22,   22,   22,   22,   22,   22,   25,   72,
+
+       72,   25,   25,   25,   27,   27,   27,   27,   27,   27,
+       27,   27,   42,   42,   42,   42,   42,   42,   42,   42,
+       45,   72,   45,   45,   45,   45,   45,   45,   46,   72,
+       46,   46,   46,   46,   46,   46,   34,   34,   72,   34,
+       51,   72,   51,   53,   53,   53,   57,   72,   57,   68,
+       68,   68,   68,   68,   68,   68,   68,   70,   70,   70,
+       70,   70,   70,   70,   70,    3,   72,   72,   72,   72,
+       72,   72,   72,   72,   72,   72,   72,   72,   72,   72,
+       72,   72,   72,   72,   72,   72,   72,   72,   72,   72,
+       72,   72,   72,   72
+
+    } ;
+
+static yyconst flex_int16_t yy_chk[295] =
+    {   0,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    5,    7,
+        5,   10,   11,   12,   12,   13,   13,   13,   13,   19,
+       10,   16,   16,   70,   15,   15,   15,   22,   11,   19,
+        7,   14,   14,   14,   14,   15,   17,   17,   21,   14,
+       21,   14,   14,   14,   18,   14,   20,   20,   22,   18,
+       27,   34,   35,   35,   37,   41,   40,   45,   37,   34,
+       48,   48,   65,   46,   65,   69,   27,   31,   31,   31,
+       60,   41,   66,   66,   31,   31,   31,   40,   45,   46,
+
+       31,   43,   43,   50,   50,   50,   53,   53,   59,   59,
+       53,   59,   42,   43,   43,   43,   51,   51,   51,   61,
+       61,   55,   55,   55,   51,   51,   56,   56,   56,   51,
+       54,   54,   55,   64,   64,   64,   36,   33,   62,   62,
+       30,   61,   54,   54,   64,   68,   67,   68,    9,    3,
+        2,   54,   54,   54,    0,   54,   57,   57,   57,   62,
+        0,    0,    0,   62,   57,   57,    0,   67,   67,   57,
+       63,   67,    0,    0,    0,    0,    0,    0,    0,    0,
+        0,   63,   63,   63,    0,    0,    0,   63,   63,   63,
+       73,   73,   73,   73,   73,   73,   73,   73,   74,    0,
+
+        0,   74,   74,   74,   75,   75,   75,   75,   75,   75,
+       75,   75,   76,   76,   76,   76,   76,   76,   76,   76,
+       77,    0,   77,   77,   77,   77,   77,   77,   78,    0,
+       78,   78,   78,   78,   78,   78,   79,   79,    0,   79,
+       80,    0,   80,   81,   81,   81,   82,    0,   82,   83,
+       83,   83,   83,   83,   83,   83,   83,   84,   84,   84,
+       84,   84,   84,   84,   84,   72,   72,   72,   72,   72,
+       72,   72,   72,   72,   72,   72,   72,   72,   72,   72,
+       72,   72,   72,   72,   72,   72,   72,   72,   72,   72,
+       72,   72,   72,   72
+
+    } ;
+
+static yy_state_type yy_last_accepting_state;
+static char *yy_last_accepting_cpos;
+
+extern int yy_flex_debug;
+int yy_flex_debug = 0;
+
+/* The intent behind this definition is that it'll catch
+ * any uses of REJECT which flex missed.
+ */
+#define REJECT reject_used_but_not_detected
+#define yymore() yymore_used_but_not_detected
+#define YY_MORE_ADJ 0
+#define YY_RESTORE_YY_MORE_OFFSET
+char *yytext;
+/* Lexical analysis for genksyms.
+   Copyright 1996, 1997 Linux International.
+
+   New implementation contributed by Richard Henderson <rth@tamu.edu>
+   Based on original work by Bjorn Ekwall <bj0rn@blox.se>
+
+   Taken from Linux modutils 2.4.22.
+
+   This program is free software; you can redistribute it and/or modify it
+   under the terms of the GNU General Public License as published by the
+   Free Software Foundation; either version 2 of the License, or (at your
+   option) any later version.
+
+   This program is distributed in the hope that it will be useful, but
+   WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software Foundation,
+   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
+
+#include <limits.h>
+#include <stdlib.h>
+#include <string.h>
+#include <ctype.h>
+
+#include "genksyms.h"
+#include "parse.tab.h"
+
+/* We've got a two-level lexer here.  We let flex do basic tokenization
+   and then we categorize those basic tokens in the second stage.  */
+#define YY_DECL		static int yylex1(void)
+
+/* We don't do multiple input files.  */
+#define YY_NO_INPUT 1
+
+#define INITIAL 0
+
+#ifndef YY_NO_UNISTD_H
+/* Special case for "unistd.h", since it is non-ANSI. We include it way
+ * down here because we want the user's section 1 to have been scanned first.
+ * The user has a chance to override it with an option.
+ */
+#include <unistd.h>
+#endif
+
+#ifndef YY_EXTRA_TYPE
+#define YY_EXTRA_TYPE void *
+#endif
+
+static int yy_init_globals (void );
+
+/* Accessor methods to globals.
+   These are made visible to non-reentrant scanners for convenience. */
+
+int yylex_destroy (void );
+
+int yyget_debug (void );
+
+void yyset_debug (int debug_flag  );
+
+YY_EXTRA_TYPE yyget_extra (void );
+
+void yyset_extra (YY_EXTRA_TYPE user_defined  );
+
+FILE *yyget_in (void );
+
+void yyset_in  (FILE * in_str  );
+
+FILE *yyget_out (void );
+
+void yyset_out  (FILE * out_str  );
+
+int yyget_leng (void );
+
+char *yyget_text (void );
+
+int yyget_lineno (void );
+
+void yyset_lineno (int line_number  );
+
+/* Macros after this point can all be overridden by user definitions in
+ * section 1.
+ */
+
+#ifndef YY_SKIP_YYWRAP
+#ifdef __cplusplus
+extern "C" int yywrap (void );
+#else
+extern int yywrap (void );
+#endif
+#endif
+
+    static void yyunput (int c,char *buf_ptr  );
+    
+#ifndef yytext_ptr
+static void yy_flex_strncpy (char *,yyconst char *,int );
+#endif
+
+#ifdef YY_NEED_STRLEN
+static int yy_flex_strlen (yyconst char * );
+#endif
+
+#ifndef YY_NO_INPUT
+
+#ifdef __cplusplus
+static int yyinput (void );
+#else
+static int input (void );
+#endif
+
+#endif
+
+/* Amount of stuff to slurp up with each read. */
+#ifndef YY_READ_BUF_SIZE
+#define YY_READ_BUF_SIZE 8192
+#endif
+
+/* Copy whatever the last rule matched to the standard output. */
+#ifndef ECHO
+/* This used to be an fputs(), but since the string might contain NUL's,
+ * we now use fwrite().
+ */
+#define ECHO fwrite( yytext, yyleng, 1, yyout )
+#endif
+
+/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
+ * is returned in "result".
+ */
+#ifndef YY_INPUT
+#define YY_INPUT(buf,result,max_size) \
+	if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
+		{ \
+		int c = '*'; \
+		int n; \
+		for ( n = 0; n < max_size && \
+			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
+			buf[n] = (char) c; \
+		if ( c == '\n' ) \
+			buf[n++] = (char) c; \
+		if ( c == EOF && ferror( yyin ) ) \
+			YY_FATAL_ERROR( "input in flex scanner failed" ); \
+		result = n; \
+		} \
+	else \
+		{ \
+		errno=0; \
+		while ( (result = fread(buf, 1, max_size, yyin))==0 && ferror(yyin)) \
+			{ \
+			if( errno != EINTR) \
+				{ \
+				YY_FATAL_ERROR( "input in flex scanner failed" ); \
+				break; \
+				} \
+			errno=0; \
+			clearerr(yyin); \
+			} \
+		}\
+\
+
+#endif
+
+/* No semi-colon after return; correct usage is to write "yyterminate();" -
+ * we don't want an extra ';' after the "return" because that will cause
+ * some compilers to complain about unreachable statements.
+ */
+#ifndef yyterminate
+#define yyterminate() return YY_NULL
+#endif
+
+/* Number of entries by which start-condition stack grows. */
+#ifndef YY_START_STACK_INCR
+#define YY_START_STACK_INCR 25
+#endif
+
+/* Report a fatal error. */
+#ifndef YY_FATAL_ERROR
+#define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
+#endif
+
+/* end tables serialization structures and prototypes */
+
+/* Default declaration of generated scanner - a define so the user can
+ * easily add parameters.
+ */
+#ifndef YY_DECL
+#define YY_DECL_IS_OURS 1
+
+extern int yylex (void);
+
+#define YY_DECL int yylex (void)
+#endif /* !YY_DECL */
+
+/* Code executed at the beginning of each rule, after yytext and yyleng
+ * have been set up.
+ */
+#ifndef YY_USER_ACTION
+#define YY_USER_ACTION
+#endif
+
+/* Code executed at the end of each rule. */
+#ifndef YY_BREAK
+#define YY_BREAK break;
+#endif
+
+#define YY_RULE_SETUP \
+	if ( yyleng > 0 ) \
+		YY_CURRENT_BUFFER_LVALUE->yy_at_bol = \
+				(yytext[yyleng - 1] == '\n'); \
+	YY_USER_ACTION
+
+/** The main scanner function which does all the work.
+ */
+YY_DECL
+{
+	register yy_state_type yy_current_state;
+	register char *yy_cp, *yy_bp;
+	register int yy_act;
+    
+ /* Keep track of our location in the original source files.  */
+
+	if ( !(yy_init) )
+		{
+		(yy_init) = 1;
+
+#ifdef YY_USER_INIT
+		YY_USER_INIT;
+#endif
+
+		if ( ! (yy_start) )
+			(yy_start) = 1;	/* first start state */
+
+		if ( ! yyin )
+			yyin = stdin;
+
+		if ( ! yyout )
+			yyout = stdout;
+
+		if ( ! YY_CURRENT_BUFFER ) {
+			yyensure_buffer_stack ();
+			YY_CURRENT_BUFFER_LVALUE =
+				yy_create_buffer(yyin,YY_BUF_SIZE );
+		}
+
+		yy_load_buffer_state( );
+		}
+
+	while ( 1 )		/* loops until end-of-file is reached */
+		{
+		yy_cp = (yy_c_buf_p);
+
+		/* Support of yytext. */
+		*yy_cp = (yy_hold_char);
+
+		/* yy_bp points to the position in yy_ch_buf of the start of
+		 * the current run.
+		 */
+		yy_bp = yy_cp;
+
+		yy_current_state = (yy_start);
+		yy_current_state += YY_AT_BOL();
+yy_match:
+		do
+			{
+			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
+			if ( yy_accept[yy_current_state] )
+				{
+				(yy_last_accepting_state) = yy_current_state;
+				(yy_last_accepting_cpos) = yy_cp;
+				}
+			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
+				{
+				yy_current_state = (int) yy_def[yy_current_state];
+				if ( yy_current_state >= 73 )
+					yy_c = yy_meta[(unsigned int) yy_c];
+				}
+			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
+			++yy_cp;
+			}
+		while ( yy_base[yy_current_state] != 266 );
+
+yy_find_action:
+		yy_act = yy_accept[yy_current_state];
+		if ( yy_act == 0 )
+			{ /* have to back up */
+			yy_cp = (yy_last_accepting_cpos);
+			yy_current_state = (yy_last_accepting_state);
+			yy_act = yy_accept[yy_current_state];
+			}
+
+		YY_DO_BEFORE_ACTION;
+
+do_action:	/* This label is used only to access EOF actions. */
+
+		switch ( yy_act )
+	{ /* beginning of action switch */
+			case 0: /* must back up */
+			/* undo the effects of YY_DO_BEFORE_ACTION */
+			*yy_cp = (yy_hold_char);
+			yy_cp = (yy_last_accepting_cpos);
+			yy_current_state = (yy_last_accepting_state);
+			goto yy_find_action;
+
+case 1:
+/* rule 1 can match eol */
+YY_RULE_SETUP
+return FILENAME;
+	YY_BREAK
+case 2:
+/* rule 2 can match eol */
+YY_RULE_SETUP
+cur_line++;
+	YY_BREAK
+case 3:
+/* rule 3 can match eol */
+YY_RULE_SETUP
+cur_line++;
+	YY_BREAK
+/* Ignore all other whitespace.  */
+case 4:
+YY_RULE_SETUP
+;
+	YY_BREAK
+case 5:
+/* rule 5 can match eol */
+YY_RULE_SETUP
+return STRING;
+	YY_BREAK
+case 6:
+/* rule 6 can match eol */
+YY_RULE_SETUP
+return CHAR;
+	YY_BREAK
+case 7:
+YY_RULE_SETUP
+return IDENT;
+	YY_BREAK
+/* The Pedant requires that the other C multi-character tokens be
+    recognized as tokens.  We don't actually use them since we don't
+    parse expressions, but we do want whitespace to be arranged
+    around them properly.  */
+case 8:
+YY_RULE_SETUP
+return OTHER;
+	YY_BREAK
+case 9:
+YY_RULE_SETUP
+return INT;
+	YY_BREAK
+case 10:
+YY_RULE_SETUP
+return REAL;
+	YY_BREAK
+case 11:
+YY_RULE_SETUP
+return DOTS;
+	YY_BREAK
+/* All other tokens are single characters.  */
+case 12:
+YY_RULE_SETUP
+return yytext[0];
+	YY_BREAK
+case 13:
+YY_RULE_SETUP
+ECHO;
+	YY_BREAK
+case YY_STATE_EOF(INITIAL):
+	yyterminate();
+
+	case YY_END_OF_BUFFER:
+		{
+		/* Amount of text matched not including the EOB char. */
+		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;
+
+		/* Undo the effects of YY_DO_BEFORE_ACTION. */
+		*yy_cp = (yy_hold_char);
+		YY_RESTORE_YY_MORE_OFFSET
+
+		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
+			{
+			/* We're scanning a new file or input source.  It's
+			 * possible that this happened because the user
+			 * just pointed yyin at a new source and called
+			 * yylex().  If so, then we have to assure
+			 * consistency between YY_CURRENT_BUFFER and our
+			 * globals.  Here is the right place to do so, because
+			 * this is the first action (other than possibly a
+			 * back-up) that will match for the new input source.
+			 */
+			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
+			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
+			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
+			}
+
+		/* Note that here we test for yy_c_buf_p "<=" to the position
+		 * of the first EOB in the buffer, since yy_c_buf_p will
+		 * already have been incremented past the NUL character
+		 * (since all states make transitions on EOB to the
+		 * end-of-buffer state).  Contrast this with the test
+		 * in input().
+		 */
+		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
+			{ /* This was really a NUL. */
+			yy_state_type yy_next_state;
+
+			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;
+
+			yy_current_state = yy_get_previous_state(  );
+
+			/* Okay, we're now positioned to make the NUL
+			 * transition.  We couldn't have
+			 * yy_get_previous_state() go ahead and do it
+			 * for us because it doesn't know how to deal
+			 * with the possibility of jamming (and we don't
+			 * want to build jamming into it because then it
+			 * will run more slowly).
+			 */
+
+			yy_next_state = yy_try_NUL_trans( yy_current_state );
+
+			yy_bp = (yytext_ptr) + YY_MORE_ADJ;
+
+			if ( yy_next_state )
+				{
+				/* Consume the NUL. */
+				yy_cp = ++(yy_c_buf_p);
+				yy_current_state = yy_next_state;
+				goto yy_match;
+				}
+
+			else
+				{
+				yy_cp = (yy_c_buf_p);
+				goto yy_find_action;
+				}
+			}
+
+		else switch ( yy_get_next_buffer(  ) )
+			{
+			case EOB_ACT_END_OF_FILE:
+				{
+				(yy_did_buffer_switch_on_eof) = 0;
+
+				if ( yywrap( ) )
+					{
+					/* Note: because we've taken care in
+					 * yy_get_next_buffer() to have set up
+					 * yytext, we can now set up
+					 * yy_c_buf_p so that if some total
+					 * hoser (like flex itself) wants to
+					 * call the scanner after we return the
+					 * YY_NULL, it'll still work - another
+					 * YY_NULL will get returned.
+					 */
+					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;
+
+					yy_act = YY_STATE_EOF(YY_START);
+					goto do_action;
+					}
+
+				else
+					{
+					if ( ! (yy_did_buffer_switch_on_eof) )
+						YY_NEW_FILE;
+					}
+				break;
+				}
+
+			case EOB_ACT_CONTINUE_SCAN:
+				(yy_c_buf_p) =
+					(yytext_ptr) + yy_amount_of_matched_text;
+
+				yy_current_state = yy_get_previous_state(  );
+
+				yy_cp = (yy_c_buf_p);
+				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
+				goto yy_match;
+
+			case EOB_ACT_LAST_MATCH:
+				(yy_c_buf_p) =
+				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];
+
+				yy_current_state = yy_get_previous_state(  );
+
+				yy_cp = (yy_c_buf_p);
+				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
+				goto yy_find_action;
+			}
+		break;
+		}
+
+	default:
+		YY_FATAL_ERROR(
+			"fatal flex scanner internal error--no action found" );
+	} /* end of action switch */
+		} /* end of scanning one token */
+} /* end of yylex */
+
+/* yy_get_next_buffer - try to read in a new buffer
+ *
+ * Returns a code representing an action:
+ *	EOB_ACT_LAST_MATCH -
+ *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
+ *	EOB_ACT_END_OF_FILE - end of file
+ */
+static int yy_get_next_buffer (void)
+{
+    	register char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
+	register char *source = (yytext_ptr);
+	register int number_to_move, i;
+	int ret_val;
+
+	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
+		YY_FATAL_ERROR(
+		"fatal flex scanner internal error--end of buffer missed" );
+
+	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
+		{ /* Don't try to fill the buffer, so this is an EOF. */
+		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
+			{
+			/* We matched a single character, the EOB, so
+			 * treat this as a final EOF.
+			 */
+			return EOB_ACT_END_OF_FILE;
+			}
+
+		else
+			{
+			/* We matched some text prior to the EOB, first
+			 * process it.
+			 */
+			return EOB_ACT_LAST_MATCH;
+			}
+		}
+
+	/* Try to read more data. */
+
+	/* First move last chars to start of buffer. */
+	number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr)) - 1;
+
+	for ( i = 0; i < number_to_move; ++i )
+		*(dest++) = *(source++);
+
+	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
+		/* don't do the read, it's not guaranteed to return an EOF,
+		 * just force an EOF
+		 */
+		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;
+
+	else
+		{
+			int num_to_read =
+			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;
+
+		while ( num_to_read <= 0 )
+			{ /* Not enough room in the buffer - grow it. */
+
+			/* just a shorter name for the current buffer */
+			YY_BUFFER_STATE b = YY_CURRENT_BUFFER;
+
+			int yy_c_buf_p_offset =
+				(int) ((yy_c_buf_p) - b->yy_ch_buf);
+
+			if ( b->yy_is_our_buffer )
+				{
+				int new_size = b->yy_buf_size * 2;
+
+				if ( new_size <= 0 )
+					b->yy_buf_size += b->yy_buf_size / 8;
+				else
+					b->yy_buf_size *= 2;
+
+				b->yy_ch_buf = (char *)
+					/* Include room in for 2 EOB chars. */
+					yyrealloc((void *) b->yy_ch_buf,b->yy_buf_size + 2  );
+				}
+			else
+				/* Can't grow it, we don't own it. */
+				b->yy_ch_buf = 0;
+
+			if ( ! b->yy_ch_buf )
+				YY_FATAL_ERROR(
+				"fatal error - scanner input buffer overflow" );
+
+			(yy_c_buf_p) = &b->yy_ch_buf[yy_c_buf_p_offset];
+
+			num_to_read = YY_CURRENT_BUFFER_LVALUE->yy_buf_size -
+						number_to_move - 1;
+
+			}
+
+		if ( num_to_read > YY_READ_BUF_SIZE )
+			num_to_read = YY_READ_BUF_SIZE;
+
+		/* Read in more data. */
+		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
+			(yy_n_chars), (size_t) num_to_read );
+
+		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
+		}
+
+	if ( (yy_n_chars) == 0 )
+		{
+		if ( number_to_move == YY_MORE_ADJ )
+			{
+			ret_val = EOB_ACT_END_OF_FILE;
+			yyrestart(yyin  );
+			}
+
+		else
+			{
+			ret_val = EOB_ACT_LAST_MATCH;
+			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
+				YY_BUFFER_EOF_PENDING;
+			}
+		}
+
+	else
+		ret_val = EOB_ACT_CONTINUE_SCAN;
+
+	if ((yy_size_t) ((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
+		/* Extend the array by 50%, plus the number we really need. */
+		yy_size_t new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
+		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc((void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,new_size  );
+		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
+			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
+	}
+
+	(yy_n_chars) += number_to_move;
+	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
+	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;
+
+	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];
+
+	return ret_val;
+}
+
+/* yy_get_previous_state - get the state just before the EOB char was reached */
+
+    static yy_state_type yy_get_previous_state (void)
+{
+	register yy_state_type yy_current_state;
+	register char *yy_cp;
+    
+	yy_current_state = (yy_start);
+	yy_current_state += YY_AT_BOL();
+
+	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
+		{
+		register YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
+		if ( yy_accept[yy_current_state] )
+			{
+			(yy_last_accepting_state) = yy_current_state;
+			(yy_last_accepting_cpos) = yy_cp;
+			}
+		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
+			{
+			yy_current_state = (int) yy_def[yy_current_state];
+			if ( yy_current_state >= 73 )
+				yy_c = yy_meta[(unsigned int) yy_c];
+			}
+		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
+		}
+
+	return yy_current_state;
+}
+
+/* yy_try_NUL_trans - try to make a transition on the NUL character
+ *
+ * synopsis
+ *	next_state = yy_try_NUL_trans( current_state );
+ */
+    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )
+{
+	register int yy_is_jam;
+    	register char *yy_cp = (yy_c_buf_p);
+
+	register YY_CHAR yy_c = 1;
+	if ( yy_accept[yy_current_state] )
+		{
+		(yy_last_accepting_state) = yy_current_state;
+		(yy_last_accepting_cpos) = yy_cp;
+		}
+	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
+		{
+		yy_current_state = (int) yy_def[yy_current_state];
+		if ( yy_current_state >= 73 )
+			yy_c = yy_meta[(unsigned int) yy_c];
+		}
+	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
+	yy_is_jam = (yy_current_state == 72);
+
+	return yy_is_jam ? 0 : yy_current_state;
+}
+
+    static void yyunput (int c, register char * yy_bp )
+{
+	register char *yy_cp;
+    
+    yy_cp = (yy_c_buf_p);
+
+	/* undo effects of setting up yytext */
+	*yy_cp = (yy_hold_char);
+
+	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
+		{ /* need to shift things up to make room */
+		/* +2 for EOB chars. */
+		register int number_to_move = (yy_n_chars) + 2;
+		register char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
+					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
+		register char *source =
+				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];
+
+		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
+			*--dest = *--source;
+
+		yy_cp += (int) (dest - source);
+		yy_bp += (int) (dest - source);
+		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
+			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_buf_size;
+
+		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
+			YY_FATAL_ERROR( "flex scanner push-back overflow" );
+		}
+
+	*--yy_cp = (char) c;
+
+	(yytext_ptr) = yy_bp;
+	(yy_hold_char) = *yy_cp;
+	(yy_c_buf_p) = yy_cp;
+}
+
+#ifndef YY_NO_INPUT
+#ifdef __cplusplus
+    static int yyinput (void)
+#else
+    static int input  (void)
+#endif
+
+{
+	int c;
+    
+	*(yy_c_buf_p) = (yy_hold_char);
+
+	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
+		{
+		/* yy_c_buf_p now points to the character we want to return.
+		 * If this occurs *before* the EOB characters, then it's a
+		 * valid NUL; if not, then we've hit the end of the buffer.
+		 */
+		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
+			/* This was really a NUL. */
+			*(yy_c_buf_p) = '\0';
+
+		else
+			{ /* need more input */
+			int offset = (yy_c_buf_p) - (yytext_ptr);
+			++(yy_c_buf_p);
+
+			switch ( yy_get_next_buffer(  ) )
+				{
+				case EOB_ACT_LAST_MATCH:
+					/* This happens because yy_g_n_b()
+					 * sees that we've accumulated a
+					 * token and flags that we need to
+					 * try matching the token before
+					 * proceeding.  But for input(),
+					 * there's no matching to consider.
+					 * So convert the EOB_ACT_LAST_MATCH
+					 * to EOB_ACT_END_OF_FILE.
+					 */
+
+					/* Reset buffer status. */
+					yyrestart(yyin );
+
+					/*FALLTHROUGH*/
+
+				case EOB_ACT_END_OF_FILE:
+					{
+					if ( yywrap( ) )
+						return EOF;
+
+					if ( ! (yy_did_buffer_switch_on_eof) )
+						YY_NEW_FILE;
+#ifdef __cplusplus
+					return yyinput();
+#else
+					return input();
+#endif
+					}
+
+				case EOB_ACT_CONTINUE_SCAN:
+					(yy_c_buf_p) = (yytext_ptr) + offset;
+					break;
+				}
+			}
+		}
+
+	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
+	*(yy_c_buf_p) = '\0';	/* preserve yytext */
+	(yy_hold_char) = *++(yy_c_buf_p);
+
+	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = (c == '\n');
+
+	return c;
+}
+#endif	/* ifndef YY_NO_INPUT */
+
+/** Immediately switch to a different input stream.
+ * @param input_file A readable stream.
+ * 
+ * @note This function does not reset the start condition to @c INITIAL .
+ */
+    void yyrestart  (FILE * input_file )
+{
+    
+	if ( ! YY_CURRENT_BUFFER ){
+        yyensure_buffer_stack ();
+		YY_CURRENT_BUFFER_LVALUE =
+            yy_create_buffer(yyin,YY_BUF_SIZE );
+	}
+
+	yy_init_buffer(YY_CURRENT_BUFFER,input_file );
+	yy_load_buffer_state( );
+}
+
+/** Switch to a different input buffer.
+ * @param new_buffer The new input buffer.
+ * 
+ */
+    void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )
+{
+    
+	/* TODO. We should be able to replace this entire function body
+	 * with
+	 *		yypop_buffer_state();
+	 *		yypush_buffer_state(new_buffer);
+     */
+	yyensure_buffer_stack ();
+	if ( YY_CURRENT_BUFFER == new_buffer )
+		return;
+
+	if ( YY_CURRENT_BUFFER )
+		{
+		/* Flush out information for old buffer. */
+		*(yy_c_buf_p) = (yy_hold_char);
+		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
+		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
+		}
+
+	YY_CURRENT_BUFFER_LVALUE = new_buffer;
+	yy_load_buffer_state( );
+
+	/* We don't actually know whether we did this switch during
+	 * EOF (yywrap()) processing, but the only time this flag
+	 * is looked at is after yywrap() is called, so it's safe
+	 * to go ahead and always set it.
+	 */
+	(yy_did_buffer_switch_on_eof) = 1;
+}
+
+static void yy_load_buffer_state  (void)
+{
+    	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
+	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
+	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
+	(yy_hold_char) = *(yy_c_buf_p);
+}
+
+/** Allocate and initialize an input buffer state.
+ * @param file A readable stream.
+ * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
+ * 
+ * @return the allocated buffer state.
+ */
+    YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )
+{
+	YY_BUFFER_STATE b;
+    
+	b = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );
+	if ( ! b )
+		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
+
+	b->yy_buf_size = size;
+
+	/* yy_ch_buf has to be 2 characters longer than the size given because
+	 * we need to put in 2 end-of-buffer characters.
+	 */
+	b->yy_ch_buf = (char *) yyalloc(b->yy_buf_size + 2  );
+	if ( ! b->yy_ch_buf )
+		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
+
+	b->yy_is_our_buffer = 1;
+
+	yy_init_buffer(b,file );
+
+	return b;
+}
+
+/** Destroy the buffer.
+ * @param b a buffer created with yy_create_buffer()
+ * 
+ */
+    void yy_delete_buffer (YY_BUFFER_STATE  b )
+{
+    
+	if ( ! b )
+		return;
+
+	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
+		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;
+
+	if ( b->yy_is_our_buffer )
+		yyfree((void *) b->yy_ch_buf  );
+
+	yyfree((void *) b  );
+}
+
+#ifndef __cplusplus
+extern int isatty (int );
+#endif /* __cplusplus */
+    
+/* Initializes or reinitializes a buffer.
+ * This function is sometimes called more than once on the same buffer,
+ * such as during a yyrestart() or at EOF.
+ */
+    static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )
+
+{
+	int oerrno = errno;
+    
+	yy_flush_buffer(b );
+
+	b->yy_input_file = file;
+	b->yy_fill_buffer = 1;
+
+    /* If b is the current buffer, then yy_init_buffer was _probably_
+     * called from yyrestart() or through yy_get_next_buffer.
+     * In that case, we don't want to reset the lineno or column.
+     */
+    if (b != YY_CURRENT_BUFFER){
+        b->yy_bs_lineno = 1;
+        b->yy_bs_column = 0;
+    }
+
+        b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
+    
+	errno = oerrno;
+}
+
+/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
+ * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
+ * 
+ */
+    void yy_flush_buffer (YY_BUFFER_STATE  b )
+{
+    	if ( ! b )
+		return;
+
+	b->yy_n_chars = 0;
+
+	/* We always need two end-of-buffer characters.  The first causes
+	 * a transition to the end-of-buffer state.  The second causes
+	 * a jam in that state.
+	 */
+	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
+	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;
+
+	b->yy_buf_pos = &b->yy_ch_buf[0];
+
+	b->yy_at_bol = 1;
+	b->yy_buffer_status = YY_BUFFER_NEW;
+
+	if ( b == YY_CURRENT_BUFFER )
+		yy_load_buffer_state( );
+}
+
+/** Pushes the new state onto the stack. The new state becomes
+ *  the current state. This function will allocate the stack
+ *  if necessary.
+ *  @param new_buffer The new state.
+ *  
+ */
+void yypush_buffer_state (YY_BUFFER_STATE new_buffer )
+{
+    	if (new_buffer == NULL)
+		return;
+
+	yyensure_buffer_stack();
+
+	/* This block is copied from yy_switch_to_buffer. */
+	if ( YY_CURRENT_BUFFER )
+		{
+		/* Flush out information for old buffer. */
+		*(yy_c_buf_p) = (yy_hold_char);
+		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
+		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
+		}
+
+	/* Only push if top exists. Otherwise, replace top. */
+	if (YY_CURRENT_BUFFER)
+		(yy_buffer_stack_top)++;
+	YY_CURRENT_BUFFER_LVALUE = new_buffer;
+
+	/* copied from yy_switch_to_buffer. */
+	yy_load_buffer_state( );
+	(yy_did_buffer_switch_on_eof) = 1;
+}
+
+/** Removes and deletes the top of the stack, if present.
+ *  The next element becomes the new top.
+ *  
+ */
+void yypop_buffer_state (void)
+{
+    	if (!YY_CURRENT_BUFFER)
+		return;
+
+	yy_delete_buffer(YY_CURRENT_BUFFER );
+	YY_CURRENT_BUFFER_LVALUE = NULL;
+	if ((yy_buffer_stack_top) > 0)
+		--(yy_buffer_stack_top);
+
+	if (YY_CURRENT_BUFFER) {
+		yy_load_buffer_state( );
+		(yy_did_buffer_switch_on_eof) = 1;
+	}
+}
+
+/* Allocates the stack if it does not exist.
+ *  Guarantees space for at least one push.
+ */
+static void yyensure_buffer_stack (void)
+{
+	int num_to_alloc;
+    
+	if (!(yy_buffer_stack)) {
+
+		/* First allocation is just for 2 elements, since we don't know if this
+		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
+		 * immediate realloc on the next call.
+         */
+		num_to_alloc = 1;
+		(yy_buffer_stack) = (struct yy_buffer_state**)yyalloc
+								(num_to_alloc * sizeof(struct yy_buffer_state*)
+								);
+		if ( ! (yy_buffer_stack) )
+			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
+								  
+		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));
+				
+		(yy_buffer_stack_max) = num_to_alloc;
+		(yy_buffer_stack_top) = 0;
+		return;
+	}
+
+	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){
+
+		/* Increase the buffer to prepare for a possible push. */
+		int grow_size = 8 /* arbitrary grow size */;
+
+		num_to_alloc = (yy_buffer_stack_max) + grow_size;
+		(yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc
+								((yy_buffer_stack),
+								num_to_alloc * sizeof(struct yy_buffer_state*)
+								);
+		if ( ! (yy_buffer_stack) )
+			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
+
+		/* zero only the new slots.*/
+		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
+		(yy_buffer_stack_max) = num_to_alloc;
+	}
+}
+
+/** Setup the input buffer state to scan directly from a user-specified character buffer.
+ * @param base the character buffer
+ * @param size the size in bytes of the character buffer
+ * 
+ * @return the newly allocated buffer state object. 
+ */
+YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )
+{
+	YY_BUFFER_STATE b;
+    
+	if ( size < 2 ||
+	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
+	     base[size-1] != YY_END_OF_BUFFER_CHAR )
+		/* They forgot to leave room for the EOB's. */
+		return 0;
+
+	b = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );
+	if ( ! b )
+		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );
+
+	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
+	b->yy_buf_pos = b->yy_ch_buf = base;
+	b->yy_is_our_buffer = 0;
+	b->yy_input_file = 0;
+	b->yy_n_chars = b->yy_buf_size;
+	b->yy_is_interactive = 0;
+	b->yy_at_bol = 1;
+	b->yy_fill_buffer = 0;
+	b->yy_buffer_status = YY_BUFFER_NEW;
+
+	yy_switch_to_buffer(b  );
+
+	return b;
+}
+
+/** Setup the input buffer state to scan a string. The next call to yylex() will
+ * scan from a @e copy of @a str.
+ * @param yystr a NUL-terminated string to scan
+ * 
+ * @return the newly allocated buffer state object.
+ * @note If you want to scan bytes that may contain NUL values, then use
+ *       yy_scan_bytes() instead.
+ */
+YY_BUFFER_STATE yy_scan_string (yyconst char * yystr )
+{
+    
+	return yy_scan_bytes(yystr,strlen(yystr) );
+}
+
+/** Setup the input buffer state to scan the given bytes. The next call to yylex() will
+ * scan from a @e copy of @a bytes.
+ * @param bytes the byte buffer to scan
+ * @param len the number of bytes in the buffer pointed to by @a bytes.
+ * 
+ * @return the newly allocated buffer state object.
+ */
+YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, int  _yybytes_len )
+{
+	YY_BUFFER_STATE b;
+	char *buf;
+	yy_size_t n;
+	int i;
+    
+	/* Get memory for full buffer, including space for trailing EOB's. */
+	n = _yybytes_len + 2;
+	buf = (char *) yyalloc(n  );
+	if ( ! buf )
+		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );
+
+	for ( i = 0; i < _yybytes_len; ++i )
+		buf[i] = yybytes[i];
+
+	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;
+
+	b = yy_scan_buffer(buf,n );
+	if ( ! b )
+		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );
+
+	/* It's okay to grow etc. this buffer, and we should throw it
+	 * away when we're done.
+	 */
+	b->yy_is_our_buffer = 1;
+
+	return b;
+}
+
+#ifndef YY_EXIT_FAILURE
+#define YY_EXIT_FAILURE 2
+#endif
+
+static void yy_fatal_error (yyconst char* msg )
+{
+    	(void) fprintf( stderr, "%s\n", msg );
+	exit( YY_EXIT_FAILURE );
+}
+
+/* Redefine yyless() so it works in section 3 code. */
+
+#undef yyless
+#define yyless(n) \
+	do \
+		{ \
+		/* Undo effects of setting up yytext. */ \
+        int yyless_macro_arg = (n); \
+        YY_LESS_LINENO(yyless_macro_arg);\
+		yytext[yyleng] = (yy_hold_char); \
+		(yy_c_buf_p) = yytext + yyless_macro_arg; \
+		(yy_hold_char) = *(yy_c_buf_p); \
+		*(yy_c_buf_p) = '\0'; \
+		yyleng = yyless_macro_arg; \
+		} \
+	while ( 0 )
+
+/* Accessor  methods (get/set functions) to struct members. */
+
+/** Get the current line number.
+ * 
+ */
+int yyget_lineno  (void)
+{
+        
+    return yylineno;
+}
+
+/** Get the input stream.
+ * 
+ */
+FILE *yyget_in  (void)
+{
+        return yyin;
+}
+
+/** Get the output stream.
+ * 
+ */
+FILE *yyget_out  (void)
+{
+        return yyout;
+}
+
+/** Get the length of the current token.
+ * 
+ */
+int yyget_leng  (void)
+{
+        return yyleng;
+}
+
+/** Get the current token.
+ * 
+ */
+
+char *yyget_text  (void)
+{
+        return yytext;
+}
+
+/** Set the current line number.
+ * @param line_number
+ * 
+ */
+void yyset_lineno (int  line_number )
+{
+    
+    yylineno = line_number;
+}
+
+/** Set the input stream. This does not discard the current
+ * input buffer.
+ * @param in_str A readable stream.
+ * 
+ * @see yy_switch_to_buffer
+ */
+void yyset_in (FILE *  in_str )
+{
+        yyin = in_str ;
+}
+
+void yyset_out (FILE *  out_str )
+{
+        yyout = out_str ;
+}
+
+int yyget_debug  (void)
+{
+        return yy_flex_debug;
+}
+
+void yyset_debug (int  bdebug )
+{
+        yy_flex_debug = bdebug ;
+}
+
+static int yy_init_globals (void)
+{
+        /* Initialization is the same as for the non-reentrant scanner.
+     * This function is called from yylex_destroy(), so don't allocate here.
+     */
+
+    (yy_buffer_stack) = 0;
+    (yy_buffer_stack_top) = 0;
+    (yy_buffer_stack_max) = 0;
+    (yy_c_buf_p) = (char *) 0;
+    (yy_init) = 0;
+    (yy_start) = 0;
+
+/* Defined in main.c */
+#ifdef YY_STDINIT
+    yyin = stdin;
+    yyout = stdout;
+#else
+    yyin = (FILE *) 0;
+    yyout = (FILE *) 0;
+#endif
+
+    /* For future reference: Set errno on error, since we are called by
+     * yylex_init()
+     */
+    return 0;
+}
+
+/* yylex_destroy is for both reentrant and non-reentrant scanners. */
+int yylex_destroy  (void)
+{
+    
+    /* Pop the buffer stack, destroying each element. */
+	while(YY_CURRENT_BUFFER){
+		yy_delete_buffer(YY_CURRENT_BUFFER  );
+		YY_CURRENT_BUFFER_LVALUE = NULL;
+		yypop_buffer_state();
+	}
+
+	/* Destroy the stack itself. */
+	yyfree((yy_buffer_stack) );
+	(yy_buffer_stack) = NULL;
+
+    /* Reset the globals. This is important in a non-reentrant scanner so the next time
+     * yylex() is called, initialization will occur. */
+    yy_init_globals( );
+
+    return 0;
+}
+
+/*
+ * Internal utility routines.
+ */
+
+#ifndef yytext_ptr
+static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )
+{
+	register int i;
+	for ( i = 0; i < n; ++i )
+		s1[i] = s2[i];
+}
+#endif
+
+#ifdef YY_NEED_STRLEN
+static int yy_flex_strlen (yyconst char * s )
+{
+	register int n;
+	for ( n = 0; s[n]; ++n )
+		;
+
+	return n;
+}
+#endif
+
+void *yyalloc (yy_size_t  size )
+{
+	return (void *) malloc( size );
+}
+
+void *yyrealloc  (void * ptr, yy_size_t  size )
+{
+	/* The cast to (char *) in the following accommodates both
+	 * implementations that use char* generic pointers, and those
+	 * that use void* generic pointers.  It works with the latter
+	 * because both ANSI C and C++ allow castless assignment from
+	 * any pointer type to void*, and deal with argument conversions
+	 * as though doing an assignment.
+	 */
+	return (void *) realloc( (char *) ptr, size );
+}
+
+void yyfree (void * ptr )
+{
+	free( (char *) ptr );	/* see yyrealloc() for (char *) cast */
+}
+
+#define YYTABLES_NAME "yytables"
+
+/* Bring in the keyword recognizer.  */
+
+#include "keywords.hash.c"
+
+/* Macros to append to our phrase collection list.  */
+
+/*
+ * We mark any token, that that equals to a known enumerator, as
+ * SYM_ENUM_CONST. The parser will change this for struct and union tags later,
+ * the only problem is struct and union members:
+ *    enum e { a, b }; struct s { int a, b; }
+ * but in this case, the only effect will be, that the ABI checksums become
+ * more volatile, which is acceptable. Also, such collisions are quite rare,
+ * so far it was only observed in include/linux/telephony.h.
+ */
+#define _APP(T,L)	do {						   \
+			  cur_node = next_node;				   \
+			  next_node = xmalloc(sizeof(*next_node));	   \
+			  next_node->next = cur_node;			   \
+			  cur_node->string = memcpy(xmalloc(L+1), T, L+1); \
+			  cur_node->tag =				   \
+			    find_symbol(cur_node->string, SYM_ENUM_CONST, 1)?\
+			    SYM_ENUM_CONST : SYM_NORMAL ;		   \
+			  cur_node->in_source_file = in_source_file;       \
+			} while (0)
+
+#define APP		_APP(yytext, yyleng)
+
+/* The second stage lexer.  Here we incorporate knowledge of the state
+   of the parser to tailor the tokens that are returned.  */
+
+int
+yylex(void)
+{
+  static enum {
+    ST_NOTSTARTED, ST_NORMAL, ST_ATTRIBUTE, ST_ASM, ST_BRACKET, ST_BRACE,
+    ST_EXPRESSION, ST_TABLE_1, ST_TABLE_2, ST_TABLE_3, ST_TABLE_4,
+    ST_TABLE_5, ST_TABLE_6
+  } lexstate = ST_NOTSTARTED;
+
+  static int suppress_type_lookup, dont_want_brace_phrase;
+  static struct string_list *next_node;
+
+  int token, count = 0;
+  struct string_list *cur_node;
+
+  if (lexstate == ST_NOTSTARTED)
+    {
+      next_node = xmalloc(sizeof(*next_node));
+      next_node->next = NULL;
+      lexstate = ST_NORMAL;
+    }
+
+repeat:
+  token = yylex1();
+
+  if (token == 0)
+    return 0;
+  else if (token == FILENAME)
+    {
+      char *file, *e;
+
+      /* Save the filename and line number for later error messages.  */
+
+      if (cur_filename)
+	free(cur_filename);
+
+      file = strchr(yytext, '\"')+1;
+      e = strchr(file, '\"');
+      *e = '\0';
+      cur_filename = memcpy(xmalloc(e-file+1), file, e-file+1);
+      cur_line = atoi(yytext+2);
+
+      if (!source_file) {
+        source_file = xstrdup(cur_filename);
+        in_source_file = 1;
+      } else {
+        in_source_file = (strcmp(cur_filename, source_file) == 0);
+      }
+
+      goto repeat;
+    }
+
+  switch (lexstate)
+    {
+    case ST_NORMAL:
+      switch (token)
+	{
+	case IDENT:
+	  APP;
+	  {
+	    const struct resword *r = is_reserved_word(yytext, yyleng);
+	    if (r)
+	      {
+		switch (token = r->token)
+		  {
+		  case ATTRIBUTE_KEYW:
+		    lexstate = ST_ATTRIBUTE;
+		    count = 0;
+		    goto repeat;
+		  case ASM_KEYW:
+		    lexstate = ST_ASM;
+		    count = 0;
+		    goto repeat;
+
+		  case STRUCT_KEYW:
+		  case UNION_KEYW:
+		  case ENUM_KEYW:
+		    dont_want_brace_phrase = 3;
+		    suppress_type_lookup = 2;
+		    goto fini;
+
+		  case EXPORT_SYMBOL_KEYW:
+		      goto fini;
+		  }
+	      }
+	    if (!suppress_type_lookup)
+	      {
+		if (find_symbol(yytext, SYM_TYPEDEF, 1))
+		  token = TYPE;
+	      }
+	  }
+	  break;
+
+	case '[':
+	  APP;
+	  lexstate = ST_BRACKET;
+	  count = 1;
+	  goto repeat;
+
+	case '{':
+	  APP;
+	  if (dont_want_brace_phrase)
+	    break;
+	  lexstate = ST_BRACE;
+	  count = 1;
+	  goto repeat;
+
+	case '=': case ':':
+	  APP;
+	  lexstate = ST_EXPRESSION;
+	  break;
+
+	case DOTS:
+	default:
+	  APP;
+	  break;
+	}
+      break;
+
+    case ST_ATTRIBUTE:
+      APP;
+      switch (token)
+	{
+	case '(':
+	  ++count;
+	  goto repeat;
+	case ')':
+	  if (--count == 0)
+	    {
+	      lexstate = ST_NORMAL;
+	      token = ATTRIBUTE_PHRASE;
+	      break;
+	    }
+	  goto repeat;
+	default:
+	  goto repeat;
+	}
+      break;
+
+    case ST_ASM:
+      APP;
+      switch (token)
+	{
+	case '(':
+	  ++count;
+	  goto repeat;
+	case ')':
+	  if (--count == 0)
+	    {
+	      lexstate = ST_NORMAL;
+	      token = ASM_PHRASE;
+	      break;
+	    }
+	  goto repeat;
+	default:
+	  goto repeat;
+	}
+      break;
+
+    case ST_BRACKET:
+      APP;
+      switch (token)
+	{
+	case '[':
+	  ++count;
+	  goto repeat;
+	case ']':
+	  if (--count == 0)
+	    {
+	      lexstate = ST_NORMAL;
+	      token = BRACKET_PHRASE;
+	      break;
+	    }
+	  goto repeat;
+	default:
+	  goto repeat;
+	}
+      break;
+
+    case ST_BRACE:
+      APP;
+      switch (token)
+	{
+	case '{':
+	  ++count;
+	  goto repeat;
+	case '}':
+	  if (--count == 0)
+	    {
+	      lexstate = ST_NORMAL;
+	      token = BRACE_PHRASE;
+	      break;
+	    }
+	  goto repeat;
+	default:
+	  goto repeat;
+	}
+      break;
+
+    case ST_EXPRESSION:
+      switch (token)
+	{
+	case '(': case '[': case '{':
+	  ++count;
+	  APP;
+	  goto repeat;
+	case '}':
+	  /* is this the last line of an enum declaration? */
+	  if (count == 0)
+	    {
+	      /* Put back the token we just read so's we can find it again
+		 after registering the expression.  */
+	      unput(token);
+
+	      lexstate = ST_NORMAL;
+	      token = EXPRESSION_PHRASE;
+	      break;
+	    }
+	  /* FALLTHRU */
+	case ')': case ']':
+	  --count;
+	  APP;
+	  goto repeat;
+	case ',': case ';':
+	  if (count == 0)
+	    {
+	      /* Put back the token we just read so's we can find it again
+		 after registering the expression.  */
+	      unput(token);
+
+	      lexstate = ST_NORMAL;
+	      token = EXPRESSION_PHRASE;
+	      break;
+	    }
+	  APP;
+	  goto repeat;
+	default:
+	  APP;
+	  goto repeat;
+	}
+      break;
+
+    case ST_TABLE_1:
+      goto repeat;
+
+    case ST_TABLE_2:
+      if (token == IDENT && yyleng == 1 && yytext[0] == 'X')
+	{
+	  token = EXPORT_SYMBOL_KEYW;
+	  lexstate = ST_TABLE_5;
+	  APP;
+	  break;
+	}
+      lexstate = ST_TABLE_6;
+      /* FALLTHRU */
+
+    case ST_TABLE_6:
+      switch (token)
+	{
+	case '{': case '[': case '(':
+	  ++count;
+	  break;
+	case '}': case ']': case ')':
+	  --count;
+	  break;
+	case ',':
+	  if (count == 0)
+	    lexstate = ST_TABLE_2;
+	  break;
+	};
+      goto repeat;
+
+    case ST_TABLE_3:
+      goto repeat;
+
+    case ST_TABLE_4:
+      if (token == ';')
+	lexstate = ST_NORMAL;
+      goto repeat;
+
+    case ST_TABLE_5:
+      switch (token)
+	{
+	case ',':
+	  token = ';';
+	  lexstate = ST_TABLE_2;
+	  APP;
+	  break;
+	default:
+	  APP;
+	  break;
+	}
+      break;
+
+    default:
+      exit(1);
+    }
+fini:
+
+  if (suppress_type_lookup > 0)
+    --suppress_type_lookup;
+  if (dont_want_brace_phrase > 0)
+    --dont_want_brace_phrase;
+
+  yylval = &next_node->next;
+
+  return token;
+}
+
diff -uprN ../linux-3.4.104-vanilla/scripts/genksyms/parse.tab.c linux-3.4.104-syssec_hw2_app2/scripts/genksyms/parse.tab.c
--- ../linux-3.4.104-vanilla/scripts/genksyms/parse.tab.c	1969-12-31 19:00:00.000000000 -0500
+++ linux-3.4.104-syssec_hw2_app2/scripts/genksyms/parse.tab.c	2014-11-05 20:53:31.000000000 -0500
@@ -0,0 +1,2399 @@
+/* A Bison parser, made by GNU Bison 2.5.  */
+
+/* Bison implementation for Yacc-like parsers in C
+   
+      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
+   
+   This program is free software: you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation, either version 3 of the License, or
+   (at your option) any later version.
+   
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+   
+   You should have received a copy of the GNU General Public License
+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+
+/* As a special exception, you may create a larger work that contains
+   part or all of the Bison parser skeleton and distribute that work
+   under terms of your choice, so long as that work isn't itself a
+   parser generator using the skeleton or a modified version thereof
+   as a parser skeleton.  Alternatively, if you modify or redistribute
+   the parser skeleton itself, you may (at your option) remove this
+   special exception, which will cause the skeleton and the resulting
+   Bison output files to be licensed under the GNU General Public
+   License without this special exception.
+   
+   This special exception was added by the Free Software Foundation in
+   version 2.2 of Bison.  */
+
+/* C LALR(1) parser skeleton written by Richard Stallman, by
+   simplifying the original so-called "semantic" parser.  */
+
+/* All symbols defined below should begin with yy or YY, to avoid
+   infringing on user name space.  This should be done even for local
+   variables, as they might otherwise be expanded by user macros.
+   There are some unavoidable exceptions within include files to
+   define necessary library symbols; they are noted "INFRINGES ON
+   USER NAME SPACE" below.  */
+
+/* Identify Bison output.  */
+#define YYBISON 1
+
+/* Bison version.  */
+#define YYBISON_VERSION "2.5"
+
+/* Skeleton name.  */
+#define YYSKELETON_NAME "yacc.c"
+
+/* Pure parsers.  */
+#define YYPURE 0
+
+/* Push parsers.  */
+#define YYPUSH 0
+
+/* Pull parsers.  */
+#define YYPULL 1
+
+/* Using locations.  */
+#define YYLSP_NEEDED 0
+
+
+
+/* Copy the first part of user declarations.  */
+
+
+
+#include <assert.h>
+#include <stdlib.h>
+#include <string.h>
+#include "genksyms.h"
+
+static int is_typedef;
+static int is_extern;
+static char *current_name;
+static struct string_list *decl_spec;
+
+static void yyerror(const char *);
+
+static inline void
+remove_node(struct string_list **p)
+{
+  struct string_list *node = *p;
+  *p = node->next;
+  free_node(node);
+}
+
+static inline void
+remove_list(struct string_list **pb, struct string_list **pe)
+{
+  struct string_list *b = *pb, *e = *pe;
+  *pb = e;
+  free_list(b, e);
+}
+
+/* Record definition of a struct/union/enum */
+static void record_compound(struct string_list **keyw,
+		       struct string_list **ident,
+		       struct string_list **body,
+		       enum symbol_type type)
+{
+	struct string_list *b = *body, *i = *ident, *r;
+
+	if (i->in_source_file) {
+		remove_node(keyw);
+		(*ident)->tag = type;
+		remove_list(body, ident);
+		return;
+	}
+	r = copy_node(i); r->tag = type;
+	r->next = (*keyw)->next; *body = r; (*keyw)->next = NULL;
+	add_symbol(i->string, type, b, is_extern);
+}
+
+
+
+
+/* Enabling traces.  */
+#ifndef YYDEBUG
+# define YYDEBUG 1
+#endif
+
+/* Enabling verbose error messages.  */
+#ifdef YYERROR_VERBOSE
+# undef YYERROR_VERBOSE
+# define YYERROR_VERBOSE 1
+#else
+# define YYERROR_VERBOSE 0
+#endif
+
+/* Enabling the token table.  */
+#ifndef YYTOKEN_TABLE
+# define YYTOKEN_TABLE 0
+#endif
+
+
+/* Tokens.  */
+#ifndef YYTOKENTYPE
+# define YYTOKENTYPE
+   /* Put the tokens into the symbol table, so that GDB and other debuggers
+      know about them.  */
+   enum yytokentype {
+     ASM_KEYW = 258,
+     ATTRIBUTE_KEYW = 259,
+     AUTO_KEYW = 260,
+     BOOL_KEYW = 261,
+     CHAR_KEYW = 262,
+     CONST_KEYW = 263,
+     DOUBLE_KEYW = 264,
+     ENUM_KEYW = 265,
+     EXTERN_KEYW = 266,
+     EXTENSION_KEYW = 267,
+     FLOAT_KEYW = 268,
+     INLINE_KEYW = 269,
+     INT_KEYW = 270,
+     LONG_KEYW = 271,
+     REGISTER_KEYW = 272,
+     RESTRICT_KEYW = 273,
+     SHORT_KEYW = 274,
+     SIGNED_KEYW = 275,
+     STATIC_KEYW = 276,
+     STRUCT_KEYW = 277,
+     TYPEDEF_KEYW = 278,
+     UNION_KEYW = 279,
+     UNSIGNED_KEYW = 280,
+     VOID_KEYW = 281,
+     VOLATILE_KEYW = 282,
+     TYPEOF_KEYW = 283,
+     EXPORT_SYMBOL_KEYW = 284,
+     ASM_PHRASE = 285,
+     ATTRIBUTE_PHRASE = 286,
+     BRACE_PHRASE = 287,
+     BRACKET_PHRASE = 288,
+     EXPRESSION_PHRASE = 289,
+     CHAR = 290,
+     DOTS = 291,
+     IDENT = 292,
+     INT = 293,
+     REAL = 294,
+     STRING = 295,
+     TYPE = 296,
+     OTHER = 297,
+     FILENAME = 298
+   };
+#endif
+
+
+
+#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
+typedef int YYSTYPE;
+# define YYSTYPE_IS_TRIVIAL 1
+# define yystype YYSTYPE /* obsolescent; will be withdrawn */
+# define YYSTYPE_IS_DECLARED 1
+#endif
+
+
+/* Copy the second part of user declarations.  */
+
+
+
+#ifdef short
+# undef short
+#endif
+
+#ifdef YYTYPE_UINT8
+typedef YYTYPE_UINT8 yytype_uint8;
+#else
+typedef unsigned char yytype_uint8;
+#endif
+
+#ifdef YYTYPE_INT8
+typedef YYTYPE_INT8 yytype_int8;
+#elif (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+typedef signed char yytype_int8;
+#else
+typedef short int yytype_int8;
+#endif
+
+#ifdef YYTYPE_UINT16
+typedef YYTYPE_UINT16 yytype_uint16;
+#else
+typedef unsigned short int yytype_uint16;
+#endif
+
+#ifdef YYTYPE_INT16
+typedef YYTYPE_INT16 yytype_int16;
+#else
+typedef short int yytype_int16;
+#endif
+
+#ifndef YYSIZE_T
+# ifdef __SIZE_TYPE__
+#  define YYSIZE_T __SIZE_TYPE__
+# elif defined size_t
+#  define YYSIZE_T size_t
+# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
+#  define YYSIZE_T size_t
+# else
+#  define YYSIZE_T unsigned int
+# endif
+#endif
+
+#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)
+
+#ifndef YY_
+# if defined YYENABLE_NLS && YYENABLE_NLS
+#  if ENABLE_NLS
+#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
+#   define YY_(msgid) dgettext ("bison-runtime", msgid)
+#  endif
+# endif
+# ifndef YY_
+#  define YY_(msgid) msgid
+# endif
+#endif
+
+/* Suppress unused-variable warnings by "using" E.  */
+#if ! defined lint || defined __GNUC__
+# define YYUSE(e) ((void) (e))
+#else
+# define YYUSE(e) /* empty */
+#endif
+
+/* Identity function, used to suppress warnings about constant conditions.  */
+#ifndef lint
+# define YYID(n) (n)
+#else
+#if (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+static int
+YYID (int yyi)
+#else
+static int
+YYID (yyi)
+    int yyi;
+#endif
+{
+  return yyi;
+}
+#endif
+
+#if ! defined yyoverflow || YYERROR_VERBOSE
+
+/* The parser invokes alloca or malloc; define the necessary symbols.  */
+
+# ifdef YYSTACK_USE_ALLOCA
+#  if YYSTACK_USE_ALLOCA
+#   ifdef __GNUC__
+#    define YYSTACK_ALLOC __builtin_alloca
+#   elif defined __BUILTIN_VA_ARG_INCR
+#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
+#   elif defined _AIX
+#    define YYSTACK_ALLOC __alloca
+#   elif defined _MSC_VER
+#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
+#    define alloca _alloca
+#   else
+#    define YYSTACK_ALLOC alloca
+#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
+#     ifndef EXIT_SUCCESS
+#      define EXIT_SUCCESS 0
+#     endif
+#    endif
+#   endif
+#  endif
+# endif
+
+# ifdef YYSTACK_ALLOC
+   /* Pacify GCC's `empty if-body' warning.  */
+#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
+#  ifndef YYSTACK_ALLOC_MAXIMUM
+    /* The OS might guarantee only one guard page at the bottom of the stack,
+       and a page size can be as small as 4096 bytes.  So we cannot safely
+       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
+       to allow for a few compiler-allocated temporary stack slots.  */
+#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
+#  endif
+# else
+#  define YYSTACK_ALLOC YYMALLOC
+#  define YYSTACK_FREE YYFREE
+#  ifndef YYSTACK_ALLOC_MAXIMUM
+#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
+#  endif
+#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
+       && ! ((defined YYMALLOC || defined malloc) \
+	     && (defined YYFREE || defined free)))
+#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
+#   ifndef EXIT_SUCCESS
+#    define EXIT_SUCCESS 0
+#   endif
+#  endif
+#  ifndef YYMALLOC
+#   define YYMALLOC malloc
+#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
+#   endif
+#  endif
+#  ifndef YYFREE
+#   define YYFREE free
+#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+void free (void *); /* INFRINGES ON USER NAME SPACE */
+#   endif
+#  endif
+# endif
+#endif /* ! defined yyoverflow || YYERROR_VERBOSE */
+
+
+#if (! defined yyoverflow \
+     && (! defined __cplusplus \
+	 || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))
+
+/* A type that is properly aligned for any stack member.  */
+union yyalloc
+{
+  yytype_int16 yyss_alloc;
+  YYSTYPE yyvs_alloc;
+};
+
+/* The size of the maximum gap between one aligned stack and the next.  */
+# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)
+
+/* The size of an array large to enough to hold all stacks, each with
+   N elements.  */
+# define YYSTACK_BYTES(N) \
+     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
+      + YYSTACK_GAP_MAXIMUM)
+
+# define YYCOPY_NEEDED 1
+
+/* Relocate STACK from its old location to the new one.  The
+   local variables YYSIZE and YYSTACKSIZE give the old and new number of
+   elements in the stack, and YYPTR gives the new location of the
+   stack.  Advance YYPTR to a properly aligned location for the next
+   stack.  */
+# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
+    do									\
+      {									\
+	YYSIZE_T yynewbytes;						\
+	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
+	Stack = &yyptr->Stack_alloc;					\
+	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
+	yyptr += yynewbytes / sizeof (*yyptr);				\
+      }									\
+    while (YYID (0))
+
+#endif
+
+#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
+/* Copy COUNT objects from FROM to TO.  The source and destination do
+   not overlap.  */
+# ifndef YYCOPY
+#  if defined __GNUC__ && 1 < __GNUC__
+#   define YYCOPY(To, From, Count) \
+      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
+#  else
+#   define YYCOPY(To, From, Count)		\
+      do					\
+	{					\
+	  YYSIZE_T yyi;				\
+	  for (yyi = 0; yyi < (Count); yyi++)	\
+	    (To)[yyi] = (From)[yyi];		\
+	}					\
+      while (YYID (0))
+#  endif
+# endif
+#endif /* !YYCOPY_NEEDED */
+
+/* YYFINAL -- State number of the termination state.  */
+#define YYFINAL  4
+/* YYLAST -- Last index in YYTABLE.  */
+#define YYLAST   532
+
+/* YYNTOKENS -- Number of terminals.  */
+#define YYNTOKENS  53
+/* YYNNTS -- Number of nonterminals.  */
+#define YYNNTS  49
+/* YYNRULES -- Number of rules.  */
+#define YYNRULES  132
+/* YYNRULES -- Number of states.  */
+#define YYNSTATES  188
+
+/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
+#define YYUNDEFTOK  2
+#define YYMAXUTOK   298
+
+#define YYTRANSLATE(YYX)						\
+  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)
+
+/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
+static const yytype_uint8 yytranslate[] =
+{
+       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+      47,    49,    48,     2,    46,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,    52,    44,
+       2,    50,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,    51,     2,    45,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
+       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
+      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
+      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
+      35,    36,    37,    38,    39,    40,    41,    42,    43
+};
+
+#if YYDEBUG
+/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
+   YYRHS.  */
+static const yytype_uint16 yyprhs[] =
+{
+       0,     0,     3,     5,     8,     9,    12,    13,    18,    19,
+      23,    25,    27,    29,    31,    34,    37,    41,    42,    44,
+      46,    50,    55,    56,    58,    60,    63,    65,    67,    69,
+      71,    73,    75,    77,    79,    81,    87,    92,    95,    98,
+     101,   105,   109,   113,   116,   119,   122,   124,   126,   128,
+     130,   132,   134,   136,   138,   140,   142,   144,   147,   148,
+     150,   152,   155,   157,   159,   161,   163,   166,   168,   170,
+     175,   180,   183,   187,   191,   194,   196,   198,   200,   205,
+     210,   213,   217,   221,   224,   226,   230,   231,   233,   235,
+     239,   242,   245,   247,   248,   250,   252,   257,   262,   265,
+     269,   273,   277,   278,   280,   283,   287,   291,   292,   294,
+     296,   299,   303,   306,   307,   309,   311,   315,   318,   321,
+     323,   326,   327,   330,   334,   339,   341,   345,   347,   351,
+     354,   355,   357
+};
+
+/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
+static const yytype_int8 yyrhs[] =
+{
+      54,     0,    -1,    55,    -1,    54,    55,    -1,    -1,    56,
+      57,    -1,    -1,    12,    23,    58,    60,    -1,    -1,    23,
+      59,    60,    -1,    60,    -1,    84,    -1,    99,    -1,   101,
+      -1,     1,    44,    -1,     1,    45,    -1,    64,    61,    44,
+      -1,    -1,    62,    -1,    63,    -1,    62,    46,    63,    -1,
+      74,   100,    95,    85,    -1,    -1,    65,    -1,    66,    -1,
+      65,    66,    -1,    67,    -1,    68,    -1,     5,    -1,    17,
+      -1,    21,    -1,    11,    -1,    14,    -1,    69,    -1,    73,
+      -1,    28,    47,    65,    48,    49,    -1,    28,    47,    65,
+      49,    -1,    22,    37,    -1,    24,    37,    -1,    10,    37,
+      -1,    22,    37,    87,    -1,    24,    37,    87,    -1,    10,
+      37,    96,    -1,    10,    96,    -1,    22,    87,    -1,    24,
+      87,    -1,     7,    -1,    19,    -1,    15,    -1,    16,    -1,
+      20,    -1,    25,    -1,    13,    -1,     9,    -1,    26,    -1,
+       6,    -1,    41,    -1,    48,    71,    -1,    -1,    72,    -1,
+      73,    -1,    72,    73,    -1,     8,    -1,    27,    -1,    31,
+      -1,    18,    -1,    70,    74,    -1,    75,    -1,    37,    -1,
+      75,    47,    78,    49,    -1,    75,    47,     1,    49,    -1,
+      75,    33,    -1,    47,    74,    49,    -1,    47,     1,    49,
+      -1,    70,    76,    -1,    77,    -1,    37,    -1,    41,    -1,
+      77,    47,    78,    49,    -1,    77,    47,     1,    49,    -1,
+      77,    33,    -1,    47,    76,    49,    -1,    47,     1,    49,
+      -1,    79,    36,    -1,    79,    -1,    80,    46,    36,    -1,
+      -1,    80,    -1,    81,    -1,    80,    46,    81,    -1,    65,
+      82,    -1,    70,    82,    -1,    83,    -1,    -1,    37,    -1,
+      41,    -1,    83,    47,    78,    49,    -1,    83,    47,     1,
+      49,    -1,    83,    33,    -1,    47,    82,    49,    -1,    47,
+       1,    49,    -1,    64,    74,    32,    -1,    -1,    86,    -1,
+      50,    34,    -1,    51,    88,    45,    -1,    51,     1,    45,
+      -1,    -1,    89,    -1,    90,    -1,    89,    90,    -1,    64,
+      91,    44,    -1,     1,    44,    -1,    -1,    92,    -1,    93,
+      -1,    92,    46,    93,    -1,    76,    95,    -1,    37,    94,
+      -1,    94,    -1,    52,    34,    -1,    -1,    95,    31,    -1,
+      51,    97,    45,    -1,    51,    97,    46,    45,    -1,    98,
+      -1,    97,    46,    98,    -1,    37,    -1,    37,    50,    34,
+      -1,    30,    44,    -1,    -1,    30,    -1,    29,    47,    37,
+      49,    44,    -1
+};
+
+/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
+static const yytype_uint16 yyrline[] =
+{
+       0,   123,   123,   124,   128,   128,   134,   134,   136,   136,
+     138,   139,   140,   141,   142,   143,   147,   161,   162,   166,
+     174,   187,   193,   194,   198,   199,   203,   209,   213,   214,
+     215,   216,   217,   221,   222,   223,   224,   228,   230,   232,
+     236,   238,   240,   245,   248,   249,   253,   254,   255,   256,
+     257,   258,   259,   260,   261,   262,   263,   267,   272,   273,
+     277,   278,   282,   282,   282,   283,   291,   292,   296,   305,
+     307,   309,   311,   313,   320,   321,   325,   326,   327,   329,
+     331,   333,   335,   340,   341,   342,   346,   347,   351,   352,
+     357,   362,   364,   368,   369,   377,   381,   383,   385,   387,
+     389,   394,   403,   404,   409,   414,   415,   419,   420,   424,
+     425,   429,   431,   436,   437,   441,   442,   446,   447,   448,
+     452,   456,   457,   461,   462,   466,   467,   470,   475,   483,
+     487,   488,   492
+};
+#endif
+
+#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
+/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
+   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
+static const char *const yytname[] =
+{
+  "$end", "error", "$undefined", "ASM_KEYW", "ATTRIBUTE_KEYW",
+  "AUTO_KEYW", "BOOL_KEYW", "CHAR_KEYW", "CONST_KEYW", "DOUBLE_KEYW",
+  "ENUM_KEYW", "EXTERN_KEYW", "EXTENSION_KEYW", "FLOAT_KEYW",
+  "INLINE_KEYW", "INT_KEYW", "LONG_KEYW", "REGISTER_KEYW", "RESTRICT_KEYW",
+  "SHORT_KEYW", "SIGNED_KEYW", "STATIC_KEYW", "STRUCT_KEYW",
+  "TYPEDEF_KEYW", "UNION_KEYW", "UNSIGNED_KEYW", "VOID_KEYW",
+  "VOLATILE_KEYW", "TYPEOF_KEYW", "EXPORT_SYMBOL_KEYW", "ASM_PHRASE",
+  "ATTRIBUTE_PHRASE", "BRACE_PHRASE", "BRACKET_PHRASE",
+  "EXPRESSION_PHRASE", "CHAR", "DOTS", "IDENT", "INT", "REAL", "STRING",
+  "TYPE", "OTHER", "FILENAME", "';'", "'}'", "','", "'('", "'*'", "')'",
+  "'='", "'{'", "':'", "$accept", "declaration_seq", "declaration", "$@1",
+  "declaration1", "$@2", "$@3", "simple_declaration",
+  "init_declarator_list_opt", "init_declarator_list", "init_declarator",
+  "decl_specifier_seq_opt", "decl_specifier_seq", "decl_specifier",
+  "storage_class_specifier", "type_specifier", "simple_type_specifier",
+  "ptr_operator", "cvar_qualifier_seq_opt", "cvar_qualifier_seq",
+  "cvar_qualifier", "declarator", "direct_declarator", "nested_declarator",
+  "direct_nested_declarator", "parameter_declaration_clause",
+  "parameter_declaration_list_opt", "parameter_declaration_list",
+  "parameter_declaration", "m_abstract_declarator",
+  "direct_m_abstract_declarator", "function_definition", "initializer_opt",
+  "initializer", "class_body", "member_specification_opt",
+  "member_specification", "member_declaration",
+  "member_declarator_list_opt", "member_declarator_list",
+  "member_declarator", "member_bitfield_declarator", "attribute_opt",
+  "enum_body", "enumerator_list", "enumerator", "asm_definition",
+  "asm_phrase_opt", "export_definition", 0
+};
+#endif
+
+# ifdef YYPRINT
+/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
+   token YYLEX-NUM.  */
+static const yytype_uint16 yytoknum[] =
+{
+       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
+     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
+     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
+     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
+     295,   296,   297,   298,    59,   125,    44,    40,    42,    41,
+      61,   123,    58
+};
+# endif
+
+/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
+static const yytype_uint8 yyr1[] =
+{
+       0,    53,    54,    54,    56,    55,    58,    57,    59,    57,
+      57,    57,    57,    57,    57,    57,    60,    61,    61,    62,
+      62,    63,    64,    64,    65,    65,    66,    66,    67,    67,
+      67,    67,    67,    68,    68,    68,    68,    68,    68,    68,
+      68,    68,    68,    68,    68,    68,    69,    69,    69,    69,
+      69,    69,    69,    69,    69,    69,    69,    70,    71,    71,
+      72,    72,    73,    73,    73,    73,    74,    74,    75,    75,
+      75,    75,    75,    75,    76,    76,    77,    77,    77,    77,
+      77,    77,    77,    78,    78,    78,    79,    79,    80,    80,
+      81,    82,    82,    83,    83,    83,    83,    83,    83,    83,
+      83,    84,    85,    85,    86,    87,    87,    88,    88,    89,
+      89,    90,    90,    91,    91,    92,    92,    93,    93,    93,
+      94,    95,    95,    96,    96,    97,    97,    98,    98,    99,
+     100,   100,   101
+};
+
+/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
+static const yytype_uint8 yyr2[] =
+{
+       0,     2,     1,     2,     0,     2,     0,     4,     0,     3,
+       1,     1,     1,     1,     2,     2,     3,     0,     1,     1,
+       3,     4,     0,     1,     1,     2,     1,     1,     1,     1,
+       1,     1,     1,     1,     1,     5,     4,     2,     2,     2,
+       3,     3,     3,     2,     2,     2,     1,     1,     1,     1,
+       1,     1,     1,     1,     1,     1,     1,     2,     0,     1,
+       1,     2,     1,     1,     1,     1,     2,     1,     1,     4,
+       4,     2,     3,     3,     2,     1,     1,     1,     4,     4,
+       2,     3,     3,     2,     1,     3,     0,     1,     1,     3,
+       2,     2,     1,     0,     1,     1,     4,     4,     2,     3,
+       3,     3,     0,     1,     2,     3,     3,     0,     1,     1,
+       2,     3,     2,     0,     1,     1,     3,     2,     2,     1,
+       2,     0,     2,     3,     4,     1,     3,     1,     3,     2,
+       0,     1,     5
+};
+
+/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
+   Performed when YYTABLE doesn't specify something else to do.  Zero
+   means the default is an error.  */
+static const yytype_uint8 yydefact[] =
+{
+       4,     4,     2,     0,     1,     3,     0,    28,    55,    46,
+      62,    53,     0,    31,     0,    52,    32,    48,    49,    29,
+      65,    47,    50,    30,     0,     8,     0,    51,    54,    63,
+       0,     0,     0,    64,    56,     5,    10,    17,    23,    24,
+      26,    27,    33,    34,    11,    12,    13,    14,    15,    39,
+       0,    43,     6,    37,     0,    44,    22,    38,    45,     0,
+       0,   129,    68,     0,    58,     0,    18,    19,     0,   130,
+      67,    25,    42,   127,     0,   125,    22,    40,     0,   113,
+       0,     0,   109,     9,    17,    41,     0,     0,     0,     0,
+      57,    59,    60,    16,     0,    66,   131,   101,   121,    71,
+       0,     0,   123,     0,     7,   112,   106,    76,    77,     0,
+       0,     0,   121,    75,     0,   114,   115,   119,   105,     0,
+     110,   130,     0,    36,     0,    73,    72,    61,    20,   102,
+       0,    93,     0,    84,    87,    88,   128,   124,   126,   118,
+       0,    76,     0,   120,    74,   117,    80,     0,   111,     0,
+      35,   132,   122,     0,    21,   103,    70,    94,    56,     0,
+      93,    90,    92,    69,    83,     0,    82,    81,     0,     0,
+     116,   104,     0,    95,     0,    91,    98,     0,    85,    89,
+      79,    78,   100,    99,     0,     0,    97,    96
+};
+
+/* YYDEFGOTO[NTERM-NUM].  */
+static const yytype_int16 yydefgoto[] =
+{
+      -1,     1,     2,     3,    35,    76,    56,    36,    65,    66,
+      67,    79,    38,    39,    40,    41,    42,    68,    90,    91,
+      43,   121,    70,   112,   113,   132,   133,   134,   135,   161,
+     162,    44,   154,   155,    55,    80,    81,    82,   114,   115,
+     116,   117,   129,    51,    74,    75,    45,    98,    46
+};
+
+/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
+   STATE-NUM.  */
+#define YYPACT_NINF -135
+static const yytype_int16 yypact[] =
+{
+    -135,    20,  -135,   321,  -135,  -135,    30,  -135,  -135,  -135,
+    -135,  -135,   -28,  -135,     2,  -135,  -135,  -135,  -135,  -135,
+    -135,  -135,  -135,  -135,    -6,  -135,     9,  -135,  -135,  -135,
+      -5,    15,   -17,  -135,  -135,  -135,  -135,    18,   491,  -135,
+    -135,  -135,  -135,  -135,  -135,  -135,  -135,  -135,  -135,   -22,
+      31,  -135,  -135,    19,   106,  -135,   491,    19,  -135,   491,
+      50,  -135,  -135,    11,    -3,    51,    57,  -135,    18,   -14,
+      14,  -135,  -135,    48,    46,  -135,   491,  -135,    33,    32,
+      59,   154,  -135,  -135,    18,  -135,   365,    56,    60,    61,
+    -135,    -3,  -135,  -135,    18,  -135,  -135,  -135,  -135,  -135,
+     202,    74,  -135,   -23,  -135,  -135,  -135,    77,  -135,    16,
+     101,    49,  -135,    34,    92,    93,  -135,  -135,  -135,    94,
+    -135,   110,    95,  -135,    97,  -135,  -135,  -135,  -135,   -20,
+      96,   410,    99,   113,   100,  -135,  -135,  -135,  -135,  -135,
+     103,  -135,   107,  -135,  -135,   111,  -135,   239,  -135,    32,
+    -135,  -135,  -135,   123,  -135,  -135,  -135,  -135,  -135,     3,
+      52,  -135,    38,  -135,  -135,   454,  -135,  -135,   117,   128,
+    -135,  -135,   134,  -135,   135,  -135,  -135,   276,  -135,  -135,
+    -135,  -135,  -135,  -135,   137,   138,  -135,  -135
+};
+
+/* YYPGOTO[NTERM-NUM].  */
+static const yytype_int16 yypgoto[] =
+{
+    -135,  -135,   187,  -135,  -135,  -135,  -135,   -50,  -135,  -135,
+      98,     0,   -59,   -37,  -135,  -135,  -135,   -77,  -135,  -135,
+     -54,   -30,  -135,   -90,  -135,  -134,  -135,  -135,    24,   -58,
+    -135,  -135,  -135,  -135,   -18,  -135,  -135,   109,  -135,  -135,
+      44,    87,    84,   148,  -135,   102,  -135,  -135,  -135
+};
+
+/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
+   positive, shift that token.  If negative, reduce the rule which
+   number is the opposite.  If YYTABLE_NINF, syntax error.  */
+#define YYTABLE_NINF -109
+static const yytype_int16 yytable[] =
+{
+      86,    71,   111,    37,   172,    10,    83,    69,    58,    49,
+      92,   152,    88,   169,    73,    20,    96,   140,    97,   142,
+       4,   144,   137,    50,    29,    52,   104,    61,    33,    50,
+     153,    53,   111,    89,   111,    77,   -93,   127,    95,    85,
+     157,   131,    59,   185,   173,    54,    57,    99,    62,    71,
+     159,    64,   -93,   141,   160,    62,    84,   108,    63,    64,
+      54,   100,    60,   109,    64,    63,    64,   146,    73,   107,
+      54,   176,   111,   108,    47,    48,    84,   105,   106,   109,
+      64,   147,   160,   160,   110,   177,   141,    87,   131,   157,
+     108,   102,   103,   173,    71,    93,   109,    64,   101,   159,
+      64,   174,   175,    94,   118,   124,   131,    78,   136,   125,
+     126,     7,     8,     9,    10,    11,    12,    13,   131,    15,
+      16,    17,    18,    19,    20,    21,    22,    23,    24,   110,
+      26,    27,    28,    29,    30,   143,   148,    33,   105,   149,
+      96,   151,   152,   -22,   150,   156,   165,    34,   163,   164,
+     -22,  -107,   166,   -22,   -22,   119,   167,   171,   -22,     7,
+       8,     9,    10,    11,    12,    13,   180,    15,    16,    17,
+      18,    19,    20,    21,    22,    23,    24,   181,    26,    27,
+      28,    29,    30,   182,   183,    33,   186,   187,     5,   179,
+     120,   -22,   128,   170,   139,    34,   145,    72,   -22,  -108,
+       0,   -22,   -22,   130,     0,   138,   -22,     7,     8,     9,
+      10,    11,    12,    13,     0,    15,    16,    17,    18,    19,
+      20,    21,    22,    23,    24,     0,    26,    27,    28,    29,
+      30,     0,     0,    33,     0,     0,     0,     0,   -86,     0,
+     168,     0,     0,    34,     7,     8,     9,    10,    11,    12,
+      13,   -86,    15,    16,    17,    18,    19,    20,    21,    22,
+      23,    24,     0,    26,    27,    28,    29,    30,     0,     0,
+      33,     0,     0,     0,     0,   -86,     0,   184,     0,     0,
+      34,     7,     8,     9,    10,    11,    12,    13,   -86,    15,
+      16,    17,    18,    19,    20,    21,    22,    23,    24,     0,
+      26,    27,    28,    29,    30,     0,     0,    33,     0,     0,
+       0,     0,   -86,     0,     0,     0,     0,    34,     0,     0,
+       0,     0,     6,     0,     0,   -86,     7,     8,     9,    10,
+      11,    12,    13,    14,    15,    16,    17,    18,    19,    20,
+      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
+      31,    32,    33,     0,     0,     0,     0,     0,   -22,     0,
+       0,     0,    34,     0,     0,   -22,     0,     0,   -22,   -22,
+       7,     8,     9,    10,    11,    12,    13,     0,    15,    16,
+      17,    18,    19,    20,    21,    22,    23,    24,     0,    26,
+      27,    28,    29,    30,     0,     0,    33,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,    34,     0,     0,     0,
+       0,     0,     0,   122,   123,     7,     8,     9,    10,    11,
+      12,    13,     0,    15,    16,    17,    18,    19,    20,    21,
+      22,    23,    24,     0,    26,    27,    28,    29,    30,     0,
+       0,    33,     0,     0,     0,     0,     0,   157,     0,     0,
+       0,   158,     0,     0,     0,     0,     0,   159,    64,     7,
+       8,     9,    10,    11,    12,    13,     0,    15,    16,    17,
+      18,    19,    20,    21,    22,    23,    24,     0,    26,    27,
+      28,    29,    30,     0,     0,    33,     0,     0,     0,     0,
+     178,     0,     0,     0,     0,    34,     7,     8,     9,    10,
+      11,    12,    13,     0,    15,    16,    17,    18,    19,    20,
+      21,    22,    23,    24,     0,    26,    27,    28,    29,    30,
+       0,     0,    33,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,    34
+};
+
+#define yypact_value_is_default(yystate) \
+  ((yystate) == (-135))
+
+#define yytable_value_is_error(yytable_value) \
+  YYID (0)
+
+static const yytype_int16 yycheck[] =
+{
+      59,    38,    79,     3,     1,     8,    56,    37,    26,    37,
+      64,    31,     1,   147,    37,    18,    30,     1,    32,   109,
+       0,   111,    45,    51,    27,    23,    76,    44,    31,    51,
+      50,    37,   109,    63,   111,    53,    33,    91,    68,    57,
+      37,   100,    47,   177,    41,    51,    37,    33,    37,    86,
+      47,    48,    49,    37,   131,    37,    56,    41,    47,    48,
+      51,    47,    47,    47,    48,    47,    48,    33,    37,    37,
+      51,    33,   149,    41,    44,    45,    76,    44,    45,    47,
+      48,    47,   159,   160,    52,    47,    37,    37,   147,    37,
+      41,    45,    46,    41,   131,    44,    47,    48,    50,    47,
+      48,   159,   160,    46,    45,    49,   165,     1,    34,    49,
+      49,     5,     6,     7,     8,     9,    10,    11,   177,    13,
+      14,    15,    16,    17,    18,    19,    20,    21,    22,    52,
+      24,    25,    26,    27,    28,    34,    44,    31,    44,    46,
+      30,    44,    31,    37,    49,    49,    46,    41,    49,    36,
+      44,    45,    49,    47,    48,     1,    49,    34,    52,     5,
+       6,     7,     8,     9,    10,    11,    49,    13,    14,    15,
+      16,    17,    18,    19,    20,    21,    22,    49,    24,    25,
+      26,    27,    28,    49,    49,    31,    49,    49,     1,   165,
+      81,    37,    94,   149,   107,    41,   112,    49,    44,    45,
+      -1,    47,    48,     1,    -1,   103,    52,     5,     6,     7,
+       8,     9,    10,    11,    -1,    13,    14,    15,    16,    17,
+      18,    19,    20,    21,    22,    -1,    24,    25,    26,    27,
+      28,    -1,    -1,    31,    -1,    -1,    -1,    -1,    36,    -1,
+       1,    -1,    -1,    41,     5,     6,     7,     8,     9,    10,
+      11,    49,    13,    14,    15,    16,    17,    18,    19,    20,
+      21,    22,    -1,    24,    25,    26,    27,    28,    -1,    -1,
+      31,    -1,    -1,    -1,    -1,    36,    -1,     1,    -1,    -1,
+      41,     5,     6,     7,     8,     9,    10,    11,    49,    13,
+      14,    15,    16,    17,    18,    19,    20,    21,    22,    -1,
+      24,    25,    26,    27,    28,    -1,    -1,    31,    -1,    -1,
+      -1,    -1,    36,    -1,    -1,    -1,    -1,    41,    -1,    -1,
+      -1,    -1,     1,    -1,    -1,    49,     5,     6,     7,     8,
+       9,    10,    11,    12,    13,    14,    15,    16,    17,    18,
+      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
+      29,    30,    31,    -1,    -1,    -1,    -1,    -1,    37,    -1,
+      -1,    -1,    41,    -1,    -1,    44,    -1,    -1,    47,    48,
+       5,     6,     7,     8,     9,    10,    11,    -1,    13,    14,
+      15,    16,    17,    18,    19,    20,    21,    22,    -1,    24,
+      25,    26,    27,    28,    -1,    -1,    31,    -1,    -1,    -1,
+      -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,
+      -1,    -1,    -1,    48,    49,     5,     6,     7,     8,     9,
+      10,    11,    -1,    13,    14,    15,    16,    17,    18,    19,
+      20,    21,    22,    -1,    24,    25,    26,    27,    28,    -1,
+      -1,    31,    -1,    -1,    -1,    -1,    -1,    37,    -1,    -1,
+      -1,    41,    -1,    -1,    -1,    -1,    -1,    47,    48,     5,
+       6,     7,     8,     9,    10,    11,    -1,    13,    14,    15,
+      16,    17,    18,    19,    20,    21,    22,    -1,    24,    25,
+      26,    27,    28,    -1,    -1,    31,    -1,    -1,    -1,    -1,
+      36,    -1,    -1,    -1,    -1,    41,     5,     6,     7,     8,
+       9,    10,    11,    -1,    13,    14,    15,    16,    17,    18,
+      19,    20,    21,    22,    -1,    24,    25,    26,    27,    28,
+      -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
+      -1,    -1,    41
+};
+
+/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
+   symbol of state STATE-NUM.  */
+static const yytype_uint8 yystos[] =
+{
+       0,    54,    55,    56,     0,    55,     1,     5,     6,     7,
+       8,     9,    10,    11,    12,    13,    14,    15,    16,    17,
+      18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
+      28,    29,    30,    31,    41,    57,    60,    64,    65,    66,
+      67,    68,    69,    73,    84,    99,   101,    44,    45,    37,
+      51,    96,    23,    37,    51,    87,    59,    37,    87,    47,
+      47,    44,    37,    47,    48,    61,    62,    63,    70,    74,
+      75,    66,    96,    37,    97,    98,    58,    87,     1,    64,
+      88,    89,    90,    60,    64,    87,    65,    37,     1,    74,
+      71,    72,    73,    44,    46,    74,    30,    32,   100,    33,
+      47,    50,    45,    46,    60,    44,    45,    37,    41,    47,
+      52,    70,    76,    77,    91,    92,    93,    94,    45,     1,
+      90,    74,    48,    49,    49,    49,    49,    73,    63,    95,
+       1,    65,    78,    79,    80,    81,    34,    45,    98,    94,
+       1,    37,    76,    34,    76,    95,    33,    47,    44,    46,
+      49,    44,    31,    50,    85,    86,    49,    37,    41,    47,
+      70,    82,    83,    49,    36,    46,    49,    49,     1,    78,
+      93,    34,     1,    41,    82,    82,    33,    47,    36,    81,
+      49,    49,    49,    49,     1,    78,    49,    49
+};
+
+#define yyerrok		(yyerrstatus = 0)
+#define yyclearin	(yychar = YYEMPTY)
+#define YYEMPTY		(-2)
+#define YYEOF		0
+
+#define YYACCEPT	goto yyacceptlab
+#define YYABORT		goto yyabortlab
+#define YYERROR		goto yyerrorlab
+
+
+/* Like YYERROR except do call yyerror.  This remains here temporarily
+   to ease the transition to the new meaning of YYERROR, for GCC.
+   Once GCC version 2 has supplanted version 1, this can go.  However,
+   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
+   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
+   discussed.  */
+
+#define YYFAIL		goto yyerrlab
+#if defined YYFAIL
+  /* This is here to suppress warnings from the GCC cpp's
+     -Wunused-macros.  Normally we don't worry about that warning, but
+     some users do, and we want to make it easy for users to remove
+     YYFAIL uses, which will produce warnings from Bison 2.5.  */
+#endif
+
+#define YYRECOVERING()  (!!yyerrstatus)
+
+#define YYBACKUP(Token, Value)					\
+do								\
+  if (yychar == YYEMPTY && yylen == 1)				\
+    {								\
+      yychar = (Token);						\
+      yylval = (Value);						\
+      YYPOPSTACK (1);						\
+      goto yybackup;						\
+    }								\
+  else								\
+    {								\
+      yyerror (YY_("syntax error: cannot back up")); \
+      YYERROR;							\
+    }								\
+while (YYID (0))
+
+
+#define YYTERROR	1
+#define YYERRCODE	256
+
+
+/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
+   If N is 0, then set CURRENT to the empty location which ends
+   the previous symbol: RHS[0] (always defined).  */
+
+#define YYRHSLOC(Rhs, K) ((Rhs)[K])
+#ifndef YYLLOC_DEFAULT
+# define YYLLOC_DEFAULT(Current, Rhs, N)				\
+    do									\
+      if (YYID (N))                                                    \
+	{								\
+	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
+	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
+	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
+	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
+	}								\
+      else								\
+	{								\
+	  (Current).first_line   = (Current).last_line   =		\
+	    YYRHSLOC (Rhs, 0).last_line;				\
+	  (Current).first_column = (Current).last_column =		\
+	    YYRHSLOC (Rhs, 0).last_column;				\
+	}								\
+    while (YYID (0))
+#endif
+
+
+/* This macro is provided for backward compatibility. */
+
+#ifndef YY_LOCATION_PRINT
+# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+#endif
+
+
+/* YYLEX -- calling `yylex' with the right arguments.  */
+
+#ifdef YYLEX_PARAM
+# define YYLEX yylex (YYLEX_PARAM)
+#else
+# define YYLEX yylex ()
+#endif
+
+/* Enable debugging if requested.  */
+#if YYDEBUG
+
+# ifndef YYFPRINTF
+#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
+#  define YYFPRINTF fprintf
+# endif
+
+# define YYDPRINTF(Args)			\
+do {						\
+  if (yydebug)					\
+    YYFPRINTF Args;				\
+} while (YYID (0))
+
+# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
+do {									  \
+  if (yydebug)								  \
+    {									  \
+      YYFPRINTF (stderr, "%s ", Title);					  \
+      yy_symbol_print (stderr,						  \
+		  Type, Value); \
+      YYFPRINTF (stderr, "\n");						  \
+    }									  \
+} while (YYID (0))
+
+
+/*--------------------------------.
+| Print this symbol on YYOUTPUT.  |
+`--------------------------------*/
+
+/*ARGSUSED*/
+#if (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+static void
+yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)
+#else
+static void
+yy_symbol_value_print (yyoutput, yytype, yyvaluep)
+    FILE *yyoutput;
+    int yytype;
+    YYSTYPE const * const yyvaluep;
+#endif
+{
+  if (!yyvaluep)
+    return;
+# ifdef YYPRINT
+  if (yytype < YYNTOKENS)
+    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
+# else
+  YYUSE (yyoutput);
+# endif
+  switch (yytype)
+    {
+      default:
+	break;
+    }
+}
+
+
+/*--------------------------------.
+| Print this symbol on YYOUTPUT.  |
+`--------------------------------*/
+
+#if (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+static void
+yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)
+#else
+static void
+yy_symbol_print (yyoutput, yytype, yyvaluep)
+    FILE *yyoutput;
+    int yytype;
+    YYSTYPE const * const yyvaluep;
+#endif
+{
+  if (yytype < YYNTOKENS)
+    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
+  else
+    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);
+
+  yy_symbol_value_print (yyoutput, yytype, yyvaluep);
+  YYFPRINTF (yyoutput, ")");
+}
+
+/*------------------------------------------------------------------.
+| yy_stack_print -- Print the state stack from its BOTTOM up to its |
+| TOP (included).                                                   |
+`------------------------------------------------------------------*/
+
+#if (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+static void
+yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
+#else
+static void
+yy_stack_print (yybottom, yytop)
+    yytype_int16 *yybottom;
+    yytype_int16 *yytop;
+#endif
+{
+  YYFPRINTF (stderr, "Stack now");
+  for (; yybottom <= yytop; yybottom++)
+    {
+      int yybot = *yybottom;
+      YYFPRINTF (stderr, " %d", yybot);
+    }
+  YYFPRINTF (stderr, "\n");
+}
+
+# define YY_STACK_PRINT(Bottom, Top)				\
+do {								\
+  if (yydebug)							\
+    yy_stack_print ((Bottom), (Top));				\
+} while (YYID (0))
+
+
+/*------------------------------------------------.
+| Report that the YYRULE is going to be reduced.  |
+`------------------------------------------------*/
+
+#if (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+static void
+yy_reduce_print (YYSTYPE *yyvsp, int yyrule)
+#else
+static void
+yy_reduce_print (yyvsp, yyrule)
+    YYSTYPE *yyvsp;
+    int yyrule;
+#endif
+{
+  int yynrhs = yyr2[yyrule];
+  int yyi;
+  unsigned long int yylno = yyrline[yyrule];
+  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
+	     yyrule - 1, yylno);
+  /* The symbols being reduced.  */
+  for (yyi = 0; yyi < yynrhs; yyi++)
+    {
+      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
+      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
+		       &(yyvsp[(yyi + 1) - (yynrhs)])
+		       		       );
+      YYFPRINTF (stderr, "\n");
+    }
+}
+
+# define YY_REDUCE_PRINT(Rule)		\
+do {					\
+  if (yydebug)				\
+    yy_reduce_print (yyvsp, Rule); \
+} while (YYID (0))
+
+/* Nonzero means print parse trace.  It is left uninitialized so that
+   multiple parsers can coexist.  */
+int yydebug;
+#else /* !YYDEBUG */
+# define YYDPRINTF(Args)
+# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
+# define YY_STACK_PRINT(Bottom, Top)
+# define YY_REDUCE_PRINT(Rule)
+#endif /* !YYDEBUG */
+
+
+/* YYINITDEPTH -- initial size of the parser's stacks.  */
+#ifndef	YYINITDEPTH
+# define YYINITDEPTH 200
+#endif
+
+/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
+   if the built-in stack extension method is used).
+
+   Do not make this value too large; the results are undefined if
+   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
+   evaluated with infinite-precision integer arithmetic.  */
+
+#ifndef YYMAXDEPTH
+# define YYMAXDEPTH 10000
+#endif
+
+
+#if YYERROR_VERBOSE
+
+# ifndef yystrlen
+#  if defined __GLIBC__ && defined _STRING_H
+#   define yystrlen strlen
+#  else
+/* Return the length of YYSTR.  */
+#if (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+static YYSIZE_T
+yystrlen (const char *yystr)
+#else
+static YYSIZE_T
+yystrlen (yystr)
+    const char *yystr;
+#endif
+{
+  YYSIZE_T yylen;
+  for (yylen = 0; yystr[yylen]; yylen++)
+    continue;
+  return yylen;
+}
+#  endif
+# endif
+
+# ifndef yystpcpy
+#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
+#   define yystpcpy stpcpy
+#  else
+/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
+   YYDEST.  */
+#if (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+static char *
+yystpcpy (char *yydest, const char *yysrc)
+#else
+static char *
+yystpcpy (yydest, yysrc)
+    char *yydest;
+    const char *yysrc;
+#endif
+{
+  char *yyd = yydest;
+  const char *yys = yysrc;
+
+  while ((*yyd++ = *yys++) != '\0')
+    continue;
+
+  return yyd - 1;
+}
+#  endif
+# endif
+
+# ifndef yytnamerr
+/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
+   quotes and backslashes, so that it's suitable for yyerror.  The
+   heuristic is that double-quoting is unnecessary unless the string
+   contains an apostrophe, a comma, or backslash (other than
+   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
+   null, do not copy; instead, return the length of what the result
+   would have been.  */
+static YYSIZE_T
+yytnamerr (char *yyres, const char *yystr)
+{
+  if (*yystr == '"')
+    {
+      YYSIZE_T yyn = 0;
+      char const *yyp = yystr;
+
+      for (;;)
+	switch (*++yyp)
+	  {
+	  case '\'':
+	  case ',':
+	    goto do_not_strip_quotes;
+
+	  case '\\':
+	    if (*++yyp != '\\')
+	      goto do_not_strip_quotes;
+	    /* Fall through.  */
+	  default:
+	    if (yyres)
+	      yyres[yyn] = *yyp;
+	    yyn++;
+	    break;
+
+	  case '"':
+	    if (yyres)
+	      yyres[yyn] = '\0';
+	    return yyn;
+	  }
+    do_not_strip_quotes: ;
+    }
+
+  if (! yyres)
+    return yystrlen (yystr);
+
+  return yystpcpy (yyres, yystr) - yyres;
+}
+# endif
+
+/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
+   about the unexpected token YYTOKEN for the state stack whose top is
+   YYSSP.
+
+   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
+   not large enough to hold the message.  In that case, also set
+   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
+   required number of bytes is too large to store.  */
+static int
+yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
+                yytype_int16 *yyssp, int yytoken)
+{
+  YYSIZE_T yysize0 = yytnamerr (0, yytname[yytoken]);
+  YYSIZE_T yysize = yysize0;
+  YYSIZE_T yysize1;
+  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
+  /* Internationalized format string. */
+  const char *yyformat = 0;
+  /* Arguments of yyformat. */
+  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
+  /* Number of reported tokens (one for the "unexpected", one per
+     "expected"). */
+  int yycount = 0;
+
+  /* There are many possibilities here to consider:
+     - Assume YYFAIL is not used.  It's too flawed to consider.  See
+       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
+       for details.  YYERROR is fine as it does not invoke this
+       function.
+     - If this state is a consistent state with a default action, then
+       the only way this function was invoked is if the default action
+       is an error action.  In that case, don't check for expected
+       tokens because there are none.
+     - The only way there can be no lookahead present (in yychar) is if
+       this state is a consistent state with a default action.  Thus,
+       detecting the absence of a lookahead is sufficient to determine
+       that there is no unexpected or expected token to report.  In that
+       case, just report a simple "syntax error".
+     - Don't assume there isn't a lookahead just because this state is a
+       consistent state with a default action.  There might have been a
+       previous inconsistent state, consistent state with a non-default
+       action, or user semantic action that manipulated yychar.
+     - Of course, the expected token list depends on states to have
+       correct lookahead information, and it depends on the parser not
+       to perform extra reductions after fetching a lookahead from the
+       scanner and before detecting a syntax error.  Thus, state merging
+       (from LALR or IELR) and default reductions corrupt the expected
+       token list.  However, the list is correct for canonical LR with
+       one exception: it will still contain any token that will not be
+       accepted due to an error action in a later state.
+  */
+  if (yytoken != YYEMPTY)
+    {
+      int yyn = yypact[*yyssp];
+      yyarg[yycount++] = yytname[yytoken];
+      if (!yypact_value_is_default (yyn))
+        {
+          /* Start YYX at -YYN if negative to avoid negative indexes in
+             YYCHECK.  In other words, skip the first -YYN actions for
+             this state because they are default actions.  */
+          int yyxbegin = yyn < 0 ? -yyn : 0;
+          /* Stay within bounds of both yycheck and yytname.  */
+          int yychecklim = YYLAST - yyn + 1;
+          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+          int yyx;
+
+          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
+                && !yytable_value_is_error (yytable[yyx + yyn]))
+              {
+                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
+                  {
+                    yycount = 1;
+                    yysize = yysize0;
+                    break;
+                  }
+                yyarg[yycount++] = yytname[yyx];
+                yysize1 = yysize + yytnamerr (0, yytname[yyx]);
+                if (! (yysize <= yysize1
+                       && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
+                  return 2;
+                yysize = yysize1;
+              }
+        }
+    }
+
+  switch (yycount)
+    {
+# define YYCASE_(N, S)                      \
+      case N:                               \
+        yyformat = S;                       \
+      break
+      YYCASE_(0, YY_("syntax error"));
+      YYCASE_(1, YY_("syntax error, unexpected %s"));
+      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
+      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
+      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
+      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
+# undef YYCASE_
+    }
+
+  yysize1 = yysize + yystrlen (yyformat);
+  if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
+    return 2;
+  yysize = yysize1;
+
+  if (*yymsg_alloc < yysize)
+    {
+      *yymsg_alloc = 2 * yysize;
+      if (! (yysize <= *yymsg_alloc
+             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
+        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
+      return 1;
+    }
+
+  /* Avoid sprintf, as that infringes on the user's name space.
+     Don't have undefined behavior even if the translation
+     produced a string with the wrong number of "%s"s.  */
+  {
+    char *yyp = *yymsg;
+    int yyi = 0;
+    while ((*yyp = *yyformat) != '\0')
+      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
+        {
+          yyp += yytnamerr (yyp, yyarg[yyi++]);
+          yyformat += 2;
+        }
+      else
+        {
+          yyp++;
+          yyformat++;
+        }
+  }
+  return 0;
+}
+#endif /* YYERROR_VERBOSE */
+
+/*-----------------------------------------------.
+| Release the memory associated to this symbol.  |
+`-----------------------------------------------*/
+
+/*ARGSUSED*/
+#if (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+static void
+yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)
+#else
+static void
+yydestruct (yymsg, yytype, yyvaluep)
+    const char *yymsg;
+    int yytype;
+    YYSTYPE *yyvaluep;
+#endif
+{
+  YYUSE (yyvaluep);
+
+  if (!yymsg)
+    yymsg = "Deleting";
+  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);
+
+  switch (yytype)
+    {
+
+      default:
+	break;
+    }
+}
+
+
+/* Prevent warnings from -Wmissing-prototypes.  */
+#ifdef YYPARSE_PARAM
+#if defined __STDC__ || defined __cplusplus
+int yyparse (void *YYPARSE_PARAM);
+#else
+int yyparse ();
+#endif
+#else /* ! YYPARSE_PARAM */
+#if defined __STDC__ || defined __cplusplus
+int yyparse (void);
+#else
+int yyparse ();
+#endif
+#endif /* ! YYPARSE_PARAM */
+
+
+/* The lookahead symbol.  */
+int yychar;
+
+/* The semantic value of the lookahead symbol.  */
+YYSTYPE yylval;
+
+/* Number of syntax errors so far.  */
+int yynerrs;
+
+
+/*----------.
+| yyparse.  |
+`----------*/
+
+#ifdef YYPARSE_PARAM
+#if (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+int
+yyparse (void *YYPARSE_PARAM)
+#else
+int
+yyparse (YYPARSE_PARAM)
+    void *YYPARSE_PARAM;
+#endif
+#else /* ! YYPARSE_PARAM */
+#if (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+int
+yyparse (void)
+#else
+int
+yyparse ()
+
+#endif
+#endif
+{
+    int yystate;
+    /* Number of tokens to shift before error messages enabled.  */
+    int yyerrstatus;
+
+    /* The stacks and their tools:
+       `yyss': related to states.
+       `yyvs': related to semantic values.
+
+       Refer to the stacks thru separate pointers, to allow yyoverflow
+       to reallocate them elsewhere.  */
+
+    /* The state stack.  */
+    yytype_int16 yyssa[YYINITDEPTH];
+    yytype_int16 *yyss;
+    yytype_int16 *yyssp;
+
+    /* The semantic value stack.  */
+    YYSTYPE yyvsa[YYINITDEPTH];
+    YYSTYPE *yyvs;
+    YYSTYPE *yyvsp;
+
+    YYSIZE_T yystacksize;
+
+  int yyn;
+  int yyresult;
+  /* Lookahead token as an internal (translated) token number.  */
+  int yytoken;
+  /* The variables used to return semantic value and location from the
+     action routines.  */
+  YYSTYPE yyval;
+
+#if YYERROR_VERBOSE
+  /* Buffer for error messages, and its allocated size.  */
+  char yymsgbuf[128];
+  char *yymsg = yymsgbuf;
+  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
+#endif
+
+#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))
+
+  /* The number of symbols on the RHS of the reduced rule.
+     Keep to zero when no symbol should be popped.  */
+  int yylen = 0;
+
+  yytoken = 0;
+  yyss = yyssa;
+  yyvs = yyvsa;
+  yystacksize = YYINITDEPTH;
+
+  YYDPRINTF ((stderr, "Starting parse\n"));
+
+  yystate = 0;
+  yyerrstatus = 0;
+  yynerrs = 0;
+  yychar = YYEMPTY; /* Cause a token to be read.  */
+
+  /* Initialize stack pointers.
+     Waste one element of value and location stack
+     so that they stay on the same level as the state stack.
+     The wasted elements are never initialized.  */
+  yyssp = yyss;
+  yyvsp = yyvs;
+
+  goto yysetstate;
+
+/*------------------------------------------------------------.
+| yynewstate -- Push a new state, which is found in yystate.  |
+`------------------------------------------------------------*/
+ yynewstate:
+  /* In all cases, when you get here, the value and location stacks
+     have just been pushed.  So pushing a state here evens the stacks.  */
+  yyssp++;
+
+ yysetstate:
+  *yyssp = yystate;
+
+  if (yyss + yystacksize - 1 <= yyssp)
+    {
+      /* Get the current used size of the three stacks, in elements.  */
+      YYSIZE_T yysize = yyssp - yyss + 1;
+
+#ifdef yyoverflow
+      {
+	/* Give user a chance to reallocate the stack.  Use copies of
+	   these so that the &'s don't force the real ones into
+	   memory.  */
+	YYSTYPE *yyvs1 = yyvs;
+	yytype_int16 *yyss1 = yyss;
+
+	/* Each stack pointer address is followed by the size of the
+	   data in use in that stack, in bytes.  This used to be a
+	   conditional around just the two extra args, but that might
+	   be undefined if yyoverflow is a macro.  */
+	yyoverflow (YY_("memory exhausted"),
+		    &yyss1, yysize * sizeof (*yyssp),
+		    &yyvs1, yysize * sizeof (*yyvsp),
+		    &yystacksize);
+
+	yyss = yyss1;
+	yyvs = yyvs1;
+      }
+#else /* no yyoverflow */
+# ifndef YYSTACK_RELOCATE
+      goto yyexhaustedlab;
+# else
+      /* Extend the stack our own way.  */
+      if (YYMAXDEPTH <= yystacksize)
+	goto yyexhaustedlab;
+      yystacksize *= 2;
+      if (YYMAXDEPTH < yystacksize)
+	yystacksize = YYMAXDEPTH;
+
+      {
+	yytype_int16 *yyss1 = yyss;
+	union yyalloc *yyptr =
+	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
+	if (! yyptr)
+	  goto yyexhaustedlab;
+	YYSTACK_RELOCATE (yyss_alloc, yyss);
+	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
+#  undef YYSTACK_RELOCATE
+	if (yyss1 != yyssa)
+	  YYSTACK_FREE (yyss1);
+      }
+# endif
+#endif /* no yyoverflow */
+
+      yyssp = yyss + yysize - 1;
+      yyvsp = yyvs + yysize - 1;
+
+      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
+		  (unsigned long int) yystacksize));
+
+      if (yyss + yystacksize - 1 <= yyssp)
+	YYABORT;
+    }
+
+  YYDPRINTF ((stderr, "Entering state %d\n", yystate));
+
+  if (yystate == YYFINAL)
+    YYACCEPT;
+
+  goto yybackup;
+
+/*-----------.
+| yybackup.  |
+`-----------*/
+yybackup:
+
+  /* Do appropriate processing given the current state.  Read a
+     lookahead token if we need one and don't already have one.  */
+
+  /* First try to decide what to do without reference to lookahead token.  */
+  yyn = yypact[yystate];
+  if (yypact_value_is_default (yyn))
+    goto yydefault;
+
+  /* Not known => get a lookahead token if don't already have one.  */
+
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
+  if (yychar == YYEMPTY)
+    {
+      YYDPRINTF ((stderr, "Reading a token: "));
+      yychar = YYLEX;
+    }
+
+  if (yychar <= YYEOF)
+    {
+      yychar = yytoken = YYEOF;
+      YYDPRINTF ((stderr, "Now at end of input.\n"));
+    }
+  else
+    {
+      yytoken = YYTRANSLATE (yychar);
+      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
+    }
+
+  /* If the proper action on seeing token YYTOKEN is to reduce or to
+     detect an error, take that action.  */
+  yyn += yytoken;
+  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
+    goto yydefault;
+  yyn = yytable[yyn];
+  if (yyn <= 0)
+    {
+      if (yytable_value_is_error (yyn))
+        goto yyerrlab;
+      yyn = -yyn;
+      goto yyreduce;
+    }
+
+  /* Count tokens shifted since error; after three, turn off error
+     status.  */
+  if (yyerrstatus)
+    yyerrstatus--;
+
+  /* Shift the lookahead token.  */
+  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
+
+  /* Discard the shifted token.  */
+  yychar = YYEMPTY;
+
+  yystate = yyn;
+  *++yyvsp = yylval;
+
+  goto yynewstate;
+
+
+/*-----------------------------------------------------------.
+| yydefault -- do the default action for the current state.  |
+`-----------------------------------------------------------*/
+yydefault:
+  yyn = yydefact[yystate];
+  if (yyn == 0)
+    goto yyerrlab;
+  goto yyreduce;
+
+
+/*-----------------------------.
+| yyreduce -- Do a reduction.  |
+`-----------------------------*/
+yyreduce:
+  /* yyn is the number of a rule to reduce with.  */
+  yylen = yyr2[yyn];
+
+  /* If YYLEN is nonzero, implement the default value of the action:
+     `$$ = $1'.
+
+     Otherwise, the following line sets YYVAL to garbage.
+     This behavior is undocumented and Bison
+     users should not rely upon it.  Assigning to YYVAL
+     unconditionally makes the parser a bit smaller, and it avoids a
+     GCC warning that YYVAL may be used uninitialized.  */
+  yyval = yyvsp[1-yylen];
+
+
+  YY_REDUCE_PRINT (yyn);
+  switch (yyn)
+    {
+        case 4:
+
+    { is_typedef = 0; is_extern = 0; current_name = NULL; decl_spec = NULL; }
+    break;
+
+  case 5:
+
+    { free_list(*(yyvsp[(2) - (2)]), NULL); *(yyvsp[(2) - (2)]) = NULL; }
+    break;
+
+  case 6:
+
+    { is_typedef = 1; }
+    break;
+
+  case 7:
+
+    { (yyval) = (yyvsp[(4) - (4)]); }
+    break;
+
+  case 8:
+
+    { is_typedef = 1; }
+    break;
+
+  case 9:
+
+    { (yyval) = (yyvsp[(3) - (3)]); }
+    break;
+
+  case 14:
+
+    { (yyval) = (yyvsp[(2) - (2)]); }
+    break;
+
+  case 15:
+
+    { (yyval) = (yyvsp[(2) - (2)]); }
+    break;
+
+  case 16:
+
+    { if (current_name) {
+		    struct string_list *decl = (*(yyvsp[(3) - (3)]))->next;
+		    (*(yyvsp[(3) - (3)]))->next = NULL;
+		    add_symbol(current_name,
+			       is_typedef ? SYM_TYPEDEF : SYM_NORMAL,
+			       decl, is_extern);
+		    current_name = NULL;
+		  }
+		  (yyval) = (yyvsp[(3) - (3)]);
+		}
+    break;
+
+  case 17:
+
+    { (yyval) = NULL; }
+    break;
+
+  case 19:
+
+    { struct string_list *decl = *(yyvsp[(1) - (1)]);
+		  *(yyvsp[(1) - (1)]) = NULL;
+		  add_symbol(current_name,
+			     is_typedef ? SYM_TYPEDEF : SYM_NORMAL, decl, is_extern);
+		  current_name = NULL;
+		  (yyval) = (yyvsp[(1) - (1)]);
+		}
+    break;
+
+  case 20:
+
+    { struct string_list *decl = *(yyvsp[(3) - (3)]);
+		  *(yyvsp[(3) - (3)]) = NULL;
+		  free_list(*(yyvsp[(2) - (3)]), NULL);
+		  *(yyvsp[(2) - (3)]) = decl_spec;
+		  add_symbol(current_name,
+			     is_typedef ? SYM_TYPEDEF : SYM_NORMAL, decl, is_extern);
+		  current_name = NULL;
+		  (yyval) = (yyvsp[(3) - (3)]);
+		}
+    break;
+
+  case 21:
+
+    { (yyval) = (yyvsp[(4) - (4)]) ? (yyvsp[(4) - (4)]) : (yyvsp[(3) - (4)]) ? (yyvsp[(3) - (4)]) : (yyvsp[(2) - (4)]) ? (yyvsp[(2) - (4)]) : (yyvsp[(1) - (4)]); }
+    break;
+
+  case 22:
+
+    { decl_spec = NULL; }
+    break;
+
+  case 24:
+
+    { decl_spec = *(yyvsp[(1) - (1)]); }
+    break;
+
+  case 25:
+
+    { decl_spec = *(yyvsp[(2) - (2)]); }
+    break;
+
+  case 26:
+
+    { /* Version 2 checksumming ignores storage class, as that
+		     is really irrelevant to the linkage.  */
+		  remove_node((yyvsp[(1) - (1)]));
+		  (yyval) = (yyvsp[(1) - (1)]);
+		}
+    break;
+
+  case 31:
+
+    { is_extern = 1; (yyval) = (yyvsp[(1) - (1)]); }
+    break;
+
+  case 32:
+
+    { is_extern = 0; (yyval) = (yyvsp[(1) - (1)]); }
+    break;
+
+  case 37:
+
+    { remove_node((yyvsp[(1) - (2)])); (*(yyvsp[(2) - (2)]))->tag = SYM_STRUCT; (yyval) = (yyvsp[(2) - (2)]); }
+    break;
+
+  case 38:
+
+    { remove_node((yyvsp[(1) - (2)])); (*(yyvsp[(2) - (2)]))->tag = SYM_UNION; (yyval) = (yyvsp[(2) - (2)]); }
+    break;
+
+  case 39:
+
+    { remove_node((yyvsp[(1) - (2)])); (*(yyvsp[(2) - (2)]))->tag = SYM_ENUM; (yyval) = (yyvsp[(2) - (2)]); }
+    break;
+
+  case 40:
+
+    { record_compound((yyvsp[(1) - (3)]), (yyvsp[(2) - (3)]), (yyvsp[(3) - (3)]), SYM_STRUCT); (yyval) = (yyvsp[(3) - (3)]); }
+    break;
+
+  case 41:
+
+    { record_compound((yyvsp[(1) - (3)]), (yyvsp[(2) - (3)]), (yyvsp[(3) - (3)]), SYM_UNION); (yyval) = (yyvsp[(3) - (3)]); }
+    break;
+
+  case 42:
+
+    { record_compound((yyvsp[(1) - (3)]), (yyvsp[(2) - (3)]), (yyvsp[(3) - (3)]), SYM_ENUM); (yyval) = (yyvsp[(3) - (3)]); }
+    break;
+
+  case 43:
+
+    { add_symbol(NULL, SYM_ENUM, NULL, 0); (yyval) = (yyvsp[(2) - (2)]); }
+    break;
+
+  case 44:
+
+    { (yyval) = (yyvsp[(2) - (2)]); }
+    break;
+
+  case 45:
+
+    { (yyval) = (yyvsp[(2) - (2)]); }
+    break;
+
+  case 56:
+
+    { (*(yyvsp[(1) - (1)]))->tag = SYM_TYPEDEF; (yyval) = (yyvsp[(1) - (1)]); }
+    break;
+
+  case 57:
+
+    { (yyval) = (yyvsp[(2) - (2)]) ? (yyvsp[(2) - (2)]) : (yyvsp[(1) - (2)]); }
+    break;
+
+  case 58:
+
+    { (yyval) = NULL; }
+    break;
+
+  case 61:
+
+    { (yyval) = (yyvsp[(2) - (2)]); }
+    break;
+
+  case 65:
+
+    { /* restrict has no effect in prototypes so ignore it */
+		  remove_node((yyvsp[(1) - (1)]));
+		  (yyval) = (yyvsp[(1) - (1)]);
+		}
+    break;
+
+  case 66:
+
+    { (yyval) = (yyvsp[(2) - (2)]); }
+    break;
+
+  case 68:
+
+    { if (current_name != NULL) {
+		    error_with_pos("unexpected second declaration name");
+		    YYERROR;
+		  } else {
+		    current_name = (*(yyvsp[(1) - (1)]))->string;
+		    (yyval) = (yyvsp[(1) - (1)]);
+		  }
+		}
+    break;
+
+  case 69:
+
+    { (yyval) = (yyvsp[(4) - (4)]); }
+    break;
+
+  case 70:
+
+    { (yyval) = (yyvsp[(4) - (4)]); }
+    break;
+
+  case 71:
+
+    { (yyval) = (yyvsp[(2) - (2)]); }
+    break;
+
+  case 72:
+
+    { (yyval) = (yyvsp[(3) - (3)]); }
+    break;
+
+  case 73:
+
+    { (yyval) = (yyvsp[(3) - (3)]); }
+    break;
+
+  case 74:
+
+    { (yyval) = (yyvsp[(2) - (2)]); }
+    break;
+
+  case 78:
+
+    { (yyval) = (yyvsp[(4) - (4)]); }
+    break;
+
+  case 79:
+
+    { (yyval) = (yyvsp[(4) - (4)]); }
+    break;
+
+  case 80:
+
+    { (yyval) = (yyvsp[(2) - (2)]); }
+    break;
+
+  case 81:
+
+    { (yyval) = (yyvsp[(3) - (3)]); }
+    break;
+
+  case 82:
+
+    { (yyval) = (yyvsp[(3) - (3)]); }
+    break;
+
+  case 83:
+
+    { (yyval) = (yyvsp[(2) - (2)]); }
+    break;
+
+  case 85:
+
+    { (yyval) = (yyvsp[(3) - (3)]); }
+    break;
+
+  case 86:
+
+    { (yyval) = NULL; }
+    break;
+
+  case 89:
+
+    { (yyval) = (yyvsp[(3) - (3)]); }
+    break;
+
+  case 90:
+
+    { (yyval) = (yyvsp[(2) - (2)]) ? (yyvsp[(2) - (2)]) : (yyvsp[(1) - (2)]); }
+    break;
+
+  case 91:
+
+    { (yyval) = (yyvsp[(2) - (2)]) ? (yyvsp[(2) - (2)]) : (yyvsp[(1) - (2)]); }
+    break;
+
+  case 93:
+
+    { (yyval) = NULL; }
+    break;
+
+  case 94:
+
+    { /* For version 2 checksums, we don't want to remember
+		     private parameter names.  */
+		  remove_node((yyvsp[(1) - (1)]));
+		  (yyval) = (yyvsp[(1) - (1)]);
+		}
+    break;
+
+  case 95:
+
+    { remove_node((yyvsp[(1) - (1)]));
+		  (yyval) = (yyvsp[(1) - (1)]);
+		}
+    break;
+
+  case 96:
+
+    { (yyval) = (yyvsp[(4) - (4)]); }
+    break;
+
+  case 97:
+
+    { (yyval) = (yyvsp[(4) - (4)]); }
+    break;
+
+  case 98:
+
+    { (yyval) = (yyvsp[(2) - (2)]); }
+    break;
+
+  case 99:
+
+    { (yyval) = (yyvsp[(3) - (3)]); }
+    break;
+
+  case 100:
+
+    { (yyval) = (yyvsp[(3) - (3)]); }
+    break;
+
+  case 101:
+
+    { struct string_list *decl = *(yyvsp[(2) - (3)]);
+		  *(yyvsp[(2) - (3)]) = NULL;
+		  add_symbol(current_name, SYM_NORMAL, decl, is_extern);
+		  (yyval) = (yyvsp[(3) - (3)]);
+		}
+    break;
+
+  case 102:
+
+    { (yyval) = NULL; }
+    break;
+
+  case 104:
+
+    { remove_list((yyvsp[(2) - (2)]), &(*(yyvsp[(1) - (2)]))->next); (yyval) = (yyvsp[(2) - (2)]); }
+    break;
+
+  case 105:
+
+    { (yyval) = (yyvsp[(3) - (3)]); }
+    break;
+
+  case 106:
+
+    { (yyval) = (yyvsp[(3) - (3)]); }
+    break;
+
+  case 107:
+
+    { (yyval) = NULL; }
+    break;
+
+  case 110:
+
+    { (yyval) = (yyvsp[(2) - (2)]); }
+    break;
+
+  case 111:
+
+    { (yyval) = (yyvsp[(3) - (3)]); }
+    break;
+
+  case 112:
+
+    { (yyval) = (yyvsp[(2) - (2)]); }
+    break;
+
+  case 113:
+
+    { (yyval) = NULL; }
+    break;
+
+  case 116:
+
+    { (yyval) = (yyvsp[(3) - (3)]); }
+    break;
+
+  case 117:
+
+    { (yyval) = (yyvsp[(2) - (2)]) ? (yyvsp[(2) - (2)]) : (yyvsp[(1) - (2)]); }
+    break;
+
+  case 118:
+
+    { (yyval) = (yyvsp[(2) - (2)]); }
+    break;
+
+  case 120:
+
+    { (yyval) = (yyvsp[(2) - (2)]); }
+    break;
+
+  case 121:
+
+    { (yyval) = NULL; }
+    break;
+
+  case 123:
+
+    { (yyval) = (yyvsp[(3) - (3)]); }
+    break;
+
+  case 124:
+
+    { (yyval) = (yyvsp[(4) - (4)]); }
+    break;
+
+  case 127:
+
+    {
+			const char *name = strdup((*(yyvsp[(1) - (1)]))->string);
+			add_symbol(name, SYM_ENUM_CONST, NULL, 0);
+		}
+    break;
+
+  case 128:
+
+    {
+			const char *name = strdup((*(yyvsp[(1) - (3)]))->string);
+			struct string_list *expr = copy_list_range(*(yyvsp[(3) - (3)]), *(yyvsp[(2) - (3)]));
+			add_symbol(name, SYM_ENUM_CONST, expr, 0);
+		}
+    break;
+
+  case 129:
+
+    { (yyval) = (yyvsp[(2) - (2)]); }
+    break;
+
+  case 130:
+
+    { (yyval) = NULL; }
+    break;
+
+  case 132:
+
+    { export_symbol((*(yyvsp[(3) - (5)]))->string); (yyval) = (yyvsp[(5) - (5)]); }
+    break;
+
+
+
+      default: break;
+    }
+  /* User semantic actions sometimes alter yychar, and that requires
+     that yytoken be updated with the new translation.  We take the
+     approach of translating immediately before every use of yytoken.
+     One alternative is translating here after every semantic action,
+     but that translation would be missed if the semantic action invokes
+     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
+     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
+     incorrect destructor might then be invoked immediately.  In the
+     case of YYERROR or YYBACKUP, subsequent parser actions might lead
+     to an incorrect destructor call or verbose syntax error message
+     before the lookahead is translated.  */
+  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
+
+  YYPOPSTACK (yylen);
+  yylen = 0;
+  YY_STACK_PRINT (yyss, yyssp);
+
+  *++yyvsp = yyval;
+
+  /* Now `shift' the result of the reduction.  Determine what state
+     that goes to, based on the state we popped back to and the rule
+     number reduced by.  */
+
+  yyn = yyr1[yyn];
+
+  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
+  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
+    yystate = yytable[yystate];
+  else
+    yystate = yydefgoto[yyn - YYNTOKENS];
+
+  goto yynewstate;
+
+
+/*------------------------------------.
+| yyerrlab -- here on detecting error |
+`------------------------------------*/
+yyerrlab:
+  /* Make sure we have latest lookahead translation.  See comments at
+     user semantic actions for why this is necessary.  */
+  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);
+
+  /* If not already recovering from an error, report this error.  */
+  if (!yyerrstatus)
+    {
+      ++yynerrs;
+#if ! YYERROR_VERBOSE
+      yyerror (YY_("syntax error"));
+#else
+# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
+                                        yyssp, yytoken)
+      {
+        char const *yymsgp = YY_("syntax error");
+        int yysyntax_error_status;
+        yysyntax_error_status = YYSYNTAX_ERROR;
+        if (yysyntax_error_status == 0)
+          yymsgp = yymsg;
+        else if (yysyntax_error_status == 1)
+          {
+            if (yymsg != yymsgbuf)
+              YYSTACK_FREE (yymsg);
+            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
+            if (!yymsg)
+              {
+                yymsg = yymsgbuf;
+                yymsg_alloc = sizeof yymsgbuf;
+                yysyntax_error_status = 2;
+              }
+            else
+              {
+                yysyntax_error_status = YYSYNTAX_ERROR;
+                yymsgp = yymsg;
+              }
+          }
+        yyerror (yymsgp);
+        if (yysyntax_error_status == 2)
+          goto yyexhaustedlab;
+      }
+# undef YYSYNTAX_ERROR
+#endif
+    }
+
+
+
+  if (yyerrstatus == 3)
+    {
+      /* If just tried and failed to reuse lookahead token after an
+	 error, discard it.  */
+
+      if (yychar <= YYEOF)
+	{
+	  /* Return failure if at end of input.  */
+	  if (yychar == YYEOF)
+	    YYABORT;
+	}
+      else
+	{
+	  yydestruct ("Error: discarding",
+		      yytoken, &yylval);
+	  yychar = YYEMPTY;
+	}
+    }
+
+  /* Else will try to reuse lookahead token after shifting the error
+     token.  */
+  goto yyerrlab1;
+
+
+/*---------------------------------------------------.
+| yyerrorlab -- error raised explicitly by YYERROR.  |
+`---------------------------------------------------*/
+yyerrorlab:
+
+  /* Pacify compilers like GCC when the user code never invokes
+     YYERROR and the label yyerrorlab therefore never appears in user
+     code.  */
+  if (/*CONSTCOND*/ 0)
+     goto yyerrorlab;
+
+  /* Do not reclaim the symbols of the rule which action triggered
+     this YYERROR.  */
+  YYPOPSTACK (yylen);
+  yylen = 0;
+  YY_STACK_PRINT (yyss, yyssp);
+  yystate = *yyssp;
+  goto yyerrlab1;
+
+
+/*-------------------------------------------------------------.
+| yyerrlab1 -- common code for both syntax error and YYERROR.  |
+`-------------------------------------------------------------*/
+yyerrlab1:
+  yyerrstatus = 3;	/* Each real token shifted decrements this.  */
+
+  for (;;)
+    {
+      yyn = yypact[yystate];
+      if (!yypact_value_is_default (yyn))
+	{
+	  yyn += YYTERROR;
+	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
+	    {
+	      yyn = yytable[yyn];
+	      if (0 < yyn)
+		break;
+	    }
+	}
+
+      /* Pop the current state because it cannot handle the error token.  */
+      if (yyssp == yyss)
+	YYABORT;
+
+
+      yydestruct ("Error: popping",
+		  yystos[yystate], yyvsp);
+      YYPOPSTACK (1);
+      yystate = *yyssp;
+      YY_STACK_PRINT (yyss, yyssp);
+    }
+
+  *++yyvsp = yylval;
+
+
+  /* Shift the error token.  */
+  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);
+
+  yystate = yyn;
+  goto yynewstate;
+
+
+/*-------------------------------------.
+| yyacceptlab -- YYACCEPT comes here.  |
+`-------------------------------------*/
+yyacceptlab:
+  yyresult = 0;
+  goto yyreturn;
+
+/*-----------------------------------.
+| yyabortlab -- YYABORT comes here.  |
+`-----------------------------------*/
+yyabortlab:
+  yyresult = 1;
+  goto yyreturn;
+
+#if !defined(yyoverflow) || YYERROR_VERBOSE
+/*-------------------------------------------------.
+| yyexhaustedlab -- memory exhaustion comes here.  |
+`-------------------------------------------------*/
+yyexhaustedlab:
+  yyerror (YY_("memory exhausted"));
+  yyresult = 2;
+  /* Fall through.  */
+#endif
+
+yyreturn:
+  if (yychar != YYEMPTY)
+    {
+      /* Make sure we have latest lookahead translation.  See comments at
+         user semantic actions for why this is necessary.  */
+      yytoken = YYTRANSLATE (yychar);
+      yydestruct ("Cleanup: discarding lookahead",
+                  yytoken, &yylval);
+    }
+  /* Do not reclaim the symbols of the rule which action triggered
+     this YYABORT or YYACCEPT.  */
+  YYPOPSTACK (yylen);
+  YY_STACK_PRINT (yyss, yyssp);
+  while (yyssp != yyss)
+    {
+      yydestruct ("Cleanup: popping",
+		  yystos[*yyssp], yyvsp);
+      YYPOPSTACK (1);
+    }
+#ifndef yyoverflow
+  if (yyss != yyssa)
+    YYSTACK_FREE (yyss);
+#endif
+#if YYERROR_VERBOSE
+  if (yymsg != yymsgbuf)
+    YYSTACK_FREE (yymsg);
+#endif
+  /* Make sure YYID is used.  */
+  return YYID (yyresult);
+}
+
+
+
+
+
+static void
+yyerror(const char *e)
+{
+  error_with_pos("%s", e);
+}
+
diff -uprN ../linux-3.4.104-vanilla/scripts/genksyms/parse.tab.h linux-3.4.104-syssec_hw2_app2/scripts/genksyms/parse.tab.h
--- ../linux-3.4.104-vanilla/scripts/genksyms/parse.tab.h	1969-12-31 19:00:00.000000000 -0500
+++ linux-3.4.104-syssec_hw2_app2/scripts/genksyms/parse.tab.h	2014-11-05 20:53:31.000000000 -0500
@@ -0,0 +1,95 @@
+/* A Bison parser, made by GNU Bison 2.5.  */
+
+/* Bison interface for Yacc-like parsers in C
+   
+      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
+   
+   This program is free software: you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation, either version 3 of the License, or
+   (at your option) any later version.
+   
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+   
+   You should have received a copy of the GNU General Public License
+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+
+/* As a special exception, you may create a larger work that contains
+   part or all of the Bison parser skeleton and distribute that work
+   under terms of your choice, so long as that work isn't itself a
+   parser generator using the skeleton or a modified version thereof
+   as a parser skeleton.  Alternatively, if you modify or redistribute
+   the parser skeleton itself, you may (at your option) remove this
+   special exception, which will cause the skeleton and the resulting
+   Bison output files to be licensed under the GNU General Public
+   License without this special exception.
+   
+   This special exception was added by the Free Software Foundation in
+   version 2.2 of Bison.  */
+
+
+/* Tokens.  */
+#ifndef YYTOKENTYPE
+# define YYTOKENTYPE
+   /* Put the tokens into the symbol table, so that GDB and other debuggers
+      know about them.  */
+   enum yytokentype {
+     ASM_KEYW = 258,
+     ATTRIBUTE_KEYW = 259,
+     AUTO_KEYW = 260,
+     BOOL_KEYW = 261,
+     CHAR_KEYW = 262,
+     CONST_KEYW = 263,
+     DOUBLE_KEYW = 264,
+     ENUM_KEYW = 265,
+     EXTERN_KEYW = 266,
+     EXTENSION_KEYW = 267,
+     FLOAT_KEYW = 268,
+     INLINE_KEYW = 269,
+     INT_KEYW = 270,
+     LONG_KEYW = 271,
+     REGISTER_KEYW = 272,
+     RESTRICT_KEYW = 273,
+     SHORT_KEYW = 274,
+     SIGNED_KEYW = 275,
+     STATIC_KEYW = 276,
+     STRUCT_KEYW = 277,
+     TYPEDEF_KEYW = 278,
+     UNION_KEYW = 279,
+     UNSIGNED_KEYW = 280,
+     VOID_KEYW = 281,
+     VOLATILE_KEYW = 282,
+     TYPEOF_KEYW = 283,
+     EXPORT_SYMBOL_KEYW = 284,
+     ASM_PHRASE = 285,
+     ATTRIBUTE_PHRASE = 286,
+     BRACE_PHRASE = 287,
+     BRACKET_PHRASE = 288,
+     EXPRESSION_PHRASE = 289,
+     CHAR = 290,
+     DOTS = 291,
+     IDENT = 292,
+     INT = 293,
+     REAL = 294,
+     STRING = 295,
+     TYPE = 296,
+     OTHER = 297,
+     FILENAME = 298
+   };
+#endif
+
+
+
+#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
+typedef int YYSTYPE;
+# define YYSTYPE_IS_TRIVIAL 1
+# define yystype YYSTYPE /* obsolescent; will be withdrawn */
+# define YYSTYPE_IS_DECLARED 1
+#endif
+
+extern YYSTYPE yylval;
+
+
Binary files ../linux-3.4.104-vanilla/scripts/kallsyms and linux-3.4.104-syssec_hw2_app2/scripts/kallsyms differ
Binary files ../linux-3.4.104-vanilla/scripts/kconfig/conf and linux-3.4.104-syssec_hw2_app2/scripts/kconfig/conf differ
Binary files ../linux-3.4.104-vanilla/scripts/kconfig/mconf and linux-3.4.104-syssec_hw2_app2/scripts/kconfig/mconf differ
diff -uprN ../linux-3.4.104-vanilla/scripts/kconfig/zconf.hash.c linux-3.4.104-syssec_hw2_app2/scripts/kconfig/zconf.hash.c
--- ../linux-3.4.104-vanilla/scripts/kconfig/zconf.hash.c	1969-12-31 19:00:00.000000000 -0500
+++ linux-3.4.104-syssec_hw2_app2/scripts/kconfig/zconf.hash.c	2014-11-05 20:53:05.000000000 -0500
@@ -0,0 +1,286 @@
+/* ANSI-C code produced by gperf version 3.0.4 */
+/* Command-line: gperf -t --output-file scripts/kconfig/zconf.hash.c_shipped -a -C -E -g -k '1,3,$' -p -t scripts/kconfig/zconf.gperf  */
+
+#if !((' ' == 32) && ('!' == 33) && ('"' == 34) && ('#' == 35) \
+      && ('%' == 37) && ('&' == 38) && ('\'' == 39) && ('(' == 40) \
+      && (')' == 41) && ('*' == 42) && ('+' == 43) && (',' == 44) \
+      && ('-' == 45) && ('.' == 46) && ('/' == 47) && ('0' == 48) \
+      && ('1' == 49) && ('2' == 50) && ('3' == 51) && ('4' == 52) \
+      && ('5' == 53) && ('6' == 54) && ('7' == 55) && ('8' == 56) \
+      && ('9' == 57) && (':' == 58) && (';' == 59) && ('<' == 60) \
+      && ('=' == 61) && ('>' == 62) && ('?' == 63) && ('A' == 65) \
+      && ('B' == 66) && ('C' == 67) && ('D' == 68) && ('E' == 69) \
+      && ('F' == 70) && ('G' == 71) && ('H' == 72) && ('I' == 73) \
+      && ('J' == 74) && ('K' == 75) && ('L' == 76) && ('M' == 77) \
+      && ('N' == 78) && ('O' == 79) && ('P' == 80) && ('Q' == 81) \
+      && ('R' == 82) && ('S' == 83) && ('T' == 84) && ('U' == 85) \
+      && ('V' == 86) && ('W' == 87) && ('X' == 88) && ('Y' == 89) \
+      && ('Z' == 90) && ('[' == 91) && ('\\' == 92) && (']' == 93) \
+      && ('^' == 94) && ('_' == 95) && ('a' == 97) && ('b' == 98) \
+      && ('c' == 99) && ('d' == 100) && ('e' == 101) && ('f' == 102) \
+      && ('g' == 103) && ('h' == 104) && ('i' == 105) && ('j' == 106) \
+      && ('k' == 107) && ('l' == 108) && ('m' == 109) && ('n' == 110) \
+      && ('o' == 111) && ('p' == 112) && ('q' == 113) && ('r' == 114) \
+      && ('s' == 115) && ('t' == 116) && ('u' == 117) && ('v' == 118) \
+      && ('w' == 119) && ('x' == 120) && ('y' == 121) && ('z' == 122) \
+      && ('{' == 123) && ('|' == 124) && ('}' == 125) && ('~' == 126))
+/* The character set is not based on ISO-646.  */
+#error "gperf generated tables don't work with this execution character set. Please report a bug to <bug-gnu-gperf@gnu.org>."
+#endif
+
+#line 10 "scripts/kconfig/zconf.gperf"
+struct kconf_id;
+
+static const struct kconf_id *kconf_id_lookup(register const char *str, register unsigned int len);
+/* maximum key range = 71, duplicates = 0 */
+
+#ifdef __GNUC__
+__inline
+#else
+#ifdef __cplusplus
+inline
+#endif
+#endif
+static unsigned int
+kconf_id_hash (register const char *str, register unsigned int len)
+{
+  static const unsigned char asso_values[] =
+    {
+      73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
+      73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
+      73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
+      73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
+      73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
+      73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
+      73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
+      73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
+      73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
+      73, 73, 73, 73, 73, 73, 73, 73, 25, 25,
+       0,  0,  0,  5,  0,  0, 73, 73,  5,  0,
+      10,  5, 45, 73, 20, 20,  0, 15, 15, 73,
+      20, 73, 73, 73, 73, 73, 73, 73, 73, 73,
+      73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
+      73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
+      73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
+      73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
+      73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
+      73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
+      73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
+      73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
+      73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
+      73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
+      73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
+      73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
+      73, 73, 73, 73, 73, 73
+    };
+  register int hval = len;
+
+  switch (hval)
+    {
+      default:
+        hval += asso_values[(unsigned char)str[2]];
+      /*FALLTHROUGH*/
+      case 2:
+      case 1:
+        hval += asso_values[(unsigned char)str[0]];
+        break;
+    }
+  return hval + asso_values[(unsigned char)str[len - 1]];
+}
+
+struct kconf_id_strings_t
+  {
+    char kconf_id_strings_str2[sizeof("if")];
+    char kconf_id_strings_str3[sizeof("int")];
+    char kconf_id_strings_str5[sizeof("endif")];
+    char kconf_id_strings_str7[sizeof("default")];
+    char kconf_id_strings_str8[sizeof("tristate")];
+    char kconf_id_strings_str9[sizeof("endchoice")];
+    char kconf_id_strings_str12[sizeof("def_tristate")];
+    char kconf_id_strings_str13[sizeof("def_bool")];
+    char kconf_id_strings_str14[sizeof("defconfig_list")];
+    char kconf_id_strings_str17[sizeof("on")];
+    char kconf_id_strings_str18[sizeof("optional")];
+    char kconf_id_strings_str21[sizeof("option")];
+    char kconf_id_strings_str22[sizeof("endmenu")];
+    char kconf_id_strings_str23[sizeof("mainmenu")];
+    char kconf_id_strings_str25[sizeof("menuconfig")];
+    char kconf_id_strings_str27[sizeof("modules")];
+    char kconf_id_strings_str29[sizeof("menu")];
+    char kconf_id_strings_str31[sizeof("select")];
+    char kconf_id_strings_str32[sizeof("comment")];
+    char kconf_id_strings_str33[sizeof("env")];
+    char kconf_id_strings_str35[sizeof("range")];
+    char kconf_id_strings_str36[sizeof("choice")];
+    char kconf_id_strings_str39[sizeof("bool")];
+    char kconf_id_strings_str41[sizeof("source")];
+    char kconf_id_strings_str42[sizeof("visible")];
+    char kconf_id_strings_str43[sizeof("hex")];
+    char kconf_id_strings_str46[sizeof("config")];
+    char kconf_id_strings_str47[sizeof("boolean")];
+    char kconf_id_strings_str51[sizeof("string")];
+    char kconf_id_strings_str54[sizeof("help")];
+    char kconf_id_strings_str56[sizeof("prompt")];
+    char kconf_id_strings_str72[sizeof("depends")];
+  };
+static const struct kconf_id_strings_t kconf_id_strings_contents =
+  {
+    "if",
+    "int",
+    "endif",
+    "default",
+    "tristate",
+    "endchoice",
+    "def_tristate",
+    "def_bool",
+    "defconfig_list",
+    "on",
+    "optional",
+    "option",
+    "endmenu",
+    "mainmenu",
+    "menuconfig",
+    "modules",
+    "menu",
+    "select",
+    "comment",
+    "env",
+    "range",
+    "choice",
+    "bool",
+    "source",
+    "visible",
+    "hex",
+    "config",
+    "boolean",
+    "string",
+    "help",
+    "prompt",
+    "depends"
+  };
+#define kconf_id_strings ((const char *) &kconf_id_strings_contents)
+#ifdef __GNUC__
+__inline
+#if defined __GNUC_STDC_INLINE__ || defined __GNUC_GNU_INLINE__
+__attribute__ ((__gnu_inline__))
+#endif
+#endif
+const struct kconf_id *
+kconf_id_lookup (register const char *str, register unsigned int len)
+{
+  enum
+    {
+      TOTAL_KEYWORDS = 32,
+      MIN_WORD_LENGTH = 2,
+      MAX_WORD_LENGTH = 14,
+      MIN_HASH_VALUE = 2,
+      MAX_HASH_VALUE = 72
+    };
+
+  static const struct kconf_id wordlist[] =
+    {
+      {-1}, {-1},
+#line 25 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str2,		T_IF,		TF_COMMAND|TF_PARAM},
+#line 36 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str3,		T_TYPE,		TF_COMMAND, S_INT},
+      {-1},
+#line 26 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str5,		T_ENDIF,	TF_COMMAND},
+      {-1},
+#line 29 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str7,	T_DEFAULT,	TF_COMMAND, S_UNKNOWN},
+#line 31 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str8,	T_TYPE,		TF_COMMAND, S_TRISTATE},
+#line 20 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str9,	T_ENDCHOICE,	TF_COMMAND},
+      {-1}, {-1},
+#line 32 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str12,	T_DEFAULT,	TF_COMMAND, S_TRISTATE},
+#line 35 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str13,	T_DEFAULT,	TF_COMMAND, S_BOOLEAN},
+#line 45 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str14,	T_OPT_DEFCONFIG_LIST,TF_OPTION},
+      {-1}, {-1},
+#line 43 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str17,		T_ON,		TF_PARAM},
+#line 28 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str18,	T_OPTIONAL,	TF_COMMAND},
+      {-1}, {-1},
+#line 42 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str21,		T_OPTION,	TF_COMMAND},
+#line 17 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str22,	T_ENDMENU,	TF_COMMAND},
+#line 15 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str23,	T_MAINMENU,	TF_COMMAND},
+      {-1},
+#line 23 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str25,	T_MENUCONFIG,	TF_COMMAND},
+      {-1},
+#line 44 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str27,	T_OPT_MODULES,	TF_OPTION},
+      {-1},
+#line 16 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str29,		T_MENU,		TF_COMMAND},
+      {-1},
+#line 39 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str31,		T_SELECT,	TF_COMMAND},
+#line 21 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str32,	T_COMMENT,	TF_COMMAND},
+#line 46 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str33,		T_OPT_ENV,	TF_OPTION},
+      {-1},
+#line 40 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str35,		T_RANGE,	TF_COMMAND},
+#line 19 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str36,		T_CHOICE,	TF_COMMAND},
+      {-1}, {-1},
+#line 33 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str39,		T_TYPE,		TF_COMMAND, S_BOOLEAN},
+      {-1},
+#line 18 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str41,		T_SOURCE,	TF_COMMAND},
+#line 41 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str42,	T_VISIBLE,	TF_COMMAND},
+#line 37 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str43,		T_TYPE,		TF_COMMAND, S_HEX},
+      {-1}, {-1},
+#line 22 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str46,		T_CONFIG,	TF_COMMAND},
+#line 34 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str47,	T_TYPE,		TF_COMMAND, S_BOOLEAN},
+      {-1}, {-1}, {-1},
+#line 38 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str51,		T_TYPE,		TF_COMMAND, S_STRING},
+      {-1}, {-1},
+#line 24 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str54,		T_HELP,		TF_COMMAND},
+      {-1},
+#line 30 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str56,		T_PROMPT,	TF_COMMAND},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
+#line 27 "scripts/kconfig/zconf.gperf"
+      {(int)(long)&((struct kconf_id_strings_t *)0)->kconf_id_strings_str72,	T_DEPENDS,	TF_COMMAND}
+    };
+
+  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
+    {
+      register int key = kconf_id_hash (str, len);
+
+      if (key <= MAX_HASH_VALUE && key >= 0)
+        {
+          register int o = wordlist[key].name;
+          if (o >= 0)
+            {
+              register const char *s = o + kconf_id_strings;
+
+              if (*str == *s && !strncmp (str + 1, s + 1, len - 1) && s[len] == '\0')
+                return &wordlist[key];
+            }
+        }
+    }
+  return 0;
+}
+#line 47 "scripts/kconfig/zconf.gperf"
+
diff -uprN ../linux-3.4.104-vanilla/scripts/kconfig/zconf.lex.c linux-3.4.104-syssec_hw2_app2/scripts/kconfig/zconf.lex.c
--- ../linux-3.4.104-vanilla/scripts/kconfig/zconf.lex.c	1969-12-31 19:00:00.000000000 -0500
+++ linux-3.4.104-syssec_hw2_app2/scripts/kconfig/zconf.lex.c	2014-11-05 20:53:05.000000000 -0500
@@ -0,0 +1,2420 @@
+
+#line 3 "scripts/kconfig/zconf.lex.c_shipped"
+
+#define  YY_INT_ALIGNED short int
+
+/* A lexical scanner generated by flex */
+
+#define yy_create_buffer zconf_create_buffer
+#define yy_delete_buffer zconf_delete_buffer
+#define yy_flex_debug zconf_flex_debug
+#define yy_init_buffer zconf_init_buffer
+#define yy_flush_buffer zconf_flush_buffer
+#define yy_load_buffer_state zconf_load_buffer_state
+#define yy_switch_to_buffer zconf_switch_to_buffer
+#define yyin zconfin
+#define yyleng zconfleng
+#define yylex zconflex
+#define yylineno zconflineno
+#define yyout zconfout
+#define yyrestart zconfrestart
+#define yytext zconftext
+#define yywrap zconfwrap
+#define yyalloc zconfalloc
+#define yyrealloc zconfrealloc
+#define yyfree zconffree
+
+#define FLEX_SCANNER
+#define YY_FLEX_MAJOR_VERSION 2
+#define YY_FLEX_MINOR_VERSION 5
+#define YY_FLEX_SUBMINOR_VERSION 35
+#if YY_FLEX_SUBMINOR_VERSION > 0
+#define FLEX_BETA
+#endif
+
+/* First, we deal with  platform-specific or compiler-specific issues. */
+
+/* begin standard C headers. */
+#include <stdio.h>
+#include <string.h>
+#include <errno.h>
+#include <stdlib.h>
+
+/* end standard C headers. */
+
+/* flex integer type definitions */
+
+#ifndef FLEXINT_H
+#define FLEXINT_H
+
+/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */
+
+#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
+
+/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
+ * if you want the limit (max/min) macros for int types. 
+ */
+#ifndef __STDC_LIMIT_MACROS
+#define __STDC_LIMIT_MACROS 1
+#endif
+
+#include <inttypes.h>
+typedef int8_t flex_int8_t;
+typedef uint8_t flex_uint8_t;
+typedef int16_t flex_int16_t;
+typedef uint16_t flex_uint16_t;
+typedef int32_t flex_int32_t;
+typedef uint32_t flex_uint32_t;
+#else
+typedef signed char flex_int8_t;
+typedef short int flex_int16_t;
+typedef int flex_int32_t;
+typedef unsigned char flex_uint8_t; 
+typedef unsigned short int flex_uint16_t;
+typedef unsigned int flex_uint32_t;
+#endif /* ! C99 */
+
+/* Limits of integral types. */
+#ifndef INT8_MIN
+#define INT8_MIN               (-128)
+#endif
+#ifndef INT16_MIN
+#define INT16_MIN              (-32767-1)
+#endif
+#ifndef INT32_MIN
+#define INT32_MIN              (-2147483647-1)
+#endif
+#ifndef INT8_MAX
+#define INT8_MAX               (127)
+#endif
+#ifndef INT16_MAX
+#define INT16_MAX              (32767)
+#endif
+#ifndef INT32_MAX
+#define INT32_MAX              (2147483647)
+#endif
+#ifndef UINT8_MAX
+#define UINT8_MAX              (255U)
+#endif
+#ifndef UINT16_MAX
+#define UINT16_MAX             (65535U)
+#endif
+#ifndef UINT32_MAX
+#define UINT32_MAX             (4294967295U)
+#endif
+
+#endif /* ! FLEXINT_H */
+
+#ifdef __cplusplus
+
+/* The "const" storage-class-modifier is valid. */
+#define YY_USE_CONST
+
+#else	/* ! __cplusplus */
+
+/* C99 requires __STDC__ to be defined as 1. */
+#if defined (__STDC__)
+
+#define YY_USE_CONST
+
+#endif	/* defined (__STDC__) */
+#endif	/* ! __cplusplus */
+
+#ifdef YY_USE_CONST
+#define yyconst const
+#else
+#define yyconst
+#endif
+
+/* Returned upon end-of-file. */
+#define YY_NULL 0
+
+/* Promotes a possibly negative, possibly signed char to an unsigned
+ * integer for use as an array index.  If the signed char is negative,
+ * we want to instead treat it as an 8-bit unsigned char, hence the
+ * double cast.
+ */
+#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)
+
+/* Enter a start condition.  This macro really ought to take a parameter,
+ * but we do it the disgusting crufty way forced on us by the ()-less
+ * definition of BEGIN.
+ */
+#define BEGIN (yy_start) = 1 + 2 *
+
+/* Translate the current start state into a value that can be later handed
+ * to BEGIN to return to the state.  The YYSTATE alias is for lex
+ * compatibility.
+ */
+#define YY_START (((yy_start) - 1) / 2)
+#define YYSTATE YY_START
+
+/* Action number for EOF rule of a given start state. */
+#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
+
+/* Special action meaning "start processing a new file". */
+#define YY_NEW_FILE zconfrestart(zconfin  )
+
+#define YY_END_OF_BUFFER_CHAR 0
+
+/* Size of default input buffer. */
+#ifndef YY_BUF_SIZE
+#define YY_BUF_SIZE 16384
+#endif
+
+/* The state buf must be large enough to hold one state per character in the main buffer.
+ */
+#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))
+
+#ifndef YY_TYPEDEF_YY_BUFFER_STATE
+#define YY_TYPEDEF_YY_BUFFER_STATE
+typedef struct yy_buffer_state *YY_BUFFER_STATE;
+#endif
+
+extern int zconfleng;
+
+extern FILE *zconfin, *zconfout;
+
+#define EOB_ACT_CONTINUE_SCAN 0
+#define EOB_ACT_END_OF_FILE 1
+#define EOB_ACT_LAST_MATCH 2
+
+    #define YY_LESS_LINENO(n)
+    
+/* Return all but the first "n" matched characters back to the input stream. */
+#define yyless(n) \
+	do \
+		{ \
+		/* Undo effects of setting up zconftext. */ \
+        int yyless_macro_arg = (n); \
+        YY_LESS_LINENO(yyless_macro_arg);\
+		*yy_cp = (yy_hold_char); \
+		YY_RESTORE_YY_MORE_OFFSET \
+		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
+		YY_DO_BEFORE_ACTION; /* set up zconftext again */ \
+		} \
+	while ( 0 )
+
+#define unput(c) yyunput( c, (yytext_ptr)  )
+
+#ifndef YY_TYPEDEF_YY_SIZE_T
+#define YY_TYPEDEF_YY_SIZE_T
+typedef size_t yy_size_t;
+#endif
+
+#ifndef YY_STRUCT_YY_BUFFER_STATE
+#define YY_STRUCT_YY_BUFFER_STATE
+struct yy_buffer_state
+	{
+	FILE *yy_input_file;
+
+	char *yy_ch_buf;		/* input buffer */
+	char *yy_buf_pos;		/* current position in input buffer */
+
+	/* Size of input buffer in bytes, not including room for EOB
+	 * characters.
+	 */
+	yy_size_t yy_buf_size;
+
+	/* Number of characters read into yy_ch_buf, not including EOB
+	 * characters.
+	 */
+	int yy_n_chars;
+
+	/* Whether we "own" the buffer - i.e., we know we created it,
+	 * and can realloc() it to grow it, and should free() it to
+	 * delete it.
+	 */
+	int yy_is_our_buffer;
+
+	/* Whether this is an "interactive" input source; if so, and
+	 * if we're using stdio for input, then we want to use getc()
+	 * instead of fread(), to make sure we stop fetching input after
+	 * each newline.
+	 */
+	int yy_is_interactive;
+
+	/* Whether we're considered to be at the beginning of a line.
+	 * If so, '^' rules will be active on the next match, otherwise
+	 * not.
+	 */
+	int yy_at_bol;
+
+    int yy_bs_lineno; /**< The line count. */
+    int yy_bs_column; /**< The column count. */
+    
+	/* Whether to try to fill the input buffer when we reach the
+	 * end of it.
+	 */
+	int yy_fill_buffer;
+
+	int yy_buffer_status;
+
+#define YY_BUFFER_NEW 0
+#define YY_BUFFER_NORMAL 1
+	/* When an EOF's been seen but there's still some text to process
+	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
+	 * shouldn't try reading from the input source any more.  We might
+	 * still have a bunch of tokens to match, though, because of
+	 * possible backing-up.
+	 *
+	 * When we actually see the EOF, we change the status to "new"
+	 * (via zconfrestart()), so that the user can continue scanning by
+	 * just pointing zconfin at a new input file.
+	 */
+#define YY_BUFFER_EOF_PENDING 2
+
+	};
+#endif /* !YY_STRUCT_YY_BUFFER_STATE */
+
+/* Stack of input buffers. */
+static size_t yy_buffer_stack_top = 0; /**< index of top of stack. */
+static size_t yy_buffer_stack_max = 0; /**< capacity of stack. */
+static YY_BUFFER_STATE * yy_buffer_stack = 0; /**< Stack as an array. */
+
+/* We provide macros for accessing buffer states in case in the
+ * future we want to put the buffer states in a more general
+ * "scanner state".
+ *
+ * Returns the top of the stack, or NULL.
+ */
+#define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
+                          ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
+                          : NULL)
+
+/* Same as previous macro, but useful when we know that the buffer stack is not
+ * NULL or when we need an lvalue. For internal use only.
+ */
+#define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]
+
+/* yy_hold_char holds the character lost when zconftext is formed. */
+static char yy_hold_char;
+static int yy_n_chars;		/* number of characters read into yy_ch_buf */
+int zconfleng;
+
+/* Points to current character in buffer. */
+static char *yy_c_buf_p = (char *) 0;
+static int yy_init = 0;		/* whether we need to initialize */
+static int yy_start = 0;	/* start state number */
+
+/* Flag which is used to allow zconfwrap()'s to do buffer switches
+ * instead of setting up a fresh zconfin.  A bit of a hack ...
+ */
+static int yy_did_buffer_switch_on_eof;
+
+void zconfrestart (FILE *input_file  );
+void zconf_switch_to_buffer (YY_BUFFER_STATE new_buffer  );
+YY_BUFFER_STATE zconf_create_buffer (FILE *file,int size  );
+void zconf_delete_buffer (YY_BUFFER_STATE b  );
+void zconf_flush_buffer (YY_BUFFER_STATE b  );
+void zconfpush_buffer_state (YY_BUFFER_STATE new_buffer  );
+void zconfpop_buffer_state (void );
+
+static void zconfensure_buffer_stack (void );
+static void zconf_load_buffer_state (void );
+static void zconf_init_buffer (YY_BUFFER_STATE b,FILE *file  );
+
+#define YY_FLUSH_BUFFER zconf_flush_buffer(YY_CURRENT_BUFFER )
+
+YY_BUFFER_STATE zconf_scan_buffer (char *base,yy_size_t size  );
+YY_BUFFER_STATE zconf_scan_string (yyconst char *yy_str  );
+YY_BUFFER_STATE zconf_scan_bytes (yyconst char *bytes,int len  );
+
+void *zconfalloc (yy_size_t  );
+void *zconfrealloc (void *,yy_size_t  );
+void zconffree (void *  );
+
+#define yy_new_buffer zconf_create_buffer
+
+#define yy_set_interactive(is_interactive) \
+	{ \
+	if ( ! YY_CURRENT_BUFFER ){ \
+        zconfensure_buffer_stack (); \
+		YY_CURRENT_BUFFER_LVALUE =    \
+            zconf_create_buffer(zconfin,YY_BUF_SIZE ); \
+	} \
+	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
+	}
+
+#define yy_set_bol(at_bol) \
+	{ \
+	if ( ! YY_CURRENT_BUFFER ){\
+        zconfensure_buffer_stack (); \
+		YY_CURRENT_BUFFER_LVALUE =    \
+            zconf_create_buffer(zconfin,YY_BUF_SIZE ); \
+	} \
+	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
+	}
+
+#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)
+
+/* Begin user sect3 */
+
+#define zconfwrap(n) 1
+#define YY_SKIP_YYWRAP
+
+typedef unsigned char YY_CHAR;
+
+FILE *zconfin = (FILE *) 0, *zconfout = (FILE *) 0;
+
+typedef int yy_state_type;
+
+extern int zconflineno;
+
+int zconflineno = 1;
+
+extern char *zconftext;
+#define yytext_ptr zconftext
+static yyconst flex_int16_t yy_nxt[][17] =
+    {
+    {
+        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
+        0,    0,    0,    0,    0,    0,    0
+    },
+
+    {
+       11,   12,   13,   14,   12,   12,   15,   12,   12,   12,
+       12,   12,   12,   12,   12,   12,   12
+    },
+
+    {
+       11,   12,   13,   14,   12,   12,   15,   12,   12,   12,
+       12,   12,   12,   12,   12,   12,   12
+    },
+
+    {
+       11,   16,   16,   17,   16,   16,   16,   16,   16,   16,
+       16,   16,   16,   18,   16,   16,   16
+    },
+
+    {
+       11,   16,   16,   17,   16,   16,   16,   16,   16,   16,
+       16,   16,   16,   18,   16,   16,   16
+
+    },
+
+    {
+       11,   19,   20,   21,   19,   19,   19,   19,   19,   19,
+       19,   19,   19,   19,   19,   19,   19
+    },
+
+    {
+       11,   19,   20,   21,   19,   19,   19,   19,   19,   19,
+       19,   19,   19,   19,   19,   19,   19
+    },
+
+    {
+       11,   22,   22,   23,   22,   24,   22,   22,   24,   22,
+       22,   22,   22,   22,   22,   25,   22
+    },
+
+    {
+       11,   22,   22,   23,   22,   24,   22,   22,   24,   22,
+       22,   22,   22,   22,   22,   25,   22
+    },
+
+    {
+       11,   26,   26,   27,   28,   29,   30,   31,   29,   32,
+       33,   34,   35,   35,   36,   37,   38
+
+    },
+
+    {
+       11,   26,   26,   27,   28,   29,   30,   31,   29,   32,
+       33,   34,   35,   35,   36,   37,   38
+    },
+
+    {
+      -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,  -11,
+      -11,  -11,  -11,  -11,  -11,  -11,  -11
+    },
+
+    {
+       11,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,  -12,
+      -12,  -12,  -12,  -12,  -12,  -12,  -12
+    },
+
+    {
+       11,  -13,   39,   40,  -13,  -13,   41,  -13,  -13,  -13,
+      -13,  -13,  -13,  -13,  -13,  -13,  -13
+    },
+
+    {
+       11,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,  -14,
+      -14,  -14,  -14,  -14,  -14,  -14,  -14
+
+    },
+
+    {
+       11,   42,   42,   43,   42,   42,   42,   42,   42,   42,
+       42,   42,   42,   42,   42,   42,   42
+    },
+
+    {
+       11,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,  -16,
+      -16,  -16,  -16,  -16,  -16,  -16,  -16
+    },
+
+    {
+       11,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
+      -17,  -17,  -17,  -17,  -17,  -17,  -17
+    },
+
+    {
+       11,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,  -18,
+      -18,  -18,  -18,   44,  -18,  -18,  -18
+    },
+
+    {
+       11,   45,   45,  -19,   45,   45,   45,   45,   45,   45,
+       45,   45,   45,   45,   45,   45,   45
+
+    },
+
+    {
+       11,  -20,   46,   47,  -20,  -20,  -20,  -20,  -20,  -20,
+      -20,  -20,  -20,  -20,  -20,  -20,  -20
+    },
+
+    {
+       11,   48,  -21,  -21,   48,   48,   48,   48,   48,   48,
+       48,   48,   48,   48,   48,   48,   48
+    },
+
+    {
+       11,   49,   49,   50,   49,  -22,   49,   49,  -22,   49,
+       49,   49,   49,   49,   49,  -22,   49
+    },
+
+    {
+       11,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,  -23,
+      -23,  -23,  -23,  -23,  -23,  -23,  -23
+    },
+
+    {
+       11,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,  -24,
+      -24,  -24,  -24,  -24,  -24,  -24,  -24
+
+    },
+
+    {
+       11,   51,   51,   52,   51,   51,   51,   51,   51,   51,
+       51,   51,   51,   51,   51,   51,   51
+    },
+
+    {
+       11,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,  -26,
+      -26,  -26,  -26,  -26,  -26,  -26,  -26
+    },
+
+    {
+       11,  -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,  -27,
+      -27,  -27,  -27,  -27,  -27,  -27,  -27
+    },
+
+    {
+       11,  -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,  -28,
+      -28,  -28,  -28,  -28,   53,  -28,  -28
+    },
+
+    {
+       11,  -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,  -29,
+      -29,  -29,  -29,  -29,  -29,  -29,  -29
+
+    },
+
+    {
+       11,   54,   54,  -30,   54,   54,   54,   54,   54,   54,
+       54,   54,   54,   54,   54,   54,   54
+    },
+
+    {
+       11,  -31,  -31,  -31,  -31,  -31,  -31,   55,  -31,  -31,
+      -31,  -31,  -31,  -31,  -31,  -31,  -31
+    },
+
+    {
+       11,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,  -32,
+      -32,  -32,  -32,  -32,  -32,  -32,  -32
+    },
+
+    {
+       11,  -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,  -33,
+      -33,  -33,  -33,  -33,  -33,  -33,  -33
+    },
+
+    {
+       11,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,  -34,
+      -34,   56,   57,   57,  -34,  -34,  -34
+
+    },
+
+    {
+       11,  -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,  -35,
+      -35,   57,   57,   57,  -35,  -35,  -35
+    },
+
+    {
+       11,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,  -36,
+      -36,  -36,  -36,  -36,  -36,  -36,  -36
+    },
+
+    {
+       11,  -37,  -37,   58,  -37,  -37,  -37,  -37,  -37,  -37,
+      -37,  -37,  -37,  -37,  -37,  -37,  -37
+    },
+
+    {
+       11,  -38,  -38,  -38,  -38,  -38,  -38,  -38,  -38,  -38,
+      -38,  -38,  -38,  -38,  -38,  -38,   59
+    },
+
+    {
+       11,  -39,   39,   40,  -39,  -39,   41,  -39,  -39,  -39,
+      -39,  -39,  -39,  -39,  -39,  -39,  -39
+
+    },
+
+    {
+       11,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,  -40,
+      -40,  -40,  -40,  -40,  -40,  -40,  -40
+    },
+
+    {
+       11,   42,   42,   43,   42,   42,   42,   42,   42,   42,
+       42,   42,   42,   42,   42,   42,   42
+    },
+
+    {
+       11,   42,   42,   43,   42,   42,   42,   42,   42,   42,
+       42,   42,   42,   42,   42,   42,   42
+    },
+
+    {
+       11,  -43,  -43,  -43,  -43,  -43,  -43,  -43,  -43,  -43,
+      -43,  -43,  -43,  -43,  -43,  -43,  -43
+    },
+
+    {
+       11,  -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,  -44,
+      -44,  -44,  -44,   44,  -44,  -44,  -44
+
+    },
+
+    {
+       11,   45,   45,  -45,   45,   45,   45,   45,   45,   45,
+       45,   45,   45,   45,   45,   45,   45
+    },
+
+    {
+       11,  -46,   46,   47,  -46,  -46,  -46,  -46,  -46,  -46,
+      -46,  -46,  -46,  -46,  -46,  -46,  -46
+    },
+
+    {
+       11,   48,  -47,  -47,   48,   48,   48,   48,   48,   48,
+       48,   48,   48,   48,   48,   48,   48
+    },
+
+    {
+       11,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,  -48,
+      -48,  -48,  -48,  -48,  -48,  -48,  -48
+    },
+
+    {
+       11,   49,   49,   50,   49,  -49,   49,   49,  -49,   49,
+       49,   49,   49,   49,   49,  -49,   49
+
+    },
+
+    {
+       11,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50,
+      -50,  -50,  -50,  -50,  -50,  -50,  -50
+    },
+
+    {
+       11,  -51,  -51,   52,  -51,  -51,  -51,  -51,  -51,  -51,
+      -51,  -51,  -51,  -51,  -51,  -51,  -51
+    },
+
+    {
+       11,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,  -52,
+      -52,  -52,  -52,  -52,  -52,  -52,  -52
+    },
+
+    {
+       11,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,  -53,
+      -53,  -53,  -53,  -53,  -53,  -53,  -53
+    },
+
+    {
+       11,   54,   54,  -54,   54,   54,   54,   54,   54,   54,
+       54,   54,   54,   54,   54,   54,   54
+
+    },
+
+    {
+       11,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,  -55,
+      -55,  -55,  -55,  -55,  -55,  -55,  -55
+    },
+
+    {
+       11,  -56,  -56,  -56,  -56,  -56,  -56,  -56,  -56,  -56,
+      -56,   60,   57,   57,  -56,  -56,  -56
+    },
+
+    {
+       11,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,  -57,
+      -57,   57,   57,   57,  -57,  -57,  -57
+    },
+
+    {
+       11,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,  -58,
+      -58,  -58,  -58,  -58,  -58,  -58,  -58
+    },
+
+    {
+       11,  -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,  -59,
+      -59,  -59,  -59,  -59,  -59,  -59,  -59
+
+    },
+
+    {
+       11,  -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,  -60,
+      -60,   57,   57,   57,  -60,  -60,  -60
+    },
+
+    } ;
+
+static yy_state_type yy_get_previous_state (void );
+static yy_state_type yy_try_NUL_trans (yy_state_type current_state  );
+static int yy_get_next_buffer (void );
+static void yy_fatal_error (yyconst char msg[]  );
+
+/* Done after the current pattern has been matched and before the
+ * corresponding action - sets up zconftext.
+ */
+#define YY_DO_BEFORE_ACTION \
+	(yytext_ptr) = yy_bp; \
+	zconfleng = (size_t) (yy_cp - yy_bp); \
+	(yy_hold_char) = *yy_cp; \
+	*yy_cp = '\0'; \
+	(yy_c_buf_p) = yy_cp;
+
+#define YY_NUM_RULES 33
+#define YY_END_OF_BUFFER 34
+/* This struct is not used in this scanner,
+   but its presence is necessary. */
+struct yy_trans_info
+	{
+	flex_int32_t yy_verify;
+	flex_int32_t yy_nxt;
+	};
+static yyconst flex_int16_t yy_accept[61] =
+    {   0,
+        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
+       34,    5,    4,    2,    3,    7,    8,    6,   32,   29,
+       31,   24,   28,   27,   26,   22,   17,   13,   16,   20,
+       22,   11,   12,   19,   19,   14,   22,   22,    4,    2,
+        3,    3,    1,    6,   32,   29,   31,   30,   24,   23,
+       26,   25,   15,   20,    9,   19,   19,   21,   10,   18
+    } ;
+
+static yyconst flex_int32_t yy_ec[256] =
+    {   0,
+        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    2,    4,    5,    6,    1,    1,    7,    8,    9,
+       10,    1,    1,    1,   11,   12,   12,   13,   13,   13,
+       13,   13,   13,   13,   13,   13,   13,    1,    1,    1,
+       14,    1,    1,    1,   13,   13,   13,   13,   13,   13,
+       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
+       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
+        1,   15,    1,    1,   13,    1,   13,   13,   13,   13,
+
+       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
+       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
+       13,   13,    1,   16,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    1,    1,    1,    1
+    } ;
+
+extern int zconf_flex_debug;
+int zconf_flex_debug = 0;
+
+/* The intent behind this definition is that it'll catch
+ * any uses of REJECT which flex missed.
+ */
+#define REJECT reject_used_but_not_detected
+#define yymore() yymore_used_but_not_detected
+#define YY_MORE_ADJ 0
+#define YY_RESTORE_YY_MORE_OFFSET
+char *zconftext;
+#define YY_NO_INPUT 1
+
+/*
+ * Copyright (C) 2002 Roman Zippel <zippel@linux-m68k.org>
+ * Released under the terms of the GNU GPL v2.0.
+ */
+
+#include <limits.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <unistd.h>
+
+#include "lkc.h"
+
+#define START_STRSIZE	16
+
+static struct {
+	struct file *file;
+	int lineno;
+} current_pos;
+
+static char *text;
+static int text_size, text_asize;
+
+struct buffer {
+        struct buffer *parent;
+        YY_BUFFER_STATE state;
+};
+
+struct buffer *current_buf;
+
+static int last_ts, first_ts;
+
+static void zconf_endhelp(void);
+static void zconf_endfile(void);
+
+static void new_string(void)
+{
+	text = malloc(START_STRSIZE);
+	text_asize = START_STRSIZE;
+	text_size = 0;
+	*text = 0;
+}
+
+static void append_string(const char *str, int size)
+{
+	int new_size = text_size + size + 1;
+	if (new_size > text_asize) {
+		new_size += START_STRSIZE - 1;
+		new_size &= -START_STRSIZE;
+		text = realloc(text, new_size);
+		text_asize = new_size;
+	}
+	memcpy(text + text_size, str, size);
+	text_size += size;
+	text[text_size] = 0;
+}
+
+static void alloc_string(const char *str, int size)
+{
+	text = malloc(size + 1);
+	memcpy(text, str, size);
+	text[size] = 0;
+}
+
+#define INITIAL 0
+#define COMMAND 1
+#define HELP 2
+#define STRING 3
+#define PARAM 4
+
+#ifndef YY_NO_UNISTD_H
+/* Special case for "unistd.h", since it is non-ANSI. We include it way
+ * down here because we want the user's section 1 to have been scanned first.
+ * The user has a chance to override it with an option.
+ */
+#include <unistd.h>
+#endif
+
+#ifndef YY_EXTRA_TYPE
+#define YY_EXTRA_TYPE void *
+#endif
+
+static int yy_init_globals (void );
+
+/* Accessor methods to globals.
+   These are made visible to non-reentrant scanners for convenience. */
+
+int zconflex_destroy (void );
+
+int zconfget_debug (void );
+
+void zconfset_debug (int debug_flag  );
+
+YY_EXTRA_TYPE zconfget_extra (void );
+
+void zconfset_extra (YY_EXTRA_TYPE user_defined  );
+
+FILE *zconfget_in (void );
+
+void zconfset_in  (FILE * in_str  );
+
+FILE *zconfget_out (void );
+
+void zconfset_out  (FILE * out_str  );
+
+int zconfget_leng (void );
+
+char *zconfget_text (void );
+
+int zconfget_lineno (void );
+
+void zconfset_lineno (int line_number  );
+
+/* Macros after this point can all be overridden by user definitions in
+ * section 1.
+ */
+
+#ifndef YY_SKIP_YYWRAP
+#ifdef __cplusplus
+extern "C" int zconfwrap (void );
+#else
+extern int zconfwrap (void );
+#endif
+#endif
+
+    static void yyunput (int c,char *buf_ptr  );
+    
+#ifndef yytext_ptr
+static void yy_flex_strncpy (char *,yyconst char *,int );
+#endif
+
+#ifdef YY_NEED_STRLEN
+static int yy_flex_strlen (yyconst char * );
+#endif
+
+#ifndef YY_NO_INPUT
+
+#ifdef __cplusplus
+static int yyinput (void );
+#else
+static int input (void );
+#endif
+
+#endif
+
+/* Amount of stuff to slurp up with each read. */
+#ifndef YY_READ_BUF_SIZE
+#define YY_READ_BUF_SIZE 8192
+#endif
+
+/* Copy whatever the last rule matched to the standard output. */
+#ifndef ECHO
+/* This used to be an fputs(), but since the string might contain NUL's,
+ * we now use fwrite().
+ */
+#define ECHO do { if (fwrite( zconftext, zconfleng, 1, zconfout )) {} } while (0)
+#endif
+
+/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
+ * is returned in "result".
+ */
+#ifndef YY_INPUT
+#define YY_INPUT(buf,result,max_size) \
+	errno=0; \
+	while ( (result = read( fileno(zconfin), (char *) buf, max_size )) < 0 ) \
+	{ \
+		if( errno != EINTR) \
+		{ \
+			YY_FATAL_ERROR( "input in flex scanner failed" ); \
+			break; \
+		} \
+		errno=0; \
+		clearerr(zconfin); \
+	}\
+\
+
+#endif
+
+/* No semi-colon after return; correct usage is to write "yyterminate();" -
+ * we don't want an extra ';' after the "return" because that will cause
+ * some compilers to complain about unreachable statements.
+ */
+#ifndef yyterminate
+#define yyterminate() return YY_NULL
+#endif
+
+/* Number of entries by which start-condition stack grows. */
+#ifndef YY_START_STACK_INCR
+#define YY_START_STACK_INCR 25
+#endif
+
+/* Report a fatal error. */
+#ifndef YY_FATAL_ERROR
+#define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
+#endif
+
+/* end tables serialization structures and prototypes */
+
+/* Default declaration of generated scanner - a define so the user can
+ * easily add parameters.
+ */
+#ifndef YY_DECL
+#define YY_DECL_IS_OURS 1
+
+extern int zconflex (void);
+
+#define YY_DECL int zconflex (void)
+#endif /* !YY_DECL */
+
+/* Code executed at the beginning of each rule, after zconftext and zconfleng
+ * have been set up.
+ */
+#ifndef YY_USER_ACTION
+#define YY_USER_ACTION
+#endif
+
+/* Code executed at the end of each rule. */
+#ifndef YY_BREAK
+#define YY_BREAK break;
+#endif
+
+#define YY_RULE_SETUP \
+	YY_USER_ACTION
+
+/** The main scanner function which does all the work.
+ */
+YY_DECL
+{
+	register yy_state_type yy_current_state;
+	register char *yy_cp, *yy_bp;
+	register int yy_act;
+    
+	int str = 0;
+	int ts, i;
+
+	if ( !(yy_init) )
+		{
+		(yy_init) = 1;
+
+#ifdef YY_USER_INIT
+		YY_USER_INIT;
+#endif
+
+		if ( ! (yy_start) )
+			(yy_start) = 1;	/* first start state */
+
+		if ( ! zconfin )
+			zconfin = stdin;
+
+		if ( ! zconfout )
+			zconfout = stdout;
+
+		if ( ! YY_CURRENT_BUFFER ) {
+			zconfensure_buffer_stack ();
+			YY_CURRENT_BUFFER_LVALUE =
+				zconf_create_buffer(zconfin,YY_BUF_SIZE );
+		}
+
+		zconf_load_buffer_state( );
+		}
+
+	while ( 1 )		/* loops until end-of-file is reached */
+		{
+		yy_cp = (yy_c_buf_p);
+
+		/* Support of zconftext. */
+		*yy_cp = (yy_hold_char);
+
+		/* yy_bp points to the position in yy_ch_buf of the start of
+		 * the current run.
+		 */
+		yy_bp = yy_cp;
+
+		yy_current_state = (yy_start);
+yy_match:
+		while ( (yy_current_state = yy_nxt[yy_current_state][ yy_ec[YY_SC_TO_UI(*yy_cp)]  ]) > 0 )
+			++yy_cp;
+
+		yy_current_state = -yy_current_state;
+
+yy_find_action:
+		yy_act = yy_accept[yy_current_state];
+
+		YY_DO_BEFORE_ACTION;
+
+do_action:	/* This label is used only to access EOF actions. */
+
+		switch ( yy_act )
+	{ /* beginning of action switch */
+case 1:
+/* rule 1 can match eol */
+case 2:
+/* rule 2 can match eol */
+YY_RULE_SETUP
+{
+	current_file->lineno++;
+	return T_EOL;
+}
+	YY_BREAK
+case 3:
+YY_RULE_SETUP
+
+	YY_BREAK
+case 4:
+YY_RULE_SETUP
+{
+	BEGIN(COMMAND);
+}
+	YY_BREAK
+case 5:
+YY_RULE_SETUP
+{
+	unput(zconftext[0]);
+	BEGIN(COMMAND);
+}
+	YY_BREAK
+
+case 6:
+YY_RULE_SETUP
+{
+		const struct kconf_id *id = kconf_id_lookup(zconftext, zconfleng);
+		BEGIN(PARAM);
+		current_pos.file = current_file;
+		current_pos.lineno = current_file->lineno;
+		if (id && id->flags & TF_COMMAND) {
+			zconflval.id = id;
+			return id->token;
+		}
+		alloc_string(zconftext, zconfleng);
+		zconflval.string = text;
+		return T_WORD;
+	}
+	YY_BREAK
+case 7:
+YY_RULE_SETUP
+
+	YY_BREAK
+case 8:
+/* rule 8 can match eol */
+YY_RULE_SETUP
+{
+		BEGIN(INITIAL);
+		current_file->lineno++;
+		return T_EOL;
+	}
+	YY_BREAK
+
+case 9:
+YY_RULE_SETUP
+return T_AND;
+	YY_BREAK
+case 10:
+YY_RULE_SETUP
+return T_OR;
+	YY_BREAK
+case 11:
+YY_RULE_SETUP
+return T_OPEN_PAREN;
+	YY_BREAK
+case 12:
+YY_RULE_SETUP
+return T_CLOSE_PAREN;
+	YY_BREAK
+case 13:
+YY_RULE_SETUP
+return T_NOT;
+	YY_BREAK
+case 14:
+YY_RULE_SETUP
+return T_EQUAL;
+	YY_BREAK
+case 15:
+YY_RULE_SETUP
+return T_UNEQUAL;
+	YY_BREAK
+case 16:
+YY_RULE_SETUP
+{
+		str = zconftext[0];
+		new_string();
+		BEGIN(STRING);
+	}
+	YY_BREAK
+case 17:
+/* rule 17 can match eol */
+YY_RULE_SETUP
+BEGIN(INITIAL); current_file->lineno++; return T_EOL;
+	YY_BREAK
+case 18:
+YY_RULE_SETUP
+/* ignore */
+	YY_BREAK
+case 19:
+YY_RULE_SETUP
+{
+		const struct kconf_id *id = kconf_id_lookup(zconftext, zconfleng);
+		if (id && id->flags & TF_PARAM) {
+			zconflval.id = id;
+			return id->token;
+		}
+		alloc_string(zconftext, zconfleng);
+		zconflval.string = text;
+		return T_WORD;
+	}
+	YY_BREAK
+case 20:
+YY_RULE_SETUP
+/* comment */
+	YY_BREAK
+case 21:
+/* rule 21 can match eol */
+YY_RULE_SETUP
+current_file->lineno++;
+	YY_BREAK
+case 22:
+YY_RULE_SETUP
+
+	YY_BREAK
+case YY_STATE_EOF(PARAM):
+{
+		BEGIN(INITIAL);
+	}
+	YY_BREAK
+
+case 23:
+/* rule 23 can match eol */
+*yy_cp = (yy_hold_char); /* undo effects of setting up zconftext */
+(yy_c_buf_p) = yy_cp -= 1;
+YY_DO_BEFORE_ACTION; /* set up zconftext again */
+YY_RULE_SETUP
+{
+		append_string(zconftext, zconfleng);
+		zconflval.string = text;
+		return T_WORD_QUOTE;
+	}
+	YY_BREAK
+case 24:
+YY_RULE_SETUP
+{
+		append_string(zconftext, zconfleng);
+	}
+	YY_BREAK
+case 25:
+/* rule 25 can match eol */
+*yy_cp = (yy_hold_char); /* undo effects of setting up zconftext */
+(yy_c_buf_p) = yy_cp -= 1;
+YY_DO_BEFORE_ACTION; /* set up zconftext again */
+YY_RULE_SETUP
+{
+		append_string(zconftext + 1, zconfleng - 1);
+		zconflval.string = text;
+		return T_WORD_QUOTE;
+	}
+	YY_BREAK
+case 26:
+YY_RULE_SETUP
+{
+		append_string(zconftext + 1, zconfleng - 1);
+	}
+	YY_BREAK
+case 27:
+YY_RULE_SETUP
+{
+		if (str == zconftext[0]) {
+			BEGIN(PARAM);
+			zconflval.string = text;
+			return T_WORD_QUOTE;
+		} else
+			append_string(zconftext, 1);
+	}
+	YY_BREAK
+case 28:
+/* rule 28 can match eol */
+YY_RULE_SETUP
+{
+		printf("%s:%d:warning: multi-line strings not supported\n", zconf_curname(), zconf_lineno());
+		current_file->lineno++;
+		BEGIN(INITIAL);
+		return T_EOL;
+	}
+	YY_BREAK
+case YY_STATE_EOF(STRING):
+{
+		BEGIN(INITIAL);
+	}
+	YY_BREAK
+
+case 29:
+YY_RULE_SETUP
+{
+		ts = 0;
+		for (i = 0; i < zconfleng; i++) {
+			if (zconftext[i] == '\t')
+				ts = (ts & ~7) + 8;
+			else
+				ts++;
+		}
+		last_ts = ts;
+		if (first_ts) {
+			if (ts < first_ts) {
+				zconf_endhelp();
+				return T_HELPTEXT;
+			}
+			ts -= first_ts;
+			while (ts > 8) {
+				append_string("        ", 8);
+				ts -= 8;
+			}
+			append_string("        ", ts);
+		}
+	}
+	YY_BREAK
+case 30:
+/* rule 30 can match eol */
+*yy_cp = (yy_hold_char); /* undo effects of setting up zconftext */
+(yy_c_buf_p) = yy_cp -= 1;
+YY_DO_BEFORE_ACTION; /* set up zconftext again */
+YY_RULE_SETUP
+{
+		current_file->lineno++;
+		zconf_endhelp();
+		return T_HELPTEXT;
+	}
+	YY_BREAK
+case 31:
+/* rule 31 can match eol */
+YY_RULE_SETUP
+{
+		current_file->lineno++;
+		append_string("\n", 1);
+	}
+	YY_BREAK
+case 32:
+YY_RULE_SETUP
+{
+		while (zconfleng) {
+			if ((zconftext[zconfleng-1] != ' ') && (zconftext[zconfleng-1] != '\t'))
+				break;
+			zconfleng--;
+		}
+		append_string(zconftext, zconfleng);
+		if (!first_ts)
+			first_ts = last_ts;
+	}
+	YY_BREAK
+case YY_STATE_EOF(HELP):
+{
+		zconf_endhelp();
+		return T_HELPTEXT;
+	}
+	YY_BREAK
+
+case YY_STATE_EOF(INITIAL):
+case YY_STATE_EOF(COMMAND):
+{
+	if (current_file) {
+		zconf_endfile();
+		return T_EOL;
+	}
+	fclose(zconfin);
+	yyterminate();
+}
+	YY_BREAK
+case 33:
+YY_RULE_SETUP
+YY_FATAL_ERROR( "flex scanner jammed" );
+	YY_BREAK
+
+	case YY_END_OF_BUFFER:
+		{
+		/* Amount of text matched not including the EOB char. */
+		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;
+
+		/* Undo the effects of YY_DO_BEFORE_ACTION. */
+		*yy_cp = (yy_hold_char);
+		YY_RESTORE_YY_MORE_OFFSET
+
+		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
+			{
+			/* We're scanning a new file or input source.  It's
+			 * possible that this happened because the user
+			 * just pointed zconfin at a new source and called
+			 * zconflex().  If so, then we have to assure
+			 * consistency between YY_CURRENT_BUFFER and our
+			 * globals.  Here is the right place to do so, because
+			 * this is the first action (other than possibly a
+			 * back-up) that will match for the new input source.
+			 */
+			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
+			YY_CURRENT_BUFFER_LVALUE->yy_input_file = zconfin;
+			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
+			}
+
+		/* Note that here we test for yy_c_buf_p "<=" to the position
+		 * of the first EOB in the buffer, since yy_c_buf_p will
+		 * already have been incremented past the NUL character
+		 * (since all states make transitions on EOB to the
+		 * end-of-buffer state).  Contrast this with the test
+		 * in input().
+		 */
+		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
+			{ /* This was really a NUL. */
+			yy_state_type yy_next_state;
+
+			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;
+
+			yy_current_state = yy_get_previous_state(  );
+
+			/* Okay, we're now positioned to make the NUL
+			 * transition.  We couldn't have
+			 * yy_get_previous_state() go ahead and do it
+			 * for us because it doesn't know how to deal
+			 * with the possibility of jamming (and we don't
+			 * want to build jamming into it because then it
+			 * will run more slowly).
+			 */
+
+			yy_next_state = yy_try_NUL_trans( yy_current_state );
+
+			yy_bp = (yytext_ptr) + YY_MORE_ADJ;
+
+			if ( yy_next_state )
+				{
+				/* Consume the NUL. */
+				yy_cp = ++(yy_c_buf_p);
+				yy_current_state = yy_next_state;
+				goto yy_match;
+				}
+
+			else
+				{
+				yy_cp = (yy_c_buf_p);
+				goto yy_find_action;
+				}
+			}
+
+		else switch ( yy_get_next_buffer(  ) )
+			{
+			case EOB_ACT_END_OF_FILE:
+				{
+				(yy_did_buffer_switch_on_eof) = 0;
+
+				if ( zconfwrap( ) )
+					{
+					/* Note: because we've taken care in
+					 * yy_get_next_buffer() to have set up
+					 * zconftext, we can now set up
+					 * yy_c_buf_p so that if some total
+					 * hoser (like flex itself) wants to
+					 * call the scanner after we return the
+					 * YY_NULL, it'll still work - another
+					 * YY_NULL will get returned.
+					 */
+					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;
+
+					yy_act = YY_STATE_EOF(YY_START);
+					goto do_action;
+					}
+
+				else
+					{
+					if ( ! (yy_did_buffer_switch_on_eof) )
+						YY_NEW_FILE;
+					}
+				break;
+				}
+
+			case EOB_ACT_CONTINUE_SCAN:
+				(yy_c_buf_p) =
+					(yytext_ptr) + yy_amount_of_matched_text;
+
+				yy_current_state = yy_get_previous_state(  );
+
+				yy_cp = (yy_c_buf_p);
+				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
+				goto yy_match;
+
+			case EOB_ACT_LAST_MATCH:
+				(yy_c_buf_p) =
+				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];
+
+				yy_current_state = yy_get_previous_state(  );
+
+				yy_cp = (yy_c_buf_p);
+				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
+				goto yy_find_action;
+			}
+		break;
+		}
+
+	default:
+		YY_FATAL_ERROR(
+			"fatal flex scanner internal error--no action found" );
+	} /* end of action switch */
+		} /* end of scanning one token */
+} /* end of zconflex */
+
+/* yy_get_next_buffer - try to read in a new buffer
+ *
+ * Returns a code representing an action:
+ *	EOB_ACT_LAST_MATCH -
+ *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
+ *	EOB_ACT_END_OF_FILE - end of file
+ */
+static int yy_get_next_buffer (void)
+{
+    	register char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
+	register char *source = (yytext_ptr);
+	register int number_to_move, i;
+	int ret_val;
+
+	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
+		YY_FATAL_ERROR(
+		"fatal flex scanner internal error--end of buffer missed" );
+
+	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
+		{ /* Don't try to fill the buffer, so this is an EOF. */
+		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
+			{
+			/* We matched a single character, the EOB, so
+			 * treat this as a final EOF.
+			 */
+			return EOB_ACT_END_OF_FILE;
+			}
+
+		else
+			{
+			/* We matched some text prior to the EOB, first
+			 * process it.
+			 */
+			return EOB_ACT_LAST_MATCH;
+			}
+		}
+
+	/* Try to read more data. */
+
+	/* First move last chars to start of buffer. */
+	number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr)) - 1;
+
+	for ( i = 0; i < number_to_move; ++i )
+		*(dest++) = *(source++);
+
+	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
+		/* don't do the read, it's not guaranteed to return an EOF,
+		 * just force an EOF
+		 */
+		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;
+
+	else
+		{
+			int num_to_read =
+			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;
+
+		while ( num_to_read <= 0 )
+			{ /* Not enough room in the buffer - grow it. */
+
+			/* just a shorter name for the current buffer */
+			YY_BUFFER_STATE b = YY_CURRENT_BUFFER;
+
+			int yy_c_buf_p_offset =
+				(int) ((yy_c_buf_p) - b->yy_ch_buf);
+
+			if ( b->yy_is_our_buffer )
+				{
+				int new_size = b->yy_buf_size * 2;
+
+				if ( new_size <= 0 )
+					b->yy_buf_size += b->yy_buf_size / 8;
+				else
+					b->yy_buf_size *= 2;
+
+				b->yy_ch_buf = (char *)
+					/* Include room in for 2 EOB chars. */
+					zconfrealloc((void *) b->yy_ch_buf,b->yy_buf_size + 2  );
+				}
+			else
+				/* Can't grow it, we don't own it. */
+				b->yy_ch_buf = 0;
+
+			if ( ! b->yy_ch_buf )
+				YY_FATAL_ERROR(
+				"fatal error - scanner input buffer overflow" );
+
+			(yy_c_buf_p) = &b->yy_ch_buf[yy_c_buf_p_offset];
+
+			num_to_read = YY_CURRENT_BUFFER_LVALUE->yy_buf_size -
+						number_to_move - 1;
+
+			}
+
+		if ( num_to_read > YY_READ_BUF_SIZE )
+			num_to_read = YY_READ_BUF_SIZE;
+
+		/* Read in more data. */
+		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
+			(yy_n_chars), (size_t) num_to_read );
+
+		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
+		}
+
+	if ( (yy_n_chars) == 0 )
+		{
+		if ( number_to_move == YY_MORE_ADJ )
+			{
+			ret_val = EOB_ACT_END_OF_FILE;
+			zconfrestart(zconfin  );
+			}
+
+		else
+			{
+			ret_val = EOB_ACT_LAST_MATCH;
+			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
+				YY_BUFFER_EOF_PENDING;
+			}
+		}
+
+	else
+		ret_val = EOB_ACT_CONTINUE_SCAN;
+
+	if ((yy_size_t) ((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
+		/* Extend the array by 50%, plus the number we really need. */
+		yy_size_t new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
+		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) zconfrealloc((void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,new_size  );
+		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
+			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
+	}
+
+	(yy_n_chars) += number_to_move;
+	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
+	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;
+
+	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];
+
+	return ret_val;
+}
+
+/* yy_get_previous_state - get the state just before the EOB char was reached */
+
+    static yy_state_type yy_get_previous_state (void)
+{
+	register yy_state_type yy_current_state;
+	register char *yy_cp;
+    
+	yy_current_state = (yy_start);
+
+	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
+		{
+		yy_current_state = yy_nxt[yy_current_state][(*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1)];
+		}
+
+	return yy_current_state;
+}
+
+/* yy_try_NUL_trans - try to make a transition on the NUL character
+ *
+ * synopsis
+ *	next_state = yy_try_NUL_trans( current_state );
+ */
+    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )
+{
+	register int yy_is_jam;
+    
+	yy_current_state = yy_nxt[yy_current_state][1];
+	yy_is_jam = (yy_current_state <= 0);
+
+	return yy_is_jam ? 0 : yy_current_state;
+}
+
+    static void yyunput (int c, register char * yy_bp )
+{
+	register char *yy_cp;
+    
+    yy_cp = (yy_c_buf_p);
+
+	/* undo effects of setting up zconftext */
+	*yy_cp = (yy_hold_char);
+
+	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
+		{ /* need to shift things up to make room */
+		/* +2 for EOB chars. */
+		register int number_to_move = (yy_n_chars) + 2;
+		register char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
+					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
+		register char *source =
+				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];
+
+		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
+			*--dest = *--source;
+
+		yy_cp += (int) (dest - source);
+		yy_bp += (int) (dest - source);
+		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
+			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_buf_size;
+
+		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
+			YY_FATAL_ERROR( "flex scanner push-back overflow" );
+		}
+
+	*--yy_cp = (char) c;
+
+	(yytext_ptr) = yy_bp;
+	(yy_hold_char) = *yy_cp;
+	(yy_c_buf_p) = yy_cp;
+}
+
+#ifndef YY_NO_INPUT
+#ifdef __cplusplus
+    static int yyinput (void)
+#else
+    static int input  (void)
+#endif
+
+{
+	int c;
+    
+	*(yy_c_buf_p) = (yy_hold_char);
+
+	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
+		{
+		/* yy_c_buf_p now points to the character we want to return.
+		 * If this occurs *before* the EOB characters, then it's a
+		 * valid NUL; if not, then we've hit the end of the buffer.
+		 */
+		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
+			/* This was really a NUL. */
+			*(yy_c_buf_p) = '\0';
+
+		else
+			{ /* need more input */
+			int offset = (yy_c_buf_p) - (yytext_ptr);
+			++(yy_c_buf_p);
+
+			switch ( yy_get_next_buffer(  ) )
+				{
+				case EOB_ACT_LAST_MATCH:
+					/* This happens because yy_g_n_b()
+					 * sees that we've accumulated a
+					 * token and flags that we need to
+					 * try matching the token before
+					 * proceeding.  But for input(),
+					 * there's no matching to consider.
+					 * So convert the EOB_ACT_LAST_MATCH
+					 * to EOB_ACT_END_OF_FILE.
+					 */
+
+					/* Reset buffer status. */
+					zconfrestart(zconfin );
+
+					/*FALLTHROUGH*/
+
+				case EOB_ACT_END_OF_FILE:
+					{
+					if ( zconfwrap( ) )
+						return EOF;
+
+					if ( ! (yy_did_buffer_switch_on_eof) )
+						YY_NEW_FILE;
+#ifdef __cplusplus
+					return yyinput();
+#else
+					return input();
+#endif
+					}
+
+				case EOB_ACT_CONTINUE_SCAN:
+					(yy_c_buf_p) = (yytext_ptr) + offset;
+					break;
+				}
+			}
+		}
+
+	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
+	*(yy_c_buf_p) = '\0';	/* preserve zconftext */
+	(yy_hold_char) = *++(yy_c_buf_p);
+
+	return c;
+}
+#endif	/* ifndef YY_NO_INPUT */
+
+/** Immediately switch to a different input stream.
+ * @param input_file A readable stream.
+ * 
+ * @note This function does not reset the start condition to @c INITIAL .
+ */
+    void zconfrestart  (FILE * input_file )
+{
+    
+	if ( ! YY_CURRENT_BUFFER ){
+        zconfensure_buffer_stack ();
+		YY_CURRENT_BUFFER_LVALUE =
+            zconf_create_buffer(zconfin,YY_BUF_SIZE );
+	}
+
+	zconf_init_buffer(YY_CURRENT_BUFFER,input_file );
+	zconf_load_buffer_state( );
+}
+
+/** Switch to a different input buffer.
+ * @param new_buffer The new input buffer.
+ * 
+ */
+    void zconf_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )
+{
+    
+	/* TODO. We should be able to replace this entire function body
+	 * with
+	 *		zconfpop_buffer_state();
+	 *		zconfpush_buffer_state(new_buffer);
+     */
+	zconfensure_buffer_stack ();
+	if ( YY_CURRENT_BUFFER == new_buffer )
+		return;
+
+	if ( YY_CURRENT_BUFFER )
+		{
+		/* Flush out information for old buffer. */
+		*(yy_c_buf_p) = (yy_hold_char);
+		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
+		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
+		}
+
+	YY_CURRENT_BUFFER_LVALUE = new_buffer;
+	zconf_load_buffer_state( );
+
+	/* We don't actually know whether we did this switch during
+	 * EOF (zconfwrap()) processing, but the only time this flag
+	 * is looked at is after zconfwrap() is called, so it's safe
+	 * to go ahead and always set it.
+	 */
+	(yy_did_buffer_switch_on_eof) = 1;
+}
+
+static void zconf_load_buffer_state  (void)
+{
+    	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
+	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
+	zconfin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
+	(yy_hold_char) = *(yy_c_buf_p);
+}
+
+/** Allocate and initialize an input buffer state.
+ * @param file A readable stream.
+ * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
+ * 
+ * @return the allocated buffer state.
+ */
+    YY_BUFFER_STATE zconf_create_buffer  (FILE * file, int  size )
+{
+	YY_BUFFER_STATE b;
+    
+	b = (YY_BUFFER_STATE) zconfalloc(sizeof( struct yy_buffer_state )  );
+	if ( ! b )
+		YY_FATAL_ERROR( "out of dynamic memory in zconf_create_buffer()" );
+
+	b->yy_buf_size = size;
+
+	/* yy_ch_buf has to be 2 characters longer than the size given because
+	 * we need to put in 2 end-of-buffer characters.
+	 */
+	b->yy_ch_buf = (char *) zconfalloc(b->yy_buf_size + 2  );
+	if ( ! b->yy_ch_buf )
+		YY_FATAL_ERROR( "out of dynamic memory in zconf_create_buffer()" );
+
+	b->yy_is_our_buffer = 1;
+
+	zconf_init_buffer(b,file );
+
+	return b;
+}
+
+/** Destroy the buffer.
+ * @param b a buffer created with zconf_create_buffer()
+ * 
+ */
+    void zconf_delete_buffer (YY_BUFFER_STATE  b )
+{
+    
+	if ( ! b )
+		return;
+
+	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
+		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;
+
+	if ( b->yy_is_our_buffer )
+		zconffree((void *) b->yy_ch_buf  );
+
+	zconffree((void *) b  );
+}
+
+/* Initializes or reinitializes a buffer.
+ * This function is sometimes called more than once on the same buffer,
+ * such as during a zconfrestart() or at EOF.
+ */
+    static void zconf_init_buffer  (YY_BUFFER_STATE  b, FILE * file )
+
+{
+	int oerrno = errno;
+    
+	zconf_flush_buffer(b );
+
+	b->yy_input_file = file;
+	b->yy_fill_buffer = 1;
+
+    /* If b is the current buffer, then zconf_init_buffer was _probably_
+     * called from zconfrestart() or through yy_get_next_buffer.
+     * In that case, we don't want to reset the lineno or column.
+     */
+    if (b != YY_CURRENT_BUFFER){
+        b->yy_bs_lineno = 1;
+        b->yy_bs_column = 0;
+    }
+
+        b->yy_is_interactive = 0;
+    
+	errno = oerrno;
+}
+
+/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
+ * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
+ * 
+ */
+    void zconf_flush_buffer (YY_BUFFER_STATE  b )
+{
+    	if ( ! b )
+		return;
+
+	b->yy_n_chars = 0;
+
+	/* We always need two end-of-buffer characters.  The first causes
+	 * a transition to the end-of-buffer state.  The second causes
+	 * a jam in that state.
+	 */
+	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
+	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;
+
+	b->yy_buf_pos = &b->yy_ch_buf[0];
+
+	b->yy_at_bol = 1;
+	b->yy_buffer_status = YY_BUFFER_NEW;
+
+	if ( b == YY_CURRENT_BUFFER )
+		zconf_load_buffer_state( );
+}
+
+/** Pushes the new state onto the stack. The new state becomes
+ *  the current state. This function will allocate the stack
+ *  if necessary.
+ *  @param new_buffer The new state.
+ *  
+ */
+void zconfpush_buffer_state (YY_BUFFER_STATE new_buffer )
+{
+    	if (new_buffer == NULL)
+		return;
+
+	zconfensure_buffer_stack();
+
+	/* This block is copied from zconf_switch_to_buffer. */
+	if ( YY_CURRENT_BUFFER )
+		{
+		/* Flush out information for old buffer. */
+		*(yy_c_buf_p) = (yy_hold_char);
+		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
+		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
+		}
+
+	/* Only push if top exists. Otherwise, replace top. */
+	if (YY_CURRENT_BUFFER)
+		(yy_buffer_stack_top)++;
+	YY_CURRENT_BUFFER_LVALUE = new_buffer;
+
+	/* copied from zconf_switch_to_buffer. */
+	zconf_load_buffer_state( );
+	(yy_did_buffer_switch_on_eof) = 1;
+}
+
+/** Removes and deletes the top of the stack, if present.
+ *  The next element becomes the new top.
+ *  
+ */
+void zconfpop_buffer_state (void)
+{
+    	if (!YY_CURRENT_BUFFER)
+		return;
+
+	zconf_delete_buffer(YY_CURRENT_BUFFER );
+	YY_CURRENT_BUFFER_LVALUE = NULL;
+	if ((yy_buffer_stack_top) > 0)
+		--(yy_buffer_stack_top);
+
+	if (YY_CURRENT_BUFFER) {
+		zconf_load_buffer_state( );
+		(yy_did_buffer_switch_on_eof) = 1;
+	}
+}
+
+/* Allocates the stack if it does not exist.
+ *  Guarantees space for at least one push.
+ */
+static void zconfensure_buffer_stack (void)
+{
+	int num_to_alloc;
+    
+	if (!(yy_buffer_stack)) {
+
+		/* First allocation is just for 2 elements, since we don't know if this
+		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
+		 * immediate realloc on the next call.
+         */
+		num_to_alloc = 1;
+		(yy_buffer_stack) = (struct yy_buffer_state**)zconfalloc
+								(num_to_alloc * sizeof(struct yy_buffer_state*)
+								);
+		if ( ! (yy_buffer_stack) )
+			YY_FATAL_ERROR( "out of dynamic memory in zconfensure_buffer_stack()" );
+								  
+		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));
+				
+		(yy_buffer_stack_max) = num_to_alloc;
+		(yy_buffer_stack_top) = 0;
+		return;
+	}
+
+	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){
+
+		/* Increase the buffer to prepare for a possible push. */
+		int grow_size = 8 /* arbitrary grow size */;
+
+		num_to_alloc = (yy_buffer_stack_max) + grow_size;
+		(yy_buffer_stack) = (struct yy_buffer_state**)zconfrealloc
+								((yy_buffer_stack),
+								num_to_alloc * sizeof(struct yy_buffer_state*)
+								);
+		if ( ! (yy_buffer_stack) )
+			YY_FATAL_ERROR( "out of dynamic memory in zconfensure_buffer_stack()" );
+
+		/* zero only the new slots.*/
+		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
+		(yy_buffer_stack_max) = num_to_alloc;
+	}
+}
+
+/** Setup the input buffer state to scan directly from a user-specified character buffer.
+ * @param base the character buffer
+ * @param size the size in bytes of the character buffer
+ * 
+ * @return the newly allocated buffer state object. 
+ */
+YY_BUFFER_STATE zconf_scan_buffer  (char * base, yy_size_t  size )
+{
+	YY_BUFFER_STATE b;
+    
+	if ( size < 2 ||
+	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
+	     base[size-1] != YY_END_OF_BUFFER_CHAR )
+		/* They forgot to leave room for the EOB's. */
+		return 0;
+
+	b = (YY_BUFFER_STATE) zconfalloc(sizeof( struct yy_buffer_state )  );
+	if ( ! b )
+		YY_FATAL_ERROR( "out of dynamic memory in zconf_scan_buffer()" );
+
+	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
+	b->yy_buf_pos = b->yy_ch_buf = base;
+	b->yy_is_our_buffer = 0;
+	b->yy_input_file = 0;
+	b->yy_n_chars = b->yy_buf_size;
+	b->yy_is_interactive = 0;
+	b->yy_at_bol = 1;
+	b->yy_fill_buffer = 0;
+	b->yy_buffer_status = YY_BUFFER_NEW;
+
+	zconf_switch_to_buffer(b  );
+
+	return b;
+}
+
+/** Setup the input buffer state to scan a string. The next call to zconflex() will
+ * scan from a @e copy of @a str.
+ * @param yystr a NUL-terminated string to scan
+ * 
+ * @return the newly allocated buffer state object.
+ * @note If you want to scan bytes that may contain NUL values, then use
+ *       zconf_scan_bytes() instead.
+ */
+YY_BUFFER_STATE zconf_scan_string (yyconst char * yystr )
+{
+    
+	return zconf_scan_bytes(yystr,strlen(yystr) );
+}
+
+/** Setup the input buffer state to scan the given bytes. The next call to zconflex() will
+ * scan from a @e copy of @a bytes.
+ * @param bytes the byte buffer to scan
+ * @param len the number of bytes in the buffer pointed to by @a bytes.
+ * 
+ * @return the newly allocated buffer state object.
+ */
+YY_BUFFER_STATE zconf_scan_bytes  (yyconst char * yybytes, int  _yybytes_len )
+{
+	YY_BUFFER_STATE b;
+	char *buf;
+	yy_size_t n;
+	int i;
+    
+	/* Get memory for full buffer, including space for trailing EOB's. */
+	n = _yybytes_len + 2;
+	buf = (char *) zconfalloc(n  );
+	if ( ! buf )
+		YY_FATAL_ERROR( "out of dynamic memory in zconf_scan_bytes()" );
+
+	for ( i = 0; i < _yybytes_len; ++i )
+		buf[i] = yybytes[i];
+
+	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;
+
+	b = zconf_scan_buffer(buf,n );
+	if ( ! b )
+		YY_FATAL_ERROR( "bad buffer in zconf_scan_bytes()" );
+
+	/* It's okay to grow etc. this buffer, and we should throw it
+	 * away when we're done.
+	 */
+	b->yy_is_our_buffer = 1;
+
+	return b;
+}
+
+#ifndef YY_EXIT_FAILURE
+#define YY_EXIT_FAILURE 2
+#endif
+
+static void yy_fatal_error (yyconst char* msg )
+{
+    	(void) fprintf( stderr, "%s\n", msg );
+	exit( YY_EXIT_FAILURE );
+}
+
+/* Redefine yyless() so it works in section 3 code. */
+
+#undef yyless
+#define yyless(n) \
+	do \
+		{ \
+		/* Undo effects of setting up zconftext. */ \
+        int yyless_macro_arg = (n); \
+        YY_LESS_LINENO(yyless_macro_arg);\
+		zconftext[zconfleng] = (yy_hold_char); \
+		(yy_c_buf_p) = zconftext + yyless_macro_arg; \
+		(yy_hold_char) = *(yy_c_buf_p); \
+		*(yy_c_buf_p) = '\0'; \
+		zconfleng = yyless_macro_arg; \
+		} \
+	while ( 0 )
+
+/* Accessor  methods (get/set functions) to struct members. */
+
+/** Get the current line number.
+ * 
+ */
+int zconfget_lineno  (void)
+{
+        
+    return zconflineno;
+}
+
+/** Get the input stream.
+ * 
+ */
+FILE *zconfget_in  (void)
+{
+        return zconfin;
+}
+
+/** Get the output stream.
+ * 
+ */
+FILE *zconfget_out  (void)
+{
+        return zconfout;
+}
+
+/** Get the length of the current token.
+ * 
+ */
+int zconfget_leng  (void)
+{
+        return zconfleng;
+}
+
+/** Get the current token.
+ * 
+ */
+
+char *zconfget_text  (void)
+{
+        return zconftext;
+}
+
+/** Set the current line number.
+ * @param line_number
+ * 
+ */
+void zconfset_lineno (int  line_number )
+{
+    
+    zconflineno = line_number;
+}
+
+/** Set the input stream. This does not discard the current
+ * input buffer.
+ * @param in_str A readable stream.
+ * 
+ * @see zconf_switch_to_buffer
+ */
+void zconfset_in (FILE *  in_str )
+{
+        zconfin = in_str ;
+}
+
+void zconfset_out (FILE *  out_str )
+{
+        zconfout = out_str ;
+}
+
+int zconfget_debug  (void)
+{
+        return zconf_flex_debug;
+}
+
+void zconfset_debug (int  bdebug )
+{
+        zconf_flex_debug = bdebug ;
+}
+
+static int yy_init_globals (void)
+{
+        /* Initialization is the same as for the non-reentrant scanner.
+     * This function is called from zconflex_destroy(), so don't allocate here.
+     */
+
+    (yy_buffer_stack) = 0;
+    (yy_buffer_stack_top) = 0;
+    (yy_buffer_stack_max) = 0;
+    (yy_c_buf_p) = (char *) 0;
+    (yy_init) = 0;
+    (yy_start) = 0;
+
+/* Defined in main.c */
+#ifdef YY_STDINIT
+    zconfin = stdin;
+    zconfout = stdout;
+#else
+    zconfin = (FILE *) 0;
+    zconfout = (FILE *) 0;
+#endif
+
+    /* For future reference: Set errno on error, since we are called by
+     * zconflex_init()
+     */
+    return 0;
+}
+
+/* zconflex_destroy is for both reentrant and non-reentrant scanners. */
+int zconflex_destroy  (void)
+{
+    
+    /* Pop the buffer stack, destroying each element. */
+	while(YY_CURRENT_BUFFER){
+		zconf_delete_buffer(YY_CURRENT_BUFFER  );
+		YY_CURRENT_BUFFER_LVALUE = NULL;
+		zconfpop_buffer_state();
+	}
+
+	/* Destroy the stack itself. */
+	zconffree((yy_buffer_stack) );
+	(yy_buffer_stack) = NULL;
+
+    /* Reset the globals. This is important in a non-reentrant scanner so the next time
+     * zconflex() is called, initialization will occur. */
+    yy_init_globals( );
+
+    return 0;
+}
+
+/*
+ * Internal utility routines.
+ */
+
+#ifndef yytext_ptr
+static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )
+{
+	register int i;
+	for ( i = 0; i < n; ++i )
+		s1[i] = s2[i];
+}
+#endif
+
+#ifdef YY_NEED_STRLEN
+static int yy_flex_strlen (yyconst char * s )
+{
+	register int n;
+	for ( n = 0; s[n]; ++n )
+		;
+
+	return n;
+}
+#endif
+
+void *zconfalloc (yy_size_t  size )
+{
+	return (void *) malloc( size );
+}
+
+void *zconfrealloc  (void * ptr, yy_size_t  size )
+{
+	/* The cast to (char *) in the following accommodates both
+	 * implementations that use char* generic pointers, and those
+	 * that use void* generic pointers.  It works with the latter
+	 * because both ANSI C and C++ allow castless assignment from
+	 * any pointer type to void*, and deal with argument conversions
+	 * as though doing an assignment.
+	 */
+	return (void *) realloc( (char *) ptr, size );
+}
+
+void zconffree (void * ptr )
+{
+	free( (char *) ptr );	/* see zconfrealloc() for (char *) cast */
+}
+
+#define YYTABLES_NAME "yytables"
+
+void zconf_starthelp(void)
+{
+	new_string();
+	last_ts = first_ts = 0;
+	BEGIN(HELP);
+}
+
+static void zconf_endhelp(void)
+{
+	zconflval.string = text;
+	BEGIN(INITIAL);
+}
+
+/*
+ * Try to open specified file with following names:
+ * ./name
+ * $(srctree)/name
+ * The latter is used when srctree is separate from objtree
+ * when compiling the kernel.
+ * Return NULL if file is not found.
+ */
+FILE *zconf_fopen(const char *name)
+{
+	char *env, fullname[PATH_MAX+1];
+	FILE *f;
+
+	f = fopen(name, "r");
+	if (!f && name != NULL && name[0] != '/') {
+		env = getenv(SRCTREE);
+		if (env) {
+			sprintf(fullname, "%s/%s", env, name);
+			f = fopen(fullname, "r");
+		}
+	}
+	return f;
+}
+
+void zconf_initscan(const char *name)
+{
+	zconfin = zconf_fopen(name);
+	if (!zconfin) {
+		printf("can't find file %s\n", name);
+		exit(1);
+	}
+
+	current_buf = malloc(sizeof(*current_buf));
+	memset(current_buf, 0, sizeof(*current_buf));
+
+	current_file = file_lookup(name);
+	current_file->lineno = 1;
+}
+
+void zconf_nextfile(const char *name)
+{
+	struct file *iter;
+	struct file *file = file_lookup(name);
+	struct buffer *buf = malloc(sizeof(*buf));
+	memset(buf, 0, sizeof(*buf));
+
+	current_buf->state = YY_CURRENT_BUFFER;
+	zconfin = zconf_fopen(file->name);
+	if (!zconfin) {
+		printf("%s:%d: can't open file \"%s\"\n",
+		    zconf_curname(), zconf_lineno(), file->name);
+		exit(1);
+	}
+	zconf_switch_to_buffer(zconf_create_buffer(zconfin,YY_BUF_SIZE));
+	buf->parent = current_buf;
+	current_buf = buf;
+
+	for (iter = current_file->parent; iter; iter = iter->parent ) {
+		if (!strcmp(current_file->name,iter->name) ) {
+			printf("%s:%d: recursive inclusion detected. "
+			       "Inclusion path:\n  current file : '%s'\n",
+			       zconf_curname(), zconf_lineno(),
+			       zconf_curname());
+			iter = current_file->parent;
+			while (iter && \
+			       strcmp(iter->name,current_file->name)) {
+				printf("  included from: '%s:%d'\n",
+				       iter->name, iter->lineno-1);
+				iter = iter->parent;
+			}
+			if (iter)
+				printf("  included from: '%s:%d'\n",
+				       iter->name, iter->lineno+1);
+			exit(1);
+		}
+	}
+	file->lineno = 1;
+	file->parent = current_file;
+	current_file = file;
+}
+
+static void zconf_endfile(void)
+{
+	struct buffer *parent;
+
+	current_file = current_file->parent;
+
+	parent = current_buf->parent;
+	if (parent) {
+		fclose(zconfin);
+		zconf_delete_buffer(YY_CURRENT_BUFFER);
+		zconf_switch_to_buffer(parent->state);
+	}
+	free(current_buf);
+	current_buf = parent;
+}
+
+int zconf_lineno(void)
+{
+	return current_pos.lineno;
+}
+
+const char *zconf_curname(void)
+{
+	return current_pos.file ? current_pos.file->name : "<none>";
+}
+
diff -uprN ../linux-3.4.104-vanilla/scripts/kconfig/zconf.tab.c linux-3.4.104-syssec_hw2_app2/scripts/kconfig/zconf.tab.c
--- ../linux-3.4.104-vanilla/scripts/kconfig/zconf.tab.c	1969-12-31 19:00:00.000000000 -0500
+++ linux-3.4.104-syssec_hw2_app2/scripts/kconfig/zconf.tab.c	2014-11-05 20:53:05.000000000 -0500
@@ -0,0 +1,2504 @@
+/* A Bison parser, made by GNU Bison 2.4.3.  */
+
+/* Skeleton implementation for Bison's Yacc-like parsers in C
+   
+      Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006,
+   2009, 2010 Free Software Foundation, Inc.
+   
+   This program is free software: you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation, either version 3 of the License, or
+   (at your option) any later version.
+   
+   This program is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+   GNU General Public License for more details.
+   
+   You should have received a copy of the GNU General Public License
+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+
+/* As a special exception, you may create a larger work that contains
+   part or all of the Bison parser skeleton and distribute that work
+   under terms of your choice, so long as that work isn't itself a
+   parser generator using the skeleton or a modified version thereof
+   as a parser skeleton.  Alternatively, if you modify or redistribute
+   the parser skeleton itself, you may (at your option) remove this
+   special exception, which will cause the skeleton and the resulting
+   Bison output files to be licensed under the GNU General Public
+   License without this special exception.
+   
+   This special exception was added by the Free Software Foundation in
+   version 2.2 of Bison.  */
+
+/* C LALR(1) parser skeleton written by Richard Stallman, by
+   simplifying the original so-called "semantic" parser.  */
+
+/* All symbols defined below should begin with yy or YY, to avoid
+   infringing on user name space.  This should be done even for local
+   variables, as they might otherwise be expanded by user macros.
+   There are some unavoidable exceptions within include files to
+   define necessary library symbols; they are noted "INFRINGES ON
+   USER NAME SPACE" below.  */
+
+/* Identify Bison output.  */
+#define YYBISON 1
+
+/* Bison version.  */
+#define YYBISON_VERSION "2.4.3"
+
+/* Skeleton name.  */
+#define YYSKELETON_NAME "yacc.c"
+
+/* Pure parsers.  */
+#define YYPURE 0
+
+/* Push parsers.  */
+#define YYPUSH 0
+
+/* Pull parsers.  */
+#define YYPULL 1
+
+/* Using locations.  */
+#define YYLSP_NEEDED 0
+
+/* Substitute the variable and function names.  */
+#define yyparse         zconfparse
+#define yylex           zconflex
+#define yyerror         zconferror
+#define yylval          zconflval
+#define yychar          zconfchar
+#define yydebug         zconfdebug
+#define yynerrs         zconfnerrs
+
+
+/* Copy the first part of user declarations.  */
+
+
+/*
+ * Copyright (C) 2002 Roman Zippel <zippel@linux-m68k.org>
+ * Released under the terms of the GNU GPL v2.0.
+ */
+
+#include <ctype.h>
+#include <stdarg.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <stdbool.h>
+
+#include "lkc.h"
+
+#define printd(mask, fmt...) if (cdebug & (mask)) printf(fmt)
+
+#define PRINTD		0x0001
+#define DEBUG_PARSE	0x0002
+
+int cdebug = PRINTD;
+
+extern int zconflex(void);
+static void zconfprint(const char *err, ...);
+static void zconf_error(const char *err, ...);
+static void zconferror(const char *err);
+static bool zconf_endtoken(const struct kconf_id *id, int starttoken, int endtoken);
+
+struct symbol *symbol_hash[SYMBOL_HASHSIZE];
+
+static struct menu *current_menu, *current_entry;
+
+
+
+
+/* Enabling traces.  */
+#ifndef YYDEBUG
+# define YYDEBUG 1
+#endif
+
+/* Enabling verbose error messages.  */
+#ifdef YYERROR_VERBOSE
+# undef YYERROR_VERBOSE
+# define YYERROR_VERBOSE 1
+#else
+# define YYERROR_VERBOSE 0
+#endif
+
+/* Enabling the token table.  */
+#ifndef YYTOKEN_TABLE
+# define YYTOKEN_TABLE 0
+#endif
+
+
+/* Tokens.  */
+#ifndef YYTOKENTYPE
+# define YYTOKENTYPE
+   /* Put the tokens into the symbol table, so that GDB and other debuggers
+      know about them.  */
+   enum yytokentype {
+     T_MAINMENU = 258,
+     T_MENU = 259,
+     T_ENDMENU = 260,
+     T_SOURCE = 261,
+     T_CHOICE = 262,
+     T_ENDCHOICE = 263,
+     T_COMMENT = 264,
+     T_CONFIG = 265,
+     T_MENUCONFIG = 266,
+     T_HELP = 267,
+     T_HELPTEXT = 268,
+     T_IF = 269,
+     T_ENDIF = 270,
+     T_DEPENDS = 271,
+     T_OPTIONAL = 272,
+     T_PROMPT = 273,
+     T_TYPE = 274,
+     T_DEFAULT = 275,
+     T_SELECT = 276,
+     T_RANGE = 277,
+     T_VISIBLE = 278,
+     T_OPTION = 279,
+     T_ON = 280,
+     T_WORD = 281,
+     T_WORD_QUOTE = 282,
+     T_UNEQUAL = 283,
+     T_CLOSE_PAREN = 284,
+     T_OPEN_PAREN = 285,
+     T_EOL = 286,
+     T_OR = 287,
+     T_AND = 288,
+     T_EQUAL = 289,
+     T_NOT = 290
+   };
+#endif
+
+
+
+#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
+typedef union YYSTYPE
+{
+
+
+	char *string;
+	struct file *file;
+	struct symbol *symbol;
+	struct expr *expr;
+	struct menu *menu;
+	const struct kconf_id *id;
+
+
+
+} YYSTYPE;
+# define YYSTYPE_IS_TRIVIAL 1
+# define yystype YYSTYPE /* obsolescent; will be withdrawn */
+# define YYSTYPE_IS_DECLARED 1
+#endif
+
+
+/* Copy the second part of user declarations.  */
+
+
+/* Include zconf.hash.c here so it can see the token constants. */
+#include "zconf.hash.c"
+
+
+
+#ifdef short
+# undef short
+#endif
+
+#ifdef YYTYPE_UINT8
+typedef YYTYPE_UINT8 yytype_uint8;
+#else
+typedef unsigned char yytype_uint8;
+#endif
+
+#ifdef YYTYPE_INT8
+typedef YYTYPE_INT8 yytype_int8;
+#elif (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+typedef signed char yytype_int8;
+#else
+typedef short int yytype_int8;
+#endif
+
+#ifdef YYTYPE_UINT16
+typedef YYTYPE_UINT16 yytype_uint16;
+#else
+typedef unsigned short int yytype_uint16;
+#endif
+
+#ifdef YYTYPE_INT16
+typedef YYTYPE_INT16 yytype_int16;
+#else
+typedef short int yytype_int16;
+#endif
+
+#ifndef YYSIZE_T
+# ifdef __SIZE_TYPE__
+#  define YYSIZE_T __SIZE_TYPE__
+# elif defined size_t
+#  define YYSIZE_T size_t
+# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
+#  define YYSIZE_T size_t
+# else
+#  define YYSIZE_T unsigned int
+# endif
+#endif
+
+#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)
+
+#ifndef YY_
+# if defined YYENABLE_NLS && YYENABLE_NLS
+#  if ENABLE_NLS
+#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
+#   define YY_(msgid) dgettext ("bison-runtime", msgid)
+#  endif
+# endif
+# ifndef YY_
+#  define YY_(msgid) msgid
+# endif
+#endif
+
+/* Suppress unused-variable warnings by "using" E.  */
+#if ! defined lint || defined __GNUC__
+# define YYUSE(e) ((void) (e))
+#else
+# define YYUSE(e) /* empty */
+#endif
+
+/* Identity function, used to suppress warnings about constant conditions.  */
+#ifndef lint
+# define YYID(n) (n)
+#else
+#if (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+static int
+YYID (int yyi)
+#else
+static int
+YYID (yyi)
+    int yyi;
+#endif
+{
+  return yyi;
+}
+#endif
+
+#if ! defined yyoverflow || YYERROR_VERBOSE
+
+/* The parser invokes alloca or malloc; define the necessary symbols.  */
+
+# ifdef YYSTACK_USE_ALLOCA
+#  if YYSTACK_USE_ALLOCA
+#   ifdef __GNUC__
+#    define YYSTACK_ALLOC __builtin_alloca
+#   elif defined __BUILTIN_VA_ARG_INCR
+#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
+#   elif defined _AIX
+#    define YYSTACK_ALLOC __alloca
+#   elif defined _MSC_VER
+#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
+#    define alloca _alloca
+#   else
+#    define YYSTACK_ALLOC alloca
+#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
+#     ifndef _STDLIB_H
+#      define _STDLIB_H 1
+#     endif
+#    endif
+#   endif
+#  endif
+# endif
+
+# ifdef YYSTACK_ALLOC
+   /* Pacify GCC's `empty if-body' warning.  */
+#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
+#  ifndef YYSTACK_ALLOC_MAXIMUM
+    /* The OS might guarantee only one guard page at the bottom of the stack,
+       and a page size can be as small as 4096 bytes.  So we cannot safely
+       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
+       to allow for a few compiler-allocated temporary stack slots.  */
+#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
+#  endif
+# else
+#  define YYSTACK_ALLOC YYMALLOC
+#  define YYSTACK_FREE YYFREE
+#  ifndef YYSTACK_ALLOC_MAXIMUM
+#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
+#  endif
+#  if (defined __cplusplus && ! defined _STDLIB_H \
+       && ! ((defined YYMALLOC || defined malloc) \
+	     && (defined YYFREE || defined free)))
+#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
+#   ifndef _STDLIB_H
+#    define _STDLIB_H 1
+#   endif
+#  endif
+#  ifndef YYMALLOC
+#   define YYMALLOC malloc
+#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
+#   endif
+#  endif
+#  ifndef YYFREE
+#   define YYFREE free
+#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+void free (void *); /* INFRINGES ON USER NAME SPACE */
+#   endif
+#  endif
+# endif
+#endif /* ! defined yyoverflow || YYERROR_VERBOSE */
+
+
+#if (! defined yyoverflow \
+     && (! defined __cplusplus \
+	 || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))
+
+/* A type that is properly aligned for any stack member.  */
+union yyalloc
+{
+  yytype_int16 yyss_alloc;
+  YYSTYPE yyvs_alloc;
+};
+
+/* The size of the maximum gap between one aligned stack and the next.  */
+# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)
+
+/* The size of an array large to enough to hold all stacks, each with
+   N elements.  */
+# define YYSTACK_BYTES(N) \
+     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
+      + YYSTACK_GAP_MAXIMUM)
+
+/* Copy COUNT objects from FROM to TO.  The source and destination do
+   not overlap.  */
+# ifndef YYCOPY
+#  if defined __GNUC__ && 1 < __GNUC__
+#   define YYCOPY(To, From, Count) \
+      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
+#  else
+#   define YYCOPY(To, From, Count)		\
+      do					\
+	{					\
+	  YYSIZE_T yyi;				\
+	  for (yyi = 0; yyi < (Count); yyi++)	\
+	    (To)[yyi] = (From)[yyi];		\
+	}					\
+      while (YYID (0))
+#  endif
+# endif
+
+/* Relocate STACK from its old location to the new one.  The
+   local variables YYSIZE and YYSTACKSIZE give the old and new number of
+   elements in the stack, and YYPTR gives the new location of the
+   stack.  Advance YYPTR to a properly aligned location for the next
+   stack.  */
+# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
+    do									\
+      {									\
+	YYSIZE_T yynewbytes;						\
+	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
+	Stack = &yyptr->Stack_alloc;					\
+	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
+	yyptr += yynewbytes / sizeof (*yyptr);				\
+      }									\
+    while (YYID (0))
+
+#endif
+
+/* YYFINAL -- State number of the termination state.  */
+#define YYFINAL  11
+/* YYLAST -- Last index in YYTABLE.  */
+#define YYLAST   290
+
+/* YYNTOKENS -- Number of terminals.  */
+#define YYNTOKENS  36
+/* YYNNTS -- Number of nonterminals.  */
+#define YYNNTS  50
+/* YYNRULES -- Number of rules.  */
+#define YYNRULES  118
+/* YYNRULES -- Number of states.  */
+#define YYNSTATES  191
+
+/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
+#define YYUNDEFTOK  2
+#define YYMAXUTOK   290
+
+#define YYTRANSLATE(YYX)						\
+  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)
+
+/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
+static const yytype_uint8 yytranslate[] =
+{
+       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
+       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
+       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
+      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
+      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
+      35
+};
+
+#if YYDEBUG
+/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
+   YYRHS.  */
+static const yytype_uint16 yyprhs[] =
+{
+       0,     0,     3,     6,     8,    11,    13,    14,    17,    20,
+      23,    26,    31,    36,    40,    42,    44,    46,    48,    50,
+      52,    54,    56,    58,    60,    62,    64,    66,    68,    72,
+      75,    79,    82,    86,    89,    90,    93,    96,    99,   102,
+     105,   108,   112,   117,   122,   127,   133,   137,   138,   142,
+     143,   146,   150,   153,   155,   159,   160,   163,   166,   169,
+     172,   175,   180,   184,   187,   192,   193,   196,   200,   202,
+     206,   207,   210,   213,   216,   220,   224,   228,   230,   234,
+     235,   238,   241,   244,   248,   252,   255,   258,   261,   262,
+     265,   268,   271,   276,   277,   280,   283,   286,   287,   290,
+     292,   294,   297,   300,   303,   305,   308,   309,   312,   314,
+     318,   322,   326,   329,   333,   337,   339,   341,   342
+};
+
+/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
+static const yytype_int8 yyrhs[] =
+{
+      37,     0,    -1,    81,    38,    -1,    38,    -1,    63,    39,
+      -1,    39,    -1,    -1,    39,    41,    -1,    39,    55,    -1,
+      39,    67,    -1,    39,    80,    -1,    39,    26,     1,    31,
+      -1,    39,    40,     1,    31,    -1,    39,     1,    31,    -1,
+      16,    -1,    18,    -1,    19,    -1,    21,    -1,    17,    -1,
+      22,    -1,    20,    -1,    23,    -1,    31,    -1,    61,    -1,
+      71,    -1,    44,    -1,    46,    -1,    69,    -1,    26,     1,
+      31,    -1,     1,    31,    -1,    10,    26,    31,    -1,    43,
+      47,    -1,    11,    26,    31,    -1,    45,    47,    -1,    -1,
+      47,    48,    -1,    47,    49,    -1,    47,    75,    -1,    47,
+      73,    -1,    47,    42,    -1,    47,    31,    -1,    19,    78,
+      31,    -1,    18,    79,    82,    31,    -1,    20,    83,    82,
+      31,    -1,    21,    26,    82,    31,    -1,    22,    84,    84,
+      82,    31,    -1,    24,    50,    31,    -1,    -1,    50,    26,
+      51,    -1,    -1,    34,    79,    -1,     7,    85,    31,    -1,
+      52,    56,    -1,    80,    -1,    53,    58,    54,    -1,    -1,
+      56,    57,    -1,    56,    75,    -1,    56,    73,    -1,    56,
+      31,    -1,    56,    42,    -1,    18,    79,    82,    31,    -1,
+      19,    78,    31,    -1,    17,    31,    -1,    20,    26,    82,
+      31,    -1,    -1,    58,    41,    -1,    14,    83,    81,    -1,
+      80,    -1,    59,    62,    60,    -1,    -1,    62,    41,    -1,
+      62,    67,    -1,    62,    55,    -1,     3,    79,    81,    -1,
+       4,    79,    31,    -1,    64,    76,    74,    -1,    80,    -1,
+      65,    68,    66,    -1,    -1,    68,    41,    -1,    68,    67,
+      -1,    68,    55,    -1,     6,    79,    31,    -1,     9,    79,
+      31,    -1,    70,    74,    -1,    12,    31,    -1,    72,    13,
+      -1,    -1,    74,    75,    -1,    74,    31,    -1,    74,    42,
+      -1,    16,    25,    83,    31,    -1,    -1,    76,    77,    -1,
+      76,    31,    -1,    23,    82,    -1,    -1,    79,    82,    -1,
+      26,    -1,    27,    -1,     5,    31,    -1,     8,    31,    -1,
+      15,    31,    -1,    31,    -1,    81,    31,    -1,    -1,    14,
+      83,    -1,    84,    -1,    84,    34,    84,    -1,    84,    28,
+      84,    -1,    30,    83,    29,    -1,    35,    83,    -1,    83,
+      32,    83,    -1,    83,    33,    83,    -1,    26,    -1,    27,
+      -1,    -1,    26,    -1
+};
+
+/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
+static const yytype_uint16 yyrline[] =
+{
+       0,   104,   104,   104,   106,   106,   108,   110,   111,   112,
+     113,   114,   115,   119,   123,   123,   123,   123,   123,   123,
+     123,   123,   127,   128,   129,   130,   131,   132,   136,   137,
+     143,   151,   157,   165,   175,   177,   178,   179,   180,   181,
+     182,   185,   193,   199,   209,   215,   221,   224,   226,   237,
+     238,   243,   252,   257,   265,   268,   270,   271,   272,   273,
+     274,   277,   283,   294,   300,   310,   312,   317,   325,   333,
+     336,   338,   339,   340,   345,   352,   359,   364,   372,   375,
+     377,   378,   379,   382,   390,   397,   404,   410,   417,   419,
+     420,   421,   424,   432,   434,   435,   438,   445,   447,   452,
+     453,   456,   457,   458,   462,   463,   466,   467,   470,   471,
+     472,   473,   474,   475,   476,   479,   480,   483,   484
+};
+#endif
+
+#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
+/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
+   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
+static const char *const yytname[] =
+{
+  "$end", "error", "$undefined", "T_MAINMENU", "T_MENU", "T_ENDMENU",
+  "T_SOURCE", "T_CHOICE", "T_ENDCHOICE", "T_COMMENT", "T_CONFIG",
+  "T_MENUCONFIG", "T_HELP", "T_HELPTEXT", "T_IF", "T_ENDIF", "T_DEPENDS",
+  "T_OPTIONAL", "T_PROMPT", "T_TYPE", "T_DEFAULT", "T_SELECT", "T_RANGE",
+  "T_VISIBLE", "T_OPTION", "T_ON", "T_WORD", "T_WORD_QUOTE", "T_UNEQUAL",
+  "T_CLOSE_PAREN", "T_OPEN_PAREN", "T_EOL", "T_OR", "T_AND", "T_EQUAL",
+  "T_NOT", "$accept", "input", "start", "stmt_list", "option_name",
+  "common_stmt", "option_error", "config_entry_start", "config_stmt",
+  "menuconfig_entry_start", "menuconfig_stmt", "config_option_list",
+  "config_option", "symbol_option", "symbol_option_list",
+  "symbol_option_arg", "choice", "choice_entry", "choice_end",
+  "choice_stmt", "choice_option_list", "choice_option", "choice_block",
+  "if_entry", "if_end", "if_stmt", "if_block", "mainmenu_stmt", "menu",
+  "menu_entry", "menu_end", "menu_stmt", "menu_block", "source_stmt",
+  "comment", "comment_stmt", "help_start", "help", "depends_list",
+  "depends", "visibility_list", "visible", "prompt_stmt_opt", "prompt",
+  "end", "nl", "if_expr", "expr", "symbol", "word_opt", 0
+};
+#endif
+
+# ifdef YYPRINT
+/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
+   token YYLEX-NUM.  */
+static const yytype_uint16 yytoknum[] =
+{
+       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
+     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
+     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
+     285,   286,   287,   288,   289,   290
+};
+# endif
+
+/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
+static const yytype_uint8 yyr1[] =
+{
+       0,    36,    37,    37,    38,    38,    39,    39,    39,    39,
+      39,    39,    39,    39,    40,    40,    40,    40,    40,    40,
+      40,    40,    41,    41,    41,    41,    41,    41,    42,    42,
+      43,    44,    45,    46,    47,    47,    47,    47,    47,    47,
+      47,    48,    48,    48,    48,    48,    49,    50,    50,    51,
+      51,    52,    53,    54,    55,    56,    56,    56,    56,    56,
+      56,    57,    57,    57,    57,    58,    58,    59,    60,    61,
+      62,    62,    62,    62,    63,    64,    65,    66,    67,    68,
+      68,    68,    68,    69,    70,    71,    72,    73,    74,    74,
+      74,    74,    75,    76,    76,    76,    77,    78,    78,    79,
+      79,    80,    80,    80,    81,    81,    82,    82,    83,    83,
+      83,    83,    83,    83,    83,    84,    84,    85,    85
+};
+
+/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
+static const yytype_uint8 yyr2[] =
+{
+       0,     2,     2,     1,     2,     1,     0,     2,     2,     2,
+       2,     4,     4,     3,     1,     1,     1,     1,     1,     1,
+       1,     1,     1,     1,     1,     1,     1,     1,     3,     2,
+       3,     2,     3,     2,     0,     2,     2,     2,     2,     2,
+       2,     3,     4,     4,     4,     5,     3,     0,     3,     0,
+       2,     3,     2,     1,     3,     0,     2,     2,     2,     2,
+       2,     4,     3,     2,     4,     0,     2,     3,     1,     3,
+       0,     2,     2,     2,     3,     3,     3,     1,     3,     0,
+       2,     2,     2,     3,     3,     2,     2,     2,     0,     2,
+       2,     2,     4,     0,     2,     2,     2,     0,     2,     1,
+       1,     2,     2,     2,     1,     2,     0,     2,     1,     3,
+       3,     3,     2,     3,     3,     1,     1,     0,     1
+};
+
+/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
+   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
+   means the default is an error.  */
+static const yytype_uint8 yydefact[] =
+{
+       6,     0,   104,     0,     3,     0,     6,     6,    99,   100,
+       0,     1,     0,     0,     0,     0,   117,     0,     0,     0,
+       0,     0,     0,    14,    18,    15,    16,    20,    17,    19,
+      21,     0,    22,     0,     7,    34,    25,    34,    26,    55,
+      65,     8,    70,    23,    93,    79,     9,    27,    88,    24,
+      10,     0,   105,     2,    74,    13,     0,   101,     0,   118,
+       0,   102,     0,     0,     0,   115,   116,     0,     0,     0,
+     108,   103,     0,     0,     0,     0,     0,     0,     0,    88,
+       0,     0,    75,    83,    51,    84,    30,    32,     0,   112,
+       0,     0,    67,     0,     0,    11,    12,     0,     0,     0,
+       0,    97,     0,     0,     0,    47,     0,    40,    39,    35,
+      36,     0,    38,    37,     0,     0,    97,     0,    59,    60,
+      56,    58,    57,    66,    54,    53,    71,    73,    69,    72,
+      68,   106,    95,     0,    94,    80,    82,    78,    81,    77,
+      90,    91,    89,   111,   113,   114,   110,   109,    29,    86,
+       0,   106,     0,   106,   106,   106,     0,     0,     0,    87,
+      63,   106,     0,   106,     0,    96,     0,     0,    41,    98,
+       0,     0,   106,    49,    46,    28,     0,    62,     0,   107,
+      92,    42,    43,    44,     0,     0,    48,    61,    64,    45,
+      50
+};
+
+/* YYDEFGOTO[NTERM-NUM].  */
+static const yytype_int16 yydefgoto[] =
+{
+      -1,     3,     4,     5,    33,    34,   108,    35,    36,    37,
+      38,    74,   109,   110,   157,   186,    39,    40,   124,    41,
+      76,   120,    77,    42,   128,    43,    78,     6,    44,    45,
+     137,    46,    80,    47,    48,    49,   111,   112,    81,   113,
+      79,   134,   152,   153,    50,     7,   165,    69,    70,    60
+};
+
+/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
+   STATE-NUM.  */
+#define YYPACT_NINF -90
+static const yytype_int16 yypact[] =
+{
+       4,    42,   -90,    96,   -90,   111,   -90,    15,   -90,   -90,
+      75,   -90,    82,    42,   104,    42,   110,   107,    42,   115,
+     125,    -4,   121,   -90,   -90,   -90,   -90,   -90,   -90,   -90,
+     -90,   162,   -90,   163,   -90,   -90,   -90,   -90,   -90,   -90,
+     -90,   -90,   -90,   -90,   -90,   -90,   -90,   -90,   -90,   -90,
+     -90,   139,   -90,   -90,   138,   -90,   142,   -90,   143,   -90,
+     152,   -90,   164,   167,   168,   -90,   -90,    -4,    -4,    77,
+     -18,   -90,   177,   185,    33,    71,   195,   247,   236,    -2,
+     236,   171,   -90,   -90,   -90,   -90,   -90,   -90,    41,   -90,
+      -4,    -4,   138,    97,    97,   -90,   -90,   186,   187,   194,
+      42,    42,    -4,   196,    97,   -90,   219,   -90,   -90,   -90,
+     -90,   210,   -90,   -90,   204,    42,    42,   199,   -90,   -90,
+     -90,   -90,   -90,   -90,   -90,   -90,   -90,   -90,   -90,   -90,
+     -90,   222,   -90,   223,   -90,   -90,   -90,   -90,   -90,   -90,
+     -90,   -90,   -90,   -90,   215,   -90,   -90,   -90,   -90,   -90,
+      -4,   222,   228,   222,    -5,   222,    97,    35,   229,   -90,
+     -90,   222,   232,   222,    -4,   -90,   135,   233,   -90,   -90,
+     234,   235,   222,   240,   -90,   -90,   237,   -90,   239,   -13,
+     -90,   -90,   -90,   -90,   244,    42,   -90,   -90,   -90,   -90,
+     -90
+};
+
+/* YYPGOTO[NTERM-NUM].  */
+static const yytype_int16 yypgoto[] =
+{
+     -90,   -90,   269,   271,   -90,    23,   -70,   -90,   -90,   -90,
+     -90,   243,   -90,   -90,   -90,   -90,   -90,   -90,   -90,   -48,
+     -90,   -90,   -90,   -90,   -90,   -90,   -90,   -90,   -90,   -90,
+     -90,   -20,   -90,   -90,   -90,   -90,   -90,   206,   205,   -68,
+     -90,   -90,   169,    -1,    27,    -7,   118,   -66,   -89,   -90
+};
+
+/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
+   positive, shift that token.  If negative, reduce the rule which
+   number is the opposite.  If zero, do what YYDEFACT says.
+   If YYTABLE_NINF, syntax error.  */
+#define YYTABLE_NINF -86
+static const yytype_int16 yytable[] =
+{
+      10,    88,    89,    54,   146,   147,   119,     1,   122,   164,
+      93,   141,    56,   142,    58,   156,    94,    62,     1,    90,
+      91,   131,    65,    66,   144,   145,    67,    90,    91,   132,
+     127,    68,   136,   -31,    97,     2,   154,   -31,   -31,   -31,
+     -31,   -31,   -31,   -31,   -31,    98,    52,   -31,   -31,    99,
+     -31,   100,   101,   102,   103,   104,   -31,   105,   129,   106,
+     138,   173,    92,   141,   107,   142,   174,   172,     8,     9,
+     143,   -33,    97,    90,    91,   -33,   -33,   -33,   -33,   -33,
+     -33,   -33,   -33,    98,   166,   -33,   -33,    99,   -33,   100,
+     101,   102,   103,   104,   -33,   105,    11,   106,   179,   151,
+     123,   126,   107,   135,   125,   130,     2,   139,     2,    90,
+      91,    -5,    12,    55,   161,    13,    14,    15,    16,    17,
+      18,    19,    20,    65,    66,    21,    22,    23,    24,    25,
+      26,    27,    28,    29,    30,    57,    59,    31,    61,    -4,
+      12,    63,    32,    13,    14,    15,    16,    17,    18,    19,
+      20,    64,    71,    21,    22,    23,    24,    25,    26,    27,
+      28,    29,    30,    72,    73,    31,   180,    90,    91,    52,
+      32,   -85,    97,    82,    83,   -85,   -85,   -85,   -85,   -85,
+     -85,   -85,   -85,    84,   190,   -85,   -85,    99,   -85,   -85,
+     -85,   -85,   -85,   -85,   -85,    85,    97,   106,    86,    87,
+     -52,   -52,   140,   -52,   -52,   -52,   -52,    98,    95,   -52,
+     -52,    99,   114,   115,   116,   117,    96,   148,   149,   150,
+     158,   106,   155,   159,    97,   163,   118,   -76,   -76,   -76,
+     -76,   -76,   -76,   -76,   -76,   160,   164,   -76,   -76,    99,
+      13,    14,    15,    16,    17,    18,    19,    20,    91,   106,
+      21,    22,    14,    15,   140,    17,    18,    19,    20,   168,
+     175,    21,    22,   177,   181,   182,   183,    32,   187,   167,
+     188,   169,   170,   171,   185,   189,    53,    51,    32,   176,
+      75,   178,   121,     0,   133,   162,     0,     0,     0,     0,
+     184
+};
+
+static const yytype_int16 yycheck[] =
+{
+       1,    67,    68,    10,    93,    94,    76,     3,    76,    14,
+      28,    81,    13,    81,    15,   104,    34,    18,     3,    32,
+      33,    23,    26,    27,    90,    91,    30,    32,    33,    31,
+      78,    35,    80,     0,     1,    31,   102,     4,     5,     6,
+       7,     8,     9,    10,    11,    12,    31,    14,    15,    16,
+      17,    18,    19,    20,    21,    22,    23,    24,    78,    26,
+      80,    26,    69,   133,    31,   133,    31,   156,    26,    27,
+      29,     0,     1,    32,    33,     4,     5,     6,     7,     8,
+       9,    10,    11,    12,   150,    14,    15,    16,    17,    18,
+      19,    20,    21,    22,    23,    24,     0,    26,   164,   100,
+      77,    78,    31,    80,    77,    78,    31,    80,    31,    32,
+      33,     0,     1,    31,   115,     4,     5,     6,     7,     8,
+       9,    10,    11,    26,    27,    14,    15,    16,    17,    18,
+      19,    20,    21,    22,    23,    31,    26,    26,    31,     0,
+       1,    26,    31,     4,     5,     6,     7,     8,     9,    10,
+      11,    26,    31,    14,    15,    16,    17,    18,    19,    20,
+      21,    22,    23,     1,     1,    26,    31,    32,    33,    31,
+      31,     0,     1,    31,    31,     4,     5,     6,     7,     8,
+       9,    10,    11,    31,   185,    14,    15,    16,    17,    18,
+      19,    20,    21,    22,    23,    31,     1,    26,    31,    31,
+       5,     6,    31,     8,     9,    10,    11,    12,    31,    14,
+      15,    16,    17,    18,    19,    20,    31,    31,    31,    25,
+       1,    26,    26,    13,     1,    26,    31,     4,     5,     6,
+       7,     8,     9,    10,    11,    31,    14,    14,    15,    16,
+       4,     5,     6,     7,     8,     9,    10,    11,    33,    26,
+      14,    15,     5,     6,    31,     8,     9,    10,    11,    31,
+      31,    14,    15,    31,    31,    31,    31,    31,    31,   151,
+      31,   153,   154,   155,    34,    31,     7,     6,    31,   161,
+      37,   163,    76,    -1,    79,   116,    -1,    -1,    -1,    -1,
+     172
+};
+
+/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
+   symbol of state STATE-NUM.  */
+static const yytype_uint8 yystos[] =
+{
+       0,     3,    31,    37,    38,    39,    63,    81,    26,    27,
+      79,     0,     1,     4,     5,     6,     7,     8,     9,    10,
+      11,    14,    15,    16,    17,    18,    19,    20,    21,    22,
+      23,    26,    31,    40,    41,    43,    44,    45,    46,    52,
+      53,    55,    59,    61,    64,    65,    67,    69,    70,    71,
+      80,    39,    31,    38,    81,    31,    79,    31,    79,    26,
+      85,    31,    79,    26,    26,    26,    27,    30,    35,    83,
+      84,    31,     1,     1,    47,    47,    56,    58,    62,    76,
+      68,    74,    31,    31,    31,    31,    31,    31,    83,    83,
+      32,    33,    81,    28,    34,    31,    31,     1,    12,    16,
+      18,    19,    20,    21,    22,    24,    26,    31,    42,    48,
+      49,    72,    73,    75,    17,    18,    19,    20,    31,    42,
+      57,    73,    75,    41,    54,    80,    41,    55,    60,    67,
+      80,    23,    31,    74,    77,    41,    55,    66,    67,    80,
+      31,    42,    75,    29,    83,    83,    84,    84,    31,    31,
+      25,    79,    78,    79,    83,    26,    84,    50,     1,    13,
+      31,    79,    78,    26,    14,    82,    83,    82,    31,    82,
+      82,    82,    84,    26,    31,    31,    82,    31,    82,    83,
+      31,    31,    31,    31,    82,    34,    51,    31,    31,    31,
+      79
+};
+
+#define yyerrok		(yyerrstatus = 0)
+#define yyclearin	(yychar = YYEMPTY)
+#define YYEMPTY		(-2)
+#define YYEOF		0
+
+#define YYACCEPT	goto yyacceptlab
+#define YYABORT		goto yyabortlab
+#define YYERROR		goto yyerrorlab
+
+
+/* Like YYERROR except do call yyerror.  This remains here temporarily
+   to ease the transition to the new meaning of YYERROR, for GCC.
+   Once GCC version 2 has supplanted version 1, this can go.  However,
+   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
+   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
+   discussed.  */
+
+#define YYFAIL		goto yyerrlab
+#if defined YYFAIL
+  /* This is here to suppress warnings from the GCC cpp's
+     -Wunused-macros.  Normally we don't worry about that warning, but
+     some users do, and we want to make it easy for users to remove
+     YYFAIL uses, which will produce warnings from Bison 2.5.  */
+#endif
+
+#define YYRECOVERING()  (!!yyerrstatus)
+
+#define YYBACKUP(Token, Value)					\
+do								\
+  if (yychar == YYEMPTY && yylen == 1)				\
+    {								\
+      yychar = (Token);						\
+      yylval = (Value);						\
+      yytoken = YYTRANSLATE (yychar);				\
+      YYPOPSTACK (1);						\
+      goto yybackup;						\
+    }								\
+  else								\
+    {								\
+      yyerror (YY_("syntax error: cannot back up")); \
+      YYERROR;							\
+    }								\
+while (YYID (0))
+
+
+#define YYTERROR	1
+#define YYERRCODE	256
+
+
+/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
+   If N is 0, then set CURRENT to the empty location which ends
+   the previous symbol: RHS[0] (always defined).  */
+
+#define YYRHSLOC(Rhs, K) ((Rhs)[K])
+#ifndef YYLLOC_DEFAULT
+# define YYLLOC_DEFAULT(Current, Rhs, N)				\
+    do									\
+      if (YYID (N))                                                    \
+	{								\
+	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
+	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
+	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
+	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
+	}								\
+      else								\
+	{								\
+	  (Current).first_line   = (Current).last_line   =		\
+	    YYRHSLOC (Rhs, 0).last_line;				\
+	  (Current).first_column = (Current).last_column =		\
+	    YYRHSLOC (Rhs, 0).last_column;				\
+	}								\
+    while (YYID (0))
+#endif
+
+
+/* YY_LOCATION_PRINT -- Print the location on the stream.
+   This macro was not mandated originally: define only if we know
+   we won't break user code: when these are the locations we know.  */
+
+#ifndef YY_LOCATION_PRINT
+# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
+#  define YY_LOCATION_PRINT(File, Loc)			\
+     fprintf (File, "%d.%d-%d.%d",			\
+	      (Loc).first_line, (Loc).first_column,	\
+	      (Loc).last_line,  (Loc).last_column)
+# else
+#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# endif
+#endif
+
+
+/* YYLEX -- calling `yylex' with the right arguments.  */
+
+#ifdef YYLEX_PARAM
+# define YYLEX yylex (YYLEX_PARAM)
+#else
+# define YYLEX yylex ()
+#endif
+
+/* Enable debugging if requested.  */
+#if YYDEBUG
+
+# ifndef YYFPRINTF
+#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
+#  define YYFPRINTF fprintf
+# endif
+
+# define YYDPRINTF(Args)			\
+do {						\
+  if (yydebug)					\
+    YYFPRINTF Args;				\
+} while (YYID (0))
+
+# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
+do {									  \
+  if (yydebug)								  \
+    {									  \
+      YYFPRINTF (stderr, "%s ", Title);					  \
+      yy_symbol_print (stderr,						  \
+		  Type, Value); \
+      YYFPRINTF (stderr, "\n");						  \
+    }									  \
+} while (YYID (0))
+
+
+/*--------------------------------.
+| Print this symbol on YYOUTPUT.  |
+`--------------------------------*/
+
+/*ARGSUSED*/
+#if (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+static void
+yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)
+#else
+static void
+yy_symbol_value_print (yyoutput, yytype, yyvaluep)
+    FILE *yyoutput;
+    int yytype;
+    YYSTYPE const * const yyvaluep;
+#endif
+{
+  if (!yyvaluep)
+    return;
+# ifdef YYPRINT
+  if (yytype < YYNTOKENS)
+    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
+# else
+  YYUSE (yyoutput);
+# endif
+  switch (yytype)
+    {
+      default:
+	break;
+    }
+}
+
+
+/*--------------------------------.
+| Print this symbol on YYOUTPUT.  |
+`--------------------------------*/
+
+#if (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+static void
+yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)
+#else
+static void
+yy_symbol_print (yyoutput, yytype, yyvaluep)
+    FILE *yyoutput;
+    int yytype;
+    YYSTYPE const * const yyvaluep;
+#endif
+{
+  if (yytype < YYNTOKENS)
+    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
+  else
+    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);
+
+  yy_symbol_value_print (yyoutput, yytype, yyvaluep);
+  YYFPRINTF (yyoutput, ")");
+}
+
+/*------------------------------------------------------------------.
+| yy_stack_print -- Print the state stack from its BOTTOM up to its |
+| TOP (included).                                                   |
+`------------------------------------------------------------------*/
+
+#if (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+static void
+yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
+#else
+static void
+yy_stack_print (yybottom, yytop)
+    yytype_int16 *yybottom;
+    yytype_int16 *yytop;
+#endif
+{
+  YYFPRINTF (stderr, "Stack now");
+  for (; yybottom <= yytop; yybottom++)
+    {
+      int yybot = *yybottom;
+      YYFPRINTF (stderr, " %d", yybot);
+    }
+  YYFPRINTF (stderr, "\n");
+}
+
+# define YY_STACK_PRINT(Bottom, Top)				\
+do {								\
+  if (yydebug)							\
+    yy_stack_print ((Bottom), (Top));				\
+} while (YYID (0))
+
+
+/*------------------------------------------------.
+| Report that the YYRULE is going to be reduced.  |
+`------------------------------------------------*/
+
+#if (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+static void
+yy_reduce_print (YYSTYPE *yyvsp, int yyrule)
+#else
+static void
+yy_reduce_print (yyvsp, yyrule)
+    YYSTYPE *yyvsp;
+    int yyrule;
+#endif
+{
+  int yynrhs = yyr2[yyrule];
+  int yyi;
+  unsigned long int yylno = yyrline[yyrule];
+  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
+	     yyrule - 1, yylno);
+  /* The symbols being reduced.  */
+  for (yyi = 0; yyi < yynrhs; yyi++)
+    {
+      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
+      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
+		       &(yyvsp[(yyi + 1) - (yynrhs)])
+		       		       );
+      YYFPRINTF (stderr, "\n");
+    }
+}
+
+# define YY_REDUCE_PRINT(Rule)		\
+do {					\
+  if (yydebug)				\
+    yy_reduce_print (yyvsp, Rule); \
+} while (YYID (0))
+
+/* Nonzero means print parse trace.  It is left uninitialized so that
+   multiple parsers can coexist.  */
+int yydebug;
+#else /* !YYDEBUG */
+# define YYDPRINTF(Args)
+# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
+# define YY_STACK_PRINT(Bottom, Top)
+# define YY_REDUCE_PRINT(Rule)
+#endif /* !YYDEBUG */
+
+
+/* YYINITDEPTH -- initial size of the parser's stacks.  */
+#ifndef	YYINITDEPTH
+# define YYINITDEPTH 200
+#endif
+
+/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
+   if the built-in stack extension method is used).
+
+   Do not make this value too large; the results are undefined if
+   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
+   evaluated with infinite-precision integer arithmetic.  */
+
+#ifndef YYMAXDEPTH
+# define YYMAXDEPTH 10000
+#endif
+
+
+
+#if YYERROR_VERBOSE
+
+# ifndef yystrlen
+#  if defined __GLIBC__ && defined _STRING_H
+#   define yystrlen strlen
+#  else
+/* Return the length of YYSTR.  */
+#if (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+static YYSIZE_T
+yystrlen (const char *yystr)
+#else
+static YYSIZE_T
+yystrlen (yystr)
+    const char *yystr;
+#endif
+{
+  YYSIZE_T yylen;
+  for (yylen = 0; yystr[yylen]; yylen++)
+    continue;
+  return yylen;
+}
+#  endif
+# endif
+
+# ifndef yystpcpy
+#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
+#   define yystpcpy stpcpy
+#  else
+/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
+   YYDEST.  */
+#if (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+static char *
+yystpcpy (char *yydest, const char *yysrc)
+#else
+static char *
+yystpcpy (yydest, yysrc)
+    char *yydest;
+    const char *yysrc;
+#endif
+{
+  char *yyd = yydest;
+  const char *yys = yysrc;
+
+  while ((*yyd++ = *yys++) != '\0')
+    continue;
+
+  return yyd - 1;
+}
+#  endif
+# endif
+
+# ifndef yytnamerr
+/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
+   quotes and backslashes, so that it's suitable for yyerror.  The
+   heuristic is that double-quoting is unnecessary unless the string
+   contains an apostrophe, a comma, or backslash (other than
+   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
+   null, do not copy; instead, return the length of what the result
+   would have been.  */
+static YYSIZE_T
+yytnamerr (char *yyres, const char *yystr)
+{
+  if (*yystr == '"')
+    {
+      YYSIZE_T yyn = 0;
+      char const *yyp = yystr;
+
+      for (;;)
+	switch (*++yyp)
+	  {
+	  case '\'':
+	  case ',':
+	    goto do_not_strip_quotes;
+
+	  case '\\':
+	    if (*++yyp != '\\')
+	      goto do_not_strip_quotes;
+	    /* Fall through.  */
+	  default:
+	    if (yyres)
+	      yyres[yyn] = *yyp;
+	    yyn++;
+	    break;
+
+	  case '"':
+	    if (yyres)
+	      yyres[yyn] = '\0';
+	    return yyn;
+	  }
+    do_not_strip_quotes: ;
+    }
+
+  if (! yyres)
+    return yystrlen (yystr);
+
+  return yystpcpy (yyres, yystr) - yyres;
+}
+# endif
+
+/* Copy into YYRESULT an error message about the unexpected token
+   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
+   including the terminating null byte.  If YYRESULT is null, do not
+   copy anything; just return the number of bytes that would be
+   copied.  As a special case, return 0 if an ordinary "syntax error"
+   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
+   size calculation.  */
+static YYSIZE_T
+yysyntax_error (char *yyresult, int yystate, int yychar)
+{
+  int yyn = yypact[yystate];
+
+  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
+    return 0;
+  else
+    {
+      int yytype = YYTRANSLATE (yychar);
+      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
+      YYSIZE_T yysize = yysize0;
+      YYSIZE_T yysize1;
+      int yysize_overflow = 0;
+      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
+      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
+      int yyx;
+
+# if 0
+      /* This is so xgettext sees the translatable formats that are
+	 constructed on the fly.  */
+      YY_("syntax error, unexpected %s");
+      YY_("syntax error, unexpected %s, expecting %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
+# endif
+      char *yyfmt;
+      char const *yyf;
+      static char const yyunexpected[] = "syntax error, unexpected %s";
+      static char const yyexpecting[] = ", expecting %s";
+      static char const yyor[] = " or %s";
+      char yyformat[sizeof yyunexpected
+		    + sizeof yyexpecting - 1
+		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
+		       * (sizeof yyor - 1))];
+      char const *yyprefix = yyexpecting;
+
+      /* Start YYX at -YYN if negative to avoid negative indexes in
+	 YYCHECK.  */
+      int yyxbegin = yyn < 0 ? -yyn : 0;
+
+      /* Stay within bounds of both yycheck and yytname.  */
+      int yychecklim = YYLAST - yyn + 1;
+      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+      int yycount = 1;
+
+      yyarg[0] = yytname[yytype];
+      yyfmt = yystpcpy (yyformat, yyunexpected);
+
+      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
+	  {
+	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
+	      {
+		yycount = 1;
+		yysize = yysize0;
+		yyformat[sizeof yyunexpected - 1] = '\0';
+		break;
+	      }
+	    yyarg[yycount++] = yytname[yyx];
+	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
+	    yysize_overflow |= (yysize1 < yysize);
+	    yysize = yysize1;
+	    yyfmt = yystpcpy (yyfmt, yyprefix);
+	    yyprefix = yyor;
+	  }
+
+      yyf = YY_(yyformat);
+      yysize1 = yysize + yystrlen (yyf);
+      yysize_overflow |= (yysize1 < yysize);
+      yysize = yysize1;
+
+      if (yysize_overflow)
+	return YYSIZE_MAXIMUM;
+
+      if (yyresult)
+	{
+	  /* Avoid sprintf, as that infringes on the user's name space.
+	     Don't have undefined behavior even if the translation
+	     produced a string with the wrong number of "%s"s.  */
+	  char *yyp = yyresult;
+	  int yyi = 0;
+	  while ((*yyp = *yyf) != '\0')
+	    {
+	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
+		{
+		  yyp += yytnamerr (yyp, yyarg[yyi++]);
+		  yyf += 2;
+		}
+	      else
+		{
+		  yyp++;
+		  yyf++;
+		}
+	    }
+	}
+      return yysize;
+    }
+}
+#endif /* YYERROR_VERBOSE */
+
+
+/*-----------------------------------------------.
+| Release the memory associated to this symbol.  |
+`-----------------------------------------------*/
+
+/*ARGSUSED*/
+#if (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+static void
+yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)
+#else
+static void
+yydestruct (yymsg, yytype, yyvaluep)
+    const char *yymsg;
+    int yytype;
+    YYSTYPE *yyvaluep;
+#endif
+{
+  YYUSE (yyvaluep);
+
+  if (!yymsg)
+    yymsg = "Deleting";
+  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);
+
+  switch (yytype)
+    {
+      case 53: /* "choice_entry" */
+
+	{
+	fprintf(stderr, "%s:%d: missing end statement for this entry\n",
+		(yyvaluep->menu)->file->name, (yyvaluep->menu)->lineno);
+	if (current_menu == (yyvaluep->menu))
+		menu_end_menu();
+};
+
+	break;
+      case 59: /* "if_entry" */
+
+	{
+	fprintf(stderr, "%s:%d: missing end statement for this entry\n",
+		(yyvaluep->menu)->file->name, (yyvaluep->menu)->lineno);
+	if (current_menu == (yyvaluep->menu))
+		menu_end_menu();
+};
+
+	break;
+      case 65: /* "menu_entry" */
+
+	{
+	fprintf(stderr, "%s:%d: missing end statement for this entry\n",
+		(yyvaluep->menu)->file->name, (yyvaluep->menu)->lineno);
+	if (current_menu == (yyvaluep->menu))
+		menu_end_menu();
+};
+
+	break;
+
+      default:
+	break;
+    }
+}
+
+/* Prevent warnings from -Wmissing-prototypes.  */
+#ifdef YYPARSE_PARAM
+#if defined __STDC__ || defined __cplusplus
+int yyparse (void *YYPARSE_PARAM);
+#else
+int yyparse ();
+#endif
+#else /* ! YYPARSE_PARAM */
+#if defined __STDC__ || defined __cplusplus
+int yyparse (void);
+#else
+int yyparse ();
+#endif
+#endif /* ! YYPARSE_PARAM */
+
+
+/* The lookahead symbol.  */
+int yychar;
+
+/* The semantic value of the lookahead symbol.  */
+YYSTYPE yylval;
+
+/* Number of syntax errors so far.  */
+int yynerrs;
+
+
+
+/*-------------------------.
+| yyparse or yypush_parse.  |
+`-------------------------*/
+
+#ifdef YYPARSE_PARAM
+#if (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+int
+yyparse (void *YYPARSE_PARAM)
+#else
+int
+yyparse (YYPARSE_PARAM)
+    void *YYPARSE_PARAM;
+#endif
+#else /* ! YYPARSE_PARAM */
+#if (defined __STDC__ || defined __C99__FUNC__ \
+     || defined __cplusplus || defined _MSC_VER)
+int
+yyparse (void)
+#else
+int
+yyparse ()
+
+#endif
+#endif
+{
+
+
+    int yystate;
+    /* Number of tokens to shift before error messages enabled.  */
+    int yyerrstatus;
+
+    /* The stacks and their tools:
+       `yyss': related to states.
+       `yyvs': related to semantic values.
+
+       Refer to the stacks thru separate pointers, to allow yyoverflow
+       to reallocate them elsewhere.  */
+
+    /* The state stack.  */
+    yytype_int16 yyssa[YYINITDEPTH];
+    yytype_int16 *yyss;
+    yytype_int16 *yyssp;
+
+    /* The semantic value stack.  */
+    YYSTYPE yyvsa[YYINITDEPTH];
+    YYSTYPE *yyvs;
+    YYSTYPE *yyvsp;
+
+    YYSIZE_T yystacksize;
+
+  int yyn;
+  int yyresult;
+  /* Lookahead token as an internal (translated) token number.  */
+  int yytoken;
+  /* The variables used to return semantic value and location from the
+     action routines.  */
+  YYSTYPE yyval;
+
+#if YYERROR_VERBOSE
+  /* Buffer for error messages, and its allocated size.  */
+  char yymsgbuf[128];
+  char *yymsg = yymsgbuf;
+  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
+#endif
+
+#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))
+
+  /* The number of symbols on the RHS of the reduced rule.
+     Keep to zero when no symbol should be popped.  */
+  int yylen = 0;
+
+  yytoken = 0;
+  yyss = yyssa;
+  yyvs = yyvsa;
+  yystacksize = YYINITDEPTH;
+
+  YYDPRINTF ((stderr, "Starting parse\n"));
+
+  yystate = 0;
+  yyerrstatus = 0;
+  yynerrs = 0;
+  yychar = YYEMPTY; /* Cause a token to be read.  */
+
+  /* Initialize stack pointers.
+     Waste one element of value and location stack
+     so that they stay on the same level as the state stack.
+     The wasted elements are never initialized.  */
+  yyssp = yyss;
+  yyvsp = yyvs;
+
+  goto yysetstate;
+
+/*------------------------------------------------------------.
+| yynewstate -- Push a new state, which is found in yystate.  |
+`------------------------------------------------------------*/
+ yynewstate:
+  /* In all cases, when you get here, the value and location stacks
+     have just been pushed.  So pushing a state here evens the stacks.  */
+  yyssp++;
+
+ yysetstate:
+  *yyssp = yystate;
+
+  if (yyss + yystacksize - 1 <= yyssp)
+    {
+      /* Get the current used size of the three stacks, in elements.  */
+      YYSIZE_T yysize = yyssp - yyss + 1;
+
+#ifdef yyoverflow
+      {
+	/* Give user a chance to reallocate the stack.  Use copies of
+	   these so that the &'s don't force the real ones into
+	   memory.  */
+	YYSTYPE *yyvs1 = yyvs;
+	yytype_int16 *yyss1 = yyss;
+
+	/* Each stack pointer address is followed by the size of the
+	   data in use in that stack, in bytes.  This used to be a
+	   conditional around just the two extra args, but that might
+	   be undefined if yyoverflow is a macro.  */
+	yyoverflow (YY_("memory exhausted"),
+		    &yyss1, yysize * sizeof (*yyssp),
+		    &yyvs1, yysize * sizeof (*yyvsp),
+		    &yystacksize);
+
+	yyss = yyss1;
+	yyvs = yyvs1;
+      }
+#else /* no yyoverflow */
+# ifndef YYSTACK_RELOCATE
+      goto yyexhaustedlab;
+# else
+      /* Extend the stack our own way.  */
+      if (YYMAXDEPTH <= yystacksize)
+	goto yyexhaustedlab;
+      yystacksize *= 2;
+      if (YYMAXDEPTH < yystacksize)
+	yystacksize = YYMAXDEPTH;
+
+      {
+	yytype_int16 *yyss1 = yyss;
+	union yyalloc *yyptr =
+	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
+	if (! yyptr)
+	  goto yyexhaustedlab;
+	YYSTACK_RELOCATE (yyss_alloc, yyss);
+	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
+#  undef YYSTACK_RELOCATE
+	if (yyss1 != yyssa)
+	  YYSTACK_FREE (yyss1);
+      }
+# endif
+#endif /* no yyoverflow */
+
+      yyssp = yyss + yysize - 1;
+      yyvsp = yyvs + yysize - 1;
+
+      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
+		  (unsigned long int) yystacksize));
+
+      if (yyss + yystacksize - 1 <= yyssp)
+	YYABORT;
+    }
+
+  YYDPRINTF ((stderr, "Entering state %d\n", yystate));
+
+  if (yystate == YYFINAL)
+    YYACCEPT;
+
+  goto yybackup;
+
+/*-----------.
+| yybackup.  |
+`-----------*/
+yybackup:
+
+  /* Do appropriate processing given the current state.  Read a
+     lookahead token if we need one and don't already have one.  */
+
+  /* First try to decide what to do without reference to lookahead token.  */
+  yyn = yypact[yystate];
+  if (yyn == YYPACT_NINF)
+    goto yydefault;
+
+  /* Not known => get a lookahead token if don't already have one.  */
+
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
+  if (yychar == YYEMPTY)
+    {
+      YYDPRINTF ((stderr, "Reading a token: "));
+      yychar = YYLEX;
+    }
+
+  if (yychar <= YYEOF)
+    {
+      yychar = yytoken = YYEOF;
+      YYDPRINTF ((stderr, "Now at end of input.\n"));
+    }
+  else
+    {
+      yytoken = YYTRANSLATE (yychar);
+      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
+    }
+
+  /* If the proper action on seeing token YYTOKEN is to reduce or to
+     detect an error, take that action.  */
+  yyn += yytoken;
+  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
+    goto yydefault;
+  yyn = yytable[yyn];
+  if (yyn <= 0)
+    {
+      if (yyn == 0 || yyn == YYTABLE_NINF)
+	goto yyerrlab;
+      yyn = -yyn;
+      goto yyreduce;
+    }
+
+  /* Count tokens shifted since error; after three, turn off error
+     status.  */
+  if (yyerrstatus)
+    yyerrstatus--;
+
+  /* Shift the lookahead token.  */
+  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
+
+  /* Discard the shifted token.  */
+  yychar = YYEMPTY;
+
+  yystate = yyn;
+  *++yyvsp = yylval;
+
+  goto yynewstate;
+
+
+/*-----------------------------------------------------------.
+| yydefault -- do the default action for the current state.  |
+`-----------------------------------------------------------*/
+yydefault:
+  yyn = yydefact[yystate];
+  if (yyn == 0)
+    goto yyerrlab;
+  goto yyreduce;
+
+
+/*-----------------------------.
+| yyreduce -- Do a reduction.  |
+`-----------------------------*/
+yyreduce:
+  /* yyn is the number of a rule to reduce with.  */
+  yylen = yyr2[yyn];
+
+  /* If YYLEN is nonzero, implement the default value of the action:
+     `$$ = $1'.
+
+     Otherwise, the following line sets YYVAL to garbage.
+     This behavior is undocumented and Bison
+     users should not rely upon it.  Assigning to YYVAL
+     unconditionally makes the parser a bit smaller, and it avoids a
+     GCC warning that YYVAL may be used uninitialized.  */
+  yyval = yyvsp[1-yylen];
+
+
+  YY_REDUCE_PRINT (yyn);
+  switch (yyn)
+    {
+        case 10:
+
+    { zconf_error("unexpected end statement"); ;}
+    break;
+
+  case 11:
+
+    { zconf_error("unknown statement \"%s\"", (yyvsp[(2) - (4)].string)); ;}
+    break;
+
+  case 12:
+
+    {
+	zconf_error("unexpected option \"%s\"", kconf_id_strings + (yyvsp[(2) - (4)].id)->name);
+;}
+    break;
+
+  case 13:
+
+    { zconf_error("invalid statement"); ;}
+    break;
+
+  case 28:
+
+    { zconf_error("unknown option \"%s\"", (yyvsp[(1) - (3)].string)); ;}
+    break;
+
+  case 29:
+
+    { zconf_error("invalid option"); ;}
+    break;
+
+  case 30:
+
+    {
+	struct symbol *sym = sym_lookup((yyvsp[(2) - (3)].string), 0);
+	sym->flags |= SYMBOL_OPTIONAL;
+	menu_add_entry(sym);
+	printd(DEBUG_PARSE, "%s:%d:config %s\n", zconf_curname(), zconf_lineno(), (yyvsp[(2) - (3)].string));
+;}
+    break;
+
+  case 31:
+
+    {
+	menu_end_entry();
+	printd(DEBUG_PARSE, "%s:%d:endconfig\n", zconf_curname(), zconf_lineno());
+;}
+    break;
+
+  case 32:
+
+    {
+	struct symbol *sym = sym_lookup((yyvsp[(2) - (3)].string), 0);
+	sym->flags |= SYMBOL_OPTIONAL;
+	menu_add_entry(sym);
+	printd(DEBUG_PARSE, "%s:%d:menuconfig %s\n", zconf_curname(), zconf_lineno(), (yyvsp[(2) - (3)].string));
+;}
+    break;
+
+  case 33:
+
+    {
+	if (current_entry->prompt)
+		current_entry->prompt->type = P_MENU;
+	else
+		zconfprint("warning: menuconfig statement without prompt");
+	menu_end_entry();
+	printd(DEBUG_PARSE, "%s:%d:endconfig\n", zconf_curname(), zconf_lineno());
+;}
+    break;
+
+  case 41:
+
+    {
+	menu_set_type((yyvsp[(1) - (3)].id)->stype);
+	printd(DEBUG_PARSE, "%s:%d:type(%u)\n",
+		zconf_curname(), zconf_lineno(),
+		(yyvsp[(1) - (3)].id)->stype);
+;}
+    break;
+
+  case 42:
+
+    {
+	menu_add_prompt(P_PROMPT, (yyvsp[(2) - (4)].string), (yyvsp[(3) - (4)].expr));
+	printd(DEBUG_PARSE, "%s:%d:prompt\n", zconf_curname(), zconf_lineno());
+;}
+    break;
+
+  case 43:
+
+    {
+	menu_add_expr(P_DEFAULT, (yyvsp[(2) - (4)].expr), (yyvsp[(3) - (4)].expr));
+	if ((yyvsp[(1) - (4)].id)->stype != S_UNKNOWN)
+		menu_set_type((yyvsp[(1) - (4)].id)->stype);
+	printd(DEBUG_PARSE, "%s:%d:default(%u)\n",
+		zconf_curname(), zconf_lineno(),
+		(yyvsp[(1) - (4)].id)->stype);
+;}
+    break;
+
+  case 44:
+
+    {
+	menu_add_symbol(P_SELECT, sym_lookup((yyvsp[(2) - (4)].string), 0), (yyvsp[(3) - (4)].expr));
+	printd(DEBUG_PARSE, "%s:%d:select\n", zconf_curname(), zconf_lineno());
+;}
+    break;
+
+  case 45:
+
+    {
+	menu_add_expr(P_RANGE, expr_alloc_comp(E_RANGE,(yyvsp[(2) - (5)].symbol), (yyvsp[(3) - (5)].symbol)), (yyvsp[(4) - (5)].expr));
+	printd(DEBUG_PARSE, "%s:%d:range\n", zconf_curname(), zconf_lineno());
+;}
+    break;
+
+  case 48:
+
+    {
+	const struct kconf_id *id = kconf_id_lookup((yyvsp[(2) - (3)].string), strlen((yyvsp[(2) - (3)].string)));
+	if (id && id->flags & TF_OPTION)
+		menu_add_option(id->token, (yyvsp[(3) - (3)].string));
+	else
+		zconfprint("warning: ignoring unknown option %s", (yyvsp[(2) - (3)].string));
+	free((yyvsp[(2) - (3)].string));
+;}
+    break;
+
+  case 49:
+
+    { (yyval.string) = NULL; ;}
+    break;
+
+  case 50:
+
+    { (yyval.string) = (yyvsp[(2) - (2)].string); ;}
+    break;
+
+  case 51:
+
+    {
+	struct symbol *sym = sym_lookup((yyvsp[(2) - (3)].string), SYMBOL_CHOICE);
+	sym->flags |= SYMBOL_AUTO;
+	menu_add_entry(sym);
+	menu_add_expr(P_CHOICE, NULL, NULL);
+	printd(DEBUG_PARSE, "%s:%d:choice\n", zconf_curname(), zconf_lineno());
+;}
+    break;
+
+  case 52:
+
+    {
+	(yyval.menu) = menu_add_menu();
+;}
+    break;
+
+  case 53:
+
+    {
+	if (zconf_endtoken((yyvsp[(1) - (1)].id), T_CHOICE, T_ENDCHOICE)) {
+		menu_end_menu();
+		printd(DEBUG_PARSE, "%s:%d:endchoice\n", zconf_curname(), zconf_lineno());
+	}
+;}
+    break;
+
+  case 61:
+
+    {
+	menu_add_prompt(P_PROMPT, (yyvsp[(2) - (4)].string), (yyvsp[(3) - (4)].expr));
+	printd(DEBUG_PARSE, "%s:%d:prompt\n", zconf_curname(), zconf_lineno());
+;}
+    break;
+
+  case 62:
+
+    {
+	if ((yyvsp[(1) - (3)].id)->stype == S_BOOLEAN || (yyvsp[(1) - (3)].id)->stype == S_TRISTATE) {
+		menu_set_type((yyvsp[(1) - (3)].id)->stype);
+		printd(DEBUG_PARSE, "%s:%d:type(%u)\n",
+			zconf_curname(), zconf_lineno(),
+			(yyvsp[(1) - (3)].id)->stype);
+	} else
+		YYERROR;
+;}
+    break;
+
+  case 63:
+
+    {
+	current_entry->sym->flags |= SYMBOL_OPTIONAL;
+	printd(DEBUG_PARSE, "%s:%d:optional\n", zconf_curname(), zconf_lineno());
+;}
+    break;
+
+  case 64:
+
+    {
+	if ((yyvsp[(1) - (4)].id)->stype == S_UNKNOWN) {
+		menu_add_symbol(P_DEFAULT, sym_lookup((yyvsp[(2) - (4)].string), 0), (yyvsp[(3) - (4)].expr));
+		printd(DEBUG_PARSE, "%s:%d:default\n",
+			zconf_curname(), zconf_lineno());
+	} else
+		YYERROR;
+;}
+    break;
+
+  case 67:
+
+    {
+	printd(DEBUG_PARSE, "%s:%d:if\n", zconf_curname(), zconf_lineno());
+	menu_add_entry(NULL);
+	menu_add_dep((yyvsp[(2) - (3)].expr));
+	(yyval.menu) = menu_add_menu();
+;}
+    break;
+
+  case 68:
+
+    {
+	if (zconf_endtoken((yyvsp[(1) - (1)].id), T_IF, T_ENDIF)) {
+		menu_end_menu();
+		printd(DEBUG_PARSE, "%s:%d:endif\n", zconf_curname(), zconf_lineno());
+	}
+;}
+    break;
+
+  case 74:
+
+    {
+	menu_add_prompt(P_MENU, (yyvsp[(2) - (3)].string), NULL);
+;}
+    break;
+
+  case 75:
+
+    {
+	menu_add_entry(NULL);
+	menu_add_prompt(P_MENU, (yyvsp[(2) - (3)].string), NULL);
+	printd(DEBUG_PARSE, "%s:%d:menu\n", zconf_curname(), zconf_lineno());
+;}
+    break;
+
+  case 76:
+
+    {
+	(yyval.menu) = menu_add_menu();
+;}
+    break;
+
+  case 77:
+
+    {
+	if (zconf_endtoken((yyvsp[(1) - (1)].id), T_MENU, T_ENDMENU)) {
+		menu_end_menu();
+		printd(DEBUG_PARSE, "%s:%d:endmenu\n", zconf_curname(), zconf_lineno());
+	}
+;}
+    break;
+
+  case 83:
+
+    {
+	printd(DEBUG_PARSE, "%s:%d:source %s\n", zconf_curname(), zconf_lineno(), (yyvsp[(2) - (3)].string));
+	zconf_nextfile((yyvsp[(2) - (3)].string));
+;}
+    break;
+
+  case 84:
+
+    {
+	menu_add_entry(NULL);
+	menu_add_prompt(P_COMMENT, (yyvsp[(2) - (3)].string), NULL);
+	printd(DEBUG_PARSE, "%s:%d:comment\n", zconf_curname(), zconf_lineno());
+;}
+    break;
+
+  case 85:
+
+    {
+	menu_end_entry();
+;}
+    break;
+
+  case 86:
+
+    {
+	printd(DEBUG_PARSE, "%s:%d:help\n", zconf_curname(), zconf_lineno());
+	zconf_starthelp();
+;}
+    break;
+
+  case 87:
+
+    {
+	current_entry->help = (yyvsp[(2) - (2)].string);
+;}
+    break;
+
+  case 92:
+
+    {
+	menu_add_dep((yyvsp[(3) - (4)].expr));
+	printd(DEBUG_PARSE, "%s:%d:depends on\n", zconf_curname(), zconf_lineno());
+;}
+    break;
+
+  case 96:
+
+    {
+	menu_add_visibility((yyvsp[(2) - (2)].expr));
+;}
+    break;
+
+  case 98:
+
+    {
+	menu_add_prompt(P_PROMPT, (yyvsp[(1) - (2)].string), (yyvsp[(2) - (2)].expr));
+;}
+    break;
+
+  case 101:
+
+    { (yyval.id) = (yyvsp[(1) - (2)].id); ;}
+    break;
+
+  case 102:
+
+    { (yyval.id) = (yyvsp[(1) - (2)].id); ;}
+    break;
+
+  case 103:
+
+    { (yyval.id) = (yyvsp[(1) - (2)].id); ;}
+    break;
+
+  case 106:
+
+    { (yyval.expr) = NULL; ;}
+    break;
+
+  case 107:
+
+    { (yyval.expr) = (yyvsp[(2) - (2)].expr); ;}
+    break;
+
+  case 108:
+
+    { (yyval.expr) = expr_alloc_symbol((yyvsp[(1) - (1)].symbol)); ;}
+    break;
+
+  case 109:
+
+    { (yyval.expr) = expr_alloc_comp(E_EQUAL, (yyvsp[(1) - (3)].symbol), (yyvsp[(3) - (3)].symbol)); ;}
+    break;
+
+  case 110:
+
+    { (yyval.expr) = expr_alloc_comp(E_UNEQUAL, (yyvsp[(1) - (3)].symbol), (yyvsp[(3) - (3)].symbol)); ;}
+    break;
+
+  case 111:
+
+    { (yyval.expr) = (yyvsp[(2) - (3)].expr); ;}
+    break;
+
+  case 112:
+
+    { (yyval.expr) = expr_alloc_one(E_NOT, (yyvsp[(2) - (2)].expr)); ;}
+    break;
+
+  case 113:
+
+    { (yyval.expr) = expr_alloc_two(E_OR, (yyvsp[(1) - (3)].expr), (yyvsp[(3) - (3)].expr)); ;}
+    break;
+
+  case 114:
+
+    { (yyval.expr) = expr_alloc_two(E_AND, (yyvsp[(1) - (3)].expr), (yyvsp[(3) - (3)].expr)); ;}
+    break;
+
+  case 115:
+
+    { (yyval.symbol) = sym_lookup((yyvsp[(1) - (1)].string), 0); free((yyvsp[(1) - (1)].string)); ;}
+    break;
+
+  case 116:
+
+    { (yyval.symbol) = sym_lookup((yyvsp[(1) - (1)].string), SYMBOL_CONST); free((yyvsp[(1) - (1)].string)); ;}
+    break;
+
+  case 117:
+
+    { (yyval.string) = NULL; ;}
+    break;
+
+
+
+      default: break;
+    }
+  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
+
+  YYPOPSTACK (yylen);
+  yylen = 0;
+  YY_STACK_PRINT (yyss, yyssp);
+
+  *++yyvsp = yyval;
+
+  /* Now `shift' the result of the reduction.  Determine what state
+     that goes to, based on the state we popped back to and the rule
+     number reduced by.  */
+
+  yyn = yyr1[yyn];
+
+  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
+  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
+    yystate = yytable[yystate];
+  else
+    yystate = yydefgoto[yyn - YYNTOKENS];
+
+  goto yynewstate;
+
+
+/*------------------------------------.
+| yyerrlab -- here on detecting error |
+`------------------------------------*/
+yyerrlab:
+  /* If not already recovering from an error, report this error.  */
+  if (!yyerrstatus)
+    {
+      ++yynerrs;
+#if ! YYERROR_VERBOSE
+      yyerror (YY_("syntax error"));
+#else
+      {
+	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
+	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
+	  {
+	    YYSIZE_T yyalloc = 2 * yysize;
+	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
+	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
+	    if (yymsg != yymsgbuf)
+	      YYSTACK_FREE (yymsg);
+	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
+	    if (yymsg)
+	      yymsg_alloc = yyalloc;
+	    else
+	      {
+		yymsg = yymsgbuf;
+		yymsg_alloc = sizeof yymsgbuf;
+	      }
+	  }
+
+	if (0 < yysize && yysize <= yymsg_alloc)
+	  {
+	    (void) yysyntax_error (yymsg, yystate, yychar);
+	    yyerror (yymsg);
+	  }
+	else
+	  {
+	    yyerror (YY_("syntax error"));
+	    if (yysize != 0)
+	      goto yyexhaustedlab;
+	  }
+      }
+#endif
+    }
+
+
+
+  if (yyerrstatus == 3)
+    {
+      /* If just tried and failed to reuse lookahead token after an
+	 error, discard it.  */
+
+      if (yychar <= YYEOF)
+	{
+	  /* Return failure if at end of input.  */
+	  if (yychar == YYEOF)
+	    YYABORT;
+	}
+      else
+	{
+	  yydestruct ("Error: discarding",
+		      yytoken, &yylval);
+	  yychar = YYEMPTY;
+	}
+    }
+
+  /* Else will try to reuse lookahead token after shifting the error
+     token.  */
+  goto yyerrlab1;
+
+
+/*---------------------------------------------------.
+| yyerrorlab -- error raised explicitly by YYERROR.  |
+`---------------------------------------------------*/
+yyerrorlab:
+
+  /* Pacify compilers like GCC when the user code never invokes
+     YYERROR and the label yyerrorlab therefore never appears in user
+     code.  */
+  if (/*CONSTCOND*/ 0)
+     goto yyerrorlab;
+
+  /* Do not reclaim the symbols of the rule which action triggered
+     this YYERROR.  */
+  YYPOPSTACK (yylen);
+  yylen = 0;
+  YY_STACK_PRINT (yyss, yyssp);
+  yystate = *yyssp;
+  goto yyerrlab1;
+
+
+/*-------------------------------------------------------------.
+| yyerrlab1 -- common code for both syntax error and YYERROR.  |
+`-------------------------------------------------------------*/
+yyerrlab1:
+  yyerrstatus = 3;	/* Each real token shifted decrements this.  */
+
+  for (;;)
+    {
+      yyn = yypact[yystate];
+      if (yyn != YYPACT_NINF)
+	{
+	  yyn += YYTERROR;
+	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
+	    {
+	      yyn = yytable[yyn];
+	      if (0 < yyn)
+		break;
+	    }
+	}
+
+      /* Pop the current state because it cannot handle the error token.  */
+      if (yyssp == yyss)
+	YYABORT;
+
+
+      yydestruct ("Error: popping",
+		  yystos[yystate], yyvsp);
+      YYPOPSTACK (1);
+      yystate = *yyssp;
+      YY_STACK_PRINT (yyss, yyssp);
+    }
+
+  *++yyvsp = yylval;
+
+
+  /* Shift the error token.  */
+  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);
+
+  yystate = yyn;
+  goto yynewstate;
+
+
+/*-------------------------------------.
+| yyacceptlab -- YYACCEPT comes here.  |
+`-------------------------------------*/
+yyacceptlab:
+  yyresult = 0;
+  goto yyreturn;
+
+/*-----------------------------------.
+| yyabortlab -- YYABORT comes here.  |
+`-----------------------------------*/
+yyabortlab:
+  yyresult = 1;
+  goto yyreturn;
+
+#if !defined(yyoverflow) || YYERROR_VERBOSE
+/*-------------------------------------------------.
+| yyexhaustedlab -- memory exhaustion comes here.  |
+`-------------------------------------------------*/
+yyexhaustedlab:
+  yyerror (YY_("memory exhausted"));
+  yyresult = 2;
+  /* Fall through.  */
+#endif
+
+yyreturn:
+  if (yychar != YYEMPTY)
+     yydestruct ("Cleanup: discarding lookahead",
+		 yytoken, &yylval);
+  /* Do not reclaim the symbols of the rule which action triggered
+     this YYABORT or YYACCEPT.  */
+  YYPOPSTACK (yylen);
+  YY_STACK_PRINT (yyss, yyssp);
+  while (yyssp != yyss)
+    {
+      yydestruct ("Cleanup: popping",
+		  yystos[*yyssp], yyvsp);
+      YYPOPSTACK (1);
+    }
+#ifndef yyoverflow
+  if (yyss != yyssa)
+    YYSTACK_FREE (yyss);
+#endif
+#if YYERROR_VERBOSE
+  if (yymsg != yymsgbuf)
+    YYSTACK_FREE (yymsg);
+#endif
+  /* Make sure YYID is used.  */
+  return YYID (yyresult);
+}
+
+
+
+
+
+void conf_parse(const char *name)
+{
+	struct symbol *sym;
+	int i;
+
+	zconf_initscan(name);
+
+	sym_init();
+	_menu_init();
+	modules_sym = sym_lookup(NULL, 0);
+	modules_sym->type = S_BOOLEAN;
+	modules_sym->flags |= SYMBOL_AUTO;
+	rootmenu.prompt = menu_add_prompt(P_MENU, "Linux Kernel Configuration", NULL);
+
+	if (getenv("ZCONF_DEBUG"))
+		zconfdebug = 1;
+	zconfparse();
+	if (zconfnerrs)
+		exit(1);
+	if (!modules_sym->prop) {
+		struct property *prop;
+
+		prop = prop_alloc(P_DEFAULT, modules_sym);
+		prop->expr = expr_alloc_symbol(sym_lookup("MODULES", 0));
+	}
+
+	rootmenu.prompt->text = _(rootmenu.prompt->text);
+	rootmenu.prompt->text = sym_expand_string_value(rootmenu.prompt->text);
+
+	menu_finalize(&rootmenu);
+	for_all_symbols(i, sym) {
+		if (sym_check_deps(sym))
+			zconfnerrs++;
+        }
+	if (zconfnerrs)
+		exit(1);
+	sym_set_change_count(1);
+}
+
+static const char *zconf_tokenname(int token)
+{
+	switch (token) {
+	case T_MENU:		return "menu";
+	case T_ENDMENU:		return "endmenu";
+	case T_CHOICE:		return "choice";
+	case T_ENDCHOICE:	return "endchoice";
+	case T_IF:		return "if";
+	case T_ENDIF:		return "endif";
+	case T_DEPENDS:		return "depends";
+	case T_VISIBLE:		return "visible";
+	}
+	return "<token>";
+}
+
+static bool zconf_endtoken(const struct kconf_id *id, int starttoken, int endtoken)
+{
+	if (id->token != endtoken) {
+		zconf_error("unexpected '%s' within %s block",
+			kconf_id_strings + id->name, zconf_tokenname(starttoken));
+		zconfnerrs++;
+		return false;
+	}
+	if (current_menu->file != current_file) {
+		zconf_error("'%s' in different file than '%s'",
+			kconf_id_strings + id->name, zconf_tokenname(starttoken));
+		fprintf(stderr, "%s:%d: location of the '%s'\n",
+			current_menu->file->name, current_menu->lineno,
+			zconf_tokenname(starttoken));
+		zconfnerrs++;
+		return false;
+	}
+	return true;
+}
+
+static void zconfprint(const char *err, ...)
+{
+	va_list ap;
+
+	fprintf(stderr, "%s:%d: ", zconf_curname(), zconf_lineno());
+	va_start(ap, err);
+	vfprintf(stderr, err, ap);
+	va_end(ap);
+	fprintf(stderr, "\n");
+}
+
+static void zconf_error(const char *err, ...)
+{
+	va_list ap;
+
+	zconfnerrs++;
+	fprintf(stderr, "%s:%d: ", zconf_curname(), zconf_lineno());
+	va_start(ap, err);
+	vfprintf(stderr, err, ap);
+	va_end(ap);
+	fprintf(stderr, "\n");
+}
+
+static void zconferror(const char *err)
+{
+	fprintf(stderr, "%s:%d: %s\n", zconf_curname(), zconf_lineno() + 1, err);
+}
+
+static void print_quoted_string(FILE *out, const char *str)
+{
+	const char *p;
+	int len;
+
+	putc('"', out);
+	while ((p = strchr(str, '"'))) {
+		len = p - str;
+		if (len)
+			fprintf(out, "%.*s", len, str);
+		fputs("\\\"", out);
+		str = p + 1;
+	}
+	fputs(str, out);
+	putc('"', out);
+}
+
+static void print_symbol(FILE *out, struct menu *menu)
+{
+	struct symbol *sym = menu->sym;
+	struct property *prop;
+
+	if (sym_is_choice(sym))
+		fprintf(out, "\nchoice\n");
+	else
+		fprintf(out, "\nconfig %s\n", sym->name);
+	switch (sym->type) {
+	case S_BOOLEAN:
+		fputs("  boolean\n", out);
+		break;
+	case S_TRISTATE:
+		fputs("  tristate\n", out);
+		break;
+	case S_STRING:
+		fputs("  string\n", out);
+		break;
+	case S_INT:
+		fputs("  integer\n", out);
+		break;
+	case S_HEX:
+		fputs("  hex\n", out);
+		break;
+	default:
+		fputs("  ???\n", out);
+		break;
+	}
+	for (prop = sym->prop; prop; prop = prop->next) {
+		if (prop->menu != menu)
+			continue;
+		switch (prop->type) {
+		case P_PROMPT:
+			fputs("  prompt ", out);
+			print_quoted_string(out, prop->text);
+			if (!expr_is_yes(prop->visible.expr)) {
+				fputs(" if ", out);
+				expr_fprint(prop->visible.expr, out);
+			}
+			fputc('\n', out);
+			break;
+		case P_DEFAULT:
+			fputs( "  default ", out);
+			expr_fprint(prop->expr, out);
+			if (!expr_is_yes(prop->visible.expr)) {
+				fputs(" if ", out);
+				expr_fprint(prop->visible.expr, out);
+			}
+			fputc('\n', out);
+			break;
+		case P_CHOICE:
+			fputs("  #choice value\n", out);
+			break;
+		case P_SELECT:
+			fputs( "  select ", out);
+			expr_fprint(prop->expr, out);
+			fputc('\n', out);
+			break;
+		case P_RANGE:
+			fputs( "  range ", out);
+			expr_fprint(prop->expr, out);
+			fputc('\n', out);
+			break;
+		case P_MENU:
+			fputs( "  menu ", out);
+			print_quoted_string(out, prop->text);
+			fputc('\n', out);
+			break;
+		default:
+			fprintf(out, "  unknown prop %d!\n", prop->type);
+			break;
+		}
+	}
+	if (menu->help) {
+		int len = strlen(menu->help);
+		while (menu->help[--len] == '\n')
+			menu->help[len] = 0;
+		fprintf(out, "  help\n%s\n", menu->help);
+	}
+}
+
+void zconfdump(FILE *out)
+{
+	struct property *prop;
+	struct symbol *sym;
+	struct menu *menu;
+
+	menu = rootmenu.list;
+	while (menu) {
+		if ((sym = menu->sym))
+			print_symbol(out, menu);
+		else if ((prop = menu->prompt)) {
+			switch (prop->type) {
+			case P_COMMENT:
+				fputs("\ncomment ", out);
+				print_quoted_string(out, prop->text);
+				fputs("\n", out);
+				break;
+			case P_MENU:
+				fputs("\nmenu ", out);
+				print_quoted_string(out, prop->text);
+				fputs("\n", out);
+				break;
+			default:
+				;
+			}
+			if (!expr_is_yes(prop->visible.expr)) {
+				fputs("  depends ", out);
+				expr_fprint(prop->visible.expr, out);
+				fputc('\n', out);
+			}
+		}
+
+		if (menu->list)
+			menu = menu->list;
+		else if (menu->next)
+			menu = menu->next;
+		else while ((menu = menu->parent)) {
+			if (menu->prompt && menu->prompt->type == P_MENU)
+				fputs("\nendmenu\n", out);
+			if (menu->next) {
+				menu = menu->next;
+				break;
+			}
+		}
+	}
+}
+
+#include "zconf.lex.c"
+#include "util.c"
+#include "confdata.c"
+#include "expr.c"
+#include "symbol.c"
+#include "menu.c"
+
diff -uprN ../linux-3.4.104-vanilla/scripts/mod/elfconfig.h linux-3.4.104-syssec_hw2_app2/scripts/mod/elfconfig.h
--- ../linux-3.4.104-vanilla/scripts/mod/elfconfig.h	1969-12-31 19:00:00.000000000 -0500
+++ linux-3.4.104-syssec_hw2_app2/scripts/mod/elfconfig.h	2014-11-09 05:26:05.000000000 -0500
@@ -0,0 +1,4 @@
+#define KERNEL_ELFCLASS ELFCLASS32
+#define KERNEL_ELFDATA ELFDATA2LSB
+#define HOST_ELFCLASS ELFCLASS32
+#define HOST_ELFDATA ELFDATA2LSB
Binary files ../linux-3.4.104-vanilla/scripts/mod/mk_elfconfig and linux-3.4.104-syssec_hw2_app2/scripts/mod/mk_elfconfig differ
Binary files ../linux-3.4.104-vanilla/scripts/mod/modpost and linux-3.4.104-syssec_hw2_app2/scripts/mod/modpost differ
Binary files ../linux-3.4.104-vanilla/scripts/selinux/genheaders/genheaders and linux-3.4.104-syssec_hw2_app2/scripts/selinux/genheaders/genheaders differ
Binary files ../linux-3.4.104-vanilla/scripts/selinux/mdp/mdp and linux-3.4.104-syssec_hw2_app2/scripts/selinux/mdp/mdp differ
diff -uprN ../linux-3.4.104-vanilla/security/tomoyo/builtin-policy.h linux-3.4.104-syssec_hw2_app2/security/tomoyo/builtin-policy.h
--- ../linux-3.4.104-vanilla/security/tomoyo/builtin-policy.h	1969-12-31 19:00:00.000000000 -0500
+++ linux-3.4.104-syssec_hw2_app2/security/tomoyo/builtin-policy.h	2014-11-05 20:54:06.000000000 -0500
@@ -0,0 +1,12 @@
+static char tomoyo_builtin_profile[] __initdata =
+"";
+static char tomoyo_builtin_exception_policy[] __initdata =
+"initialize_domain /sbin/modprobe from any\n"
+"initialize_domain /sbin/hotplug from any\n"
+"";
+static char tomoyo_builtin_domain_policy[] __initdata =
+"";
+static char tomoyo_builtin_manager[] __initdata =
+"";
+static char tomoyo_builtin_stat[] __initdata =
+"";
diff -uprN ../linux-3.4.104-vanilla/security/tomoyo/policy/exception_policy.conf linux-3.4.104-syssec_hw2_app2/security/tomoyo/policy/exception_policy.conf
--- ../linux-3.4.104-vanilla/security/tomoyo/policy/exception_policy.conf	1969-12-31 19:00:00.000000000 -0500
+++ linux-3.4.104-syssec_hw2_app2/security/tomoyo/policy/exception_policy.conf	2014-11-05 20:53:42.000000000 -0500
@@ -0,0 +1,2 @@
+initialize_domain /sbin/modprobe from any
+initialize_domain /sbin/hotplug from any
